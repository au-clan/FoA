{
    "900": {
        "input": "4 5 6 10",
        "step_1": {
            "steps": [
                "10 - 6 = 4 (left: 4 5 4)",
                "6 * 5 = 30 (left: 4 30 10)",
                "4 + 5 = 9 (left: 6 9 10)",
                "4 + 5 = 9 (left: 6 9 10)",
                "5 + 6 = 11 (left: 4 11 10)"
            ],
            "values": [
                41.0,
                41.0,
                22.0,
                2.0,
                2.001
            ],
            "resampled": [
                "0 <- 1",
                "1 <- 3",
                "2 <- 0",
                "3 <- 2",
                "4 <- 0"
            ],
            "resampled_steps": [
                "6 * 5 = 30 (left: 4 30 10)",
                "4 + 5 = 9 (left: 6 9 10)",
                "10 - 6 = 4 (left: 4 5 4)",
                "4 + 5 = 9 (left: 6 9 10)",
                "10 - 6 = 4 (left: 4 5 4)"
            ]
        },
        "step_2": {
            "steps": [
                "6 * 5 = 30 (left: 4 30 10)\n30 / 10 = 3 (left: 4 3)",
                "4 + 5 = 9 (left: 6 9 10)\n10 / 6 = 1.6667 (left: 1.6667 9)",
                "10 - 6 = 4 (left: 4 5 4)\n4 * 5 = 20 (left: 20 4)",
                "4 + 5 = 9 (left: 6 9 10)\n9 * 10 = 90 (left: 6 90)",
                "10 - 6 = 4 (left: 4 5 4)\n4 * 5 = 20 (left: 20 4)"
            ],
            "values": [
                2.0,
                1.001,
                21.0,
                2.001,
                60.0
            ],
            "resampled": [
                "0 <- 2",
                "1 <- 4",
                "2 <- 4",
                "3 <- 2",
                "4 <- 2"
            ],
            "resampled_steps": [
                "10 - 6 = 4 (left: 4 5 4)\n4 * 5 = 20 (left: 20 4)",
                "10 - 6 = 4 (left: 4 5 4)\n4 * 5 = 20 (left: 20 4)",
                "10 - 6 = 4 (left: 4 5 4)\n4 * 5 = 20 (left: 20 4)",
                "10 - 6 = 4 (left: 4 5 4)\n4 * 5 = 20 (left: 20 4)",
                "10 - 6 = 4 (left: 4 5 4)\n4 * 5 = 20 (left: 20 4)"
            ]
        },
        "step_3": {
            "steps": [
                "10 - 6 = 4 (left: 4 5 4)\n4 * 5 = 20 (left: 20 4)\n20 * 4 = 80 (left: 80)",
                "10 - 6 = 4 (left: 4 5 4)\n4 * 5 = 20 (left: 20 4)\n20 - 4 = 16 (left: 4 16)",
                "10 - 6 = 4 (left: 4 5 4)\n4 * 5 = 20 (left: 20 4)\n20 / 4 = 5 (left: 5)",
                "10 - 6 = 4 (left: 4 5 4)\n4 * 5 = 20 (left: 20 4)\n20 / 4 = 5 (left: 5)",
                "10 - 6 = 4 (left: 4 5 4)\n4 * 5 = 20 (left: 20 4)\n20 + 4 = 24 (left: 24)"
            ],
            "values": [
                0.001,
                0.003,
                0.002,
                0.003,
                40.0
            ],
            "resampled": [
                "0 <- 4",
                "1 <- 4",
                "2 <- 4",
                "3 <- 4",
                "4 <- 4"
            ],
            "resampled_steps": [
                "10 - 6 = 4 (left: 4 5 4)\n4 * 5 = 20 (left: 20 4)\n20 + 4 = 24 (left: 24)",
                "10 - 6 = 4 (left: 4 5 4)\n4 * 5 = 20 (left: 20 4)\n20 + 4 = 24 (left: 24)",
                "10 - 6 = 4 (left: 4 5 4)\n4 * 5 = 20 (left: 20 4)\n20 + 4 = 24 (left: 24)",
                "10 - 6 = 4 (left: 4 5 4)\n4 * 5 = 20 (left: 20 4)\n20 + 4 = 24 (left: 24)",
                "10 - 6 = 4 (left: 4 5 4)\n4 * 5 = 20 (left: 20 4)\n20 + 4 = 24 (left: 24)"
            ]
        },
        "step_4": {
            "steps": [
                "10 - 6 = 4 (left: 4 5 4)\n4 * 5 = 20 (left: 20 4)\n20 + 4 = 24 (left: 24)\nAnswer: (10 - 6) * 5 + 4 = 24",
                "10 - 6 = 4 (left: 4 5 4)\n4 * 5 = 20 (left: 20 4)\n20 + 4 = 24 (left: 24)\nAnswer: ((10 - 6) * 5) + 4 = 24",
                "10 - 6 = 4 (left: 4 5 4)\n4 * 5 = 20 (left: 20 4)\n20 + 4 = 24 (left: 24)\nAnswer: (10 - 6) * 5 + 4 = 24",
                "10 - 6 = 4 (left: 4 5 4)\n4 * 5 = 20 (left: 20 4)\n20 + 4 = 24 (left: 24)\nAnswer: ((10 - 6) * 5) + 4 = 24",
                "10 - 6 = 4 (left: 4 5 4)\n4 * 5 = 20 (left: 20 4)\n20 + 4 = 24 (left: 24)\nAnswer: ((10 - 6) * 5) + 4 = 24"
            ],
            "values": [
                60.0,
                60.0,
                60.0,
                60.0,
                60.0
            ]
        },
        "results": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            }
        ],
        "cost": 0.017322
    },
    "901": {
        "input": "1 2 4 7",
        "step_1": {
            "steps": [
                "2 * 4 = 8 (left: 1 8 7)",
                "1 + 2 = 3 (left: 3 4 7)",
                "1 * 2 = 2 (left: 2 4 7)",
                "7 - 1 = 6 (left: 2 4 6)",
                "2 * 4 = 8 (left: 1 8 7)"
            ],
            "values": [
                0.003,
                0.003,
                2.001,
                0.003,
                1.002
            ],
            "resampled": [
                "0 <- 2",
                "1 <- 2",
                "2 <- 4",
                "3 <- 2",
                "4 <- 4"
            ],
            "resampled_steps": [
                "1 * 2 = 2 (left: 2 4 7)",
                "1 * 2 = 2 (left: 2 4 7)",
                "2 * 4 = 8 (left: 1 8 7)",
                "1 * 2 = 2 (left: 2 4 7)",
                "2 * 4 = 8 (left: 1 8 7)"
            ]
        },
        "step_2": {
            "steps": [
                "1 * 2 = 2 (left: 2 4 7)\n2 + 4 = 6 (left: 6 7)",
                "1 * 2 = 2 (left: 2 4 7)\n2 * 4 = 8 (left: 8 7)",
                "2 * 4 = 8 (left: 1 8 7)\n8 - 7 = 1 (left: 1)",
                "1 * 2 = 2 (left: 2 4 7)\n7 / 4 = 1.75 (left: 2 1.75)",
                "2 * 4 = 8 (left: 1 8 7)\n1 * 8 = 8 (left: 8 8)"
            ],
            "values": [
                0.003,
                0.003,
                0.003,
                1.001,
                0.003
            ],
            "resampled": [
                "0 <- 3",
                "1 <- 3",
                "2 <- 3",
                "3 <- 3",
                "4 <- 3"
            ],
            "resampled_steps": [
                "1 * 2 = 2 (left: 2 4 7)\n7 / 4 = 1.75 (left: 2 1.75)",
                "1 * 2 = 2 (left: 2 4 7)\n7 / 4 = 1.75 (left: 2 1.75)",
                "1 * 2 = 2 (left: 2 4 7)\n7 / 4 = 1.75 (left: 2 1.75)",
                "1 * 2 = 2 (left: 2 4 7)\n7 / 4 = 1.75 (left: 2 1.75)",
                "1 * 2 = 2 (left: 2 4 7)\n7 / 4 = 1.75 (left: 2 1.75)"
            ]
        },
        "step_3": {
            "steps": [
                "1 * 2 = 2 (left: 2 4 7)\n7 / 4 = 1.75 (left: 2 1.75)\n2 / 1.75 = 1.14285714286 (left: 1.14285714286)",
                "1 * 2 = 2 (left: 2 4 7)\n7 / 4 = 1.75 (left: 2 1.75)\n2 + 1.75 = 3.75 (left: 1.75 3.75)",
                "1 * 2 = 2 (left: 2 4 7)\n7 / 4 = 1.75 (left: 2 1.75)\n2 / 1.75 = 1.14 (left: 1.14)",
                "1 * 2 = 2 (left: 2 4 7)\n7 / 4 = 1.75 (left: 2 1.75)\n2 * 1.75 = 3.5 (left: 3.5)",
                "1 * 2 = 2 (left: 2 4 7)\n7 / 4 = 1.75 (left: 2 1.75)\n2 * 1.75 = 3.5 (left: 3.5)"
            ],
            "values": [
                0.001,
                3.0,
                0.001,
                0.002,
                0.002
            ],
            "resampled": [
                "0 <- 1",
                "1 <- 1",
                "2 <- 1",
                "3 <- 1",
                "4 <- 1"
            ],
            "resampled_steps": [
                "1 * 2 = 2 (left: 2 4 7)\n7 / 4 = 1.75 (left: 2 1.75)\n2 + 1.75 = 3.75 (left: 1.75 3.75)",
                "1 * 2 = 2 (left: 2 4 7)\n7 / 4 = 1.75 (left: 2 1.75)\n2 + 1.75 = 3.75 (left: 1.75 3.75)",
                "1 * 2 = 2 (left: 2 4 7)\n7 / 4 = 1.75 (left: 2 1.75)\n2 + 1.75 = 3.75 (left: 1.75 3.75)",
                "1 * 2 = 2 (left: 2 4 7)\n7 / 4 = 1.75 (left: 2 1.75)\n2 + 1.75 = 3.75 (left: 1.75 3.75)",
                "1 * 2 = 2 (left: 2 4 7)\n7 / 4 = 1.75 (left: 2 1.75)\n2 + 1.75 = 3.75 (left: 1.75 3.75)"
            ]
        },
        "step_4": {
            "steps": [
                "1 * 2 = 2 (left: 2 4 7)\n7 / 4 = 1.75 (left: 2 1.75)\n2 + 1.75 = 3.75 (left: 1.75 3.75)\n1.75 + 3.75 = 5.5 (left: 5.5)",
                "1 * 2 = 2 (left: 2 4 7)\n7 / 4 = 1.75 (left: 2 1.75)\n2 + 1.75 = 3.75 (left: 1.75 3.75)\n1.75 + 3.75 = 5.5 (left: 5.5)",
                "1 * 2 = 2 (left: 2 4 7)\n7 / 4 = 1.75 (left: 2 1.75)\n2 + 1.75 = 3.75 (left: 1.75 3.75)\n1.75 + 3.75 = 5.5 (left: 5.5)",
                "1 * 2 = 2 (left: 2 4 7)\n7 / 4 = 1.75 (left: 2 1.75)\n2 + 1.75 = 3.75 (left: 1.75 3.75)\n1.75 + 3.75 = 5.5 (left: 5.5)",
                "1 * 2 = 2 (left: 2 4 7)\n7 / 4 = 1.75 (left: 2 1.75)\n2 + 1.75 = 3.75 (left: 1.75 3.75)\n1.75 + 3.75 = 5.5 (left: 5.5)"
            ],
            "values": [
                0.003,
                0.003,
                0.003,
                0.002,
                0.003
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 0.034181
    },
    "902": {
        "input": "2 5 8 11",
        "step_1": {
            "steps": [
                "5 * 8 = 40 (left: 2 40 11)",
                "2 + 5 = 7 (left: 7 8 11)",
                "11 - 2 = 9 (left: 5 8 9)",
                "5 * 8 = 40 (left: 2 40 11)",
                "5 * 8 = 40 (left: 2 40 11)"
            ],
            "values": [
                1.002,
                2.0,
                3.0,
                1.002,
                1.002
            ],
            "resampled": [
                "0 <- 0",
                "1 <- 2",
                "2 <- 1",
                "3 <- 0",
                "4 <- 2"
            ],
            "resampled_steps": [
                "5 * 8 = 40 (left: 2 40 11)",
                "11 - 2 = 9 (left: 5 8 9)",
                "2 + 5 = 7 (left: 7 8 11)",
                "5 * 8 = 40 (left: 2 40 11)",
                "11 - 2 = 9 (left: 5 8 9)"
            ]
        },
        "step_2": {
            "steps": [
                "5 * 8 = 40 (left: 2 40 11)\n5 * 25 = 125 (left: 6 125)",
                "11 - 2 = 9 (left: 5 8 9)\n9 + 8 = 17 (left: 5 17)",
                "2 + 5 = 7 (left: 7 8 11)\n11 / 7 = 1.57 (left: 1.57 8)",
                "5 * 8 = 40 (left: 2 40 11)\n40 - 11 = 29 (left: 2 29)",
                "11 - 2 = 9 (left: 5 8 9)\n5 * 8 = 40 (left: 40 9)"
            ],
            "values": [
                0.003,
                2.001,
                1.001,
                0.003,
                1.002
            ],
            "resampled": [
                "0 <- 2",
                "1 <- 4",
                "2 <- 1",
                "3 <- 1",
                "4 <- 2"
            ],
            "resampled_steps": [
                "2 + 5 = 7 (left: 7 8 11)\n11 / 7 = 1.57 (left: 1.57 8)",
                "11 - 2 = 9 (left: 5 8 9)\n5 * 8 = 40 (left: 40 9)",
                "11 - 2 = 9 (left: 5 8 9)\n9 + 8 = 17 (left: 5 17)",
                "11 - 2 = 9 (left: 5 8 9)\n9 + 8 = 17 (left: 5 17)",
                "2 + 5 = 7 (left: 7 8 11)\n11 / 7 = 1.57 (left: 1.57 8)"
            ]
        },
        "step_3": {
            "steps": [
                "2 + 5 = 7 (left: 7 8 11)\n11 / 7 = 1.57 (left: 1.57 8)\n1.57 + 8 = 9.57 (left: 9.57)",
                "11 - 2 = 9 (left: 5 8 9)\n5 * 8 = 40 (left: 40 9)\n40 / 9 = 4.44 (left: 9 4.44)",
                "11 - 2 = 9 (left: 5 8 9)\n9 + 8 = 17 (left: 5 17)\n17 - 5 = 12 (left: 12)",
                "11 - 2 = 9 (left: 5 8 9)\n9 + 8 = 17 (left: 5 17)\n17 + 5 = 22 (left: 22)",
                "2 + 5 = 7 (left: 7 8 11)\n11 / 7 = 1.57 (left: 1.57 8)\n8 / 1.57 = 5.10 (left: 5.10)"
            ],
            "values": [
                0.003,
                1.001,
                0.001,
                20.001,
                0.0
            ],
            "resampled": [
                "0 <- 3",
                "1 <- 3",
                "2 <- 3",
                "3 <- 3",
                "4 <- 3"
            ],
            "resampled_steps": [
                "11 - 2 = 9 (left: 5 8 9)\n9 + 8 = 17 (left: 5 17)\n17 + 5 = 22 (left: 22)",
                "11 - 2 = 9 (left: 5 8 9)\n9 + 8 = 17 (left: 5 17)\n17 + 5 = 22 (left: 22)",
                "11 - 2 = 9 (left: 5 8 9)\n9 + 8 = 17 (left: 5 17)\n17 + 5 = 22 (left: 22)",
                "11 - 2 = 9 (left: 5 8 9)\n9 + 8 = 17 (left: 5 17)\n17 + 5 = 22 (left: 22)",
                "11 - 2 = 9 (left: 5 8 9)\n9 + 8 = 17 (left: 5 17)\n17 + 5 = 22 (left: 22)"
            ]
        },
        "step_4": {
            "steps": [
                "11 - 2 = 9 (left: 5 8 9)\n9 + 8 = 17 (left: 5 17)\n17 + 5 = 22 (left: 22)\n22 * 2 = 44 (left: 2 44)",
                "11 - 2 = 9 (left: 5 8 9)\n9 + 8 = 17 (left: 5 17)\n17 + 5 = 22 (left: 22)\n22 + 2 = 24 (left: 2 24)",
                "11 - 2 = 9 (left: 5 8 9)\n9 + 8 = 17 (left: 5 17)\n17 + 5 = 22 (left: 22)\n22 + 8 = 30 (left: 8 30)",
                "11 - 2 = 9 (left: 5 8 9)\n9 + 8 = 17 (left: 5 17)\n17 + 5 = 22 (left: 22)\n22 * 2 = 44 (left: 2 44)",
                "11 - 2 = 9 (left: 5 8 9)\n9 + 8 = 17 (left: 5 17)\n17 + 5 = 22 (left: 22)\n22 + 2 = 24 (left: 2 24)"
            ],
            "values": [
                1.001,
                0.003,
                22.0,
                0.003,
                20.002
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 0.052411000000000006
    },
    "903": {
        "input": "3 4 4 13",
        "step_1": {
            "steps": [
                "13 - 4 = 9 (left: 3 4 9)",
                "4 / 3 = 1.33 (left: 1.33 4 13)",
                "13 - 3 = 10 (left: 4 4 10)",
                "13 - 3 = 10 (left: 4 4 10)",
                "13 / 3 = 4.33 (left: 4.33 4 13)"
            ],
            "values": [
                0.003,
                2.001,
                20.0,
                40.0,
                1.002
            ],
            "resampled": [
                "0 <- 2",
                "1 <- 2",
                "2 <- 3",
                "3 <- 2",
                "4 <- 3"
            ],
            "resampled_steps": [
                "13 - 3 = 10 (left: 4 4 10)",
                "13 - 3 = 10 (left: 4 4 10)",
                "13 - 3 = 10 (left: 4 4 10)",
                "13 - 3 = 10 (left: 4 4 10)",
                "13 - 3 = 10 (left: 4 4 10)"
            ]
        },
        "step_2": {
            "steps": [
                "13 - 3 = 10 (left: 4 4 10)\n4 * 4 = 16 (left: 16 10)",
                "13 - 3 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)",
                "13 - 3 = 10 (left: 4 4 10)\n10 + 4 = 14 (left: 4 14)",
                "13 - 3 = 10 (left: 4 4 10)\n4 / 4 = 1 (left: 1 10)",
                "13 - 3 = 10 (left: 4 4 10)\n10 / 4 = 2.5 (left: 2.5 4)"
            ],
            "values": [
                0.003,
                60.0,
                1.002,
                40.0,
                1.0
            ],
            "resampled": [
                "0 <- 1",
                "1 <- 1",
                "2 <- 1",
                "3 <- 1",
                "4 <- 3"
            ],
            "resampled_steps": [
                "13 - 3 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)",
                "13 - 3 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)",
                "13 - 3 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)",
                "13 - 3 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)",
                "13 - 3 = 10 (left: 4 4 10)\n4 / 4 = 1 (left: 1 10)"
            ]
        },
        "step_3": {
            "steps": [
                "13 - 3 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)",
                "13 - 3 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n6 - 4 = 2 (left: 2)",
                "13 - 3 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "13 - 3 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n4 + 6 = 10 (left: 6 10)",
                "13 - 3 = 10 (left: 4 4 10)\n4 / 4 = 1 (left: 1 10)\n1 + 10 = 11 (left: 11)"
            ],
            "values": [
                0.003,
                0.002,
                0.0,
                0.002,
                0.002
            ],
            "resampled": [
                "0 <- 3",
                "1 <- 4",
                "2 <- 0",
                "3 <- 1",
                "4 <- 0"
            ],
            "resampled_steps": [
                "13 - 3 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n4 + 6 = 10 (left: 6 10)",
                "13 - 3 = 10 (left: 4 4 10)\n4 / 4 = 1 (left: 1 10)\n1 + 10 = 11 (left: 11)",
                "13 - 3 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)",
                "13 - 3 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n6 - 4 = 2 (left: 2)",
                "13 - 3 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)"
            ]
        },
        "step_4": {
            "steps": [
                "13 - 3 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n4 + 6 = 10 (left: 6 10)\n6 + 10 = 16 (left: 16)",
                "13 - 3 = 10 (left: 4 4 10)\n4 / 4 = 1 (left: 1 10)\n1 + 10 = 11 (left: 11)\n11 / 2 = 5.5 (left: 2 5.5)",
                "13 - 3 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\nThere are no possible next steps for the number 10 as it is already a single number and cannot be combined with any other numbers.",
                "13 - 3 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n6 - 4 = 2 (left: 2)\nThere are no possible next steps with only one number as input.",
                "13 - 3 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\nThere are no possible next steps as 10 is already a single number."
            ],
            "values": [
                0.002,
                20.0,
                0.003,
                0.003,
                0.003
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 0.06833
    },
    "904": {
        "input": "6 7 8 9",
        "step_1": {
            "steps": [
                "9 - 8 = 1 (left: 6 7 1)",
                "7 + 8 = 15 (left: 6 9 15)",
                "8 / 9 = 0.888 (left: 6 7 0.888)",
                "8 + 9 = 17 (left: 6 7 17)",
                "7 + 8 = 15 (left: 6 9 15)"
            ],
            "values": [
                3.0,
                2.001,
                3.0,
                1.002,
                2.001
            ],
            "resampled": [
                "0 <- 4",
                "1 <- 2",
                "2 <- 0",
                "3 <- 4",
                "4 <- 1"
            ],
            "resampled_steps": [
                "7 + 8 = 15 (left: 6 9 15)",
                "8 / 9 = 0.888 (left: 6 7 0.888)",
                "9 - 8 = 1 (left: 6 7 1)",
                "7 + 8 = 15 (left: 6 9 15)",
                "7 + 8 = 15 (left: 6 9 15)"
            ]
        },
        "step_2": {
            "steps": [
                "7 + 8 = 15 (left: 6 9 15)\n15 - 9 = 6 (left: 6 15)",
                "8 / 9 = 0.888 (left: 6 7 0.888)\n6 * 7 = 42 (left: 42 0.888)",
                "9 - 8 = 1 (left: 6 7 1)\n6 + 7 = 13 (left: 13 1)",
                "7 + 8 = 15 (left: 6 9 15)\n15 - 6 = 9 (left: 9 15)",
                "7 + 8 = 15 (left: 6 9 15)\n9 * 6 = 54 (left: 54 15)"
            ],
            "values": [
                2.001,
                0.002,
                0.002,
                41.0,
                0.003
            ],
            "resampled": [
                "0 <- 3",
                "1 <- 3",
                "2 <- 3",
                "3 <- 3",
                "4 <- 3"
            ],
            "resampled_steps": [
                "7 + 8 = 15 (left: 6 9 15)\n15 - 6 = 9 (left: 9 15)",
                "7 + 8 = 15 (left: 6 9 15)\n15 - 6 = 9 (left: 9 15)",
                "7 + 8 = 15 (left: 6 9 15)\n15 - 6 = 9 (left: 9 15)",
                "7 + 8 = 15 (left: 6 9 15)\n15 - 6 = 9 (left: 9 15)",
                "7 + 8 = 15 (left: 6 9 15)\n15 - 6 = 9 (left: 9 15)"
            ]
        },
        "step_3": {
            "steps": [
                "7 + 8 = 15 (left: 6 9 15)\n15 - 6 = 9 (left: 9 15)\n15 / 9 = 1.66666666667 (left: 1.66666666667)",
                "7 + 8 = 15 (left: 6 9 15)\n15 - 6 = 9 (left: 9 15)\n9 * 15 = 135 (left: 135)",
                "7 + 8 = 15 (left: 6 9 15)\n15 - 6 = 9 (left: 9 15)\n9 * 15 = 135 (left: 15 135)",
                "7 + 8 = 15 (left: 6 9 15)\n15 - 6 = 9 (left: 9 15)\n9 - 15 = -6 (left: -6)",
                "7 + 8 = 15 (left: 6 9 15)\n15 - 6 = 9 (left: 9 15)\n9 * 15 = 135 (left: 135)"
            ],
            "values": [
                0.0,
                0.002,
                0.003,
                0.001,
                0.002
            ],
            "resampled": [
                "0 <- 2",
                "1 <- 4",
                "2 <- 1",
                "3 <- 1",
                "4 <- 1"
            ],
            "resampled_steps": [
                "7 + 8 = 15 (left: 6 9 15)\n15 - 6 = 9 (left: 9 15)\n9 * 15 = 135 (left: 15 135)",
                "7 + 8 = 15 (left: 6 9 15)\n15 - 6 = 9 (left: 9 15)\n9 * 15 = 135 (left: 135)",
                "7 + 8 = 15 (left: 6 9 15)\n15 - 6 = 9 (left: 9 15)\n9 * 15 = 135 (left: 135)",
                "7 + 8 = 15 (left: 6 9 15)\n15 - 6 = 9 (left: 9 15)\n9 * 15 = 135 (left: 135)",
                "7 + 8 = 15 (left: 6 9 15)\n15 - 6 = 9 (left: 9 15)\n9 * 15 = 135 (left: 135)"
            ]
        },
        "step_4": {
            "steps": [
                "7 + 8 = 15 (left: 6 9 15)\n15 - 6 = 9 (left: 9 15)\n9 * 15 = 135 (left: 15 135)\n15 * 9 = 135 (left: 15 135)",
                "7 + 8 = 15 (left: 6 9 15)\n15 - 6 = 9 (left: 9 15)\n9 * 15 = 135 (left: 135)\n135 + 5 = 140 (left: 5 135 140)",
                "7 + 8 = 15 (left: 6 9 15)\n15 - 6 = 9 (left: 9 15)\n9 * 15 = 135 (left: 135)\n135 - 1 = 134",
                "7 + 8 = 15 (left: 6 9 15)\n15 - 6 = 9 (left: 9 15)\n9 * 15 = 135 (left: 135)\n135 + 5 = 140 (left: 5 140)",
                "7 + 8 = 15 (left: 6 9 15)\n15 - 6 = 9 (left: 9 15)\n9 * 15 = 135 (left: 135)\n- 135 / 5 = 27"
            ],
            "values": [
                0.003,
                1.002,
                0.003,
                2.0,
                0.003
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 0.086347
    },
    "905": {
        "input": "1 11 11 13",
        "step_1": {
            "steps": [
                "11 / 1 = 11 (left: 11 11 13)",
                "13 - 1 = 12 (left: 11 11 12)",
                "11 - 1 = 10 (left: 10 11 13)",
                "11 / 1 = 11 (left: 11 11 13)",
                "13 - 1 = 12 (left: 11 11 12)"
            ],
            "values": [
                1.002,
                0.003,
                1.002,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 2",
                "1 <- 2",
                "2 <- 2",
                "3 <- 0",
                "4 <- 2"
            ],
            "resampled_steps": [
                "11 - 1 = 10 (left: 10 11 13)",
                "11 - 1 = 10 (left: 10 11 13)",
                "11 - 1 = 10 (left: 10 11 13)",
                "11 / 1 = 11 (left: 11 11 13)",
                "11 - 1 = 10 (left: 10 11 13)"
            ]
        },
        "step_2": {
            "steps": [
                "11 - 1 = 10 (left: 10 11 13)\n11 * 13 = 143 (left: 10 143)",
                "11 - 1 = 10 (left: 10 11 13)\n10 * 11 = 110 (left: 110 13)",
                "11 - 1 = 10 (left: 10 11 13)\n10 * 11 = 110 (left: 110 13)",
                "11 / 1 = 11 (left: 11 11 13)\n11 / 11 = 1 (left: 1 13)",
                "11 - 1 = 10 (left: 10 11 13)\n11 - 10 = 1 (left: 1 13)"
            ],
            "values": [
                0.002,
                0.003,
                0.003,
                0.002,
                0.003
            ],
            "resampled": [
                "0 <- 0",
                "1 <- 0",
                "2 <- 3",
                "3 <- 2",
                "4 <- 4"
            ],
            "resampled_steps": [
                "11 - 1 = 10 (left: 10 11 13)\n11 * 13 = 143 (left: 10 143)",
                "11 - 1 = 10 (left: 10 11 13)\n11 * 13 = 143 (left: 10 143)",
                "11 / 1 = 11 (left: 11 11 13)\n11 / 11 = 1 (left: 1 13)",
                "11 - 1 = 10 (left: 10 11 13)\n10 * 11 = 110 (left: 110 13)",
                "11 - 1 = 10 (left: 10 11 13)\n11 - 10 = 1 (left: 1 13)"
            ]
        },
        "step_3": {
            "steps": [
                "11 - 1 = 10 (left: 10 11 13)\n11 * 13 = 143 (left: 10 143)\n10 / 143 = 0.0699 (left: 0.0699)",
                "11 - 1 = 10 (left: 10 11 13)\n11 * 13 = 143 (left: 10 143)\n10 * 143 = 1430 (left: 1430)",
                "11 / 1 = 11 (left: 11 11 13)\n11 / 11 = 1 (left: 1 13)\n13 - 1 = 12 (left: 12)",
                "11 - 1 = 10 (left: 10 11 13)\n10 * 11 = 110 (left: 110 13)\n110 - 13 = 97 (left: 97)",
                "11 - 1 = 10 (left: 10 11 13)\n11 - 10 = 1 (left: 1 13)\n13 / 1 = 13 (left: 13)"
            ],
            "values": [
                0.003,
                0.002,
                0.001,
                0.003,
                0.002
            ],
            "resampled": [
                "0 <- 2",
                "1 <- 2",
                "2 <- 4",
                "3 <- 0",
                "4 <- 3"
            ],
            "resampled_steps": [
                "11 / 1 = 11 (left: 11 11 13)\n11 / 11 = 1 (left: 1 13)\n13 - 1 = 12 (left: 12)",
                "11 / 1 = 11 (left: 11 11 13)\n11 / 11 = 1 (left: 1 13)\n13 - 1 = 12 (left: 12)",
                "11 - 1 = 10 (left: 10 11 13)\n11 - 10 = 1 (left: 1 13)\n13 / 1 = 13 (left: 13)",
                "11 - 1 = 10 (left: 10 11 13)\n11 * 13 = 143 (left: 10 143)\n10 / 143 = 0.0699 (left: 0.0699)",
                "11 - 1 = 10 (left: 10 11 13)\n10 * 11 = 110 (left: 110 13)\n110 - 13 = 97 (left: 97)"
            ]
        },
        "step_4": {
            "steps": [
                "11 / 1 = 11 (left: 11 11 13)\n11 / 11 = 1 (left: 1 13)\n13 - 1 = 12 (left: 12)\n12 / 2 = 6 (left: 2 6)",
                "11 / 1 = 11 (left: 11 11 13)\n11 / 11 = 1 (left: 1 13)\n13 - 1 = 12 (left: 12)\n12 / 2 = 6 (left: 6 8)",
                "11 - 1 = 10 (left: 10 11 13)\n11 - 10 = 1 (left: 1 13)\n13 / 1 = 13 (left: 13)\n13 * 2 = 26 (left: 2 13 26)",
                "11 - 1 = 10 (left: 10 11 13)\n11 * 13 = 143 (left: 10 143)\n10 / 143 = 0.0699 (left: 0.0699)\nThere are no possible next steps for the given input \"0.0699\" as it is already a single number and there are no operations that can be performed on it.",
                "11 - 1 = 10 (left: 10 11 13)\n10 * 11 = 110 (left: 110 13)\n110 - 13 = 97 (left: 97)\n97 + 1 = 98 (left: 1 97 98)"
            ],
            "values": [
                40.0,
                0.003,
                40.0,
                0.003,
                20.002
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 0.103047
    },
    "906": {
        "input": "1 8 10 11",
        "step_1": {
            "steps": [
                "10 - 1 = 9 (left: 8 9 11)",
                "11 - 1 = 10 (left: 8 10 10)",
                "1 * 8 = 8 (left: 8 10 11)",
                "11 - 1 = 10 (left: 8 10)",
                "10 - 1 = 9 (left: 8 9 11)"
            ],
            "values": [
                2.001,
                3.0,
                1.002,
                1.0,
                2.001
            ],
            "resampled": [
                "0 <- 0",
                "1 <- 1",
                "2 <- 0",
                "3 <- 1",
                "4 <- 2"
            ],
            "resampled_steps": [
                "10 - 1 = 9 (left: 8 9 11)",
                "11 - 1 = 10 (left: 8 10 10)",
                "10 - 1 = 9 (left: 8 9 11)",
                "11 - 1 = 10 (left: 8 10 10)",
                "1 * 8 = 8 (left: 8 10 11)"
            ]
        },
        "step_2": {
            "steps": [
                "10 - 1 = 9 (left: 8 9 11)\n8 * 9 = 72 (left: 72 11)",
                "11 - 1 = 10 (left: 8 10 10)\n10 / 8 = 1.25 (left: 1.25 10)",
                "10 - 1 = 9 (left: 8 9 11)\n11 - 8 = 3 (left: 3 9)",
                "11 - 1 = 10 (left: 8 10 10)\n8 + 10 = 18 (left: 10 18)",
                "1 * 8 = 8 (left: 8 10 11)\n10 + 11 = 21 (left: 8 21)"
            ],
            "values": [
                1.001,
                3.0,
                0.002,
                1.001,
                1.002
            ],
            "resampled": [
                "0 <- 4",
                "1 <- 1",
                "2 <- 1",
                "3 <- 4",
                "4 <- 4"
            ],
            "resampled_steps": [
                "1 * 8 = 8 (left: 8 10 11)\n10 + 11 = 21 (left: 8 21)",
                "11 - 1 = 10 (left: 8 10 10)\n10 / 8 = 1.25 (left: 1.25 10)",
                "11 - 1 = 10 (left: 8 10 10)\n10 / 8 = 1.25 (left: 1.25 10)",
                "1 * 8 = 8 (left: 8 10 11)\n10 + 11 = 21 (left: 8 21)",
                "1 * 8 = 8 (left: 8 10 11)\n10 + 11 = 21 (left: 8 21)"
            ]
        },
        "step_3": {
            "steps": [
                "1 * 8 = 8 (left: 8 10 11)\n10 + 11 = 21 (left: 8 21)\n8 + 21 = 29 (left: 29)",
                "11 - 1 = 10 (left: 8 10 10)\n10 / 8 = 1.25 (left: 1.25 10)\n10 / 1.25 = 8 (left: 8)",
                "11 - 1 = 10 (left: 8 10 10)\n10 / 8 = 1.25 (left: 1.25 10)\n1.25 * 10 = 12.5 (left: 12.5)",
                "1 * 8 = 8 (left: 8 10 11)\n10 + 11 = 21 (left: 8 21)\n8 * 21 = 168 (left: 168)",
                "1 * 8 = 8 (left: 8 10 11)\n10 + 11 = 21 (left: 8 21)\n21 / 8 = 2.625 (left: 2.625)"
            ],
            "values": [
                0.002,
                0.0,
                0.002,
                0.0,
                0.002
            ],
            "resampled": [
                "0 <- 4",
                "1 <- 0",
                "2 <- 2",
                "3 <- 0",
                "4 <- 4"
            ],
            "resampled_steps": [
                "1 * 8 = 8 (left: 8 10 11)\n10 + 11 = 21 (left: 8 21)\n21 / 8 = 2.625 (left: 2.625)",
                "1 * 8 = 8 (left: 8 10 11)\n10 + 11 = 21 (left: 8 21)\n8 + 21 = 29 (left: 29)",
                "11 - 1 = 10 (left: 8 10 10)\n10 / 8 = 1.25 (left: 1.25 10)\n1.25 * 10 = 12.5 (left: 12.5)",
                "1 * 8 = 8 (left: 8 10 11)\n10 + 11 = 21 (left: 8 21)\n8 + 21 = 29 (left: 29)",
                "1 * 8 = 8 (left: 8 10 11)\n10 + 11 = 21 (left: 8 21)\n21 / 8 = 2.625 (left: 2.625)"
            ]
        },
        "step_4": {
            "steps": [
                "1 * 8 = 8 (left: 8 10 11)\n10 + 11 = 21 (left: 8 21)\n21 / 8 = 2.625 (left: 2.625)\n8 - 2.625 = 5.375",
                "1 * 8 = 8 (left: 8 10 11)\n10 + 11 = 21 (left: 8 21)\n8 + 21 = 29 (left: 29)\n29 / 2 = 14.5 (left: 2 14.5 29)",
                "11 - 1 = 10 (left: 8 10 10)\n10 / 8 = 1.25 (left: 1.25 10)\n1.25 * 10 = 12.5 (left: 12.5)\n12.5 + 2 = 14.5 (left: 2 12.5 14.5)",
                "1 * 8 = 8 (left: 8 10 11)\n10 + 11 = 21 (left: 8 21)\n8 + 21 = 29 (left: 29)\n- 29 * 2 = 58",
                "1 * 8 = 8 (left: 8 10 11)\n10 + 11 = 21 (left: 8 21)\n21 / 8 = 2.625 (left: 2.625)\n2.625 - 2 = 0.625"
            ],
            "values": [
                0.003,
                1.001,
                3.0,
                0.003,
                0.003
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 0.120331
    },
    "907": {
        "input": "2 3 6 9",
        "step_1": {
            "steps": [
                "6 + 3 = 9 (left: 2 9 9)",
                "9 / 3 = 3 (left: 2 6 9)",
                "6 + 3 = 9 (left: 2 9 9)",
                "6 + 3 = 9 (left: 2 9 9)",
                "3 * 2 = 6 (left: 6 6 9)"
            ],
            "values": [
                2.001,
                0.002,
                0.002,
                0.003,
                2.001
            ],
            "resampled": [
                "0 <- 4",
                "1 <- 4",
                "2 <- 4",
                "3 <- 4",
                "4 <- 0"
            ],
            "resampled_steps": [
                "3 * 2 = 6 (left: 6 6 9)",
                "3 * 2 = 6 (left: 6 6 9)",
                "3 * 2 = 6 (left: 6 6 9)",
                "3 * 2 = 6 (left: 6 6 9)",
                "6 + 3 = 9 (left: 2 9 9)"
            ]
        },
        "step_2": {
            "steps": [
                "3 * 2 = 6 (left: 6 6 9)\n6 / 6 = 1 (left: 1 9)",
                "3 * 2 = 6 (left: 6 6 9)\n6 + 6 = 12 (left: 12 9)",
                "3 * 2 = 6 (left: 6 6 9)\n6 - 6 = 0 (left: 0 9)",
                "3 * 2 = 6 (left: 6 6 9)\n6 / 6 = 1 (left: 1 9)",
                "6 + 3 = 9 (left: 2 9 9)\n9 / 2 = 4.5 (left: 4.5 9)"
            ],
            "values": [
                0.001,
                0.003,
                0.003,
                0.0,
                1.0
            ],
            "resampled": [
                "0 <- 4",
                "1 <- 4",
                "2 <- 4",
                "3 <- 4",
                "4 <- 4"
            ],
            "resampled_steps": [
                "6 + 3 = 9 (left: 2 9 9)\n9 / 2 = 4.5 (left: 4.5 9)",
                "6 + 3 = 9 (left: 2 9 9)\n9 / 2 = 4.5 (left: 4.5 9)",
                "6 + 3 = 9 (left: 2 9 9)\n9 / 2 = 4.5 (left: 4.5 9)",
                "6 + 3 = 9 (left: 2 9 9)\n9 / 2 = 4.5 (left: 4.5 9)",
                "6 + 3 = 9 (left: 2 9 9)\n9 / 2 = 4.5 (left: 4.5 9)"
            ]
        },
        "step_3": {
            "steps": [
                "6 + 3 = 9 (left: 2 9 9)\n9 / 2 = 4.5 (left: 4.5 9)\n4.5 * 9 = 40.5 (left: 9 40.5)",
                "6 + 3 = 9 (left: 2 9 9)\n9 / 2 = 4.5 (left: 4.5 9)\n9 / 4.5 = 2 (left: 2 9)",
                "6 + 3 = 9 (left: 2 9 9)\n9 / 2 = 4.5 (left: 4.5 9)\n9 / 4.5 = 2 (left: 2 9)",
                "6 + 3 = 9 (left: 2 9 9)\n9 / 2 = 4.5 (left: 4.5 9)\n4.5 + 9 = 13.5 (left: 9 13.5)",
                "6 + 3 = 9 (left: 2 9 9)\n9 / 2 = 4.5 (left: 4.5 9)\n4.5 + 9 = 13.5 (left: 9 13.5)"
            ],
            "values": [
                1.002,
                2.001,
                2.001,
                1.001,
                1.002
            ],
            "resampled": [
                "0 <- 2",
                "1 <- 0",
                "2 <- 1",
                "3 <- 2",
                "4 <- 4"
            ],
            "resampled_steps": [
                "6 + 3 = 9 (left: 2 9 9)\n9 / 2 = 4.5 (left: 4.5 9)\n9 / 4.5 = 2 (left: 2 9)",
                "6 + 3 = 9 (left: 2 9 9)\n9 / 2 = 4.5 (left: 4.5 9)\n4.5 * 9 = 40.5 (left: 9 40.5)",
                "6 + 3 = 9 (left: 2 9 9)\n9 / 2 = 4.5 (left: 4.5 9)\n9 / 4.5 = 2 (left: 2 9)",
                "6 + 3 = 9 (left: 2 9 9)\n9 / 2 = 4.5 (left: 4.5 9)\n9 / 4.5 = 2 (left: 2 9)",
                "6 + 3 = 9 (left: 2 9 9)\n9 / 2 = 4.5 (left: 4.5 9)\n4.5 + 9 = 13.5 (left: 9 13.5)"
            ]
        },
        "step_4": {
            "steps": [
                "6 + 3 = 9 (left: 2 9 9)\n9 / 2 = 4.5 (left: 4.5 9)\n9 / 4.5 = 2 (left: 2 9)\n2 + 9 = 11 (left: 9 11)",
                "6 + 3 = 9 (left: 2 9 9)\n9 / 2 = 4.5 (left: 4.5 9)\n4.5 * 9 = 40.5 (left: 9 40.5)\n9 + 40.5 = 49.5 (left: 49.5)",
                "6 + 3 = 9 (left: 2 9 9)\n9 / 2 = 4.5 (left: 4.5 9)\n9 / 4.5 = 2 (left: 2 9)\n2 + 9 = 11 (left: 11)",
                "6 + 3 = 9 (left: 2 9 9)\n9 / 2 = 4.5 (left: 4.5 9)\n9 / 4.5 = 2 (left: 2 9)\n2 * 9 = 18 (left: 9 18)",
                "6 + 3 = 9 (left: 2 9 9)\n9 / 2 = 4.5 (left: 4.5 9)\n4.5 + 9 = 13.5 (left: 9 13.5)\n9 * 13.5 = 121.5 (left: 121.5)"
            ],
            "values": [
                1.002,
                0.003,
                0.003,
                0.003,
                0.001
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 0.137961
    },
    "908": {
        "input": "1 3 5 9",
        "step_1": {
            "steps": [
                "1 + 3 = 4 (left: 4 5 9)",
                "5 - 1 = 4 (left: 3 4 9)",
                "5 - 3 = 2 (left: 1 2 9)",
                "9 - 5 = 4 (left: 1 3 4)",
                "9 / 3 = 3 (left: 1 3 5)"
            ],
            "values": [
                2.001,
                20.002,
                1.002,
                3.0,
                3.0
            ],
            "resampled": [
                "0 <- 0",
                "1 <- 1",
                "2 <- 1",
                "3 <- 3",
                "4 <- 3"
            ],
            "resampled_steps": [
                "1 + 3 = 4 (left: 4 5 9)",
                "5 - 1 = 4 (left: 3 4 9)",
                "5 - 1 = 4 (left: 3 4 9)",
                "9 - 5 = 4 (left: 1 3 4)",
                "9 - 5 = 4 (left: 1 3 4)"
            ]
        },
        "step_2": {
            "steps": [
                "1 + 3 = 4 (left: 4 5 9)\n4 + 5 = 9 (left: 9 9)",
                "5 - 1 = 4 (left: 3 4 9)\n5 + 10 = 15 (left: 15 15)",
                "5 - 1 = 4 (left: 3 4 9)\n3 * 9 = 27 (left: 4 27)",
                "9 - 5 = 4 (left: 1 3 4)\n1 + 3 = 4 (left: 4 4)",
                "9 - 5 = 4 (left: 1 3 4)\n1 * 3 = 3 (left: 3 4)"
            ],
            "values": [
                0.003,
                1.002,
                20.001,
                1.001,
                1.0
            ],
            "resampled": [
                "0 <- 2",
                "1 <- 2",
                "2 <- 2",
                "3 <- 2",
                "4 <- 2"
            ],
            "resampled_steps": [
                "5 - 1 = 4 (left: 3 4 9)\n3 * 9 = 27 (left: 4 27)",
                "5 - 1 = 4 (left: 3 4 9)\n3 * 9 = 27 (left: 4 27)",
                "5 - 1 = 4 (left: 3 4 9)\n3 * 9 = 27 (left: 4 27)",
                "5 - 1 = 4 (left: 3 4 9)\n3 * 9 = 27 (left: 4 27)",
                "5 - 1 = 4 (left: 3 4 9)\n3 * 9 = 27 (left: 4 27)"
            ]
        },
        "step_3": {
            "steps": [
                "5 - 1 = 4 (left: 3 4 9)\n3 * 9 = 27 (left: 4 27)\n4 + 27 = 31 (left: 31)",
                "5 - 1 = 4 (left: 3 4 9)\n3 * 9 = 27 (left: 4 27)\n4 + 27 = 31 (left: 31)",
                "5 - 1 = 4 (left: 3 4 9)\n3 * 9 = 27 (left: 4 27)\n4 * 27 = 108 (left: 108)",
                "5 - 1 = 4 (left: 3 4 9)\n3 * 9 = 27 (left: 4 27)\n4 + 27 = 31 (left: 27 31)",
                "5 - 1 = 4 (left: 3 4 9)\n3 * 9 = 27 (left: 4 27)\n4 + 27 = 31 (left: 31)"
            ],
            "values": [
                20.001,
                0.002,
                0.002,
                0.003,
                0.002
            ],
            "resampled": [
                "0 <- 0",
                "1 <- 0",
                "2 <- 0",
                "3 <- 0",
                "4 <- 0"
            ],
            "resampled_steps": [
                "5 - 1 = 4 (left: 3 4 9)\n3 * 9 = 27 (left: 4 27)\n4 + 27 = 31 (left: 31)",
                "5 - 1 = 4 (left: 3 4 9)\n3 * 9 = 27 (left: 4 27)\n4 + 27 = 31 (left: 31)",
                "5 - 1 = 4 (left: 3 4 9)\n3 * 9 = 27 (left: 4 27)\n4 + 27 = 31 (left: 31)",
                "5 - 1 = 4 (left: 3 4 9)\n3 * 9 = 27 (left: 4 27)\n4 + 27 = 31 (left: 31)",
                "5 - 1 = 4 (left: 3 4 9)\n3 * 9 = 27 (left: 4 27)\n4 + 27 = 31 (left: 31)"
            ]
        },
        "step_4": {
            "steps": [
                "5 - 1 = 4 (left: 3 4 9)\n3 * 9 = 27 (left: 4 27)\n4 + 27 = 31 (left: 31)\n31 / 2 = 15.5 (left: 2 15.5)",
                "5 - 1 = 4 (left: 3 4 9)\n3 * 9 = 27 (left: 4 27)\n4 + 27 = 31 (left: 31)\n31 + 2 = 33 (left: 2 33)",
                "5 - 1 = 4 (left: 3 4 9)\n3 * 9 = 27 (left: 4 27)\n4 + 27 = 31 (left: 31)\n31 / 2 = 15.5 (left: 2 15.5)",
                "5 - 1 = 4 (left: 3 4 9)\n3 * 9 = 27 (left: 4 27)\n4 + 27 = 31 (left: 31)\n31 - 2 = 29 (left: 2 29)",
                "5 - 1 = 4 (left: 3 4 9)\n3 * 9 = 27 (left: 4 27)\n4 + 27 = 31 (left: 31)\nThere are no possible next steps for the input 31 as it is a single number and cannot be combined with other numbers using the basic arithmetic operations."
            ],
            "values": [
                1.001,
                2.0,
                21.001,
                0.003,
                0.003
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 0.155501
    },
    "909": {
        "input": "3 3 7 12",
        "step_1": {
            "steps": [
                "3 / 3 = 1 (left: 1 7 12)",
                "12 - 7 = 5 (left: 3 3 5)",
                "12 - 7 = 5 (left: 3 3 5)",
                "3 + 3 = 6 (left: 6 7 12)",
                "7 - 3 = 4 (left: 3 4 12)"
            ],
            "values": [
                2.0,
                1.002,
                3.0,
                3.0,
                40.001
            ],
            "resampled": [
                "0 <- 4",
                "1 <- 4",
                "2 <- 4",
                "3 <- 4",
                "4 <- 4"
            ],
            "resampled_steps": [
                "7 - 3 = 4 (left: 3 4 12)",
                "7 - 3 = 4 (left: 3 4 12)",
                "7 - 3 = 4 (left: 3 4 12)",
                "7 - 3 = 4 (left: 3 4 12)",
                "7 - 3 = 4 (left: 3 4 12)"
            ]
        },
        "step_2": {
            "steps": [
                "7 - 3 = 4 (left: 3 4 12)\n3 + 4 = 7 (left: 7 12)",
                "7 - 3 = 4 (left: 3 4 12)\n4 * 3 = 12 (left: 12 12)",
                "7 - 3 = 4 (left: 3 4 12)\n12 - 3 = 9 (left: 4 9)",
                "7 - 3 = 4 (left: 3 4 12)\n4 + 3 = 7 (left: 7 12)",
                "7 - 3 = 4 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)"
            ],
            "values": [
                1.002,
                41.0,
                40.0,
                0.003,
                60.0
            ],
            "resampled": [
                "0 <- 1",
                "1 <- 4",
                "2 <- 2",
                "3 <- 2",
                "4 <- 2"
            ],
            "resampled_steps": [
                "7 - 3 = 4 (left: 3 4 12)\n4 * 3 = 12 (left: 12 12)",
                "7 - 3 = 4 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)",
                "7 - 3 = 4 (left: 3 4 12)\n12 - 3 = 9 (left: 4 9)",
                "7 - 3 = 4 (left: 3 4 12)\n12 - 3 = 9 (left: 4 9)",
                "7 - 3 = 4 (left: 3 4 12)\n12 - 3 = 9 (left: 4 9)"
            ]
        },
        "step_3": {
            "steps": [
                "7 - 3 = 4 (left: 3 4 12)\n4 * 3 = 12 (left: 12 12)\n12 / 12 = 1 (left: 1)",
                "7 - 3 = 4 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 + 8 = 11 (left: 8 11)",
                "7 - 3 = 4 (left: 3 4 12)\n12 - 3 = 9 (left: 4 9)\n4 * 9 = 36 (left: 9 36)",
                "7 - 3 = 4 (left: 3 4 12)\n12 - 3 = 9 (left: 4 9)\n4 + 9 = 13 (left: 9 13)",
                "7 - 3 = 4 (left: 3 4 12)\n12 - 3 = 9 (left: 4 9)\n4 * 9 = 36 (left: 9 36)"
            ],
            "values": [
                0.003,
                1.002,
                0.003,
                20.002,
                0.003
            ],
            "resampled": [
                "0 <- 3",
                "1 <- 3",
                "2 <- 3",
                "3 <- 3",
                "4 <- 1"
            ],
            "resampled_steps": [
                "7 - 3 = 4 (left: 3 4 12)\n12 - 3 = 9 (left: 4 9)\n4 + 9 = 13 (left: 9 13)",
                "7 - 3 = 4 (left: 3 4 12)\n12 - 3 = 9 (left: 4 9)\n4 + 9 = 13 (left: 9 13)",
                "7 - 3 = 4 (left: 3 4 12)\n12 - 3 = 9 (left: 4 9)\n4 + 9 = 13 (left: 9 13)",
                "7 - 3 = 4 (left: 3 4 12)\n12 - 3 = 9 (left: 4 9)\n4 + 9 = 13 (left: 9 13)",
                "7 - 3 = 4 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 + 8 = 11 (left: 8 11)"
            ]
        },
        "step_4": {
            "steps": [
                "7 - 3 = 4 (left: 3 4 12)\n12 - 3 = 9 (left: 4 9)\n4 + 9 = 13 (left: 9 13)\n13 / 9 = 1.444 (left: 1.444)",
                "7 - 3 = 4 (left: 3 4 12)\n12 - 3 = 9 (left: 4 9)\n4 + 9 = 13 (left: 9 13)\n9 + 13 = 22 (left: 22)",
                "7 - 3 = 4 (left: 3 4 12)\n12 - 3 = 9 (left: 4 9)\n4 + 9 = 13 (left: 9 13)\n13 - 9 = 4 (left: 4)",
                "7 - 3 = 4 (left: 3 4 12)\n12 - 3 = 9 (left: 4 9)\n4 + 9 = 13 (left: 9 13)\n13 / 9 = 1.444 (left: 1.444)",
                "7 - 3 = 4 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 + 8 = 11 (left: 8 11)\n8 * 11 = 88 (left: 88)"
            ],
            "values": [
                0.002,
                0.0,
                0.001,
                0.003,
                0.003
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 0.171811
    },
    "910": {
        "input": "4 5 7 9",
        "step_1": {
            "steps": [
                "4 + 7 = 11 (left: 11 5 9)",
                "5 * 7 = 35 (left: 4 35 9)",
                "7 - 5 = 2 (left: 4 2 9)",
                "4 * 5 = 20 (left: 20 7 9)",
                "9 - 7 = 2 (left: 4 5 2)"
            ],
            "values": [
                3.0,
                21.001,
                3.0,
                22.0,
                3.0
            ],
            "resampled": [
                "0 <- 0",
                "1 <- 1",
                "2 <- 1",
                "3 <- 0",
                "4 <- 0"
            ],
            "resampled_steps": [
                "4 + 7 = 11 (left: 11 5 9)",
                "5 * 7 = 35 (left: 4 35 9)",
                "5 * 7 = 35 (left: 4 35 9)",
                "4 + 7 = 11 (left: 11 5 9)",
                "4 + 7 = 11 (left: 11 5 9)"
            ]
        },
        "step_2": {
            "steps": [
                "4 + 7 = 11 (left: 11 5 9)\n11 * 5 = 55 (left: 55 9)",
                "5 * 7 = 35 (left: 4 35 9)\n4 + 35 = 39 (left: 39 9)",
                "5 * 7 = 35 (left: 4 35 9)\n35 - 4 = 31 (left: 31 9)",
                "4 + 7 = 11 (left: 11 5 9)\n11 / 5 = 2.2 (left: 2.2 9)",
                "4 + 7 = 11 (left: 11 5 9)\n11 - 5 = 6 (left: 6 9)"
            ],
            "values": [
                0.003,
                0.003,
                0.003,
                3.0,
                0.003
            ],
            "resampled": [
                "0 <- 3",
                "1 <- 3",
                "2 <- 3",
                "3 <- 3",
                "4 <- 3"
            ],
            "resampled_steps": [
                "4 + 7 = 11 (left: 11 5 9)\n11 / 5 = 2.2 (left: 2.2 9)",
                "4 + 7 = 11 (left: 11 5 9)\n11 / 5 = 2.2 (left: 2.2 9)",
                "4 + 7 = 11 (left: 11 5 9)\n11 / 5 = 2.2 (left: 2.2 9)",
                "4 + 7 = 11 (left: 11 5 9)\n11 / 5 = 2.2 (left: 2.2 9)",
                "4 + 7 = 11 (left: 11 5 9)\n11 / 5 = 2.2 (left: 2.2 9)"
            ]
        },
        "step_3": {
            "steps": [
                "4 + 7 = 11 (left: 11 5 9)\n11 / 5 = 2.2 (left: 2.2 9)\n2.2^9 = 512. (left: 512.)",
                "4 + 7 = 11 (left: 11 5 9)\n11 / 5 = 2.2 (left: 2.2 9)\n9 - 2.2 = 6.8 (left: 6.8)",
                "4 + 7 = 11 (left: 11 5 9)\n11 / 5 = 2.2 (left: 2.2 9)\n9 / 2.2 = 4.09 (left: 4.09)",
                "4 + 7 = 11 (left: 11 5 9)\n11 / 5 = 2.2 (left: 2.2 9)\n2.2 * 9 = 19.8 (left: 19.8)",
                "4 + 7 = 11 (left: 11 5 9)\n11 / 5 = 2.2 (left: 2.2 9)\n9 / 2.2 = 4.09 (left: 4.09)"
            ],
            "values": [
                0.0,
                0.003,
                0.003,
                0.002,
                0.001
            ],
            "resampled": [
                "0 <- 4",
                "1 <- 4",
                "2 <- 2",
                "3 <- 3",
                "4 <- 2"
            ],
            "resampled_steps": [
                "4 + 7 = 11 (left: 11 5 9)\n11 / 5 = 2.2 (left: 2.2 9)\n9 / 2.2 = 4.09 (left: 4.09)",
                "4 + 7 = 11 (left: 11 5 9)\n11 / 5 = 2.2 (left: 2.2 9)\n9 / 2.2 = 4.09 (left: 4.09)",
                "4 + 7 = 11 (left: 11 5 9)\n11 / 5 = 2.2 (left: 2.2 9)\n9 / 2.2 = 4.09 (left: 4.09)",
                "4 + 7 = 11 (left: 11 5 9)\n11 / 5 = 2.2 (left: 2.2 9)\n2.2 * 9 = 19.8 (left: 19.8)",
                "4 + 7 = 11 (left: 11 5 9)\n11 / 5 = 2.2 (left: 2.2 9)\n9 / 2.2 = 4.09 (left: 4.09)"
            ]
        },
        "step_4": {
            "steps": [
                "4 + 7 = 11 (left: 11 5 9)\n11 / 5 = 2.2 (left: 2.2 9)\n9 / 2.2 = 4.09 (left: 4.09)\n4.09 - 8 = -3.91",
                "4 + 7 = 11 (left: 11 5 9)\n11 / 5 = 2.2 (left: 2.2 9)\n9 / 2.2 = 4.09 (left: 4.09)\nThere are multiple possible next steps for the input 4.09, depending on the operations allowed (such as addition, subtraction, multiplication, division, etc.) and the numbers available for use. Without more specific information, it is not possible to determine the exact next steps.",
                "4 + 7 = 11 (left: 11 5 9)\n11 / 5 = 2.2 (left: 2.2 9)\n9 / 2.2 = 4.09 (left: 4.09)\n4.09 - 2 = 2.09",
                "4 + 7 = 11 (left: 11 5 9)\n11 / 5 = 2.2 (left: 2.2 9)\n2.2 * 9 = 19.8 (left: 19.8)\nIt seems that the input \"19.8\" is a decimal number. If you would like to perform mathematical operations on this number, please specify the operations you would like to see.",
                "4 + 7 = 11 (left: 11 5 9)\n11 / 5 = 2.2 (left: 2.2 9)\n9 / 2.2 = 4.09 (left: 4.09)\n4.09 - 2 = 2.09"
            ],
            "values": [
                0.003,
                0.003,
                0.003,
                0.003,
                0.003
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 0.189044
    },
    "911": {
        "input": "1 2 8 13",
        "step_1": {
            "steps": [
                "13 - 1 = 12 (left: 2 8 12)",
                "13 - 1 = 12 (left: 2 8 12)",
                "8 + 2 = 10 (left: 1 10 13)",
                "1 + 2 = 3 (left: 3 8 13)",
                "8 - 2 = 6 (left: 1 6 13)"
            ],
            "values": [
                2.001,
                0.003,
                1.001,
                60.0,
                0.003
            ],
            "resampled": [
                "0 <- 3",
                "1 <- 3",
                "2 <- 3",
                "3 <- 3",
                "4 <- 3"
            ],
            "resampled_steps": [
                "1 + 2 = 3 (left: 3 8 13)",
                "1 + 2 = 3 (left: 3 8 13)",
                "1 + 2 = 3 (left: 3 8 13)",
                "1 + 2 = 3 (left: 3 8 13)",
                "1 + 2 = 3 (left: 3 8 13)"
            ]
        },
        "step_2": {
            "steps": [
                "1 + 2 = 3 (left: 3 8 13)\n13 / 3 = 4.33 (left: 4.33 8)",
                "1 + 2 = 3 (left: 3 8 13)\n3 * 8 = 24 (left: 24 13)",
                "1 + 2 = 3 (left: 3 8 13)\n13 - 3 = 10 (left: 8 10)",
                "1 + 2 = 3 (left: 3 8 13)\n3 + 8 = 11 (left: 11 13)",
                "1 + 2 = 3 (left: 3 8 13)\n13 + 3 = 16 (left: 8 16 13)"
            ],
            "values": [
                1.001,
                20.001,
                1.002,
                60.0,
                3.0
            ],
            "resampled": [
                "0 <- 3",
                "1 <- 3",
                "2 <- 3",
                "3 <- 3",
                "4 <- 1"
            ],
            "resampled_steps": [
                "1 + 2 = 3 (left: 3 8 13)\n3 + 8 = 11 (left: 11 13)",
                "1 + 2 = 3 (left: 3 8 13)\n3 + 8 = 11 (left: 11 13)",
                "1 + 2 = 3 (left: 3 8 13)\n3 + 8 = 11 (left: 11 13)",
                "1 + 2 = 3 (left: 3 8 13)\n3 + 8 = 11 (left: 11 13)",
                "1 + 2 = 3 (left: 3 8 13)\n3 * 8 = 24 (left: 24 13)"
            ]
        },
        "step_3": {
            "steps": [
                "1 + 2 = 3 (left: 3 8 13)\n3 + 8 = 11 (left: 11 13)\n13 / 11 = 1.182 (left: 1.182)",
                "1 + 2 = 3 (left: 3 8 13)\n3 + 8 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)",
                "1 + 2 = 3 (left: 3 8 13)\n3 + 8 = 11 (left: 11 13)\n11 - 13 = -2 (left: -2)",
                "1 + 2 = 3 (left: 3 8 13)\n3 + 8 = 11 (left: 11 13)\n13 / 11 = 1.1818 (left: 1.1818)",
                "1 + 2 = 3 (left: 3 8 13)\n3 * 8 = 24 (left: 24 13)\n24 + 13 = 37 (left: 37)"
            ],
            "values": [
                0.003,
                40.0,
                0.002,
                0.002,
                0.002
            ],
            "resampled": [
                "0 <- 1",
                "1 <- 1",
                "2 <- 1",
                "3 <- 1",
                "4 <- 1"
            ],
            "resampled_steps": [
                "1 + 2 = 3 (left: 3 8 13)\n3 + 8 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)",
                "1 + 2 = 3 (left: 3 8 13)\n3 + 8 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)",
                "1 + 2 = 3 (left: 3 8 13)\n3 + 8 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)",
                "1 + 2 = 3 (left: 3 8 13)\n3 + 8 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)",
                "1 + 2 = 3 (left: 3 8 13)\n3 + 8 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)"
            ]
        },
        "step_4": {
            "steps": [
                "1 + 2 = 3 (left: 3 8 13)\n3 + 8 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: ((1 + 2) + 8) + 13 = 24",
                "1 + 2 = 3 (left: 3 8 13)\n3 + 8 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: ((1 + 2) + 8) + 13 = 24",
                "1 + 2 = 3 (left: 3 8 13)\n3 + 8 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: ((1 + 2) + 8) + 13 = 24",
                "1 + 2 = 3 (left: 3 8 13)\n3 + 8 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: ((1 + 2) + 8) + 13 = 24",
                "1 + 2 = 3 (left: 3 8 13)\n3 + 8 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: ((1 + 2) + 8) + 13 = 24"
            ],
            "values": [
                60.0,
                60.0,
                60.0,
                40.001,
                40.001
            ]
        },
        "results": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            }
        ],
        "cost": 0.20615700000000003
    },
    "912": {
        "input": "4 6 6 9",
        "step_1": {
            "steps": [
                "9 / 3 = 3 (left: 4 6 3)",
                "6 / 4 = 1.5 (left: 1.5 6 9)",
                "6 / 4 = 1.5 (left: 1.5 6 9)",
                "9 - 6 = 3 (left: 4 6 3)",
                "9 - 6 = 3 (left: 4 6 3)"
            ],
            "values": [
                41.0,
                3.0,
                3.0,
                2.001,
                41.0
            ],
            "resampled": [
                "0 <- 0",
                "1 <- 4",
                "2 <- 4",
                "3 <- 0",
                "4 <- 4"
            ],
            "resampled_steps": [
                "9 / 3 = 3 (left: 4 6 3)",
                "9 - 6 = 3 (left: 4 6 3)",
                "9 - 6 = 3 (left: 4 6 3)",
                "9 / 3 = 3 (left: 4 6 3)",
                "9 - 6 = 3 (left: 4 6 3)"
            ]
        },
        "step_2": {
            "steps": [
                "9 / 3 = 3 (left: 4 6 3)\n6 - 3 = 3 (left: 4 3)",
                "9 - 6 = 3 (left: 4 6 3)\n6 / 3 = 2 (left: 4 2)",
                "9 - 6 = 3 (left: 4 6 3)\n4 - 3 = 1 (left: 1 3)",
                "9 / 3 = 3 (left: 4 6 3)\n4 / 6 = 0.66666666667 (left: 0.66666666667 3)",
                "9 - 6 = 3 (left: 4 6 3)\n6 * 3 = 18 (left: 4 18)"
            ],
            "values": [
                21.0,
                1.001,
                1.001,
                3.0,
                0.002
            ],
            "resampled": [
                "0 <- 0",
                "1 <- 0",
                "2 <- 0",
                "3 <- 0",
                "4 <- 0"
            ],
            "resampled_steps": [
                "9 / 3 = 3 (left: 4 6 3)\n6 - 3 = 3 (left: 4 3)",
                "9 / 3 = 3 (left: 4 6 3)\n6 - 3 = 3 (left: 4 3)",
                "9 / 3 = 3 (left: 4 6 3)\n6 - 3 = 3 (left: 4 3)",
                "9 / 3 = 3 (left: 4 6 3)\n6 - 3 = 3 (left: 4 3)",
                "9 / 3 = 3 (left: 4 6 3)\n6 - 3 = 3 (left: 4 3)"
            ]
        },
        "step_3": {
            "steps": [
                "9 / 3 = 3 (left: 4 6 3)\n6 - 3 = 3 (left: 4 3)\n4 - 3 = 1 (left: 1)",
                "9 / 3 = 3 (left: 4 6 3)\n6 - 3 = 3 (left: 4 3)\n4 / 3 = 1.33 (left: 1.33)",
                "9 / 3 = 3 (left: 4 6 3)\n6 - 3 = 3 (left: 4 3)\n4 + 3 = 7 (left: 7)",
                "9 / 3 = 3 (left: 4 6 3)\n6 - 3 = 3 (left: 4 3)\n4 - 3 = 1 (left: 1)",
                "9 / 3 = 3 (left: 4 6 3)\n6 - 3 = 3 (left: 4 3)\n4 - 3 = 1 (left: 3 1)"
            ],
            "values": [
                0.003,
                0.003,
                0.003,
                0.003,
                40.001
            ],
            "resampled": [
                "0 <- 4",
                "1 <- 4",
                "2 <- 4",
                "3 <- 4",
                "4 <- 4"
            ],
            "resampled_steps": [
                "9 / 3 = 3 (left: 4 6 3)\n6 - 3 = 3 (left: 4 3)\n4 - 3 = 1 (left: 3 1)",
                "9 / 3 = 3 (left: 4 6 3)\n6 - 3 = 3 (left: 4 3)\n4 - 3 = 1 (left: 3 1)",
                "9 / 3 = 3 (left: 4 6 3)\n6 - 3 = 3 (left: 4 3)\n4 - 3 = 1 (left: 3 1)",
                "9 / 3 = 3 (left: 4 6 3)\n6 - 3 = 3 (left: 4 3)\n4 - 3 = 1 (left: 3 1)",
                "9 / 3 = 3 (left: 4 6 3)\n6 - 3 = 3 (left: 4 3)\n4 - 3 = 1 (left: 3 1)"
            ]
        },
        "step_4": {
            "steps": [
                "9 / 3 = 3 (left: 4 6 3)\n6 - 3 = 3 (left: 4 3)\n4 - 3 = 1 (left: 3 1)\n3 * 1 = 3 (left: 3)",
                "9 / 3 = 3 (left: 4 6 3)\n6 - 3 = 3 (left: 4 3)\n4 - 3 = 1 (left: 3 1)\n3 * 1 = 3 (left: 3)",
                "9 / 3 = 3 (left: 4 6 3)\n6 - 3 = 3 (left: 4 3)\n4 - 3 = 1 (left: 3 1)\n3 * 1 = 3 (left: 3 1)",
                "9 / 3 = 3 (left: 4 6 3)\n6 - 3 = 3 (left: 4 3)\n4 - 3 = 1 (left: 3 1)\n3 / 1 = 3 (left: 3 1)",
                "9 / 3 = 3 (left: 4 6 3)\n6 - 3 = 3 (left: 4 3)\n4 - 3 = 1 (left: 3 1)\n3 / 1 = 3 (left: 3 1)"
            ],
            "values": [
                0.003,
                0.002,
                20.0,
                20.001,
                20.001
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 0.222976
    },
    "913": {
        "input": "1 4 4 8",
        "step_1": {
            "steps": [
                "8 - 4 = 4 (left: 4 4 4)",
                "8 / 4 = 2 (left: 2 4 8)",
                "8 - 4 = 4 (left: 1 4 4)",
                "1 + 4 = 5 (left: 4 5 8)",
                "8 - 4 = 4 (left: 1 4 4)"
            ],
            "values": [
                2.001,
                20.002,
                1.002,
                2.0,
                20.002
            ],
            "resampled": [
                "0 <- 4",
                "1 <- 1",
                "2 <- 4",
                "3 <- 1",
                "4 <- 1"
            ],
            "resampled_steps": [
                "8 - 4 = 4 (left: 1 4 4)",
                "8 / 4 = 2 (left: 2 4 8)",
                "8 - 4 = 4 (left: 1 4 4)",
                "8 / 4 = 2 (left: 2 4 8)",
                "8 / 4 = 2 (left: 2 4 8)"
            ]
        },
        "step_2": {
            "steps": [
                "8 - 4 = 4 (left: 1 4 4)\n1 * 4 = 4 (left: 4 4)",
                "8 / 4 = 2 (left: 2 4 8)\n4 * 2 = 8 (left: 8 8)",
                "8 - 4 = 4 (left: 1 4 4)\n4 / 1 = 4 (left: 4 4)",
                "8 / 4 = 2 (left: 2 4 8)\n8 / 2 = 4 (left: 4 8)",
                "8 / 4 = 2 (left: 2 4 8)\n4 * 2 = 8 (left: 8 8)"
            ],
            "values": [
                1.001,
                0.003,
                1.001,
                21.0,
                0.002
            ],
            "resampled": [
                "0 <- 3",
                "1 <- 3",
                "2 <- 2",
                "3 <- 0",
                "4 <- 3"
            ],
            "resampled_steps": [
                "8 / 4 = 2 (left: 2 4 8)\n8 / 2 = 4 (left: 4 8)",
                "8 / 4 = 2 (left: 2 4 8)\n8 / 2 = 4 (left: 4 8)",
                "8 - 4 = 4 (left: 1 4 4)\n4 / 1 = 4 (left: 4 4)",
                "8 - 4 = 4 (left: 1 4 4)\n1 * 4 = 4 (left: 4 4)",
                "8 / 4 = 2 (left: 2 4 8)\n8 / 2 = 4 (left: 4 8)"
            ]
        },
        "step_3": {
            "steps": [
                "8 / 4 = 2 (left: 2 4 8)\n8 / 2 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)",
                "8 / 4 = 2 (left: 2 4 8)\n8 / 2 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)",
                "8 - 4 = 4 (left: 1 4 4)\n4 / 1 = 4 (left: 4 4)\n4 * 4 = 16 (left: 16)",
                "8 - 4 = 4 (left: 1 4 4)\n1 * 4 = 4 (left: 4 4)\n4 / 4 = 1 (left: 1)",
                "8 / 4 = 2 (left: 2 4 8)\n8 / 2 = 4 (left: 4 8)\n8 - 4 = 4 (left: 4 8)"
            ],
            "values": [
                0.003,
                40.0,
                0.002,
                0.003,
                20.001
            ],
            "resampled": [
                "0 <- 1",
                "1 <- 4",
                "2 <- 1",
                "3 <- 4",
                "4 <- 4"
            ],
            "resampled_steps": [
                "8 / 4 = 2 (left: 2 4 8)\n8 / 2 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)",
                "8 / 4 = 2 (left: 2 4 8)\n8 / 2 = 4 (left: 4 8)\n8 - 4 = 4 (left: 4 8)",
                "8 / 4 = 2 (left: 2 4 8)\n8 / 2 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)",
                "8 / 4 = 2 (left: 2 4 8)\n8 / 2 = 4 (left: 4 8)\n8 - 4 = 4 (left: 4 8)",
                "8 / 4 = 2 (left: 2 4 8)\n8 / 2 = 4 (left: 4 8)\n8 - 4 = 4 (left: 4 8)"
            ]
        },
        "step_4": {
            "steps": [
                "8 / 4 = 2 (left: 2 4 8)\n8 / 2 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n8 * 4 = 32 (left: 4)",
                "8 / 4 = 2 (left: 2 4 8)\n8 / 2 = 4 (left: 4 8)\n8 - 4 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)",
                "8 / 4 = 2 (left: 2 4 8)\n8 / 2 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n8 + 32 = 40 (left: 40)",
                "8 / 4 = 2 (left: 2 4 8)\n8 / 2 = 4 (left: 4 8)\n8 - 4 = 4 (left: 4 8)\n4 + 8 = 12 (left: 8 12)",
                "8 / 4 = 2 (left: 2 4 8)\n8 / 2 = 4 (left: 4 8)\n8 - 4 = 4 (left: 4 8)\n4 + 8 = 12 (left: 8 12)"
            ],
            "values": [
                0.002,
                0.003,
                20.002,
                0.002,
                0.002
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 0.239478
    },
    "914": {
        "input": "1 5 10 11",
        "step_1": {
            "steps": [
                "10 + 1 = 11 (left: 5 11)",
                "5 * 2 = 10 (left: 1 10 11)",
                "10 + 1 = 11 (left: 5 11)",
                "10 + 1 = 11 (left: 5 10 11)",
                "10 - 1 = 9 (left: 9 5 11)"
            ],
            "values": [
                0.002,
                0.003,
                1.002,
                1.001,
                3.0
            ],
            "resampled": [
                "0 <- 4",
                "1 <- 2",
                "2 <- 4",
                "3 <- 2",
                "4 <- 4"
            ],
            "resampled_steps": [
                "10 - 1 = 9 (left: 9 5 11)",
                "10 + 1 = 11 (left: 5 11)",
                "10 - 1 = 9 (left: 9 5 11)",
                "10 + 1 = 11 (left: 5 11)",
                "10 - 1 = 9 (left: 9 5 11)"
            ]
        },
        "step_2": {
            "steps": [
                "10 - 1 = 9 (left: 9 5 11)\n11 / 5 = 2.2 (left: 9 2.2)",
                "10 + 1 = 11 (left: 5 11)\n11 / 5 = 2.2 (left: 5 2.2)",
                "10 - 1 = 9 (left: 9 5 11)\n9 + 5 = 14 (left: 14 11)",
                "10 + 1 = 11 (left: 5 11)\n11 / 5 = 2.2 (left: 2.2)",
                "10 - 1 = 9 (left: 9 5 11)\n9 + 5 = 14 (left: 14 11)"
            ],
            "values": [
                2.001,
                3.0,
                0.003,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 1",
                "1 <- 1",
                "2 <- 1",
                "3 <- 1",
                "4 <- 1"
            ],
            "resampled_steps": [
                "10 + 1 = 11 (left: 5 11)\n11 / 5 = 2.2 (left: 5 2.2)",
                "10 + 1 = 11 (left: 5 11)\n11 / 5 = 2.2 (left: 5 2.2)",
                "10 + 1 = 11 (left: 5 11)\n11 / 5 = 2.2 (left: 5 2.2)",
                "10 + 1 = 11 (left: 5 11)\n11 / 5 = 2.2 (left: 5 2.2)",
                "10 + 1 = 11 (left: 5 11)\n11 / 5 = 2.2 (left: 5 2.2)"
            ]
        },
        "step_3": {
            "steps": [
                "10 + 1 = 11 (left: 5 11)\n11 / 5 = 2.2 (left: 5 2.2)\n5 + 2.2 = 7.2 (left: 7.2)",
                "10 + 1 = 11 (left: 5 11)\n11 / 5 = 2.2 (left: 5 2.2)\n5 / 2.2 = 2.2727 (left: 2.2727)",
                "10 + 1 = 11 (left: 5 11)\n11 / 5 = 2.2 (left: 5 2.2)\n5 / 2.2 = 2.2727 (left: 2.2727)",
                "10 + 1 = 11 (left: 5 11)\n11 / 5 = 2.2 (left: 5 2.2)\n5 - 2.2 = 2.8",
                "10 + 1 = 11 (left: 5 11)\n11 / 5 = 2.2 (left: 5 2.2)\n5 + 2.2 = 7.2 (left: 7.2)"
            ],
            "values": [
                0.0,
                0.001,
                0.002,
                0.003,
                0.002
            ],
            "resampled": [
                "0 <- 3",
                "1 <- 4",
                "2 <- 3",
                "3 <- 2",
                "4 <- 2"
            ],
            "resampled_steps": [
                "10 + 1 = 11 (left: 5 11)\n11 / 5 = 2.2 (left: 5 2.2)\n5 - 2.2 = 2.8",
                "10 + 1 = 11 (left: 5 11)\n11 / 5 = 2.2 (left: 5 2.2)\n5 + 2.2 = 7.2 (left: 7.2)",
                "10 + 1 = 11 (left: 5 11)\n11 / 5 = 2.2 (left: 5 2.2)\n5 - 2.2 = 2.8",
                "10 + 1 = 11 (left: 5 11)\n11 / 5 = 2.2 (left: 5 2.2)\n5 / 2.2 = 2.2727 (left: 2.2727)",
                "10 + 1 = 11 (left: 5 11)\n11 / 5 = 2.2 (left: 5 2.2)\n5 / 2.2 = 2.2727 (left: 2.2727)"
            ]
        },
        "step_4": {
            "steps": [
                "10 + 1 = 11 (left: 5 11)\n11 / 5 = 2.2 (left: 5 2.2)\n5 - 2.2 = 2.8\n5 / 2.2 = 2.27272727 (left: 2.27272727)",
                "10 + 1 = 11 (left: 5 11)\n11 / 5 = 2.2 (left: 5 2.2)\n5 + 2.2 = 7.2 (left: 7.2)\n7.2 / 8 = 0.9 (left: 0.9)",
                "10 + 1 = 11 (left: 5 11)\n11 / 5 = 2.2 (left: 5 2.2)\n5 - 2.2 = 2.8\n5 + 2.2 = 7.2 (left: 7.2 2.8)",
                "10 + 1 = 11 (left: 5 11)\n11 / 5 = 2.2 (left: 5 2.2)\n5 / 2.2 = 2.2727 (left: 2.2727)\n2.2727 * 8 = 18.1816",
                "10 + 1 = 11 (left: 5 11)\n11 / 5 = 2.2 (left: 5 2.2)\n5 / 2.2 = 2.2727 (left: 2.2727)\n2.2727 + 2 = 4.2727"
            ],
            "values": [
                0.001,
                0.003,
                3.0,
                0.003,
                0.003
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 0.255751
    },
    "915": {
        "input": "3 4 6 11",
        "step_1": {
            "steps": [
                "11 - 6 = 5 (left: 3 4 5)",
                "4 / 3 = 1.33 (left: 1.33 6 11)",
                "3 + 4 = 7 (left: 6 7 11)",
                "3 + 4 = 7 (left: 7 6 11)",
                "11 - 6 = 5 (left: 3 4 5)"
            ],
            "values": [
                2.001,
                2.001,
                22.0,
                3.0,
                3.0
            ],
            "resampled": [
                "0 <- 3",
                "1 <- 3",
                "2 <- 0",
                "3 <- 2",
                "4 <- 2"
            ],
            "resampled_steps": [
                "3 + 4 = 7 (left: 7 6 11)",
                "3 + 4 = 7 (left: 7 6 11)",
                "11 - 6 = 5 (left: 3 4 5)",
                "3 + 4 = 7 (left: 6 7 11)",
                "3 + 4 = 7 (left: 6 7 11)"
            ]
        },
        "step_2": {
            "steps": [
                "3 + 4 = 7 (left: 7 6 11)\n11 - 6 = 5 (left: 5 6)",
                "3 + 4 = 7 (left: 7 6 11)\n6 + 11 = 17 (left: 7 17)",
                "11 - 6 = 5 (left: 3 4 5)\n4 * 5 = 20 (left: 3 20)",
                "3 + 4 = 7 (left: 6 7 11)\n11 - 6 = 5 (left: 5 7)",
                "3 + 4 = 7 (left: 6 7 11)\n7 * 11 = 77 (left: 6 77)"
            ],
            "values": [
                1.001,
                41.0,
                1.001,
                1.0,
                0.003
            ],
            "resampled": [
                "0 <- 1",
                "1 <- 1",
                "2 <- 1",
                "3 <- 1",
                "4 <- 1"
            ],
            "resampled_steps": [
                "3 + 4 = 7 (left: 7 6 11)\n6 + 11 = 17 (left: 7 17)",
                "3 + 4 = 7 (left: 7 6 11)\n6 + 11 = 17 (left: 7 17)",
                "3 + 4 = 7 (left: 7 6 11)\n6 + 11 = 17 (left: 7 17)",
                "3 + 4 = 7 (left: 7 6 11)\n6 + 11 = 17 (left: 7 17)",
                "3 + 4 = 7 (left: 7 6 11)\n6 + 11 = 17 (left: 7 17)"
            ]
        },
        "step_3": {
            "steps": [
                "3 + 4 = 7 (left: 7 6 11)\n6 + 11 = 17 (left: 7 17)\n7 + 17 = 24 (left: 24)",
                "3 + 4 = 7 (left: 7 6 11)\n6 + 11 = 17 (left: 7 17)\n17 / 7 = 2.42857142857 (left: 2.42857142857)",
                "3 + 4 = 7 (left: 7 6 11)\n6 + 11 = 17 (left: 7 17)\n17 / 7 = 2.42857142857 (left: 2.42857142857 17)",
                "3 + 4 = 7 (left: 7 6 11)\n6 + 11 = 17 (left: 7 17)\n7 * 17 = 119 (left: 119)",
                "3 + 4 = 7 (left: 7 6 11)\n6 + 11 = 17 (left: 7 17)\n7 - 17 = -10 (left: -10)"
            ],
            "values": [
                40.0,
                0.002,
                0.003,
                0.002,
                0.003
            ],
            "resampled": [
                "0 <- 0",
                "1 <- 0",
                "2 <- 0",
                "3 <- 0",
                "4 <- 0"
            ],
            "resampled_steps": [
                "3 + 4 = 7 (left: 7 6 11)\n6 + 11 = 17 (left: 7 17)\n7 + 17 = 24 (left: 24)",
                "3 + 4 = 7 (left: 7 6 11)\n6 + 11 = 17 (left: 7 17)\n7 + 17 = 24 (left: 24)",
                "3 + 4 = 7 (left: 7 6 11)\n6 + 11 = 17 (left: 7 17)\n7 + 17 = 24 (left: 24)",
                "3 + 4 = 7 (left: 7 6 11)\n6 + 11 = 17 (left: 7 17)\n7 + 17 = 24 (left: 24)",
                "3 + 4 = 7 (left: 7 6 11)\n6 + 11 = 17 (left: 7 17)\n7 + 17 = 24 (left: 24)"
            ]
        },
        "step_4": {
            "steps": [
                "3 + 4 = 7 (left: 7 6 11)\n6 + 11 = 17 (left: 7 17)\n7 + 17 = 24 (left: 24)\nAnswer: ((3 + 4) + 6) + 11 = 24",
                "3 + 4 = 7 (left: 7 6 11)\n6 + 11 = 17 (left: 7 17)\n7 + 17 = 24 (left: 24)\nAnswer: ((3 + 4) + (6 + 11)) = 24",
                "3 + 4 = 7 (left: 7 6 11)\n6 + 11 = 17 (left: 7 17)\n7 + 17 = 24 (left: 24)\nAnswer: ((3 + 4) + 6) + 11 = 24",
                "3 + 4 = 7 (left: 7 6 11)\n6 + 11 = 17 (left: 7 17)\n7 + 17 = 24 (left: 24)\nAnswer: ((3 + 4) + 6) + 11 = 24",
                "3 + 4 = 7 (left: 7 6 11)\n6 + 11 = 17 (left: 7 17)\n7 + 17 = 24 (left: 24)\nAnswer: ((3 + 4) + 6) + 11 = 24"
            ],
            "values": [
                40.001,
                20.002,
                40.001,
                0.003,
                60.0
            ]
        },
        "results": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            }
        ],
        "cost": 0.273121
    },
    "916": {
        "input": "2 4 8 9",
        "step_1": {
            "steps": [
                "9 - 8 = 1 (left: 2 8 1)",
                "4 * 2 = 8 (left: 8 8 9)",
                "9 - 2 = 7 (left: 2 4 7)",
                "4 * 2 = 8 (left: 8 8 9)",
                "8 / 2 = 4 (left: 4 8 9)"
            ],
            "values": [
                22.0,
                1.002,
                3.0,
                1.002,
                2.0
            ],
            "resampled": [
                "0 <- 0",
                "1 <- 0",
                "2 <- 0",
                "3 <- 0",
                "4 <- 0"
            ],
            "resampled_steps": [
                "9 - 8 = 1 (left: 2 8 1)",
                "9 - 8 = 1 (left: 2 8 1)",
                "9 - 8 = 1 (left: 2 8 1)",
                "9 - 8 = 1 (left: 2 8 1)",
                "9 - 8 = 1 (left: 2 8 1)"
            ]
        },
        "step_2": {
            "steps": [
                "9 - 8 = 1 (left: 2 8 1)\n8 - 1 = 7 (left: 2 7)",
                "9 - 8 = 1 (left: 2 8 1)\n8 - 1 = 7 (left: 7)",
                "9 - 8 = 1 (left: 2 8 1)\n2 + 8 = 10 (left: 10 1)",
                "9 - 8 = 1 (left: 2 8 1)\n1 + 2 = 3 (left: 8 3)",
                "9 - 8 = 1 (left: 2 8 1)\n8 / 2 = 4 (left: 4 1)"
            ],
            "values": [
                1.001,
                0.002,
                0.002,
                60.0,
                40.001
            ],
            "resampled": [
                "0 <- 3",
                "1 <- 3",
                "2 <- 3",
                "3 <- 3",
                "4 <- 3"
            ],
            "resampled_steps": [
                "9 - 8 = 1 (left: 2 8 1)\n1 + 2 = 3 (left: 8 3)",
                "9 - 8 = 1 (left: 2 8 1)\n1 + 2 = 3 (left: 8 3)",
                "9 - 8 = 1 (left: 2 8 1)\n1 + 2 = 3 (left: 8 3)",
                "9 - 8 = 1 (left: 2 8 1)\n1 + 2 = 3 (left: 8 3)",
                "9 - 8 = 1 (left: 2 8 1)\n1 + 2 = 3 (left: 8 3)"
            ]
        },
        "step_3": {
            "steps": [
                "9 - 8 = 1 (left: 2 8 1)\n1 + 2 = 3 (left: 8 3)\n8 * 3 = 24 (left: 24)",
                "9 - 8 = 1 (left: 2 8 1)\n1 + 2 = 3 (left: 8 3)\n8 - 3 = 5 (left: 5)",
                "9 - 8 = 1 (left: 2 8 1)\n1 + 2 = 3 (left: 8 3)\n8 + 3 = 11 (left: 11)",
                "9 - 8 = 1 (left: 2 8 1)\n1 + 2 = 3 (left: 8 3)\n8 - 3 = 5 (left: 5)",
                "9 - 8 = 1 (left: 2 8 1)\n1 + 2 = 3 (left: 8 3)\n8 + 3 = 11 (left: 11)"
            ],
            "values": [
                60.0,
                0.002,
                0.001,
                0.002,
                0.003
            ],
            "resampled": [
                "0 <- 0",
                "1 <- 0",
                "2 <- 0",
                "3 <- 0",
                "4 <- 0"
            ],
            "resampled_steps": [
                "9 - 8 = 1 (left: 2 8 1)\n1 + 2 = 3 (left: 8 3)\n8 * 3 = 24 (left: 24)",
                "9 - 8 = 1 (left: 2 8 1)\n1 + 2 = 3 (left: 8 3)\n8 * 3 = 24 (left: 24)",
                "9 - 8 = 1 (left: 2 8 1)\n1 + 2 = 3 (left: 8 3)\n8 * 3 = 24 (left: 24)",
                "9 - 8 = 1 (left: 2 8 1)\n1 + 2 = 3 (left: 8 3)\n8 * 3 = 24 (left: 24)",
                "9 - 8 = 1 (left: 2 8 1)\n1 + 2 = 3 (left: 8 3)\n8 * 3 = 24 (left: 24)"
            ]
        },
        "step_4": {
            "steps": [
                "9 - 8 = 1 (left: 2 8 1)\n1 + 2 = 3 (left: 8 3)\n8 * 3 = 24 (left: 24)\nAnswer: (2 + 9 - 8) * (4) = 24",
                "9 - 8 = 1 (left: 2 8 1)\n1 + 2 = 3 (left: 8 3)\n8 * 3 = 24 (left: 24)\nAnswer: (9 - 8) + (2 + 4) * 8 = 24",
                "9 - 8 = 1 (left: 2 8 1)\n1 + 2 = 3 (left: 8 3)\n8 * 3 = 24 (left: 24)\nAnswer: (9 - 8) + (2 + 4) * 8 = 24",
                "9 - 8 = 1 (left: 2 8 1)\n1 + 2 = 3 (left: 8 3)\n8 * 3 = 24 (left: 24)\nAnswer: (9 - 8 + 2) * 3 = 24",
                "9 - 8 = 1 (left: 2 8 1)\n1 + 2 = 3 (left: 8 3)\n8 * 3 = 24 (left: 24)\nAnswer: (2 + (9 - 8)) * 8 = 24"
            ],
            "values": [
                60.0,
                60.0,
                60.0,
                60.0,
                60.0
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 0.29007000000000005
    },
    "917": {
        "input": "1 4 5 13",
        "step_1": {
            "steps": [
                "1 + 4 = 5 (left: 5 5 13)",
                "13 - 1 = 12 (left: 4 5 12)",
                "5 * 2 = 10 (left: 1 10 13)",
                "5 * 4 = 20 (left: 1 20 13)",
                "13 - 1 = 12 (left: 4 5 12)"
            ],
            "values": [
                2.0,
                1.001,
                20.001,
                3.0,
                2.001
            ],
            "resampled": [
                "0 <- 2",
                "1 <- 2",
                "2 <- 1",
                "3 <- 2",
                "4 <- 3"
            ],
            "resampled_steps": [
                "5 * 2 = 10 (left: 1 10 13)",
                "5 * 2 = 10 (left: 1 10 13)",
                "13 - 1 = 12 (left: 4 5 12)",
                "5 * 2 = 10 (left: 1 10 13)",
                "5 * 4 = 20 (left: 1 20 13)"
            ]
        },
        "step_2": {
            "steps": [
                "5 * 2 = 10 (left: 1 10 13)\n10 / 1 = 10 (left: 10 13)",
                "5 * 2 = 10 (left: 1 10 13)\n10 + 1 = 11 (left: 11 13)",
                "13 - 1 = 12 (left: 4 5 12)\n12 / 4 = 3 (left: 3 5)",
                "5 * 2 = 10 (left: 1 10 13)\n10 - 1 = 9 (left: 9 13)",
                "5 * 4 = 20 (left: 1 20 13)\n20 - 13 = 7 (left: 1 7 13)"
            ],
            "values": [
                0.003,
                60.0,
                0.001,
                1.002,
                0.003
            ],
            "resampled": [
                "0 <- 1",
                "1 <- 1",
                "2 <- 1",
                "3 <- 1",
                "4 <- 1"
            ],
            "resampled_steps": [
                "5 * 2 = 10 (left: 1 10 13)\n10 + 1 = 11 (left: 11 13)",
                "5 * 2 = 10 (left: 1 10 13)\n10 + 1 = 11 (left: 11 13)",
                "5 * 2 = 10 (left: 1 10 13)\n10 + 1 = 11 (left: 11 13)",
                "5 * 2 = 10 (left: 1 10 13)\n10 + 1 = 11 (left: 11 13)",
                "5 * 2 = 10 (left: 1 10 13)\n10 + 1 = 11 (left: 11 13)"
            ]
        },
        "step_3": {
            "steps": [
                "5 * 2 = 10 (left: 1 10 13)\n10 + 1 = 11 (left: 11 13)\n11 * 13 = 143 (left: 143)",
                "5 * 2 = 10 (left: 1 10 13)\n10 + 1 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)",
                "5 * 2 = 10 (left: 1 10 13)\n10 + 1 = 11 (left: 11 13)\n11 * 13 = 143 (left: 13 143)",
                "5 * 2 = 10 (left: 1 10 13)\n10 + 1 = 11 (left: 11 13)\n13 / 11 = 1.1818181818181819 (left: 1.1818181818181819)",
                "5 * 2 = 10 (left: 1 10 13)\n10 + 1 = 11 (left: 11 13)\n11 * 13 = 143 (left: 143)"
            ],
            "values": [
                0.001,
                20.0,
                0.003,
                0.002,
                0.003
            ],
            "resampled": [
                "0 <- 1",
                "1 <- 1",
                "2 <- 1",
                "3 <- 1",
                "4 <- 1"
            ],
            "resampled_steps": [
                "5 * 2 = 10 (left: 1 10 13)\n10 + 1 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)",
                "5 * 2 = 10 (left: 1 10 13)\n10 + 1 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)",
                "5 * 2 = 10 (left: 1 10 13)\n10 + 1 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)",
                "5 * 2 = 10 (left: 1 10 13)\n10 + 1 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)",
                "5 * 2 = 10 (left: 1 10 13)\n10 + 1 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)"
            ]
        },
        "step_4": {
            "steps": [
                "5 * 2 = 10 (left: 1 10 13)\n10 + 1 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: ((1 * 5) + 4) + 13 = 24",
                "5 * 2 = 10 (left: 1 10 13)\n10 + 1 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: ((1 * 5) + 4) + 13 = 24",
                "5 * 2 = 10 (left: 1 10 13)\n10 + 1 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: ((5 * 2) + 1) + 13 = 24",
                "5 * 2 = 10 (left: 1 10 13)\n10 + 1 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: ((5 * 2) + 1) + 13 = 24",
                "5 * 2 = 10 (left: 1 10 13)\n10 + 1 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (5 * 2) + (10 + 1) + 13 = 24"
            ],
            "values": [
                60.0,
                60.0,
                20.002,
                0.003,
                0.003
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 0.30772700000000003
    },
    "918": {
        "input": "2 2 7 12",
        "step_1": {
            "steps": [
                "12 + 2 = 14 (left: 2 7 14)",
                "7 / 2 = 3.5 (left: 2 3.5 12)",
                "2 + 2 = 4 (left: 4 7 12)",
                "12 + 2 = 14 (left: 2 7 14)",
                "12 - 2 = 10 (left: 2 7 10)"
            ],
            "values": [
                21.001,
                3.0,
                1.002,
                2.001,
                60.0
            ],
            "resampled": [
                "0 <- 4",
                "1 <- 4",
                "2 <- 4",
                "3 <- 4",
                "4 <- 0"
            ],
            "resampled_steps": [
                "12 - 2 = 10 (left: 2 7 10)",
                "12 - 2 = 10 (left: 2 7 10)",
                "12 - 2 = 10 (left: 2 7 10)",
                "12 - 2 = 10 (left: 2 7 10)",
                "12 + 2 = 14 (left: 2 7 14)"
            ]
        },
        "step_2": {
            "steps": [
                "12 - 2 = 10 (left: 2 7 10)\n9 / 5 = 1.8 (left: 3 1.8)",
                "12 - 2 = 10 (left: 2 7 10)\n10 / 2 = 5 (left: 5 7)",
                "12 - 2 = 10 (left: 2 7 10)\n10 / 2 = 5 (left: 5 7)",
                "12 - 2 = 10 (left: 2 7 10)\n7 + 2 = 9 (left: 2 9 10)",
                "12 + 2 = 14 (left: 2 7 14)\n7 * 2 = 14 (left: 7 14)"
            ],
            "values": [
                1.002,
                1.001,
                0.002,
                2.001,
                1.001
            ],
            "resampled": [
                "0 <- 0",
                "1 <- 4",
                "2 <- 4",
                "3 <- 4",
                "4 <- 3"
            ],
            "resampled_steps": [
                "12 - 2 = 10 (left: 2 7 10)\n9 / 5 = 1.8 (left: 3 1.8)",
                "12 + 2 = 14 (left: 2 7 14)\n7 * 2 = 14 (left: 7 14)",
                "12 + 2 = 14 (left: 2 7 14)\n7 * 2 = 14 (left: 7 14)",
                "12 + 2 = 14 (left: 2 7 14)\n7 * 2 = 14 (left: 7 14)",
                "12 - 2 = 10 (left: 2 7 10)\n7 + 2 = 9 (left: 2 9 10)"
            ]
        },
        "step_3": {
            "steps": [
                "12 - 2 = 10 (left: 2 7 10)\n9 / 5 = 1.8 (left: 3 1.8)\n3 + 1.8 = 4.8 (left: 1.8 4.8)",
                "12 + 2 = 14 (left: 2 7 14)\n7 * 2 = 14 (left: 7 14)\n14 - 7 = 7 (left: 7)",
                "12 + 2 = 14 (left: 2 7 14)\n7 * 2 = 14 (left: 7 14)\n14 - 7 = 7 (left: 7) ",
                "12 + 2 = 14 (left: 2 7 14)\n7 * 2 = 14 (left: 7 14)\n7 + 14 = 21 (left: 21)",
                "12 - 2 = 10 (left: 2 7 10)\n7 + 2 = 9 (left: 2 9 10)\n2 + 9 = 11 (left: 10 11)"
            ],
            "values": [
                1.002,
                0.002,
                0.002,
                0.003,
                2.001
            ],
            "resampled": [
                "0 <- 4",
                "1 <- 0",
                "2 <- 0",
                "3 <- 4",
                "4 <- 4"
            ],
            "resampled_steps": [
                "12 - 2 = 10 (left: 2 7 10)\n7 + 2 = 9 (left: 2 9 10)\n2 + 9 = 11 (left: 10 11)",
                "12 - 2 = 10 (left: 2 7 10)\n9 / 5 = 1.8 (left: 3 1.8)\n3 + 1.8 = 4.8 (left: 1.8 4.8)",
                "12 - 2 = 10 (left: 2 7 10)\n9 / 5 = 1.8 (left: 3 1.8)\n3 + 1.8 = 4.8 (left: 1.8 4.8)",
                "12 - 2 = 10 (left: 2 7 10)\n7 + 2 = 9 (left: 2 9 10)\n2 + 9 = 11 (left: 10 11)",
                "12 - 2 = 10 (left: 2 7 10)\n7 + 2 = 9 (left: 2 9 10)\n2 + 9 = 11 (left: 10 11)"
            ]
        },
        "step_4": {
            "steps": [
                "12 - 2 = 10 (left: 2 7 10)\n7 + 2 = 9 (left: 2 9 10)\n2 + 9 = 11 (left: 10 11)\n10 * 11 = 110 (left: 110)",
                "12 - 2 = 10 (left: 2 7 10)\n9 / 5 = 1.8 (left: 3 1.8)\n3 + 1.8 = 4.8 (left: 1.8 4.8)\n4.8 / 1.8 = 2.6666666666666665 (left: 2.6666666666666665)",
                "12 - 2 = 10 (left: 2 7 10)\n9 / 5 = 1.8 (left: 3 1.8)\n3 + 1.8 = 4.8 (left: 1.8 4.8)\n1.8 * 4.8 = 8.64 (left: 8.64)",
                "12 - 2 = 10 (left: 2 7 10)\n7 + 2 = 9 (left: 2 9 10)\n2 + 9 = 11 (left: 10 11)\n10 + 11 = 21 (left: 21)",
                "12 - 2 = 10 (left: 2 7 10)\n7 + 2 = 9 (left: 2 9 10)\n2 + 9 = 11 (left: 10 11)\n10 * 11 = 110 (left: 11 110)"
            ],
            "values": [
                0.003,
                0.0,
                0.0,
                0.002,
                0.003
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 0.32562800000000003
    },
    "919": {
        "input": "3 3 6 7",
        "step_1": {
            "steps": [
                "3 + 3 = 6 (left: 6 6 7)",
                "7 - 3 = 4 (left: 3 6 4)",
                "7 - 6 = 1 (left: 3 3 1)",
                "7 - 3 = 4 (left: 3 6 4)",
                "6 / 3 = 2 (left: 2 3 7)"
            ],
            "values": [
                2.001,
                2.001,
                0.003,
                2.001,
                2.001
            ],
            "resampled": [
                "0 <- 3",
                "1 <- 1",
                "2 <- 3",
                "3 <- 1",
                "4 <- 0"
            ],
            "resampled_steps": [
                "7 - 3 = 4 (left: 3 6 4)",
                "7 - 3 = 4 (left: 3 6 4)",
                "7 - 3 = 4 (left: 3 6 4)",
                "7 - 3 = 4 (left: 3 6 4)",
                "3 + 3 = 6 (left: 6 6 7)"
            ]
        },
        "step_2": {
            "steps": [
                "7 - 3 = 4 (left: 3 6 4)\n4 / 3 = 1.33 (left: 1.33 6)",
                "7 - 3 = 4 (left: 3 6 4)\n6 / 3 = 2 (left: 2 4)",
                "7 - 3 = 4 (left: 3 6 4)\n3 + 6 = 9 (left: 4 9)",
                "7 - 3 = 4 (left: 3 6 4)\n6 - 3 = 3 (left: 3 4)",
                "3 + 3 = 6 (left: 6 6 7)\n7 / 6 = 1.16666666667 (left: 1.16666666667 6)"
            ],
            "values": [
                2.001,
                21.001,
                40.0,
                0.002,
                2.001
            ],
            "resampled": [
                "0 <- 2",
                "1 <- 1",
                "2 <- 1",
                "3 <- 0",
                "4 <- 1"
            ],
            "resampled_steps": [
                "7 - 3 = 4 (left: 3 6 4)\n3 + 6 = 9 (left: 4 9)",
                "7 - 3 = 4 (left: 3 6 4)\n6 / 3 = 2 (left: 2 4)",
                "7 - 3 = 4 (left: 3 6 4)\n6 / 3 = 2 (left: 2 4)",
                "7 - 3 = 4 (left: 3 6 4)\n4 / 3 = 1.33 (left: 1.33 6)",
                "7 - 3 = 4 (left: 3 6 4)\n6 / 3 = 2 (left: 2 4)"
            ]
        },
        "step_3": {
            "steps": [
                "7 - 3 = 4 (left: 3 6 4)\n3 + 6 = 9 (left: 4 9)\n4 * 9 = 36 (left: 9 36)",
                "7 - 3 = 4 (left: 3 6 4)\n6 / 3 = 2 (left: 2 4)\n2 * 4 = 8 (left: 8)",
                "7 - 3 = 4 (left: 3 6 4)\n6 / 3 = 2 (left: 2 4)\n2 * 4 = 8 (left: 4 8)",
                "7 - 3 = 4 (left: 3 6 4)\n4 / 3 = 1.33 (left: 1.33 6)\n1.33 * 6 = 7.98 (left: 7.98)",
                "7 - 3 = 4 (left: 3 6 4)\n6 / 3 = 2 (left: 2 4)\n2 + 4 = 6 (left: 4 6)"
            ],
            "values": [
                0.003,
                0.002,
                2.001,
                0.001,
                60.0
            ],
            "resampled": [
                "0 <- 4",
                "1 <- 4",
                "2 <- 4",
                "3 <- 4",
                "4 <- 4"
            ],
            "resampled_steps": [
                "7 - 3 = 4 (left: 3 6 4)\n6 / 3 = 2 (left: 2 4)\n2 + 4 = 6 (left: 4 6)",
                "7 - 3 = 4 (left: 3 6 4)\n6 / 3 = 2 (left: 2 4)\n2 + 4 = 6 (left: 4 6)",
                "7 - 3 = 4 (left: 3 6 4)\n6 / 3 = 2 (left: 2 4)\n2 + 4 = 6 (left: 4 6)",
                "7 - 3 = 4 (left: 3 6 4)\n6 / 3 = 2 (left: 2 4)\n2 + 4 = 6 (left: 4 6)",
                "7 - 3 = 4 (left: 3 6 4)\n6 / 3 = 2 (left: 2 4)\n2 + 4 = 6 (left: 4 6)"
            ]
        },
        "step_4": {
            "steps": [
                "7 - 3 = 4 (left: 3 6 4)\n6 / 3 = 2 (left: 2 4)\n2 + 4 = 6 (left: 4 6)\n6 / 4 = 1.5 (left: 1.5)",
                "7 - 3 = 4 (left: 3 6 4)\n6 / 3 = 2 (left: 2 4)\n2 + 4 = 6 (left: 4 6)\n6 / 4 = 1.5 (left: 1.5)",
                "7 - 3 = 4 (left: 3 6 4)\n6 / 3 = 2 (left: 2 4)\n2 + 4 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)",
                "7 - 3 = 4 (left: 3 6 4)\n6 / 3 = 2 (left: 2 4)\n2 + 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "7 - 3 = 4 (left: 3 6 4)\n6 / 3 = 2 (left: 2 4)\n2 + 4 = 6 (left: 4 6)\n6 / 4 = 1.5 (left: 1.5)"
            ],
            "values": [
                0.003,
                0.003,
                0.002,
                40.0,
                0.003
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 0.342591
    },
    "920": {
        "input": "1 5 9 13",
        "step_1": {
            "steps": [
                "1 + 5 = 6 (left: 6 9 13)",
                "9 - 5 = 4 (left: 1 4 13)",
                "9 - 5 = 4 (left: 1 4 13)",
                "13 - 9 = 4 (left: 1 5 4)",
                "13 - 1 = 12 (left: 5 9 12)"
            ],
            "values": [
                3.0,
                2.001,
                0.003,
                3.0,
                22.0
            ],
            "resampled": [
                "0 <- 0",
                "1 <- 4",
                "2 <- 4",
                "3 <- 4",
                "4 <- 4"
            ],
            "resampled_steps": [
                "1 + 5 = 6 (left: 6 9 13)",
                "13 - 1 = 12 (left: 5 9 12)",
                "13 - 1 = 12 (left: 5 9 12)",
                "13 - 1 = 12 (left: 5 9 12)",
                "13 - 1 = 12 (left: 5 9 12)"
            ]
        },
        "step_2": {
            "steps": [
                "1 + 5 = 6 (left: 6 9 13)\n9 + 13 = 22 (left: 6 22)",
                "13 - 1 = 12 (left: 5 9 12)\n9 + 12 = 21 (left: 5 21)",
                "13 - 1 = 12 (left: 5 9 12)\n12 / 5 = 2.4 (left: 2.4 9)",
                "13 - 1 = 12 (left: 5 9 12)\n12 - 5 = 7 (left: 7 9)",
                "13 - 1 = 12 (left: 5 9 12)\n9 - 5 = 4 (left: 4 12)"
            ],
            "values": [
                2.001,
                1.0,
                3.0,
                0.003,
                40.001
            ],
            "resampled": [
                "0 <- 4",
                "1 <- 4",
                "2 <- 4",
                "3 <- 4",
                "4 <- 4"
            ],
            "resampled_steps": [
                "13 - 1 = 12 (left: 5 9 12)\n9 - 5 = 4 (left: 4 12)",
                "13 - 1 = 12 (left: 5 9 12)\n9 - 5 = 4 (left: 4 12)",
                "13 - 1 = 12 (left: 5 9 12)\n9 - 5 = 4 (left: 4 12)",
                "13 - 1 = 12 (left: 5 9 12)\n9 - 5 = 4 (left: 4 12)",
                "13 - 1 = 12 (left: 5 9 12)\n9 - 5 = 4 (left: 4 12)"
            ]
        },
        "step_3": {
            "steps": [
                "13 - 1 = 12 (left: 5 9 12)\n9 - 5 = 4 (left: 4 12)\n4 + 12 = 16 (left: 16)",
                "13 - 1 = 12 (left: 5 9 12)\n9 - 5 = 4 (left: 4 12)\n12 / 4 = 3 (left: 3 12)",
                "13 - 1 = 12 (left: 5 9 12)\n9 - 5 = 4 (left: 4 12)\n12 - 4 = 8 (left: 8)",
                "13 - 1 = 12 (left: 5 9 12)\n9 - 5 = 4 (left: 4 12)\n12 - 4 = 8 (left: 8)",
                "13 - 1 = 12 (left: 5 9 12)\n9 - 5 = 4 (left: 4 12)\n12 / 4 = 3 (left: 3)"
            ],
            "values": [
                0.002,
                40.001,
                0.002,
                0.002,
                0.0
            ],
            "resampled": [
                "0 <- 1",
                "1 <- 1",
                "2 <- 1",
                "3 <- 1",
                "4 <- 1"
            ],
            "resampled_steps": [
                "13 - 1 = 12 (left: 5 9 12)\n9 - 5 = 4 (left: 4 12)\n12 / 4 = 3 (left: 3 12)",
                "13 - 1 = 12 (left: 5 9 12)\n9 - 5 = 4 (left: 4 12)\n12 / 4 = 3 (left: 3 12)",
                "13 - 1 = 12 (left: 5 9 12)\n9 - 5 = 4 (left: 4 12)\n12 / 4 = 3 (left: 3 12)",
                "13 - 1 = 12 (left: 5 9 12)\n9 - 5 = 4 (left: 4 12)\n12 / 4 = 3 (left: 3 12)",
                "13 - 1 = 12 (left: 5 9 12)\n9 - 5 = 4 (left: 4 12)\n12 / 4 = 3 (left: 3 12)"
            ]
        },
        "step_4": {
            "steps": [
                "13 - 1 = 12 (left: 5 9 12)\n9 - 5 = 4 (left: 4 12)\n12 / 4 = 3 (left: 3 12)\n12 - 3 = 9 (left: 9)",
                "13 - 1 = 12 (left: 5 9 12)\n9 - 5 = 4 (left: 4 12)\n12 / 4 = 3 (left: 3 12)\n12 - 3 = 9 (left: 9)",
                "13 - 1 = 12 (left: 5 9 12)\n9 - 5 = 4 (left: 4 12)\n12 / 4 = 3 (left: 3 12)\n3 + 12 = 15 (left: 15)",
                "13 - 1 = 12 (left: 5 9 12)\n9 - 5 = 4 (left: 4 12)\n12 / 4 = 3 (left: 3 12)\n12 - 3 = 9 (left: 3 9)",
                "13 - 1 = 12 (left: 5 9 12)\n9 - 5 = 4 (left: 4 12)\n12 / 4 = 3 (left: 3 12)\n3 + 12 = 15 (left: 15)"
            ],
            "values": [
                0.001,
                0.002,
                0.002,
                0.003,
                0.001
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 0.359785
    },
    "921": {
        "input": "5 6 7 13",
        "step_1": {
            "steps": [
                "5 * 6 = 30 (left: 30 7 13)",
                "5 * 6 = 30 (left: 7 30 13)",
                "7 - 6 = 1 (left: 5 1 13)",
                "5 * 6 = 30 (left: 30 7 13)",
                "5 - 6 = -1 (left: -1 6 13)"
            ],
            "values": [
                2.0,
                3.0,
                1.002,
                1.001,
                2.001
            ],
            "resampled": [
                "0 <- 0",
                "1 <- 0",
                "2 <- 1",
                "3 <- 1",
                "4 <- 3"
            ],
            "resampled_steps": [
                "5 * 6 = 30 (left: 30 7 13)",
                "5 * 6 = 30 (left: 30 7 13)",
                "5 * 6 = 30 (left: 7 30 13)",
                "5 * 6 = 30 (left: 7 30 13)",
                "5 * 6 = 30 (left: 30 7 13)"
            ]
        },
        "step_2": {
            "steps": [
                "5 * 6 = 30 (left: 30 7 13)\n30 + 13 = 43 (left: 7 43)",
                "5 * 6 = 30 (left: 30 7 13)\n30 - 7 = 23 (left: 23 13)",
                "5 * 6 = 30 (left: 7 30 13)\n30 - 7 = 23 (left: 23 13)",
                "5 * 6 = 30 (left: 7 30 13)\n30 / 7 = 4.2857 (left: 4.2857 13)",
                "5 * 6 = 30 (left: 30 7 13)\n7 + 13 = 20 (left: 30 20)"
            ],
            "values": [
                1.001,
                0.003,
                20.002,
                3.0,
                0.002
            ],
            "resampled": [
                "0 <- 2",
                "1 <- 2",
                "2 <- 2",
                "3 <- 2",
                "4 <- 2"
            ],
            "resampled_steps": [
                "5 * 6 = 30 (left: 7 30 13)\n30 - 7 = 23 (left: 23 13)",
                "5 * 6 = 30 (left: 7 30 13)\n30 - 7 = 23 (left: 23 13)",
                "5 * 6 = 30 (left: 7 30 13)\n30 - 7 = 23 (left: 23 13)",
                "5 * 6 = 30 (left: 7 30 13)\n30 - 7 = 23 (left: 23 13)",
                "5 * 6 = 30 (left: 7 30 13)\n30 - 7 = 23 (left: 23 13)"
            ]
        },
        "step_3": {
            "steps": [
                "5 * 6 = 30 (left: 7 30 13)\n30 - 7 = 23 (left: 23 13)\n23 + 13 = 36 (left: 36)",
                "5 * 6 = 30 (left: 7 30 13)\n30 - 7 = 23 (left: 23 13)\n23 / 13 = 1.769 (left: 1.769)",
                "5 * 6 = 30 (left: 7 30 13)\n30 - 7 = 23 (left: 23 13)\n23 * 13 = 299 (left: 299)",
                "5 * 6 = 30 (left: 7 30 13)\n30 - 7 = 23 (left: 23 13)\n23 + 13 = 36 (left: 36)",
                "5 * 6 = 30 (left: 7 30 13)\n30 - 7 = 23 (left: 23 13)\n23 + 13 = 36 (left: 36)"
            ],
            "values": [
                20.0,
                0.003,
                0.003,
                20.0,
                20.0
            ],
            "resampled": [
                "0 <- 4",
                "1 <- 0",
                "2 <- 0",
                "3 <- 4",
                "4 <- 4"
            ],
            "resampled_steps": [
                "5 * 6 = 30 (left: 7 30 13)\n30 - 7 = 23 (left: 23 13)\n23 + 13 = 36 (left: 36)",
                "5 * 6 = 30 (left: 7 30 13)\n30 - 7 = 23 (left: 23 13)\n23 + 13 = 36 (left: 36)",
                "5 * 6 = 30 (left: 7 30 13)\n30 - 7 = 23 (left: 23 13)\n23 + 13 = 36 (left: 36)",
                "5 * 6 = 30 (left: 7 30 13)\n30 - 7 = 23 (left: 23 13)\n23 + 13 = 36 (left: 36)",
                "5 * 6 = 30 (left: 7 30 13)\n30 - 7 = 23 (left: 23 13)\n23 + 13 = 36 (left: 36)"
            ]
        },
        "step_4": {
            "steps": [
                "5 * 6 = 30 (left: 7 30 13)\n30 - 7 = 23 (left: 23 13)\n23 + 13 = 36 (left: 36)\n36 * 2 = 72 (left: 72)",
                "5 * 6 = 30 (left: 7 30 13)\n30 - 7 = 23 (left: 23 13)\n23 + 13 = 36 (left: 36)\n36 * 2 = 72 (left: 72)",
                "5 * 6 = 30 (left: 7 30 13)\n30 - 7 = 23 (left: 23 13)\n23 + 13 = 36 (left: 36)\n36 * 2 = 72 (left: 72)",
                "5 * 6 = 30 (left: 7 30 13)\n30 - 7 = 23 (left: 23 13)\n23 + 13 = 36 (left: 36)\n36 - 5 = 31 (left: 5 31)",
                "5 * 6 = 30 (left: 7 30 13)\n30 - 7 = 23 (left: 23 13)\n23 + 13 = 36 (left: 36)\nThere are multiple possible next steps for the input 36, including:"
            ],
            "values": [
                0.001,
                0.001,
                0.002,
                0.0,
                0.003
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 0.376567
    },
    "922": {
        "input": "5 5 8 10",
        "step_1": {
            "steps": [
                "5 + 5 = 10 (left: 8 10 10)",
                "8 + 5 = 13 (left: 5 13 10)",
                "8 + 5 = 13 (left: 5 13 10)",
                "10 - 8 = 2 (left: 5 2 10)",
                "10 - 5 = 5 (left: 5 8 5)"
            ],
            "values": [
                3.0,
                3.0,
                2.0,
                1.002,
                3.0
            ],
            "resampled": [
                "0 <- 0",
                "1 <- 1",
                "2 <- 0",
                "3 <- 2",
                "4 <- 2"
            ],
            "resampled_steps": [
                "5 + 5 = 10 (left: 8 10 10)",
                "8 + 5 = 13 (left: 5 13 10)",
                "5 + 5 = 10 (left: 8 10 10)",
                "8 + 5 = 13 (left: 5 13 10)",
                "8 + 5 = 13 (left: 5 13 10)"
            ]
        },
        "step_2": {
            "steps": [
                "5 + 5 = 10 (left: 8 10 10)\n10 * 10 = 100 (left: 100)",
                "8 + 5 = 13 (left: 5 13 10)\n5 + 13 = 18 (left: 18 10)",
                "5 + 5 = 10 (left: 8 10 10)\n10 - 8 = 2 (left: 2 10)",
                "8 + 5 = 13 (left: 5 13 10)\n10 - 5 = 5 (left: 5 13)",
                "8 + 5 = 13 (left: 5 13 10)\n10 - 5 = 5 (left: 5 10)"
            ],
            "values": [
                0.003,
                1.002,
                2.0,
                1.002,
                1.001
            ],
            "resampled": [
                "0 <- 2",
                "1 <- 1",
                "2 <- 2",
                "3 <- 3",
                "4 <- 1"
            ],
            "resampled_steps": [
                "5 + 5 = 10 (left: 8 10 10)\n10 - 8 = 2 (left: 2 10)",
                "8 + 5 = 13 (left: 5 13 10)\n5 + 13 = 18 (left: 18 10)",
                "5 + 5 = 10 (left: 8 10 10)\n10 - 8 = 2 (left: 2 10)",
                "8 + 5 = 13 (left: 5 13 10)\n10 - 5 = 5 (left: 5 13)",
                "8 + 5 = 13 (left: 5 13 10)\n5 + 13 = 18 (left: 18 10)"
            ]
        },
        "step_3": {
            "steps": [
                "5 + 5 = 10 (left: 8 10 10)\n10 - 8 = 2 (left: 2 10)\n10 / 2 = 5 (left: 2 5)",
                "8 + 5 = 13 (left: 5 13 10)\n5 + 13 = 18 (left: 18 10)\n18 / 10 = 1.8 (left: 1.8 10)",
                "5 + 5 = 10 (left: 8 10 10)\n10 - 8 = 2 (left: 2 10)\n10 - 2 = 8 (left: 2 8)",
                "8 + 5 = 13 (left: 5 13 10)\n10 - 5 = 5 (left: 5 13)\n13 / 5 = 2.6 (left: 2.6)",
                "8 + 5 = 13 (left: 5 13 10)\n5 + 13 = 18 (left: 18 10)\n18 / 10 = 1.8 (left: 1.8)"
            ],
            "values": [
                60.0,
                40.0,
                1.0,
                0.002,
                0.002
            ],
            "resampled": [
                "0 <- 1",
                "1 <- 0",
                "2 <- 1",
                "3 <- 0",
                "4 <- 0"
            ],
            "resampled_steps": [
                "8 + 5 = 13 (left: 5 13 10)\n5 + 13 = 18 (left: 18 10)\n18 / 10 = 1.8 (left: 1.8 10)",
                "5 + 5 = 10 (left: 8 10 10)\n10 - 8 = 2 (left: 2 10)\n10 / 2 = 5 (left: 2 5)",
                "8 + 5 = 13 (left: 5 13 10)\n5 + 13 = 18 (left: 18 10)\n18 / 10 = 1.8 (left: 1.8 10)",
                "5 + 5 = 10 (left: 8 10 10)\n10 - 8 = 2 (left: 2 10)\n10 / 2 = 5 (left: 2 5)",
                "5 + 5 = 10 (left: 8 10 10)\n10 - 8 = 2 (left: 2 10)\n10 / 2 = 5 (left: 2 5)"
            ]
        },
        "step_4": {
            "steps": [
                "8 + 5 = 13 (left: 5 13 10)\n5 + 13 = 18 (left: 18 10)\n18 / 10 = 1.8 (left: 1.8 10)\n10 / 1.8 = 5.56 (left: 5.56)",
                "5 + 5 = 10 (left: 8 10 10)\n10 - 8 = 2 (left: 2 10)\n10 / 2 = 5 (left: 2 5)\n5 / 2 = 2.5 (left: 2.5)",
                "8 + 5 = 13 (left: 5 13 10)\n5 + 13 = 18 (left: 18 10)\n18 / 10 = 1.8 (left: 1.8 10)\n1.8 * 10 = 18 (left: 18) ",
                "5 + 5 = 10 (left: 8 10 10)\n10 - 8 = 2 (left: 2 10)\n10 / 2 = 5 (left: 2 5)\n2 * 5 = 10 (left: 10)",
                "5 + 5 = 10 (left: 8 10 10)\n10 - 8 = 2 (left: 2 10)\n10 / 2 = 5 (left: 2 5)\n2 + 5 = 7 (left: 7)"
            ],
            "values": [
                0.001,
                0.003,
                0.002,
                0.001,
                0.002
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 0.3931530000000001
    },
    "923": {
        "input": "2 4 6 12",
        "step_1": {
            "steps": [
                "12 / 2 = 6 (left: 6 6 12)",
                "2 + 4 = 6 (left: 6 6 12)",
                "6 + 6 = 12 (left: 2 12 12)",
                "12 - 6 = 6 (left: 2 4 6)",
                "12 / 2 = 6 (left: 6 6 6)"
            ],
            "values": [
                60.0,
                60.0,
                2.001,
                1.002,
                2.001
            ],
            "resampled": [
                "0 <- 0",
                "1 <- 1",
                "2 <- 1",
                "3 <- 1",
                "4 <- 1"
            ],
            "resampled_steps": [
                "12 / 2 = 6 (left: 6 6 12)",
                "2 + 4 = 6 (left: 6 6 12)",
                "2 + 4 = 6 (left: 6 6 12)",
                "2 + 4 = 6 (left: 6 6 12)",
                "2 + 4 = 6 (left: 6 6 12)"
            ]
        },
        "step_2": {
            "steps": [
                "12 / 2 = 6 (left: 6 6 12)\n6 / 6 = 1 (left: 1 12)",
                "2 + 4 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)",
                "2 + 4 = 6 (left: 6 6 12)\n6 / 6 = 1 (left: 1 12)",
                "2 + 4 = 6 (left: 6 6 12)\n12 / 6 = 2 (left: 2 6)",
                "2 + 4 = 6 (left: 6 6 12)\n12 - 6 = 6 (left: 6 6)"
            ],
            "values": [
                0.003,
                60.0,
                1.002,
                2.001,
                0.003
            ],
            "resampled": [
                "0 <- 1",
                "1 <- 1",
                "2 <- 1",
                "3 <- 1",
                "4 <- 1"
            ],
            "resampled_steps": [
                "2 + 4 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)",
                "2 + 4 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)",
                "2 + 4 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)",
                "2 + 4 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)",
                "2 + 4 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)"
            ]
        },
        "step_3": {
            "steps": [
                "2 + 4 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)\n36 - 12 = 24 (left: 24)",
                "2 + 4 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)\n36 / 12 = 3 (left: 3)",
                "2 + 4 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)\n36 + 12 = 48 (left: 48)",
                "2 + 4 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)\n36 / 12 = 3 (left: 3)",
                "2 + 4 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)\n36 * 12 = 432 (left: 432)"
            ],
            "values": [
                60.0,
                0.003,
                0.001,
                0.0,
                0.002
            ],
            "resampled": [
                "0 <- 0",
                "1 <- 0",
                "2 <- 0",
                "3 <- 0",
                "4 <- 0"
            ],
            "resampled_steps": [
                "2 + 4 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)\n36 - 12 = 24 (left: 24)",
                "2 + 4 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)\n36 - 12 = 24 (left: 24)",
                "2 + 4 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)\n36 - 12 = 24 (left: 24)",
                "2 + 4 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)\n36 - 12 = 24 (left: 24)",
                "2 + 4 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)\n36 - 12 = 24 (left: 24)"
            ]
        },
        "step_4": {
            "steps": [
                "2 + 4 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)\n36 - 12 = 24 (left: 24)\nAnswer: ((2 + 4) * 6) - 12 = 24",
                "2 + 4 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)\n36 - 12 = 24 (left: 24)\nAnswer: (2 + 4) * 6 - 12 = 24",
                "2 + 4 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)\n36 - 12 = 24 (left: 24)\nAnswer: (2 + 4) * 6 - 12 = 24",
                "2 + 4 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)\n36 - 12 = 24 (left: 24)\nAnswer: (2 + 4) * 6 - 12 = 24",
                "2 + 4 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)\n36 - 12 = 24 (left: 24)\nAnswer: (2 + 4) * 6 - 12 = 24"
            ],
            "values": [
                60.0,
                60.0,
                60.0,
                60.0,
                60.0
            ]
        },
        "results": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            }
        ],
        "cost": 0.409434
    },
    "924": {
        "input": "6 7 8 11",
        "step_1": {
            "steps": [
                "7 - 6 = 1 (left: 1 8 11)",
                "6 * 7 = 42 (left: 8 11 42)",
                "8 * 11 = 88 (left: 6 7 88)",
                "8 - 7 = 1 (left: 6 1 11)",
                "11 - 6 = 5 (left: 7 8 5)"
            ],
            "values": [
                2.001,
                2.001,
                1.002,
                2.0,
                3.0
            ],
            "resampled": [
                "0 <- 0",
                "1 <- 3",
                "2 <- 0",
                "3 <- 4",
                "4 <- 1"
            ],
            "resampled_steps": [
                "7 - 6 = 1 (left: 1 8 11)",
                "8 - 7 = 1 (left: 6 1 11)",
                "7 - 6 = 1 (left: 1 8 11)",
                "11 - 6 = 5 (left: 7 8 5)",
                "6 * 7 = 42 (left: 8 11 42)"
            ]
        },
        "step_2": {
            "steps": [
                "7 - 6 = 1 (left: 1 8 11)\n11 / 1 = 11 (left: 8 11)",
                "8 - 7 = 1 (left: 6 1 11)\n6 + 1 = 7 (left: 7 11)",
                "7 - 6 = 1 (left: 1 8 11)\n11 - 8 = 3 (left: 1 3)",
                "11 - 6 = 5 (left: 7 8 5)\n5 - 7 = -2 (left: -2 8)",
                "6 * 7 = 42 (left: 8 11 42)\n11 - 42 = -31 (left: -31 8 11)"
            ],
            "values": [
                0.002,
                0.003,
                0.001,
                1.002,
                1.002
            ],
            "resampled": [
                "0 <- 4",
                "1 <- 3",
                "2 <- 4",
                "3 <- 3",
                "4 <- 4"
            ],
            "resampled_steps": [
                "6 * 7 = 42 (left: 8 11 42)\n11 - 42 = -31 (left: -31 8 11)",
                "11 - 6 = 5 (left: 7 8 5)\n5 - 7 = -2 (left: -2 8)",
                "6 * 7 = 42 (left: 8 11 42)\n11 - 42 = -31 (left: -31 8 11)",
                "11 - 6 = 5 (left: 7 8 5)\n5 - 7 = -2 (left: -2 8)",
                "6 * 7 = 42 (left: 8 11 42)\n11 - 42 = -31 (left: -31 8 11)"
            ]
        },
        "step_3": {
            "steps": [
                "6 * 7 = 42 (left: 8 11 42)\n11 - 42 = -31 (left: -31 8 11)\n8 + 11 = 19 (left: -31 19)",
                "11 - 6 = 5 (left: 7 8 5)\n5 - 7 = -2 (left: -2 8)\n8 / (-2) = -4 (left: -4)",
                "6 * 7 = 42 (left: 8 11 42)\n11 - 42 = -31 (left: -31 8 11)\n11 - 8 = 3 (left: -31 3)",
                "11 - 6 = 5 (left: 7 8 5)\n5 - 7 = -2 (left: -2 8)\n8 - (-2) = 10 (left: 10)",
                "6 * 7 = 42 (left: 8 11 42)\n11 - 42 = -31 (left: -31 8 11)\n-31 - 8 = -39 (left: -39 11)"
            ],
            "values": [
                0.003,
                0.002,
                0.003,
                0.002,
                0.002
            ],
            "resampled": [
                "0 <- 3",
                "1 <- 2",
                "2 <- 0",
                "3 <- 1",
                "4 <- 3"
            ],
            "resampled_steps": [
                "11 - 6 = 5 (left: 7 8 5)\n5 - 7 = -2 (left: -2 8)\n8 - (-2) = 10 (left: 10)",
                "6 * 7 = 42 (left: 8 11 42)\n11 - 42 = -31 (left: -31 8 11)\n11 - 8 = 3 (left: -31 3)",
                "6 * 7 = 42 (left: 8 11 42)\n11 - 42 = -31 (left: -31 8 11)\n8 + 11 = 19 (left: -31 19)",
                "11 - 6 = 5 (left: 7 8 5)\n5 - 7 = -2 (left: -2 8)\n8 / (-2) = -4 (left: -4)",
                "11 - 6 = 5 (left: 7 8 5)\n5 - 7 = -2 (left: -2 8)\n8 - (-2) = 10 (left: 10)"
            ]
        },
        "step_4": {
            "steps": [
                "11 - 6 = 5 (left: 7 8 5)\n5 - 7 = -2 (left: -2 8)\n8 - (-2) = 10 (left: 10)\n10 - 2 = 8",
                "6 * 7 = 42 (left: 8 11 42)\n11 - 42 = -31 (left: -31 8 11)\n11 - 8 = 3 (left: -31 3)\n-31 * 3 = -93 (left: -93)",
                "6 * 7 = 42 (left: 8 11 42)\n11 - 42 = -31 (left: -31 8 11)\n8 + 11 = 19 (left: -31 19)\n-31 - 19 = -50 (left: -50, 19)",
                "11 - 6 = 5 (left: 7 8 5)\n5 - 7 = -2 (left: -2 8)\n8 / (-2) = -4 (left: -4)\n-4 + 2 = -2",
                "11 - 6 = 5 (left: 7 8 5)\n5 - 7 = -2 (left: -2 8)\n8 - (-2) = 10 (left: 10)\n10 + 2 = 12 (left: 2 12)"
            ],
            "values": [
                0.003,
                0.0,
                0.003,
                0.003,
                60.0
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 0.42700099999999996
    },
    "925": {
        "input": "7 9 9 13",
        "step_1": {
            "steps": [
                "9 / 3 = 3 (left: 7 3 13)",
                "7 + 9 = 16 (left: 9 16 13)",
                "9 - 7 = 2 (left: 2 9 13)",
                "13 / 7 = 1.857 (left: 1.857 9 13)",
                "13 / 7 = 1.8571 (left: 1.8571 9 9)"
            ],
            "values": [
                1.002,
                2.001,
                3.0,
                2.001,
                3.0
            ],
            "resampled": [
                "0 <- 3",
                "1 <- 1",
                "2 <- 1",
                "3 <- 1",
                "4 <- 1"
            ],
            "resampled_steps": [
                "13 / 7 = 1.857 (left: 1.857 9 13)",
                "7 + 9 = 16 (left: 9 16 13)",
                "7 + 9 = 16 (left: 9 16 13)",
                "7 + 9 = 16 (left: 9 16 13)",
                "7 + 9 = 16 (left: 9 16 13)"
            ]
        },
        "step_2": {
            "steps": [
                "13 / 7 = 1.857 (left: 1.857 9 13)\n13 - 1.857 = 11.143 (left: 11.143 9)",
                "7 + 9 = 16 (left: 9 16 13)\n9 + 16 = 25 (left: 13 25)",
                "7 + 9 = 16 (left: 9 16 13)\n9 + 16 = 25 (left: 25 13)",
                "7 + 9 = 16 (left: 9 16 13)\n16 / 9 = 1.777 (left: 1.777 13)",
                "7 + 9 = 16 (left: 9 16 13)\n16 / 13 = 1.2307692307692308 (left: 1.2307692307692308 13)"
            ],
            "values": [
                1.0,
                0.003,
                0.003,
                3.0,
                2.001
            ],
            "resampled": [
                "0 <- 0",
                "1 <- 3",
                "2 <- 4",
                "3 <- 3",
                "4 <- 0"
            ],
            "resampled_steps": [
                "13 / 7 = 1.857 (left: 1.857 9 13)\n13 - 1.857 = 11.143 (left: 11.143 9)",
                "7 + 9 = 16 (left: 9 16 13)\n16 / 9 = 1.777 (left: 1.777 13)",
                "7 + 9 = 16 (left: 9 16 13)\n16 / 13 = 1.2307692307692308 (left: 1.2307692307692308 13)",
                "7 + 9 = 16 (left: 9 16 13)\n16 / 9 = 1.777 (left: 1.777 13)",
                "13 / 7 = 1.857 (left: 1.857 9 13)\n13 - 1.857 = 11.143 (left: 11.143 9)"
            ]
        },
        "step_3": {
            "steps": [
                "13 / 7 = 1.857 (left: 1.857 9 13)\n13 - 1.857 = 11.143 (left: 11.143 9)\n11.143 / 9 = 1.23811111111 (left: 1.23811111111)",
                "7 + 9 = 16 (left: 9 16 13)\n16 / 9 = 1.777 (left: 1.777 13)\n1.777 * 13 = 23.101 (left: 23.101)",
                "7 + 9 = 16 (left: 9 16 13)\n16 / 13 = 1.2307692307692308 (left: 1.2307692307692308 13)\n1.2307692307692308 + 13 = 14.230769230769231 (left: 13 14.230769230769231)",
                "7 + 9 = 16 (left: 9 16 13)\n16 / 9 = 1.777 (left: 1.777 13)\n1.777 * 13 = 23.101 (left: 23.101)",
                "13 / 7 = 1.857 (left: 1.857 9 13)\n13 - 1.857 = 11.143 (left: 11.143 9)\n11.143 * 9 = 100.287 (left: 100.287)"
            ],
            "values": [
                0.003,
                0.003,
                1.001,
                0.002,
                0.002
            ],
            "resampled": [
                "0 <- 2",
                "1 <- 2",
                "2 <- 2",
                "3 <- 2",
                "4 <- 2"
            ],
            "resampled_steps": [
                "7 + 9 = 16 (left: 9 16 13)\n16 / 13 = 1.2307692307692308 (left: 1.2307692307692308 13)\n1.2307692307692308 + 13 = 14.230769230769231 (left: 13 14.230769230769231)",
                "7 + 9 = 16 (left: 9 16 13)\n16 / 13 = 1.2307692307692308 (left: 1.2307692307692308 13)\n1.2307692307692308 + 13 = 14.230769230769231 (left: 13 14.230769230769231)",
                "7 + 9 = 16 (left: 9 16 13)\n16 / 13 = 1.2307692307692308 (left: 1.2307692307692308 13)\n1.2307692307692308 + 13 = 14.230769230769231 (left: 13 14.230769230769231)",
                "7 + 9 = 16 (left: 9 16 13)\n16 / 13 = 1.2307692307692308 (left: 1.2307692307692308 13)\n1.2307692307692308 + 13 = 14.230769230769231 (left: 13 14.230769230769231)",
                "7 + 9 = 16 (left: 9 16 13)\n16 / 13 = 1.2307692307692308 (left: 1.2307692307692308 13)\n1.2307692307692308 + 13 = 14.230769230769231 (left: 13 14.230769230769231)"
            ]
        },
        "step_4": {
            "steps": [
                "7 + 9 = 16 (left: 9 16 13)\n16 / 13 = 1.2307692307692308 (left: 1.2307692307692308 13)\n1.2307692307692308 + 13 = 14.230769230769231 (left: 13 14.230769230769231)\n13 / 14.230769230769231 = 0.9142857142857143 (left: 0.9142857142857143)",
                "7 + 9 = 16 (left: 9 16 13)\n16 / 13 = 1.2307692307692308 (left: 1.2307692307692308 13)\n1.2307692307692308 + 13 = 14.230769230769231 (left: 13 14.230769230769231)\n14 / 13 = 1.0769230769230769 (left: 13 1.0769230769230769)",
                "7 + 9 = 16 (left: 9 16 13)\n16 / 13 = 1.2307692307692308 (left: 1.2307692307692308 13)\n1.2307692307692308 + 13 = 14.230769230769231 (left: 13 14.230769230769231)\n13 + 14.230769230769231 = 27.23076923076923 (left: 27.23076923076923)",
                "7 + 9 = 16 (left: 9 16 13)\n16 / 13 = 1.2307692307692308 (left: 1.2307692307692308 13)\n1.2307692307692308 + 13 = 14.230769230769231 (left: 13 14.230769230769231)\n13 * 14.230769230769231 = 185.99999999999997 (left: 185.99999999999997)",
                "7 + 9 = 16 (left: 9 16 13)\n16 / 13 = 1.2307692307692308 (left: 1.2307692307692308 13)\n1.2307692307692308 + 13 = 14.230769230769231 (left: 13 14.230769230769231)\n13 / 14.230769230769231 = 0.9142857142857143 (left: 0.9142857142857143)"
            ],
            "values": [
                0.001,
                2.001,
                0.003,
                0.001,
                0.0
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 0.446098
    },
    "926": {
        "input": "3 6 9 12",
        "step_1": {
            "steps": [
                "12 - 6 = 6 (left: 3 6 6)",
                "12 - 6 = 6 (left: 3 6 6)",
                "9 / 3 = 3 (left: 3 6 9)",
                "6 - 3 = 3 (left: 3 6 12)",
                "12 / 3 = 4 (left: 4 6 12)"
            ],
            "values": [
                2.001,
                22.0,
                1.002,
                1.002,
                60.0
            ],
            "resampled": [
                "0 <- 4",
                "1 <- 1",
                "2 <- 4",
                "3 <- 4",
                "4 <- 1"
            ],
            "resampled_steps": [
                "12 / 3 = 4 (left: 4 6 12)",
                "12 - 6 = 6 (left: 3 6 6)",
                "12 / 3 = 4 (left: 4 6 12)",
                "12 / 3 = 4 (left: 4 6 12)",
                "12 - 6 = 6 (left: 3 6 6)"
            ]
        },
        "step_2": {
            "steps": [
                "12 / 3 = 4 (left: 4 6 12)\n12 - 6 = 6 (left: 4 6)",
                "12 - 6 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6)",
                "12 / 3 = 4 (left: 4 6 12)\n6 * 4 = 24 (left: 24 12)",
                "12 / 3 = 4 (left: 4 6 12)\n12 / 4 = 3 (left: 3 6)",
                "12 - 6 = 6 (left: 3 6 6)\n6 * 3 = 18 (left: 6 18)"
            ],
            "values": [
                60.0,
                0.001,
                60.0,
                20.0,
                1.002
            ],
            "resampled": [
                "0 <- 2",
                "1 <- 2",
                "2 <- 2",
                "3 <- 2",
                "4 <- 2"
            ],
            "resampled_steps": [
                "12 / 3 = 4 (left: 4 6 12)\n6 * 4 = 24 (left: 24 12)",
                "12 / 3 = 4 (left: 4 6 12)\n6 * 4 = 24 (left: 24 12)",
                "12 / 3 = 4 (left: 4 6 12)\n6 * 4 = 24 (left: 24 12)",
                "12 / 3 = 4 (left: 4 6 12)\n6 * 4 = 24 (left: 24 12)",
                "12 / 3 = 4 (left: 4 6 12)\n6 * 4 = 24 (left: 24 12)"
            ]
        },
        "step_3": {
            "steps": [
                "12 / 3 = 4 (left: 4 6 12)\n6 * 4 = 24 (left: 24 12)\n24 - 12 = 12 (left: 12)",
                "12 / 3 = 4 (left: 4 6 12)\n6 * 4 = 24 (left: 24 12)\n24 + 12 = 36 (left: 36)",
                "12 / 3 = 4 (left: 4 6 12)\n6 * 4 = 24 (left: 24 12)\n24 * 12 = 288 (left: 288)",
                "12 / 3 = 4 (left: 4 6 12)\n6 * 4 = 24 (left: 24 12)\n24 / 12 = 2 (left: 2)",
                "12 / 3 = 4 (left: 4 6 12)\n6 * 4 = 24 (left: 24 12)\n24 + 12 = 36 (left: 36)"
            ],
            "values": [
                20.001,
                20.0,
                0.003,
                0.003,
                20.0
            ],
            "resampled": [
                "0 <- 1",
                "1 <- 4",
                "2 <- 0",
                "3 <- 0",
                "4 <- 1"
            ],
            "resampled_steps": [
                "12 / 3 = 4 (left: 4 6 12)\n6 * 4 = 24 (left: 24 12)\n24 + 12 = 36 (left: 36)",
                "12 / 3 = 4 (left: 4 6 12)\n6 * 4 = 24 (left: 24 12)\n24 + 12 = 36 (left: 36)",
                "12 / 3 = 4 (left: 4 6 12)\n6 * 4 = 24 (left: 24 12)\n24 - 12 = 12 (left: 12)",
                "12 / 3 = 4 (left: 4 6 12)\n6 * 4 = 24 (left: 24 12)\n24 - 12 = 12 (left: 12)",
                "12 / 3 = 4 (left: 4 6 12)\n6 * 4 = 24 (left: 24 12)\n24 + 12 = 36 (left: 36)"
            ]
        },
        "step_4": {
            "steps": [
                "12 / 3 = 4 (left: 4 6 12)\n6 * 4 = 24 (left: 24 12)\n24 + 12 = 36 (left: 36)\n36 / 2 = 18",
                "12 / 3 = 4 (left: 4 6 12)\n6 * 4 = 24 (left: 24 12)\n24 + 12 = 36 (left: 36)\n36 + 2 = 38 (left: 38)",
                "12 / 3 = 4 (left: 4 6 12)\n6 * 4 = 24 (left: 24 12)\n24 - 12 = 12 (left: 12)\n12 / 2 = 6 (left: 2 6)",
                "12 / 3 = 4 (left: 4 6 12)\n6 * 4 = 24 (left: 24 12)\n24 - 12 = 12 (left: 12)\n12 + 2 = 14 (left: 14)",
                "12 / 3 = 4 (left: 4 6 12)\n6 * 4 = 24 (left: 24 12)\n24 + 12 = 36 (left: 36)\n36 / 6 = 6 (left: 6)"
            ],
            "values": [
                0.003,
                0.002,
                22.0,
                0.002,
                0.003
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 0.462217
    },
    "927": {
        "input": "6 9 12 13",
        "step_1": {
            "steps": [
                "12 - 6 = 6 (left: 6 6 13)",
                "9 - 6 = 3 (left: 3 9 12 13)",
                "9 / 6 = 1.5 (left: 1.5 12 13)",
                "9 + 12 = 21 (left: 6 21 13)",
                "13 - 1 = 12 (left: 6 9 12)"
            ],
            "values": [
                20.002,
                3.0,
                1.002,
                2.001,
                41.0
            ],
            "resampled": [
                "0 <- 4",
                "1 <- 2",
                "2 <- 0",
                "3 <- 4",
                "4 <- 4"
            ],
            "resampled_steps": [
                "13 - 1 = 12 (left: 6 9 12)",
                "9 / 6 = 1.5 (left: 1.5 12 13)",
                "12 - 6 = 6 (left: 6 6 13)",
                "13 - 1 = 12 (left: 6 9 12)",
                "13 - 1 = 12 (left: 6 9 12)"
            ]
        },
        "step_2": {
            "steps": [
                "13 - 1 = 12 (left: 6 9 12)\n9 * 6 = 54 (left: 54 12)",
                "9 / 6 = 1.5 (left: 1.5 12 13)\n12 / 1.5 = 8 (left: 8 13)",
                "12 - 6 = 6 (left: 6 6 13)\n6 * 6 = 36 (left: 36 13)",
                "13 - 1 = 12 (left: 6 9 12)\n6 + 9 = 15 (left: 15 12)",
                "13 - 1 = 12 (left: 6 9 12)\n12 / 6 = 2 (left: 6 2)"
            ],
            "values": [
                0.001,
                1.001,
                2.001,
                0.002,
                1.001
            ],
            "resampled": [
                "0 <- 2",
                "1 <- 2",
                "2 <- 2",
                "3 <- 4",
                "4 <- 2"
            ],
            "resampled_steps": [
                "12 - 6 = 6 (left: 6 6 13)\n6 * 6 = 36 (left: 36 13)",
                "12 - 6 = 6 (left: 6 6 13)\n6 * 6 = 36 (left: 36 13)",
                "12 - 6 = 6 (left: 6 6 13)\n6 * 6 = 36 (left: 36 13)",
                "13 - 1 = 12 (left: 6 9 12)\n12 / 6 = 2 (left: 6 2)",
                "12 - 6 = 6 (left: 6 6 13)\n6 * 6 = 36 (left: 36 13)"
            ]
        },
        "step_3": {
            "steps": [
                "12 - 6 = 6 (left: 6 6 13)\n6 * 6 = 36 (left: 36 13)\n36 / 13 = 2.769 (left: 2.769)",
                "12 - 6 = 6 (left: 6 6 13)\n6 * 6 = 36 (left: 36 13)\n36 - 13 = 23 (left: 23)",
                "12 - 6 = 6 (left: 6 6 13)\n6 * 6 = 36 (left: 36 13)\n36 - 13 = 23 (left: 23)",
                "13 - 1 = 12 (left: 6 9 12)\n12 / 6 = 2 (left: 6 2)\n6 + 2 = 8 (left: 8)",
                "12 - 6 = 6 (left: 6 6 13)\n6 * 6 = 36 (left: 36 13)\n36 / 13 = 2.769 (left: 2.769)"
            ],
            "values": [
                0.002,
                20.0,
                0.001,
                0.001,
                0.003
            ],
            "resampled": [
                "0 <- 1",
                "1 <- 1",
                "2 <- 1",
                "3 <- 1",
                "4 <- 1"
            ],
            "resampled_steps": [
                "12 - 6 = 6 (left: 6 6 13)\n6 * 6 = 36 (left: 36 13)\n36 - 13 = 23 (left: 23)",
                "12 - 6 = 6 (left: 6 6 13)\n6 * 6 = 36 (left: 36 13)\n36 - 13 = 23 (left: 23)",
                "12 - 6 = 6 (left: 6 6 13)\n6 * 6 = 36 (left: 36 13)\n36 - 13 = 23 (left: 23)",
                "12 - 6 = 6 (left: 6 6 13)\n6 * 6 = 36 (left: 36 13)\n36 - 13 = 23 (left: 23)",
                "12 - 6 = 6 (left: 6 6 13)\n6 * 6 = 36 (left: 36 13)\n36 - 13 = 23 (left: 23)"
            ]
        },
        "step_4": {
            "steps": [
                "12 - 6 = 6 (left: 6 6 13)\n6 * 6 = 36 (left: 36 13)\n36 - 13 = 23 (left: 23)\n23 - 2 = 21 (left: 2 21)",
                "12 - 6 = 6 (left: 6 6 13)\n6 * 6 = 36 (left: 36 13)\n36 - 13 = 23 (left: 23)\n23 - 1 = 22 (left: 1 22 23)",
                "12 - 6 = 6 (left: 6 6 13)\n6 * 6 = 36 (left: 36 13)\n36 - 13 = 23 (left: 23)\n23 / 2 = 11.5 (left: 2 11.5)",
                "12 - 6 = 6 (left: 6 6 13)\n6 * 6 = 36 (left: 36 13)\n36 - 13 = 23 (left: 23)\n23 + 1 = 24 (left: 1 24)",
                "12 - 6 = 6 (left: 6 6 13)\n6 * 6 = 36 (left: 36 13)\n36 - 13 = 23 (left: 23)\n23 / 2 = 11.5 (left: 11.5 23 23)"
            ],
            "values": [
                0.003,
                0.003,
                0.001,
                60.0,
                22.0
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 0.479761
    },
    "928": {
        "input": "4 7 9 13",
        "step_1": {
            "steps": [
                "4 + 7 = 11 (left: 9 11 13)",
                "7 / 4 = 1.75 (left: 1.75 9 13)",
                "9 - 4 = 5 (left: 5 7 13)",
                "7 / 4 = 1.75 (left: 1.75 9 13)",
                "7 - 4 = 3 (left: 3 7 13)"
            ],
            "values": [
                22.0,
                3.0,
                1.001,
                3.0,
                1.002
            ],
            "resampled": [
                "0 <- 0",
                "1 <- 4",
                "2 <- 2",
                "3 <- 0",
                "4 <- 0"
            ],
            "resampled_steps": [
                "4 + 7 = 11 (left: 9 11 13)",
                "7 - 4 = 3 (left: 3 7 13)",
                "9 - 4 = 5 (left: 5 7 13)",
                "4 + 7 = 11 (left: 9 11 13)",
                "4 + 7 = 11 (left: 9 11 13)"
            ]
        },
        "step_2": {
            "steps": [
                "4 + 7 = 11 (left: 9 11 13)\n13 - 11 = 2 (left: 9 2)",
                "7 - 4 = 3 (left: 3 7 13)\n7 / 3 = 2.333 (left: 2.333 13)",
                "9 - 4 = 5 (left: 5 7 13)\n7 + 5 = 12 (left: 12 13)",
                "4 + 7 = 11 (left: 9 11 13)\n13 - 11 = 2 (left: 9 2)",
                "4 + 7 = 11 (left: 9 11 13)\n11 - 9 = 2 (left: 2 13)"
            ],
            "values": [
                1.001,
                0.003,
                0.002,
                1.002,
                0.003
            ],
            "resampled": [
                "0 <- 0",
                "1 <- 0",
                "2 <- 0",
                "3 <- 3",
                "4 <- 3"
            ],
            "resampled_steps": [
                "4 + 7 = 11 (left: 9 11 13)\n13 - 11 = 2 (left: 9 2)",
                "4 + 7 = 11 (left: 9 11 13)\n13 - 11 = 2 (left: 9 2)",
                "4 + 7 = 11 (left: 9 11 13)\n13 - 11 = 2 (left: 9 2)",
                "4 + 7 = 11 (left: 9 11 13)\n13 - 11 = 2 (left: 9 2)",
                "4 + 7 = 11 (left: 9 11 13)\n13 - 11 = 2 (left: 9 2)"
            ]
        },
        "step_3": {
            "steps": [
                "4 + 7 = 11 (left: 9 11 13)\n13 - 11 = 2 (left: 9 2)\n9 - 2 = 7 (left: 7)",
                "4 + 7 = 11 (left: 9 11 13)\n13 - 11 = 2 (left: 9 2)\n9 + 2 = 11 (left: 11)",
                "4 + 7 = 11 (left: 9 11 13)\n13 - 11 = 2 (left: 9 2)\n9 / 2 = 4.5 (left: 4.5)",
                "4 + 7 = 11 (left: 9 11 13)\n13 - 11 = 2 (left: 9 2)\n9 / 2 = 4.5 (left: 4.5)",
                "4 + 7 = 11 (left: 9 11 13)\n13 - 11 = 2 (left: 9 2)\n9 + 2 = 11 (left: 11)"
            ],
            "values": [
                0.002,
                0.001,
                0.002,
                0.002,
                0.003
            ],
            "resampled": [
                "0 <- 4",
                "1 <- 4",
                "2 <- 2",
                "3 <- 0",
                "4 <- 2"
            ],
            "resampled_steps": [
                "4 + 7 = 11 (left: 9 11 13)\n13 - 11 = 2 (left: 9 2)\n9 + 2 = 11 (left: 11)",
                "4 + 7 = 11 (left: 9 11 13)\n13 - 11 = 2 (left: 9 2)\n9 + 2 = 11 (left: 11)",
                "4 + 7 = 11 (left: 9 11 13)\n13 - 11 = 2 (left: 9 2)\n9 / 2 = 4.5 (left: 4.5)",
                "4 + 7 = 11 (left: 9 11 13)\n13 - 11 = 2 (left: 9 2)\n9 - 2 = 7 (left: 7)",
                "4 + 7 = 11 (left: 9 11 13)\n13 - 11 = 2 (left: 9 2)\n9 / 2 = 4.5 (left: 4.5)"
            ]
        },
        "step_4": {
            "steps": [
                "4 + 7 = 11 (left: 9 11 13)\n13 - 11 = 2 (left: 9 2)\n9 + 2 = 11 (left: 11)\n11 - 2 = 9 (left: 2 9)",
                "4 + 7 = 11 (left: 9 11 13)\n13 - 11 = 2 (left: 9 2)\n9 + 2 = 11 (left: 11)\n11 / 2 = 5.5 (left: 2 5.5)",
                "4 + 7 = 11 (left: 9 11 13)\n13 - 11 = 2 (left: 9 2)\n9 / 2 = 4.5 (left: 4.5)\nThere are no possible next steps for the input 4.5, as it is already a single number and not a combination of numbers to perform operations on.",
                "4 + 7 = 11 (left: 9 11 13)\n13 - 11 = 2 (left: 9 2)\n9 - 2 = 7 (left: 7)\n7 - 8 = -1 (left: -1 8)",
                "4 + 7 = 11 (left: 9 11 13)\n13 - 11 = 2 (left: 9 2)\n9 / 2 = 4.5 (left: 4.5)\n4.5 - 8 = -3.5"
            ],
            "values": [
                1.001,
                21.0,
                0.003,
                0.003,
                0.003
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 0.496653
    },
    "929": {
        "input": "5 6 8 12",
        "step_1": {
            "steps": [
                "8 / 6 = 4/3 (left: 5 4/3 12)",
                "6 * 8 = 48 (left: 5 48 12)",
                "12 / 6 = 2 (left: 5 2 12)",
                "5 * 6 = 30 (left: 30 8 12)",
                "12 - 6 = 6 (left: 5 6 6)"
            ],
            "values": [
                22.0,
                22.0,
                1.002,
                2.001,
                22.0
            ],
            "resampled": [
                "0 <- 4",
                "1 <- 4",
                "2 <- 0",
                "3 <- 0",
                "4 <- 0"
            ],
            "resampled_steps": [
                "12 - 6 = 6 (left: 5 6 6)",
                "12 - 6 = 6 (left: 5 6 6)",
                "8 / 6 = 4/3 (left: 5 4/3 12)",
                "8 / 6 = 4/3 (left: 5 4/3 12)",
                "8 / 6 = 4/3 (left: 5 4/3 12)"
            ]
        },
        "step_2": {
            "steps": [
                "12 - 6 = 6 (left: 5 6 6)\n5 + 6 = 11 (left: 6 11)",
                "12 - 6 = 6 (left: 5 6 6)\n6 - 5 = 1 (left: 1 6)",
                "8 / 6 = 4/3 (left: 5 4/3 12)\n5 * 12 = 60 (left: 4/3 60)",
                "8 / 6 = 4/3 (left: 5 4/3 12)\n5 * (4/3) = 20/3 (left: 20/3 12)",
                "8 / 6 = 4/3 (left: 5 4/3 12)\n5 * 4 = 20 (left: 20 3 12)"
            ],
            "values": [
                0.002,
                20.0,
                0.001,
                1.002,
                41.0
            ],
            "resampled": [
                "0 <- 4",
                "1 <- 4",
                "2 <- 4",
                "3 <- 4",
                "4 <- 4"
            ],
            "resampled_steps": [
                "8 / 6 = 4/3 (left: 5 4/3 12)\n5 * 4 = 20 (left: 20 3 12)",
                "8 / 6 = 4/3 (left: 5 4/3 12)\n5 * 4 = 20 (left: 20 3 12)",
                "8 / 6 = 4/3 (left: 5 4/3 12)\n5 * 4 = 20 (left: 20 3 12)",
                "8 / 6 = 4/3 (left: 5 4/3 12)\n5 * 4 = 20 (left: 20 3 12)",
                "8 / 6 = 4/3 (left: 5 4/3 12)\n5 * 4 = 20 (left: 20 3 12)"
            ]
        },
        "step_3": {
            "steps": [
                "8 / 6 = 4/3 (left: 5 4/3 12)\n5 * 4 = 20 (left: 20 3 12)\n20 * 3 = 60 (left: 12 60)",
                "8 / 6 = 4/3 (left: 5 4/3 12)\n5 * 4 = 20 (left: 20 3 12)\n20 + 3 = 23 (left: 23 12)",
                "8 / 6 = 4/3 (left: 5 4/3 12)\n5 * 4 = 20 (left: 20 3 12)\n20 / 3 = 6.66666666667 (left: 6.66666666667 12)",
                "8 / 6 = 4/3 (left: 5 4/3 12)\n5 * 4 = 20 (left: 20 3 12)\n20 / 3 = 6.66666666667 (left: 6.66666666667 12)",
                "8 / 6 = 4/3 (left: 5 4/3 12)\n5 * 4 = 20 (left: 20 3 12)\n3 * 12 = 36 (left: 20 36)"
            ],
            "values": [
                0.003,
                0.003,
                2.0,
                2.001,
                0.003
            ],
            "resampled": [
                "0 <- 3",
                "1 <- 2",
                "2 <- 2",
                "3 <- 3",
                "4 <- 3"
            ],
            "resampled_steps": [
                "8 / 6 = 4/3 (left: 5 4/3 12)\n5 * 4 = 20 (left: 20 3 12)\n20 / 3 = 6.66666666667 (left: 6.66666666667 12)",
                "8 / 6 = 4/3 (left: 5 4/3 12)\n5 * 4 = 20 (left: 20 3 12)\n20 / 3 = 6.66666666667 (left: 6.66666666667 12)",
                "8 / 6 = 4/3 (left: 5 4/3 12)\n5 * 4 = 20 (left: 20 3 12)\n20 / 3 = 6.66666666667 (left: 6.66666666667 12)",
                "8 / 6 = 4/3 (left: 5 4/3 12)\n5 * 4 = 20 (left: 20 3 12)\n20 / 3 = 6.66666666667 (left: 6.66666666667 12)",
                "8 / 6 = 4/3 (left: 5 4/3 12)\n5 * 4 = 20 (left: 20 3 12)\n20 / 3 = 6.66666666667 (left: 6.66666666667 12)"
            ]
        },
        "step_4": {
            "steps": [
                "8 / 6 = 4/3 (left: 5 4/3 12)\n5 * 4 = 20 (left: 20 3 12)\n20 / 3 = 6.66666666667 (left: 6.66666666667 12)\n12 - 6.66666666667 = 5.33333333333 (left: 5.33333333333 12)",
                "8 / 6 = 4/3 (left: 5 4/3 12)\n5 * 4 = 20 (left: 20 3 12)\n20 / 3 = 6.66666666667 (left: 6.66666666667 12)\n12 - 6.66666666667 = 5.33333333333 (left: 5.33333333333 12)",
                "8 / 6 = 4/3 (left: 5 4/3 12)\n5 * 4 = 20 (left: 20 3 12)\n20 / 3 = 6.66666666667 (left: 6.66666666667 12)\n6.66666666667 + 12 = 18.66666666667 (left: 12 18.66666666667)",
                "8 / 6 = 4/3 (left: 5 4/3 12)\n5 * 4 = 20 (left: 20 3 12)\n20 / 3 = 6.66666666667 (left: 6.66666666667 12)\n12 / 6.66666666667 = 1.8 (left: 1.8 12)",
                "8 / 6 = 4/3 (left: 5 4/3 12)\n5 * 4 = 20 (left: 20 3 12)\n20 / 3 = 6.66666666667 (left: 6.66666666667 12)\n12 - 6.66666666667 = 5.33333333333 (left: 5.33333333333 12)"
            ],
            "values": [
                2.0,
                0.002,
                1.002,
                2.0,
                3.0
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 0.515888
    },
    "930": {
        "input": "2 4 6 7",
        "step_1": {
            "steps": [
                "2 * 4 = 8 (left: 8 6 7)",
                "4 * 6 = 24 (left: 2 24 7)",
                "7 / 2 = 3.5 (left: 2 4 3.5)",
                "4 - 2 = 2 (left: 2 6 7)",
                "4 + 6 = 10 (left: 2 10 7)"
            ],
            "values": [
                3.0,
                1.002,
                2.001,
                1.002,
                1.001
            ],
            "resampled": [
                "0 <- 2",
                "1 <- 1",
                "2 <- 4",
                "3 <- 2",
                "4 <- 0"
            ],
            "resampled_steps": [
                "7 / 2 = 3.5 (left: 2 4 3.5)",
                "4 * 6 = 24 (left: 2 24 7)",
                "4 + 6 = 10 (left: 2 10 7)",
                "7 / 2 = 3.5 (left: 2 4 3.5)",
                "2 * 4 = 8 (left: 8 6 7)"
            ]
        },
        "step_2": {
            "steps": [
                "7 / 2 = 3.5 (left: 2 4 3.5)\n3.5 * 2 = 7 (left: 4 7)",
                "4 * 6 = 24 (left: 2 24 7)\n24 - 2 = 22 (left: 22 7)",
                "4 + 6 = 10 (left: 2 10 7)\n7 + 2 = 9 (left: 9 7)",
                "7 / 2 = 3.5 (left: 2 4 3.5)\n2 + 4 = 6 (left: 6 3.5)",
                "2 * 4 = 8 (left: 8 6 7)\n8 * 6 = 48 (left: 48 7)"
            ],
            "values": [
                0.001,
                0.003,
                0.003,
                1.002,
                1.002
            ],
            "resampled": [
                "0 <- 3",
                "1 <- 4",
                "2 <- 4",
                "3 <- 4",
                "4 <- 4"
            ],
            "resampled_steps": [
                "7 / 2 = 3.5 (left: 2 4 3.5)\n2 + 4 = 6 (left: 6 3.5)",
                "2 * 4 = 8 (left: 8 6 7)\n8 * 6 = 48 (left: 48 7)",
                "2 * 4 = 8 (left: 8 6 7)\n8 * 6 = 48 (left: 48 7)",
                "2 * 4 = 8 (left: 8 6 7)\n8 * 6 = 48 (left: 48 7)",
                "2 * 4 = 8 (left: 8 6 7)\n8 * 6 = 48 (left: 48 7)"
            ]
        },
        "step_3": {
            "steps": [
                "7 / 2 = 3.5 (left: 2 4 3.5)\n2 + 4 = 6 (left: 6 3.5)\n6 + 3.5 = 9.5 (left: 9.5)",
                "2 * 4 = 8 (left: 8 6 7)\n8 * 6 = 48 (left: 48 7)\n48 - 7 = 41 (left: 41)",
                "2 * 4 = 8 (left: 8 6 7)\n8 * 6 = 48 (left: 48 7)\n48 - 7 = 41 (left: 41)",
                "2 * 4 = 8 (left: 8 6 7)\n8 * 6 = 48 (left: 48 7)\n48 - 7 = 41 (left: 7 41)",
                "2 * 4 = 8 (left: 8 6 7)\n8 * 6 = 48 (left: 48 7)\n48 + 7 = 55 (left: 55)"
            ],
            "values": [
                0.002,
                0.002,
                0.003,
                1.002,
                0.002
            ],
            "resampled": [
                "0 <- 3",
                "1 <- 3",
                "2 <- 3",
                "3 <- 3",
                "4 <- 3"
            ],
            "resampled_steps": [
                "2 * 4 = 8 (left: 8 6 7)\n8 * 6 = 48 (left: 48 7)\n48 - 7 = 41 (left: 7 41)",
                "2 * 4 = 8 (left: 8 6 7)\n8 * 6 = 48 (left: 48 7)\n48 - 7 = 41 (left: 7 41)",
                "2 * 4 = 8 (left: 8 6 7)\n8 * 6 = 48 (left: 48 7)\n48 - 7 = 41 (left: 7 41)",
                "2 * 4 = 8 (left: 8 6 7)\n8 * 6 = 48 (left: 48 7)\n48 - 7 = 41 (left: 7 41)",
                "2 * 4 = 8 (left: 8 6 7)\n8 * 6 = 48 (left: 48 7)\n48 - 7 = 41 (left: 7 41)"
            ]
        },
        "step_4": {
            "steps": [
                "2 * 4 = 8 (left: 8 6 7)\n8 * 6 = 48 (left: 48 7)\n48 - 7 = 41 (left: 7 41)\n41 - 7 = 34 (left: 7 34)",
                "2 * 4 = 8 (left: 8 6 7)\n8 * 6 = 48 (left: 48 7)\n48 - 7 = 41 (left: 7 41)\n7 * 41 = 287 (left: 287)",
                "2 * 4 = 8 (left: 8 6 7)\n8 * 6 = 48 (left: 48 7)\n48 - 7 = 41 (left: 7 41)\n7 * 41 = 287 (left: 41 287)",
                "2 * 4 = 8 (left: 8 6 7)\n8 * 6 = 48 (left: 48 7)\n48 - 7 = 41 (left: 7 41)\n7 * 41 = 287 (left: 287)",
                "2 * 4 = 8 (left: 8 6 7)\n8 * 6 = 48 (left: 48 7)\n48 - 7 = 41 (left: 7 41)\n7 + 41 = 48 (left: 48)"
            ],
            "values": [
                2.001,
                0.003,
                0.002,
                0.002,
                0.003
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 0.53329
    },
    "931": {
        "input": "2 5 10 10",
        "step_1": {
            "steps": [
                "5 * 2 = 10 (left: 10 10 10)",
                "5 * 2 = 10 (left: 10 10 10)",
                "2 + 5 = 7 (left: 7 10 10)",
                "10 / 2 = 5 (left: 5 5 10)",
                "10 / 2 = 5 (left: 5 5 10)"
            ],
            "values": [
                0.002,
                2.001,
                2.001,
                2.001,
                2.001
            ],
            "resampled": [
                "0 <- 4",
                "1 <- 2",
                "2 <- 2",
                "3 <- 3",
                "4 <- 4"
            ],
            "resampled_steps": [
                "10 / 2 = 5 (left: 5 5 10)",
                "2 + 5 = 7 (left: 7 10 10)",
                "2 + 5 = 7 (left: 7 10 10)",
                "10 / 2 = 5 (left: 5 5 10)",
                "10 / 2 = 5 (left: 5 5 10)"
            ]
        },
        "step_2": {
            "steps": [
                "10 / 2 = 5 (left: 5 5 10)\n5 / 5 = 1 (left: 1 10)",
                "2 + 5 = 7 (left: 7 10 10)\n10 - 3 = 7 (left: 7 10)",
                "2 + 5 = 7 (left: 7 10 10)\n7 + 10 = 17 (left: 10 17)",
                "10 / 2 = 5 (left: 5 5 10)\n10 - 5 = 5 (left: 5 10)",
                "10 / 2 = 5 (left: 5 5 10)\n10 / 5 = 2 (left: 2 10)"
            ],
            "values": [
                41.0,
                1.001,
                0.003,
                0.003,
                3.0
            ],
            "resampled": [
                "0 <- 0",
                "1 <- 0",
                "2 <- 0",
                "3 <- 0",
                "4 <- 0"
            ],
            "resampled_steps": [
                "10 / 2 = 5 (left: 5 5 10)\n5 / 5 = 1 (left: 1 10)",
                "10 / 2 = 5 (left: 5 5 10)\n5 / 5 = 1 (left: 1 10)",
                "10 / 2 = 5 (left: 5 5 10)\n5 / 5 = 1 (left: 1 10)",
                "10 / 2 = 5 (left: 5 5 10)\n5 / 5 = 1 (left: 1 10)",
                "10 / 2 = 5 (left: 5 5 10)\n5 / 5 = 1 (left: 1 10)"
            ]
        },
        "step_3": {
            "steps": [
                "10 / 2 = 5 (left: 5 5 10)\n5 / 5 = 1 (left: 1 10)\n1 + 10 = 11 (left: 11)",
                "10 / 2 = 5 (left: 5 5 10)\n5 / 5 = 1 (left: 1 10)\n10 / 1 = 10 (left: 10)",
                "10 / 2 = 5 (left: 5 5 10)\n5 / 5 = 1 (left: 1 10)\n10 / 1 = 10 (left: 10)",
                "10 / 2 = 5 (left: 5 5 10)\n5 / 5 = 1 (left: 1 10)\n10 + 1 = 11 (left: 1 11)",
                "10 / 2 = 5 (left: 5 5 10)\n5 / 5 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10)"
            ],
            "values": [
                0.0,
                20.001,
                0.002,
                0.002,
                20.001
            ],
            "resampled": [
                "0 <- 4",
                "1 <- 1",
                "2 <- 4",
                "3 <- 4",
                "4 <- 4"
            ],
            "resampled_steps": [
                "10 / 2 = 5 (left: 5 5 10)\n5 / 5 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10)",
                "10 / 2 = 5 (left: 5 5 10)\n5 / 5 = 1 (left: 1 10)\n10 / 1 = 10 (left: 10)",
                "10 / 2 = 5 (left: 5 5 10)\n5 / 5 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10)",
                "10 / 2 = 5 (left: 5 5 10)\n5 / 5 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10)",
                "10 / 2 = 5 (left: 5 5 10)\n5 / 5 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10)"
            ]
        },
        "step_4": {
            "steps": [
                "10 / 2 = 5 (left: 5 5 10)\n5 / 5 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10)\n10 - 2 = 8 (left: 8)",
                "10 / 2 = 5 (left: 5 5 10)\n5 / 5 = 1 (left: 1 10)\n10 / 1 = 10 (left: 10)\n10 + 2 = 12",
                "10 / 2 = 5 (left: 5 5 10)\n5 / 5 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10)\n10 + 2 = 12 (left: 2 12)",
                "10 / 2 = 5 (left: 5 5 10)\n5 / 5 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10)\n10 * 2 = 20 (left: 20)",
                "10 / 2 = 5 (left: 5 5 10)\n5 / 5 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10)\n10 + 2 = 12 (left: 2 12)"
            ],
            "values": [
                0.001,
                0.003,
                60.0,
                0.002,
                60.0
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 0.5489850000000001
    },
    "932": {
        "input": "6 6 7 12",
        "step_1": {
            "steps": [
                "7 - 6 = 1 (left: 1 6 12)",
                "6 * 6 = 36 (left: 7 36)",
                "12 - 6 = 6 (left: 6 7 6)",
                "6 * 6 = 36 (left: 7 12 36)",
                "7 - 6 = 1 (left: 6 1 12)"
            ],
            "values": [
                0.003,
                0.003,
                3.0,
                1.002,
                0.003
            ],
            "resampled": [
                "0 <- 2",
                "1 <- 3",
                "2 <- 2",
                "3 <- 2",
                "4 <- 3"
            ],
            "resampled_steps": [
                "12 - 6 = 6 (left: 6 7 6)",
                "6 * 6 = 36 (left: 7 12 36)",
                "12 - 6 = 6 (left: 6 7 6)",
                "12 - 6 = 6 (left: 6 7 6)",
                "6 * 6 = 36 (left: 7 12 36)"
            ]
        },
        "step_2": {
            "steps": [
                "12 - 6 = 6 (left: 6 7 6)\n7 - 6 = 1 (left: 6 1)",
                "6 * 6 = 36 (left: 7 12 36)\n7 * 2 = 14 (left: 14 12 36)",
                "12 - 6 = 6 (left: 6 7 6)\n6 * 7 = 42 (left: 42 6)",
                "12 - 6 = 6 (left: 6 7 6)\n7 * 6 = 42 (left: 42 6)",
                "6 * 6 = 36 (left: 7 12 36)\n36 / 12 = 3 (left: 7 3)"
            ],
            "values": [
                20.0,
                40.001,
                40.0,
                21.0,
                2.001
            ],
            "resampled": [
                "0 <- 1",
                "1 <- 2",
                "2 <- 0",
                "3 <- 3",
                "4 <- 1"
            ],
            "resampled_steps": [
                "6 * 6 = 36 (left: 7 12 36)\n7 * 2 = 14 (left: 14 12 36)",
                "12 - 6 = 6 (left: 6 7 6)\n6 * 7 = 42 (left: 42 6)",
                "12 - 6 = 6 (left: 6 7 6)\n7 - 6 = 1 (left: 6 1)",
                "12 - 6 = 6 (left: 6 7 6)\n7 * 6 = 42 (left: 42 6)",
                "6 * 6 = 36 (left: 7 12 36)\n7 * 2 = 14 (left: 14 12 36)"
            ]
        },
        "step_3": {
            "steps": [
                "6 * 6 = 36 (left: 7 12 36)\n7 * 2 = 14 (left: 14 12 36)\n36 - 14 = 22 (left: 12 22)",
                "12 - 6 = 6 (left: 6 7 6)\n6 * 7 = 42 (left: 42 6)\n42 * 6 = 252 (left: 252)",
                "12 - 6 = 6 (left: 6 7 6)\n7 - 6 = 1 (left: 6 1)\n6 / 1 = 6 (left: 6)",
                "12 - 6 = 6 (left: 6 7 6)\n7 * 6 = 42 (left: 42 6)\n42 + 6 = 48 (left: 48)",
                "6 * 6 = 36 (left: 7 12 36)\n7 * 2 = 14 (left: 14 12 36)\n12 + 36 = 48 (left: 14 48)"
            ],
            "values": [
                0.003,
                0.002,
                0.002,
                0.002,
                0.003
            ],
            "resampled": [
                "0 <- 0",
                "1 <- 4",
                "2 <- 2",
                "3 <- 4",
                "4 <- 3"
            ],
            "resampled_steps": [
                "6 * 6 = 36 (left: 7 12 36)\n7 * 2 = 14 (left: 14 12 36)\n36 - 14 = 22 (left: 12 22)",
                "6 * 6 = 36 (left: 7 12 36)\n7 * 2 = 14 (left: 14 12 36)\n12 + 36 = 48 (left: 14 48)",
                "12 - 6 = 6 (left: 6 7 6)\n7 - 6 = 1 (left: 6 1)\n6 / 1 = 6 (left: 6)",
                "6 * 6 = 36 (left: 7 12 36)\n7 * 2 = 14 (left: 14 12 36)\n12 + 36 = 48 (left: 14 48)",
                "12 - 6 = 6 (left: 6 7 6)\n7 * 6 = 42 (left: 42 6)\n42 + 6 = 48 (left: 48)"
            ]
        },
        "step_4": {
            "steps": [
                "6 * 6 = 36 (left: 7 12 36)\n7 * 2 = 14 (left: 14 12 36)\n36 - 14 = 22 (left: 12 22)\n22 / 12 = 1.83 (left: 12 1.83)",
                "6 * 6 = 36 (left: 7 12 36)\n7 * 2 = 14 (left: 14 12 36)\n12 + 36 = 48 (left: 14 48)\n14 - 48 = -34",
                "12 - 6 = 6 (left: 6 7 6)\n7 - 6 = 1 (left: 6 1)\n6 / 1 = 6 (left: 6)\n6 * 2 = 12 (left: 8 12)",
                "6 * 6 = 36 (left: 7 12 36)\n7 * 2 = 14 (left: 14 12 36)\n12 + 36 = 48 (left: 14 48)\n14 + 48 = 62 (left: 62)",
                "12 - 6 = 6 (left: 6 7 6)\n7 * 6 = 42 (left: 42 6)\n42 + 6 = 48 (left: 48)\nThere are many possible next steps for the number 48, here are a few examples:"
            ],
            "values": [
                2.001,
                0.003,
                0.003,
                0.003,
                0.003
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 0.5659379999999999
    },
    "933": {
        "input": "6 9 9 11",
        "step_1": {
            "steps": [
                "11 + 6 = 17 (left: 9 9 17)",
                "6 + 9 = 15 (left: 9 15 11)",
                "11 + 6 = 17 (left: 6 9 17)",
                "9 - 3 = 6 (left: 6 9 6 11)",
                "9 / 3 = 3 (left: 3 11 9)"
            ],
            "values": [
                20.002,
                3.0,
                1.002,
                3.0,
                60.0
            ],
            "resampled": [
                "0 <- 4",
                "1 <- 4",
                "2 <- 3",
                "3 <- 4",
                "4 <- 4"
            ],
            "resampled_steps": [
                "9 / 3 = 3 (left: 3 11 9)",
                "9 / 3 = 3 (left: 3 11 9)",
                "9 - 3 = 6 (left: 6 9 6 11)",
                "9 / 3 = 3 (left: 3 11 9)",
                "9 / 3 = 3 (left: 3 11 9)"
            ]
        },
        "step_2": {
            "steps": [
                "9 / 3 = 3 (left: 3 11 9)\n11 - 9 = 2 (left: 2 9)",
                "9 / 3 = 3 (left: 3 11 9)\n9 - 3 = 6 (left: 6 11)",
                "9 - 3 = 6 (left: 6 9 6 11)\n9 / 6 = 1.5 (left: 6 1.5 11)",
                "9 / 3 = 3 (left: 3 11 9)\n11 - 3 = 8 (left: 8 9)",
                "9 / 3 = 3 (left: 3 11 9)\n9 - 3 = 6 (left: 6 11)"
            ],
            "values": [
                1.001,
                1.002,
                2.001,
                0.003,
                1.002
            ],
            "resampled": [
                "0 <- 2",
                "1 <- 4",
                "2 <- 0",
                "3 <- 2",
                "4 <- 4"
            ],
            "resampled_steps": [
                "9 - 3 = 6 (left: 6 9 6 11)\n9 / 6 = 1.5 (left: 6 1.5 11)",
                "9 / 3 = 3 (left: 3 11 9)\n9 - 3 = 6 (left: 6 11)",
                "9 / 3 = 3 (left: 3 11 9)\n11 - 9 = 2 (left: 2 9)",
                "9 - 3 = 6 (left: 6 9 6 11)\n9 / 6 = 1.5 (left: 6 1.5 11)",
                "9 / 3 = 3 (left: 3 11 9)\n9 - 3 = 6 (left: 6 11)"
            ]
        },
        "step_3": {
            "steps": [
                "9 - 3 = 6 (left: 6 9 6 11)\n9 / 6 = 1.5 (left: 6 1.5 11)\n1.5 * 11 = 16.5 (left: 6 16.5)",
                "9 / 3 = 3 (left: 3 11 9)\n9 - 3 = 6 (left: 6 11)\n6 + 11 = 17 (left: 17)",
                "9 / 3 = 3 (left: 3 11 9)\n11 - 9 = 2 (left: 2 9)\n2 * 9 = 18 (left: 9 18)",
                "9 - 3 = 6 (left: 6 9 6 11)\n9 / 6 = 1.5 (left: 6 1.5 11)\n6 + 1.5 = 7.5 (left: 7.5 11)",
                "9 / 3 = 3 (left: 3 11 9)\n9 - 3 = 6 (left: 6 11)\n11 - 6 = 5 (left: 5)"
            ],
            "values": [
                2.001,
                0.003,
                0.002,
                1.002,
                0.003
            ],
            "resampled": [
                "0 <- 3",
                "1 <- 3",
                "2 <- 0",
                "3 <- 0",
                "4 <- 0"
            ],
            "resampled_steps": [
                "9 - 3 = 6 (left: 6 9 6 11)\n9 / 6 = 1.5 (left: 6 1.5 11)\n6 + 1.5 = 7.5 (left: 7.5 11)",
                "9 - 3 = 6 (left: 6 9 6 11)\n9 / 6 = 1.5 (left: 6 1.5 11)\n6 + 1.5 = 7.5 (left: 7.5 11)",
                "9 - 3 = 6 (left: 6 9 6 11)\n9 / 6 = 1.5 (left: 6 1.5 11)\n1.5 * 11 = 16.5 (left: 6 16.5)",
                "9 - 3 = 6 (left: 6 9 6 11)\n9 / 6 = 1.5 (left: 6 1.5 11)\n1.5 * 11 = 16.5 (left: 6 16.5)",
                "9 - 3 = 6 (left: 6 9 6 11)\n9 / 6 = 1.5 (left: 6 1.5 11)\n1.5 * 11 = 16.5 (left: 6 16.5)"
            ]
        },
        "step_4": {
            "steps": [
                "9 - 3 = 6 (left: 6 9 6 11)\n9 / 6 = 1.5 (left: 6 1.5 11)\n6 + 1.5 = 7.5 (left: 7.5 11)\n11 - 7.5 = 3.5 (left: 3.5)",
                "9 - 3 = 6 (left: 6 9 6 11)\n9 / 6 = 1.5 (left: 6 1.5 11)\n6 + 1.5 = 7.5 (left: 7.5 11)\n7.5 * 11 = 82.5 (left: 82.5)",
                "9 - 3 = 6 (left: 6 9 6 11)\n9 / 6 = 1.5 (left: 6 1.5 11)\n1.5 * 11 = 16.5 (left: 6 16.5)\n6 + 16.5 = 22.5 (left: 22.5)",
                "9 - 3 = 6 (left: 6 9 6 11)\n9 / 6 = 1.5 (left: 6 1.5 11)\n1.5 * 11 = 16.5 (left: 6 16.5)\n6 + 16.5 = 22.5 (left: 16.5 22.5)",
                "9 - 3 = 6 (left: 6 9 6 11)\n9 / 6 = 1.5 (left: 6 1.5 11)\n1.5 * 11 = 16.5 (left: 6 16.5)\n16.5 - 6 = 10.5 (left: 10.5)"
            ],
            "values": [
                0.003,
                0.002,
                0.002,
                0.003,
                0.003
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 0.58412
    },
    "934": {
        "input": "5 8 11 12",
        "step_1": {
            "steps": [
                "8 - 5 = 3 (left: 3 11 12)",
                "11 / 5 = 2.2 (left: 2.2 8 12)",
                "5 * 8 = 40 (left: 40 11 12)",
                "8 + 11 = 19 (left: 5 19 12)",
                "8 / 5 = 1.6 (left: 1.6 11 12)"
            ],
            "values": [
                1.002,
                1.001,
                2.001,
                3.0,
                0.003
            ],
            "resampled": [
                "0 <- 1",
                "1 <- 3",
                "2 <- 3",
                "3 <- 2",
                "4 <- 0"
            ],
            "resampled_steps": [
                "11 / 5 = 2.2 (left: 2.2 8 12)",
                "8 + 11 = 19 (left: 5 19 12)",
                "8 + 11 = 19 (left: 5 19 12)",
                "5 * 8 = 40 (left: 40 11 12)",
                "8 - 5 = 3 (left: 3 11 12)"
            ]
        },
        "step_2": {
            "steps": [
                "11 / 5 = 2.2 (left: 2.2 8 12)\n12 - 2.2 = 9.8 (left: 8 9.8)",
                "8 + 11 = 19 (left: 5 19 12)\n19 - 5 = 14 (left: 14 12)",
                "8 + 11 = 19 (left: 5 19 12)\n5 - 19 = -14 (left: -14 12)",
                "5 * 8 = 40 (left: 40 11 12)\n40 - 11 = 29 (left: 29 12)",
                "8 - 5 = 3 (left: 3 11 12)\n3 * 11 = 33 (left: 33 12)"
            ],
            "values": [
                2.0,
                0.003,
                0.002,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 0",
                "1 <- 0",
                "2 <- 0",
                "3 <- 0",
                "4 <- 0"
            ],
            "resampled_steps": [
                "11 / 5 = 2.2 (left: 2.2 8 12)\n12 - 2.2 = 9.8 (left: 8 9.8)",
                "11 / 5 = 2.2 (left: 2.2 8 12)\n12 - 2.2 = 9.8 (left: 8 9.8)",
                "11 / 5 = 2.2 (left: 2.2 8 12)\n12 - 2.2 = 9.8 (left: 8 9.8)",
                "11 / 5 = 2.2 (left: 2.2 8 12)\n12 - 2.2 = 9.8 (left: 8 9.8)",
                "11 / 5 = 2.2 (left: 2.2 8 12)\n12 - 2.2 = 9.8 (left: 8 9.8)"
            ]
        },
        "step_3": {
            "steps": [
                "11 / 5 = 2.2 (left: 2.2 8 12)\n12 - 2.2 = 9.8 (left: 8 9.8)\n8 / 9.8 = 0.816 (left: 0.816)",
                "11 / 5 = 2.2 (left: 2.2 8 12)\n12 - 2.2 = 9.8 (left: 8 9.8)\n8 * 9.8 = 78.4 (left: 78.4)",
                "11 / 5 = 2.2 (left: 2.2 8 12)\n12 - 2.2 = 9.8 (left: 8 9.8)\n8 * 9.8 = 78.4 (left: 78.4)",
                "11 / 5 = 2.2 (left: 2.2 8 12)\n12 - 2.2 = 9.8 (left: 8 9.8)\n8 * 9.8 = 78.4 (left: 78.4)",
                "11 / 5 = 2.2 (left: 2.2 8 12)\n12 - 2.2 = 9.8 (left: 8 9.8)\n8 + 9.8 = 17.8 (left: 17.8)"
            ],
            "values": [
                0.002,
                0.001,
                0.002,
                0.0,
                0.002
            ],
            "resampled": [
                "0 <- 0",
                "1 <- 0",
                "2 <- 1",
                "3 <- 2",
                "4 <- 2"
            ],
            "resampled_steps": [
                "11 / 5 = 2.2 (left: 2.2 8 12)\n12 - 2.2 = 9.8 (left: 8 9.8)\n8 / 9.8 = 0.816 (left: 0.816)",
                "11 / 5 = 2.2 (left: 2.2 8 12)\n12 - 2.2 = 9.8 (left: 8 9.8)\n8 / 9.8 = 0.816 (left: 0.816)",
                "11 / 5 = 2.2 (left: 2.2 8 12)\n12 - 2.2 = 9.8 (left: 8 9.8)\n8 * 9.8 = 78.4 (left: 78.4)",
                "11 / 5 = 2.2 (left: 2.2 8 12)\n12 - 2.2 = 9.8 (left: 8 9.8)\n8 * 9.8 = 78.4 (left: 78.4)",
                "11 / 5 = 2.2 (left: 2.2 8 12)\n12 - 2.2 = 9.8 (left: 8 9.8)\n8 * 9.8 = 78.4 (left: 78.4)"
            ]
        },
        "step_4": {
            "steps": [
                "11 / 5 = 2.2 (left: 2.2 8 12)\n12 - 2.2 = 9.8 (left: 8 9.8)\n8 / 9.8 = 0.816 (left: 0.816)\n0.816 - 2 = -1.184",
                "11 / 5 = 2.2 (left: 2.2 8 12)\n12 - 2.2 = 9.8 (left: 8 9.8)\n8 / 9.8 = 0.816 (left: 0.816)\n0.816 / 2 = 0.408 (left: 0.408)",
                "11 / 5 = 2.2 (left: 2.2 8 12)\n12 - 2.2 = 9.8 (left: 8 9.8)\n8 * 9.8 = 78.4 (left: 78.4)\nThere are numerous possible next steps for the number 78.4, including addition, subtraction, multiplication, and division with other numbers. Without specific instructions or constraints, it's difficult to provide a specific next step.",
                "11 / 5 = 2.2 (left: 2.2 8 12)\n12 - 2.2 = 9.8 (left: 8 9.8)\n8 * 9.8 = 78.4 (left: 78.4)\nIt seems you have only provided a single number as input (78.4). Could you please clarify what operation or operations you would like to perform on this number? For example, would you like to add, subtract, multiply, or divide it by another number?",
                "11 / 5 = 2.2 (left: 2.2 8 12)\n12 - 2.2 = 9.8 (left: 8 9.8)\n8 * 9.8 = 78.4 (left: 78.4)\nIt seems like there might be a mistake in the input. The input should be a series of numbers separated by operations, such as 2 + 8 * 5. Can you please provide the input in that format? Thank you!"
            ],
            "values": [
                0.003,
                0.002,
                0.003,
                0.003,
                0.003
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 0.601014
    },
    "935": {
        "input": "5 6 8 10",
        "step_1": {
            "steps": [
                "5 + 6 = 11 (left: 8 10 11)",
                "8 / 6 = 1.33 (left: 5 1.33 10)",
                "10 - 6 = 4 (left: 5 4 8)",
                "8 - 5 = 3 (left: 3 6 10)",
                "5 + 6 = 11 (left: 8 10 11)"
            ],
            "values": [
                1.002,
                3.0,
                2.0,
                2.001,
                3.0
            ],
            "resampled": [
                "0 <- 2",
                "1 <- 4",
                "2 <- 4",
                "3 <- 3",
                "4 <- 1"
            ],
            "resampled_steps": [
                "10 - 6 = 4 (left: 5 4 8)",
                "5 + 6 = 11 (left: 8 10 11)",
                "5 + 6 = 11 (left: 8 10 11)",
                "8 - 5 = 3 (left: 3 6 10)",
                "8 / 6 = 1.33 (left: 5 1.33 10)"
            ]
        },
        "step_2": {
            "steps": [
                "10 - 6 = 4 (left: 5 4 8)\n4 * 8 = 32 (left: 5 32)",
                "5 + 6 = 11 (left: 8 10 11)\n10 + 11 = 21 (left: 8 21)",
                "5 + 6 = 11 (left: 8 10 11)\n11 / 8 = 1.375 (left: 1.375)",
                "8 - 5 = 3 (left: 3 6 10)\n6 * 3 = 18 (left: 18 10)",
                "8 / 6 = 1.33 (left: 5 1.33 10)\n5 / 1.33 = 3.76 (left: 3.76 10)"
            ],
            "values": [
                2.001,
                0.003,
                0.002,
                0.002,
                1.001
            ],
            "resampled": [
                "0 <- 0",
                "1 <- 4",
                "2 <- 0",
                "3 <- 4",
                "4 <- 4"
            ],
            "resampled_steps": [
                "10 - 6 = 4 (left: 5 4 8)\n4 * 8 = 32 (left: 5 32)",
                "8 / 6 = 1.33 (left: 5 1.33 10)\n5 / 1.33 = 3.76 (left: 3.76 10)",
                "10 - 6 = 4 (left: 5 4 8)\n4 * 8 = 32 (left: 5 32)",
                "8 / 6 = 1.33 (left: 5 1.33 10)\n5 / 1.33 = 3.76 (left: 3.76 10)",
                "8 / 6 = 1.33 (left: 5 1.33 10)\n5 / 1.33 = 3.76 (left: 3.76 10)"
            ]
        },
        "step_3": {
            "steps": [
                "10 - 6 = 4 (left: 5 4 8)\n4 * 8 = 32 (left: 5 32)\n32 / 5 = 6.4 (left: 5 6.4)",
                "8 / 6 = 1.33 (left: 5 1.33 10)\n5 / 1.33 = 3.76 (left: 3.76 10)\n3.76 * 10 = 37.6 (left: 37.6)",
                "10 - 6 = 4 (left: 5 4 8)\n4 * 8 = 32 (left: 5 32)\n5 * 32 = 160 (left: 32 160)",
                "8 / 6 = 1.33 (left: 5 1.33 10)\n5 / 1.33 = 3.76 (left: 3.76 10)\n10 - 3.76 = 6.24 (left: 6.24)",
                "8 / 6 = 1.33 (left: 5 1.33 10)\n5 / 1.33 = 3.76 (left: 3.76 10)\n10 / 3.76 = 2.659574468 (left: 3.76 2.659574468)"
            ],
            "values": [
                60.0,
                0.003,
                21.0,
                0.0,
                3.0
            ],
            "resampled": [
                "0 <- 0",
                "1 <- 2",
                "2 <- 0",
                "3 <- 0",
                "4 <- 2"
            ],
            "resampled_steps": [
                "10 - 6 = 4 (left: 5 4 8)\n4 * 8 = 32 (left: 5 32)\n32 / 5 = 6.4 (left: 5 6.4)",
                "10 - 6 = 4 (left: 5 4 8)\n4 * 8 = 32 (left: 5 32)\n5 * 32 = 160 (left: 32 160)",
                "10 - 6 = 4 (left: 5 4 8)\n4 * 8 = 32 (left: 5 32)\n32 / 5 = 6.4 (left: 5 6.4)",
                "10 - 6 = 4 (left: 5 4 8)\n4 * 8 = 32 (left: 5 32)\n32 / 5 = 6.4 (left: 5 6.4)",
                "10 - 6 = 4 (left: 5 4 8)\n4 * 8 = 32 (left: 5 32)\n5 * 32 = 160 (left: 32 160)"
            ]
        },
        "step_4": {
            "steps": [
                "10 - 6 = 4 (left: 5 4 8)\n4 * 8 = 32 (left: 5 32)\n32 / 5 = 6.4 (left: 5 6.4)\n6.4 / 5 = 1.28 (left: 1.28)",
                "10 - 6 = 4 (left: 5 4 8)\n4 * 8 = 32 (left: 5 32)\n5 * 32 = 160 (left: 32 160)\n32 + 128 = 160 (left: 160 32 160)",
                "10 - 6 = 4 (left: 5 4 8)\n4 * 8 = 32 (left: 5 32)\n32 / 5 = 6.4 (left: 5 6.4)\n5 + 6.4 = 11.4 (left: 6.4 11.4)",
                "10 - 6 = 4 (left: 5 4 8)\n4 * 8 = 32 (left: 5 32)\n32 / 5 = 6.4 (left: 5 6.4)\n5 * 6.4 = 32 (left: 6.4 32)",
                "10 - 6 = 4 (left: 5 4 8)\n4 * 8 = 32 (left: 5 32)\n5 * 32 = 160 (left: 32 160)\n160 / 32 = 5 (left: 5 32 160)"
            ],
            "values": [
                0.002,
                3.0,
                3.0,
                1.002,
                60.0
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 0.619286
    },
    "936": {
        "input": "6 11 12 13",
        "step_1": {
            "steps": [
                "11 + 12 = 23 (left: 6 23 13)",
                "13 - 6 = 7 (left: 11 12 7)",
                "11 + 1 = 12 (left: 6 12 13)",
                "12 - 13 = -1 (left: 6 11 -1)",
                "11 - 6 = 5 (left: 5 11 12)"
            ],
            "values": [
                1.002,
                1.002,
                3.0,
                1.002,
                3.0
            ],
            "resampled": [
                "0 <- 2",
                "1 <- 1",
                "2 <- 2",
                "3 <- 1",
                "4 <- 0"
            ],
            "resampled_steps": [
                "11 + 1 = 12 (left: 6 12 13)",
                "13 - 6 = 7 (left: 11 12 7)",
                "11 + 1 = 12 (left: 6 12 13)",
                "13 - 6 = 7 (left: 11 12 7)",
                "11 + 12 = 23 (left: 6 23 13)"
            ]
        },
        "step_2": {
            "steps": [
                "11 + 1 = 12 (left: 6 12 13)\n12 + 6 = 18 (left: 18 13)",
                "13 - 6 = 7 (left: 11 12 7)\n12 - 11 = 1 (left: 1 7)",
                "11 + 1 = 12 (left: 6 12 13)\n6 / 12 = 0.5 (left: 0.5 13)",
                "13 - 6 = 7 (left: 11 12 7)\n11 + 12 = 23 (left: 23 7)",
                "11 + 12 = 23 (left: 6 23 13)\n23 / 6 = 3.83 (left: 3.83 13)"
            ],
            "values": [
                0.003,
                0.0,
                2.001,
                0.002,
                1.002
            ],
            "resampled": [
                "0 <- 2",
                "1 <- 2",
                "2 <- 4",
                "3 <- 4",
                "4 <- 2"
            ],
            "resampled_steps": [
                "11 + 1 = 12 (left: 6 12 13)\n6 / 12 = 0.5 (left: 0.5 13)",
                "11 + 1 = 12 (left: 6 12 13)\n6 / 12 = 0.5 (left: 0.5 13)",
                "11 + 12 = 23 (left: 6 23 13)\n23 / 6 = 3.83 (left: 3.83 13)",
                "11 + 12 = 23 (left: 6 23 13)\n23 / 6 = 3.83 (left: 3.83 13)",
                "11 + 1 = 12 (left: 6 12 13)\n6 / 12 = 0.5 (left: 0.5 13)"
            ]
        },
        "step_3": {
            "steps": [
                "11 + 1 = 12 (left: 6 12 13)\n6 / 12 = 0.5 (left: 0.5 13)\n13 + 0.5 = 13.5 (left: 13.5)",
                "11 + 1 = 12 (left: 6 12 13)\n6 / 12 = 0.5 (left: 0.5 13)\n0.5 + 13 = 13.5 (left: 13.5)",
                "11 + 12 = 23 (left: 6 23 13)\n23 / 6 = 3.83 (left: 3.83 13)\n3.83 * 13 = 49.79 (left: 49.79)",
                "11 + 12 = 23 (left: 6 23 13)\n23 / 6 = 3.83 (left: 3.83 13)\n13 + 3.83 = 16.83 (left: 16.83)",
                "11 + 1 = 12 (left: 6 12 13)\n6 / 12 = 0.5 (left: 0.5 13)\n0.5 + 13 = 13.5 (left: 13.5)"
            ],
            "values": [
                0.003,
                0.003,
                0.002,
                0.0,
                0.003
            ],
            "resampled": [
                "0 <- 2",
                "1 <- 1",
                "2 <- 4",
                "3 <- 1",
                "4 <- 1"
            ],
            "resampled_steps": [
                "11 + 12 = 23 (left: 6 23 13)\n23 / 6 = 3.83 (left: 3.83 13)\n3.83 * 13 = 49.79 (left: 49.79)",
                "11 + 1 = 12 (left: 6 12 13)\n6 / 12 = 0.5 (left: 0.5 13)\n0.5 + 13 = 13.5 (left: 13.5)",
                "11 + 1 = 12 (left: 6 12 13)\n6 / 12 = 0.5 (left: 0.5 13)\n0.5 + 13 = 13.5 (left: 13.5)",
                "11 + 1 = 12 (left: 6 12 13)\n6 / 12 = 0.5 (left: 0.5 13)\n0.5 + 13 = 13.5 (left: 13.5)",
                "11 + 1 = 12 (left: 6 12 13)\n6 / 12 = 0.5 (left: 0.5 13)\n0.5 + 13 = 13.5 (left: 13.5)"
            ]
        },
        "step_4": {
            "steps": [
                "11 + 12 = 23 (left: 6 23 13)\n23 / 6 = 3.83 (left: 3.83 13)\n3.83 * 13 = 49.79 (left: 49.79)\n49.79 + 2 = 51.79",
                "11 + 1 = 12 (left: 6 12 13)\n6 / 12 = 0.5 (left: 0.5 13)\n0.5 + 13 = 13.5 (left: 13.5)\n13.5 - 2 = 11.5",
                "11 + 1 = 12 (left: 6 12 13)\n6 / 12 = 0.5 (left: 0.5 13)\n0.5 + 13 = 13.5 (left: 13.5)\n13.5 + 2 = 15.5",
                "11 + 1 = 12 (left: 6 12 13)\n6 / 12 = 0.5 (left: 0.5 13)\n0.5 + 13 = 13.5 (left: 13.5)\nThere are no possible next steps for the input 13.5, as it is already a single number and cannot be combined with any other numbers using the basic operations of addition, subtraction, multiplication, or division.",
                "11 + 1 = 12 (left: 6 12 13)\n6 / 12 = 0.5 (left: 0.5 13)\n0.5 + 13 = 13.5 (left: 13.5)\nThere are no possible next steps for the input 13.5 as it is already a single number and cannot be further combined with other numbers using the four basic arithmetic operations."
            ],
            "values": [
                0.003,
                0.003,
                0.003,
                0.003,
                0.003
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 0.635937
    },
    "937": {
        "input": "2 2 8 8",
        "step_1": {
            "steps": [
                "2 + 2 = 4 (left: 4 8 8)",
                "8 - 2 = 6 (left: 2 6 8)",
                "8 - 2 = 6 (left: 2 6 8)",
                "8 - 2 = 6 (left: 6 8 8)",
                "8 - 2 = 6 (left: 2 6 8)"
            ],
            "values": [
                60.0,
                2.001,
                0.002,
                3.0,
                1.002
            ],
            "resampled": [
                "0 <- 0",
                "1 <- 0",
                "2 <- 0",
                "3 <- 0",
                "4 <- 0"
            ],
            "resampled_steps": [
                "2 + 2 = 4 (left: 4 8 8)",
                "2 + 2 = 4 (left: 4 8 8)",
                "2 + 2 = 4 (left: 4 8 8)",
                "2 + 2 = 4 (left: 4 8 8)",
                "2 + 2 = 4 (left: 4 8 8)"
            ]
        },
        "step_2": {
            "steps": [
                "2 + 2 = 4 (left: 4 8 8)\n4 + 8 = 12 (left: 8 12)",
                "2 + 2 = 4 (left: 4 8 8)\n8 * 4 = 32 (left: 8 32)",
                "2 + 2 = 4 (left: 4 8 8)\n8 - 4 = 4 (left: 4 8)",
                "2 + 2 = 4 (left: 4 8 8)\n8 - 4 = 4 (left: 4 8)",
                "2 + 2 = 4 (left: 4 8 8)\n4 + 8 = 12 (left: 8 12)"
            ],
            "values": [
                2.0,
                20.002,
                0.003,
                0.003,
                1.002
            ],
            "resampled": [
                "0 <- 1",
                "1 <- 1",
                "2 <- 1",
                "3 <- 1",
                "4 <- 1"
            ],
            "resampled_steps": [
                "2 + 2 = 4 (left: 4 8 8)\n8 * 4 = 32 (left: 8 32)",
                "2 + 2 = 4 (left: 4 8 8)\n8 * 4 = 32 (left: 8 32)",
                "2 + 2 = 4 (left: 4 8 8)\n8 * 4 = 32 (left: 8 32)",
                "2 + 2 = 4 (left: 4 8 8)\n8 * 4 = 32 (left: 8 32)",
                "2 + 2 = 4 (left: 4 8 8)\n8 * 4 = 32 (left: 8 32)"
            ]
        },
        "step_3": {
            "steps": [
                "2 + 2 = 4 (left: 4 8 8)\n8 * 4 = 32 (left: 8 32)\n8 * 4 = 32 (left: 32)",
                "2 + 2 = 4 (left: 4 8 8)\n8 * 4 = 32 (left: 8 32)\n8 + 32 = 40 (left: 40)",
                "2 + 2 = 4 (left: 4 8 8)\n8 * 4 = 32 (left: 8 32)\n32 / 8 = 4 (left: 4)",
                "2 + 2 = 4 (left: 4 8 8)\n8 * 4 = 32 (left: 8 32)\n8 * 4 = 32 (left: 32)",
                "2 + 2 = 4 (left: 4 8 8)\n8 * 4 = 32 (left: 8 32)\n8 + 32 = 40 (left: 40)"
            ],
            "values": [
                0.002,
                0.002,
                0.002,
                0.002,
                20.002
            ],
            "resampled": [
                "0 <- 4",
                "1 <- 4",
                "2 <- 4",
                "3 <- 1",
                "4 <- 4"
            ],
            "resampled_steps": [
                "2 + 2 = 4 (left: 4 8 8)\n8 * 4 = 32 (left: 8 32)\n8 + 32 = 40 (left: 40)",
                "2 + 2 = 4 (left: 4 8 8)\n8 * 4 = 32 (left: 8 32)\n8 + 32 = 40 (left: 40)",
                "2 + 2 = 4 (left: 4 8 8)\n8 * 4 = 32 (left: 8 32)\n8 + 32 = 40 (left: 40)",
                "2 + 2 = 4 (left: 4 8 8)\n8 * 4 = 32 (left: 8 32)\n8 + 32 = 40 (left: 40)",
                "2 + 2 = 4 (left: 4 8 8)\n8 * 4 = 32 (left: 8 32)\n8 + 32 = 40 (left: 40)"
            ]
        },
        "step_4": {
            "steps": [
                "2 + 2 = 4 (left: 4 8 8)\n8 * 4 = 32 (left: 8 32)\n8 + 32 = 40 (left: 40)\n40 + 2 = 42",
                "2 + 2 = 4 (left: 4 8 8)\n8 * 4 = 32 (left: 8 32)\n8 + 32 = 40 (left: 40)\n40 * 2 = 80 (left: 2 40 80)",
                "2 + 2 = 4 (left: 4 8 8)\n8 * 4 = 32 (left: 8 32)\n8 + 32 = 40 (left: 40)\n40 / 2 = 20 (left: 2 20 40)",
                "2 + 2 = 4 (left: 4 8 8)\n8 * 4 = 32 (left: 8 32)\n8 + 32 = 40 (left: 40)\n40 + 1 = 41 (left: 1 40)",
                "2 + 2 = 4 (left: 4 8 8)\n8 * 4 = 32 (left: 8 32)\n8 + 32 = 40 (left: 40)\n40 + 2 = 42 (left: 2 40 42)"
            ],
            "values": [
                0.003,
                40.0,
                1.002,
                60.0,
                1.002
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 0.651932
    },
    "938": {
        "input": "2 7 12 13",
        "step_1": {
            "steps": [
                "12 + 2 = 14 (left: 7 14 13)",
                "12 - 2 = 10 (left: 10 7 13)",
                "2 + 7 = 9 (left: 9 12 13)",
                "7 + 12 = 19 (left: 2 19 13)",
                "2 + 7 = 9 (left: 9 12 13)"
            ],
            "values": [
                22.0,
                0.003,
                1.002,
                2.001,
                0.003
            ],
            "resampled": [
                "0 <- 2",
                "1 <- 0",
                "2 <- 0",
                "3 <- 0",
                "4 <- 0"
            ],
            "resampled_steps": [
                "2 + 7 = 9 (left: 9 12 13)",
                "12 + 2 = 14 (left: 7 14 13)",
                "12 + 2 = 14 (left: 7 14 13)",
                "12 + 2 = 14 (left: 7 14 13)",
                "12 + 2 = 14 (left: 7 14 13)"
            ]
        },
        "step_2": {
            "steps": [
                "2 + 7 = 9 (left: 9 12 13)\n9 + 12 = 21 (left: 21 13)",
                "12 + 2 = 14 (left: 7 14 13)\n13 + 7 = 20 (left: 20)",
                "12 + 2 = 14 (left: 7 14 13)\n14 - 7 = 7 (left: 7 13)",
                "12 + 2 = 14 (left: 7 14 13)\n7 + 14 = 21 (left: 13 21)",
                "12 + 2 = 14 (left: 7 14 13)\n14 / 7 = 2 (left: 2 13)"
            ],
            "values": [
                0.002,
                0.002,
                0.001,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 1",
                "1 <- 3",
                "2 <- 3",
                "3 <- 1",
                "4 <- 1"
            ],
            "resampled_steps": [
                "12 + 2 = 14 (left: 7 14 13)\n13 + 7 = 20 (left: 20)",
                "12 + 2 = 14 (left: 7 14 13)\n7 + 14 = 21 (left: 13 21)",
                "12 + 2 = 14 (left: 7 14 13)\n7 + 14 = 21 (left: 13 21)",
                "12 + 2 = 14 (left: 7 14 13)\n13 + 7 = 20 (left: 20)",
                "12 + 2 = 14 (left: 7 14 13)\n13 + 7 = 20 (left: 20)"
            ]
        },
        "step_3": {
            "steps": [
                "12 + 2 = 14 (left: 7 14 13)\n13 + 7 = 20 (left: 20)\n20 / 2 = 10 (left: 10 20)",
                "12 + 2 = 14 (left: 7 14 13)\n7 + 14 = 21 (left: 13 21)\n21 * 13 = 273 (left: 273)",
                "12 + 2 = 14 (left: 7 14 13)\n7 + 14 = 21 (left: 13 21)\n13 - 21 = -8 (left: -8)",
                "12 + 2 = 14 (left: 7 14 13)\n13 + 7 = 20 (left: 20)\n20 * 2 = 40 (left: 40)",
                "12 + 2 = 14 (left: 7 14 13)\n13 + 7 = 20 (left: 20)\n20 - 2 = 18 (left: 2 18 20)"
            ],
            "values": [
                1.002,
                0.003,
                0.003,
                0.002,
                2.001
            ],
            "resampled": [
                "0 <- 0",
                "1 <- 0",
                "2 <- 4",
                "3 <- 4",
                "4 <- 4"
            ],
            "resampled_steps": [
                "12 + 2 = 14 (left: 7 14 13)\n13 + 7 = 20 (left: 20)\n20 / 2 = 10 (left: 10 20)",
                "12 + 2 = 14 (left: 7 14 13)\n13 + 7 = 20 (left: 20)\n20 / 2 = 10 (left: 10 20)",
                "12 + 2 = 14 (left: 7 14 13)\n13 + 7 = 20 (left: 20)\n20 - 2 = 18 (left: 2 18 20)",
                "12 + 2 = 14 (left: 7 14 13)\n13 + 7 = 20 (left: 20)\n20 - 2 = 18 (left: 2 18 20)",
                "12 + 2 = 14 (left: 7 14 13)\n13 + 7 = 20 (left: 20)\n20 - 2 = 18 (left: 2 18 20)"
            ]
        },
        "step_4": {
            "steps": [
                "12 + 2 = 14 (left: 7 14 13)\n13 + 7 = 20 (left: 20)\n20 / 2 = 10 (left: 10 20)\n10 * 20 = 200 (left: 200)",
                "12 + 2 = 14 (left: 7 14 13)\n13 + 7 = 20 (left: 20)\n20 / 2 = 10 (left: 10 20)\n20 / 10 = 2 (left: 2)",
                "12 + 2 = 14 (left: 7 14 13)\n13 + 7 = 20 (left: 20)\n20 - 2 = 18 (left: 2 18 20)\n2 * 18 = 36 (left: 36 20)",
                "12 + 2 = 14 (left: 7 14 13)\n13 + 7 = 20 (left: 20)\n20 - 2 = 18 (left: 2 18 20)\n2 + 18 = 20 (left: 20 20)",
                "12 + 2 = 14 (left: 7 14 13)\n13 + 7 = 20 (left: 20)\n20 - 2 = 18 (left: 2 18 20)\n20 - 18 = 2 (left: 2 2 20)"
            ],
            "values": [
                0.003,
                0.001,
                0.002,
                0.003,
                20.002
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 0.669979
    },
    "939": {
        "input": "2 6 8 12",
        "step_1": {
            "steps": [
                "8 - 2 = 6 (left: 6 6 12)",
                "2 + 6 = 8 (left: 8 8 12)",
                "6 * 2 = 12 (left: 8 12 12)",
                "2 + 6 = 8 (left: 8 8 12)",
                "2 + 6 = 8 (left: 8 8 12)"
            ],
            "values": [
                60.0,
                22.0,
                1.002,
                2.0,
                3.0
            ],
            "resampled": [
                "0 <- 0",
                "1 <- 1",
                "2 <- 4",
                "3 <- 0",
                "4 <- 0"
            ],
            "resampled_steps": [
                "8 - 2 = 6 (left: 6 6 12)",
                "2 + 6 = 8 (left: 8 8 12)",
                "2 + 6 = 8 (left: 8 8 12)",
                "8 - 2 = 6 (left: 6 6 12)",
                "8 - 2 = 6 (left: 6 6 12)"
            ]
        },
        "step_2": {
            "steps": [
                "8 - 2 = 6 (left: 6 6 12)\n6 / 12 = 0.5 (left: 0.5 12)",
                "2 + 6 = 8 (left: 8 8 12)\n12 - 8 = 4 (left: 8 4)",
                "2 + 6 = 8 (left: 8 8 12)\n12 + 8 = 20 (left: 8 20)",
                "8 - 2 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 12 12)",
                "8 - 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)"
            ],
            "values": [
                22.0,
                0.002,
                0.003,
                41.0,
                60.0
            ],
            "resampled": [
                "0 <- 4",
                "1 <- 4",
                "2 <- 4",
                "3 <- 0",
                "4 <- 4"
            ],
            "resampled_steps": [
                "8 - 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)",
                "8 - 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)",
                "8 - 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)",
                "8 - 2 = 6 (left: 6 6 12)\n6 / 12 = 0.5 (left: 0.5 12)",
                "8 - 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)"
            ]
        },
        "step_3": {
            "steps": [
                "8 - 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)\n36 - 12 = 24 (left: 24)",
                "8 - 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)\n36 + 12 = 48 (left: 48)",
                "8 - 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)\n36 - 12 = 24 (left: 24)",
                "8 - 2 = 6 (left: 6 6 12)\n6 / 12 = 0.5 (left: 0.5 12)\n12 - 0.5 = 11.5 (left: 11.5)",
                "8 - 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)\n36 * 12 = 432 (left: 432)"
            ],
            "values": [
                40.0,
                0.003,
                60.0,
                0.001,
                0.002
            ],
            "resampled": [
                "0 <- 0",
                "1 <- 0",
                "2 <- 2",
                "3 <- 0",
                "4 <- 0"
            ],
            "resampled_steps": [
                "8 - 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)\n36 - 12 = 24 (left: 24)",
                "8 - 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)\n36 - 12 = 24 (left: 24)",
                "8 - 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)\n36 - 12 = 24 (left: 24)",
                "8 - 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)\n36 - 12 = 24 (left: 24)",
                "8 - 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)\n36 - 12 = 24 (left: 24)"
            ]
        },
        "step_4": {
            "steps": [
                "8 - 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)\n36 - 12 = 24 (left: 24)\nAnswer: ((8 - 2) * 6) - 12 = 24",
                "8 - 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)\n36 - 12 = 24 (left: 24)\nAnswer: (8 - 2) * 6 - 12 = 24",
                "8 - 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)\n36 - 12 = 24 (left: 24)\nAnswer: (8 - 2) * (6 * 6) - 12 = 24",
                "8 - 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)\n36 - 12 = 24 (left: 24)\nAnswer: ((8 - 2) * 6) - 12 = 24",
                "8 - 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)\n36 - 12 = 24 (left: 24)\nAnswer: (8 - 2) * (6 * 6 - 12) = 24"
            ],
            "values": [
                60.0,
                60.0,
                60.0,
                60.0,
                60.0
            ]
        },
        "results": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            }
        ],
        "cost": 0.686921
    },
    "940": {
        "input": "3 4 9 13",
        "step_1": {
            "steps": [
                "9 - 3 = 6 (left: 6 4 13)",
                "3 * 4 = 12 (left: 12 9 13)",
                "13 - 9 = 4 (left: 3 4 4)",
                "13 - 4 = 9 (left: 3 9 9)",
                "13 - 3 = 10 (left: 4 9 10)"
            ],
            "values": [
                41.0,
                20.002,
                1.002,
                20.002,
                1.002
            ],
            "resampled": [
                "0 <- 3",
                "1 <- 0",
                "2 <- 0",
                "3 <- 1",
                "4 <- 0"
            ],
            "resampled_steps": [
                "13 - 4 = 9 (left: 3 9 9)",
                "9 - 3 = 6 (left: 6 4 13)",
                "9 - 3 = 6 (left: 6 4 13)",
                "3 * 4 = 12 (left: 12 9 13)",
                "9 - 3 = 6 (left: 6 4 13)"
            ]
        },
        "step_2": {
            "steps": [
                "13 - 4 = 9 (left: 3 9 9)\n9 - 3 = 6 (left: 6 9)",
                "9 - 3 = 6 (left: 6 4 13)\n6 + 4 = 10 (left: 10 13)",
                "9 - 3 = 6 (left: 6 4 13)\n13 - 4 = 9 (left: 6 9)",
                "3 * 4 = 12 (left: 12 9 13)\n13 + 12 = 25 (left: 9 25)",
                "9 - 3 = 6 (left: 6 4 13)\n6 / 4 = 1.5 (left: 1.5 13)"
            ],
            "values": [
                1.002,
                0.002,
                0.003,
                2.0,
                2.001
            ],
            "resampled": [
                "0 <- 3",
                "1 <- 0",
                "2 <- 0",
                "3 <- 0",
                "4 <- 3"
            ],
            "resampled_steps": [
                "3 * 4 = 12 (left: 12 9 13)\n13 + 12 = 25 (left: 9 25)",
                "13 - 4 = 9 (left: 3 9 9)\n9 - 3 = 6 (left: 6 9)",
                "13 - 4 = 9 (left: 3 9 9)\n9 - 3 = 6 (left: 6 9)",
                "13 - 4 = 9 (left: 3 9 9)\n9 - 3 = 6 (left: 6 9)",
                "3 * 4 = 12 (left: 12 9 13)\n13 + 12 = 25 (left: 9 25)"
            ]
        },
        "step_3": {
            "steps": [
                "3 * 4 = 12 (left: 12 9 13)\n13 + 12 = 25 (left: 9 25)\n9 * 25 = 225 (left: 225)",
                "13 - 4 = 9 (left: 3 9 9)\n9 - 3 = 6 (left: 6 9)\n6 + 9 = 15 (left: 9 15)",
                "13 - 4 = 9 (left: 3 9 9)\n9 - 3 = 6 (left: 6 9)\n9 / 6 = 1.5 (left: 1.5 9)",
                "13 - 4 = 9 (left: 3 9 9)\n9 - 3 = 6 (left: 6 9)\n9 / 6 = 1.5 (left: 1.5 9)",
                "3 * 4 = 12 (left: 12 9 13)\n13 + 12 = 25 (left: 9 25)\n25 / 9 = 2.77777777778 (left: 2.77777777778)"
            ],
            "values": [
                0.003,
                40.001,
                0.003,
                2.001,
                0.0
            ],
            "resampled": [
                "0 <- 3",
                "1 <- 1",
                "2 <- 1",
                "3 <- 1",
                "4 <- 1"
            ],
            "resampled_steps": [
                "13 - 4 = 9 (left: 3 9 9)\n9 - 3 = 6 (left: 6 9)\n9 / 6 = 1.5 (left: 1.5 9)",
                "13 - 4 = 9 (left: 3 9 9)\n9 - 3 = 6 (left: 6 9)\n6 + 9 = 15 (left: 9 15)",
                "13 - 4 = 9 (left: 3 9 9)\n9 - 3 = 6 (left: 6 9)\n6 + 9 = 15 (left: 9 15)",
                "13 - 4 = 9 (left: 3 9 9)\n9 - 3 = 6 (left: 6 9)\n6 + 9 = 15 (left: 9 15)",
                "13 - 4 = 9 (left: 3 9 9)\n9 - 3 = 6 (left: 6 9)\n6 + 9 = 15 (left: 9 15)"
            ]
        },
        "step_4": {
            "steps": [
                "13 - 4 = 9 (left: 3 9 9)\n9 - 3 = 6 (left: 6 9)\n9 / 6 = 1.5 (left: 1.5 9)\n9 - 1.5 = 7.5 (left: 7.5 9)",
                "13 - 4 = 9 (left: 3 9 9)\n9 - 3 = 6 (left: 6 9)\n6 + 9 = 15 (left: 9 15)\n9 + 15 = 24 (left: 15 24)",
                "13 - 4 = 9 (left: 3 9 9)\n9 - 3 = 6 (left: 6 9)\n6 + 9 = 15 (left: 9 15)\n9 * 15 = 135 (left: 135)",
                "13 - 4 = 9 (left: 3 9 9)\n9 - 3 = 6 (left: 6 9)\n6 + 9 = 15 (left: 9 15)\n9 * 15 = 135 (left: 135)",
                "13 - 4 = 9 (left: 3 9 9)\n9 - 3 = 6 (left: 6 9)\n6 + 9 = 15 (left: 9 15)\n9 * 15 = 135 (left: 15 135)"
            ],
            "values": [
                2.0,
                0.003,
                0.002,
                0.003,
                0.003
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 0.704628
    },
    "941": {
        "input": "4 5 10 12",
        "step_1": {
            "steps": [
                "12 - 10 = 2 (left: 4 5 2)",
                "12 - 10 = 2 (left: 4 5 2)",
                "10 - 5 = 5 (left: 4 5 5)",
                "12 - 10 = 2 (left: 4 5 2)",
                "12 / 4 = 3 (left: 3 5 10)"
            ],
            "values": [
                3.0,
                3.0,
                2.001,
                3.0,
                2.001
            ],
            "resampled": [
                "0 <- 3",
                "1 <- 4",
                "2 <- 3",
                "3 <- 1",
                "4 <- 4"
            ],
            "resampled_steps": [
                "12 - 10 = 2 (left: 4 5 2)",
                "12 / 4 = 3 (left: 3 5 10)",
                "12 - 10 = 2 (left: 4 5 2)",
                "12 - 10 = 2 (left: 4 5 2)",
                "12 / 4 = 3 (left: 3 5 10)"
            ]
        },
        "step_2": {
            "steps": [
                "12 - 10 = 2 (left: 4 5 2)\n2 - 4 = -2 (left: -2 5)",
                "12 / 4 = 3 (left: 3 5 10)\n10 - 5 = 5 (left: 3 5)",
                "12 - 10 = 2 (left: 4 5 2)\n2 / 5 = 0.4 (left: 4 0.4)",
                "12 - 10 = 2 (left: 4 5 2)\n5 - 2 = 3 (left: 4 3)",
                "12 / 4 = 3 (left: 3 5 10)\n10 - 3 = 7 (left: 5 7)"
            ],
            "values": [
                40.0,
                1.0,
                1.001,
                0.0,
                1.002
            ],
            "resampled": [
                "0 <- 0",
                "1 <- 0",
                "2 <- 0",
                "3 <- 0",
                "4 <- 0"
            ],
            "resampled_steps": [
                "12 - 10 = 2 (left: 4 5 2)\n2 - 4 = -2 (left: -2 5)",
                "12 - 10 = 2 (left: 4 5 2)\n2 - 4 = -2 (left: -2 5)",
                "12 - 10 = 2 (left: 4 5 2)\n2 - 4 = -2 (left: -2 5)",
                "12 - 10 = 2 (left: 4 5 2)\n2 - 4 = -2 (left: -2 5)",
                "12 - 10 = 2 (left: 4 5 2)\n2 - 4 = -2 (left: -2 5)"
            ]
        },
        "step_3": {
            "steps": [
                "12 - 10 = 2 (left: 4 5 2)\n2 - 4 = -2 (left: -2 5)\n-2 - 5 = -7 (left: -7)",
                "12 - 10 = 2 (left: 4 5 2)\n2 - 4 = -2 (left: -2 5)\n-2 + 5 = 3 (left: 3)",
                "12 - 10 = 2 (left: 4 5 2)\n2 - 4 = -2 (left: -2 5)\n-2 - 5 = -7 (left: -7)",
                "12 - 10 = 2 (left: 4 5 2)\n2 - 4 = -2 (left: -2 5)\n5 / (-2) = -2.5 (left: -2.5)",
                "12 - 10 = 2 (left: 4 5 2)\n2 - 4 = -2 (left: -2 5)\n-2 * 5 = -10 (left: -10)"
            ],
            "values": [
                0.003,
                0.002,
                0.003,
                0.002,
                0.003
            ],
            "resampled": [
                "0 <- 2",
                "1 <- 3",
                "2 <- 4",
                "3 <- 1",
                "4 <- 1"
            ],
            "resampled_steps": [
                "12 - 10 = 2 (left: 4 5 2)\n2 - 4 = -2 (left: -2 5)\n-2 - 5 = -7 (left: -7)",
                "12 - 10 = 2 (left: 4 5 2)\n2 - 4 = -2 (left: -2 5)\n5 / (-2) = -2.5 (left: -2.5)",
                "12 - 10 = 2 (left: 4 5 2)\n2 - 4 = -2 (left: -2 5)\n-2 * 5 = -10 (left: -10)",
                "12 - 10 = 2 (left: 4 5 2)\n2 - 4 = -2 (left: -2 5)\n-2 + 5 = 3 (left: 3)",
                "12 - 10 = 2 (left: 4 5 2)\n2 - 4 = -2 (left: -2 5)\n-2 + 5 = 3 (left: 3)"
            ]
        },
        "step_4": {
            "steps": [
                "12 - 10 = 2 (left: 4 5 2)\n2 - 4 = -2 (left: -2 5)\n-2 - 5 = -7 (left: -7)\n-7 / 2 = -3.5 (left: -3.5)",
                "12 - 10 = 2 (left: 4 5 2)\n2 - 4 = -2 (left: -2 5)\n5 / (-2) = -2.5 (left: -2.5)\n-2.5 - 8 = -10.5 (left: -10.5)",
                "12 - 10 = 2 (left: 4 5 2)\n2 - 4 = -2 (left: -2 5)\n-2 * 5 = -10 (left: -10)\n-10 - 2 = -12 (left: -12)",
                "12 - 10 = 2 (left: 4 5 2)\n2 - 4 = -2 (left: -2 5)\n-2 + 5 = 3 (left: 3)\nThere are no possible next steps as there are not enough numbers to perform any operations.",
                "12 - 10 = 2 (left: 4 5 2)\n2 - 4 = -2 (left: -2 5)\n-2 + 5 = 3 (left: 3)\nThere are no possible next steps for the input 3 as it is the only number provided."
            ],
            "values": [
                0.0,
                0.002,
                0.0,
                0.003,
                0.003
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 0.7209640000000002
    },
    "942": {
        "input": "1 2 7 11",
        "step_1": {
            "steps": [
                "7 + 11 = 18 (left: 1 2 18)",
                "7 - 2 = 5 (left: 1 5 11)",
                "2 * 7 = 14 (left: 1 14 11)",
                "2 * 7 = 14 (left: 1 14 11)",
                "2 * 7 = 14 (left: 1 14 11)"
            ],
            "values": [
                1.002,
                1.002,
                0.003,
                0.002,
                0.003
            ],
            "resampled": [
                "0 <- 1",
                "1 <- 1",
                "2 <- 0",
                "3 <- 0",
                "4 <- 1"
            ],
            "resampled_steps": [
                "7 - 2 = 5 (left: 1 5 11)",
                "7 - 2 = 5 (left: 1 5 11)",
                "7 + 11 = 18 (left: 1 2 18)",
                "7 + 11 = 18 (left: 1 2 18)",
                "7 - 2 = 5 (left: 1 5 11)"
            ]
        },
        "step_2": {
            "steps": [
                "7 - 2 = 5 (left: 1 5 11)\n1 * 5 = 5 (left: 5 11)",
                "7 - 2 = 5 (left: 1 5 11)\n11 - 1 = 10 (left: 5 10 11)",
                "7 + 11 = 18 (left: 1 2 18)\n1 * 18 = 18 (left: 2 18)",
                "7 + 11 = 18 (left: 1 2 18)\n2 - 1 = 1 (left: 1 18)",
                "7 - 2 = 5 (left: 1 5 11)\n1 + 5 = 6 (left: 6 11)"
            ],
            "values": [
                1.002,
                2.001,
                21.001,
                1.002,
                2.001
            ],
            "resampled": [
                "0 <- 2",
                "1 <- 2",
                "2 <- 2",
                "3 <- 3",
                "4 <- 2"
            ],
            "resampled_steps": [
                "7 + 11 = 18 (left: 1 2 18)\n1 * 18 = 18 (left: 2 18)",
                "7 + 11 = 18 (left: 1 2 18)\n1 * 18 = 18 (left: 2 18)",
                "7 + 11 = 18 (left: 1 2 18)\n1 * 18 = 18 (left: 2 18)",
                "7 + 11 = 18 (left: 1 2 18)\n2 - 1 = 1 (left: 1 18)",
                "7 + 11 = 18 (left: 1 2 18)\n1 * 18 = 18 (left: 2 18)"
            ]
        },
        "step_3": {
            "steps": [
                "7 + 11 = 18 (left: 1 2 18)\n1 * 18 = 18 (left: 2 18)\n2 + 18 = 20 (left: 20)",
                "7 + 11 = 18 (left: 1 2 18)\n1 * 18 = 18 (left: 2 18)\n2 * 18 = 36 (left: 36)",
                "7 + 11 = 18 (left: 1 2 18)\n1 * 18 = 18 (left: 2 18)\n2 + 18 = 20 (left: 18 20)",
                "7 + 11 = 18 (left: 1 2 18)\n2 - 1 = 1 (left: 1 18)\n18 - 1 = 17 (left: 1 17)",
                "7 + 11 = 18 (left: 1 2 18)\n1 * 18 = 18 (left: 2 18)\n18 / 2 = 9 (left: 9)"
            ],
            "values": [
                0.0,
                20.0,
                0.003,
                1.001,
                0.002
            ],
            "resampled": [
                "0 <- 1",
                "1 <- 1",
                "2 <- 1",
                "3 <- 1",
                "4 <- 1"
            ],
            "resampled_steps": [
                "7 + 11 = 18 (left: 1 2 18)\n1 * 18 = 18 (left: 2 18)\n2 * 18 = 36 (left: 36)",
                "7 + 11 = 18 (left: 1 2 18)\n1 * 18 = 18 (left: 2 18)\n2 * 18 = 36 (left: 36)",
                "7 + 11 = 18 (left: 1 2 18)\n1 * 18 = 18 (left: 2 18)\n2 * 18 = 36 (left: 36)",
                "7 + 11 = 18 (left: 1 2 18)\n1 * 18 = 18 (left: 2 18)\n2 * 18 = 36 (left: 36)",
                "7 + 11 = 18 (left: 1 2 18)\n1 * 18 = 18 (left: 2 18)\n2 * 18 = 36 (left: 36)"
            ]
        },
        "step_4": {
            "steps": [
                "7 + 11 = 18 (left: 1 2 18)\n1 * 18 = 18 (left: 2 18)\n2 * 18 = 36 (left: 36)\n- 36 * 2 = 72",
                "7 + 11 = 18 (left: 1 2 18)\n1 * 18 = 18 (left: 2 18)\n2 * 18 = 36 (left: 36)\n36 - 2 = 34",
                "7 + 11 = 18 (left: 1 2 18)\n1 * 18 = 18 (left: 2 18)\n2 * 18 = 36 (left: 36)\n36 - 6 = 30 (left: 30)",
                "7 + 11 = 18 (left: 1 2 18)\n1 * 18 = 18 (left: 2 18)\n2 * 18 = 36 (left: 36)\n36 / 4 = 9 (left: 9)",
                "7 + 11 = 18 (left: 1 2 18)\n1 * 18 = 18 (left: 2 18)\n2 * 18 = 36 (left: 36)\n36 * 2 = 72"
            ],
            "values": [
                0.003,
                0.003,
                0.003,
                0.003,
                0.003
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 0.73725
    },
    "943": {
        "input": "4 5 6 8",
        "step_1": {
            "steps": [
                "5 - 6 = -1 (left: 4 -1 8)",
                "8 - 6 = 2 (left: 4 5 2)",
                "6 + 8 = 14 (left: 4 5 14)",
                "5 * 6 = 30 (left: 4 8 30)",
                "5 + 6 = 11 (left: 4 11 8)"
            ],
            "values": [
                3.0,
                3.0,
                1.002,
                1.002,
                2.001
            ],
            "resampled": [
                "0 <- 0",
                "1 <- 0",
                "2 <- 1",
                "3 <- 2",
                "4 <- 1"
            ],
            "resampled_steps": [
                "5 - 6 = -1 (left: 4 -1 8)",
                "5 - 6 = -1 (left: 4 -1 8)",
                "8 - 6 = 2 (left: 4 5 2)",
                "6 + 8 = 14 (left: 4 5 14)",
                "8 - 6 = 2 (left: 4 5 2)"
            ]
        },
        "step_2": {
            "steps": [
                "5 - 6 = -1 (left: 4 -1 8)\n-1 + 8 = 7 (left: 4 7)",
                "5 - 6 = -1 (left: 4 -1 8)\n4 / -1 = -4 (left: -4 8)",
                "8 - 6 = 2 (left: 4 5 2)\n5 - 4 = 1 (left: 1 2)",
                "6 + 8 = 14 (left: 4 5 14)\n5 * 4 = 20 (left: 20 14)",
                "8 - 6 = 2 (left: 4 5 2)\n5 - 4 = 1 (left: 1 4 2)"
            ],
            "values": [
                1.002,
                1.002,
                0.002,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 1",
                "1 <- 1",
                "2 <- 0",
                "3 <- 0",
                "4 <- 1"
            ],
            "resampled_steps": [
                "5 - 6 = -1 (left: 4 -1 8)\n4 / -1 = -4 (left: -4 8)",
                "5 - 6 = -1 (left: 4 -1 8)\n4 / -1 = -4 (left: -4 8)",
                "5 - 6 = -1 (left: 4 -1 8)\n-1 + 8 = 7 (left: 4 7)",
                "5 - 6 = -1 (left: 4 -1 8)\n-1 + 8 = 7 (left: 4 7)",
                "5 - 6 = -1 (left: 4 -1 8)\n4 / -1 = -4 (left: -4 8)"
            ]
        },
        "step_3": {
            "steps": [
                "5 - 6 = -1 (left: 4 -1 8)\n4 / -1 = -4 (left: -4 8)\n-4 * 8 = -32 (left: -32)",
                "5 - 6 = -1 (left: 4 -1 8)\n4 / -1 = -4 (left: -4 8)\n-4 - 8 = -12 (left: -12)",
                "5 - 6 = -1 (left: 4 -1 8)\n-1 + 8 = 7 (left: 4 7)\n4 - 7 = -3 (left: -3)",
                "5 - 6 = -1 (left: 4 -1 8)\n-1 + 8 = 7 (left: 4 7)\n7 - 4 = 3 (left: 3)",
                "5 - 6 = -1 (left: 4 -1 8)\n4 / -1 = -4 (left: -4 8)\n-4 * 8 = -32 (left: -32)"
            ],
            "values": [
                0.003,
                0.002,
                0.003,
                0.001,
                0.003
            ],
            "resampled": [
                "0 <- 0",
                "1 <- 4",
                "2 <- 2",
                "3 <- 2",
                "4 <- 3"
            ],
            "resampled_steps": [
                "5 - 6 = -1 (left: 4 -1 8)\n4 / -1 = -4 (left: -4 8)\n-4 * 8 = -32 (left: -32)",
                "5 - 6 = -1 (left: 4 -1 8)\n4 / -1 = -4 (left: -4 8)\n-4 * 8 = -32 (left: -32)",
                "5 - 6 = -1 (left: 4 -1 8)\n-1 + 8 = 7 (left: 4 7)\n4 - 7 = -3 (left: -3)",
                "5 - 6 = -1 (left: 4 -1 8)\n-1 + 8 = 7 (left: 4 7)\n4 - 7 = -3 (left: -3)",
                "5 - 6 = -1 (left: 4 -1 8)\n-1 + 8 = 7 (left: 4 7)\n7 - 4 = 3 (left: 3)"
            ]
        },
        "step_4": {
            "steps": [
                "5 - 6 = -1 (left: 4 -1 8)\n4 / -1 = -4 (left: -4 8)\n-4 * 8 = -32 (left: -32)\n-32 + 8 = -24 (left: 8)",
                "5 - 6 = -1 (left: 4 -1 8)\n4 / -1 = -4 (left: -4 8)\n-4 * 8 = -32 (left: -32)\n-32 / 2 = -16 (left: -16)",
                "5 - 6 = -1 (left: 4 -1 8)\n-1 + 8 = 7 (left: 4 7)\n4 - 7 = -3 (left: -3)\n-3 + 2 = -1 (left: 2)",
                "5 - 6 = -1 (left: 4 -1 8)\n-1 + 8 = 7 (left: 4 7)\n4 - 7 = -3 (left: -3)\n-3 / 2 = -1.5 (left: -1.5)",
                "5 - 6 = -1 (left: 4 -1 8)\n-1 + 8 = 7 (left: 4 7)\n7 - 4 = 3 (left: 3)\n3 * 8 = 24 (left: 24)"
            ],
            "values": [
                0.002,
                0.003,
                0.002,
                0.003,
                20.0
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 0.754209
    },
    "944": {
        "input": "6 10 12 13",
        "step_1": {
            "steps": [
                "12 + 6 = 18 (left: 10 18 13)",
                "6 * 10 = 60 (left: 60 12 13)",
                "6 * 10 = 60 (left: 60 12 13)",
                "10 / 6 = 1.67 (left: 1.67 12 13)",
                "12 + 6 = 18 (left: 6 10 18)"
            ],
            "values": [
                1.002,
                2.001,
                1.001,
                1.002,
                2.001
            ],
            "resampled": [
                "0 <- 3",
                "1 <- 2",
                "2 <- 1",
                "3 <- 3",
                "4 <- 4"
            ],
            "resampled_steps": [
                "10 / 6 = 1.67 (left: 1.67 12 13)",
                "6 * 10 = 60 (left: 60 12 13)",
                "6 * 10 = 60 (left: 60 12 13)",
                "10 / 6 = 1.67 (left: 1.67 12 13)",
                "12 + 6 = 18 (left: 6 10 18)"
            ]
        },
        "step_2": {
            "steps": [
                "10 / 6 = 1.67 (left: 1.67 12 13)\n13 * 1.67 = 21.71 (left: 12 21.71)",
                "6 * 10 = 60 (left: 60 12 13)\n60 / 13 = 4.615 (left: 4.615)",
                "6 * 10 = 60 (left: 60 12 13)\n60 - 12 = 48 (left: 48 13)",
                "10 / 6 = 1.67 (left: 1.67 12 13)\n13 - 12 = 1 (left: 1.67 1)",
                "12 + 6 = 18 (left: 6 10 18)\n18 / 6 = 3 (left: 3 10)"
            ],
            "values": [
                0.002,
                0.0,
                0.002,
                0.0,
                1.002
            ],
            "resampled": [
                "0 <- 4",
                "1 <- 4",
                "2 <- 4",
                "3 <- 4",
                "4 <- 4"
            ],
            "resampled_steps": [
                "12 + 6 = 18 (left: 6 10 18)\n18 / 6 = 3 (left: 3 10)",
                "12 + 6 = 18 (left: 6 10 18)\n18 / 6 = 3 (left: 3 10)",
                "12 + 6 = 18 (left: 6 10 18)\n18 / 6 = 3 (left: 3 10)",
                "12 + 6 = 18 (left: 6 10 18)\n18 / 6 = 3 (left: 3 10)",
                "12 + 6 = 18 (left: 6 10 18)\n18 / 6 = 3 (left: 3 10)"
            ]
        },
        "step_3": {
            "steps": [
                "12 + 6 = 18 (left: 6 10 18)\n18 / 6 = 3 (left: 3 10)\n3 + 10 = 13 (left: 10 13)",
                "12 + 6 = 18 (left: 6 10 18)\n18 / 6 = 3 (left: 3 10)\n3 + 10 = 13 (left: 13)",
                "12 + 6 = 18 (left: 6 10 18)\n18 / 6 = 3 (left: 3 10)\n10 / 3 = 3.33 (left: 3.33 10)",
                "12 + 6 = 18 (left: 6 10 18)\n18 / 6 = 3 (left: 3 10)\n10 / 3 = 3.33 (left: 3.33 10)",
                "12 + 6 = 18 (left: 6 10 18)\n18 / 6 = 3 (left: 3 10)\n10 / 3 = 3.33 (left: 3.33 10)"
            ],
            "values": [
                0.003,
                0.002,
                1.002,
                2.001,
                0.001
            ],
            "resampled": [
                "0 <- 2",
                "1 <- 3",
                "2 <- 2",
                "3 <- 2",
                "4 <- 3"
            ],
            "resampled_steps": [
                "12 + 6 = 18 (left: 6 10 18)\n18 / 6 = 3 (left: 3 10)\n10 / 3 = 3.33 (left: 3.33 10)",
                "12 + 6 = 18 (left: 6 10 18)\n18 / 6 = 3 (left: 3 10)\n10 / 3 = 3.33 (left: 3.33 10)",
                "12 + 6 = 18 (left: 6 10 18)\n18 / 6 = 3 (left: 3 10)\n10 / 3 = 3.33 (left: 3.33 10)",
                "12 + 6 = 18 (left: 6 10 18)\n18 / 6 = 3 (left: 3 10)\n10 / 3 = 3.33 (left: 3.33 10)",
                "12 + 6 = 18 (left: 6 10 18)\n18 / 6 = 3 (left: 3 10)\n10 / 3 = 3.33 (left: 3.33 10)"
            ]
        },
        "step_4": {
            "steps": [
                "12 + 6 = 18 (left: 6 10 18)\n18 / 6 = 3 (left: 3 10)\n10 / 3 = 3.33 (left: 3.33 10)\n10 * 3.33 \u2248 33.3 (left: 10 33.3)",
                "12 + 6 = 18 (left: 6 10 18)\n18 / 6 = 3 (left: 3 10)\n10 / 3 = 3.33 (left: 3.33 10)\n3.33 + 10 = 13.33 (left: 13.33)",
                "12 + 6 = 18 (left: 6 10 18)\n18 / 6 = 3 (left: 3 10)\n10 / 3 = 3.33 (left: 3.33 10)\n10 / 3.33 = 3.003 (left: 3.003 10)",
                "12 + 6 = 18 (left: 6 10 18)\n18 / 6 = 3 (left: 3 10)\n10 / 3 = 3.33 (left: 3.33 10)\n3.33 * 10 = 33.3 (left: 10 33.3)",
                "12 + 6 = 18 (left: 6 10 18)\n18 / 6 = 3 (left: 3 10)\n10 / 3 = 3.33 (left: 3.33 10)\n3.33 * 10 = 33.3 (left: 3.33 33.3)"
            ],
            "values": [
                0.003,
                0.003,
                1.001,
                0.003,
                2.001
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 0.772467
    },
    "945": {
        "input": "1 3 9 9",
        "step_1": {
            "steps": [
                "1 + 3 = 4 (left: 4 9 9)",
                "9 - 3 = 6 (left: 1 6 9)",
                "9 / 3 = 3 (left: 1 3 9)",
                "9 / 3 = 3 (left: 1 3 9)",
                "3 * 9 = 27 (left: 1 27 9)"
            ],
            "values": [
                3.0,
                0.001,
                1.002,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 0",
                "1 <- 0",
                "2 <- 0",
                "3 <- 0",
                "4 <- 2"
            ],
            "resampled_steps": [
                "1 + 3 = 4 (left: 4 9 9)",
                "1 + 3 = 4 (left: 4 9 9)",
                "1 + 3 = 4 (left: 4 9 9)",
                "1 + 3 = 4 (left: 4 9 9)",
                "9 / 3 = 3 (left: 1 3 9)"
            ]
        },
        "step_2": {
            "steps": [
                "1 + 3 = 4 (left: 4 9 9)\n9 / 4 = 2.25 (left: 2.25 9)",
                "1 + 3 = 4 (left: 4 9 9)\n9 / 4 = 2.25 (left: 2.25 9)",
                "1 + 3 = 4 (left: 4 9 9)\n9 - 4 = 5 (left: 5 9)",
                "1 + 3 = 4 (left: 4 9 9)\n9 - 4 = 5 (left: 5 9)",
                "9 / 3 = 3 (left: 1 3 9)\n3 / 1 = 3 (left: 3 9)"
            ],
            "values": [
                3.0,
                2.001,
                0.003,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 0",
                "1 <- 1",
                "2 <- 1",
                "3 <- 0",
                "4 <- 1"
            ],
            "resampled_steps": [
                "1 + 3 = 4 (left: 4 9 9)\n9 / 4 = 2.25 (left: 2.25 9)",
                "1 + 3 = 4 (left: 4 9 9)\n9 / 4 = 2.25 (left: 2.25 9)",
                "1 + 3 = 4 (left: 4 9 9)\n9 / 4 = 2.25 (left: 2.25 9)",
                "1 + 3 = 4 (left: 4 9 9)\n9 / 4 = 2.25 (left: 2.25 9)",
                "1 + 3 = 4 (left: 4 9 9)\n9 / 4 = 2.25 (left: 2.25 9)"
            ]
        },
        "step_3": {
            "steps": [
                "1 + 3 = 4 (left: 4 9 9)\n9 / 4 = 2.25 (left: 2.25 9)\n9 + 2.25 = 11.25 (left: 11.25)",
                "1 + 3 = 4 (left: 4 9 9)\n9 / 4 = 2.25 (left: 2.25 9)\n9 / 2.25 = 4 (left: 4)",
                "1 + 3 = 4 (left: 4 9 9)\n9 / 4 = 2.25 (left: 2.25 9)\n9 / 2.25 = 4 (left: 4)",
                "1 + 3 = 4 (left: 4 9 9)\n9 / 4 = 2.25 (left: 2.25 9)\n2.25 * 9 = 20.25 (left: 20.25)",
                "1 + 3 = 4 (left: 4 9 9)\n9 / 4 = 2.25 (left: 2.25 9)\n2.25 + 9 = 11.25 (left: 11.25)"
            ],
            "values": [
                0.003,
                0.002,
                0.002,
                0.002,
                0.002
            ],
            "resampled": [
                "0 <- 1",
                "1 <- 4",
                "2 <- 3",
                "3 <- 3",
                "4 <- 3"
            ],
            "resampled_steps": [
                "1 + 3 = 4 (left: 4 9 9)\n9 / 4 = 2.25 (left: 2.25 9)\n9 / 2.25 = 4 (left: 4)",
                "1 + 3 = 4 (left: 4 9 9)\n9 / 4 = 2.25 (left: 2.25 9)\n2.25 + 9 = 11.25 (left: 11.25)",
                "1 + 3 = 4 (left: 4 9 9)\n9 / 4 = 2.25 (left: 2.25 9)\n2.25 * 9 = 20.25 (left: 20.25)",
                "1 + 3 = 4 (left: 4 9 9)\n9 / 4 = 2.25 (left: 2.25 9)\n2.25 * 9 = 20.25 (left: 20.25)",
                "1 + 3 = 4 (left: 4 9 9)\n9 / 4 = 2.25 (left: 2.25 9)\n2.25 * 9 = 20.25 (left: 20.25)"
            ]
        },
        "step_4": {
            "steps": [
                "1 + 3 = 4 (left: 4 9 9)\n9 / 4 = 2.25 (left: 2.25 9)\n9 / 2.25 = 4 (left: 4)\nThere are no possible next steps as there are not enough numbers to perform any operations.",
                "1 + 3 = 4 (left: 4 9 9)\n9 / 4 = 2.25 (left: 2.25 9)\n2.25 + 9 = 11.25 (left: 11.25)\n11.25 / 2 = 5.625",
                "1 + 3 = 4 (left: 4 9 9)\n9 / 4 = 2.25 (left: 2.25 9)\n2.25 * 9 = 20.25 (left: 20.25)\n20.25 / 4 = 5.0625 (left: 4 5.0625 20.25)",
                "1 + 3 = 4 (left: 4 9 9)\n9 / 4 = 2.25 (left: 2.25 9)\n2.25 * 9 = 20.25 (left: 20.25)\n20.25 - 8 = 12.25",
                "1 + 3 = 4 (left: 4 9 9)\n9 / 4 = 2.25 (left: 2.25 9)\n2.25 * 9 = 20.25 (left: 20.25)\n20.25 - 8 = 12.25"
            ],
            "values": [
                0.003,
                0.003,
                2.001,
                0.003,
                0.003
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 0.789068
    },
    "946": {
        "input": "1 4 4 11",
        "step_1": {
            "steps": [
                "11 - 4 = 7 (left: 1 4 7)",
                "11 - 4 = 7 (left: 1 7 4)",
                "4 * 4 = 16 (left: 16 4 11)",
                "11 - 1 = 10 (left: 4 4 10)",
                "11 - 1 = 10 (left: 4 4 10)"
            ],
            "values": [
                21.0,
                41.0,
                21.001,
                0.0,
                40.0
            ],
            "resampled": [
                "0 <- 1",
                "1 <- 1",
                "2 <- 0",
                "3 <- 4",
                "4 <- 4"
            ],
            "resampled_steps": [
                "11 - 4 = 7 (left: 1 7 4)",
                "11 - 4 = 7 (left: 1 7 4)",
                "11 - 4 = 7 (left: 1 4 7)",
                "11 - 1 = 10 (left: 4 4 10)",
                "11 - 1 = 10 (left: 4 4 10)"
            ]
        },
        "step_2": {
            "steps": [
                "11 - 4 = 7 (left: 1 7 4)\n4 * 1 = 4 (left: 4 4)",
                "11 - 4 = 7 (left: 1 7 4)\n7 + 4 = 11 (left: 1 11)",
                "11 - 4 = 7 (left: 1 4 7)\n1 + 4 = 5 (left: 5 7)",
                "11 - 1 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)",
                "11 - 1 = 10 (left: 4 4 10)\n10 / 4 = 2.5 (left: 4 2.5)"
            ],
            "values": [
                1.002,
                20.002,
                2.001,
                60.0,
                60.0
            ],
            "resampled": [
                "0 <- 4",
                "1 <- 3",
                "2 <- 4",
                "3 <- 3",
                "4 <- 3"
            ],
            "resampled_steps": [
                "11 - 1 = 10 (left: 4 4 10)\n10 / 4 = 2.5 (left: 4 2.5)",
                "11 - 1 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)",
                "11 - 1 = 10 (left: 4 4 10)\n10 / 4 = 2.5 (left: 4 2.5)",
                "11 - 1 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)",
                "11 - 1 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)"
            ]
        },
        "step_3": {
            "steps": [
                "11 - 1 = 10 (left: 4 4 10)\n10 / 4 = 2.5 (left: 4 2.5)\n4 + 2.5 = 6.5 (left: 2.5 6.5)",
                "11 - 1 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)",
                "11 - 1 = 10 (left: 4 4 10)\n10 / 4 = 2.5 (left: 4 2.5)\n4 / 2.5 = 1.6 (left: 1.6 2.5)",
                "11 - 1 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n6 / 4 = 1.5 (left: 1.5)",
                "11 - 1 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n4 / 6 = 0.6667 (left: 0.6667)"
            ],
            "values": [
                3.0,
                0.002,
                1.001,
                0.003,
                0.002
            ],
            "resampled": [
                "0 <- 0",
                "1 <- 0",
                "2 <- 0",
                "3 <- 0",
                "4 <- 0"
            ],
            "resampled_steps": [
                "11 - 1 = 10 (left: 4 4 10)\n10 / 4 = 2.5 (left: 4 2.5)\n4 + 2.5 = 6.5 (left: 2.5 6.5)",
                "11 - 1 = 10 (left: 4 4 10)\n10 / 4 = 2.5 (left: 4 2.5)\n4 + 2.5 = 6.5 (left: 2.5 6.5)",
                "11 - 1 = 10 (left: 4 4 10)\n10 / 4 = 2.5 (left: 4 2.5)\n4 + 2.5 = 6.5 (left: 2.5 6.5)",
                "11 - 1 = 10 (left: 4 4 10)\n10 / 4 = 2.5 (left: 4 2.5)\n4 + 2.5 = 6.5 (left: 2.5 6.5)",
                "11 - 1 = 10 (left: 4 4 10)\n10 / 4 = 2.5 (left: 4 2.5)\n4 + 2.5 = 6.5 (left: 2.5 6.5)"
            ]
        },
        "step_4": {
            "steps": [
                "11 - 1 = 10 (left: 4 4 10)\n10 / 4 = 2.5 (left: 4 2.5)\n4 + 2.5 = 6.5 (left: 2.5 6.5)\n2.5 * 6.5 = 16.25 (left: 16.25)",
                "11 - 1 = 10 (left: 4 4 10)\n10 / 4 = 2.5 (left: 4 2.5)\n4 + 2.5 = 6.5 (left: 2.5 6.5)\n2.5 + 6.5 = 9 (left: 9)",
                "11 - 1 = 10 (left: 4 4 10)\n10 / 4 = 2.5 (left: 4 2.5)\n4 + 2.5 = 6.5 (left: 2.5 6.5)\n6.5 / 2.5 = 2.6 (left: 2.6)",
                "11 - 1 = 10 (left: 4 4 10)\n10 / 4 = 2.5 (left: 4 2.5)\n4 + 2.5 = 6.5 (left: 2.5 6.5)\n6.5 / 2.5 = 2.6 (left: 2.6)",
                "11 - 1 = 10 (left: 4 4 10)\n10 / 4 = 2.5 (left: 4 2.5)\n4 + 2.5 = 6.5 (left: 2.5 6.5)\n2.5 * 6.5 = 16.25 (left: 16.25)"
            ],
            "values": [
                0.002,
                0.002,
                0.001,
                0.003,
                0.003
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 0.805487
    },
    "947": {
        "input": "2 3 9 10",
        "step_1": {
            "steps": [
                "2 * 9 = 18 (left: 3 9 10)",
                "2 + 3 = 5 (left: 5 9 10)",
                "9 / 3 = 3 (left: 2 3 10)",
                "9 / 3 = 3 (left: 2 3 10)",
                "3 + 9 = 12 (left: 2 12 10)"
            ],
            "values": [
                1.002,
                3.0,
                41.0,
                20.002,
                40.001
            ],
            "resampled": [
                "0 <- 3",
                "1 <- 4",
                "2 <- 2",
                "3 <- 2",
                "4 <- 2"
            ],
            "resampled_steps": [
                "9 / 3 = 3 (left: 2 3 10)",
                "3 + 9 = 12 (left: 2 12 10)",
                "9 / 3 = 3 (left: 2 3 10)",
                "9 / 3 = 3 (left: 2 3 10)",
                "9 / 3 = 3 (left: 2 3 10)"
            ]
        },
        "step_2": {
            "steps": [
                "9 / 3 = 3 (left: 2 3 10)\n10 / 2 = 5 (left: 3 5)",
                "3 + 9 = 12 (left: 2 12 10)\n2 * 12 = 24 (left: 24 10)",
                "9 / 3 = 3 (left: 2 3 10)\n10 - 3 = 7 (left: 2 7)",
                "9 / 3 = 3 (left: 2 3 10)\n3 + 10 = 13 (left: 2 13)",
                "9 / 3 = 3 (left: 2 3 10)\n10 - 2 = 8 (left: 3 8)"
            ],
            "values": [
                0.001,
                60.0,
                0.002,
                0.003,
                60.0
            ],
            "resampled": [
                "0 <- 1",
                "1 <- 1",
                "2 <- 1",
                "3 <- 4",
                "4 <- 1"
            ],
            "resampled_steps": [
                "3 + 9 = 12 (left: 2 12 10)\n2 * 12 = 24 (left: 24 10)",
                "3 + 9 = 12 (left: 2 12 10)\n2 * 12 = 24 (left: 24 10)",
                "3 + 9 = 12 (left: 2 12 10)\n2 * 12 = 24 (left: 24 10)",
                "9 / 3 = 3 (left: 2 3 10)\n10 - 2 = 8 (left: 3 8)",
                "3 + 9 = 12 (left: 2 12 10)\n2 * 12 = 24 (left: 24 10)"
            ]
        },
        "step_3": {
            "steps": [
                "3 + 9 = 12 (left: 2 12 10)\n2 * 12 = 24 (left: 24 10)\n24 * 10 = 240 (left: 240 10)",
                "3 + 9 = 12 (left: 2 12 10)\n2 * 12 = 24 (left: 24 10)\n24 + 10 = 34 (left: 10 34)",
                "3 + 9 = 12 (left: 2 12 10)\n2 * 12 = 24 (left: 24 10)\n24 - 10 = 14 (left: 10 14)",
                "9 / 3 = 3 (left: 2 3 10)\n10 - 2 = 8 (left: 3 8)\n3 + 8 = 11 (left: 8 11)",
                "3 + 9 = 12 (left: 2 12 10)\n2 * 12 = 24 (left: 24 10)\n24 - 10 = 14 (left: 10 14)"
            ],
            "values": [
                60.0,
                0.002,
                60.0,
                0.002,
                60.0
            ],
            "resampled": [
                "0 <- 0",
                "1 <- 4",
                "2 <- 2",
                "3 <- 4",
                "4 <- 4"
            ],
            "resampled_steps": [
                "3 + 9 = 12 (left: 2 12 10)\n2 * 12 = 24 (left: 24 10)\n24 * 10 = 240 (left: 240 10)",
                "3 + 9 = 12 (left: 2 12 10)\n2 * 12 = 24 (left: 24 10)\n24 - 10 = 14 (left: 10 14)",
                "3 + 9 = 12 (left: 2 12 10)\n2 * 12 = 24 (left: 24 10)\n24 - 10 = 14 (left: 10 14)",
                "3 + 9 = 12 (left: 2 12 10)\n2 * 12 = 24 (left: 24 10)\n24 - 10 = 14 (left: 10 14)",
                "3 + 9 = 12 (left: 2 12 10)\n2 * 12 = 24 (left: 24 10)\n24 - 10 = 14 (left: 10 14)"
            ]
        },
        "step_4": {
            "steps": [
                "3 + 9 = 12 (left: 2 12 10)\n2 * 12 = 24 (left: 24 10)\n24 * 10 = 240 (left: 240 10)\n240 - 10 = 230 (left: 10 230)",
                "3 + 9 = 12 (left: 2 12 10)\n2 * 12 = 24 (left: 24 10)\n24 - 10 = 14 (left: 10 14)\n14 / 10 = 1.4 (left: 1.4)",
                "3 + 9 = 12 (left: 2 12 10)\n2 * 12 = 24 (left: 24 10)\n24 - 10 = 14 (left: 10 14)\n10 * 14 = 140 (left: 14 140)",
                "3 + 9 = 12 (left: 2 12 10)\n2 * 12 = 24 (left: 24 10)\n24 - 10 = 14 (left: 10 14)\n10 + 14 = 24 (left: 14 24)",
                "3 + 9 = 12 (left: 2 12 10)\n2 * 12 = 24 (left: 24 10)\n24 - 10 = 14 (left: 10 14)\n10 + 14 = 24 (left: 14 24)"
            ],
            "values": [
                40.0,
                0.001,
                0.002,
                0.003,
                0.003
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 0.8224070000000001
    },
    "948": {
        "input": "1 2 3 13",
        "step_1": {
            "steps": [
                "3 + 13 = 16 (left: 1 2 16)",
                "13 - 2 = 11 (left: 1 3 11)",
                "3 * 2 = 6 (left: 1 6 13)",
                "3 + 13 = 16 (left: 1 2 16)",
                "3 * 2 = 6 (left: 1 6 13)"
            ],
            "values": [
                0.003,
                1.002,
                0.002,
                0.003,
                1.001
            ],
            "resampled": [
                "0 <- 1",
                "1 <- 1",
                "2 <- 1",
                "3 <- 1",
                "4 <- 1"
            ],
            "resampled_steps": [
                "13 - 2 = 11 (left: 1 3 11)",
                "13 - 2 = 11 (left: 1 3 11)",
                "13 - 2 = 11 (left: 1 3 11)",
                "13 - 2 = 11 (left: 1 3 11)",
                "13 - 2 = 11 (left: 1 3 11)"
            ]
        },
        "step_2": {
            "steps": [
                "13 - 2 = 11 (left: 1 3 11)\n11 - 3 = 8 (left: 1 8)",
                "13 - 2 = 11 (left: 1 3 11)\n11 - 1 = 10 (left: 3 10)",
                "13 - 2 = 11 (left: 1 3 11)\n11 - 3 = 8 (left: 1 8)",
                "13 - 2 = 11 (left: 1 3 11)\n11 - 3 = 8 (left: 1 8)",
                "13 - 2 = 11 (left: 1 3 11)\n1 * 3 = 3 (left: 3 11)"
            ],
            "values": [
                40.0,
                0.003,
                0.003,
                20.002,
                0.002
            ],
            "resampled": [
                "0 <- 0",
                "1 <- 3",
                "2 <- 0",
                "3 <- 3",
                "4 <- 0"
            ],
            "resampled_steps": [
                "13 - 2 = 11 (left: 1 3 11)\n11 - 3 = 8 (left: 1 8)",
                "13 - 2 = 11 (left: 1 3 11)\n11 - 3 = 8 (left: 1 8)",
                "13 - 2 = 11 (left: 1 3 11)\n11 - 3 = 8 (left: 1 8)",
                "13 - 2 = 11 (left: 1 3 11)\n11 - 3 = 8 (left: 1 8)",
                "13 - 2 = 11 (left: 1 3 11)\n11 - 3 = 8 (left: 1 8)"
            ]
        },
        "step_3": {
            "steps": [
                "13 - 2 = 11 (left: 1 3 11)\n11 - 3 = 8 (left: 1 8)\n8 - 1 = 7 (left: 7)",
                "13 - 2 = 11 (left: 1 3 11)\n11 - 3 = 8 (left: 1 8)\n1 * 8 = 8 (left: 8)",
                "13 - 2 = 11 (left: 1 3 11)\n11 - 3 = 8 (left: 1 8)\n1 + 8 = 9 (left: 8 9)",
                "13 - 2 = 11 (left: 1 3 11)\n11 - 3 = 8 (left: 1 8)\n8 / 1 = 8 (left: 1 8)",
                "13 - 2 = 11 (left: 1 3 11)\n11 - 3 = 8 (left: 1 8)\n1 + 8 = 9 (left: 9)"
            ],
            "values": [
                0.002,
                0.0,
                2.001,
                40.0,
                0.001
            ],
            "resampled": [
                "0 <- 3",
                "1 <- 3",
                "2 <- 3",
                "3 <- 3",
                "4 <- 3"
            ],
            "resampled_steps": [
                "13 - 2 = 11 (left: 1 3 11)\n11 - 3 = 8 (left: 1 8)\n8 / 1 = 8 (left: 1 8)",
                "13 - 2 = 11 (left: 1 3 11)\n11 - 3 = 8 (left: 1 8)\n8 / 1 = 8 (left: 1 8)",
                "13 - 2 = 11 (left: 1 3 11)\n11 - 3 = 8 (left: 1 8)\n8 / 1 = 8 (left: 1 8)",
                "13 - 2 = 11 (left: 1 3 11)\n11 - 3 = 8 (left: 1 8)\n8 / 1 = 8 (left: 1 8)",
                "13 - 2 = 11 (left: 1 3 11)\n11 - 3 = 8 (left: 1 8)\n8 / 1 = 8 (left: 1 8)"
            ]
        },
        "step_4": {
            "steps": [
                "13 - 2 = 11 (left: 1 3 11)\n11 - 3 = 8 (left: 1 8)\n8 / 1 = 8 (left: 1 8)\n1 * 8 = 8 (left: 8)",
                "13 - 2 = 11 (left: 1 3 11)\n11 - 3 = 8 (left: 1 8)\n8 / 1 = 8 (left: 1 8)\n1 + 8 = 9 (left: 8 9)",
                "13 - 2 = 11 (left: 1 3 11)\n11 - 3 = 8 (left: 1 8)\n8 / 1 = 8 (left: 1 8)\n1 + 8 = 9 (left: 8 9)",
                "13 - 2 = 11 (left: 1 3 11)\n11 - 3 = 8 (left: 1 8)\n8 / 1 = 8 (left: 1 8)\n8 / 1 = 8 (left: 8)",
                "13 - 2 = 11 (left: 1 3 11)\n11 - 3 = 8 (left: 1 8)\n8 / 1 = 8 (left: 1 8)\n1 * 8 = 8 (left: 8)"
            ],
            "values": [
                0.001,
                1.002,
                1.002,
                0.001,
                0.003
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 0.8390930000000001
    },
    "949": {
        "input": "1 6 6 6",
        "step_1": {
            "steps": [
                "6 / 1 = 6 (left: 6 6 6)",
                "6 * 1 = 6 (left: 6 6 6)",
                "6 - 1 = 5 (left: 5 6 6)",
                "1 + 6 = 7 (left: 6 6 7)",
                "1 + 6 = 7 (left: 6 6 7)"
            ],
            "values": [
                1.002,
                3.0,
                3.0,
                2.001,
                3.0
            ],
            "resampled": [
                "0 <- 0",
                "1 <- 1",
                "2 <- 2",
                "3 <- 0",
                "4 <- 2"
            ],
            "resampled_steps": [
                "6 / 1 = 6 (left: 6 6 6)",
                "6 * 1 = 6 (left: 6 6 6)",
                "6 - 1 = 5 (left: 5 6 6)",
                "6 / 1 = 6 (left: 6 6 6)",
                "6 - 1 = 5 (left: 5 6 6)"
            ]
        },
        "step_2": {
            "steps": [
                "6 / 1 = 6 (left: 6 6 6)\n6 + 6 = 12 (left: 6 12)",
                "6 * 1 = 6 (left: 6 6 6)\n6 / 6 = 1 (left: 1 6)",
                "6 - 1 = 5 (left: 5 6 6)\n6 / 5 = 1.2 (left: 1.2 6)",
                "6 / 1 = 6 (left: 6 6 6)\n6 / 6 = 1 (left: 1 6)",
                "6 - 1 = 5 (left: 5 6 6)\n6 - 5 = 1 (left: 1 6)"
            ],
            "values": [
                0.003,
                21.0,
                2.001,
                21.001,
                20.0
            ],
            "resampled": [
                "0 <- 1",
                "1 <- 4",
                "2 <- 3",
                "3 <- 1",
                "4 <- 1"
            ],
            "resampled_steps": [
                "6 * 1 = 6 (left: 6 6 6)\n6 / 6 = 1 (left: 1 6)",
                "6 - 1 = 5 (left: 5 6 6)\n6 - 5 = 1 (left: 1 6)",
                "6 / 1 = 6 (left: 6 6 6)\n6 / 6 = 1 (left: 1 6)",
                "6 * 1 = 6 (left: 6 6 6)\n6 / 6 = 1 (left: 1 6)",
                "6 * 1 = 6 (left: 6 6 6)\n6 / 6 = 1 (left: 1 6)"
            ]
        },
        "step_3": {
            "steps": [
                "6 * 1 = 6 (left: 6 6 6)\n6 / 6 = 1 (left: 1 6)\n6 - 1 = 5 (left: 5 6)",
                "6 - 1 = 5 (left: 5 6 6)\n6 - 5 = 1 (left: 1 6)\n1 * 6 = 6 (left: 6)",
                "6 / 1 = 6 (left: 6 6 6)\n6 / 6 = 1 (left: 1 6)\n1 + 6 = 7 (left: 7)",
                "6 * 1 = 6 (left: 6 6 6)\n6 / 6 = 1 (left: 1 6)\n6 - 1 = 5 (left: 5)",
                "6 * 1 = 6 (left: 6 6 6)\n6 / 6 = 1 (left: 1 6)\n6 / 1 = 6 (left: 6)"
            ],
            "values": [
                2.001,
                0.003,
                0.003,
                0.002,
                0.003
            ],
            "resampled": [
                "0 <- 0",
                "1 <- 0",
                "2 <- 0",
                "3 <- 0",
                "4 <- 0"
            ],
            "resampled_steps": [
                "6 * 1 = 6 (left: 6 6 6)\n6 / 6 = 1 (left: 1 6)\n6 - 1 = 5 (left: 5 6)",
                "6 * 1 = 6 (left: 6 6 6)\n6 / 6 = 1 (left: 1 6)\n6 - 1 = 5 (left: 5 6)",
                "6 * 1 = 6 (left: 6 6 6)\n6 / 6 = 1 (left: 1 6)\n6 - 1 = 5 (left: 5 6)",
                "6 * 1 = 6 (left: 6 6 6)\n6 / 6 = 1 (left: 1 6)\n6 - 1 = 5 (left: 5 6)",
                "6 * 1 = 6 (left: 6 6 6)\n6 / 6 = 1 (left: 1 6)\n6 - 1 = 5 (left: 5 6)"
            ]
        },
        "step_4": {
            "steps": [
                "6 * 1 = 6 (left: 6 6 6)\n6 / 6 = 1 (left: 1 6)\n6 - 1 = 5 (left: 5 6)\n5 / 6 = 0.8333 (left: 0.8333)",
                "6 * 1 = 6 (left: 6 6 6)\n6 / 6 = 1 (left: 1 6)\n6 - 1 = 5 (left: 5 6)\n5 * 6 = 30 (left: 30)",
                "6 * 1 = 6 (left: 6 6 6)\n6 / 6 = 1 (left: 1 6)\n6 - 1 = 5 (left: 5 6)\n6 / 5 = 1.2 (left: 1.2)",
                "6 * 1 = 6 (left: 6 6 6)\n6 / 6 = 1 (left: 1 6)\n6 - 1 = 5 (left: 5 6)\n5 + 6 = 11 (left: 11)",
                "6 * 1 = 6 (left: 6 6 6)\n6 / 6 = 1 (left: 1 6)\n6 - 1 = 5 (left: 5 6)\n5 * 6 = 30 (left: 30)"
            ],
            "values": [
                0.001,
                0.002,
                0.002,
                0.002,
                0.0
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 0.855246
    }
}