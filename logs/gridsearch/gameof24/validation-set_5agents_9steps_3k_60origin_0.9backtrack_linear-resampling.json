{
    "875": {
        "puzzle": "5 6 9 12",
        "Agent 0": {
            "Step 0": {
                "Step": "6 - 5 = 1 (left: 1 9 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 9 12"
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 6 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 6 / 1 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 6 / 1 = 6 (left: 6) -> 6 + 8 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 9 12"
                }
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 9 11 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 9 11 12) -> 11 / 9 = 1.2222 (left: 1.2222 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 9 11 12) -> 11 / 9 = 1.2222 (left: 1.2222 12) -> 1.2222 + 12 = 13.2222 (left: 13.2222)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "3 6"
                }
            },
            "Step 7": {
                "Step": "12 - 9 = 3 (left: 3 6 3) -> 6 - 3 = 3 (left: 3 3 3) -> 3 + 3 = 6 (left: 3 6) -> 6 - 3 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "3 6"
                }
            },
            "Step 8": {
                "Step": "12 - 9 = 3 (left: 3 6 3) -> 6 - 3 = 3 (left: 3 3 3) -> 3 + 3 = 6 (left: 3 6) -> 6 - 3 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "None, as there is only one number given."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 9 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 9 12"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 3 3 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 3 3 12) -> 12 - 3 = 9 (left: 3 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 / 3 = 3 (left: 3 3 12) -> 12 - 3 = 9 (left: 3 9) -> Input: 4 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 9 12"
                }
            },
            "Step 4": {
                "Step": "9 / 3 = 3 (left: 5 6 ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 / 3 = 3 (left: 5 6  -> 6 - 5 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 / 3 = 3 (left: 5 6  -> 6 - 5 = 1 (left: 1) -> 1 is the only number given, so there are no possible arithmetic operations to perform.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "3 6"
                }
            },
            "Step 7": {
                "Step": "12 - 9 = 3 (left: 3 6 3) -> 6 - 3 = 3 (left: 3 3 3) -> 3 + 3 = 6 (left: 3 6) -> 6 - 3 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "3 6"
                }
            },
            "Step 8": {
                "Step": "12 - 9 = 3 (left: 3 6 3) -> 6 - 3 = 3 (left: 3 3 3) -> 3 + 3 = 6 (left: 3 6) -> 6 - 3 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "None, as there is only one number given."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 9 = 3 (left: 3 6 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 9 12"
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 9 12) -> 12 - 1 = 11 (left: 9 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 9 12) -> 12 - 1 = 11 (left: 9 11) -> 9 + 11 = 20 (left: 20)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 5 = 1 (left: 1 9 12) -> 12 - 1 = 11 (left: 9 11) -> 9 + 11 = 20 (left: 20) -> None, as there is only one number given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 9 12"
                }
            },
            "Step 4": {
                "Step": "5 * 6 = 30 (left: 9 30 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 6 = 30 (left: 9 30 12) -> 30 / 9 = 3.33 (left: 3.33 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 6 = 30 (left: 9 30 12) -> 30 / 9 = 3.33 (left: 3.33 12) -> 3.33 * 12 = 39.96 (left: 39.96)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "3 6"
                }
            },
            "Step 7": {
                "Step": "12 - 9 = 3 (left: 3 6 3) -> 6 - 3 = 3 (left: 3 3 3) -> 3 + 3 = 6 (left: 3 6) -> 6 / 3 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "3 6"
                }
            },
            "Step 8": {
                "Step": "12 - 9 = 3 (left: 3 6 3) -> 6 - 3 = 3 (left: 3 3 3) -> 3 + 3 = 6 (left: 3 6) -> 3 + 6 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "None, as there is only one number given."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "12 + 5 = 17 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 9 12"
                }
            },
            "Step 1": {
                "Step": "12 - 9 = 3 (left: 5 3 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 9 = 3 (left: 5 3 12) -> 5 * 3 = 15 (left: 15 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 9 = 3 (left: 5 3 12) -> 5 * 3 = 15 (left: 15 12) -> 15 * 12 = 180 (left: 180)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 9 12"
                }
            },
            "Step 4": {
                "Step": "12 - 9 = 3 (left: 3 6 3)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 9 = 3 (left: 3 6 3) -> 6 - 3 = 3 (left: 3 3 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 9 = 3 (left: 3 6 3) -> 6 - 3 = 3 (left: 3 3 3) -> 3 + 3 = 6 (left: 3 6)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "1 is the only number given, so there are no possible arithmetic operations to perform."
                }
            },
            "Step 7": {
                "Step": "9 / 3 = 3 (left: 5 6  -> 6 - 5 = 1 (left: 1) -> 1 is the only number given, so there are no possible arithmetic operations to perform. -> No possible next steps as there is only 1 number given.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 / 3 = 3 (left: 5 6  -> 6 - 5 = 1 (left: 1) -> 1 is the only number given, so there are no possible arithmetic operations to perform. -> No possible next steps as there is only 1 number given. -> There are no possible next steps as there is only 1 number given.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 9 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 9 12"
                }
            },
            "Step 1": {
                "Step": "9 + 6 = 15 (left: 5 15 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 6 = 15 (left: 5 15 12) -> 15 - 5 = 10 (left: 10 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 + 6 = 15 (left: 5 15 12) -> 15 - 5 = 10 (left: 10 12) -> 10 - 12 = -2 (left: -2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 9 12"
                }
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 9 11 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 9 11 12) -> 9 * 11 = 99 (left: 12 99)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 9 11 12) -> 9 * 11 = 99 (left: 12 99) -> 5 * 5 = 25 (left:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "3 6"
                }
            },
            "Step 7": {
                "Step": "12 - 9 = 3 (left: 3 6 3) -> 6 - 3 = 3 (left: 3 3 3) -> 3 + 3 = 6 (left: 3 6) -> 6 - 3 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "3 6"
                }
            },
            "Step 8": {
                "Step": "12 - 9 = 3 (left: 3 6 3) -> 6 - 3 = 3 (left: 3 3 3) -> 3 + 3 = 6 (left: 3 6) -> 3 * 6 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "None, as there is only one number given."
                }
            }
        },
        "Input": "5 6 9 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "876": {
        "puzzle": "6 9 10 11",
        "Agent 0": {
            "Step 0": {
                "Step": "9 + 10 = 19 (left: 6 11 19)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 1": {
                "Step": "6 * 9 = 54 (left: 10 11 54)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 11 * 10 = 110 (left: 110 54)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 11 * 10 = 110 (left: 110 54) -> 110 + 54 = 164 (left: 164)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 4": {
                "Step": "10 + 11 = 21 (left: 6 9 21)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 21 / 9 = 3 (left: 6 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 21 / 9 = 3 (left: 6 3) -> 6 + 3 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "16"
                }
            },
            "Step 7": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 11 + 15 = 26 (left: 10 26) -> 26 - 10 = 16 (left: 16) -> No further steps can be taken with the input of 16.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 11 + 15 = 26 (left: 10 26) -> 26 - 10 = 16 (left: 16) -> No further steps can be taken with the input of 16. -> 16 / 8 = 2 (left: 2 8)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 10 11 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 1": {
                "Step": "10 + 11 = 21 (left: 6 9 21)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 6 * 9 = 54 (left: 54 21)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 6 * 9 = 54 (left: 54 21) -> 54 / 21 = 2.57 (left: 2.57)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 4": {
                "Step": "6 + 9 = 15 (left: 10 11 15)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 11 + 15 = 26 (left: 10 26)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 11 + 15 = 26 (left: 10 26) -> 26 - 10 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "16"
                }
            },
            "Step 7": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 11 + 15 = 26 (left: 10 26) -> 26 - 10 = 16 (left: 16) -> 16 / 2 = 8",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 11 + 15 = 26 (left: 10 26) -> 26 - 10 = 16 (left: 16) -> 16 / 2 = 8 -> 16 - 8 = 8 (left: 8)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 * 9 = 54 (left: 10 11 54)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 9 11 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 10 = 16 (left: 9 11 16) -> 16 - 9 = 7 (left: 7 16)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 10 = 16 (left: 9 11 16) -> 16 - 9 = 7 (left: 7 16) -> 16 / 7 = 2.285714285714286 (left: 2.285714285714286)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "2.285714285714286"
                }
            },
            "Step 4": {
                "Step": "6 + 10 = 16 (left: 9 11 16) -> 16 - 9 = 7 (left: 7 16) -> 16 / 7 = 2.285714285714286 (left: 2.285714285714286) -> 2.285714285714286 / 2 = 1.142857142857143",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 10 = 16 (left: 9 11 16) -> 16 - 9 = 7 (left: 7 16) -> 16 / 7 = 2.285714285714286 (left: 2.285714285714286) -> 2.285714285714286 / 2 = 1.142857142857143 -> 2.285714285714286 - 2 = 0.2857142857142858 (left",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 10 = 16 (left: 9 11 16) -> 16 - 9 = 7 (left: 7 16) -> 16 / 7 = 2.285714285714286 (left: 2.285714285714286) -> 2.285714285714286 / 2 = 1.142857142857143 -> 2.285714285714286 - 2 = 0.2857142857142858 (left -> 2.285714285714286 + 2 = 4.285714285714286 (left: 4.285714285714286)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": " 9 9 12"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "16"
                }
            },
            "Step 7": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 11 + 15 = 26 (left: 10 26) -> 26 - 10 = 16 (left: 16) -> No possible next steps.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 11 + 15 = 26 (left: 10 26) -> 26 - 10 = 16 (left: 16) -> No possible next steps. -> There are no possible next steps with the given numbers 2 8 8 14.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 + 11 = 21 (left: 6 9 21)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 1": {
                "Step": "6 + 9 = 15 (left: 10 11 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> Input: 3 6 9 12",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> Input: 3 6 9 12 -> 3 + 6 = 9 (left:  9 9 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 4": {
                "Step": "6 * 9 = 54 (left: 10 11 54)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 10 + 11 = 21 (left: 21 54)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 10 + 11 = 21 (left: 21 54) -> 21 + 54 = 75 (left: 75)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "16"
                }
            },
            "Step 7": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 11 + 15 = 26 (left: 10 26) -> 26 - 10 = 16 (left: 16) -> No further steps can be taken with the number 16.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 11 + 15 = 26 (left: 10 26) -> 26 - 10 = 16 (left: 16) -> No further steps can be taken with the number 16. -> 16 + 8 = 24",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "10 + 11 = 21 (left: 6 9 21)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 1": {
                "Step": "6 * 9 = 54 (left: 10 11 54)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 10 + 11 = 21 (left: 21 54)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 10 + 11 = 21 (left: 21 54) -> 21 - 54 = -33 (left: -33)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 4": {
                "Step": "6 * 9 = 54 (left: 10 11 54)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 54 - 10 = 44 (left: 10 44)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 54 - 10 = 44 (left: 10 44) -> 44 / 10 = 4.4 (left: 4.4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": " 9 9 12"
                }
            },
            "Step 7": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> Input: 3 6 9 12 -> 3 + 6 = 9 (left:  9 9 12) -> 9 + 9 = 18 (left: 12 18)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> Input: 3 6 9 12 -> 3 + 6 = 9 (left:  9 9 12) -> 9 + 9 = 18 (left: 12 18) -> 18 + 12 = 30 (left: 12 30)",
                "Pruning": null
            }
        },
        "Input": "6 9 10 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "877": {
        "puzzle": "2 4 5 11",
        "Agent 0": {
            "Step 0": {
                "Step": "5 + 11 = 16 (left: 2 4 16)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 5 11"
                }
            },
            "Step 1": {
                "Step": "2 * 4 = 8 (left: 5 8 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 11 - 5 = ",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 11 - 5 =  -> 11 - 5 = 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "5 8 11"
                }
            },
            "Step 4": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 8 / 5 = 1.6 (left: 1.6 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 8 / 5 = 1.6 (left: 1.6 11) -> 1.6 * 11 = 17.6 (left: 11 17.6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 8 / 5 = 1.6 (left: 1.6 11) -> 1.6 * 11 = 17.6 (left: 11 17.6) -> 11 + 17.6 = 28.6 (left: 28.6)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "5.5"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "10 12.75"
                }
            },
            "Step 7": {
                "Step": "5 * 2 = 10 (left: 4 10 11) -> 11 / 4 = 2.75 (left: 2.75 10) -> 2.75 + 10 = 12.75 (left: 10 12.75) -> 12.75 - 10 = 2.75 (left: 2.75)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "10 12.75"
                }
            },
            "Step 8": {
                "Step": "5 * 2 = 10 (left: 4 10 11) -> 11 / 4 = 2.75 (left: 2.75 10) -> 2.75 + 10 = 12.75 (left: 10 12.75) -> 12.75 - 10 = 2.75 (left: 2.75 12.75)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 * 4 = 8 (left: 5 8 11)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "5 8 11"
                }
            },
            "Step 1": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 5 + 8 = 13 (left: 11 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 5 + 8 = 13 (left: 11 13) -> 11 / 13 = 0.846 (left: 0.846)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 5 + 8 = 13 (left: 11 13) -> 11 / 13 = 0.846 (left: 0.846) -> There are no possible next steps for the input 0.846.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 5 11"
                }
            },
            "Step 4": {
                "Step": "5 * 2 = 10 (left: 4 10 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 2 = 10 (left: 4 10 11) -> 11 / 4 = 2.75 (left: 2.75 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 2 = 10 (left: 4 10 11) -> 11 / 4 = 2.75 (left: 2.75 10) -> 2.75 + 10 = 12.75 (left: 10 12.75)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "10 12.75"
                }
            },
            "Step 7": {
                "Step": "5 * 2 = 10 (left: 4 10 11) -> 11 / 4 = 2.75 (left: 2.75 10) -> 2.75 + 10 = 12.75 (left: 10 12.75) -> 10 / 12.75 = 0.78431372549 (left: 0.78431372549)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "10 12.75"
                }
            },
            "Step 8": {
                "Step": "5 * 2 = 10 (left: 4 10 11) -> 11 / 4 = 2.75 (left: 2.75 10) -> 2.75 + 10 = 12.75 (left: 10 12.75) -> 10 + 12.75 = 22.75 (left: 22.75)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "There are no possible next steps with the input 11."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 5 = 9 (left: 2 9 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 5 11"
                }
            },
            "Step 1": {
                "Step": "4 + 5 = 9 (left: 2 9 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 5 = 9 (left: 2 9 11) -> 2 + 9 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 5 = 9 (left: 2 9 11) -> 2 + 9 = 11 (left: 11) -> 11 / 2 = 5.5 (left: 5.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 5 11"
                }
            },
            "Step 4": {
                "Step": "5 * 11 = 55 (left: 2 4 ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 11 = 55 (left: 2 4  -> 4 / 2 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 11 = 55 (left: 2 4  -> 4 / 2 = 2 (left: 2) -> There are no possible next steps with only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "10 12.75"
                }
            },
            "Step 7": {
                "Step": "5 * 2 = 10 (left: 4 10 11) -> 11 / 4 = 2.75 (left: 2.75 10) -> 2.75 + 10 = 12.75 (left: 10 12.75) -> 10 + 12.75 = 22.75 (left: 22.75)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "10 12.75"
                }
            },
            "Step 8": {
                "Step": "5 * 2 = 10 (left: 4 10 11) -> 11 / 4 = 2.75 (left: 2.75 10) -> 2.75 + 10 = 12.75 (left: 10 12.75) -> 10 + 12.75 = 22.75 (left: 12.75 22.75)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 * 4 = 8 (left: 5 8 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 4 16"
                }
            },
            "Step 1": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 16 / 2 = 8 (left: 4 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 16 / 2 = 8 (left: 4 8) -> 8 / 4 = 2 (left: 2 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 16 / 2 = 8 (left: 4 8) -> 8 / 4 = 2 (left: 2 8) -> 2 * 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "5 8 11"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "5 8 11"
                }
            },
            "Step 4": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 5 * 8 = 40 (left: 40 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 5 * 8 = 40 (left: 40 11) -> 40 + 11 = 51 (left: 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 5 * 8 = 40 (left: 40 11) -> 40 + 11 = 51 (left: 11) -> There are no possible next steps with the input 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "10 12.75"
                }
            },
            "Step 7": {
                "Step": "5 * 2 = 10 (left: 4 10 11) -> 11 / 4 = 2.75 (left: 2.75 10) -> 2.75 + 10 = 12.75 (left: 10 12.75) -> 10 - 12.75 = -2.75 (left: -2.75)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "10 12.75"
                }
            },
            "Step 8": {
                "Step": "5 * 2 = 10 (left: 4 10 11) -> 11 / 4 = 2.75 (left: 2.75 10) -> 2.75 + 10 = 12.75 (left: 10 12.75) -> 10 / 12.75 = 0.78431372549 (left: 0.78431372549)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "There are no possible next steps for the input 0.846."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 5 6 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 5 11"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 5 6 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 5 6 11) -> Input: 3 7 2",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 5 6 11) -> Input: 3 7 2 -> 7 - 3 = 4 (left: 4 2)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 5 11"
                }
            },
            "Step 4": {
                "Step": "4 + 5 = 9 (left: 2 9 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 + 5 = 9 (left: 2 9 11) -> 11 / 2 = 5.5 (left: 5.5 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 5 = 9 (left: 2 9 11) -> 11 / 2 = 5.5 (left: 5.5 11) -> 5.5 * 11 = 60.5 (left: 60.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "10 12.75"
                }
            },
            "Step 7": {
                "Step": "5 * 2 = 10 (left: 4 10 11) -> 11 / 4 = 2.75 (left: 2.75 10) -> 2.75 + 10 = 12.75 (left: 10 12.75) -> 10 + 12.75 = 22.75 (left: 22.75)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "10 12.75"
                }
            },
            "Step 8": {
                "Step": "5 * 2 = 10 (left: 4 10 11) -> 11 / 4 = 2.75 (left: 2.75 10) -> 2.75 + 10 = 12.75 (left: 10 12.75) -> 10 / 12.75 \u2248 0.7843 (left: 0.7843)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "There are no possible next steps with the input 11."
                }
            }
        },
        "Input": "2 4 5 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "878": {
        "puzzle": "1 2 5 10",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 5 = 7 (left: 1 7 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 5 10"
                }
            },
            "Step 1": {
                "Step": "10 / 2 = 5 (left: 1 5 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 2 = 5 (left: 1 5 10) -> 1 * 5 = 5 (left:",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 / 2 = 5 (left: 1 5 10) -> 1 * 5 = 5 (left: -> 5 - 1 = 4 (left: 4 5)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 5 10"
                }
            },
            "Step 4": {
                "Step": "10 - 2 = 8 (left: ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 2 = 8 (left:  -> Please let me know if you have a specific operation in mind or if you would like more suggestions.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 2 = 8 (left:  -> Please let me know if you have a specific operation in mind or if you would like more suggestions. -> - 2 / 8 = 0.25 (left: 0.25 8 14)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "0.25 8 14"
                }
            },
            "Step 7": {
                "Step": "10 - 2 = 8 (left:  -> Please let me know if you have a specific operation in mind or if you would like more suggestions. -> - 2 / 8 = 0.25 (left: 0.25 8 14) -> 14 - 0.25 = 13.75 (left: 8 13.75)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 2 = 8 (left:  -> Please let me know if you have a specific operation in mind or if you would like more suggestions. -> - 2 / 8 = 0.25 (left: 0.25 8 14) -> 14 - 0.25 = 13.75 (left: 8 13.75) -> 8 * 13.75 = 110 (left: 110)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "There are no possible next steps with the number 18."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 - 2 = 3 (left: 1 3 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 10"
                }
            },
            "Step 1": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 + 10 = 11 (left: 11) -> There are no possible next steps with the input 11.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 + 10 = 11 (left: 11) -> There are no possible next steps with the input 11. -> There are no possible next steps with the input 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 10"
                }
            },
            "Step 4": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 9) -> 9 + 9 = 18 (left: 18)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 9) -> 9 + 9 = 18 (left: 18) -> There are no possible next steps with the number 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "0.25 8 14"
                }
            },
            "Step 7": {
                "Step": "10 - 2 = 8 (left:  -> Please let me know if you have a specific operation in mind or if you would like more suggestions. -> - 2 / 8 = 0.25 (left: 0.25 8 14) -> 14 / 0.25 = 56 (left: 8 56)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 2 = 8 (left:  -> Please let me know if you have a specific operation in mind or if you would like more suggestions. -> - 2 / 8 = 0.25 (left: 0.25 8 14) -> 14 / 0.25 = 56 (left: 8 56) -> 8 * 7 = 56 (left: 56)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "Input: 4 2 1"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 + 10 = 15 (left: 1 2 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 5 10"
                }
            },
            "Step 1": {
                "Step": "5 + 10 = 15 (left: 1 2 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 10 = 15 (left: 1 2 15) -> 15 / 2 = 7.5 (left:",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 10 = 15 (left: 1 2 15) -> 15 / 2 = 7.5 (left: -> 15 - 2 = 13 (left: 2 7.5 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 10"
                }
            },
            "Step 4": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 + 10 = 11 (left: 11) -> 11 + 8 = 19 (left: 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 + 10 = 11 (left: 11) -> 11 + 8 = 19 (left: 8) -> 8 + 8 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "0.25 8 14"
                }
            },
            "Step 7": {
                "Step": "10 - 2 = 8 (left:  -> Please let me know if you have a specific operation in mind or if you would like more suggestions. -> - 2 / 8 = 0.25 (left: 0.25 8 14) -> 0.25 * 8 = 2 (left: 2 14)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 2 = 8 (left:  -> Please let me know if you have a specific operation in mind or if you would like more suggestions. -> - 2 / 8 = 0.25 (left: 0.25 8 14) -> 0.25 * 8 = 2 (left: 2 14) -> 2 + 14 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "Input: 4 2 1"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 * 2 = 10 (left: 1 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 10"
                }
            },
            "Step 1": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 9) -> 9 * 8 = 72 (left: 72)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 9) -> 9 * 8 = 72 (left: 72) -> 7 + 2 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "1 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 10"
                }
            },
            "Step 4": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 + 10 = 11 (left: 11) -> There are no possible next steps with just the number 11.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 + 10 = 11 (left: 11) -> There are no possible next steps with just the number 11. -> There are no possible next steps with just the number 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "0.25 8 14"
                }
            },
            "Step 7": {
                "Step": "10 - 2 = 8 (left:  -> Please let me know if you have a specific operation in mind or if you would like more suggestions. -> - 2 / 8 = 0.25 (left: 0.25 8 14) -> 14",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "0.25 8 14"
                }
            },
            "Step 8": {
                "Step": "10 - 2 = 8 (left:  -> Please let me know if you have a specific operation in mind or if you would like more suggestions. -> - 2 / 8 = 0.25 (left: 0.25 8 14) -> 8 / 0.25 = 32 (left: 32 14)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 5 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 10"
                }
            },
            "Step 1": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> Input: 4 2 1",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 10"
                }
            },
            "Step 4": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 + 8 = 18 (left: 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 + 8 = 18 (left: 8) -> 8 - 8 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "4 5"
                },
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "0.25 8 14"
                }
            },
            "Step 7": {
                "Step": "10 - 2 = 8 (left:  -> Please let me know if you have a specific operation in mind or if you would like more suggestions. -> - 2 / 8 = 0.25 (left: 0.25 8 14) -> 0.25 * 8 = 2 (left: 2 14)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 2 = 8 (left:  -> Please let me know if you have a specific operation in mind or if you would like more suggestions. -> - 2 / 8 = 0.25 (left: 0.25 8 14) -> 0.25 * 8 = 2 (left: 2 14) -> Input: 16 12",
                "Pruning": null
            }
        },
        "Input": "1 2 5 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "879": {
        "puzzle": "2 2 2 5",
        "Agent 0": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 2 5)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 5"
                }
            },
            "Step 1": {
                "Step": "2 / 2 = 1 (left: 1 2 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 / 2 = 1 (left: 1 2 5) -> 2 * 5 = 10 (left: 1 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 / 2 = 1 (left: 1 2 5) -> 2 * 5 = 10 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 5"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 2 4 5)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 2 4 5) -> 2 + 4 = 6 (left: 5 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 2 4 5) -> 2 + 4 = 6 (left: 5 6) -> 10 * 3 = 30 (left: 30)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "5"
                }
            },
            "Step 7": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> Input: 1 5 -> 1 * 5 = 5 (left: 5) -> 5 / 5 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "1.75 + 2 = 3.75"
                }
            },
            "Step 8": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 2 + 5 = 7 (left: 4 7) -> 7 / 4 = 1.75 (left: 1.75) -> 1.75 + 2 = 3.75 -> 2 + 1.75 = 3.75 (left: 3.75 2)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 - 2 = 3 (left: 2 3 5)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 2 5"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 2 + 5 = 7 (left: 4 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 2 + 5 = 7 (left: 4 7) -> 7 / 4 = 1.75 (left: 1.75)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 2 + 5 = 7 (left: 4 7) -> 7 / 4 = 1.75 (left: 1.75) -> 1.75 + 2 = 3.75",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 5"
                }
            },
            "Step 4": {
                "Step": "5 - 2 = 3 (left: 2 2 3)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> Input: 1 5",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> Input: 1 5 -> 1 * 5 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1.75 + 2 = 3.75"
                }
            },
            "Step 7": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 2 + 5 = 7 (left: 4 7) -> 7 / 4 = 1.75 (left: 1.75) -> 1.75 + 2 = 3.75 -> 1.75 * 2 = 3.5 (left: 3.5 3.75)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 2 + 5 = 7 (left: 4 7) -> 7 / 4 = 1.75 (left: 1.75) -> 1.75 + 2 = 3.75 -> 1.75 * 2 = 3.5 (left: 3.5 3.75) -> Input: 10 5",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 2 5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 5"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 2 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 4 * 2 = 8 (left: 8 5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 4 * 2 = 8 (left: 8 5) -> 8 / 5 = 1.6 (left: 1.6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 5"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 2 5)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 5 + 2 = 7 (left: 4 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 5 + 2 = 7 (left: 4 7) -> 4 * 7 = 28 (left: 28)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "10"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 5 / 2 = 2.5 (left: 4 2.5) -> 4 * 2.5 = 10 (left: 10) -> There is only one possible next step: 10.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 5 / 2 = 2.5 (left: 4 2.5) -> 4 * 2.5 = 10 (left: 10) -> There is only one possible next step: 10. -> 10 + 4 = 14",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 * 5 = 10 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 5"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 2 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 5 / 2 = 2.5 (left: 4 2.5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 5 / 2 = 2.5 (left: 4 2.5) -> 4 * 2.5 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 5"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 4 5)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 4 4 5) -> 4 + 4 = 8 (left: 5 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 4 4 5) -> 4 + 4 = 8 (left: 5 8) -> 5 * 8 = 40 (left: 40)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1.75 + 2 = 3.75"
                }
            },
            "Step 7": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 2 + 5 = 7 (left: 4 7) -> 7 / 4 = 1.75 (left: 1.75) -> 1.75 + 2 = 3.75 -> 2 / 1.75 = 1.14285714286",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 2 + 5 = 7 (left: 4 7) -> 7 / 4 = 1.75 (left: 1.75) -> 1.75 + 2 = 3.75 -> 2 / 1.75 = 1.14285714286 -> 2 - 1.14285714286 = 0.85714285714",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 - 2 = 3 (left: 2 3 3)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 5"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 2 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 5 * 2 = ",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 5 * 2 =  -> 5 * 2 = 10",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 5"
                }
            },
            "Step 4": {
                "Step": "5 - 2 = 3 (left: 2 2 3)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 * 2 = 4 (left: 4 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 * 2 = 4 (left: 4 3) -> 4 * 3 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "10"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 5 / 2 = 2.5 (left: 4 2.5) -> 4 * 2.5 = 10 (left: 10) -> 10 + 10 = 20",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 5 / 2 = 2.5 (left: 4 2.5) -> 4 * 2.5 = 10 (left: 10) -> 10 + 10 = 20 -> 10 * 20 = 200 (left: 10 20 200)",
                "Pruning": null
            }
        },
        "Input": "2 2 2 5",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "880": {
        "puzzle": "6 12 13 13",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 6 13 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 12 13 13"
                }
            },
            "Step 1": {
                "Step": "13 + 6 = 19 (left: 12 13 19)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 + 6 = 19 (left: 12 13 19) -> 12 * 13 = 156 (left: 19 156)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 + 6 = 19 (left: 12 13 19) -> 12 * 13 = 156 (left: 19 156) -> 19 / 156 \u2248 0.122 (left: 0.122)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 12 13 13"
                }
            },
            "Step 4": {
                "Step": "6 * 12 = 72 (left: 13 13 72)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 * 12 = 72 (left: 13 13 72) -> 72 - 13 = 59 (left: 13 59)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 12 = 72 (left: 13 13 72) -> 72 - 13 = 59 (left: 13 59) -> 59 / 13 = 4.53846153846 (left: 4.53846153846)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "14 72"
                }
            },
            "Step 7": {
                "Step": "6 * 12 = 72 (left: 13 13 72) -> 13 / 13 = 1 (left: 1 13 72) -> 1 + 13 = 14 (left: 14 72) -> 14 * 6 = 84 (left: 84)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "14 72"
                }
            },
            "Step 8": {
                "Step": "6 * 12 = 72 (left: 13 13 72) -> 13 / 13 = 1 (left: 1 13 72) -> 1 + 13 = 14 (left: 14 72) -> 5 * 9 = ",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 7 12 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 12 13 13"
                }
            },
            "Step 1": {
                "Step": "13 - 6 = 7 (left: 6 13 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 6 = 7 (left: 6 13 7) -> 13 - 6 = 7 (left: 7 7)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 6 = 7 (left: 6 13 7) -> 13 - 6 = 7 (left: 7 7) -> 7 * 7 = 49 (left: 49)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 12 13 13"
                }
            },
            "Step 4": {
                "Step": "6 * 12 = 72 (left: 13 13 72)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 * 12 = 72 (left: 13 13 72) -> 13 / 13 = 1 (left: 1 13 72)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 12 = 72 (left: 13 13 72) -> 13 / 13 = 1 (left: 1 13 72) -> 1 + 13 = 14 (left: 14 72)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "14 72"
                }
            },
            "Step 7": {
                "Step": "6 * 12 = 72 (left: 13 13 72) -> 13 / 13 = 1 (left: 1 13 72) -> 1 + 13 = 14 (left: 14 72) -> 72 - 14 = 58 (left: 58)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "14 72"
                }
            },
            "Step 8": {
                "Step": "6 * 12 = 72 (left: 13 13 72) -> 13 / 13 = 1 (left: 1 13 72) -> 1 + 13 = 14 (left: 14 72) -> 14 * 5 = 70 (left: 70)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 12 = 18 (left: 13 18 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 12 13 13"
                }
            },
            "Step 1": {
                "Step": "12 - 6 = 6 (left: 6 13 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 - 6 = 7 (left: 7 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 - 6 = 7 (left: 7 13) -> 7 + 13 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 12 13 13"
                }
            },
            "Step 4": {
                "Step": "12 - 6 = 6 (left: 6 13 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 / 6 = 2.16666666667 (left: 2.16666666667 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 / 6 = 2.16666666667 (left: 2.16666666667 13) -> 13 / 2.16666666667 = 5.999999999",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "14 72"
                }
            },
            "Step 7": {
                "Step": "6 * 12 = 72 (left: 13 13 72) -> 13 / 13 = 1 (left: 1 13 72) -> 1 + 13 = 14 (left: 14 72) -> Input: 86 58 5.14285714286 1008",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 * 12 = 72 (left: 13 13 72) -> 13 / 13 = 1 (left: 1 13 72) -> 1 + 13 = 14 (left: 14 72) -> Input: 86 58 5.14285714286 1008 -> 86 / 58 = 1.48275862069 (left: 1.48275862069 58 1008)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "12 / 6 = 2 (left: 2 13 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 12 13 13"
                }
            },
            "Step 1": {
                "Step": "12 - 6 = 6 (left: 6 13 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 / 6 = 2.16666666667 (left: 2.16666666667 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 / 6 = 2.16666666667 (left: 2.16666666667 13) -> 13 - 2.16666666667 = 10.83333333333 (left: 10.83333333333)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 12 13 13"
                }
            },
            "Step 4": {
                "Step": "13 + 6 = 19 (left: 12 13 19)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 + 6 = 19 (left: 12 13 19) -> 13 * 19 = 247 (left: 12 247)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 + 6 = 19 (left: 12 13 19) -> 13 * 19 = 247 (left: 12 247) -> 12 + 247 = 259 (left: 259)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "14 72"
                }
            },
            "Step 7": {
                "Step": "6 * 12 = 72 (left: 13 13 72) -> 13 / 13 = 1 (left: 1 13 72) -> 1 + 13 = 14 (left: 14 72) -> 14 - 72 = -58 (left: -58)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "14 72"
                }
            },
            "Step 8": {
                "Step": "6 * 12 = 72 (left: 13 13 72) -> 13 / 13 = 1 (left: 1 13 72) -> 1 + 13 = 14 (left: 14 72) -> 14 + 72 = 86 (left: 86)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 + 6 = 19 (left: 12 13 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 12 13 13"
                }
            },
            "Step 1": {
                "Step": "6 + 12 = 18 (left: 13 18 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 12 = 18 (left: 13 18 13) -> 13 - 18 = -5 (left: -5 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 12 = 18 (left: 13 18 13) -> 13 - 18 = -5 (left: -5 13) -> -5 * 13 = -65 (left: -65)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 12 13 13"
                }
            },
            "Step 4": {
                "Step": "13 - 12 = 1 (left: 1 13 ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 12 = 1 (left: 1 13  -> 13 - 1 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 12 = 1 (left: 1 13  -> 13 - 1 = 12 (left: 12) -> No further steps can be taken with the input 12.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "14 72"
                }
            },
            "Step 7": {
                "Step": "6 * 12 = 72 (left: 13 13 72) -> 13 / 13 = 1 (left: 1 13 72) -> 1 + 13 = 14 (left: 14 72) -> Input: 5 6 7",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 * 12 = 72 (left: 13 13 72) -> 13 / 13 = 1 (left: 1 13 72) -> 1 + 13 = 14 (left: 14 72) -> Input: 5 6 7 -> 7 - 5 = 2 (left: 2 6)",
                "Pruning": null
            }
        },
        "Input": "6 12 13 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            }
        ]
    },
    "881": {
        "puzzle": "3 3 6 10",
        "Agent 0": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 9 6 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 6 10"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 * 6 = 60 (left: 6 60)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 * 6 = 60 (left: 6 60) -> 6 + 60 = 66 (left: 66)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 * 6 = 60 (left: 6 60) -> 6 + 60 = 66 (left: 66) -> 66 + 2 = 68"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 6 6 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (10 - 3 - 3) * 6 = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 3 = 7 (left: 3 6 7)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 6 10"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 + 6 = 16 (left: 6 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 + 6 = 16 (left: 6 16) -> 6 + 16 = 22 (left: 22)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 + 6 = 16 (left: 6 16) -> 6 + 16 = 22 (left: 22) -> 22 / 2 = 11"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 6 6 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 6 10"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 6 + 6 = 12 (left: 10 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 6 + 6 = 12 (left: 10 12) -> 10 + 12 = 22 (left: 22)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 6 + 6 = 12 (left: 10 12) -> 10 + 12 = 22 (left: 22) -> 22 + 2 = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 9 6 ",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 6 10"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 / 6 = 1.67 (left: 1.67 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 / 6 = 1.67 (left: 1.67 6) -> 1.67 * 6 = 10.02 (left: 10.02)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 / 6 = 1.67 (left: 1.67 6) -> 1.67 * 6 = 10.02 (left: 10.02) -> 10 + 2 = 12.02"
            }
        },
        "Input": "3 3 6 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "882": {
        "puzzle": "3 4 8 11",
        "Agent 0": {
            "Step 0": {
                "Step": "8 + 3 = 11 (left: 4 8 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 8 11"
                }
            },
            "Step 1": {
                "Step": "11 - 4 = 7 (left: 3 7 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 4 = 7 (left: 3 7 8) -> 3 / 7 = ",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 4 = 7 (left: 3 7 8) -> 3 / 7 =  -> 3 / 7 = 0.42857142857142855",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 8 11"
                }
            },
            "Step 4": {
                "Step": "11 - 8 = 3 (left: 3 4 ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 8 = 3 (left: 3 4  -> 3 * 4 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 8 = 3 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "12.54"
                }
            },
            "Step 7": {
                "Step": "3 + 4 = 7 (left: 7 8 11) -> 8 / 7 = 1.14 (left: 1.14 11) -> 1.14 * 11 = 12.54 (left: 12.54) -> 12 + 54 = 66",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 + 4 = 7 (left: 7 8 11) -> 8 / 7 = 1.14 (left: 1.14 11) -> 1.14 * 11 = 12.54 (left: 12.54) -> 12 + 54 = 66 -> 12 / 54 = 0.2222",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 + 3 = 11 (left: 4 11 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 8 11"
                }
            },
            "Step 1": {
                "Step": "8 - 4 = 4 (left: 3 4 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 4 = 4 (left: 3 4 11) -> 11 - 4 = 7 (left: 3 7)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 4 = 4 (left: 3 4 11) -> 11 - 4 = 7 (left: 3 7) -> 7 / 3 = 2 (left: 2 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 8 11"
                }
            },
            "Step 4": {
                "Step": "11 - 4 = 7 (left: 3 7 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 4 = 7 (left: 3 7 8) -> 3 * 7 = 21 (left: 8 21)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 4 = 7 (left: 3 7 8) -> 3 * 7 = 21 (left: 8 21) -> 8 + 21 = 29 (left: 29)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "2 7"
                }
            },
            "Step 7": {
                "Step": "8 - 4 = 4 (left: 3 4 11) -> 11 - 4 = 7 (left: 3 7) -> 7 / 3 = 2 (left: 2 7) -> 2 * 7 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "13"
                }
            },
            "Step 8": {
                "Step": "11 - 3 = 8 (left: 8 4 11) -> 8 / 4 = 2 (left: 2 11) -> 2 + 11 = 13 (left: 13) -> 13 - 2 = 11 (left: 11)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 3 7 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 8 11"
                }
            },
            "Step 1": {
                "Step": "11 - 4 = 7 (left: 3 7 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 4 = 7 (left: 3 7 11) -> 11 - 3 = 8 (left: 7 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 4 = 7 (left: 3 7 11) -> 11 - 3 = 8 (left: 7 8) -> 7 - 8 = -1 (left: -1)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 8 11"
                }
            },
            "Step 4": {
                "Step": "11 - 4 = 7 (left: 3 7 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 4 = 7 (left: 3 7 8) -> 7 + 3 = 10 (left: 8 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 4 = 7 (left: 3 7 8) -> 7 + 3 = 10 (left: 8 10) -> 10 / 8 = 1.25 (left: 1.25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "13"
                }
            },
            "Step 7": {
                "Step": "11 - 3 = 8 (left: 8 4 11) -> 8 / 4 = 2 (left: 2 11) -> 2 + 11 = 13 (left: 13) -> 13 + 2 = 15 (left: 2 15)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 3 = 8 (left: 8 4 11) -> 8 / 4 = 2 (left: 2 11) -> 2 + 11 = 13 (left: 13) -> 13 + 2 = 15 (left: 2 15) -> 15 / 2 = 7.5 (left: 7.5)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 8 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 8 11"
                }
            },
            "Step 1": {
                "Step": "4 * 3 = 12 (left: 8 12 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 3 = 12 (left: 8 12 11) -> 11 + 8 = 19 (left: 12 19)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 3 = 12 (left: 8 12 11) -> 11 + 8 = 19 (left: 12 19) -> 12 * 19 = 228 (left: 228)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 8 11"
                }
            },
            "Step 4": {
                "Step": "11 - 3 = 8 (left: 8 4 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 3 = 8 (left: 8 4 11) -> 8 / 4 = 2 (left: 2 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 3 = 8 (left: 8 4 11) -> 8 / 4 = 2 (left: 2 11) -> 2 + 11 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "13"
                }
            },
            "Step 7": {
                "Step": "11 - 3 = 8 (left: 8 4 11) -> 8 / 4 = 2 (left: 2 11) -> 2 + 11 = 13 (left: 13) -> There are no possible next steps for the input 13.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 3 = 8 (left: 8 4 11) -> 8 / 4 = 2 (left: 2 11) -> 2 + 11 = 13 (left: 13) -> There are no possible next steps for the input 13. -> 13 - 2 = 11 (left: 2 11)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 8 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 8 11"
                }
            },
            "Step 1": {
                "Step": "3 + 4 = 7 (left: 7 8 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 4 = 7 (left: 7 8 11) -> 8 / 7 = 1.14 (left: 1.14 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 + 4 = 7 (left: 7 8 11) -> 8 / 7 = 1.14 (left: 1.14 11) -> 1.14 * 11 = 12.54 (left: 12.54)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 8 11"
                }
            },
            "Step 4": {
                "Step": "4 * 8 = 32 (left: 3 32 ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 * 8 = 32 (left: 3 32  -> 3 + 32 = 35 (left: 35)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 8 = 32 (left: 3 32  -> 3 + 32 = 35 (left: 35) -> 35 + 2 = 37",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "1.25"
                }
            },
            "Step 7": {
                "Step": "11 - 4 = 7 (left: 3 7 8) -> 7 + 3 = 10 (left: 8 10) -> 10 / 8 = 1.25 (left: 1.25) -> 1.25 / 2 = 0.625 (left: 0.625)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "29"
                }
            },
            "Step 8": {
                "Step": "11 - 4 = 7 (left: 3 7 8) -> 3 * 7 = 21 (left: 8 21) -> 8 + 21 = 29 (left: 29) -> 29 + 2 = 31",
                "Pruning": null
            }
        },
        "Input": "3 4 8 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "883": {
        "puzzle": "4 4 6 13",
        "Agent 0": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 6 16 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 13"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 6 8 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 6 8 13) -> 8 / 6 = 1.33 (left: 1.33 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 6 8 13) -> 8 / 6 = 1.33 (left: 1.33 13) -> 1.33 - 13 = -11.67 (left: -11.67)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 13"
                }
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left: 4 6 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 6 / 4 = 1.5 (left: 1.5 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 6 / 4 = 1.5 (left: 1.5 9) -> 1.5 + 9 = 10.5 (left: 10.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "There are no possible next steps as 10.5 is already the final result."
                }
            },
            "Step 7": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 10 / 4 = 2.5 (left: 2.5 13) -> 13 - 2.5 = 10.5 (left: 10.5) -> There are no possible next steps as 10.5 is already the final result. -> N/A",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "4.5"
                }
            },
            "Step 8": {
                "Step": "6 - 4 = 2 (left: 2 4 13) -> 13 - 4 = 9 (left: 2 9) -> 9 / 2 = 4.5 (left: 4.5) -> There are no possible next steps with the input 4.5.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 4 = 10 (left: 4 10 13)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 13"
                }
            },
            "Step 1": {
                "Step": "4 / 4 = 1 (left: 1 6 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 4 = 1 (left: 1 6 13) -> 13 - 1 = 12 (left: 6 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 / 4 = 1 (left: 1 6 13) -> 13 - 1 = 12 (left: 6 12) -> 12 - 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 13"
                }
            },
            "Step 4": {
                "Step": "6 + 4 = 10 (left: 4 10 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 10 - 4 = 6 (left: 6 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 10 - 4 = 6 (left: 6 13) -> 6 * 13 = 78 (left: 78)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "10.5"
                }
            },
            "Step 7": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 6 / 4 = 1.5 (left: 1.5 9) -> 1.5 + 9 = 10.5 (left: 10.5) -> There are no possible next steps as the input is a single number.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 6 / 4 = 1.5 (left: 1.5 9) -> 1.5 + 9 = 10.5 (left: 10.5) -> There are no possible next steps as the input is a single number. -> None",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "There are no possible next steps as 10.5 is already the final result."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 6 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 10 13"
                }
            },
            "Step 1": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> Input: 5 15",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> Input: 5 15 -> 5 * 15 = 75 (left: 75)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> Input: 5 15 -> 5 * 15 = 75 (left: 75) -> 75 - 2 = 73 (left: 2)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "4 10 13"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 13"
                }
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left: 4 6 ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 6 / 4 = 1.5 (left: 1.5) -> 1.5 / 2 = 0.75 (left: 0.75)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "78"
                }
            },
            "Step 7": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 10 - 4 = 6 (left: 6 13) -> 6 * 13 = 78 (left: 78) -> 7 * 8 = 56 (left: 56)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "4.5"
                }
            },
            "Step 8": {
                "Step": "6 - 4 = 2 (left: 2 4 13) -> 13 - 4 = 9 (left: 2 9) -> 9 / 2 = 4.5 (left: 4.5) -> 4.5 / 2 = 2.25 (left: 2.25)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "There are no possible next steps as 10.5 is already the final result."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 6 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 13"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 6 8 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 6 8 13) -> 6 * 8 = 48 (left: 48 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 6 8 13) -> 6 * 8 = 48 (left: 48 13) -> 48 / 13 = 3.6923076923076925 (left: 13 3.6923076923076925)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 10 13"
                }
            },
            "Step 4": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 13 - 4 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 13 - 4 = 9 (left: 9) -> 9 * 9 = 81 (left: 81)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 13 - 4 = 9 (left: 9) -> 9 * 9 = 81 (left: 81) -> 81 - 2 = 79 (left: 79)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "4.5"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "10.5"
                }
            },
            "Step 7": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 6 / 4 = 1.5 (left: 1.5 9) -> 1.5 + 9 = 10.5 (left: 10.5) -> There are no possible next steps with the input of 10.5 as there are no other numbers to operate with.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 6 / 4 = 1.5 (left: 1.5 9) -> 1.5 + 9 = 10.5 (left: 10.5) -> There are no possible next steps with the input of 10.5 as there are no other numbers to operate with. -> None",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "There are no possible next steps as 10.5 is already the final result."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 + 4 = 8 (left: 6 8 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 13"
                }
            },
            "Step 1": {
                "Step": "6 - 4 = 2 (left: 2 4 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 4 = 2 (left: 2 4 13) -> 13 - 4 = 9 (left: 2 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 4 = 2 (left: 2 4 13) -> 13 - 4 = 9 (left: 2 9) -> 9 / 2 = 4.5 (left: 4.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 10 13"
                }
            },
            "Step 4": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 10 / 4 = 2.5 (left: 2.5 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 10 / 4 = 2.5 (left: 2.5 13) -> 13 - 2.5 = 10.5 (left: 10.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 10 / 4 = 2.5 (left: 2.5 13) -> 13 - 2.5 = 10.5 (left: 10.5) -> There are no possible next steps as 10.5 is already the final result.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "There are no possible next steps as 10.5 is already the final result."
                }
            },
            "Step 7": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 10 / 4 = 2.5 (left: 2.5 13) -> 13 - 2.5 = 10.5 (left: 10.5) -> There are no possible next steps as 10.5 is already the final result. -> There are no possible next steps as 10.5 is already the final result.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 10 / 4 = 2.5 (left: 2.5 13) -> 13 - 2.5 = 10.5 (left: 10.5) -> There are no possible next steps as 10.5 is already the final result. -> There are no possible next steps as 10.5 is already the final result. -> There are no possible next steps as 10.5 is already the final result.",
                "Pruning": null
            }
        },
        "Input": "4 4 6 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "884": {
        "puzzle": "4 6 7 10",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 7 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10) -> 9 * 10 = 90 (left: 90)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10) -> 9 * 10 = 90 (left: 90) -> 90 - 2 = 88 (left: 88)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "2 7 10"
                },
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "70 70"
                }
            },
            "Step 4": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 * 10 = 140 (left: 140) -> 140 / 2 = 70 (left: 70 70) -> 70 * 70 = 4900 (left: 4900)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "8.57 17.14"
                }
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 6 7 10) -> 6 / 7 = 0.857 (left: 0.857 10) -> 0.857 * 10 = 8.57 (left: 8.57) -> 8.57 * 2 = 17.14 (left: 8.57 17.14) -> Possible next steps",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 6 7 10) -> 6 / 7 = 0.857 (left: 0.857 10) -> 0.857 * 10 = 8.57 (left: 8.57) -> 8.57 * 2 = 17.14 (left: 8.57 17.14) -> Possible next steps -> 8 - 7 = 1 (left: 1 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "70 70"
                }
            },
            "Step 7": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 * 10 = 140 (left: 140) -> 140 / 2 = 70 (left: 70 70) -> 70 - 70 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "1 8"
                }
            },
            "Step 8": {
                "Step": "10 - 4 = 6 (left: 6 7 10) -> 6 / 7 = 0.857 (left: 0.857 10) -> 0.857 * 10 = 8.57 (left: 8.57) -> 8.57 * 2 = 17.14 (left: 8.57 17.14) -> Possible next steps -> 8 - 7 = 1 (left: 1 8) -> 1 + 8 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "70 70"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 - 4 = 2 (left: 2 7 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 10 - 7 = 3 (left: 2 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 10 - 7 = 3 (left: 2 3) -> 3 / 2 = 1.5 (left: 1.5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 10 - 7 = 3 (left: 2 3) -> 3 / 2 = 1.5 (left: 1.5) -> There is only one number provided in the input (1.5), so there are no possible next steps to perform any arithmetic operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "8.57 17.14"
                }
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 6 7 10) -> 6 / 7 = 0.857 (left: 0.857 10) -> 0.857 * 10 = 8.57 (left: 8.57) -> 8.57 * 2 = 17.14 (left: 8.57 17.14) -> 17.14 - 8.57 = 8.57 (left: 8.57 8.57)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 6 7 10) -> 6 / 7 = 0.857 (left: 0.857 10) -> 0.857 * 10 = 8.57 (left: 8.57) -> 8.57 * 2 = 17.14 (left: 8.57 17.14) -> 17.14 - 8.57 = 8.57 (left: 8.57 8.57) -> 8.57 * 8.57 = 73.5649 (left: 73.5649)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "2 7 10"
                }
            },
            "Step 6": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1 8"
                }
            },
            "Step 7": {
                "Step": "10 - 4 = 6 (left: 6 7 10) -> 6 / 7 = 0.857 (left: 0.857 10) -> 0.857 * 10 = 8.57 (left: 8.57) -> 8.57 * 2 = 17.14 (left: 8.57 17.14) -> Possible next steps -> 8 - 7 = 1 (left: 1 8) -> 1 * 8 = 8 (left: 8 8)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 4 = 6 (left: 6 7 10) -> 6 / 7 = 0.857 (left: 0.857 10) -> 0.857 * 10 = 8.57 (left: 8.57) -> 8.57 * 2 = 17.14 (left: 8.57 17.14) -> Possible next steps -> 8 - 7 = 1 (left: 1 8) -> 1 * 8 = 8 (left: 8 8) -> 8 * 8 = 64 (left: 64)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "70 70"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 / 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 7 10"
                }
            },
            "Step 1": {
                "Step": "10 - 4 = 6 (left: 6 7 10) -> 6 / 7 = 0.857 (left: 0.857 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 6 7 10) -> 6 / 7 = 0.857 (left: 0.857 10) -> 0.857 * 10 = 8.57 (left: 8.57)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 6 7 10) -> 6 / 7 = 0.857 (left: 0.857 10) -> 0.857 * 10 = 8.57 (left: 8.57) -> 8.57 * 2 = 17.14 (left: 8.57 17.14)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 4": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 10 - 2 = 8 (left: 7 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 10 - 2 = 8 (left: 7 8) -> 7 + 8 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 10 - 2 = 8 (left: 7 8) -> 7 + 8 = 15 (left: 15) -> 15 / 2 = 7.5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1 8"
                }
            },
            "Step 7": {
                "Step": "10 - 4 = 6 (left: 6 7 10) -> 6 / 7 = 0.857 (left: 0.857 10) -> 0.857 * 10 = 8.57 (left: 8.57) -> 8.57 * 2 = 17.14 (left: 8.57 17.14) -> Possible next steps -> 8 - 7 = 1 (left: 1 8) -> 8 / 1 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "70 70"
                }
            },
            "Step 8": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 * 10 = 140 (left: 140) -> 140 / 2 = 70 (left: 70 70) -> 70 / 70 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "70 70"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 7 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 * 10 = 140 (left: 140)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 * 10 = 140 (left: 140) -> 140 / 2 = 70 (left: 70 70)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "70 70"
                }
            },
            "Step 4": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 * 10 = 140 (left: 140) -> 140 / 2 = 70 (left: 70 70) -> 70 - 70 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "70 70"
                }
            },
            "Step 5": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 * 10 = 140 (left: 140) -> 140 / 2 = 70 (left: 70 70) -> 70 + 70 = 140 (left: 140)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "2 7 10"
                }
            },
            "Step 6": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "14 10"
                }
            },
            "Step 7": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (6 - 4) * (7 + 10) = 24",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "1 8"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "7 - 4 = 3 (left: 3 7 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 6 7 10"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 7 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 7 24) -> 7 * 24 = 168 (left: 168)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 7 24) -> 7 * 24 = 168 (left: 168) -> 16 * 8 + 8 = 136 (left: 136)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "70 70"
                }
            },
            "Step 4": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 * 10 = 140 (left: 140) -> 140 / 2 = 70 (left: 70 70) -> 70 - 70 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "2 7 10"
                }
            },
            "Step 5": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 10 / 2 = 5 (left: 7 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 10 / 2 = 5 (left: 7 5) -> 7 / 5 = 1.4 (left: 1.4)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "70 70"
                }
            },
            "Step 7": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 * 10 = 140 (left: 140) -> 140 / 2 = 70 (left: 70 70) -> 70 * 70 = 4900 (left: 4900)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "1 8"
                }
            },
            "Step 8": {
                "Step": "10 - 4 = 6 (left: 6 7 10) -> 6 / 7 = 0.857 (left: 0.857 10) -> 0.857 * 10 = 8.57 (left: 8.57) -> 8.57 * 2 = 17.14 (left: 8.57 17.14) -> Possible next steps -> 8 - 7 = 1 (left: 1 8) -> 1 * 8 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "70 70"
                }
            }
        },
        "Input": "4 6 7 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "885": {
        "puzzle": "6 11 11 12",
        "Agent 0": {
            "Step 0": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 11 11 12"
                }
            },
            "Step 1": {
                "Step": "6 + 11 = 17 (left: 11 11 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 11 = 17 (left: 11 11 12) -> 11 - 11 = 0 (left: 0 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 11 = 17 (left: 11 11 12) -> 11 - 11 = 0 (left: 0 12) -> 12 / 0 = Undefined",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1.83333 11 12"
                }
            },
            "Step 4": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 1.83333 + 11 = 12.83333 (left: 12 12.83333)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 1.83333 + 11 = 12.83333 (left: 12 12.83333) -> 12 - 12.83333 = -0.83333 (left: -0.83333)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 1.83333 + 11 = 12.83333 (left: 12 12.83333) -> 12 - 12.83333 = -0.83333 (left: -0.83333) -> -0.83333 * 2 = -1.66666",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "- Divide one number by another."
                }
            },
            "Step 7": {
                "Step": "11 - 6 = 5 (left:  -> Please provide a set of numbers to continue with the calculation. -> - Divide one number by another. -> 8 / 14 = 0.5714 (left: 2 8 0.5714)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 6 = 5 (left:  -> Please provide a set of numbers to continue with the calculation. -> - Divide one number by another. -> 8 / 14 = 0.5714 (left: 2 8 0.5714) -> 2 + 8 = 10 (left: 0.5714 10)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 6 11 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 11 12"
                }
            },
            "Step 1": {
                "Step": "12 - 6 = 6 (left: 6 11 12) -> 11 / 6 = 1.83 (left: 1.83 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 6 = 6 (left: 6 11 12) -> 11 / 6 = 1.83 (left: 1.83 12) -> 1.83 * 12 = 21.96 (left: 21.96)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 6 = 6 (left: 6 11 12) -> 11 / 6 = 1.83 (left: 1.83 12) -> 1.83 * 12 = 21.96 (left: 21.96) -> 21.96 + 2 = 23.96 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 11 11 12"
                }
            },
            "Step 4": {
                "Step": "12 - 11 = 1 (left: 6 11 1)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 11 = 1 (left: 6 11 1) -> 6 + 11 = 17 (left: 1 17)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 11 = 1 (left: 6 11 1) -> 6 + 11 = 17 (left: 1 17) -> 17 - 1 = 16 (left: 1 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "- Divide one number by another."
                }
            },
            "Step 7": {
                "Step": "11 - 6 = 5 (left:  -> Please provide a set of numbers to continue with the calculation. -> - Divide one number by another. -> 2 / 8 = 0.25 (left: 0.25 8 14)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 6 = 5 (left:  -> Please provide a set of numbers to continue with the calculation. -> - Divide one number by another. -> 2 / 8 = 0.25 (left: 0.25 8 14) -> 8 / 0.25 = 32 (left: 32 14)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "11 / 6 = 1 (left: 1 11 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 11 11 12"
                }
            },
            "Step 1": {
                "Step": "11 / 6 = 1.83 (left: 1.83 11 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 / 6 = 1.83 (left: 1.83 11 12) -> 11 - 1.83 = 9.17 (left: 9.17 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 / 6 = 1.83 (left: 1.83 11 12) -> 11 - 1.83 = 9.17 (left: 9.17 12) -> 12 / 9.17 = 1.31 (left: 1.31)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1.83333 11 12"
                }
            },
            "Step 4": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 1.83333 + 11 = 12.83333 (left: 12 12.83333)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 1.83333 + 11 = 12.83333 (left: 12 12.83333) -> 12 + 12.83333 = 24.83333 (left: 24.83333)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 1.83333 + 11 = 12.83333 (left: 12 12.83333) -> 12 + 12.83333 = 24.83333 (left: 24.83333) -> There are no possible next steps for the input 24.83333 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "- Divide one number by another."
                }
            },
            "Step 7": {
                "Step": "11 - 6 = 5 (left:  -> Please provide a set of numbers to continue with the calculation. -> - Divide one number by another. -> 8 / 14 = 0.57 (left: 2 8 0.57)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 6 = 5 (left:  -> Please provide a set of numbers to continue with the calculation. -> - Divide one number by another. -> 8 / 14 = 0.57 (left: 2 8 0.57) -> 2 * 8 = 16 (left: 16 0.57)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "11 + 6 = 17 (left: 11 12 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 11 12"
                }
            },
            "Step 1": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 1 * 11 = 11 (left: 11 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 1 * 11 = 11 (left: 11 12) -> 11 - 12 = -1 (left: -1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 1 * 11 = 11 (left: 11 12) -> 11 - 12 = -1 (left: -1) -> -1 is not a valid input. Please enter a valid input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 11 11 12"
                }
            },
            "Step 4": {
                "Step": "11 - 6 = 5 (left: ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 6 = 5 (left:  -> Please provide a set of numbers to continue with the calculation.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 6 = 5 (left:  -> Please provide a set of numbers to continue with the calculation. -> - Divide one number by another.",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "- Divide one number by another."
                }
            },
            "Step 7": {
                "Step": "11 - 6 = 5 (left:  -> Please provide a set of numbers to continue with the calculation. -> - Divide one number by another. -> 8 / 8 = 1 (left: 2 1 14)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 6 = 5 (left:  -> Please provide a set of numbers to continue with the calculation. -> - Divide one number by another. -> 8 / 8 = 1 (left: 2 1 14) -> 1 + 14 = 15 (left: 2 15)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "11 / 6 = 1 (left: 1 11 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 11 11 12"
                }
            },
            "Step 1": {
                "Step": "11 / 6 = 1.83 (approximately) (left: 1.83 11 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 / 6 = 1.83 (approximately) (left: 1.83 11 12) -> 12 + 1.83 = 13.83 (left: 11",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 / 6 = 1.83 (approximately) (left: 1.83 11 12) -> 12 + 1.83 = 13.83 (left: 11 -> 11 / 2 = 5.5 (left: 2 8 5.5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1.83333 11 12"
                }
            },
            "Step 4": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 1.83333 + 11 = 12.83333 (left: 12 12.83333)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 1.83333 + 11 = 12.83333 (left: 12 12.83333) -> 12.83333 / 12 = 1.069444 (left: 1.069444)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 1.83333 + 11 = 12.83333 (left: 12 12.83333) -> 12.83333 / 12 = 1.069444 (left: 1.069444) -> 1.069444 x 2 = 2.138888 (left: 2.138888)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "2 8 5.5"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "- Divide one number by another."
                }
            },
            "Step 7": {
                "Step": "11 - 6 = 5 (left:  -> Please provide a set of numbers to continue with the calculation. -> - Divide one number by another. -> - Divide 8 by 2 = 4 (left: 2 4 14)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 6 = 5 (left:  -> Please provide a set of numbers to continue with the calculation. -> - Divide one number by another. -> - Divide 8 by 2 = 4 (left: 2 4 14) -> 14 + 2 = 16 (left: 4 16)",
                "Pruning": null
            }
        },
        "Input": "6 11 11 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "886": {
        "puzzle": "3 6 9 11",
        "Agent 0": {
            "Step 0": {
                "Step": "6 / 3 = 2 (left: 2 9 11)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 6 9 11"
                }
            },
            "Step 1": {
                "Step": "11 - 9 = 2 (left: 3 6 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 9 = 2 (left: 3 6  -> 6 - 3 = 3 (left: 3 6)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 9 = 2 (left: 3 6  -> 6 - 3 = 3 (left: 3 6) -> 3 + 6 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 6 9 11"
                }
            },
            "Step 4": {
                "Step": "3 + 6 = 9 (left: 9 9 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 + 6 = 9 (left: 9 9 11) -> 9 - 9 = 0 (left: 0 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 6 = 9 (left: 9 9 11) -> 9 - 9 = 0 (left: 0 11) -> Input: 3 5 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "2 3.34"
                }
            },
            "Step 7": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> Input: 3 5 -> 5 / 3 = 1.67 (left: 1.67) -> 1.67 * 2 = 3.34 (left: 2 3.34) -> 2 / 3.34 = 0.5988 (left: 0.5988)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "-8"
                }
            },
            "Step 8": {
                "Step": "9 - 3 = 6 (left: 6 9 11) -> 9 - 6 = 3 (left: 3 11) -> 3 - 11 = -8 (left: -8) -> There are no possible next steps with the input of -8.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 9 9 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 9 11"
                }
            },
            "Step 1": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> Input: 3 5",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> Input: 3 5 -> 5 / 3 = 1.67 (left: 1.67)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> Input: 3 5 -> 5 / 3 = 1.67 (left: 1.67) -> 1.67 * 2 = 3.34 (left: 2 3.34)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 6 9 11"
                }
            },
            "Step 4": {
                "Step": "9 - 3 = 6 (left: 6 9 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 3 = 6 (left: 6 9 11) -> 9 - 6 = 3 (left: 3 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 3 = 6 (left: 6 9 11) -> 9 - 6 = 3 (left: 3 11) -> 3 - 11 = -8 (left: -8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "2 3.34"
                }
            },
            "Step 7": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> Input: 3 5 -> 5 / 3 = 1.67 (left: 1.67) -> 1.67 * 2 = 3.34 (left: 2 3.34) -> 2 / 3.34 \u2248 0.60 (left: 0.60)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "2 3.34"
                }
            },
            "Step 8": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> Input: 3 5 -> 5 / 3 = 1.67 (left: 1.67) -> 1.67 * 2 = 3.34 (left: 2 3.34) -> 3.34 / 2 = 1.67 (left: 1.67)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "2 3.34"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 / 3 = 2 (left: 2 9 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 6 9 11"
                }
            },
            "Step 1": {
                "Step": "9 - 3 = 6 (left: 6 6 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 3 = 6 (left: 6 6  -> 6 / 6 = 1 (left: 1) ",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 3 = 6 (left: 6 6  -> 6 / 6 = 1 (left: 1)  -> 1 + 1 = 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 6 9 11"
                }
            },
            "Step 4": {
                "Step": "11 - 6 = 5 (left: 3 9 ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 6 = 5 (left: 3 9  -> 3 + 9 = 12 (left: 12) ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 6 = 5 (left: 3 9  -> 3 + 9 = 12 (left: 12)  -> 12 - 8 = 4 (left: 8 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "2 3.34"
                }
            },
            "Step 7": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> Input: 3 5 -> 5 / 3 = 1.67 (left: 1.67) -> 1.67 * 2 = 3.34 (left: 2 3.34) -> 2 * 3.34 = 6.68 (left: 6.68)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "2 3.34"
                }
            },
            "Step 8": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> Input: 3 5 -> 5 / 3 = 1.67 (left: 1.67) -> 1.67 * 2 = 3.34 (left: 2 3.34) -> 3.34 - 2 = 1.34 (left: 1.34)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "2 3.34"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 3 = 6 (left: 6 9 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 6 9 11"
                }
            },
            "Step 1": {
                "Step": "3 * 6 = 18 (left: 9 11 18)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 6 = 18 (left: 9 11 18) -> 11 / 9 = 1.222222",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 6 = 18 (left: 9 11 18) -> 11 / 9 = 1.222222 -> 11 / 9 = 1.222222 (left: 1.222222)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 6 9 11"
                }
            },
            "Step 4": {
                "Step": "3 + 6 = 9 (left: 9 9 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 + 6 = 9 (left: 9 9 11) -> 9 / 9 = 1 (left: 1 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 6 = 9 (left: 9 9 11) -> 9 / 9 = 1 (left: 1 11) -> 1 * 11 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "2 3.34"
                }
            },
            "Step 7": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> Input: 3 5 -> 5 / 3 = 1.67 (left: 1.67) -> 1.67 * 2 = 3.34 (left: 2 3.34) -> 2 - 3.34 = -1.34 (left: -1.34)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "2 3.34"
                }
            },
            "Step 8": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> Input: 3 5 -> 5 / 3 = 1.67 (left: 1.67) -> 1.67 * 2 = 3.34 (left: 2 3.34) -> 2 * 3.34 = 6.68 (left: 6.68)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "2 3.34"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "11 - 3 = 8 (left: 6 8 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 9 11"
                }
            },
            "Step 1": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 9 - 2 = 7 (left: 7 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 9 - 2 = 7 (left: 7 11) -> 11 / 7 = 1.57 (left: 1.57)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 9 - 2 = 7 (left: 7 11) -> 11 / 7 = 1.57 (left: 1.57) -> 1.57 / 2 = 0.785",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 6 9 11"
                }
            },
            "Step 4": {
                "Step": "6 - 3 = 3 (left: 3 9 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 - 3 = 3 (left: 3 9 11) -> 3 + 9 = 12 (left: 12 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 3 = 3 (left: 3 9 11) -> 3 + 9 = 12 (left: 12 11) -> 12 - 11 = 1 (left: 1)  ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "2 3.34"
                }
            },
            "Step 7": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> Input: 3 5 -> 5 / 3 = 1.67 (left: 1.67) -> 1.67 * 2 = 3.34 (left: 2 3.34) -> 2 / 3.34 = 0.5988 (left: 0.5988)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "2 3.34"
                }
            },
            "Step 8": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> Input: 3 5 -> 5 / 3 = 1.67 (left: 1.67) -> 1.67 * 2 = 3.34 (left: 2 3.34) -> 3.34 - 2 = 1.34 (left: 1.34)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "2 3.34"
                }
            }
        },
        "Input": "3 6 9 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "887": {
        "puzzle": "5 7 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "9 + 7 = 16 (left: 5 16 ",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 7 9 13"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 4 5 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 4 5 7) -> 5 * 7 = 35 (left: 4 35)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 4 5 7) -> 5 * 7 = 35 (left: 4 35) -> 30",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 7 9 13"
                }
            },
            "Step 4": {
                "Step": "5 + 9 = 14 (left: 7 14 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 9 = 14 (left: 7 14 13) -> 7 * 14 = 98 (left: 13 98)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 9 = 14 (left: 7 14 13) -> 7 * 14 = 98 (left: 13 98) -> 13 - 98 = -85 (left: -85)"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 + 7 = 12 (left: 9 12 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 7 9 13"
                }
            },
            "Step 1": {
                "Step": "7 - 5 = 2 (left: 2 9 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 5 = 2 (left: 2 9 13) -> 13 - 9 = 4 (left: 2 4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 5 = 2 (left: 2 9 13) -> 13 - 9 = 4 (left: 2 4) -> 2 * 4 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 7 9 13"
                }
            },
            "Step 4": {
                "Step": "5 * 7 = 35 (left: 9 35 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 7 = 35 (left: 9 35 13) -> 9 * 35 = 315 (left: 315 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 7 = 35 (left: 9 35 13) -> 9 * 35 = 315 (left: 315 13) -> 315 * 13 = 4095 (left: 4095)"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 - 7 = 2 (left: 5 2 13)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 1": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 8 / 9 = 0.8888888888888888 (left: ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 8 / 9 = 0.8888888888888888 (left:  -> It seems like you did not provide an input for the calculation. Could you please provide the numbers you would like to use for the next step?",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 8 / 9 = 0.8888888888888888 (left:  -> It seems like you did not provide an input for the calculation. Could you please provide the numbers you would like to use for the next step? -> - Add two numbers together",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 4": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> 7 + 17 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> 7 + 17 = 24 (left: 24) -> Answer: (13 - 5) + (7 + 9) = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 + 7 = 12 (left: 9 12 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 7 9 13"
                }
            },
            "Step 1": {
                "Step": "13 - 5 = 8 (left: 7 9 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 5 = 8 (left: 7 9 8) -> 9 - 7 = 2 (left: 2 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 5 = 8 (left: 7 9 8) -> 9 - 7 = 2 (left: 2 8) -> 8 / 2 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "1.125 - 9 = -7.875 (left:"
                }
            },
            "Step 4": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 9 / 8 =  -> 1. 9 / 8 = 1.125 -> 1.125 - 9 = -7.875 (left: -> 1.125 / -9 = -0.125 (left: -7.875 -0.125)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 9 / 8 =  -> 1. 9 / 8 = 1.125 -> 1.125 - 9 = -7.875 (left: -> 1.125 / -9 = -0.125 (left: -7.875 -0.125) -> -7.875 + (-0.125) = -8 (left: -8)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "7 8 9"
                }
            },
            "Step 6": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 8 / 7 = 1.1428571428571428 (left: 1 9)"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 - 5 = 8 (left: 7 8 9)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 1": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 9 / 8 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 9 / 8 =  -> 1. 9 / 8 = 1.125",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 9 / 8 =  -> 1. 9 / 8 = 1.125 -> 1.125 - 9 = -7.875 (left:",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "1.125 - 9 = -7.875 (left:"
                }
            },
            "Step 4": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 9 / 8 =  -> 1. 9 / 8 = 1.125 -> 1.125 - 9 = -7.875 (left: -> 1.125 + 9 = 10.125 (left: -7.875 10.125)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 9 / 8 =  -> 1. 9 / 8 = 1.125 -> 1.125 - 9 = -7.875 (left: -> 1.125 + 9 = 10.125 (left: -7.875 10.125) -> -7.875 / 10.125 = -0.7777777777777778 (left: -0.7777777777777778)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "7 8 9"
                }
            },
            "Step 6": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 7 * 8 = 56 (left: 9 56)"
            }
        },
        "Input": "5 7 9 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "888": {
        "puzzle": "2 4 12 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 / 4 = 3 (left: 2 3 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 12 = 72 (left: 4 72)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 12 = 72 (left: 4 72) -> 72 - 4 = 68 (left: 68 72)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 12 = 72 (left: 4 72) -> 72 - 4 = 68 (left: 68 72) -> 68 + 72 = 140",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 4": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 / 4 = 1.5 (left: 1.5 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 / 4 = 1.5 (left: 1.5 12) -> 1.5 * 12 = 18 (left: 18)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 / 4 = 1.5 (left: 1.5 12) -> 1.5 * 12 = 18 (left: 18) -> None - the input does not have any more operations that can be performed.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "4 * 12 = 48 (left: 2 48 12) -> 48 / 2 = 24 (left: 12 24) -> 12 + 24 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 * 12 = 48 (left: 2 48 12) -> 48 / 2 = 24 (left: 12 24) -> 12 + 24 = 36 (left: 36) -> 36 / 2 = 18 -> 18 * 2 = 36",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 6 12 12)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 12 12"
                }
            },
            "Step 1": {
                "Step": "4 * 12 = 48 (left: 2 48 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 12 = 48 (left: 2 48 12) -> 48 / 2 = 24 (left: 12 24)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 12 = 48 (left: 2 48 12) -> 48 / 2 = 24 (left: 12 24) -> 24 - 12 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 12 12"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 12 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 - 6 = 6 (left: 6 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 - 6 = 6 (left: 6 12) -> 12 / 6 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "4 * 12 = 48 (left: 2 48 12) -> 48 / 2 = 24 (left: 12 24) -> 12 + 24 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 * 12 = 48 (left: 2 48 12) -> 48 / 2 = 24 (left: 12 24) -> 12 + 24 = 36 (left: 36) -> 36 / 2 = 18 -> Possible next steps:",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 2 = 10 (left: 4 10 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 12 12"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 - 6 = 6 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 - 6 = 6 (left: -> 6 - 6 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 - 6 = 6 (left: -> 6 - 6 = 0 (left: 0) -> There are no possible next steps as there is no input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 12 12"
                }
            },
            "Step 4": {
                "Step": "4 * 12 = 48 (left: 2 48 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 * 12 = 48 (left: 2 48 12) -> 48 / 2 = 24 (left: 12 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 12 = 48 (left: 2 48 12) -> 48 / 2 = 24 (left: 12 24) -> 12 + 24 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "4 * 12 = 48 (left: 2 48 12) -> 48 / 2 = 24 (left: 12 24) -> 12 + 24 = 36 (left: 36) -> There are no possible next steps with the input 36.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 * 12 = 48 (left: 2 48 12) -> 48 / 2 = 24 (left: 12 24) -> 12 + 24 = 36 (left: 36) -> There are no possible next steps with the input 36. -> There are no possible next steps with the input 36.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 * 3 = 12 (left: 2 12 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 * 6 = 24 (left: 24 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 * 6 = 24 (left: 24 12) -> 24 / 2 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 * 6 = 24 (left: 24 12) -> 24 / 2 = 12 (left: 12) -> 12 + 2 = 14 (left: 8 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 12 12"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 - 6 = 6 (left: 6 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 - 6 = 6 (left: 6 12) -> 12 - 6 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 - 6 = 6 (left: 6 12) -> 12 - 6 = 6 (left: 6) -> 6 / 2 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "68 + 72 = 140"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "4 * 12 = 48 (left: 2 48 12) -> 48 / 2 = 24 (left: 12 24) -> 12 + 24 = 36 (left: 36) -> 36 + 2 = 38",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 * 12 = 48 (left: 2 48 12) -> 48 / 2 = 24 (left: 12 24) -> 12 + 24 = 36 (left: 36) -> 36 + 2 = 38 -> 36 - 2 = 34 (left: 34)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "8 14"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 / 2 = 6 (left: 4 6 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 12 12"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 / 2 = 6 (left: 6 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 / 2 = 6 (left: 6 6) -> 6 + 6 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 / 2 = 6 (left: 6 6) -> 6 + 6 = 12 (left: 12) -> 12 * 2 = 24 (left: 8 24)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 12 12"
                }
            },
            "Step 4": {
                "Step": "12 / 2 = 6 (left: 6 12 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 / 2 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 2 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "4 * 12 = 48 (left: 2 48 12) -> 48 / 2 = 24 (left: 12 24) -> 12 + 24 = 36 (left: 36) -> 36 - 2 = 34 (left: 2 34)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 * 12 = 48 (left: 2 48 12) -> 48 / 2 = 24 (left: 12 24) -> 12 + 24 = 36 (left: 36) -> 36 - 2 = 34 (left: 2 34) -> 34 - 2 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "8 24"
                }
            }
        },
        "Input": "2 4 12 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "889": {
        "puzzle": "4 9 11 12",
        "Agent 0": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 11 12 36)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 11 12"
                }
            },
            "Step 1": {
                "Step": "4 + 9 = 13 (left: 11 12 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 / 11 = 1.09 (left: 1.09 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 / 11 = 1.09 (left: 1.09 13) -> 1.09 * 13 = 14.17 (left: 14.17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 11 12"
                }
            },
            "Step 4": {
                "Step": "4 + 9 = 13 (left: 11 12 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23) -> 23 + 13 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "2 26"
                }
            },
            "Step 7": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 1 * 13 = 13 (left: 13) -> 13 * 2 = 26 (left: 2 26) -> 26 / 2 = 13 (left: 13)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "2 26"
                }
            },
            "Step 8": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 1 * 13 = 13 (left: 13) -> 13 * 2 = 26 (left: 2 26) -> 2 * 26 = 52 (left: 52)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "2 26"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "11 + 4 = 15 (left: 9 12 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2.25 11 12"
                }
            },
            "Step 1": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 12 / 2.25 = 5.",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 12 / 2.25 = 5. -> 12 - 5 = 7 (left: 5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 12 / 2.25 = 5. -> 12 - 5 = 7 (left: 5) -> 5 * 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "11 12 13"
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 4": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 / 11 = 1.09 (left: 1.09 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 / 11 = 1.09 (left: 1.09 13) -> 1.09 * 13 = 14.17 (left: 14.17)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 / 11 = 1.09 (left: 1.09 13) -> 1.09 * 13 = 14.17 (left: 14.17) -> 14 + 17 = 31",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "2 26"
                }
            },
            "Step 7": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 1 * 13 = 13 (left: 13) -> 13 * 2 = 26 (left: 2 26) -> 2 + 26 = 28 (left: 28)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "2 26"
                }
            },
            "Step 8": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 1 * 13 = 13 (left: 13) -> 13 * 2 = 26 (left: 2 26) -> 2 * 26 = 52 (left: 52)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "2 26"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 9 = 3 (left: 3 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 1 * 13 = 13 (left: 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 1 * 13 = 13 (left: 13) -> 13 * 2 = 26 (left: 2 26)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 11 12"
                }
            },
            "Step 4": {
                "Step": "11 + 4 = 15 (left: 9 12 15)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 + 4 = 15 (left: 9 12 15) -> 15 - 12 = 3 (left: 3 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 + 4 = 15 (left: 9 12 15) -> 15 - 12 = 3 (left: 3 3) -> 3 - 3 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "2 26"
                }
            },
            "Step 7": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 1 * 13 = 13 (left: 13) -> 13 * 2 = 26 (left: 2 26) -> 2 + 26 = 28 (left: 28)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "2 26"
                }
            },
            "Step 8": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 1 * 13 = 13 (left: 13) -> 13 * 2 = 26 (left: 2 26) -> 2 + 26 = 28 (left: 28)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "2 26"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 + 9 = 13 (left: 11 12 13)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 11 12"
                }
            },
            "Step 1": {
                "Step": "4 * 9 = 36 (left: 11 12 36)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 12 * 3 = 36 (left: 11 36)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 12 * 3 = 36 (left: 11 36) -> 4 + 7 = 11 (left: 11 2)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "2 26"
                }
            },
            "Step 4": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 1 * 13 = 13 (left: 13) -> 13 * 2 = 26 (left: 2 26) -> 26 - 2 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "11 12 13"
                }
            },
            "Step 5": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23) -> 13 - 23 = -10 (left: -10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "2 26"
                }
            },
            "Step 7": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 1 * 13 = 13 (left: 13) -> 13 * 2 = 26 (left: 2 26) -> 2 + 26 = 28 (left: 28)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "2 26"
                }
            },
            "Step 8": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 1 * 13 = 13 (left: 13) -> 13 * 2 = 26 (left: 2 26) -> 2 * 26 = 52 (left: 52)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "2 26"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 11 12"
                }
            },
            "Step 1": {
                "Step": "9 * 11 = 99 (left: 4 12 99)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 * 11 = 99 (left: 4 12 99) -> 99 - 4 = 95 (left: 12 95)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 * 11 = 99 (left: 4 12 99) -> 99 - 4 = 95 (left: 12 95) -> 12 * 95 = 1140 (left: 1140)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 11 12"
                }
            },
            "Step 4": {
                "Step": "11 + 4 = 15 (left: 9 12 15)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 + 4 = 15 (left: 9 12 15) -> 15 - 9 = 6 (left: 6 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 + 4 = 15 (left: 9 12 15) -> 15 - 9 = 6 (left: 6 12) -> 12 - 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "2 26"
                }
            },
            "Step 7": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 1 * 13 = 13 (left: 13) -> 13 * 2 = 26 (left: 2 26) -> 2 + 26 = 28 (left: 28)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "2 26"
                }
            },
            "Step 8": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 1 * 13 = 13 (left: 13) -> 13 * 2 = 26 (left: 2 26) -> 26 / 2 = 13 (left: 13)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "2 26"
                }
            }
        },
        "Input": "4 9 11 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "890": {
        "puzzle": "7 8 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 7 = 6 (left: 6 8 9)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 9 13"
                }
            },
            "Step 1": {
                "Step": "7 / 8 = 0.875 (left: 0.875 9 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 / 8 = 0.875 (left: 0.875 9 13) -> 13 - 9 = 4 (left: 0.875 4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 / 8 = 0.875 (left: 0.875 9 13) -> 13 - 9 = 4 (left: 0.875 4) -> 0.875 + 4 = 4.875 (left: 4.875)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 9 13"
                }
            },
            "Step 4": {
                "Step": "7 - 8 = -1 (left: -1 8 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 - 8 = -1 (left: -1 8 9) -> 9 - 8 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 8 = -1 (left: -1 8 9) -> 9 - 8 = 1 (left: 1) -> 1 is the only number provided, so there are no possible next steps to calculate.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "2 6.3077"
                }
            },
            "Step 7": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 56 / 13 = 4.3077 (left: 4.3077  -> 4.3077 + 2 = 6.3077 (left: 2 6.3077) -> 2 - 6.3077 = -4.3077 (left: -4.",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "2 6.3077"
                }
            },
            "Step 8": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 56 / 13 = 4.3077 (left: 4.3077  -> 4.3077 + 2 = 6.3077 (left: 2 6.3077) -> 2 + 6.3077 = 8.3077 (left: 8.3077)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 + 8 = 15 (left: 9 13 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 9 13"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 7 8 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 7 8 4) -> 8 - 4 = 4 (left: 4 4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 7 8 4) -> 8 - 4 = 4 (left: 4 4) -> 4 * 4 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 9 13"
                }
            },
            "Step 4": {
                "Step": "13 - 8 = 5 (left: 5 8 ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 8 = 5 (left: 5 8  -> 5 * 8 = 40 (left: 8 40)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 8 = 5 (left: 5 8  -> 5 * 8 = 40 (left: 8 40) -> 8 * 40 = 320 (left: 320)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "2 6.3077"
                }
            },
            "Step 7": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 56 / 13 = 4.3077 (left: 4.3077  -> 4.3077 + 2 = 6.3077 (left: 2 6.3077) -> 2 - 6.3077 = -4.3077 (left: -4.",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "2 6.3077"
                }
            },
            "Step 8": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 56 / 13 = 4.3077 (left: 4.3077  -> 4.3077 + 2 = 6.3077 (left: 2 6.3077) -> 2 + 6.3077 = 8.3077 (left: 8.3077)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 + 8 = 17 (left: 7 13 17)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 9 13"
                }
            },
            "Step 1": {
                "Step": "7 * 8 = 56 (left: 9 13 56)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 * 9 = 117 (left: 117 56)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 * 9 = 117 (left: 117 56) -> 117 + 56 = 173 (left: 173)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 9 13"
                }
            },
            "Step 4": {
                "Step": "7 * 8 = 56 (left: 9 13 56)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 8 = 56 (left: 9 13 56) ->  -> It seems like you didn't provide any input. Could you please provide the numbers for the next step calculation? Thank you.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "2 6.3077"
                }
            },
            "Step 7": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 56 / 13 = 4.3077 (left: 4.3077  -> 4.3077 + 2 = 6.3077 (left: 2 6.3077) -> 2 * 6.3077 = 12.6154 (left: 12.6154)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "2 6.3077"
                }
            },
            "Step 8": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 56 / 13 = 4.3077 (left: 4.3077  -> 4.3077 + 2 = 6.3077 (left: 2 6.3077) -> 2 * 6.3077 = 12.6154",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 + 8 = 15 (left: 9 13 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 9 13"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 4 8 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 4 8  -> 4 / 8 = 0.5 (left: 0.5 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 4 8  -> 4 / 8 = 0.5 (left: 0.5 8) -> 0.5 * 8 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 9 13"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 4 8 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 4 8 13) -> 13 - 4 = 9 (left: 8 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 4 8 13) -> 13 - 4 = 9 (left: 8 9) -> 8 + 9 = 17 (left: 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "2 6.3077"
                }
            },
            "Step 7": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 56 / 13 = 4.3077 (left: 4.3077  -> 4.3077 + 2 = 6.3077 (left: 2 6.3077) -> 2 * 6.3077 = 12.6154 (left: 12.6154)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "2 6.3077"
                }
            },
            "Step 8": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 56 / 13 = 4.3077 (left: 4.3077  -> 4.3077 + 2 = 6.3077 (left: 2 6.3077) -> 2 + 6.3077 = 8.3077 (left: 8.3077 6.3077)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "9 - 8 = 1 (left: 7 1 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 9 13"
                }
            },
            "Step 1": {
                "Step": "7 * 8 = 56 (left: 9 13 56)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 56 / 13 = 4.3077 (left: 4.3077 ",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 56 / 13 = 4.3077 (left: 4.3077  -> 4.3077 + 2 = 6.3077 (left: 2 6.3077)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 9 13"
                }
            },
            "Step 4": {
                "Step": "8 - 7 = 1 (left: 1 9 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 - 7 = 1 (left: 1 9 13) -> 9 - 1 = 8 (left: 8 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 7 = 1 (left: 1 9 13) -> 9 - 1 = 8 (left: 8 13) -> 8 + 13 = 21 (left: 21)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "2 6.3077"
                }
            },
            "Step 7": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 56 / 13 = 4.3077 (left: 4.3077  -> 4.3077 + 2 = 6.3077 (left: 2 6.3077) -> 2 + 6.3077 = 8.3077",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 56 / 13 = 4.3077 (left: 4.3077  -> 4.3077 + 2 = 6.3077 (left: 2 6.3077) -> 2 + 6.3077 = 8.3077 -> 2 * 6.3077 = 12.6154 (left: 8.",
                "Pruning": "NA"
            }
        },
        "Input": "7 8 9 13",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            }
        ]
    },
    "891": {
        "puzzle": "2 6 12 12",
        "Agent 0": {
            "Step 0": {
                "Step": "6 * 2 = 12 (left: 12 12 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 2 "
                }
            },
            "Step 1": {
                "Step": "12 / 6 = 2 (left: 2 2  -> 2 + 2 = 4",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 6 = 2 (left: 2 2  -> 2 + 2 = 4 -> 2 + 2 + 8 = 12 (left: 8 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 / 6 = 2 (left: 2 2  -> 2 + 2 = 4 -> 2 + 2 + 8 = 12 (left: 8 12) -> 12 / 8 = 1.5 (left: 1.5)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "12 12 "
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 2 "
                }
            },
            "Step 4": {
                "Step": "12 / 6 = 2 (left: 2 2  -> 2 / 2 = 1 (left: 1) ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 / 6 = 2 (left: 2 2  -> 2 / 2 = 1 (left: 1)  -> 1 * 1 = 1 ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 6 = 2 (left: 2 2  -> 2 / 2 = 1 (left: 1)  -> 1 * 1 = 1  -> 1 * 1 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "There are no possible next steps for the input 120 as it is already a single number."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "11 12"
                }
            },
            "Step 7": {
                "Step": "2 * 6 = 12 (left: 12 12 12) -> 12 / 12 = 1 (left: 1 12) -> 12 - 1 = 11 (left: 11 12) -> 11 / 12 = 0.9166666666666666 (left: 0.9166666666666666)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "There are no possible next steps for the input 120 as it is already a single number."
                }
            },
            "Step 8": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 12 - 2 = 10 (left: 10 12) -> 10 * 12 = 120 (left: 120) -> There are no possible next steps for the input 120 as it is already a single number. -> There are no possible next steps for the input 120 as it is already a single number.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 / 6 = 2 (left: 2 2 ",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 12 12"
                }
            },
            "Step 1": {
                "Step": "12 - 6 = 6 (left: 2 6 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 6 = 6 (left: 2 6 12) -> 12 - 6 = 6 (left: 2 6)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 6 = 6 (left: 2 6 12) -> 12 - 6 = 6 (left: 2 6) -> 2 * 6 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "12 12 "
                }
            },
            "Step 4": {
                "Step": "6 * 2 = 12 (left: 12 12  -> 12 - 12 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 * 2 = 12 (left: 12 12  -> 12 - 12 = 0 (left: 0) -> There are no possible next steps as the input is 0.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 2 = 12 (left: 12 12  -> 12 - 12 = 0 (left: 0) -> There are no possible next steps as the input is 0. -> There are no possible next steps as the input is 0.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "11 12"
                }
            },
            "Step 7": {
                "Step": "2 * 6 = 12 (left: 12 12 12) -> 12 / 12 = 1 (left: 1 12) -> 12 - 1 = 11 (left: 11 12) -> 11 * 12 = 132 (left: 132)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "12"
                }
            },
            "Step 8": {
                "Step": "12 - 6 = 6 (left: 2 6 12) -> 12 - 6 = 6 (left: 2 6) -> 2 * 6 = 12 (left: 12) -> 12 * 2 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "There are no possible next steps for the input 120 as it is already a single number."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 / 6 = 2 (left: 2 12 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 12 12"
                }
            },
            "Step 1": {
                "Step": "2 * 6 = 12 (left: 12 12 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 6 = 12 (left: 12 12 12) -> 12 / 12 = 1 (left: 1 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 6 = 12 (left: 12 12 12) -> 12 / 12 = 1 (left: 1 12) -> 12 - 1 = 11 (left: 11 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 2 "
                }
            },
            "Step 4": {
                "Step": "12 / 6 = 2 (left: 2 2  -> 2 + 2 = 4",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 / 6 = 2 (left: 2 2  -> 2 + 2 = 4 -> 2 / 2 = 1 (left: 1 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 6 = 2 (left: 2 2  -> 2 + 2 = 4 -> 2 / 2 = 1 (left: 1 2) -> 1 / 2 = 0.5 (left: 0.5)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "There are no possible next steps for the input 120 as it is already a single number."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "There are no possible next steps for the input 120 as it is already a single number."
                }
            },
            "Step 7": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 12 - 2 = 10 (left: 10 12) -> 10 * 12 = 120 (left: 120) -> There are no possible next steps for the input 120 as it is already a single number. -> There are no possible next steps for the input 120 as it is already a single number.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 12 - 2 = 10 (left: 10 12) -> 10 * 12 = 120 (left: 120) -> There are no possible next steps for the input 120 as it is already a single number. -> There are no possible next steps for the input 120 as it is already a single number. -> There are no possible next steps for the input 120 as it is already a single number.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 * 2 = 12 (left: 12 12 ",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "2 12 12"
                }
            },
            "Step 1": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 12 - 2 = 10 (left: 10 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 12 - 2 = 10 (left: 10 12) -> 10 * 12 = 120 (left: 120)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 12 - 2 = 10 (left: 10 12) -> 10 * 12 = 120 (left: 120) -> There are no possible next steps for the input 120 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 12 12"
                }
            },
            "Step 4": {
                "Step": "6 * 2 = 12 (left: 12 12 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 * 2 = 12 (left: 12 12 12) -> 12 + 12 = 24 (left: 12 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 2 = 12 (left: 12 12 12) -> 12 + 12 = 24 (left: 12 24) -> 12 / 24 = 0.5 (left: 0.5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps for the input 120 as it is already a single number."
                }
            },
            "Step 7": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 12 - 2 = 10 (left: 10 12) -> 10 * 12 = 120 (left: 120) -> There are no possible next steps for the input 120 as it is already a single number. -> None",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "There are no possible next steps as the input is 0."
                }
            },
            "Step 8": {
                "Step": "6 * 2 = 12 (left: 12 12  -> 12 - 12 = 0 (left: 0) -> There are no possible next steps as the input is 0. -> There are no possible next steps as the input is 0. -> There are no possible next steps as the input is 0.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 / 2 = 6 (left: 6 12 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 12 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 6 12 12) -> 12 - 6 = 6 (left: 6 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 6 12 12) -> 12 - 6 = 6 (left: 6 12) -> 6 + 12 = 18 (left: 18)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 6 12 12) -> 12 - 6 = 6 (left: 6 12) -> 6 + 12 = 18 (left: 18) -> There are no possible next steps as there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 12 12"
                }
            },
            "Step 4": {
                "Step": "12 / 2 = 6 (left: 6 12 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 / 2 = 6 (left: 6 12 12) -> 6 * 12 = 72 (left: 12 72)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 2 = 6 (left: 6 12 12) -> 6 * 12 = 72 (left: 12 72) -> 72 / 12 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps for the input 120 as it is already a single number."
                }
            },
            "Step 7": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 12 - 2 = 10 (left: 10 12) -> 10 * 12 = 120 (left: 120) -> There are no possible next steps for the input 120 as it is already a single number. -> Input: 120",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 12 - 2 = 10 (left: 10 12) -> 10 * 12 = 120 (left: 120) -> There are no possible next steps for the input 120 as it is already a single number. -> Input: 120 -> 120 / 3 = 40 (left: 40)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "There are no possible next steps for the input 120 as it is already a single number."
                }
            }
        },
        "Input": "2 6 12 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "892": {
        "puzzle": "3 4 5 6",
        "Agent 0": {
            "Step 0": {
                "Step": "3 * 4 = 12 (left: 5 6 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 5 6"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 3 4 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 3 4 11) -> 11 - 4 = 7 (left: 3 7)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 3 4 11) -> 11 - 4 = 7 (left: 3 7) -> 10 / 5 = 2 (left: 2 10)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 5 6"
                }
            },
            "Step 4": {
                "Step": "3 * 4 = 12 (left: 5 6 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 4 = 12 (left: 5 6 12) -> 12 - 5 = 7 (left: 7 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 4 = 12 (left: 5 6 12) -> 12 - 5 = 7 (left: 7 6) -> 7 - 6 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "3 * 4 = 12 (left: 5 6 12) -> 12 - -> 12 - 8 = 4 -> 12 / 4 = 3 (left: 3 8) -> 8 / 3 = 2.6666666666666665 (left: 2.6666666666666665)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "3 8"
                }
            },
            "Step 8": {
                "Step": "3 * 4 = 12 (left: 5 6 12) -> 12 - -> 12 - 8 = 4 -> 12 / 4 = 3 (left: 3 8) -> 8 / 3 = 2.67 (left: 2.67)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "3 8"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 5 = 20 (left: 3 6 20)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 6 20"
                }
            },
            "Step 1": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 3 * 6 = 18 (left: 18 20)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 3 * 6 = 18 (left: 18 20) -> 18 + 20 = 38 (left: 38)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 3 * 6 = 18 (left: 18 20) -> 18 + 20 = 38 (left: 38) -> 38 - 3 = 35 (left: 35)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "5 6 12"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "5 6 12"
                }
            },
            "Step 4": {
                "Step": "3 * 4 = 12 (left: 5 6 12) -> 12 -",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 4 = 12 (left: 5 6 12) -> 12 - -> 12 - 8 = 4",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 4 = 12 (left: 5 6 12) -> 12 - -> 12 - 8 = 4 -> 12 / 4 = 3 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "3 * 4 = 12 (left: 5 6 12) -> 12 - -> 12 - 8 = 4 -> 12 / 4 = 3 (left: 3 8) -> 8 / 3 = 2.67 (left: 2.67)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "3 8"
                }
            },
            "Step 8": {
                "Step": "3 * 4 = 12 (left: 5 6 12) -> 12 - -> 12 - 8 = 4 -> 12 / 4 = 3 (left: 3 8) -> 8 / 3 = 2.66667 (left: 2.66667)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "3 8"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 * 5 = 20 (left: 3 6 20)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 4 11"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 3 4 11) -> 4 * 3 = 12 (left: 12 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 3 4 11) -> 4 * 3 = 12 (left: 12 11) -> 12 * 11 = 132 (left: 132)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 3 4 11) -> 4 * 3 = 12 (left: 12 11) -> 12 * 11 = 132 (left: 132) -> 13 - ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "5 6 12"
                }
            },
            "Step 4": {
                "Step": "3 * 4 = 12 (left: 5 6 12) -> 5 * 6 = 30 (left: 30 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 4 = 12 (left: 5 6 12) -> 5 * 6 = 30 (left: 30 12) -> 30 + 12 = 42 (left: 42)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 4 = 12 (left: 5 6 12) -> 5 * 6 = 30 (left: 30 12) -> 30 + 12 = 42 (left: 42) -> No possible next steps for the number 42.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "3 * 4 = 12 (left: 5 6 12) -> 12 - -> 12 - 8 = 4 -> 12 / 4 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "3 8"
                }
            },
            "Step 8": {
                "Step": "3 * 4 = 12 (left: 5 6 12) -> 12 - -> 12 - 8 = 4 -> 12 / 4 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "3 8"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 3 4 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 5 6"
                }
            },
            "Step 1": {
                "Step": "3 * 4 = 12 (left: 5 6 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 4 = 12 (left: 5 6 12) -> 6 * 5 = 30 (left: 30 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 4 = 12 (left: 5 6 12) -> 6 * 5 = 30 (left: 30 12) -> 30 / 12 = 2.5 (left: 2.5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 5 6"
                }
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 5 6 7)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 + 4 = 7 (left: 5 6 7) -> 6 * 7 = 42 (left: 5 42)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 4 = 7 (left: 5 6 7) -> 6 * 7 = 42 (left: 5 42) -> 42 - 5 = 37 (left: 37)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "3 * 4 = 12 (left: 5 6 12) -> 12 - -> 12 - 8 = 4 -> 12 / 4 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "3 8"
                }
            },
            "Step 8": {
                "Step": "3 * 4 = 12 (left: 5 6 12) -> 12 - -> 12 - 8 = 4 -> 12 / 4 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "3 8"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 * 5 = 20 (left: 3 6 20)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 4 11"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 3 4 11) -> 11 / 3 = 3.67 (left: 4 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 3 4 11) -> 11 / 3 = 3.67 (left: 4 11) -> 11 - 4 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 3 4 11) -> 11 / 3 = 3.67 (left: 4 11) -> 11 - 4 = 7 (left: 7) -> 7 + 8 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "5 6 12"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 5 6"
                }
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 3 4 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 3 4 11) -> 11 / 4 = 2.75 (left: 3 2.75)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 3 4 11) -> 11 / 4 = 2.75 (left: 3 2.75) -> 3 + 2.75 = 5.75 (left: 2.75 5.75)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "3 * 4 = 12 (left: 5 6 12) -> 12 - -> 12 - 8 = 4 -> 12 / 4 = 3 (left: 3 8) -> 3 / 8 = 0.375 (left: 0.375)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "3 8"
                }
            },
            "Step 8": {
                "Step": "3 * 4 = 12 (left: 5 6 12) -> 12 - -> 12 - 8 = 4 -> 12 / 4 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "3 8"
                }
            }
        },
        "Input": "3 4 5 6",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "893": {
        "puzzle": "6 10 12 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 6 10 ",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "12 16 12"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 16 - 12 = 4 (left: 12 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 16 - 12 = 4 (left: 12 4) -> 12 - 4 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 16 - 12 = 4 (left: 12 4) -> 12 - 4 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 10 12 12"
                }
            },
            "Step 4": {
                "Step": "6 + 10 = 16 (left: 12 12 16)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 10 = 16 (left: 12 12 16) -> 12 / 12 = 1 (left: 1 16)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 10 = 16 (left: 12 12 16) -> 12 / 12 = 1 (left: 1 16) -> 1 + 16 = 17 (left: 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "None, as there is only one number given."
                }
            },
            "Step 7": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 28 12) -> 28 + 12 = 40 (left: 40) -> None, as there is only one number given. -> There are no possible next steps as there is only one number given.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 28 12) -> 28 + 12 = 40 (left: 40) -> None, as there is only one number given. -> There are no possible next steps as there is only one number given. -> None",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "15 + 9 = 24.96"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 / 2 = 6 (left: 6 10 ",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "12 16 12"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 28 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 28 12) -> 28 / 12 = 2.33 (left: 2.33)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 28 12) -> 28 / 12 = 2.33 (left: 2.33) -> There are no possible next steps for the input 2.33 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 10 12 12"
                }
            },
            "Step 4": {
                "Step": "12 - 6 = 6 (left: ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 6 = 6 (left:  -> There are no more possible next steps with the given input.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 6 = 6 (left:  -> There are no more possible next steps with the given input. -> There are no more possible next steps with the given input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "15 + 9 = 24.96"
                }
            },
            "Step 7": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 16 / 12 = 1.33 (left: 1.33 12) -> 1.33 * 12 = 15.96 (left: 15.96) -> 15 + 9 = 24.96 -> 9 * 15 = 135 (left: 135 24.96)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 16 / 12 = 1.33 (left: 1.33 12) -> 1.33 * 12 = 15.96 (left: 15.96) -> 15 + 9 = 24.96 -> 9 * 15 = 135 (left: 135 24.96) -> 135 * 24.96 = 3366.6 (left: 24.96 3366.6)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "12 16 12"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 12 28)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 12 28) -> 12 * 28 = 336 (left: 336)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 12 28) -> 12 * 28 = 336 (left: 336) -> 3 * 3 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "1.66666666667 12 12"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 10 12 12"
                }
            },
            "Step 4": {
                "Step": "6 + 10 = 16 (left: 12 12 16)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 10 = 16 (left: 12 12 16) -> 16 - 12 = ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 10 = 16 (left: 12 12 16) -> 16 - 12 =  -> 16 - 12 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "15 + 9 = 24.96"
                }
            },
            "Step 7": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 16 / 12 = 1.33 (left: 1.33 12) -> 1.33 * 12 = 15.96 (left: 15.96) -> 15 + 9 = 24.96 -> 15 / 9 = 1.67 (left: 1.67 24.96)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 16 / 12 = 1.33 (left: 1.33 12) -> 1.33 * 12 = 15.96 (left: 15.96) -> 15 + 9 = 24.96 -> 15 / 9 = 1.67 (left: 1.67 24.96) -> 1.67 * 24.96 = 41.6928 (left: 41.6928)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "None, as there is only one number given."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 + 10 = 16 (left: 12 16 12)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "12 16 12"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 28 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 28 12) -> 28 + 12 = 40 (left: 40)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 28 12) -> 28 + 12 = 40 (left: 40) -> None, as there is only one number given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1.66666666667 12 12"
                }
            },
            "Step 4": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 12 / 1.66666666667 = 7.2 (left: 7.2 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 12 / 1.66666666667 = 7.2 (left: 7.2 12) -> 12 / 7.2 = 1.6666666666666667 (left: 1.6666666666666667)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 12 / 1.66666666667 = 7.2 (left: 7.2 12) -> 12 / 7.2 = 1.6666666666666667 (left: 1.6666666666666667) -> There are no possible next steps with the input 1.6666666666666667.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "16"
                }
            },
            "Step 7": {
                "Step": "6 + 10 = 16 (left: 12 12 16) -> 12 - 12 = 0 (left: 0 16) -> 0 + 16 = 16 (left: 16) -> 16 + 16 = 32",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 10 = 16 (left: 12 12 16) -> 12 - 12 = 0 (left: 0 16) -> 0 + 16 = 16 (left: 16) -> 16 + 16 = 32 -> 16 - 16 = 0 (left: 0 32)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 10 = 16 (left: 12 16 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 10 12 12"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 12 12 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 10 = 16 (left: 12 12 16) -> 12 - 12 = 0 (left: 0 16)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 10 = 16 (left: 12 12 16) -> 12 - 12 = 0 (left: 0 16) -> 0 + 16 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "12 16 12"
                }
            },
            "Step 4": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 16 / 12 = 1.33 (left: 1.33 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 16 / 12 = 1.33 (left: 1.33 12) -> 1.33 * 12 = 15.96 (left: 15.96)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 16 / 12 = 1.33 (left: 1.33 12) -> 1.33 * 12 = 15.96 (left: 15.96) -> 15 + 9 = 24.96",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "17"
                }
            },
            "Step 7": {
                "Step": "6 + 10 = 16 (left: 12 12 16) -> 12 / 12 = 1 (left: 1 16) -> 1 + 16 = 17 (left: 17) -> 17 / 2 = 8.5 (left: 8.5)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "17"
                }
            },
            "Step 8": {
                "Step": "6 + 10 = 16 (left: 12 12 16) -> 12 / 12 = 1 (left: 1 16) -> 1 + 16 = 17 (left: 17) -> There are no possible next steps with the input 17.",
                "Pruning": null
            }
        },
        "Input": "6 10 12 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "894": {
        "puzzle": "5 5 5 9",
        "Agent 0": {
            "Step 0": {
                "Step": "5 / 5 = 1 (left: 1 5 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 5 9"
                }
            },
            "Step 1": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> 9 - 5 = 4 (left: 1 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> 9 - 5 = 4 (left: 1 4) -> 4 / 1 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> 9 - 5 = 4 (left: 1 4) -> 4 / 1 = 4 (left: 4) -> There are no possible next steps with only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 5 9"
                }
            },
            "Step 4": {
                "Step": "5 + 5 = 10 (left: 5 9 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 5 = 10 (left: 5 9 10) -> 10 - 5 = 5 (left: 5 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 5 = 10 (left: 5 9 10) -> 10 - 5 = 5 (left: 5 10) -> 10 / 5 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> 9 - 5 = 4 (left: 4 9) -> 4 * 9 = 36 (left: 36) -> No possible next steps with the given input.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> 9 - 5 = 4 (left: 4 9) -> 4 * 9 = 36 (left: 36) -> No possible next steps with the given input. -> No possible next steps with the given input.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 - 5 = 4 (left: 5 5 4)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 5 9"
                }
            },
            "Step 1": {
                "Step": "5 + 5 = 10 (left: 10 5 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 10 + 5 = 15 (left: 15 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 10 + 5 = 15 (left: 15 9) -> 15 * 9 = 135 (left: 135)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 5 9"
                }
            },
            "Step 4": {
                "Step": "9 - 5 = 4 (left: 5 5 4)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 5 = 4 (left: 5 5 4) -> 5 + 5 = 10 (left: 4 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 5 = 4 (left: 5 5 4) -> 5 + 5 = 10 (left: 4 10) -> 10 - 4 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> 9 - 5 = 4 (left: 4 9) -> 4 * 9 = 36 (left: 36) -> 36 / 6 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "36"
                }
            },
            "Step 8": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> 9 - 5 = 4 (left: 4 9) -> 4 * 9 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 + 5 = 10 (left: 5 10 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 5 9"
                }
            },
            "Step 1": {
                "Step": "5 * 5 = 25 (left: 25 5 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 5 = 25 (left: 25 5 9) -> 25 / 9 = 2.7777777777777777 (left: 2.777777777777777",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 5 = 25 (left: 25 5 9) -> 25 / 9 = 2.7777777777777777 (left: 2.777777777777777 -> 2.777777777777777 + 2 = 4.777777777777777 (left: 2 4.777777777777777)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 5 9"
                }
            },
            "Step 4": {
                "Step": "9 - 5 = 4 (left: 5 5 4)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 5 = 4 (left: 5 5 4) -> 5 - 5 = 0 (left: 0 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 5 = 4 (left: 5 5 4) -> 5 - 5 = 0 (left: 0 4) -> 4 / 0 = undefined",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> 9 - 5 = 4 (left: 4 9) -> 4 * 9 = 36 (left: 36) -> 36 / 2 = 18 (left: 2)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "36"
                }
            },
            "Step 8": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> 9 - 5 = 4 (left: 4 9) -> 4 * 9 = 36 (left: 36) -> None",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "There are no possible next steps with the input: 3."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 / 5 = 1 (left: 1 5 9)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 5 9"
                }
            },
            "Step 1": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> 9 - 5 = 4 (left: 1 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> 9 - 5 = 4 (left: 1 4) -> 4 - 1 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> 9 - 5 = 4 (left: 1 4) -> 4 - 1 = 3 (left: 3) -> There are no possible next steps with the input: 3.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 5 9"
                }
            },
            "Step 4": {
                "Step": "5 / 5 = 1 (left: 1 5 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> 9 - 5 = 4 (left: 4 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> 9 - 5 = 4 (left: 4 9) -> 4 * 9 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> 9 - 5 = 4 (left: 4 9) -> 4 * 9 = 36 (left: 36) -> There are no possible next steps with the input 36.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> 9 - 5 = 4 (left: 4 9) -> 4 * 9 = 36 (left: 36) -> There are no possible next steps with the input 36. -> There are no possible next steps with the input 36.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 + 5 = 10 (left: 5 10 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 5 9"
                }
            },
            "Step 1": {
                "Step": "5 + 5 = 10 (left: 10 5 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 5 + 9 = 14 (left: 10 14)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 5 + 9 = 14 (left: 10 14) -> 10 * 14 = 140 (left: 140)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 5 9"
                }
            },
            "Step 4": {
                "Step": "9 - 5 = 4 (left: 5 4 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 5 = 4 (left: 5 4 9) -> 5 * 4 = 20 (left: 20 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 5 = 4 (left: 5 4 9) -> 5 * 4 = 20 (left: 20 9) -> 20 - 9 = 11 (left: 11 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> 9 - 5 = 4 (left: 4 9) -> 4 * 9 = 36 (left: 36) -> There is only one possible next step: 36 / 2 = 18",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> 9 - 5 = 4 (left: 4 9) -> 4 * 9 = 36 (left: 36) -> There is only one possible next step: 36 / 2 = 18 -> 18 - 8 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "There are no possible next steps with the input: 3."
                }
            }
        },
        "Input": "5 5 5 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "895": {
        "puzzle": "5 5 6 11",
        "Agent 0": {
            "Step 0": {
                "Step": "5 + 5 = 10 (left: 6 10 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 6 11"
                }
            },
            "Step 1": {
                "Step": "11 - 6 = 5 (left: 5 6 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 6 = 5 (left: 5 6  -> 6 - 5 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 6 = 5 (left: 5 6  -> 6 - 5 = 1 (left: 1) -> There are no possible next steps with only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 8 4"
                }
            },
            "Step 4": {
                "Step": "6 - 5 = 1 (left: 1 5  -> 5 - 1 = 4 (left: 4) -> 4 + 4 = 8 -> 4 / 4 = 1 (left: 1 8 4) -> 4 + 8 = 12 (left: 1 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 - 5 = 1 (left: 1 5  -> 5 - 1 = 4 (left: 4) -> 4 + 4 = 8 -> 4 / 4 = 1 (left: 1 8 4) -> 4 + 8 = 12 (left: 1 12) -> 12 - 1 = 11 (left: 1)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "1 5 "
                }
            },
            "Step 6": {
                "Step": "6 - 5 = 1 (left: 1 5  -> 1 + 5 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "5 10"
                }
            },
            "Step 7": {
                "Step": "5 / 5 = 1 (left: 1 6 11) -> 11 - 6 = 5 (left: 1 5 11) -> 11 - 1 = 10 (left: 5 10) -> 5 * 10 = 50 (left: 50)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "1 8 4"
                }
            },
            "Step 8": {
                "Step": "6 - 5 = 1 (left: 1 5  -> 5 - 1 = 4 (left: 4) -> 4 + 4 = 8 -> 4 / 4 = 1 (left: 1 8 4) -> 8 / 1 = 8 (left: 8 4)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 * 5 = 25 (left: 6 11 25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 6 11"
                }
            },
            "Step 1": {
                "Step": "5 * 6 = 30 (left: 30 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 6 = 30 (left: 30 11) -> 30 * 11 = 330 (left: 330)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 6 = 30 (left: 30 11) -> 30 * 11 = 330 (left: 330) -> 3 * 30 = 90 (left: 90)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 6 11"
                }
            },
            "Step 4": {
                "Step": "5 * 5 = 25 (left: 6 11 25)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 5 = 25 (left: 6 11 25) -> 11 / 6 = 1.83 (left: 1.83 11 25)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 5 = 25 (left: 6 11 25) -> 11 / 6 = 1.83 (left: 1.83 11 25) -> 25 / 1.83 = 13.66 (left: 11 13.66",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "8 5"
                }
            },
            "Step 7": {
                "Step": "6 - 5 = 1 (left: 1 5  -> 5 - 1 = 4 (left: 4) -> 4 + 4 = 8 -> 4 / 4 = 1 (left: 1 8 4) -> 4 + 1 = 5 (left: 8 5) -> 8 + 5 = 13 (left: 13)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "1 8 4"
                }
            },
            "Step 8": {
                "Step": "6 - 5 = 1 (left: 1 5  -> 5 - 1 = 4 (left: 4) -> 4 + 4 = 8 -> 4 / 4 = 1 (left: 1 8 4) -> 8 / 4 = 2 (left: 2 4)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 5 = 11 (left: 5 11 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 6 11"
                }
            },
            "Step 1": {
                "Step": "5 + 5 = 10 (left: 6 10 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 5 = 10 (left: 6 10 11) -> 10 / 6 = 1.67 (left: 1.67 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 5 = 10 (left: 6 10 11) -> 10 / 6 = 1.67 (left: 1.67 11) -> 1.67 + 11 = 12.67 (left: 12.67)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 6 11"
                }
            },
            "Step 4": {
                "Step": "5 / 5 = 1 (left: 1 6 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 / 5 = 1 (left: 1 6 11) -> 11 - 6 = 5 (left: 1 5 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 / 5 = 1 (left: 1 6 11) -> 11 - 6 = 5 (left: 1 5 11) -> 11 - 1 = 10 (left: 5 10)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "5 10"
                }
            },
            "Step 7": {
                "Step": "5 / 5 = 1 (left: 1 6 11) -> 11 - 6 = 5 (left: 1 5 11) -> 11 - 1 = 10 (left: 5 10) -> 9 / 3 = 3 (left: 3",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "8 5"
                }
            },
            "Step 8": {
                "Step": "6 - 5 = 1 (left: 1 5  -> 5 - 1 = 4 (left: 4) -> 4 + 4 = 8 -> 4 / 4 = 1 (left: 1 8 4) -> 4 + 1 = 5 (left: 8 5) -> 8 - 5 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "8 5"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 - 5 = 1 (left: 1 5 ",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 5 "
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 5  -> 5 - 1 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 5  -> 5 - 1 = 4 (left: 4) -> 4 + 4 = 8",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 5 = 1 (left: 1 5  -> 5 - 1 = 4 (left: 4) -> 4 + 4 = 8 -> 4 / 4 = 1 (left: 1 8 4)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 8 4"
                }
            },
            "Step 4": {
                "Step": "6 - 5 = 1 (left: 1 5  -> 5 - 1 = 4 (left: 4) -> 4 + 4 = 8 -> 4 / 4 = 1 (left: 1 8 4) -> 1 * 8 = 8 (left: 8 4)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 - 5 = 1 (left: 1 5  -> 5 - 1 = 4 (left: 4) -> 4 + 4 = 8 -> 4 / 4 = 1 (left: 1 8 4) -> 1 * 8 = 8 (left: 8 4) -> 8 * 4 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "1 8 4"
                }
            },
            "Step 6": {
                "Step": "6 - 5 = 1 (left: 1 5  -> 5 - 1 = 4 (left: 4) -> 4 + 4 = 8 -> 4 / 4 = 1 (left: 1 8 4) -> 4 + 1 = 5 (left: 8 5)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "5 10"
                }
            },
            "Step 7": {
                "Step": "5 / 5 = 1 (left: 1 6 11) -> 11 - 6 = 5 (left: 1 5 11) -> 11 - 1 = 10 (left: 5 10) -> 5 + 10 = 15 (left: 10 15)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 / 5 = 1 (left: 1 6 11) -> 11 - 6 = 5 (left: 1 5 11) -> 11 - 1 = 10 (left: 5 10) -> 5 + 10 = 15 (left: 10 15) -> 15 / 10 = 1.5 (left: 1.5)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "8 5"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 + 5 = 10 (left: 6 10 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 5 "
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 5  -> 1 * 5 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 5  -> 1 * 5 = 5 (left: 5) -> 5 * 5 = 25 (left: 25)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 5 = 1 (left: 1 5  -> 1 * 5 = 5 (left: 5) -> 5 * 5 = 25 (left: 25) -> 25 + 25 = 50",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 6 11"
                }
            },
            "Step 4": {
                "Step": "5 * 5 = 25 (left: 6 11 25)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 5 = 25 (left: 6 11 25) -> 6 + 11 = 17 (left: 17 25)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 5 = 25 (left: 6 11 25) -> 6 + 11 = 17 (left: 17 25) -> 17 + 25 = 42 (left: 42)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "5 10"
                }
            },
            "Step 7": {
                "Step": "5 / 5 = 1 (left: 1 6 11) -> 11 - 6 = 5 (left: 1 5 11) -> 11 - 1 = 10 (left: 5 10) -> 10 / 5 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "8 5"
                }
            },
            "Step 8": {
                "Step": "6 - 5 = 1 (left: 1 5  -> 5 - 1 = 4 (left: 4) -> 4 + 4 = 8 -> 4 / 4 = 1 (left: 1 8 4) -> 4 + 1 = 5 (left: 8 5) -> 8 * 5 = 40 (left: 40)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "8 5"
                }
            }
        },
        "Input": "5 5 6 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "896": {
        "puzzle": "6 8 9 9",
        "Agent 0": {
            "Step 0": {
                "Step": "6 + 8 = 14 (left: 9 9 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 9"
                }
            },
            "Step 1": {
                "Step": "6 * 8 = 48 (left: 9 9 48)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 8 = 48 (left: 9 9 48) -> 9 * 9 = 81 (left: 48 81)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 9 9 48) -> 9 * 9 = 81 (left: 48 81) -> 48 - 81 = -33 (left: -33)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 9"
                }
            },
            "Step 4": {
                "Step": "9 + 6 = 15 (left: 8 9 15)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 9 - 8 = 1 (left: 1 15)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 9 - 8 = 1 (left: 1 15) -> 1 * 15 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "-33"
                }
            },
            "Step 7": {
                "Step": "6 * 8 = 48 (left: 9 9 48) -> 9 * 9 = 81 (left: 48 81) -> 48 - 81 = -33 (left: -33) -> There are no possible next steps with the input of -33.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 * 8 = 48 (left: 9 9 48) -> 9 * 9 = 81 (left: 48 81) -> 48 - 81 = -33 (left: -33) -> There are no possible next steps with the input of -33. -> There are no possible next steps with the input of -33.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 / 6 = 1.33 (left: 1.",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 9"
                }
            },
            "Step 1": {
                "Step": "6 + 8 = 14 (left: 9 9 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 8 = 14 (left: 9 9 14) -> 9 * 9 = 81 (left: 14 81)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 8 = 14 (left: 9 9 14) -> 9 * 9 = 81 (left: 14 81) -> 81 - 14 = 67 (left: 67)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 9"
                }
            },
            "Step 4": {
                "Step": "6 * 9 = 54 (left: 8 9 ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 * 9 = 54 (left: 8 9  -> 9 / 8 = 1.125 (left: 1.125)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 9 = 54 (left: 8 9  -> 9 / 8 = 1.125 (left: 1.125) -> 1.125 / 1 = 1.125",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "72 12"
                }
            },
            "Step 7": {
                "Step": "9 - 6 = 3 (left: 3 8 9) -> 9 + 3 = 12 (left: 8 9 12) -> 8 * 9 = 72 (left: 72 12) -> 72 * 12 = 864 (left: 864)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "-4"
                }
            },
            "Step 8": {
                "Step": "9 - 6 = 3 (left: 3 9 9) -> 4 + 10 = 14 (left: 10 14) -> 10 - 14 = -4 (left: -4) -> There are no possible next steps with the input of -4.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 + 6 = 15 (left: 8 9 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 9"
                }
            },
            "Step 1": {
                "Step": "9 + 6 = 15 (left: 8 9 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 15 - 8 = 7 (left: 8 7)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 15 - 8 = 7 (left: 8 7) -> 8 * 7 = 56 (left: 56)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 9"
                }
            },
            "Step 4": {
                "Step": "6 + 8 = 14 (left: 9 9 14)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 8 = 14 (left: 9 9 14) -> 9 / 9 = 1 (left: 1 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 8 = 14 (left: 9 9 14) -> 9 / 9 = 1 (left: 1 14) -> 1 + 14 = 15 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "67"
                }
            },
            "Step 7": {
                "Step": "6 + 8 = 14 (left: 9 9 14) -> 9 * 9 = 81 (left: 14 81) -> 81 - 14 = 67 (left: 67) -> There are no possible next steps with just the input of 67.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 8 = 14 (left: 9 9 14) -> 9 * 9 = 81 (left: 14 81) -> 81 - 14 = 67 (left: 67) -> There are no possible next steps with just the input of 67. -> There are no possible next steps with just the input of 67.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 8 = 1 (left: 6 1 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 9"
                }
            },
            "Step 1": {
                "Step": "9 + 6 = 15 (left: 8 9 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 9 - 8 = 1 (left: 1 15)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 9 - 8 = 1 (left: 1 15) -> 1 * 15 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 9"
                }
            },
            "Step 4": {
                "Step": "9 - 6 = 3 (left: 3 9 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 6 = 3 (left: 3 9 9) -> 4 + 10 = 14 (left: 10 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 6 = 3 (left: 3 9 9) -> 4 + 10 = 14 (left: 10 14) -> 10 - 14 = -4 (left: -4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "-4"
                }
            },
            "Step 7": {
                "Step": "9 - 6 = 3 (left: 3 9 9) -> 4 + 10 = 14 (left: 10 14) -> 10 - 14 = -4 (left: -4) -> There are no possible next steps as there is only one number input.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 6 = 3 (left: 3 9 9) -> 4 + 10 = 14 (left: 10 14) -> 10 - 14 = -4 (left: -4) -> There are no possible next steps as there is only one number input. -> There are no possible next steps as there is only one number input.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "9 - 8 = 1 (left: 6 1 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 9"
                }
            },
            "Step 1": {
                "Step": "9 - 6 = 3 (left: 3 8 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 6 = 3 (left: 3 8 9) -> 9 + 3 = 12 (left: 8 9 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 6 = 3 (left: 3 8 9) -> 9 + 3 = 12 (left: 8 9 12) -> 8 * 9 = 72 (left: 72 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 9"
                }
            },
            "Step 4": {
                "Step": "9 + 6 = 15 (left: 8 9 15)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 15 - 8 = 7 (left: 8 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 15 - 8 = 7 (left: 8 7) -> 8 / 7 = 1.14 (left: 1.14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "1.14"
                }
            },
            "Step 7": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 15 - 8 = 7 (left: 8 7) -> 8 / 7 = 1.14 (left: 1.14) -> 1 + 1 = 2 (left: 2 14)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 15 - 8 = 7 (left: 8 7) -> 8 / 7 = 1.14 (left: 1.14) -> 1 + 1 = 2 (left: 2 14) -> 2 * 14 = 28 (left: 28)",
                "Pruning": "NA"
            }
        },
        "Input": "6 8 9 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            }
        ]
    },
    "897": {
        "puzzle": "3 3 6 13",
        "Agent 0": {
            "Step 0": {
                "Step": "6 * 3 = 18 (left: 18 6 ",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 6 13"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 6 6 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 6 6 13) -> 6 / 6 = 1 (left: 1 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 6 6 13) -> 6 / 6 = 1 (left: 1 13) -> 13 - 1 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "9 6 13"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 + 6 = 15 (left: 15 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 + 6 = 15 (left: 15 13) -> 9 + 3 = 12 (left: 12 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 + 6 = 15 (left: 15 13) -> 9 + 3 = 12 (left: 12 5) -> 12 + 5 = 17 (left: 17)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "2 3.25"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "2 3.25"
                }
            },
            "Step 7": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 * 6 = 108 (left: 108) -> 10 / 8 = 1.25 (left: 1.25) -> 1.25 + 2 = 3.25 (left: 2 3.25) -> 2 * 3.25 = 6.5 (left: 6.5)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "2 3.25"
                }
            },
            "Step 8": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 * 6 = 108 (left: 108) -> 10 / 8 = 1.25 (left: 1.25) -> 1.25 + 2 = 3.25 (left: 2 3.25) -> 2 + 3.25 = 5.25 (left: 5.25)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "2 3.25"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 3 7 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "2 6 "
                }
            },
            "Step 1": {
                "Step": "6 / 3 = 2 (left: 2 6  -> 2 + 6 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 3 = 2 (left: 2 6  -> 2 + 6 = 8 (left: 8) -> 8 / 8 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 / 3 = 2 (left: 2 6  -> 2 + 6 = 8 (left: 8) -> 8 / 8 = 1 (left: 1) -> There is only one number given, so there are no possible next steps to perform any operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "9 6 13"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 - 6 = 3 (left: 3 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 - 6 = 3 (left: 3 13) -> 3 + 13 = 16 (left: 16)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 - 6 = 3 (left: 3 13) -> 3 + 13 = 16 (left: 16) -> 16 / 2 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "2 3.25"
                }
            },
            "Step 7": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 * 6 = 108 (left: 108) -> 10 / 8 = 1.25 (left: 1.25) -> 1.25 + 2 = 3.25 (left: 2 3.25) -> 2 / 3.25 = 0.61538461538 (left: 0.61538461538)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "2 3.25"
                }
            },
            "Step 8": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 * 6 = 108 (left: 108) -> 10 / 8 = 1.25 (left: 1.25) -> 1.25 + 2 = 3.25 (left: 2 3.25) -> 2 * 3.25 = 6.5 (left: 6.5)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "2 3.25"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 6 6 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "9 6 13"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 6 * 13 = 78 (left: 9 78)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 6 * 13 = 78 (left: 9 78) -> 78 / 9 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 6 * 13 = 78 (left: 9 78) -> 78 / 9 = 8 (left: 8) -> 8 * 8 = 64 (left: 64)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "9 6 13"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "18 6 "
                }
            },
            "Step 4": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 / 6 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 / 6 = 3 (left: 3) -> There are no possible next steps with just one number.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 / 6 = 3 (left: 3) -> There are no possible next steps with just one number. -> There are no possible next steps with just one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "2 3.25"
                }
            },
            "Step 7": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 * 6 = 108 (left: 108) -> 10 / 8 = 1.25 (left: 1.25) -> 1.25 + 2 = 3.25 (left: 2 3.25) -> 2 + 3.25 = 5.25",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 * 6 = 108 (left: 108) -> 10 / 8 = 1.25 (left: 1.25) -> 1.25 + 2 = 3.25 (left: 2 3.25) -> 2 + 3.25 = 5.25 -> 3.25 + 5.25 = 8.5 (left: 2 + 8.5 = 10.75)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 / 3 = 2 (left: 2 6 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "18 6 "
                }
            },
            "Step 1": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 * 6 = 108 (left: 108)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 * 6 = 108 (left: 108) -> 10 / 8 = 1.25 (left: 1.25)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 * 6 = 108 (left: 108) -> 10 / 8 = 1.25 (left: 1.25) -> 1.25 + 2 = 3.25 (left: 2 3.25)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "9 6 13"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 + 6 = 15 (left: 15 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 + 6 = 15 (left: 15 13) -> 10 / 5 = 2 (left:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 + 6 = 15 (left: 15 13) -> 10 / 5 = 2 (left: -> 10 - 5 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "2 3.25"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "2 3.25"
                }
            },
            "Step 7": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 * 6 = 108 (left: 108) -> 10 / 8 = 1.25 (left: 1.25) -> 1.25 + 2 = 3.25 (left: 2 3.25) -> 2 + 3.25 = 5.25",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 * 6 = 108 (left: 108) -> 10 / 8 = 1.25 (left: 1.25) -> 1.25 + 2 = 3.25 (left: 2 3.25) -> 2 + 3.25 = 5.25 -> 2 / 3.25 = 0.615384",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 6 13)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "9 6 13"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 + 6 = 15 (left: 15 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 + 6 = 15 (left: 15 13) -> 15 / 13 = 1.15 (left: 1.15)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 + 6 = 15 (left: 15 13) -> 15 / 13 = 1.15 (left: 1.15) -> 1.15 - 2 = -0.85 (left: -2)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "18 6 "
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "18 6 "
                }
            },
            "Step 4": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (3 * 6) + (13 - 3) = 24",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (3 * 6) + (13 - 3) = 24 -> Input: 2 3 4 5\nSteps:\n2 * 4 = 8 (left: 3 5 8)\n3 + 5 = 8 (left: 8 8)\n8 * 8 = 64 (left: 64)\nAnswer: (2 * 4) * (3 + 5) = 64",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "2 3.25"
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "2 3.25"
                }
            },
            "Step 7": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 * 6 = 108 (left: 108) -> 10 / 8 = 1.25 (left: 1.25) -> 1.25 + 2 = 3.25 (left: 2 3.25) -> 2 - 3.25 = -1.25 (left: -1.25)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "2 3.25"
                }
            },
            "Step 8": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 * 6 = 108 (left: 108) -> 10 / 8 = 1.25 (left: 1.25) -> 1.25 + 2 = 3.25 (left: 2 3.25) -> 3.25 - 2 = 1.25 (left: 1.25)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "2 3.25"
                }
            }
        },
        "Input": "3 3 6 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "898": {
        "puzzle": "6 8 9 11",
        "Agent 0": {
            "Step 0": {
                "Step": "6 * 8 = 48 (left: 9 11 48)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 11"
                }
            },
            "Step 1": {
                "Step": "9 + 6 = 15 (left: 8 11 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 6 = 15 (left: 8 11 15) -> 15 - 8 = 7 (left: 7 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 + 6 = 15 (left: 8 11 15) -> 15 - 8 = 7 (left: 7 11) -> 7 * 11 = 77 (left: 77)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 11"
                }
            },
            "Step 4": {
                "Step": "8 / 6 = 4 (left: 4 9 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 / 6 = 4 (left: 4 9 11) -> 9 / 4 = 2.25 (left: 2.25 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 / 6 = 4 (left: 4 9 11) -> 9 / 4 = 2.25 (left: 2.25 11) -> 11 - 2.25 = 8.75 (left: 8.75)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "64"
                }
            },
            "Step 7": {
                "Step": "6 * 8 = 48 (left: 9 11 48) -> 11 + 48 = 59 (left: 9 59) -> 4 * 16 = 64 (left: 64 -> 64 / 2 = 32",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 * 8 = 48 (left: 9 11 48) -> 11 + 48 = 59 (left: 9 59) -> 4 * 16 = 64 (left: 64 -> 64 / 2 = 32 -> 64 - 32 = 32 (left: 32)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 + 6 = 15 (left: 8 11 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 11"
                }
            },
            "Step 1": {
                "Step": "6 * 8 = 48 (left: 9 11 48)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 8 = 48 (left: 9 11 48) -> 48 / 9",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 9 11 48) -> 48 / 9 -> 48 / 9 = 5.33 (left: 5.33)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 11"
                }
            },
            "Step 4": {
                "Step": "6 + 9 = 15 (left: 8 11 15)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 9 = 15 (left: 8 11 15) -> 8 * 11 = 88 (left: 15 88)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 9 = 15 (left: 8 11 15) -> 8 * 11 = 88 (left: 15 88) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "16"
                }
            },
            "Step 7": {
                "Step": "11 - 9 = 2 (left: 6 8 2) -> 6 + 8 = 14 (left: 2 14) -> 2 + 14 = 16 (left: 16) -> There are no possible next steps with the number 16 as it is the final result.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 9 = 2 (left: 6 8 2) -> 6 + 8 = 14 (left: 2 14) -> 2 + 14 = 16 (left: 16) -> There are no possible next steps with the number 16 as it is the final result. -> N/A",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 8 = 14 (left: 9 11 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 11"
                }
            },
            "Step 1": {
                "Step": "6 * 8 = 48 (left: 9 11 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 8 = 48 (left: 9 11  -> 9 - 11 = -2 (left: -2 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 9 11  -> 9 - 11 = -2 (left: -2 11) -> 11 / -2 = -5.5 (left: -5.5)  ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 11"
                }
            },
            "Step 4": {
                "Step": "8 - 6 = 2 (left: 2 9 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 - 6 = 2 (left: 2 9 11) -> 2 + 9 = 11 (left: 11 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 6 = 2 (left: 2 9 11) -> 2 + 9 = 11 (left: 11 11) -> 11 + 11 = 22 (left: 22)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "8.75"
                }
            },
            "Step 7": {
                "Step": "8 / 6 = 4 (left: 4 9 11) -> 9 / 4 = 2.25 (left: 2.25 11) -> 11 - 2.25 = 8.75 (left: 8.75) -> There are no possible next steps with the input 8.75.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 / 6 = 4 (left: 4 9 11) -> 9 / 4 = 2.25 (left: 2.25 11) -> 11 - 2.25 = 8.75 (left: 8.75) -> There are no possible next steps with the input 8.75. -> There are no possible next steps with the input 8.75.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "11 - 9 = 2 (left: 6 2 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 11"
                }
            },
            "Step 1": {
                "Step": "11 - 6 = 5",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 6 = 5 -> 11 / 6 = 1.8333 (left: 1.8333 5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 6 = 5 -> 11 / 6 = 1.8333 (left: 1.8333 5) -> 5 / 1.8333 = 2.7273 (left: 2.7273)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 11"
                }
            },
            "Step 4": {
                "Step": "11 - 9 = 2 (left: 6 8 2)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 9 = 2 (left: 6 8 2) -> 6 + 8 = 14 (left: 2 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 9 = 2 (left: 6 8 2) -> 6 + 8 = 14 (left: 2 14) -> 2 + 14 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "16"
                }
            },
            "Step 7": {
                "Step": "11 - 9 = 2 (left: 6 8 2) -> 6 + 8 = 14 (left: 2 14) -> 2 + 14 = 16 (left: 16) -> There are no possible next steps as the input is already a single number.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 9 = 2 (left: 6 8 2) -> 6 + 8 = 14 (left: 2 14) -> 2 + 14 = 16 (left: 16) -> There are no possible next steps as the input is already a single number. -> N/A",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 8 11 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 11"
                }
            },
            "Step 1": {
                "Step": "11 - 6 = 5 (left: 5 9 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 6 = 5 (left: 5 9 11) -> 9 * 11 = 99 (left: 5 99)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 6 = 5 (left: 5 9 11) -> 9 * 11 = 99 (left: 5 99) -> 99 / ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 11"
                }
            },
            "Step 4": {
                "Step": "6 * 8 = 48 (left: 9 11 48)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 * 8 = 48 (left: 9 11 48) -> 11 + 48 = 59 (left: 9 59)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 8 = 48 (left: 9 11 48) -> 11 + 48 = 59 (left: 9 59) -> 4 * 16 = 64 (left: 64",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "5.33"
                }
            },
            "Step 7": {
                "Step": "6 * 8 = 48 (left: 9 11 48) -> 48 / 9 -> 48 / 9 = 5.33 (left: 5.33) -> There is only one number, so no operations can be performed.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 * 8 = 48 (left: 9 11 48) -> 48 / 9 -> 48 / 9 = 5.33 (left: 5.33) -> There is only one number, so no operations can be performed. -> Input: 5",
                "Pruning": null
            }
        },
        "Input": "6 8 9 11",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            }
        ]
    },
    "899": {
        "puzzle": "1 3 3 11",
        "Agent 0": {
            "Step 0": {
                "Step": "11 - 1 = 10 (left: 3 3 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 3 11"
                }
            },
            "Step 1": {
                "Step": "3 - 1 = 2 (left: 2 3 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 - 1 = 2 (left: 2 3 11) -> 2 + 3 = 5 (left: 5 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 - 1 = 2 (left: 2 3 11) -> 2 + 3 = 5 (left: 5 11) -> 5 * 11 = 55 (left: 55)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 3 11"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 1 9 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 1 9 11) -> 11 - 1 = 10 (left: 9 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 1 9 11) -> 11 - 1 = 10 (left: 9 10) -> 10 - 9 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "55"
                }
            },
            "Step 7": {
                "Step": "3 - 1 = 2 (left: 2 3 11) -> 2 + 3 = 5 (left: 5 11) -> 5 * 11 = 55 (left: 55) -> There are no possible next steps with the input of 55.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 - 1 = 2 (left: 2 3 11) -> 2 + 3 = 5 (left: 5 11) -> 5 * 11 = 55 (left: 55) -> There are no possible next steps with the input of 55. -> There are no possible next steps with the input of 55.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 1 9 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 3 11"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 1 9 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 1 9 11) -> 9 / 1 = 9 (left: 9 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 1 9 11) -> 9 / 1 = 9 (left: 9 11) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 3 11"
                }
            },
            "Step 4": {
                "Step": "1 * 3 = 3 (left: 3 3 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 * 3 = 3 (left: 3 3 11) -> 3 * 3 = 9 (left: 9 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 * 3 = 3 (left: 3 3 11) -> 3 * 3 = 9 (left: 9 11) -> 9 * 11 = 99 (left: 99)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "Possible next steps:"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 1 9 11) -> 9 / 1 = 9 (left: 9 11) -> Possible next steps: -> There are no possible next steps with the given input.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 1 9 11) -> 9 / 1 = 9 (left: 9 11) -> Possible next steps: -> There are no possible next steps with the given input. -> There are no possible next steps with the given input.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 3 4 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 3 11"
                }
            },
            "Step 1": {
                "Step": "3 - 1 = 2 (left: 2 3 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 - 1 = 2 (left: 2 3 11) -> 11 - 2 = 9 (left: 3 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 - 1 = 2 (left: 2 3 11) -> 11 - 2 = 9 (left: 3 9) -> 3 + 9 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 3 11"
                }
            },
            "Step 4": {
                "Step": "3 - 1 = 2 (left: 2 3 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 - 1 = 2 (left: 2 3 11) -> 11 - 2 = 9 (left: 2 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 - 1 = 2 (left: 2 3 11) -> 11 - 2 = 9 (left: 2 9) -> 2 * 9 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "1"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 1 9 11) -> 11 - 9 = 2 (left: 1 2) -> 2 - 1 = 1 (left: 1) -> There is only one number, so there are no possible next steps.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 1 9 11) -> 11 - 9 = 2 (left: 1 2) -> 2 - 1 = 1 (left: 1) -> There is only one number, so there are no possible next steps. -> There are no possible next steps as there is only one number.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "11 - 1 = 10 (left: 3 10 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 3 11"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 1 6 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 1 6 11) -> Possible",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 1 6 11) -> Possible -> It seems like the input is not complete. Can you please provide the numbers or operators that should follow the word \"Possible\" in order to generate the next steps?",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 3 11"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 1 9 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 1 9 11) -> 11 - 9 = 2 (left: 1 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 1 9 11) -> 11 - 9 = 2 (left: 1 2) -> 2 - 1 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "2"
                }
            },
            "Step 7": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 8 / 3 = 2 (left: 1 2) -> 1 * 2 = 2 (left: 2) -> There are no possible next steps with just one number.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 8 / 3 = 2 (left: 1 2) -> 1 * 2 = 2 (left: 2) -> There are no possible next steps with just one number. -> Please provide at least two numbers for possible calculations.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 3 4 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 3 11"
                }
            },
            "Step 1": {
                "Step": "3 - 1 = 2 (left: 2 3 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 - 1 = 2 (left: 2 3 11) -> 11 / 3 = 3.67 (left: 2 3.67)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 - 1 = 2 (left: 2 3 11) -> 11 / 3 = 3.67 (left: 2 3.67) -> 2 + 3.67 = 5.67 (left: 5.67)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 3 11"
                }
            },
            "Step 4": {
                "Step": "11 - 3 = 8 (left: 1 3 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 8 / 3 = 2 (left: 1 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 8 / 3 = 2 (left: 1 2) -> 1 * 2 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "Possible next steps:"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 1 9 11) -> 9 / 1 = 9 (left: 9 11) -> Possible next steps: -> There are no possible next steps with the given input.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 1 9 11) -> 9 / 1 = 9 (left: 9 11) -> Possible next steps: -> There are no possible next steps with the given input. -> N/A",
                "Pruning": "NA"
            }
        },
        "Input": "1 3 3 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            }
        ]
    },
    "1050": {
        "puzzle": "4 10 11 13",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 11 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 11 13"
                }
            },
            "Step 1": {
                "Step": "10 - 4 = 6 (left: 6 11 13) -> 11 / 6 = 1.83 (left: 1.83 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 6 11 13) -> 11 / 6 = 1.83 (left: 1.83 13) -> 1.83 * 13 = 23.79 (left: 23.79)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 6 11 13) -> 11 / 6 = 1.83 (left: 1.83 13) -> 1.83 * 13 = 23.79 (left: 23.79) -> 23.79 + 2 = 25.79",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 11 13"
                }
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 6 11 13) -> 6 * 11 = 66 (left: 13 66)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 6 11 13) -> 6 * 11 = 66 (left: 13 66) -> 66 / 13 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 6 11 13) -> 6 * 11 = 66 (left: 13 66) -> 66 / 13 = 5 (left: 5) -> There are no possible next steps with just one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps with just one number provided."
                }
            },
            "Step 7": {
                "Step": "10 - 4 = 6 (left: 6 11 13) -> 6 * 11 = 66 (left: 13 66) -> 66 / 13 = 5 (left: 5) -> There are no possible next steps with just one number provided. -> Please provide at least two numbers to calculate possible next steps.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 4 = 6 (left: 6 11 13) -> 6 * 11 = 66 (left: 13 66) -> 66 / 13 = 5 (left: 5) -> There are no possible next steps with just one number provided. -> Please provide at least two numbers to calculate possible next steps. -> Please provide at least two numbers to calculate possible next steps.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 10 = 3 (left: 3 11 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 11 13"
                }
            },
            "Step 1": {
                "Step": "4 * 10 = 40 (left: 40 11 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 10 = 40 (left: 40 11 13) -> 40 - 11 = 29 (left: 29 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 10 = 40 (left: 40 11 13) -> 40 - 11 = 29 (left: 29 13) -> 29 - 13 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 11 13"
                }
            },
            "Step 4": {
                "Step": "4 / 10 = 0.4 (left: 0.4 11 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 / 10 = 0.4 (left: 0.4 11 13) -> 11 - 0.4 = 10.6 (left: 10.6",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 10 = 0.4 (left: 0.4 11 13) -> 11 - 0.4 = 10.6 (left: 10.6 -> There are no possible next steps for the input 10.6.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps with just one number provided."
                }
            },
            "Step 7": {
                "Step": "10 - 4 = 6 (left: 6 11 13) -> 6 * 11 = 66 (left: 13 66) -> 66 / 13 = 5 (left: 5) -> There are no possible next steps with just one number provided. -> Provide at least two numbers to perform operations.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 4 = 6 (left: 6 11 13) -> 6 * 11 = 66 (left: 13 66) -> 66 / 13 = 5 (left: 5) -> There are no possible next steps with just one number provided. -> Provide at least two numbers to perform operations. -> 2 + 8 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "There are no possible next steps with just one number provided."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "11 + 4 = 15 (left: 10 13 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 11 13"
                }
            },
            "Step 1": {
                "Step": "11 + 4 = 15 (left: 10 13 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 + 4 = 15 (left: 10 13 15) -> 15 / 10 = 1.5 (left: 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 + 4 = 15 (left: 10 13 15) -> 15 / 10 = 1.5 (left: 13) -> There are no possible next steps with the input 13.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 11 13"
                }
            },
            "Step 4": {
                "Step": "4 * 10 = 40 (left: 11 13 40)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 * 10 = 40 (left: 11 13 40) -> 40 - 11 = 29 (left: 29)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 10 = 40 (left: 11 13 40) -> 40 - 11 = 29 (left: 29) -> 29 * 8 = 232 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "17"
                }
            },
            "Step 7": {
                "Step": "13 + 4 = 17 (left: 10 11 17) -> 11 - 10 = 1 (left: 1 17) -> 1 * 17 = 17 (left: 17) -> 17 * 2 = 34 (left: 8 34)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 + 4 = 17 (left: 10 11 17) -> 11 - 10 = 1 (left: 1 17) -> 1 * 17 = 17 (left: 17) -> 17 * 2 = 34 (left: 8 34) -> 8 * 34 = 272 (left: 272)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "23.79 + 2 = 25.79"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 / 4 = 2.5 (left: 2.",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 11 13"
                }
            },
            "Step 1": {
                "Step": "10 / 4 = 2.5 (left: 2.5 11 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 4 = 2.5 (left: 2.5 11 13) -> 13 - 2.5 = 10.5 (left: 10.5 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 / 4 = 2.5 (left: 2.5 11 13) -> 13 - 2.5 = 10.5 (left: 10.5 13) -> 13 - 10.5 = 2.5 (left: 2.5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 11 13"
                }
            },
            "Step 4": {
                "Step": "13 - 10 = 3 (left: 3 11 ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 10 = 3 (left: 3 11  -> 5 + 5 = 10 (",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 10 = 3 (left: 3 11  -> 5 + 5 = 10 ( -> 5 - 1 = 4 (left: 4 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "17.78"
                }
            },
            "Step 7": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 14 / 11 = 1.27 (left: 1.27 14) -> 1.27 * 14 = 17.78 (left: 17.78) -> There are no possible next steps for the input 17.78 as it is a single number and not a mathematical expression.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 14 / 11 = 1.27 (left: 1.27 14) -> 1.27 * 14 = 17.78 (left: 17.78) -> There are no possible next steps for the input 17.78 as it is a single number and not a mathematical expression. -> There are no possible next steps for the input 17.78 as it is a single number and not a mathematical expression.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "11 + 4 = 15 (left: 10 13 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 11 13"
                }
            },
            "Step 1": {
                "Step": "13 + 4 = 17 (left: 10 11 17)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 + 4 = 17 (left: 10 11 17) -> 11 - 10 = 1 (left: 1 17)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 + 4 = 17 (left: 10 11 17) -> 11 - 10 = 1 (left: 1 17) -> 1 * 17 = 17 (left: 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 11 13"
                }
            },
            "Step 4": {
                "Step": "4 + 10 = 14 (left: 11 13 14)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 14 / 11 = 1.27 (left: 1.27 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 14 / 11 = 1.27 (left: 1.27 14) -> 1.27 * 14 = 17.78 (left: 17.78)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "17"
                }
            },
            "Step 7": {
                "Step": "13 + 4 = 17 (left: 10 11 17) -> 11 - 10 = 1 (left: 1 17) -> 1 * 17 = 17 (left: 17) -> 17 + 8 = 25 (left: 8 25)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 + 4 = 17 (left: 10 11 17) -> 11 - 10 = 1 (left: 1 17) -> 1 * 17 = 17 (left: 17) -> 17 + 8 = 25 (left: 8 25) -> 8 - 25 = -17 (left: -17)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "23.79 + 2 = 25.79"
                }
            }
        },
        "Input": "4 10 11 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1051": {
        "puzzle": "2 6 6 7",
        "Agent 0": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 5 6 6)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 4 + 6 = 10 (left: 7 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 4 + 6 = 10 (left: 7 10) -> 7 * 10 = 70 (left: 70)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 4 + 6 = 10 (left: 7 10) -> 7 * 10 = 70 (left: 70) -> 70 + 2 = 72",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 6 7) -> 3 * 6 = 18 (left: 7 18)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 6 7) -> 3 * 6 = 18 (left: 7 18) -> 18 / 7 = 2.57 (left: 2.57)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 3 6 7) -> 3 * 6 = 18 (left: 7 18) -> 18 / 7 = 2.57 (left: 2.57) -> There are no possible next steps for the input 2.57 as it is a single number and not an operation with multiple numbers.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "1 9"
                }
            },
            "Step 7": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 6 - 4 = 2 (left: 2 7) -> 2 + 7 = 9 (left: 9) -> 9 / 8 = 1.125 (left: 1 9) -> 1 + 9 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "1 9"
                }
            },
            "Step 8": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 6 - 4 = 2 (left: 2 7) -> 2 + 7 = 9 (left: 9) -> 9 / 8 = 1.125 (left: 1 9) -> 9 - 1 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "1 9"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 - 6 = 1 (left: 2 1 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 6 7"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 6 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 6 7) -> 6 / 3 = 2 (left: 2 7)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 6 7) -> 6 / 3 = 2 (left: 2 7) -> 7 / 2 = 3.5 (left: 3.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 6 7) -> Possible",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 6 7) -> Possible -> The possible next steps would depend on the specific numbers provided in the input. If you could provide the numbers, I would be able to generate the possible next steps for you.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 3 6 7) -> Possible -> The possible next steps would depend on the specific numbers provided in the input. If you could provide the numbers, I would be able to generate the possible next steps for you. -> Without specific numbers, I can't generate the possible next steps. If you provide the numbers, I'd be happy to help you with that.",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "1 9"
                }
            },
            "Step 7": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 6 - 4 = 2 (left: 2 7) -> 2 + 7 = 9 (left: 9) -> 9 / 8 = 1.125 (left: 1 9) -> 1 + 9 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "1 9"
                }
            },
            "Step 8": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 6 - 4 = 2 (left: 2 7) -> 2 + 7 = 9 (left: 9) -> 9 / 8 = 1.125 (left: 1 9) -> 9 - 9 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "1 9"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 4 6 7)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 6 7"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 6 6 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 6 6 5) -> 6 * 6 = 36 (left: 5 36)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 6 6 5) -> 6 * 6 = 36 (left: 5 36) -> 36 - 5 = 31 (left: 31)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 6 - 4 = 2 (left: 2 7)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 6 - 4 = 2 (left: 2 7) -> 2 + 7 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 6 - 4 = 2 (left: 2 7) -> 2 + 7 = 9 (left: 9) -> 9 / 8 = 1.125 (left: 1 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "1 9"
                }
            },
            "Step 7": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 6 - 4 = 2 (left: 2 7) -> 2 + 7 = 9 (left: 9) -> 9 / 8 = 1.125 (left: 1 9) -> 1 * 9 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "1 9"
                }
            },
            "Step 8": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 6 - 4 = 2 (left: 2 7) -> 2 + 7 = 9 (left: 9) -> 9 / 8 = 1.125 (left: 1 9) -> 9 / 1 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "1 9"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 / 2 = 3 (left: 3 6 7)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 6 + 7 = 13 (left: 4 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 6 + 7 = 13 (left: 4 13) -> 13 / 4 = 3.25 (left: 3.25)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 6 + 7 = 13 (left: 4 13) -> 13 / 4 = 3.25 (left: 3.25) -> 3.25 * 8 = 26",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9) -> 9 / 7 = 1.2857142857142858 (left: 1.2857142857142858)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9) -> 9 / 7 = 1.2857142857142858 (left: 1.2857142857142858) -> 1.2857142857142858 * 2 = 2.5714285714285716",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "1 9"
                }
            },
            "Step 7": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 6 - 4 = 2 (left: 2 7) -> 2 + 7 = 9 (left: 9) -> 9 / 8 = 1.125 (left: 1 9) -> 1 * 9 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "1 9"
                }
            },
            "Step 8": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 6 - 4 = 2 (left: 2 7) -> 2 + 7 = 9 (left: 9) -> 9 / 8 = 1.125 (left: 1 9) -> 1 + 9 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "1 9"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 4 6 7)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 7 - 4 = 3 (left: 3 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 7 - 4 = 3 (left: 3 6) -> 6 - 3 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 7 - 4 = 3 (left: 3 6) -> 6 - 3 = 3 (left: 3) -> There are no possible next steps with just one number provided. More numbers are needed to perform operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 6 7"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 6  -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 6  -> 6 / 4 = 1.5 (left: 1.5) -> There are no possible next steps with the input 1.5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "1 9"
                }
            },
            "Step 7": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 6 - 4 = 2 (left: 2 7) -> 2 + 7 = 9 (left: 9) -> 9 / 8 = 1.125 (left: 1 9) -> 1 + 9 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "1 9"
                }
            },
            "Step 8": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 6 - 4 = 2 (left: 2 7) -> 2 + 7 = 9 (left: 9) -> 9 / 8 = 1.125 (left: 1 9) -> 9 - 1 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "1 9"
                }
            }
        },
        "Input": "2 6 6 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1052": {
        "puzzle": "7 10 10 12",
        "Agent 0": {
            "Step 0": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 10 10 12"
                }
            },
            "Step 1": {
                "Step": "10 + 10 = 20 (left: 7 20 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 10 = 20 (left: 7 20  -> 7 * 20 = 140 (left: 140)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 + 10 = 20 (left: 7 20  -> 7 * 20 = 140 (left: 140) -> 40 / 1 = 40 (left: 40)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 10 10 12"
                }
            },
            "Step 4": {
                "Step": "12 - 10 = 2 (left: ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 10 = 2 (left:  -> Please provide numbers to continue the sequence.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 10 = 2 (left:  -> Please provide numbers to continue the sequence. -> - 8 / 8 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "40"
                }
            },
            "Step 7": {
                "Step": "10 + 10 = 20 (left: 7 20  -> 7 * 20 = 140 (left: 140) -> 40 / 1 = 40 (left: 40) -> None, as there is only one number provided.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 + 10 = 20 (left: 7 20  -> 7 * 20 = 140 (left: 140) -> 40 / 1 = 40 (left: 40) -> None, as there is only one number provided. -> Since there is only one number provided, there are no possible next steps.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 - 7 = 3 (left: 3 10 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 10 10 12"
                }
            },
            "Step 1": {
                "Step": "10 * 7 = 70 (left: 70 10 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 12 + 10 = 22 (left: 22)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 12 + 10 = 22 (left: 22) -> 22 * 8 = 176 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 10 10 12"
                }
            },
            "Step 4": {
                "Step": "10 - 7 = 3 (left: 3 10 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 10 - 3 = 7 (left: 7 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 10 - 3 = 7 (left: 7 12) -> 7 * 12 = 84 (left: 84)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1"
                }
            },
            "Step 7": {
                "Step": "12 - 10 = 2 (left:  -> Please provide numbers to continue the sequence. -> - 8 / 8 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 - 10 = 2 (left:  -> Please provide numbers to continue the sequence. -> - 8 / 8 = 1 (left: 1) -> 1 + 1 = 2 -> 1 + 1 = 2 (left: 2)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 / 10 = 1 (left: 7 1 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 10 10 12"
                }
            },
            "Step 1": {
                "Step": "12 - 7 = 5 (left: ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 7 = 5 (left:  -> It seems there was no input provided. If you could provide the numbers, I can generate the possible next steps for you.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 7 = 5 (left:  -> It seems there was no input provided. If you could provide the numbers, I can generate the possible next steps for you. -> Without numbers provided, I cannot generate possible next steps. Please input the numbers so I can provide you with the calculations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 10 10 12"
                }
            },
            "Step 4": {
                "Step": "7 + 10 = 17 (left: 10 10 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 + 10 = 17 (left: 10 10 12) -> 12 / 10 = 1.2 (",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 10 = 17 (left: 10 10 12) -> 12 / 10 = 1.2 ( -> 1.2 * 8 = 9.6 (left: 9.6)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "48"
                }
            },
            "Step 7": {
                "Step": "7 * 10 = 70 (left: 70 10 12) -> 70 - 10 = 60 (left: 60 12) -> 60 - 12 = 48 (left: 48) -> 48 / 8 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "Without numbers provided, I cannot generate possible next steps. Please input the numbers so I can provide you with the calculations."
                }
            },
            "Step 8": {
                "Step": "12 - 7 = 5 (left:  -> It seems there was no input provided. If you could provide the numbers, I can generate the possible next steps for you. -> Without numbers provided, I cannot generate possible next steps. Please input the numbers so I can provide you with the calculations. -> Please input the numbers so I can provide you with the calculations.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 - 7 = 3 (left: 3 10 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 10 10 12"
                }
            },
            "Step 1": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 -> There are no possible next steps with the input 1.42857142857.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 -> There are no possible next steps with the input 1.42857142857. -> There are no possible next steps with the input 1.42857142857.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 10 10 12"
                }
            },
            "Step 4": {
                "Step": "7 * 10 = 70 (left: 70 10 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 * 10 = 70 (left: 70 10 12) -> 70 - 10 = 60 (left: 60 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 10 = 70 (left: 70 10 12) -> 70 - 10 = 60 (left: 60 12) -> 60 - 12 = 48 (left: 48)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "8"
                }
            },
            "Step 7": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 12 + 10 = 22 (left: 22) -> 22 * 8 = 176 (left: 8) -> 8 - 8 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "8"
                }
            },
            "Step 8": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 12 / 3 = 4 (left: 10  -> 10 / 8 = 1.25 (left: 8) -> 8 + 8 = 16 (left: 16)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 10 10 12"
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 3 10 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 10 / 3 = 3.33 (left: 3.33 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 10 / 3 = 3.33 (left: 3.33 12) -> 3.33 * 12 = 39.96 (left: 39.96)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 10 10 12"
                }
            },
            "Step 4": {
                "Step": "10 - 7 = 3 (left: 3 10 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 12 / 3 = 4 (left: 10 ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 12 / 3 = 4 (left: 10  -> 10 / 8 = 1.25 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "Without numbers provided, I cannot generate possible next steps. Please input the numbers so I can provide you with the calculations."
                }
            },
            "Step 7": {
                "Step": "12 - 7 = 5 (left:  -> It seems there was no input provided. If you could provide the numbers, I can generate the possible next steps for you. -> Without numbers provided, I cannot generate possible next steps. Please input the numbers so I can provide you with the calculations. -> 4 + 5 = 9 (left: 6 7 9)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 - 7 = 5 (left:  -> It seems there was no input provided. If you could provide the numbers, I can generate the possible next steps for you. -> Without numbers provided, I cannot generate possible next steps. Please input the numbers so I can provide you with the calculations. -> 4 + 5 = 9 (left: 6 7 9) -> 6 - 7 = -",
                "Pruning": null
            }
        },
        "Input": "7 10 10 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            }
        ]
    },
    "1053": {
        "puzzle": "2 5 7 11",
        "Agent 0": {
            "Step 0": {
                "Step": "5 * 2 = 10 (left: 10 7 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 7 11"
                }
            },
            "Step 1": {
                "Step": "2 * 5 = 10 (left: 10 7 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 5 = 10 (left: 10 7 11) -> 7 - 10 = -3 (left: -3 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 5 = 10 (left: 10 7 11) -> 7 - 10 = -3 (left: -3 11) -> -3 - 11 = -14 (left: -14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 12 11"
                }
            },
            "Step 4": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Possible next steps:",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Possible next steps: -> There are no more possible next steps for the input provided.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Possible next steps: -> There are no more possible next steps for the input provided. -> There are no more possible next steps for the input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "10 20"
                }
            },
            "Step 7": {
                "Step": "7 * 11 = 77 (left: 2 5  -> 2 * 5 = 10 (left: 10) -> 10 + 10 = 20 (left: 10 20) -> 10 * 20 = 200 (left: 200)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "1.83 * 2 = 3.66"
                }
            },
            "Step 8": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 / 2 = 6 (left: 6 11) -> 11 / 6 \u2248 1.83 (left: 1.83) -> 1.83 * 2 = 3.66 -> 2 - 1.83 = 0.17 (left: 0.17)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "1.83 * 2 = 3.66"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 + 7 = 12 (left: 2 12 11)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 7 11"
                }
            },
            "Step 1": {
                "Step": "2 + 5 = 7 (left: 7 7 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 5 = 7 (left: 7 7 11) -> 11 + 7 = 18 (left: 7 18)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 5 = 7 (left: 7 7 11) -> 11 + 7 = 18 (left: 7 18) -> 7 - 18 = -11 (left: -11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 7 11"
                }
            },
            "Step 4": {
                "Step": "2 + 5 = 7 (left: 7 7 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 5 = 7 (left: 7 7 11) -> 7 / 7 = 1 (left: 1 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 5 = 7 (left: 7 7 11) -> 7 / 7 = 1 (left: 1 11) -> 11 / 1 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "-11"
                }
            },
            "Step 7": {
                "Step": "2 + 5 = 7 (left: 7 7 11) -> 11 + 7 = 18 (left: 7 18) -> 7 - 18 = -11 (left: -11) -> There are no possible next steps with the input of -11.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 5 = 7 (left: 7 7 11) -> 11 + 7 = 18 (left: 7 18) -> 7 - 18 = -11 (left: -11) -> There are no possible next steps with the input of -11. -> There are no possible next steps with the input of -11.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "11 - 5 = 6 (left: 2 6 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 7 11"
                }
            },
            "Step 1": {
                "Step": "2 + 5 = 7 (left: 7 7 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 5 = 7 (left: 7 7 11) -> 7 - 7 = 0 (left: 0 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 5 = 7 (left: 7 7 11) -> 7 - 7 = 0 (left: 0 11) -> 0 + 11 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 12 11"
                }
            },
            "Step 4": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 / 2 = 6 (left: 6 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 / 2 = 6 (left: 6 11) -> 11 / 6 \u2248 1.83 (left: 1.83)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 / 2 = 6 (left: 6 11) -> 11 / 6 \u2248 1.83 (left: 1.83) -> 1.83 * 2 = 3.66",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "10 20"
                }
            },
            "Step 7": {
                "Step": "7 * 11 = 77 (left: 2 5  -> 2 * 5 = 10 (left: 10) -> 10 + 10 = 20 (left: 10 20) -> 10 + 20 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "-14"
                }
            },
            "Step 8": {
                "Step": "2 * 5 = 10 (left: 10 7 11) -> 7 - 10 = -3 (left: -3 11) -> -3 - 11 = -14 (left: -14) -> -14 - 2 = -16 (left: -16)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "There are no more possible next steps for the input provided."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 + 11 = 18 (left: 2 5 18)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 7 11"
                }
            },
            "Step 1": {
                "Step": "7 + 5 = 12 (left: 2 11 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 5 = 12 (left: 2 11 12) -> 12 - 2 = 10 (left: 2 10 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 + 5 = 12 (left: 2 11 12) -> 12 - 2 = 10 (left: 2 10 12) -> 2 + 10 = 12 (left: 12 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 7 11"
                }
            },
            "Step 4": {
                "Step": "7 * 11 = 77 (left: 2 5 ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 * 11 = 77 (left: 2 5  -> 2 * 5 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 11 = 77 (left: 2 5  -> 2 * 5 = 10 (left: 10) -> 10 + 10 = 20 (left: 10 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "10 20"
                }
            },
            "Step 7": {
                "Step": "7 * 11 = 77 (left: 2 5  -> 2 * 5 = 10 (left: 10) -> 10 + 10 = 20 (left: 10 20) -> 20 / 10 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "8"
                }
            },
            "Step 8": {
                "Step": "2 * 5 = 10 (left: 10 7 11) -> 10 - 7 = 3 (left: 3 11) -> 11 - 3 = 8 (left: 8) -> There are no possible next steps with just the input 8.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 5 = 7 (left: 7 7 11)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 12 11"
                }
            },
            "Step 1": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 - 2 = 10 (left: 10 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 - 2 = 10 (left: 10 11) -> 10 * 11 = 110 (left: 110)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 - 2 = 10 (left: 10 11) -> 10 * 11 = 110 (left: 110) -> 110 * 2 = 220 (left: )",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "2 12 11"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 7 11"
                }
            },
            "Step 4": {
                "Step": "2 * 5 = 10 (left: 10 7 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 * 5 = 10 (left: 10 7 11) -> 10 - 7 = 3 (left: 3 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 5 = 10 (left: 10 7 11) -> 10 - 7 = 3 (left: 3 11) -> 11 - 3 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "12 12"
                }
            },
            "Step 7": {
                "Step": "7 + 5 = 12 (left: 2 11 12) -> 12 - 2 = 10 (left: 2 10 12) -> 2 + 10 = 12 (left: 12 12) -> 12 * 12 = 144 (left: 144)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "-14"
                }
            },
            "Step 8": {
                "Step": "2 * 5 = 10 (left: 10 7 11) -> 7 - 10 = -3 (left: -3 11) -> -3 - 11 = -14 (left: -14) -> -14 / -2 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "There are no more possible next steps for the input provided."
                }
            }
        },
        "Input": "2 5 7 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1054": {
        "puzzle": "4 4 6 9",
        "Agent 0": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 9"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 6 16 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 16 - 9 = 7 (",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 16 - 9 = 7 ( -> 16 - 9 = 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 6 9"
                }
            },
            "Step 4": {
                "Step": "4 / 4 = 1 (left: 1 6 9) -> 9 - 6 = 3 (left: 1 3)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 / 4 = 1 (left: 1 6 9) -> 9 - 6 = 3 (left: 1 3) -> 1 + 3 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 4 = 1 (left: 1 6 9) -> 9 - 6 = 3 (left: 1 3) -> 1 + 3 = 4 (left: 4) -> There are no possible next steps with just the number 4.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "31"
                }
            },
            "Step 7": {
                "Step": "4 * 4 = 16 (left: 6 9 16) -> 9 + 16 = 25 (left: 6 25) -> 6 + 25 = 31 (left: 31) -> 31 + 2 = 33",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 * 4 = 16 (left: 6 9 16) -> 9 + 16 = 25 (left: 6 25) -> 6 + 25 = 31 (left: 31) -> 31 + 2 = 33 -> 31 - 2 = 29 (left: 29)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "14 + 14 = 28"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 6 16 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 9"
                }
            },
            "Step 1": {
                "Step": "6 - 4 = 2 (left: 2 4 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 4 = 2 (left: 2 4  -> 2 * 4 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 4 = 2 (left: 2 4  -> 2 * 4 = 8 (left: 8) -> 8 / 8 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 9"
                }
            },
            "Step 4": {
                "Step": "6 + 4 = 10 (left: 4 10 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 4 = 10 (left: 4 10 9) -> 9 - 4 = 5 (left: 5 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 4 = 10 (left: 4 10 9) -> 9 - 4 = 5 (left: 5 9) -> 9 * 5 = 45 (left: 45)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "45"
                }
            },
            "Step 7": {
                "Step": "6 + 4 = 10 (left: 4 10 9) -> 9 - 4 = 5 (left: 5 9) -> 9 * 5 = 45 (left: 45) -> There are no possible next steps with the input 45.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 4 = 10 (left: 4 10 9) -> 9 - 4 = 5 (left: 5 9) -> 9 * 5 = 45 (left: 45) -> There are no possible next steps with the input 45. -> There are no possible next steps with the input 45.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 6 16 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 9"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 4 6 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 4 6 5) -> 5 * 4 = 20 (left: 20)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 4 6 5) -> 5 * 4 = 20 (left: 20) -> There are no possible next steps with the input of 20.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 10 9"
                }
            },
            "Step 4": {
                "Step": "6 + 4 = 10 (left: 4 10 9) -> 9 - 4 = 5 (left: 5 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 4 = 10 (left: 4 10 9) -> 9 - 4 = 5 (left: 5 9) -> 5 + 9 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 4 = 10 (left: 4 10 9) -> 9 - 4 = 5 (left: 5 9) -> 5 + 9 = 14 (left: 14) -> 14 + 14 = 28",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "105"
                }
            },
            "Step 7": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 6 * 16 = 96 (left: 96 9) -> 96 + 9 = 105 (left: 105) -> 105 / 2 = 52.5 (left: 52.5)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "14 + 14 = 28"
                }
            },
            "Step 8": {
                "Step": "6 + 4 = 10 (left: 4 10 9) -> 9 - 4 = 5 (left: 5 9) -> 5 + 9 = 14 (left: 14) -> 14 + 14 = 28 -> 14 - 14 = 0",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 6 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 9"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 6 8 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 6 * 8 = 48 (left: 9 48)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 6 * 8 = 48 (left: 9 48) -> 48 / 9 = 5.33 (left: 5.33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 9"
                }
            },
            "Step 4": {
                "Step": "4 * 4 = 16 (left: 6 9 16)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 * 4 = 16 (left: 6 9 16) -> 9 - 6 = 3 (left: 3 9 16)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 4 = 16 (left: 6 9 16) -> 9 - 6 = 3 (left: 3 9 16) -> 3 + 9 = 12 (left: 12 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "12 16"
                }
            },
            "Step 7": {
                "Step": "4 * 4 = 16 (left: 6 9 16) -> 9 - 6 = 3 (left: 3 9 16) -> 3 + 9 = 12 (left: 12 16) -> 12 + 16 = 28 (left: 28)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "5.33"
                }
            },
            "Step 8": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 6 * 8 = 48 (left: 9 48) -> 48 / 9 = 5.33 (left: 5.33) -> There are no possible next steps for the input 5.33 as it is a single number.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 4 = 10 (left: 4 10 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 9"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 6 16 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 6 * 16 = 96 (left: 96 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 6 * 16 = 96 (left: 96 9) -> 96 + 9 = 105 (left: 105)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 9"
                }
            },
            "Step 4": {
                "Step": "4 * 4 = 16 (left: 6 9 16)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 * 4 = 16 (left: 6 9 16) -> 9 + 16 = 25 (left: 6 25)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 4 = 16 (left: 6 9 16) -> 9 + 16 = 25 (left: 6 25) -> 6 + 25 = 31 (left: 31)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1"
                }
            },
            "Step 7": {
                "Step": "6 - 4 = 2 (left: 2 4  -> 2 * 4 = 8 (left: 8) -> 8 / 8 = 1 (left: 1) -> There are no possible next steps with just one number given.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 - 4 = 2 (left: 2 4  -> 2 * 4 = 8 (left: 8) -> 8 / 8 = 1 (left: 1) -> There are no possible next steps with just one number given. -> Please provide at least two numbers to perform mathematical operations.",
                "Pruning": null
            }
        },
        "Input": "4 4 6 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1055": {
        "puzzle": "6 9 10 12",
        "Agent 0": {
            "Step 0": {
                "Step": "10 + 12 = 22 (left: 6 9 22)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 12"
                }
            },
            "Step 1": {
                "Step": "6 + 9 = 15 (left: 10 12 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 9 = 15 (left: 10 12 15) -> Input: 5 7",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 9 = 15 (left: 10 12 15) -> Input: 5 7 -> 5 + 7 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 12"
                }
            },
            "Step 4": {
                "Step": "9 * 10 = 90 (left: 6 12 90)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 * 10 = 90 (left: 6 12 90) -> 12 * 6 = 72 (left: 72 90)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 * 10 = 90 (left: 6 12 90) -> 12 * 6 = 72 (left: 72 90) -> 72 + 90 = 162 (left: 162)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "11.33 19"
                }
            },
            "Step 7": {
                "Step": "6 / 9 = 0.67 (left: 0.67 9 10 12) -> 12 - 0.67 = 11.33 (left: 9 10 11.33) -> 9 + 10 = 19 (left: 11.33 19) -> 11.33 / 19 = 0.5963157894736842 (left: 0.5963157894736842)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "11.33 19"
                }
            },
            "Step 8": {
                "Step": "6 / 9 = 0.67 (left: 0.67 9 10 12) -> 12 - 0.67 = 11.33 (left: 9 10 11.33) -> 9 + 10 = 19 (left: 11.33 19) -> 19 / 11.33 = 1.68 (left: 1.68 19)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 * 12 = 120 (left: 6 9 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 12"
                }
            },
            "Step 1": {
                "Step": "6 / 9 = 0.67 (left: 0.67 9 10 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 9 = 0.67 (left: 0.67 9 10 12) -> 12 - 0.67 = 11.33 (left: 9 10 11.33)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 / 9 = 0.67 (left: 0.67 9 10 12) -> 12 - 0.67 = 11.33 (left: 9 10 11.33) -> 9 + 10 = 19 (left: 11.33 19)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 12"
                }
            },
            "Step 4": {
                "Step": "10 + 12 = 22 (left: 6 9 22)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 9 * 6 = 54 (left: 54 22)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 9 * 6 = 54 (left: 54 22) -> 54 * 22 = 1188 (left: 1188)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "11.33 19"
                }
            },
            "Step 7": {
                "Step": "6 / 9 = 0.67 (left: 0.67 9 10 12) -> 12 - 0.67 = 11.33 (left: 9 10 11.33) -> 9 + 10 = 19 (left: 11.33 19) -> 11.33 + 19 = 30.33 (left: 30.33)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "11.33 19"
                }
            },
            "Step 8": {
                "Step": "6 / 9 = 0.67 (left: 0.67 9 10 12) -> 12 - 0.67 = 11.33 (left: 9 10 11.33) -> 9 + 10 = 19 (left: 11.33 19) -> 11.33 * 19 = 215.27 (left: 215.27)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 + 12 = 22 (left: 6 9 22)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 12"
                }
            },
            "Step 1": {
                "Step": "9 + 10 = 19 (left: 6 12 19)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 6 + 12 = 18 (left: 18 19)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 6 + 12 = 18 (left: 18 19) -> 18 - 19 = -1 (left: -1)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 12"
                }
            },
            "Step 4": {
                "Step": "10 + 12 = 22 (left: 6 9 ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 + 12 = 22 (left: 6 9  -> 6 * 9 = 54 (left: 54)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 + 12 = 22 (left: 6 9  -> 6 * 9 = 54 (left: 54) -> No possible next steps, the input is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "11.33 19"
                }
            },
            "Step 7": {
                "Step": "6 / 9 = 0.67 (left: 0.67 9 10 12) -> 12 - 0.67 = 11.33 (left: 9 10 11.33) -> 9 + 10 = 19 (left: 11.33 19) -> 11.33 + 19 = 30.33 (left: 30.33)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "11.33 19"
                }
            },
            "Step 8": {
                "Step": "6 / 9 = 0.67 (left: 0.67 9 10 12) -> 12 - 0.67 = 11.33 (left: 9 10 11.33) -> 9 + 10 = 19 (left: 11.33 19) -> 19 - 11.33 = 7.67 (left: 7.67 19)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 + 10 = 19 (left: 6 12 19)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 12 19"
                }
            },
            "Step 1": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 12 - 6 = 6 (left: 6 12 19)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 12 - 6 = 6 (left: 6 12 19) -> 19 - 6 = 13 (left: 6 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 12 - 6 = 6 (left: 6 12 19) -> 19 - 6 = 13 (left: 6 13) -> 6 * 13 = 78 (left: 78)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "6 9 22"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 12"
                }
            },
            "Step 4": {
                "Step": "10 * 12 = 120 (left: 6 9 ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 * 12 = 120 (left: 6 9  -> 9 - 6 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 * 12 = 120 (left: 6 9  -> 9 - 6 = 3 (left: 3) -> There are no possible next steps with the input of 3.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "11.33 19"
                }
            },
            "Step 7": {
                "Step": "6 / 9 = 0.67 (left: 0.67 9 10 12) -> 12 - 0.67 = 11.33 (left: 9 10 11.33) -> 9 + 10 = 19 (left: 11.33 19) -> 11.33 - 19 = -7.67 (left: -7.67)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "11.33 19"
                }
            },
            "Step 8": {
                "Step": "6 / 9 = 0.67 (left: 0.67 9 10 12) -> 12 - 0.67 = 11.33 (left: 9 10 11.33) -> 9 + 10 = 19 (left: 11.33 19) -> 11.33 + 19 = 30.33 (left: 30.33)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "9 + 10 = 19 (left: 6 12 19)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 12"
                }
            },
            "Step 1": {
                "Step": "9 * 10 = 90 (left: 6 12 90)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 * 10 = 90 (left: 6 12 90) -> 12 - 6 = 6 (left: 6 90)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 * 10 = 90 (left: 6 12 90) -> 12 - 6 = 6 (left: 6 90) -> 90 / 6 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 9 22"
                }
            },
            "Step 4": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 22 / 6 = 3.67 (left: 3.67 9 22)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 22 / 6 = 3.67 (left: 3.67 9 22) -> 3.67 * 9 = 33.03 (left: 33.03 22)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 22 / 6 = 3.67 (left: 3.67 9 22) -> 3.67 * 9 = 33.03 (left: 33.03 22) -> 33.03 - 22 = 11.03 (left: 11.03)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "11.33 19"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "11.33 19"
                }
            },
            "Step 7": {
                "Step": "6 / 9 = 0.67 (left: 0.67 9 10 12) -> 12 - 0.67 = 11.33 (left: 9 10 11.33) -> 9 + 10 = 19 (left: 11.33 19) -> 11.33 / 19 = 0.59578947368 (left: 0.59578947368)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "11.33 19"
                }
            },
            "Step 8": {
                "Step": "6 / 9 = 0.67 (left: 0.67 9 10 12) -> 12 - 0.67 = 11.33 (left: 9 10 11.33) -> 9 + 10 = 19 (left: 11.33 19) -> 11.33 + 19 = 30.33 (left: 30.33)",
                "Pruning": "NA"
            }
        },
        "Input": "6 9 10 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "1056": {
        "puzzle": "6 9 9 12",
        "Agent 0": {
            "Step 0": {
                "Step": "9 + 9 = 18 (left: 6 18 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 12"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 6 3 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 6 3 12) -> 6 + 3 = 9 (left: 9 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 / 3 = 3 (left: 6 3 12) -> 6 + 3 = 9 (left: 9 12) -> 9 * 12 = 108 (left: 108)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "1 7"
                }
            },
            "Step 4": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 9 + 12 = 21 (left: 21 27) -> 21 * 27 = 567 (left: 567) -> 6 - 5 = 1 (left: 1 7) -> 7 - 1 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "1 7"
                }
            },
            "Step 5": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 9 + 12 = 21 (left: 21 27) -> 21 * 27 = 567 (left: 567) -> 6 - 5 = 1 (left: 1 7) -> 7 - 1 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "1 7"
                }
            },
            "Step 6": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 9 + 12 = 21 (left: 21 27) -> 21 * 27 = 567 (left: 567) -> 6 - 5 = 1 (left: 1 7) -> 7 / 1 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "1 7"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "1 7"
                }
            },
            "Step 7": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 9 + 12 = 21 (left: 21 27) -> 21 * 27 = 567 (left: 567) -> 6 - 5 = 1 (left: 1 7) -> 7 * 1 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "3 27"
                }
            },
            "Step 8": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 - 9 = 3 (left: 3 12 27) -> 12 + 15 = 27 (left: 3 27) -> 27 - 3 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "1 7"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: 3 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 12"
                }
            },
            "Step 1": {
                "Step": "9 - 6 = 3 (left: 3 9 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 6 = 3 (left: 3 9 12) -> 9 / 3 = 3 (left: 3 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 6 = 3 (left: 3 9 12) -> 9 / 3 = 3 (left: 3 12) -> 12 / 3 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "1 7"
                }
            },
            "Step 4": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 9 + 12 = 21 (left: 21 27) -> 21 * 27 = 567 (left: 567) -> 6 - 5 = 1 (left: 1 7) -> 1 + 7 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "9 12 27"
                }
            },
            "Step 5": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 - 9 = 3 (left: 3 12 27)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 - 9 = 3 (left: 3 12 27) -> 12 + 15 = 27 (left: 3 27)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "1 7"
                }
            },
            "Step 7": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 9 + 12 = 21 (left: 21 27) -> 21 * 27 = 567 (left: 567) -> 6 - 5 = 1 (left: 1 7) -> 7 / 1 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "3 27"
                }
            },
            "Step 8": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 - 9 = 3 (left: 3 12 27) -> 12 + 15 = 27 (left: 3 27) -> 27 - 3 = 24 (left: 3 24)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 * 3 = 27 (left: 9 12 27)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 12"
                }
            },
            "Step 1": {
                "Step": "6 * 9 = 54 (left: 9 12 54)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 9 = 54 (left: 9 12 54) -> 54 - 9 = 45 (left: 12 45)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 9 = 54 (left: 9 12 54) -> 54 - 9 = 45 (left: 12 45) -> 45 / 12 = 3.75 (left: 3.75)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 12 27"
                }
            },
            "Step 4": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 9 + 12 = 21 (left: 21 27)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 9 + 12 = 21 (left: 21 27) -> 21 / 27 = 0.7777777777777778 (left: 0.778)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 9 + 12 = 21 (left: 21 27) -> 21 / 27 = 0.7777777777777778 (left: 0.778) -> 0.778 * 2 = 1.556",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "1 7"
                }
            },
            "Step 7": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 9 + 12 = 21 (left: 21 27) -> 21 * 27 = 567 (left: 567) -> 6 - 5 = 1 (left: 1 7) -> 7 / 1 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "1 7"
                }
            },
            "Step 8": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 9 + 12 = 21 (left: 21 27) -> 21 * 27 = 567 (left: 567) -> 6 - 5 = 1 (left: 1 7) -> 7 / 1 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "1 7"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 9 9 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 12"
                }
            },
            "Step 1": {
                "Step": "9 + 3 = 12 (left: 6 9 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 3 = 12 (left: 6 9 12) -> 12 - 6 = 6 (left: 6 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 + 3 = 12 (left: 6 9 12) -> 12 - 6 = 6 (left: 6 12) -> 6 * 12 = 72 (left: 72)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 12"
                }
            },
            "Step 4": {
                "Step": "12 - 6 = 6 (left: 6 9 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 6 = 6 (left: 6 9 12) -> 9 - 6 = 3 (left: 3 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 6 = 6 (left: 6 9 12) -> 9 - 6 = 3 (left: 3 12) -> 12 / 3 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "1 7"
                }
            },
            "Step 7": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 9 + 12 = 21 (left: 21 27) -> 21 * 27 = 567 (left: 567) -> 6 - 5 = 1 (left: 1 7) -> 7 / 1 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "1 7"
                }
            },
            "Step 8": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 9 + 12 = 21 (left: 21 27) -> 21 * 27 = 567 (left: 567) -> 6 - 5 = 1 (left: 1 7) -> 7 - 1 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "1 7"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 9 9 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 12 27"
                }
            },
            "Step 1": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 9 + 12 = 21 (left: 21 27)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 9 + 12 = 21 (left: 21 27) -> 21 * 27 = 567 (left: 567)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 9 + 12 = 21 (left: 21 27) -> 21 * 27 = 567 (left: 567) -> 6 - 5 = 1 (left: 1 7)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "1 7"
                }
            },
            "Step 4": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 9 + 12 = 21 (left: 21 27) -> 21 * 27 = 567 (left: 567) -> 6 - 5 = 1 (left: 1 7) -> 7 * 1 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "1 7"
                }
            },
            "Step 5": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 9 + 12 = 21 (left: 21 27) -> 21 * 27 = 567 (left: 567) -> 6 - 5 = 1 (left: 1 7) -> 7 / 1 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "1 7"
                }
            },
            "Step 6": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 9 + 12 = 21 (left: 21 27) -> 21 * 27 = 567 (left: 567) -> 6 - 5 = 1 (left: 1 7) -> 7 + 1 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "1 7"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "1 7"
                }
            },
            "Step 7": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 9 + 12 = 21 (left: 21 27) -> 21 * 27 = 567 (left: 567) -> 6 - 5 = 1 (left: 1 7) -> 1 * 7 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "1 7"
                }
            },
            "Step 8": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 9 + 12 = 21 (left: 21 27) -> 21 * 27 = 567 (left: 567) -> 6 - 5 = 1 (left: 1 7) -> 1 * 7 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "1 7"
                }
            }
        },
        "Input": "6 9 9 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1057": {
        "puzzle": "2 3 6 12",
        "Agent 0": {
            "Step 0": {
                "Step": "3 * 2 = 6 (left: 6 6 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> Possible",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> Possible -> It appears that the input is not clear. Please provide a valid input for the next steps to be determined.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> Possible -> It appears that the input is not clear. Please provide a valid input for the next steps to be determined. -> Apologies for the confusion. Please provide a valid set of numbers for the next steps to be determined.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "5 6 12"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 12 - 6 = 6 (left: 5 6)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 12 - 6 = 6 (left: 5 6) -> 5 + 6 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 12 - 6 = 6 (left: 5 6) -> 5 + 6 = 11 (left: 11) -> There are no possible next steps with the input of 11."
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 * 2 = 6 (left: 6 6 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12) -> 12 / 1 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12) -> 12 / 1 = 12 (left: 12) -> No possible next steps with the input 12.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 - 12 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 - 12 = 0 (left: 0) -> No possible next steps."
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 2 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 6 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 6 6 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 6 6  -> 6 - 6 = 0 (left: 0) ",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 6 6  -> 6 - 6 = 0 (left: 0)  -> There are no possible next steps with the input of 0.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: ((2 * 3) + 6) + 12 = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 6 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "5 6 12"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 5 * 6 = 30 (left: 30 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 5 * 6 = 30 (left: 30 12) -> 30 - 12 = 18 (left: 18)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 5 * 6 = 30 (left: 30 12) -> 30 - 12 = 18 (left: 18) -> 18 / 2 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "6 6 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 6 12"
                }
            },
            "Step 4": {
                "Step": "12 - 6 = 6 (left: 2 6 6)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 6 = 6 (left: 2 6 6) -> 6 - 2 = 4 (left: 4 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 6 = 6 (left: 2 6 6) -> 6 - 2 = 4 (left: 4 6) -> 3 + 9 = 12 (left: 12 5)"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 6 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "5 6 12"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 5 + 6 = 11 (left: 11 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 5 + 6 = 11 (left: 11 12) -> 11 / 12 = 0.9166666666666666 (left: 0.9166666666666666)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 5 + 6 = 11 (left: 11 12) -> 11 / 12 = 0.9166666666666666 (left: 0.9166666666666666) -> 0.9166666666666666 * 2 = 1.8333333333333332",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 + 12 = 48 (left: 48)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 + 12 = 48 (left: 48) -> There are no possible next steps for the number 48 as it is already a single number."
            }
        },
        "Input": "2 3 6 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1058": {
        "puzzle": "2 4 4 5",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 4 4 5)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 4 5"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 5 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 + 6 = 11 (left: 4 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 + 6 = 11 (left: 4 11) -> 11 / 4 = 2.75 (left: 2.75)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 4 5"
                }
            },
            "Step 4": {
                "Step": "2 * 4 = 8 (left: 4 5 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 * 4 = 8 (left: 4 5 8) -> 8 - 4 = 4 (left: 4 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 4 = 8 (left: 4 5 8) -> 8 - 4 = 4 (left: 4 5) -> 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "No possible next steps with only one number."
                }
            },
            "Step 7": {
                "Step": "5 - 4 = 1 (left: 2 4 1) -> 1 * 2 = 2 (left: 2) -> No possible next steps with only one number. -> ",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "5"
                }
            },
            "Step 8": {
                "Step": "2 * 4 = 8 (left: 4 5 8) -> 8 - 4 = 4 (left: 4 5) -> 5 -> 5 / 5 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "Without knowing the input values, it's difficult to suggest specific next steps. Can you please provide the input numbers so I can help you with possible calculations?"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 - 4 = 1 (left: 2 4 1)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 4 5"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 5 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30) -> 4 + 30 = 34 (left: 34)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "2 4 5"
                }
            },
            "Step 4": {
                "Step": "4 - 2 = 2 (left: 2 4 5) -> Possible",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 - 2 = 2 (left: 2 4 5) -> Possible -> It seems like the input might be missing. Could you please provide the input so I can suggest possible next steps?",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 - 2 = 2 (left: 2 4 5) -> Possible -> It seems like the input might be missing. Could you please provide the input so I can suggest possible next steps? -> Without knowing the input values, it's difficult to suggest specific next steps. Can you please provide the input numbers so I can help you with possible calculations?",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "40"
                }
            },
            "Step 7": {
                "Step": "4 / 2 = 2 (left: 2 4 5) -> 2 * 4 = 8 (left: 8 5) -> 8 * 5 = 40 (left: 40) -> There are no possible next steps with the input 40.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 / 2 = 2 (left: 2 4 5) -> 2 * 4 = 8 (left: 8 5) -> 8 * 5 = 40 (left: 40) -> There are no possible next steps with the input 40. -> There are no possible next steps with the input 40.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 4 5 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 5 6"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30) -> 10 + 5 = 15 (left: 15 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30) -> 10 + 5 = 15 (left: 15 2) -> 15 + 2 = 17 (left: 17)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "2 4 5"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 4 5"
                }
            },
            "Step 4": {
                "Step": "5 - 4 = 1 (left: 2 4 1)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 - 4 = 1 (left: 2 4 1) -> 1 * 2 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 - 4 = 1 (left: 2 4 1) -> 1 * 2 = 2 (left: 2) -> No possible next steps with only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "2.75"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 + 6 = 11 (left: 4 11) -> 11 / 4 = 2.75 (left: 2.75) -> 2.75 - 8 = -5.25 (left: -5.25 8)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 + 6 = 11 (left: 4 11) -> 11 / 4 = 2.75 (left: 2.75) -> 2.75 - 8 = -5.25 (left: -5.25 8) -> -5.25 / 8 = -0.65625 (left: -0.65625)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "Without knowing the input values, it's difficult to suggest specific next steps. Can you please provide the input numbers so I can help you with possible calculations?"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 - 2 = 2 (left: 2 4 5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 4 5"
                }
            },
            "Step 1": {
                "Step": "4 - 2 = 2 (left: 2 4 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 - 2 = 2 (left: 2 4 5) -> 4 * 5 = 20 (left: 2 20)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 - 2 = 2 (left: 2 4 5) -> 4 * 5 = 20 (left: 2 20) -> 2 * 20 = 40 (left: 40)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 4 5"
                }
            },
            "Step 4": {
                "Step": "5 - 4 = 1 (left: 2 4 1)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 - 4 = 1 (left: 2 4 1) -> 2 + 4 = 6 (left: 1 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 - 4 = 1 (left: 2 4 1) -> 2 + 4 = 6 (left: 1 6) -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "Without knowing the input values, it's difficult to suggest specific next steps. Can you please provide the input numbers so I can help you with possible calculations?"
                }
            },
            "Step 7": {
                "Step": "4 - 2 = 2 (left: 2 4 5) -> Possible -> It seems like the input might be missing. Could you please provide the input so I can suggest possible next steps? -> Without knowing the input values, it's difficult to suggest specific next steps. Can you please provide the input numbers so I can help you with possible calculations? -> Once you provide the input values, I can suggest specific calculations to reach a desired outcome. Let me know the numbers you are working with so I can assist you further.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 - 2 = 2 (left: 2 4 5) -> Possible -> It seems like the input might be missing. Could you please provide the input so I can suggest possible next steps? -> Without knowing the input values, it's difficult to suggest specific next steps. Can you please provide the input numbers so I can help you with possible calculations? -> Once you provide the input values, I can suggest specific calculations to reach a desired outcome. Let me know the numbers you are working with so I can assist you further. -> Once you provide the input values, I can suggest specific calculations to reach a desired outcome. Let me know the numbers you are working with so I can assist you further.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 4 5 6)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 4 5"
                }
            },
            "Step 1": {
                "Step": "5 - 4 = 1 (left: 2 4 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 - 4 = 1 (left: 2 4  -> 4 - 2 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 - 4 = 1 (left: 2 4  -> 4 - 2 = 2 (left: 2) -> There are no possible next steps with just one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 4 5"
                }
            },
            "Step 4": {
                "Step": "4 / 2 = 2 (left: 2 4 5)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 / 2 = 2 (left: 2 4 5) -> 2 * 4 = 8 (left: 8 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 2 = 2 (left: 2 4 5) -> 2 * 4 = 8 (left: 8 5) -> 8 * 5 = 40 (left: 40)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "Without knowing the input values, it's difficult to suggest specific next steps. Can you please provide the input numbers so I can help you with possible calculations?"
                }
            },
            "Step 7": {
                "Step": "4 - 2 = 2 (left: 2 4 5) -> Possible -> It seems like the input might be missing. Could you please provide the input so I can suggest possible next steps? -> Without knowing the input values, it's difficult to suggest specific next steps. Can you please provide the input numbers so I can help you with possible calculations? -> Once you provide the input numbers, I can suggest possible calculations to reach a desired outcome.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 - 2 = 2 (left: 2 4 5) -> Possible -> It seems like the input might be missing. Could you please provide the input so I can suggest possible next steps? -> Without knowing the input values, it's difficult to suggest specific next steps. Can you please provide the input numbers so I can help you with possible calculations? -> Once you provide the input numbers, I can suggest possible calculations to reach a desired outcome. -> Since you have not provided any input numbers, I am unable to suggest possible calculations. Please provide the input numbers you would like to work with.",
                "Pruning": null
            }
        },
        "Input": "2 4 4 5",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1059": {
        "puzzle": "2 4 4 10",
        "Agent 0": {
            "Step 0": {
                "Step": "4 / 2 = 2 (left: 2 4 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 4 10"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 6 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 -",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 - -> 10 * 2 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 - 4 = 6 (left: 6 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 - 4 = 6 (left: 6 10) -> 10 - 6 = 4 (left: 4 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 - 4 = 6 (left: 6 10) -> 10 - 6 = 4 (left: 4 10) -> 10 / 4 = 2.5 (left: 2.5)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "20"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "No possible next steps."
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 + 6 = 10 (left: 10 10) -> 10 - 10 = 0 (left: 0) -> No possible next steps. -> There are no possible next steps for the given input.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 + 6 = 10 (left: 10 10) -> 10 - 10 = 0 (left: 0) -> No possible next steps. -> There are no possible next steps for the given input. -> N/A",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "No possible next steps."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 / 2 = 2 (left: 2 4 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 / 4 = 2.5 (left: 2.5 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 / 4 = 2.5 (left: 2.5 10) -> 10 + 2.5 = 12.5 (left: 2.5 12.5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 / 4 = 2.5 (left: 2.5 10) -> 10 + 2.5 = 12.5 (left: 2.5 12.5) -> 2.5 * 5 = 12.5 (left: 12.5)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "4 6 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 4 10"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 4 6 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 6 - 4 = 2 (left: 2 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 6 - 4 = 2 (left: 2 10) -> 2 * 10 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "4 7"
                }
            },
            "Step 7": {
                "Step": "10 + 2 = 12 (left: 4 4 12) -> Input: 5 7 9 -> 9 - 5 = 4 (left: 4 7) -> Possible next steps:",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 + 2 = 12 (left: 4 4 12) -> Input: 5 7 9 -> 9 - 5 = 4 (left: 4 7) -> Possible next steps: -> There seems to be an error in the input as no numbers were provided. Please provide the numbers to generate possible next steps.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 / 2 = 2 (left: 2 4 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 4 10"
                }
            },
            "Step 1": {
                "Step": "10 - 2 = 8 (left: 4 4 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 2 = 8 (left: 4 4 8) -> 8 - 4 = 4 (left: 4 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 2 = 8 (left: 4 4 8) -> 8 - 4 = 4 (left: 4 8) -> 4 + 8 = 12 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 4 10"
                }
            },
            "Step 4": {
                "Step": "4 * 2 = 8 (left: 4 8 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 * 2 = 8 (left: 4 8 10) -> 10 / 4 = 2.5 (left: 2.5 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 2 = 8 (left: 4 8 10) -> 10 / 4 = 2.5 (left: 2.5 8) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "8 12"
                }
            },
            "Step 7": {
                "Step": "10 - 2 = 8 (left: 4 4 8) -> 8 - 4 = 4 (left: 4 8) -> 4 + 8 = 12 (left: 8 12) -> 8 - 12 = -4 (left: -4)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "8 0.15625"
                }
            },
            "Step 8": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 10 / 2 = 5 (left: 4 5) -> 5 / 4 = 1.25 (left: 1.25) -> 1.25 / 8 = 0.15625 (left: 8 0.15625) -> 8 + 0.15625 = 8.15625 (left: 8.15625)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "8 0.15625"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 / 2 = 2 (left: 2 4 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 4 10"
                }
            },
            "Step 1": {
                "Step": "10 + 2 = 12 (left: 4 4 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 2 = 12 (left: 4 4 12) -> Input: 5 7 9",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 + 2 = 12 (left: 4 4 12) -> Input: 5 7 9 -> 9 - 5 = 4 (left: 4 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 + 6 = 10 (left: 10 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 + 6 = 10 (left: 10 10) -> 10 - 10 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 + 6 = 10 (left: 10 10) -> 10 - 10 = 0 (left: 0) -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "Possible next steps:"
                }
            },
            "Step 7": {
                "Step": "4 * 2 = 8 (left: 4 8 10) -> 10 / 4 = 2.5 (left: 2.5 8) -> Possible next steps: -> There are no possible next steps with the given input.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 * 2 = 8 (left: 4 8 10) -> 10 / 4 = 2.5 (left: 2.5 8) -> Possible next steps: -> There are no possible next steps with the given input. -> There are no possible next steps with the given input.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 4 6 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 4 10"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 6 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 6 + 4 = 10 (left: 10 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 6 + 4 = 10 (left: 10 10) -> 10 + 10 = 20 (left: 20) ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "2 4 10"
                }
            },
            "Step 4": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 10 / 2 = 5 (left: 4 5)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 10 / 2 = 5 (left: 4 5) -> 5 / 4 = 1.25 (left: 1.25)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 10 / 2 = 5 (left: 4 5) -> 5 / 4 = 1.25 (left: 1.25) -> 1.25 / 8 = 0.15625 (left: 8 0.15625)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "4 7"
                }
            },
            "Step 7": {
                "Step": "10 + 2 = 12 (left: 4 4 12) -> Input: 5 7 9 -> 9 - 5 = 4 (left: 4 7) -> 4 - 7 = -3 (left: -3)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "Possible next steps:"
                }
            },
            "Step 8": {
                "Step": "4 * 2 = 8 (left: 4 8 10) -> 10 / 4 = 2.5 (left: 2.5 8) -> Possible next steps: -> There are no possible next steps with the given input.",
                "Pruning": null
            }
        },
        "Input": "2 4 4 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1060": {
        "puzzle": "3 3 3 4",
        "Agent 0": {
            "Step 0": {
                "Step": "4 / 3 = 1.33 (left: 1.33 3 3)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 3 4"
                }
            },
            "Step 1": {
                "Step": "3 / 3 = 1 (left: 1 3 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 / 3 = 1 (left: 1 3 4) -> 3 + 1 = 4 (left: 4 4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 / 3 = 1 (left: 1 3 4) -> 3 + 1 = 4 (left: 4 4) -> 4 * 4 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 3 4"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 3 ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 3  -> 9 / 3 = 3 (left: 3 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 3  -> 9 / 3 = 3 (left: 3 3) -> 3 - 3 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "0"
                }
            },
            "Step 7": {
                "Step": "3 / 3 = 1 (left: 1 3 4) -> 1 + 3 = 4 (left: 4 4) -> 4 - 4 = 0 (left: 0) -> No possible next steps as there are no numbers to operate on.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 / 3 = 1 (left: 1 3 4) -> 1 + 3 = 4 (left: 4 4) -> 4 - 4 = 0 (left: 0) -> No possible next steps as there are no numbers to operate on. -> There are no numbers provided to operate on.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 / 3 = 1 (left: 1 3 4)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 3 4"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 3 4 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 3 4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 3 4) -> 4 / 3 = 1.33 (left: 1.33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 3 4"
                }
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 6 3 4)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 6 3 4) -> 6 * 3 = 18 (left: 4 18)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 6 3 4) -> 6 * 3 = 18 (left: 4 18) -> 18 / 4 = 4.5 (left: 4.5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1"
                }
            },
            "Step 7": {
                "Step": "3 / 3 = 1 (left: 1 3 4) -> 4 - 3 = 1 (left: 1 1) -> 1 * 1 = 1 (left: 1) -> There are no possible next steps with the input of 1.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 / 3 = 1 (left: 1 3 4) -> 4 - 3 = 1 (left: 1 1) -> 1 * 1 = 1 (left: 1) -> There are no possible next steps with the input of 1. -> There are no possible next steps with the input of 1.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 3 6 4)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 3 4"
                }
            },
            "Step 1": {
                "Step": "3 / 3 = 1 (left: 1 3 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 / 3 = 1 (left: 1 3 4) -> 4 - 3 = 1 (left: 1 1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 / 3 = 1 (left: 1 3 4) -> 4 - 3 = 1 (left: 1 1) -> 1 * 1 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 3 4"
                }
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 6 3 ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 6 3  -> 6 - 3 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 6 3  -> 6 - 3 = 3 (left: 3) -> There are no possible next steps with just the number 3.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "0"
                }
            },
            "Step 7": {
                "Step": "3 / 3 = 1 (left: 1 3 4) -> 1 + 3 = 4 (left: 4 4) -> 4 - 4 = 0 (left: 0) -> No possible next steps as there is no input provided.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 / 3 = 1 (left: 1 3 4) -> 1 + 3 = 4 (left: 4 4) -> 4 - 4 = 0 (left: 0) -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 - 3 = 1 (left: 3 3 1)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 3 4"
                }
            },
            "Step 1": {
                "Step": "4 - 3 = 1 (left: 3 1 1)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 - 3 = 1 (left: 3 1 1) -> 3 / 1 = 3 (left: 3 1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 - 3 = 1 (left: 3 1 1) -> 3 / 1 = 3 (left: 3 1) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 3 4"
                }
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 3 6 4)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 3 6 4) -> 6 - 3 = 3 (left: 3 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 3 6 4) -> 6 - 3 = 3 (left: 3 4) -> 3 + 4 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "7"
                }
            },
            "Step 7": {
                "Step": "3 + 3 = 6 (left: 3 6 4) -> 6 - 3 = 3 (left: 3 4) -> 3 + 4 = 7 (left: 7) -> 7 / 8 = 0.875 (left: 0.875 8)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 + 3 = 6 (left: 3 6 4) -> 6 - 3 = 3 (left: 3 4) -> 3 + 4 = 7 (left: 7) -> 7 / 8 = 0.875 (left: 0.875 8) -> 0.875 * 8 = 7 (left: 7)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 3 3 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 3 4"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 3 6 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 3 6 4) -> 3 * 6 = 18 (left: 4 18)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 3 6 4) -> 3 * 6 = 18 (left: 4 18) -> 18 - 4 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 3 4"
                }
            },
            "Step 4": {
                "Step": "3 / 3 = 1 (left: 1 3 4)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 / 3 = 1 (left: 1 3 4) -> 1 + 3 = 4 (left: 4 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 / 3 = 1 (left: 1 3 4) -> 1 + 3 = 4 (left: 4 4) -> 4 - 4 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "Possible next steps:"
                }
            },
            "Step 7": {
                "Step": "4 - 3 = 1 (left: 3 1 1) -> 3 / 1 = 3 (left: 3 1) -> Possible next steps: -> There are no possible next steps with the given input.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 - 3 = 1 (left: 3 1 1) -> 3 / 1 = 3 (left: 3 1) -> Possible next steps: -> There are no possible next steps with the given input. -> There are no possible next steps with the given input.",
                "Pruning": null
            }
        },
        "Input": "3 3 3 4",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            }
        ]
    },
    "1061": {
        "puzzle": "2 2 2 7",
        "Agent 0": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 2 2 5)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 7"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 2 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 2 7) -> 7 - 4 = 3 (left: 3 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 2 7) -> 7 - 4 = 3 (left: 3 2) -> 3 - 2 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 7"
                }
            },
            "Step 4": {
                "Step": "2 * 2 = 4 (left: 4 7 4)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 * 2 = 4 (left: 4 7 4) -> 7 - 4 = 3 (left: ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 2 = 4 (left: 4 7 4) -> 7 - 4 = 3 (left:  -> There are several possible next steps depending on the operations allowed. Without further information on the operations to be used, it is difficult to provide a specific answer.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "There are no possible next steps for the input provided."
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 4 2 7) -> 7 - 2 = 5 (left: 4 5) -> Possible next steps: -> There are no possible next steps for the input provided. -> There are no possible next steps for the input provided.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 4 2 7) -> 7 - 2 = 5 (left: 4 5) -> Possible next steps: -> There are no possible next steps for the input provided. -> There are no possible next steps for the input provided. -> There are no possible next steps for the input provided.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 2 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 7"
                }
            },
            "Step 1": {
                "Step": "2 * 7 = 14 (left: 2 2 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 2 / 2 = 1 (left: 1 14)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 2 / 2 = 1 (left: 1 14) -> 1 * 14 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 7"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 2 4 7)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 2 4 7) -> 7 - 2 = 5 (left: 4 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 2 4 7) -> 7 - 2 = 5 (left: 4 5) -> 4 - 5 = -1 (left: -1)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 4 2 7) -> 7 - 4 = 3 (left: 3 2) -> 3 - 2 = 1 (left: 1) -> 1 / 1 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "There are several possible next steps depending on the operations allowed. Without further information on the operations to be used, it is difficult to provide a specific answer."
                }
            },
            "Step 8": {
                "Step": "2 * 2 = 4 (left: 4 7 4) -> 7 - 4 = 3 (left:  -> There are several possible next steps depending on the operations allowed. Without further information on the operations to be used, it is difficult to provide a specific answer. -> - 2 + 8 = 10 (left: 8 10 14)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 2 2 5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 7"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 2 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 2 7) -> 7 - 2 = 5 (left: 4 5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 2 7) -> 7 - 2 = 5 (left: 4 5) -> 5 - 4 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 7"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 4 7)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 4 4 7) -> 7 - 4 = 3 (left: 4 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 4 4 7) -> 7 - 4 = 3 (left: 4 3) -> 4 + 3 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "1"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 4 2 7) -> 7 - 4 = 3 (left: 3 2) -> 3 - 2 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 4 2 7) -> 7 - 4 = 3 (left: 3 2) -> 3 - 2 = 1 (left: 1) -> 1 + 1 = 2 -> Input: 10 5 3 2",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 2 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 7"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 2 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 2 7) -> 4 / 2 = ",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 2 7) -> 4 / 2 =  -> 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 2 5"
                }
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 * 2 = 4 (left: 4 5)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 * 2 = 4 (left: 4 5) -> 4 + 5 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 * 2 = 4 (left: 4 5) -> 4 + 5 = 9 (left: 9) -> 9 - 2 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "1"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "15"
                }
            },
            "Step 7": {
                "Step": "2 / 2 = 1 (left: 1 2 7) -> Input: 3 5 -> 3 * 5 = 15 (left: 15) -> There are no possible next steps for the input 15.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 / 2 = 1 (left: 1 2 7) -> Input: 3 5 -> 3 * 5 = 15 (left: 15) -> There are no possible next steps for the input 15. -> There are no possible next steps for the input 15.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 2 4 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 2 7"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 2 7) -> 7 - 2 = 5 (left: 4 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 2 7) -> 7 - 2 = 5 (left: 4 5) -> Possible next steps:",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 2 7) -> 7 - 2 = 5 (left: 4 5) -> Possible next steps: -> There are no possible next steps for the input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 7"
                }
            },
            "Step 4": {
                "Step": "2 / 2 = 1 (left: 1 2 7)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 / 2 = 1 (left: 1 2 7) -> Input: 3 5",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 / 2 = 1 (left: 1 2 7) -> Input: 3 5 -> 3 * 5 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 4 2 7) -> 7 - 2 = 5 (left: 4 5) -> 5 - 4 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 4 2 7) -> 7 - 2 = 5 (left: 4 5) -> 5 - 4 = 1 (left: 1) -> 1 + 1 = 2 -> 1 - 1 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "There are no possible next steps for the input provided."
                }
            }
        },
        "Input": "2 2 2 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1062": {
        "puzzle": "4 9 10 11",
        "Agent 0": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 10 11 36)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9 "
                }
            },
            "Step 1": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 9 - 4 = 5 (left: 5 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 9 - 4 = 5 (left: 5 9) -> 9 - 5 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 9 - 4 = 5 (left: 5 9) -> 9 - 5 = 4 (left: 4) -> 4 + 4 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "4 8 14"
                }
            },
            "Step 4": {
                "Step": "11 - 10 = 1 (left:  -> It seems like you did not provide an input for the calculation. Could you please provide the numbers you would like to use for the next step? -> 8 / 2 = 4 (left: 4 8 14) -> 8 / 4 = 2 (left: 2 14)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 10 = 1 (left:  -> It seems like you did not provide an input for the calculation. Could you please provide the numbers you would like to use for the next step? -> 8 / 2 = 4 (left: 4 8 14) -> 8 / 4 = 2 (left: 2 14) -> 14 / 2 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "4 9 "
                }
            },
            "Step 6": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 1 + 3 = 4 (left: 4 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "4 8 14"
                }
            },
            "Step 7": {
                "Step": "11 - 10 = 1 (left:  -> It seems like you did not provide an input for the calculation. Could you please provide the numbers you would like to use for the next step? -> 8 / 2 = 4 (left: 4 8 14) -> 8 / 4 = 2 (left: 2 8)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 10 = 1 (left:  -> It seems like you did not provide an input for the calculation. Could you please provide the numbers you would like to use for the next step? -> 8 / 2 = 4 (left: 4 8 14) -> 8 / 4 = 2 (left: 2 8) -> 2 + 8 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "There is only one possible next step for the input 36:"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 / 4 = 2.25 (left: 2.25 10 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 10 11"
                }
            },
            "Step 1": {
                "Step": "11 - 4 = 7 (left: ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 4 = 7 (left:  -> Please provide a set of numbers to determine the possible next steps.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 4 = 7 (left:  -> Please provide a set of numbers to determine the possible next steps. -> Without a set of numbers provided, I am unable to determine the possible next steps. Please provide a set of numbers for me to analyze.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 10 11"
                }
            },
            "Step 4": {
                "Step": "10 + 11 = 21 (left: 4 9 21)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 + 11 = 21 (left: 4 9 21) -> 21 / 4 = 5.25 (left: 5.25 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 + 11 = 21 (left: 4 9 21) -> 21 / 4 = 5.25 (left: 5.25 9) -> 5.25 * 9 = 47.25 (left: 47.25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "4 8 14"
                }
            },
            "Step 7": {
                "Step": "11 - 10 = 1 (left:  -> It seems like you did not provide an input for the calculation. Could you please provide the numbers you would like to use for the next step? -> 8 / 2 = 4 (left: 4 8 14) -> 4 * 8 = 32 (left: 32 14)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 10 = 1 (left:  -> It seems like you did not provide an input for the calculation. Could you please provide the numbers you would like to use for the next step? -> 8 / 2 = 4 (left: 4 8 14) -> 4 * 8 = 32 (left: 32 14) -> 32 + 14 = 46 (left: 46)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "0.619 + 0.619 = 1.238 "
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 9 = 13 (left: 10 11 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9 "
                }
            },
            "Step 1": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 4 * 9 = 36 (left: 9 36)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> There is only one possible next step for the input 36:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9 "
                }
            },
            "Step 4": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 9 + 4 = 13 (left: 4 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 9 + 4 = 13 (left: 4 13) -> Input: 7 9",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 9 + 4 = 13 (left: 4 13) -> Input: 7 9 -> 9 + 7 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "4 8 14"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "4 8 14"
                }
            },
            "Step 7": {
                "Step": "11 - 10 = 1 (left:  -> It seems like you did not provide an input for the calculation. Could you please provide the numbers you would like to use for the next step? -> 8 / 2 = 4 (left: 4 8 14) -> 14 - 8 = 6 (left: 4 6)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 10 = 1 (left:  -> It seems like you did not provide an input for the calculation. Could you please provide the numbers you would like to use for the next step? -> 8 / 2 = 4 (left: 4 8 14) -> 14 - 8 = 6 (left: 4 6) -> 4 + 6 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "This input is missing numbers to perform any calculations. Can you provide the numbers again so I can suggest possible next steps?"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 * 11 = 110 (left: 4 9 ",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9 "
                }
            },
            "Step 1": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 4 * 9 = 36 (left: 9 36)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 + 36 = 45 (left: 45)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 + 36 = 45 (left: 45) -> There are no possible next steps with just the number 45.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "10 11 13"
                }
            },
            "Step 4": {
                "Step": "4 + 9 = 13 (left: 10 11 13) -> 10 + 11 = 21 (left: 13 21)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 + 9 = 13 (left: 10 11 13) -> 10 + 11 = 21 (left: 13 21) -> 13 / 21 = 0.619 (left: 0.619)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 9 = 13 (left: 10 11 13) -> 10 + 11 = 21 (left: 13 21) -> 13 / 21 = 0.619 (left: 0.619) -> 0.619 + 0.619 = 1.238 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "4 8 14"
                }
            },
            "Step 7": {
                "Step": "11 - 10 = 1 (left:  -> It seems like you did not provide an input for the calculation. Could you please provide the numbers you would like to use for the next step? -> 8 / 2 = 4 (left: 4 8 14) -> ",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "4 8 14"
                }
            },
            "Step 8": {
                "Step": "11 - 10 = 1 (left:  -> It seems like you did not provide an input for the calculation. Could you please provide the numbers you would like to use for the next step? -> 8 / 2 = 4 (left: 4 8 14) -> 14 / 4 = 3.5 (",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 10 11 36)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 10 11"
                }
            },
            "Step 1": {
                "Step": "11 - 10 = 1 (left: ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 10 = 1 (left:  -> It seems like you did not provide an input for the calculation. Could you please provide the numbers you would like to use for the next step?",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 10 = 1 (left:  -> It seems like you did not provide an input for the calculation. Could you please provide the numbers you would like to use for the next step? -> 8 / 2 = 4 (left: 4 8 14)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "4 8 14"
                }
            },
            "Step 4": {
                "Step": "11 - 10 = 1 (left:  -> It seems like you did not provide an input for the calculation. Could you please provide the numbers you would like to use for the next step? -> 8 / 2 = 4 (left: 4 8 14) -> 8 - 4 = 4 (left: 4 14)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 10 = 1 (left:  -> It seems like you did not provide an input for the calculation. Could you please provide the numbers you would like to use for the next step? -> 8 / 2 = 4 (left: 4 8 14) -> 8 - 4 = 4 (left: 4 14) -> Possible next steps:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 10 = 1 (left:  -> It seems like you did not provide an input for the calculation. Could you please provide the numbers you would like to use for the next step? -> 8 / 2 = 4 (left: 4 8 14) -> 8 - 4 = 4 (left: 4 14) -> Possible next steps: -> This input is missing numbers to perform any calculations. Can you provide the numbers again so I can suggest possible next steps?",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "4 8 14"
                }
            },
            "Step 7": {
                "Step": "11 - 10 = 1 (left:  -> It seems like you did not provide an input for the calculation. Could you please provide the numbers you would like to use for the next step? -> 8 / 2 = 4 (left: 4 8 14) -> 14 - 8 = 6 (left: 6 14)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 10 = 1 (left:  -> It seems like you did not provide an input for the calculation. Could you please provide the numbers you would like to use for the next step? -> 8 / 2 = 4 (left: 4 8 14) -> 14 - 8 = 6 (left: 6 14) -> 6 / 14 = 0.42857 (left: 0.42857)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "4 + 4 = 8"
                }
            }
        },
        "Input": "4 9 10 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1063": {
        "puzzle": "7 9 10 11",
        "Agent 0": {
            "Step 0": {
                "Step": "7 * 9 = 63 (left: 10 11 63)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 10 11"
                }
            },
            "Step 1": {
                "Step": "7 * 9 = 63 (left: 10 11 63)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 63 / 21 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 10 11"
                }
            },
            "Step 4": {
                "Step": "7 * 9 = 63 (left: 10 11 63)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 63 - 10 = 53 (left: 10 11 53)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 63 - 10 = 53 (left: 10 11 53) -> 10 + 11 = 21 (left: 21 53)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "21 53"
                }
            },
            "Step 7": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 63 - 10 = 53 (left: 10 11 53) -> 10 + 11 = 21 (left: 21 53) -> 21 * 53 = 1113 (left: 1113)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "167"
                }
            },
            "Step 8": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 11 * 7 = 77 (left: 77 90) -> 77 + 90 = 167 (left: 167) -> 1 * 6 = 6 (left: 6 7)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 * 11 = 110 (left: 7 9 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 10 11"
                }
            },
            "Step 1": {
                "Step": "9 * 10 = 90 (left: 7 11 90)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 7 = 12.857 (left: 12.857 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 7 = 12.857 (left: 12.857 11) -> 12.857 + 11 = 23.857 (left: 11 23.857)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 10 11"
                }
            },
            "Step 4": {
                "Step": "9 * 10 = 90 (left: 7 11 90)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 11 / 7 = 1.57 (left: 1.57 11 90)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 11 / 7 = 1.57 (left: 1.57 11 90) -> 90 - 11 = 79 (left: 1.57 79)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "21 53"
                }
            },
            "Step 7": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 63 - 10 = 53 (left: 10 11 53) -> 10 + 11 = 21 (left: 21 53) -> 21 + 53 = 74 (left: 74)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "3"
                }
            },
            "Step 8": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 63 / 21 = 3 (left: 3) -> There are no possible next steps with the input of 3.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 * 10 = 90 (left: 7 11 90)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 10 11"
                }
            },
            "Step 1": {
                "Step": "9 * 10 = 90 (left: 7 11 90)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 11 * 7 = 77 (left: 77 90)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 11 * 7 = 77 (left: 77 90) -> 77 + 90 = 167 (left: 167)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 10 11"
                }
            },
            "Step 4": {
                "Step": "9 + 10 = 19 (left: 7 11 19)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 + 10 = 19 (left: 7 11 19) -> 7 + 11 = 18 (left: 18 19)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 10 = 19 (left: 7 11 19) -> 7 + 11 = 18 (left: 18 19) -> 18 / 19 = 0.947368421 (left: 0.947368421)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "1.57 79"
                }
            },
            "Step 7": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 11 / 7 = 1.57 (left: 1.57 11 90) -> 90 - 11 = 79 (left: 1.57 79) -> 79 / 1.57 = 50.32 (left: 50.32)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "11 23.857"
                }
            },
            "Step 8": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 7 = 12.857 (left: 12.857 11) -> 12.857 + 11 = 23.857 (left: 11 23.857) -> 11 / 23.857 = 0.460 (left: 0.460)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "11 - 10 = 1 (left: 7 9 1)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 10 11"
                }
            },
            "Step 1": {
                "Step": "9 + 10 = 19 (left: 7 11 19)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 10 = 19 (left: 7 11 19) -> 7 + 11 = 18 (left: 18 19)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 + 10 = 19 (left: 7 11 19) -> 7 + 11 = 18 (left: 18 19) -> 18 + 19 = 37",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 10 11"
                }
            },
            "Step 4": {
                "Step": "9 + 10 = 19 (left: 7 11 19)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 + 10 = 19 (left: 7 11 19) -> 11 * 7 = 77 (left: 19 77)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 10 = 19 (left: 7 11 19) -> 11 * 7 = 77 (left: 19 77) -> 19 - 77 = -58 (left: -58)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "0.947368421"
                }
            },
            "Step 7": {
                "Step": "9 + 10 = 19 (left: 7 11 19) -> 7 + 11 = 18 (left: 18 19) -> 18 / 19 = 0.947368421 (left: 0.947368421) -> 1.894736842 / 2 = 0.947368421 (left: 0.947368421)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "167"
                }
            },
            "Step 8": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 11 * 7 = 77 (left: 77 90) -> 77 + 90 = 167 (left: 167) -> 1 * 6 * 7 = 42 (left: 42)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "7 + 9 = 16 (left: 10 11 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 10 11"
                }
            },
            "Step 1": {
                "Step": "9 * 10 = 90 (left: 7 11 90)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 11 * 7 = 77 (left: 77 90)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 11 * 7 = 77 (left: 77 90) -> 77 + 90 = 167 (left: 167)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 10 11"
                }
            },
            "Step 4": {
                "Step": "9 + 10 = 19 (left: 7 19 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 + 10 = 19 (left: 7 19 11) -> 7 * 19 = 133 (left: 11 133)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 10 = 19 (left: 7 19 11) -> 7 * 19 = 133 (left: 11 133) -> 11 + 133 = 144 (left: 144)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "0.947368421"
                }
            },
            "Step 7": {
                "Step": "9 + 10 = 19 (left: 7 11 19) -> 7 + 11 = 18 (left: 18 19) -> 18 / 19 = 0.947368421 (left: 0.947368421) -> 0.947368421 * 0.947368421 = 0.897959184 (left: 0.897959184)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "1.57 79"
                }
            },
            "Step 8": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 11 / 7 = 1.57 (left: 1.57 11 90) -> 90 - 11 = 79 (left: 1.57 79) -> 79 - 1.57 = 77.43 (left: 77.43)",
                "Pruning": "NA"
            }
        },
        "Input": "7 9 10 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "1064": {
        "puzzle": "1 4 5 7",
        "Agent 0": {
            "Step 0": {
                "Step": "7 - 1 = 6 (left: 4 5 ",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 5 7"
                }
            },
            "Step 1": {
                "Step": "1 + 4 = 5 (left: 5 5 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> 5 * 5 = 25 (left: 7 25)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> 5 * 5 = 25 (left: 7 25) -> 3 + 9 = 12 (left: 12 27 81)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 5 7"
                }
            },
            "Step 4": {
                "Step": "5 - 1 = 4 (left: 4 7)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 - 1 = 4 (left: 4 7) -> 7 - 4 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 - 1 = 4 (left: 4 7) -> 7 - 4 = 3 (left: 3) -> 6 / 3 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "12 27 81"
                }
            },
            "Step 7": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> 5 * 5 = 25 (left: 7 25) -> 3 + 9 = 12 (left: 12 27 81) -> 12 * 27 = 324 (left: 324 81)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> 5 * 5 = 25 (left: 7 25) -> 3 + 9 = 12 (left: 12 27 81) -> 12 * 27 = 324 (left: 324 81) -> 324 + 81 = 405 (left: 405)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "There are no possible next steps for the input provided."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "1 + 4 = 5 (left: 5 5 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 5 7"
                }
            },
            "Step 1": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10) -> 10 / 7 = 1.42857142857 (left: 1.42857142857)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10) -> 10 / 7 = 1.42857142857 (left: 1.42857142857) -> 1.42857142857 * 2 = 2.85714285714 (left: 1.42857142857 2.85714285714)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 5 "
                }
            },
            "Step 4": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 4 * 5 = 20 (left: 20)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 4 * 5 = 20 (left: 20) -> 20 / 2 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 4 * 5 = 20 (left: 20) -> 20 / 2 = 10 (left: 10) -> 10 + 10 = 20",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "12 27 81"
                }
            },
            "Step 7": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> 5 * 5 = 25 (left: 7 25) -> 3 + 9 = 12 (left: 12 27 81) -> 27 * 3 = 81 (left: 12 81)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> 5 * 5 = 25 (left: 7 25) -> 3 + 9 = 12 (left: 12 27 81) -> 27 * 3 = 81 (left: 12 81) -> 12 + 81 = 93 (left: 93)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "There are no possible next steps for the input provided."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 1 = 5 (left: 5 5 7)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "5 5 7"
                }
            },
            "Step 1": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> 7 - 5 = 2 (left: 2 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> 7 - 5 = 2 (left: 2 5) -> 2 + 5 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> 7 - 5 = 2 (left: 2 5) -> 2 + 5 = 7 (left: 7) -> 7 + 8 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "5 5 7"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 5 7"
                }
            },
            "Step 4": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10) -> 7 - 10 = -3 (left: -3 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10) -> 7 - 10 = -3 (left: -3 10) -> -3 - 10 = -13 (left: -13)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "12 27 81"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "12 27 81"
                }
            },
            "Step 7": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> 5 * 5 = 25 (left: 7 25) -> 3 + 9 = 12 (left: 12 27 81) -> 27 / 12 = 2.25 (left: 2.25 81)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> 5 * 5 = 25 (left: 7 25) -> 3 + 9 = 12 (left: 12 27 81) -> 27 / 12 = 2.25 (left: 2.25 81) -> 81 / 2.25 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "There are no possible next steps for the input provided."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 + 2 = 7 (left: 4 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 5 7"
                }
            },
            "Step 1": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 7 / 5 = 1.4 (left: 1.4 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 7 / 5 = 1.4 (left: 1.4 5) -> 1.4 + 5 = 6.4 (left: 6.4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 7 / 5 = 1.4 (left: 1.4 5) -> 1.4 + 5 = 6.4 (left: 6.4) -> There is no clear next step with the input of 6.4 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 5 "
                }
            },
            "Step 4": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 3 + 9 = 12 (left: 12 27)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 3 + 9 = 12 (left: 12 27) -> 27 / 12 = 2.25 (left: 2.25)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 3 + 9 = 12 (left: 12 27) -> 27 / 12 = 2.25 (left: 2.25) -> There are no possible next steps with the input 2.25.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "12 27 81"
                }
            },
            "Step 7": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> 5 * 5 = 25 (left: 7 25) -> 3 + 9 = 12 (left: 12 27 81) -> 27 / 3 = 9 (left: 12 81)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> 5 * 5 = 25 (left: 7 25) -> 3 + 9 = 12 (left: 12 27 81) -> 27 / 3 = 9 (left: 12 81) -> 12 / 81 = 0.148 (left: 0.148)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "There are no possible next steps for the input provided."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 + 4 = 5 (left: 5 5 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 5 7"
                }
            },
            "Step 1": {
                "Step": "5 + 2 = 7 (left: 4 7 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 2 = 7 (left: 4 7 7) -> 4 + 7 = 11 (left: 7 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 2 = 7 (left: 4 7 7) -> 4 + 7 = 11 (left: 7 11) -> 7 / 11 = 0.6363636363636364 (left: 0.6363636363636364)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "12 27 81"
                }
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> 5 * 5 = 25 (left: 7 25) -> 3 + 9 = 12 (left: 12 27 81) -> 27 / 12 = 2.25 (left: 2.25 81)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> 5 * 5 = 25 (left: 7 25) -> 3 + 9 = 12 (left: 12 27 81) -> 27 / 12 = 2.25 (left: 2.25 81) -> Possible next steps:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> 5 * 5 = 25 (left: 7 25) -> 3 + 9 = 12 (left: 12 27 81) -> 27 / 12 = 2.25 (left: 2.25 81) -> Possible next steps: -> There are no possible next steps for the input provided.",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "12 27 81"
                }
            },
            "Step 7": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> 5 * 5 = 25 (left: 7 25) -> 3 + 9 = 12 (left: 12 27 81) -> 12 * 27 = 324 (left: 324 81)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> 5 * 5 = 25 (left: 7 25) -> 3 + 9 = 12 (left: 12 27 81) -> 12 * 27 = 324 (left: 324 81) -> 324 * 81 = 26244 (left: 26244)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "There are no possible next steps for the input provided."
                }
            }
        },
        "Input": "1 4 5 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1065": {
        "puzzle": "3 4 9 9",
        "Agent 0": {
            "Step 0": {
                "Step": "9 - 4 = 5 (left: 3 5 9)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 9 9"
                }
            },
            "Step 1": {
                "Step": "4 + 9 = 13 (left: 3 13 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 9 = 13 (left: 3 13 9) -> 13 - 3 = 10 (left: 10 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 9 = 13 (left: 3 13 9) -> 13 - 3 = 10 (left: 10 9) -> 10 * 9 = 90 (left: 90)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 9 9"
                }
            },
            "Step 4": {
                "Step": "9 - 4 = 5 (left: 3 5 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 5 + 9 = 14 (left: 3 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 5 + 9 = 14 (left: 3 14) -> 3 + 14 = 17 (left: 17)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "There are no valid operations that can be performed on 2.67 since it's already a single number."
                }
            },
            "Step 7": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 9 / 4 = 2.25 (left: 2.25 6) -> 6 / 2.25 = 2.67 (left: 2.67) -> There are no valid operations that can be performed on 2.67 since it's already a single number. -> There are no valid operations that can be performed on 2.67 since it's already a single number.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 9 / 4 = 2.25 (left: 2.25 6) -> 6 / 2.25 = 2.67 (left: 2.67) -> There are no valid operations that can be performed on 2.67 since it's already a single number. -> There are no valid operations that can be performed on 2.67 since it's already a single number. -> There are no valid operations that can be performed on 2.67 since it's already a single number.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 4 9 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 5 9"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> Possible",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> Possible -> The possible next steps would depend on the specific rules or operations that need to be followed. Without more information, it is difficult to determine the exact possible next steps.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> Possible -> The possible next steps would depend on the specific rules or operations that need to be followed. Without more information, it is difficult to determine the exact possible next steps. -> - Dividing the fourth number by the first number: 14 / 2 = 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 4": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> Input: 3 5",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> Input: 3 5 -> 3 + 5 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> Input: 3 5 -> 3 + 5 = 8 (left: 8) -> There are no possible next steps with just the number 8.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "90"
                }
            },
            "Step 7": {
                "Step": "4 + 9 = 13 (left: 3 13 9) -> 13 - 3 = 10 (left: 10 9) -> 10 * 9 = 90 (left: 90) -> 90 + 2 = 92 (left: )",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "- Dividing the fourth number by the first number: 14 / 2 = 7"
                }
            },
            "Step 8": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> Possible -> The possible next steps would depend on the specific rules or operations that need to be followed. Without more information, it is difficult to determine the exact possible next steps. -> - Dividing the fourth number by the first number: 14 / 2 = 7 -> 7 + 8 = 15 (left: 8 15)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 9 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 1": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 4 + 6 = 10 (left: 10 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 4 + 6 = 10 (left: 10 9) -> 10 / 9 = 1.111... (left: 1.111...)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 4 + 6 = 10 (left: 10 9) -> 10 / 9 = 1.111... (left: 1.111...) -> 1.111... / 2 = 0.555... (left: 0.555...)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "4 6 9"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 9 9"
                }
            },
            "Step 4": {
                "Step": "9 / 3 = 3 (left: 3 4 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 / 3 = 3 (left: 3 4 9) -> 4 * 9 = 36 (left: 3 36)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 / 3 = 3 (left: 3 4 9) -> 4 * 9 = 36 (left: 3 36) -> 3 + 36 = 39 (left: 39)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "39"
                }
            },
            "Step 7": {
                "Step": "9 / 3 = 3 (left: 3 4 9) -> 4 * 9 = 36 (left: 3 36) -> 3 + 36 = 39 (left: 39) -> There are no possible next steps for the number 39.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 / 3 = 3 (left: 3 4 9) -> 4 * 9 = 36 (left: 3 36) -> 3 + 36 = 39 (left: 39) -> There are no possible next steps for the number 39. -> 39 / 2 = 19.5",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 3 = 6 (left: 4 6 9)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 1": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 9 / 4 = 2.25 (left: 2.25 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 9 / 4 = 2.25 (left: 2.25 6) -> 6 / 2.25 = 2.67 (left: 2.67)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 9 / 4 = 2.25 (left: 2.25 6) -> 6 / 2.25 = 2.67 (left: 2.67) -> There are no valid operations that can be performed on 2.67 since it's already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 9 9"
                }
            },
            "Step 4": {
                "Step": "4 / 3 = 1.3333 (left: 1.3333 9 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 / 3 = 1.3333 (left: 1.3333 9 9) -> 9 + 1.3333 = 10.3333 (left: 9 10.3333)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 3 = 1.3333 (left: 1.3333 9 9) -> 9 + 1.3333 = 10.3333 (left: 9 10.3333) -> 9 / 10.3333 = 0.8728 (left: 0.8728)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no possible next steps with just the number 8."
                }
            },
            "Step 7": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> Input: 3 5 -> 3 + 5 = 8 (left: 8) -> There are no possible next steps with just the number 8. -> 8 + 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "6 - 4 = 2"
                }
            },
            "Step 8": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 - 4 =  -> 6 - 4 = 2 -> 6 + 4 = 10 (left: 10 2)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 * 3 = 12 (left: 9 9 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 9 9"
                }
            },
            "Step 1": {
                "Step": "3 * 4 = 12 (left: 9 9 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 4 = 12 (left: 9 9 12) -> 12 / 9 = 1.33 (",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 4 = 12 (left: 9 9 12) -> 12 / 9 = 1.33 ( -> 12 - 9 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 9 9"
                }
            },
            "Step 4": {
                "Step": "9 - 3 = 6 (left: 4 6 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 - 4 = ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 - 4 =  -> 6 - 4 = 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no possible next steps with just the number 8."
                }
            },
            "Step 7": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> Input: 3 5 -> 3 + 5 = 8 (left: 8) -> There are no possible next steps with just the number 8. -> 8 + 8 = 16",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> Input: 3 5 -> 3 + 5 = 8 (left: 8) -> There are no possible next steps with just the number 8. -> 8 + 8 = 16 -> 8 - 8 = 0 (left: 0 16)",
                "Pruning": null
            }
        },
        "Input": "3 4 9 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1066": {
        "puzzle": "3 3 6 8",
        "Agent 0": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 6 6 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 6 8"
                }
            },
            "Step 1": {
                "Step": "3 * 6 = 18 (left: 18 6 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 6 = 18 (left: 18 6 8) -> 6 * 8 = 48 (left: 18 48)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 6 = 18 (left: 18 6 8) -> 6 * 8 = 48 (left: 18 48) -> 18 / 48 = 0.375 (left: 0.375)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 6 8"
                }
            },
            "Step 4": {
                "Step": "6 * 3 = 18 (left: 18 3 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 * 3 = 18 (left: 18 3 8) -> 18 - 3 = 15 (left: 15 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 3 = 18 (left: 18 3 8) -> 18 - 3 = 15 (left: 15 8) -> 15 - 8 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "2 2"
                }
            },
            "Step 7": {
                "Step": "8 - 6 = 2 (left: 3 6 2) -> 6 - 3 = 3 (left: 3 6 2) -> 6 / 3 = 2 (left: 2 2) -> 2 + 2 = 4",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 - 6 = 2 (left: 3 6 2) -> 6 - 3 = 3 (left: 3 6 2) -> 6 / 3 = 2 (left: 2 2) -> 2 + 2 = 4 -> 2 - 2 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "There are no possible next steps for the input 120 as it is a single number and cannot be combined with any other numbers using basic arithmetic operations."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 - 6 = 2 (left: 3 6 2)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 6 8"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8) -> 1.5 * 8 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8) -> 1.5 * 8 = 12 (left: 12) -> 12 + 8 = 20 (left: 8 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 6 8"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8) -> 8 - 1.5 = 6.5 (left: 6.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8) -> 8 - 1.5 = 6.5 (left: 6.5) -> There is only one possible next step:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "2 2"
                }
            },
            "Step 7": {
                "Step": "8 - 6 = 2 (left: 3 6 2) -> 6 - 3 = 3 (left: 3 6 2) -> 6 / 3 = 2 (left: 2 2) -> 2 / 2 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "2 2"
                }
            },
            "Step 8": {
                "Step": "8 - 6 = 2 (left: 3 6 2) -> 6 - 3 = 3 (left: 3 6 2) -> 6 / 3 = 2 (left: 2 2) -> 2 + 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "There is only one possible next step:"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 6 8)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 6 8"
                }
            },
            "Step 1": {
                "Step": "8 - 6 = 2 (left: 3 6 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 6 = 2 (left: 3 6 2) -> 6 - 3 = 3 (left: 3 6 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 6 = 2 (left: 3 6 2) -> 6 - 3 = 3 (left: 3 6 2) -> 6 / 3 = 2 (left: 2 2)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 6 8"
                }
            },
            "Step 4": {
                "Step": "8 - 6 = 2 (left: 3 2 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 - 6 = 2 (left: 3 2 8) -> 8 - 2 = 6 (left: 3 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 6 = 2 (left: 3 2 8) -> 8 - 2 = 6 (left: 3 6) -> 6 / 3 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "2 2"
                }
            },
            "Step 7": {
                "Step": "8 - 6 = 2 (left: 3 6 2) -> 6 - 3 = 3 (left: 3 6 2) -> 6 / 3 = 2 (left: 2 2) -> 2 * 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "2 2"
                }
            },
            "Step 8": {
                "Step": "8 - 6 = 2 (left: 3 6 2) -> 6 - 3 = 3 (left: 3 6 2) -> 6 / 3 = 2 (left: 2 2) -> 2 - 2 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "8 20"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 3 9 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 6 8"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8) -> 1.5 * 8 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8) -> 1.5 * 8 = 12 (left: 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "6 6 8"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 6 8"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 6 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 - 6 = 3 (left: 3 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 - 6 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "2 2"
                }
            },
            "Step 7": {
                "Step": "8 - 6 = 2 (left: 3 6 2) -> 6 - 3 = 3 (left: 3 6 2) -> 6 / 3 = 2 (left: 2 2) -> 2 + 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "2 2"
                }
            },
            "Step 8": {
                "Step": "8 - 6 = 2 (left: 3 6 2) -> 6 - 3 = 3 (left: 3 6 2) -> 6 / 3 = 2 (left: 2 2) -> 2 * 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "There is only one possible next step:"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "8 - 6 = 2 (left: 2 6 ",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 6 8"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 + 6 = 15 (left: 8 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 + 6 = 15 (left: 8 15) -> 8 * 15 = 120 (left: 120)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 + 6 = 15 (left: 8 15) -> 8 * 15 = 120 (left: 120) -> There are no possible next steps for the input 120 as it is a single number and cannot be combined with any other numbers using basic arithmetic operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 6 8"
                }
            },
            "Step 4": {
                "Step": "6 / 3 = 2 (left: 3 2 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 / 3 = 2 (left: 3 2 8) -> 8 - 2 = 6 (left: 3 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 3 = 2 (left: 3 2 8) -> 8 - 2 = 6 (left: 3 6) -> 3 + 6 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "2 2"
                }
            },
            "Step 7": {
                "Step": "8 - 6 = 2 (left: 3 6 2) -> 6 - 3 = 3 (left: 3 6 2) -> 6 / 3 = 2 (left: 2 2) -> 2 * 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "2 2"
                }
            },
            "Step 8": {
                "Step": "8 - 6 = 2 (left: 3 6 2) -> 6 - 3 = 3 (left: 3 6 2) -> 6 / 3 = 2 (left: 2 2) -> 2 + 2 = 4",
                "Pruning": null
            }
        },
        "Input": "3 3 6 8",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1067": {
        "puzzle": "4 4 7 8",
        "Agent 0": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 7 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 8"
                }
            },
            "Step 1": {
                "Step": "7 + 4 = 11 (left: 4 8 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 4 = 11 (left: 4 8 11) -> 4 * 8 = 32 (left: 32 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 + 4 = 11 (left: 4 8 11) -> 4 * 8 = 32 (left: 32 11) -> 32 + 11 = 43 (left: 43)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 8"
                }
            },
            "Step 4": {
                "Step": "7 + 4 = 11 (left: 4 8 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 + 4 = 11 (left: 4 8 11) -> 11 - 4 = 7 (left: 4 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 4 = 11 (left: 4 8 11) -> 11 - 4 = 7 (left: 4 7) -> 4 + 7 = 11 (left: 7 11)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "There are no next steps as the input is already at its final state."
                }
            },
            "Step 7": {
                "Step": "8 / 4 = 2 (left: 2 4  -> Possible next steps: -> There are no next steps as the input is already at its final state. -> N/A",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "There are no next steps as the input is already at its final state."
                }
            },
            "Step 8": {
                "Step": "8 / 4 = 2 (left: 2 4  -> Possible next steps: -> There are no next steps as the input is already at its final state. -> There are no possible next steps as the input is already at its final state.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 7 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 4 "
                }
            },
            "Step 1": {
                "Step": "8 - 4 = 4 (left: 4 4  -> 4 - 4 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 4 = 4 (left: 4 4  -> 4 - 4 = 0 (left: 0) -> There are no possible next steps as there are no numbers provided to perform operations on.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 4 = 4 (left: 4 4  -> 4 - 4 = 0 (left: 0) -> There are no possible next steps as there are no numbers provided to perform operations on. -> No numbers provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 8"
                }
            },
            "Step 4": {
                "Step": "4 / 4 = 1 (left: 1 7 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 7 / 1 = 7 (left: 7 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 7 / 1 = 7 (left: 7 8) -> 7 + 8 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "There are no next steps as the input is already at its final state."
                }
            },
            "Step 7": {
                "Step": "8 / 4 = 2 (left: 2 4  -> Possible next steps: -> There are no next steps as the input is already at its final state. -> There are no possible next steps as the input is already at its final state.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 / 4 = 2 (left: 2 4  -> Possible next steps: -> There are no next steps as the input is already at its final state. -> There are no possible next steps as the input is already at its final state. -> N/A",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "No numbers provided."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 4 = 8 (left: 7 8 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 8"
                }
            },
            "Step 1": {
                "Step": "8 / 4 = 2 (left: 2 4 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 / 4 = 2 (left: 2 4  -> Possible next steps:",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 / 4 = 2 (left: 2 4  -> Possible next steps: -> There are no next steps as the input is already at its final state.",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 4 "
                }
            },
            "Step 4": {
                "Step": "8 - 4 = 4 (left: 4 4  -> 4 * 4 = 16 (left: 16)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 - 4 = 4 (left: 4 4  -> 4 * 4 = 16 (left: 16) -> There are no possible next steps as there is only one number remaining.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 4 = 4 (left: 4 4  -> 4 * 4 = 16 (left: 16) -> There are no possible next steps as there is only one number remaining. -> There are no possible next steps as there is only one number remaining.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "There are no next steps as the input is already at its final state."
                }
            },
            "Step 7": {
                "Step": "8 / 4 = 2 (left: 2 4  -> Possible next steps: -> There are no next steps as the input is already at its final state. -> There are no possible next steps as the input is already at its final state.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 / 4 = 2 (left: 2 4  -> Possible next steps: -> There are no next steps as the input is already at its final state. -> There are no possible next steps as the input is already at its final state. -> N/A",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "There are no possible next steps as there is only one number remaining."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 7 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 8"
                }
            },
            "Step 1": {
                "Step": "7 + 4 = 11 (left: 4 8 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 4 = 11 (left: 4 8 11) -> 8 - 4 = 4 (left: 4 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 + 4 = 11 (left: 4 8 11) -> 8 - 4 = 4 (left: 4 11) -> 4 + 11 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 8"
                }
            },
            "Step 4": {
                "Step": "4 * 4 = 16 (left: 7 8 16)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 * 4 = 16 (left: 7 8 16) -> 7 + 8 = 15 (left: 15 16)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 4 = 16 (left: 7 8 16) -> 7 + 8 = 15 (left: 15 16) -> Input: 3 9 27",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "There are no next steps as the input is already at its final state."
                }
            },
            "Step 7": {
                "Step": "8 / 4 = 2 (left: 2 4  -> Possible next steps: -> There are no next steps as the input is already at its final state. -> There are no possible next steps as the input is already at its final state.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 / 4 = 2 (left: 2 4  -> Possible next steps: -> There are no next steps as the input is already at its final state. -> There are no possible next steps as the input is already at its final state. -> N/A",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "Input is already at its final state."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "8 - 4 = 4 (left: 4 4 ",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 8"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 16 7 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 7 + 8 = 15 (left: 16 15)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 7 + 8 = 15 (left: 16 15) -> 16 - 15 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "There are no next steps as the input is already at its final state."
                }
            },
            "Step 4": {
                "Step": "8 / 4 = 2 (left: 2 4  -> Possible next steps: -> There are no next steps as the input is already at its final state. -> Input is already at its final state.",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 / 4 = 2 (left: 2 4  -> Possible next steps: -> There are no next steps as the input is already at its final state. -> Input is already at its final state. -> Input is already at its final state.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 / 4 = 2 (left: 2 4  -> Possible next steps: -> There are no next steps as the input is already at its final state. -> Input is already at its final state. -> Input is already at its final state. -> Input is already at its final state.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "There are no next steps as the input is already at its final state."
                }
            },
            "Step 7": {
                "Step": "8 / 4 = 2 (left: 2 4  -> Possible next steps: -> There are no next steps as the input is already at its final state. -> None",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "There are no next steps as the input is already at its final state."
                }
            },
            "Step 8": {
                "Step": "8 / 4 = 2 (left: 2 4  -> Possible next steps: -> There are no next steps as the input is already at its final state. -> N/A",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "There are no possible next steps as there is only one number remaining."
                }
            }
        },
        "Input": "4 4 7 8",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1068": {
        "puzzle": "3 5 11 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 5 = 7 (left: 3 7 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 16 12"
                }
            },
            "Step 1": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 3 = 5.33 (left: 5.33 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 3 = 5.33 (left: 5.33 12) -> 12 - 5.33 = 6.67 (left: 6.67)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 3 = 5.33 (left: 5.33 12) -> 12 - 5.33 = 6.67 (left: 6.67) -> 6.67 * 2 = 13.34 (left: 13.34)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "3 6 12"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 16 12"
                }
            },
            "Step 4": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 3 * 16 = 48 (left: 12 48)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 3 * 16 = 48 (left: 12 48) -> 12 / 4 = 3 (left: 3 48)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 3 * 16 = 48 (left: 12 48) -> 12 / 4 = 3 (left: 3 48) -> 48 / 3 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "31"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "21"
                }
            },
            "Step 7": {
                "Step": "5 * 11 = 55 (left: 3 55 12) -> 12 - 3 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21) -> 5 - 8 =",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 * 11 = 55 (left: 3 55 12) -> 12 - 3 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21) -> 5 - 8 = -> 5 - 8 = -3",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "11 - 5 = 6 (left: 3 6 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 16 12"
                }
            },
            "Step 1": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 - 3 = 13 (left: 13 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 - 3 = 13 (left: 13 12) -> 13 + 12 = 25 (left: 25)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 - 3 = 13 (left: 13 12) -> 13 + 12 = 25 (left: 25) -> 25 + 25 = 50",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 11 12"
                }
            },
            "Step 4": {
                "Step": "5 * 11 = 55 (left: 3 55 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 11 = 55 (left: 3 55 12) -> 12 - 3 = 9 (left: 9 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 11 = 55 (left: 3 55 12) -> 12 - 3 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "31"
                }
            },
            "Step 7": {
                "Step": "3 + 5 = 8 (left: 8 11 12) -> 8 + 11 = 19 (left: 19 12) -> 19 + 12 = 31 (left: 31) -> There are no possible next steps with the input of 31.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 + 5 = 8 (left: 8 11 12) -> 8 + 11 = 19 (left: 19 12) -> 19 + 12 = 31 (left: 31) -> There are no possible next steps with the input of 31. -> There are no possible next steps with the input of 31.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 * 5 = 15 (left: 15 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 6 12"
                }
            },
            "Step 1": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 3 + 6 = 9 (left: 9 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 3 + 6 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 3 + 6 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21) -> There are no possible next steps with the input 21.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 11 12"
                }
            },
            "Step 4": {
                "Step": "3 * 5 = 15 (left: 15 11 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 5 = 15 (left: 15 11 12) -> 15 + 11 = 26 (left: 12 26)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 5 = 15 (left: 15 11 12) -> 15 + 11 = 26 (left: 12 26) -> 26 - 12 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "25 + 25 = 50"
                }
            },
            "Step 7": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 - 3 = 13 (left: 13 12) -> 13 + 12 = 25 (left: 25) -> 25 + 25 = 50 -> 25 / 25 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "8.82"
                }
            },
            "Step 8": {
                "Step": "3 * 5 = 15 (left: 15 11 12) -> 15 / 11 = 1.36 (left: 1.36 12) -> 12 / 1.36 = 8.82 (left: 8.82) -> There are no possible next steps for the input 8.82.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "3 * 5 = 15 (left: 15 11 12)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 11 12"
                }
            },
            "Step 1": {
                "Step": "3 + 5 = 8 (left: 8 11 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 5 = 8 (left: 8 11 12) -> 8 + 11 = 19 (left: 19 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 + 5 = 8 (left: 8 11 12) -> 8 + 11 = 19 (left: 19 12) -> 19 + 12 = 31 (left: 31)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 11 12"
                }
            },
            "Step 4": {
                "Step": "5 * 11 = 55 (left: 3 55 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 11 = 55 (left: 3 55 12) -> 3 + 55 = 58 (left: 12 58)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 11 = 55 (left: 3 55 12) -> 3 + 55 = 58 (left: 12 58) -> 12 * 58 = 696 (left: 696)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "There are no possible next steps with the input 21."
                }
            },
            "Step 7": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 3 + 6 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21) -> There are no possible next steps with the input 21. -> There are no possible next steps with the input 21.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 3 + 6 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21) -> There are no possible next steps with the input 21. -> There are no possible next steps with the input 21. -> None",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "There are no possible next steps with the input 21."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 + 11 = 16 (left: 3 16 12)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 11 12"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 15 11 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 15 11 12) -> 15 / 11 = 1.36 (left: 1.36 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 15 11 12) -> 15 / 11 = 1.36 (left: 1.36 12) -> 12 / 1.36 = 8.82 (left: 8.82)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 11 12"
                }
            },
            "Step 4": {
                "Step": "5 + 11 = 16 (left: 3 16 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 - 3 = 13 (left: 13 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 - 3 = 13 (left: 13 12) -> 13 / 12 = 1.08333 (left: 1.08333)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "31"
                }
            },
            "Step 7": {
                "Step": "3 + 5 = 8 (left: 8 11 12) -> 8 + 11 = 19 (left: 19 12) -> 19 + 12 = 31 (left: 31) -> 31 is a prime number, so there are no possible mathematical operations to perform on it.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 + 5 = 8 (left: 8 11 12) -> 8 + 11 = 19 (left: 19 12) -> 19 + 12 = 31 (left: 31) -> 31 is a prime number, so there are no possible mathematical operations to perform on it. -> 31 is a prime number, so there are no possible mathematical operations to perform on it.",
                "Pruning": null
            }
        },
        "Input": "3 5 11 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1069": {
        "puzzle": "4 4 6 10",
        "Agent 0": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 6 10)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 10"
                }
            },
            "Step 1": {
                "Step": "4 / 4 = 1 (left: 1 4 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 4 = 1 (left: 1 4 6) -> 6 - 1 = 5 (left: 4 5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 / 4 = 1 (left: 1 4 6) -> 6 - 1 = 5 (left: 4 5) -> 5 - 4 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 10"
                }
            },
            "Step 4": {
                "Step": "6 + 4 = 10 (left: 4 10 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 4 = 10 (left: 4 10 10) -> 10 - 4 = 6 (left: 6 10 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 4 = 10 (left: 4 10 10) -> 10 - 4 = 6 (left: 6 10 10) -> 10 / 10 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "10 14"
                }
            },
            "Step 7": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14) -> 10 * 14 = 140 (left: 140) -> 140 / 10 = 14 (left: 10 14) -> 10 * 14 = 140 (left: 140)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "10 14"
                }
            },
            "Step 8": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14) -> 10 * 14 = 140 (left: 140) -> 140 / 10 = 14 (left: 10 14) -> 10 * 14 = 140 (left: 140)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "10 14"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 4 = 10 (left: 4 10 10)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 4 10"
                }
            },
            "Step 1": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 4 / 4 = 1 (left: 1 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 4 / 4 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 4 / 4 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10) -> 10 + 10 = 20 (left: 10 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 8 10"
                }
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14) -> 10 * 14 = 140 (left: 140)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14) -> 10 * 14 = 140 (left: 140) -> 140 / 10 = 14 (left: 10 14)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "10 14"
                }
            },
            "Step 7": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14) -> 10 * 14 = 140 (left: 140) -> 140 / 10 = 14 (left: 10 14) -> 10 - 14 = -4 (left: -4)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "10 14"
                }
            },
            "Step 8": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14) -> 10 * 14 = 140 (left: 140) -> 140 / 10 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "10 14"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 6 = 4 (left: 4 4 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 10"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 6 8 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14) -> 14 / 10 = 1.4 (left: 1.4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 4 10"
                }
            },
            "Step 4": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 4 * 4 = 16 (left: 16 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 4 * 4 = 16 (left: 16 10) -> 16 - 10 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 4 * 4 = 16 (left: 16 10) -> 16 - 10 = 6 (left: 6) -> 6 + 8 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "1 16 16"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "10 14"
                }
            },
            "Step 7": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14) -> 10 * 14 = 140 (left: 140) -> 140 / 10 = 14 (left: 10 14) -> 10 - 14 = -4 (left: -4)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "10 14"
                }
            },
            "Step 8": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14) -> 10 * 14 = 140 (left: 140) -> 140 / 10 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "10 14"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 + 4 = 8 (left: 6 8 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 10"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 6 10 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 6 10 16) -> 10 + 6 = 16 (left: 6 16 16)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 4 = 16 (left: 6 10 16) -> 10 + 6 = 16 (left: 6 16 16) -> 16 / 16 = 1 (left: 1 16 16)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 8 10"
                }
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14) -> 10 - 14 = -4 (left: -4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14) -> 10 - 14 = -4 (left: -4) -> There are no possible next steps with the current numbers provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "10 14"
                }
            },
            "Step 7": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14) -> 10 * 14 = 140 (left: 140) -> 140 / 10 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "10 14"
                }
            },
            "Step 8": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14) -> 10 * 14 = 140 (left: 140) -> 140 / 10 = 14 (left: 10 14) -> 10 / 14 = 0.7143 (left: 0.7143)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "10 14"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "10 / 4 = 2.5 (left: 4 6 2.5)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 4 10"
                }
            },
            "Step 1": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 4 + 6 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 4 + 6 = 10 (left: 10) -> 10 / 2 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "4 10 10"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "4 10 10"
                }
            },
            "Step 4": {
                "Step": "6 + 4 = 10 (left: 4 10 10) -> 4 + 10 = 14 (left: 10 10 14)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 4 = 10 (left: 4 10 10) -> 4 + 10 = 14 (left: 10 10 14) -> 14 / 10 = 1.4 (",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 4 = 10 (left: 4 10 10) -> 4 + 10 = 14 (left: 10 10 14) -> 14 / 10 = 1.4 ( -> 10 + 8 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "1 16 16"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "10 14"
                }
            },
            "Step 7": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14) -> 10 * 14 = 140 (left: 140) -> 140 / 10 = 14 (left: 10 14) -> 10 / 14 = 0.7142857142857143 (left: 0.7142857142857143)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "10 14"
                }
            },
            "Step 8": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14) -> 10 * 14 = 140 (left: 140) -> 140 / 10 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "10 14"
                }
            }
        },
        "Input": "4 4 6 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1070": {
        "puzzle": "4 6 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 9 10 13)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 6 9 13"
                }
            },
            "Step 1": {
                "Step": "9 + 13 = 22 (left: 4 6 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 13 = 22 (left: 4 6  -> 4 * 6 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 + 13 = 22 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (6 + (9 + 13)) = 24",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 4"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> Input: 3 9",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> Input: 3 9 -> Input: 5 7",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> Input: 3 9 -> Input: 5 7 -> 9 / 3 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "Apologies for the confusion. Please provide the numbers for the next steps."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "9 + 13 = 22 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (6 + (9 + 13)) = 24 -> Input: 3 5 7 8\nSteps:\n5 * 7 = 35 (left: 3 8 35)\n35 / 8 = 4.375 (left: 3 4.375)\n4.375 * 3 = 13.125 (left: 13.125)\n13.125 * 2 = 26.25 (left: 26.25)\n26.25 - 2 = 24.25 (left",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "There are no possible next steps with the input of 2.5."
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 / 4 = 1.5 (left: 1.5 4) -> 4 - 1.5 = 2.5 (left: 2.5) -> There are no possible next steps with the input of 2.5. -> There are no possible next steps with the input of 2.5.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 6 = 24 (left: 9 13 24)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 6 9 13"
                }
            },
            "Step 1": {
                "Step": "6 / 4 = 1.5 (left: 1.5 9 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 4 = 1.5 (left: 1.5 9 13) -> 9 / 1.5 = 6 (left: 6 13",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 / 4 = 1.5 (left: 1.5 9 13) -> 9 / 1.5 = 6 (left: 6 13 -> 6 * 13 = 78 (left: 78)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 6 9 13"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 4 6 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 4 6 13) -> 6 * 13 = 78 (left: 4 78)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 4 6 13) -> 6 * 13 = 78 (left: 4 78) -> 4 + 78 = 82 (left: 82)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "Apologies for the confusion. Please provide the numbers for the next steps."
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 4 6 4) ->  -> It appears that the input is missing. Could you please provide the numbers for the next steps? -> Apologies for the confusion. Please provide the numbers for the next steps. -> I'm sorry, but without additional input numbers, I am unable to provide the possible next steps. Could you please provide the numbers for me to work with?",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 4 6 4) ->  -> It appears that the input is missing. Could you please provide the numbers for the next steps? -> Apologies for the confusion. Please provide the numbers for the next steps. -> I'm sorry, but without additional input numbers, I am unable to provide the possible next steps. Could you please provide the numbers for me to work with? -> Unfortunately, I am unable to generate possible next steps without additional input numbers. Please provide the numbers for me to work with.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 4 6 4)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 6 9 13"
                }
            },
            "Step 1": {
                "Step": "4 + 6 = 10 (left: 9 10 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 6 = 10 (left: 9 10 13) -> 10 + 9 = 19 (left: 13 19)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 6 = 10 (left: 9 10 13) -> 10 + 9 = 19 (left: 13 19) -> 13 - 19 = -6 (left: -6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 6 9 13"
                }
            },
            "Step 4": {
                "Step": "9 - 6 = 3 (left: 3 9 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 6 = 3 (left: 3 9 13) -> 3 + 9 = 12 (left: 12 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 6 = 3 (left: 3 9 13) -> 3 + 9 = 12 (left: 12 13) -> 12 * 13 = 156 (left: 156)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "20.5"
                }
            },
            "Step 7": {
                "Step": "6 / 4 = 1.5 (left: 1.5 9 13) -> 9 - 1.5 = 7.5 (left: 7.5 13) -> 7.5 + 13 = 20.5 (left: 20.5) -> There are no possible next steps for the input 20.5 as it is a single number.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 / 4 = 1.5 (left: 1.5 9 13) -> 9 - 1.5 = 7.5 (left: 7.5 13) -> 7.5 + 13 = 20.5 (left: 20.5) -> There are no possible next steps for the input 20.5 as it is a single number. -> There are no possible next steps for the input 20.5 as it is a single number.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 9 10 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 4"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 4 6 4) ->  -> It appears that the input is missing. Could you please provide the numbers for the next steps?",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 4 6 4) ->  -> It appears that the input is missing. Could you please provide the numbers for the next steps? -> Apologies for the confusion. Please provide the numbers for the next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 6 9 13"
                }
            },
            "Step 4": {
                "Step": "9 - 6 = 3 (left: 3 9 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 6 = 3 (left: 3 9 13) -> 9 - 3 = 6 (left: 6 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 6 = 3 (left: 3 9 13) -> 9 - 3 = 6 (left: 6 13) -> 6 - 13 = -7 (left: -7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "-6"
                }
            },
            "Step 7": {
                "Step": "4 + 6 = 10 (left: 9 10 13) -> 10 + 9 = 19 (left: 13 19) -> 13 - 19 = -6 (left: -6) -> There are no possible next steps with the input of -6.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 6 = 10 (left: 9 10 13) -> 10 + 9 = 19 (left: 13 19) -> 13 - 19 = -6 (left: -6) -> There are no possible next steps with the input of -6. -> There are no possible next steps with the input of -6.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 4 15 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 4"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 / 4 = 1.5 (left: 1.5 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 / 4 = 1.5 (left: 1.5 4) -> 4 - 1.5 = 2.5 (left: 2.5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 / 4 = 1.5 (left: 1.5 4) -> 4 - 1.5 = 2.5 (left: 2.5) -> There are no possible next steps with the input of 2.5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 6 9 13"
                }
            },
            "Step 4": {
                "Step": "6 / 4 = 1.5 (left: 1.5 9 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 / 4 = 1.5 (left: 1.5 9 13) -> 9 - 1.5 = 7.5 (left: 7.5 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 4 = 1.5 (left: 1.5 9 13) -> 9 - 1.5 = 7.5 (left: 7.5 13) -> 7.5 + 13 = 20.5 (left: 20.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "There are no possible next steps with the input of 2.5."
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 / 4 = 1.5 (left: 1.5 4) -> 4 - 1.5 = 2.5 (left: 2.5) -> There are no possible next steps with the input of 2.5. -> Sorry, but there are no possible next steps with the input of 2.5.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 / 4 = 1.5 (left: 1.5 4) -> 4 - 1.5 = 2.5 (left: 2.5) -> There are no possible next steps with the input of 2.5. -> Sorry, but there are no possible next steps with the input of 2.5. -> Sorry, but there are no possible next steps with the input of 2.5.",
                "Pruning": null
            }
        },
        "Input": "4 6 9 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1071": {
        "puzzle": "3 5 6 11",
        "Agent 0": {
            "Step 0": {
                "Step": "11 - 5 = 6 (left: 3 6 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 6 11"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 6 11 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 6 11 15) -> 6 + 11 = 17 (left: 15 17)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 6 11 15) -> 6 + 11 = 17 (left: 15 17) -> 15 + 17 = 32 (left: 32)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 6 11"
                }
            },
            "Step 4": {
                "Step": "5 * 6 = 30 (left: 3 30 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 6 = 30 (left: 3 30 11) -> 3 * 10 = 30 (left: 30 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 6 = 30 (left: 3 30 11) -> 3 * 10 = 30 (left: 30 11) -> 30 / 11 = 2.727272727272727 (left: 2.727272727272727)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "22"
                }
            },
            "Step 7": {
                "Step": "11 - 3 = 8 (left: 5 6 8) -> 5 * 6 = 30 (left: 8 30) -> 30 - 8 = 22 (left: 22) -> 22 / 2 = 11",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 3 = 8 (left: 5 6 8) -> 5 * 6 = 30 (left: 8 30) -> 30 - 8 = 22 (left: 22) -> 22 / 2 = 11 -> 11 * 2 = 22",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 * 6 = 30 (left: 3 30)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 5 11"
                }
            },
            "Step 1": {
                "Step": "6 - 3 = 3 (left: 3 5 11) -> 5 + 11 = 16 (left: 3 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 3 = 3 (left: 3 5 11) -> 5 + 11 = 16 (left: 3 16) -> 3 / 16 = 0.19 (left: 0.19 16)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 3 = 3 (left: 3 5 11) -> 5 + 11 = 16 (left: 3 16) -> 3 / 16 = 0.19 (left: 0.19 16) -> 0.19 + 16 = 16.19 (left: 16.19)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "3 5 11"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 6 11"
                }
            },
            "Step 4": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 8 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 8 11) -> 8 + 11 = 19 (left: 19)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 8 11) -> 8 + 11 = 19 (left: 19) -> There are no possible next steps for the input 19.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "22"
                }
            },
            "Step 7": {
                "Step": "11 - 3 = 8 (left: 5 6 8) -> 5 * 6 = 30 (left: 8 30) -> 30 - 8 = 22 (left: 22) -> None, as there is only one number provided.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 3 = 8 (left: 5 6 8) -> 5 * 6 = 30 (left: 8 30) -> 30 - 8 = 22 (left: 22) -> None, as there is only one number provided. -> There are no possible next steps as there is only one number provided.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 3 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 6 11"
                }
            },
            "Step 1": {
                "Step": "6 - 3 = 3 (left: 3 5 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 3 = 3 (left: 3 5 11) -> 5 - 3 = 2 (left: 2 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 3 = 3 (left: 3 5 11) -> 5 - 3 = 2 (left: 2 11) -> 2 * 11 = 22 (left: 22)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 6 11"
                }
            },
            "Step 4": {
                "Step": "11 - 6",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 6 -> 11 - 6 = 5",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 6 -> 11 - 6 = 5 -> 17 / 3 = 5.66666 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "22"
                }
            },
            "Step 7": {
                "Step": "11 - 3 = 8 (left: 5 6 8) -> 5 * 6 = 30 (left: 8 30) -> 30 - 8 = 22 (left: 22) -> None",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "22"
                }
            },
            "Step 8": {
                "Step": "11 - 3 = 8 (left: 5 6 8) -> 5 * 6 = 30 (left: 8 30) -> 30 - 8 = 22 (left: 22) -> 22 + 2 = 24",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "11 - 5 = 6 (left: 3 6 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 6 11"
                }
            },
            "Step 1": {
                "Step": "3 + 5 = 8 (left: 6 8 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 5 = 8 (left: 6 8 11) -> 8 - 6 = 2 (left: 2 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 + 5 = 8 (left: 6 8 11) -> 8 - 6 = 2 (left: 2 11) -> 11 / 2 = 5.5 (left: 5.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 6 11"
                }
            },
            "Step 4": {
                "Step": "6 - 3 = 3 (left: 3 5 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 - 3 = 3 (left: 3 5 11) -> 3 + 5 = 8 (left: 8 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 3 = 3 (left: 3 5 11) -> 3 + 5 = 8 (left: 8 11) -> 8 / 11 \u2248 0.7273 (left: 0.7273)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "22"
                }
            },
            "Step 7": {
                "Step": "11 - 3 = 8 (left: 5 6 8) -> 5 * 6 = 30 (left: 8 30) -> 30 - 8 = 22 (left: 22) -> None, as there is only one number provided.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 3 = 8 (left: 5 6 8) -> 5 * 6 = 30 (left: 8 30) -> 30 - 8 = 22 (left: 22) -> None, as there is only one number provided. -> There are no possible next steps as there is only one number provided.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 - 3 = 3 (left: 3 5 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 6 11"
                }
            },
            "Step 1": {
                "Step": "3 + 5 = 8 (left: 6 8 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 5 = 8 (left: 6 8 11) -> 8 + 6 = 14 (left: 11 14)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 + 5 = 8 (left: 6 8 11) -> 8 + 6 = 14 (left: 11 14) -> 11 * 14 = 154 (left: 154)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 6 11"
                }
            },
            "Step 4": {
                "Step": "11 - 3 = 8 (left: 5 6 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 3 = 8 (left: 5 6 8) -> 5 * 6 = 30 (left: 8 30)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 3 = 8 (left: 5 6 8) -> 5 * 6 = 30 (left: 8 30) -> 30 - 8 = 22 (left: 22)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "22"
                }
            },
            "Step 7": {
                "Step": "11 - 3 = 8 (left: 5 6 8) -> 5 * 6 = 30 (left: 8 30) -> 30 - 8 = 22 (left: 22) -> None, as there is only one number in the input.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 3 = 8 (left: 5 6 8) -> 5 * 6 = 30 (left: 8 30) -> 30 - 8 = 22 (left: 22) -> None, as there is only one number in the input. -> There are no possible next steps as there is only one number in the input.",
                "Pruning": null
            }
        },
        "Input": "3 5 6 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1072": {
        "puzzle": "1 5 8 13",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 5 = 6 (left: 6 8 13)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 40 13"
                }
            },
            "Step 1": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 - 1 = 39 (left: 39 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 - 1 = 39 (left: 39 13) -> 39 + 13 = 52 (left: 52)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 - 1 = 39 (left: 39 13) -> 39 + 13 = 52 (left: 52) -> 52 / 2 = 26",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 8 13"
                }
            },
            "Step 4": {
                "Step": "5 * 8 = 40 (left: 1 40 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 13 + 1 = 14 (left: 40 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 13 + 1 = 14 (left: 40 14) -> 40 / 14 = 2.857142857142857 (left: 2.857142857142857)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "52 / 2 = 26"
                }
            },
            "Step 7": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 - 1 = 39 (left: 39 13) -> 39 + 13 = 52 (left: 52) -> 52 / 2 = 26 -> 52 / 2 = 26 is already the final result.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 - 1 = 39 (left: 39 13) -> 39 + 13 = 52 (left: 52) -> 52 / 2 = 26 -> 52 / 2 = 26 is already the final result. -> There are no possible next steps as the final result has already been achieved.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 - 5 = 3 (left: 1 3 13)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 40 13"
                }
            },
            "Step 1": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 13 - 1 = 12 (left: 40 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 13 - 1 = 12 (left: 40 12) -> 40 * 12 = 480 (left: 480)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 13 - 1 = 12 (left: 40 12) -> 40 * 12 = 480 (left: 480) -> 480 / 3 = 160 (left: 160)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "1 40 13"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 8 13"
                }
            },
            "Step 4": {
                "Step": "13 + 1 = 14 (left: 5 8 14)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 + 1 = 14 (left: 5 8 14) -> 5 * 8 = 40 (left: 40 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 + 1 = 14 (left: 5 8 14) -> 5 * 8 = 40 (left: 40 14) -> 40 / 14 = 2.85714285714 (left: 2.85714285714)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "2.857142857142857"
                }
            },
            "Step 7": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 13 + 1 = 14 (left: 40 14) -> 40 / 14 = 2.857142857142857 (left: 2.857142857142857) -> 2.857142857142857 * 2 = 5.714285714285714 (left:",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 13 + 1 = 14 (left: 40 14) -> 40 / 14 = 2.857142857142857 (left: 2.857142857142857) -> 2.857142857142857 * 2 = 5.714285714285714 (left: -> 5.714285714285714 / 2 = 2.857142857142857 (left: 2.857142857142857 2.857142857142857)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 + 5 = 6 (left: 6 8 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 8 13"
                }
            },
            "Step 1": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 6 * 8 = 48 (left: 48 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 6 * 8 = 48 (left: 48 13) -> 48 / 13 = 3.6923076923076925 (left: 3.6923076923076925)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 6 * 8 = 48 (left: 48 13) -> 48 / 13 = 3.6923076923076925 (left: 3.6923076923076925) -> 3.6923076923076925 * 3 = 11.076923076923077",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 8 13"
                }
            },
            "Step 4": {
                "Step": "13 - 8 = 5 (left: 1 5 ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 8 = 5 (left: 1 5  -> 1 + 5 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 8 = 5 (left: 1 5  -> 1 + 5 = 6 (left: 6) -> 6 - 2 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "3.6923076923076925 * 3 = 11.076923076923077"
                }
            },
            "Step 7": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 6 * 8 = 48 (left: 48 13) -> 48 / 13 = 3.6923076923076925 (left: 3.6923076923076925) -> 3.6923076923076925 * 3 = 11.076923076923077 -> 3 * 3 = 9 (left: 3.6923076923076925 9)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 6 * 8 = 48 (left: 48 13) -> 48 / 13 = 3.6923076923076925 (left: 3.6923076923076925) -> 3.6923076923076925 * 3 = 11.076923076923077 -> 3 * 3 = 9 (left: 3.6923076923076925 9) -> 3.6923076923076925 * 9 = 33.23076923076923 (left: 9)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "3.6923076923076925 * 3 = 11.076923076923077"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 * 8 = 40 (left: 1 40 13)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 8 13"
                }
            },
            "Step 1": {
                "Step": "13 - 1 = 12 (left: 5 8 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 1 = 12 (left: 5 8 12) -> 8 - 5 = 3 (left: 3 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 1 = 12 (left: 5 8 12) -> 8 - 5 = 3 (left: 3 12) -> 3 + 12 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 8 13"
                }
            },
            "Step 4": {
                "Step": "1 + 5 = 6 (left: 6 8 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 8 / 6 = 1.33 (left: 1.33 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 8 / 6 = 1.33 (left: 1.33 13) -> 1.33 - 13 = -11.67 (left: -11.67)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "52 / 2 = 26"
                }
            },
            "Step 7": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 - 1 = 39 (left: 39 13) -> 39 + 13 = 52 (left: 52) -> 52 / 2 = 26 -> 26 * 2 = 52 (left: 2)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "52 / 2 = 26"
                }
            },
            "Step 8": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 - 1 = 39 (left: 39 13) -> 39 + 13 = 52 (left: 52) -> 52 / 2 = 26 -> 104 - 52 = 52",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "8 * 5 = 40 (left: 1 13 40)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 8 13"
                }
            },
            "Step 1": {
                "Step": "13 - 1 = 12 (left: 5 8 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 1 = 12 (left: 5 8 12) -> 5 + 8 = 13 (left: 12 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 1 = 12 (left: 5 8 12) -> 5 + 8 = 13 (left: 12 13) -> 12 * 13 = 156 (left: 156)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 40 13"
                }
            },
            "Step 4": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 / 1 = 40 (left: 40 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 / 1 = 40 (left: 40 13) -> 40 * 13 = 520 (left: 520)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 / 1 = 40 (left: 40 13) -> 40 * 13 = 520 (left: 520) -> 5 * 20 = 100 (left: 100)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "52 / 2 = 26"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "52 / 2 = 26"
                }
            },
            "Step 7": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 - 1 = 39 (left: 39 13) -> 39 + 13 = 52 (left: 52) -> 52 / 2 = 26 -> 26 * 2 = 52 (left: 26)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "3.6923076923076925 * 3 = 11.076923076923077"
                }
            },
            "Step 8": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 6 * 8 = 48 (left: 48 13) -> 48 / 13 = 3.6923076923076925 (left: 3.6923076923076925) -> 3.6923076923076925 * 3 = 11.076923076923077 -> 3.6923076923076925 + 3 = 6.692307692307693 (left: 6.692307692307693 * 3 = 20.07692307692308)",
                "Pruning": null
            }
        },
        "Input": "1 5 8 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1073": {
        "puzzle": "3 3 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 9 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 9 13"
                }
            },
            "Step 1": {
                "Step": "9 + 3 = 12 (left: 3 12 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 3 = 12 (left: 3 12 13) -> 3 + 12 = 15 (left: 15 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 + 3 = 12 (left: 3 12 13) -> 3 + 12 = 15 (left: 15 13) -> 15 * 13 = 195 (left: 195)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 3 4"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 * 3 = 9 (left: 4 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 * 3 = 9 (left: 4 9) -> Input: 3 6 10",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 * 3 = 9 (left: 4 9) -> Input: 3 6 10 -> 3 + 6 = 9 (left: 9 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "2 + 2.2566 = 4.2566"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 4 / 3 = 1.33 (left: 1.33 3) -> 3 / 1.33 = 2.2566 (left: 2.2566) -> 2 + 2.2566 = 4.2566 -> 2.2566 - 2 = 0.2566 (left: 0.2566)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "195"
                }
            },
            "Step 8": {
                "Step": "9 + 3 = 12 (left: 3 12 13) -> 3 + 12 = 15 (left: 15 13) -> 15 * 13 = 195 (left: 195) -> 9 / 5 = 1.8 (left: 1.8)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "9 10"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 9 13)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 9 13"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 9 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 - 9 = 0 (left: 0 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 - 9 = 0 (left: 0 13) -> 13 * 0 = 0 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 9 13"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 9 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 * 9 = 81 (left: 81 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 * 9 = 81 (left: 81 13) -> 81 * 13 = 1053 (left: 1053)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "195"
                }
            },
            "Step 7": {
                "Step": "9 + 3 = 12 (left: 3 12 13) -> 3 + 12 = 15 (left: 15 13) -> 15 * 13 = 195 (left: 195) -> 1 + 9 + 5 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "9 10"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 * 3 = 9 (left: 4 9) -> Input: 3 6 10 -> 3 + 6 = 9 (left: 9 10) -> 10 / 9 = 1.11 (left: 1.11)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "2 + 2.2566 = 4.2566"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 3 3 4)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 9 13"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 9 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 - 9 = 0 (left: 0 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 - 9 = 0 (left: 0 13) -> 0 + 13 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 9 13"
                }
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 6 9 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 6 9 13) -> 9 - 6 = 3 (left: 3 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 6 9 13) -> 9 - 6 = 3 (left: 3 13) -> 13 - 3 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1.3846153846153846"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 + 9 = 18 (left: 18 13) -> 18 / 13 = 1.3846153846153846 (left: 1.3846153846153846) -> 1.3846153846153846 * 2 = 2.7692307692307692",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 + 9 = 18 (left: 18 13) -> 18 / 13 = 1.3846153846153846 (left: 1.3846153846153846) -> 1.3846153846153846 * 2 = 2.7692307692307692 -> 1.3846153846153846 + 2 = 3.3846153846153846",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 3 = 6 (left: 3 6 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 9 13"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 9 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 + 9 = 18 (left: 18 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 + 9 = 18 (left: 18 13) -> 18 / 13 = 1.3846153846153846 (left: 1.3846153846153846)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 3 4"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 4 / 3 = 1.33 (left: 1.33 3)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 4 / 3 = 1.33 (left: 1.33 3) -> 3 / 1.33 = 2.2566 (left: 2.2566)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 4 / 3 = 1.33 (left: 1.33 3) -> 3 / 1.33 = 2.2566 (left: 2.2566) -> 2 + 2.2566 = 4.2566",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "1053"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 * 9 = 81 (left: 81 13) -> 81 * 13 = 1053 (left: 1053) -> 1053 - 1 = 1052 (left: )",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "10"
                }
            },
            "Step 8": {
                "Step": "3 + 3 = 6 (left: 6 9 13) -> 9 - 6 = 3 (left: 3 13) -> 13 - 3 = 10 (left: 10) -> 10 + 10 = 20",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 9 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "9 9 13"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 + 9 = 18 (left: 18 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 + 9 = 18 (left: 18 13) -> 18 * 13 = 234 (left: 234)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 + 9 = 18 (left: 18 13) -> 18 * 13 = 234 (left: 234) -> 4 / 2 = 2 (left: 3 2)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 9 13"
                }
            },
            "Step 4": {
                "Step": "3 - 3 = 0 (left: 0 9 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 - 3 = 0 (left: 0 9 13) -> 0 + 9 = 9 (left: 9 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 - 3 = 0 (left: 0 9 13) -> 0 + 9 = 9 (left: 9 13) -> Input: 5 3 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "195"
                }
            },
            "Step 7": {
                "Step": "9 + 3 = 12 (left: 3 12 13) -> 3 + 12 = 15 (left: 15 13) -> 15 * 13 = 195 (left: 195) -> 9 / 5 = ",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 + 3 = 12 (left: 3 12 13) -> 3 + 12 = 15 (left: 15 13) -> 15 * 13 = 195 (left: 195) -> 9 / 5 =  -> 9 / 5 = 1.8",
                "Pruning": null
            }
        },
        "Input": "3 3 9 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1074": {
        "puzzle": "7 7 9 10",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 7 = 3 (left: 3 7 ",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 7 "
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 3 7  -> 7 - 3 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 3 7  -> 7 - 3 = 4 (left: 4) -> 4 + 4 = 8",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 3 7  -> 7 - 3 = 4 (left: 4) -> 4 + 4 = 8 -> 4 + 8 = 12 (left: 4 12 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "7 2 10"
                }
            },
            "Step 4": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 7 - 2 = 5 (left: 5 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 7 - 2 = 5 (left: 5 10) -> 10 - 5 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 7 - 2 = 5 (left: 5 10) -> 10 - 5 = 5 (left: 5) -> 8 + 5 = 13 (left: 13 8 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "13 8 12"
                }
            },
            "Step 7": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 7 - 2 = 5 (left: 5 10) -> 10 - 5 = 5 (left: 5) -> 8 + 5 = 13 (left: 13 8 12) -> 12 + 13 =",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 7 - 2 = 5 (left: 5 10) -> 10 - 5 = 5 (left: 5) -> 8 + 5 = 13 (left: 13 8 12) -> 12 + 13 = -> 12 + 13 = 25",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 * 9 = 63 (left: 10 10 63)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 9 10"
                }
            },
            "Step 1": {
                "Step": "",
                "Pruning": null
            },
            "Step 2": {
                "Step": " -> There are no more possible next steps with the given numbers.",
                "Pruning": null
            },
            "Step 3": {
                "Step": " -> There are no more possible next steps with the given numbers. -> There are no more possible next steps with the given numbers.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 7 "
                }
            },
            "Step 4": {
                "Step": "10 - 7 = 3 (left: 3 7  -> Possible next steps:",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 7 = 3 (left: 3 7  -> Possible next steps: -> There are no possible next steps with the input provided.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 7 = 3 (left: 3 7  -> Possible next steps: -> There are no possible next steps with the input provided. -> There are no possible next steps with the input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "4 12 8"
                }
            },
            "Step 7": {
                "Step": "10 - 7 = 3 (left: 3 7  -> 7 - 3 = 4 (left: 4) -> 4 + 4 = 8 -> 4 + 8 = 12 (left: 4 12 8) -> 8 / 4 = 2 (left:",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 7 = 3 (left: 3 7  -> 7 - 3 = 4 (left: 4) -> 4 + 4 = 8 -> 4 + 8 = 12 (left: 4 12 8) -> 8 / 4 = 2 (left: -> 8 + 4 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "2 8 7"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 - 7 = 2 (left: 7 2 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 9 10"
                }
            },
            "Step 1": {
                "Step": "9 + 1 = 10 (left: 7 10 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 1 = 10 (left: 7 10 10) -> 10 / 7 = 1.43 (left: 1.43 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 + 1 = 10 (left: 7 10 10) -> 10 / 7 = 1.43 (left: 1.43 10) -> 10 / 1.43 = 6.993 (left: 6.993)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 7 "
                }
            },
            "Step 4": {
                "Step": "10 - 7 = 3 (left: 3 7  -> 7 / 3 = 2.33 (left: 2.33)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 7 = 3 (left: 3 7  -> 7 / 3 = 2.33 (left: 2.33) -> 2.33 + 8 = 10.33 (left: 10.33)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 7 = 3 (left: 3 7  -> 7 / 3 = 2.33 (left: 2.33) -> 2.33 + 8 = 10.33 (left: 10.33) -> There are no possible next steps for the input 10.33 as it is a single number and not an equation with multiple numbers.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "2 8 7"
                }
            },
            "Step 7": {
                "Step": "10 - 7 = 3 (left: 3 7  -> 5 * 9 = 45 (left:  -> There are many possible next steps depending on which operation you choose to perform. Can you provide more context or specify which operation you would like to see? -> - Divide the fourth number by 2: 14 / 2 = 7 (left: 2 8 7) -> 2 * 8 = 16 (left: 7 16)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 7 = 3 (left: 3 7  -> 5 * 9 = 45 (left:  -> There are many possible next steps depending on which operation you choose to perform. Can you provide more context or specify which operation you would like to see? -> - Divide the fourth number by 2: 14 / 2 = 7 (left: 2 8 7) -> 2 * 8 = 16 (left: 7 16) -> 7 * 16 = 112 (left: 112)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "2 8 7"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 * 9 = 63 (left: 10 63)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 7 "
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 3 7  -> 5 * 9 = 45 (left: ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 3 7  -> 5 * 9 = 45 (left:  -> There are many possible next steps depending on which operation you choose to perform. Can you provide more context or specify which operation you would like to see?",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 3 7  -> 5 * 9 = 45 (left:  -> There are many possible next steps depending on which operation you choose to perform. Can you provide more context or specify which operation you would like to see? -> - Divide the fourth number by 2: 14 / 2 = 7 (left: 2 8 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "7 2 10"
                }
            },
            "Step 4": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 10 + 2 = 12 (left: 7 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 10 + 2 = 12 (left: 7 12) -> 12 - 7 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 10 + 2 = 12 (left: 7 12) -> 12 - 7 = 5 (left: 5) -> 5 / 5 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "2 8 7"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "2 8 7"
                }
            },
            "Step 7": {
                "Step": "10 - 7 = 3 (left: 3 7  -> 5 * 9 = 45 (left:  -> There are many possible next steps depending on which operation you choose to perform. Can you provide more context or specify which operation you would like to see? -> - Divide the fourth number by 2: 14 / 2 = 7 (left: 2 8 7) -> 7 + 2 = 9 (left: 8 9)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 7 = 3 (left: 3 7  -> 5 * 9 = 45 (left:  -> There are many possible next steps depending on which operation you choose to perform. Can you provide more context or specify which operation you would like to see? -> - Divide the fourth number by 2: 14 / 2 = 7 (left: 2 8 7) -> 7 + 2 = 9 (left: 8 9) -> 8 * 9 = 72 (left: 72)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "2 8 7"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "7 * 7 = 49 (left: 9 10 49)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 9 10"
                }
            },
            "Step 1": {
                "Step": "7 + 7 = 14 (left: 9 10 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 7 = 14 (left: 9 10 14) -> 14 - 9 = 5 (left: 5 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 + 7 = 14 (left: 9 10 14) -> 14 - 9 = 5 (left: 5 10) -> 5 + 10 = 15 (left: 10 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "7 2 10"
                }
            },
            "Step 4": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 7 * 2 = 14 (left: 14 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 7 * 2 = 14 (left: 14 10) -> 14 - 10 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 7 * 2 = 14 (left: 14 10) -> 14 - 10 = 4 (left: 4) -> 4 + 4 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "2 8 7"
                }
            },
            "Step 7": {
                "Step": "10 - 7 = 3 (left: 3 7  -> 5 * 9 = 45 (left:  -> There are many possible next steps depending on which operation you choose to perform. Can you provide more context or specify which operation you would like to see? -> - Divide the fourth number by 2: 14 / 2 = 7 (left: 2 8 7) -> 8 / 2 = 4 (left: 4 7)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 7 = 3 (left: 3 7  -> 5 * 9 = 45 (left:  -> There are many possible next steps depending on which operation you choose to perform. Can you provide more context or specify which operation you would like to see? -> - Divide the fourth number by 2: 14 / 2 = 7 (left: 2 8 7) -> 8 / 2 = 4 (left: 4 7) -> 4 / 7 = 0.57 (left: 0.57)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "2 8 7"
                }
            }
        },
        "Input": "7 7 9 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "Cost": {
        "input_tokens": 487572,
        "output_tokens": 205897.7182539684,
        "total_cost": 0.5526325773809526
    }
}