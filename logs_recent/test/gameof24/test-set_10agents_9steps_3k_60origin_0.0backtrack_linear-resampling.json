{
    "900": {
        "puzzle": "4 5 6 10",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 5 = 5 (left: 4 6 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 5 10"
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 4 5 10) -> 10 / 5 = 2 (left: 4 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 4 5 10) -> 10 / 5 = 2 (left: 4 2) -> 4 * 2 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 4 5 10) -> 10 / 5 = 2 (left: 4 2) -> 4 * 2 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "6 5 10"
                }
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 6 5 10) -> 5 / 10 = 0.5 (left: 0.5 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 6 5 10) -> 5 / 10 = 0.5 (left: 0.5 10) -> 0.5 + 10 = 10.5 (left: 10.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 6 5 10) -> 5 / 10 = 0.5 (left: 0.5 10) -> 0.5 + 10 = 10.5 (left: 10.5) -> 10.5 + 8 = 18.5 (left: 8 18.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "4 + 4 = 8"
                }
            },
            "Step 7": {
                "Step": "10 - 4 = 6 (left: 6 5 10) -> 10 / 5 = 2 (left: 2 6) -> 6 - 2 = 4 (left: 4) -> 4 + 4 = 8 -> 8 - 4 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "10 1.25"
                }
            },
            "Step 8": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 / 8 = 1.25 (left: 8 1.25) -> 8 * 1.25 = 10 (left: 10 1.25) -> 10 / 1.25 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "10 1.25"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 10 = 16 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 + 6 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 / 8 = 1.25 (left: 8 1.25)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 / 8 = 1.25 (left: 8 1.25) -> 8 * 1.25 = 10 (left: 10 1.25)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "4 5 10"
                }
            },
            "Step 4": {
                "Step": "10 - 5 = 5 (left: 4 5 10) -> 10 / 5 = 2 (left: 4 2)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 5 = 5 (left: 4 5 10) -> 10 / 5 = 2 (left: 4 2) -> 4 * 2 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 5 = 5 (left: 4 5 10) -> 10 / 5 = 2 (left: 4 2) -> 4 * 2 = 8 (left: 8) -> 8 * 8 = 64 (left: 64)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "1.2 + 2 = 3.2"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "There are no possible next steps with the input 0.6."
                }
            },
            "Step 7": {
                "Step": "10 - 5 = 5 (left: 4 5 10) -> 10 - 4 = 6 (left: 6 10) -> 6 / 10 = 0.6 (left: 0.6) -> There are no possible next steps with the input 0.6. -> There are no possible next steps with the input 0.6.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 5 = 5 (left: 4 5 10) -> 10 - 4 = 6 (left: 6 10) -> 6 / 10 = 0.6 (left: 0.6) -> There are no possible next steps with the input 0.6. -> There are no possible next steps with the input 0.6. -> There are no possible next steps with the input 0.6.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 5 = 5 (left: 4 5 10)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 5 10"
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 4 5 10) -> 10 - 4 = 6 (left: 6 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 4 5 10) -> 10 - 4 = 6 (left: 6 5) -> 6 / 5 = 1.2 (left: 1.2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 4 5 10) -> 10 - 4 = 6 (left: 6 5) -> 6 / 5 = 1.2 (left: 1.2) -> 1.2 + 2 = 3.2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "4 5 10"
                }
            },
            "Step 4": {
                "Step": "10 - 5 = 5 (left: 4 5 10) -> 10 - 4 = 6 (left: 6 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 5 = 5 (left: 4 5 10) -> 10 - 4 = 6 (left: 6 10) -> 10 - 6 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 5 = 5 (left: 4 5 10) -> 10 - 4 = 6 (left: 6 10) -> 10 - 6 = 4 (left: 4) -> 4 + 4 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "There are no possible next steps with the input 1.6667."
                }
            },
            "Step 7": {
                "Step": "10 - 5 = 5 (left: 4 5 10) -> 10 - 4 = 6 (left: 6 10) -> 10 / 6 = 1.6667 (left: 1.6667) -> There are no possible next steps with the input 1.6667. -> 1.6667 / 2 = 0.83335 (left: 0.83335)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "8 18.5"
                }
            },
            "Step 8": {
                "Step": "10 - 4 = 6 (left: 6 5 10) -> 5 / 10 = 0.5 (left: 0.5 10) -> 0.5 + 10 = 10.5 (left: 10.5) -> 10.5 + 8 = 18.5 (left: 8 18.5) -> 8 / 18.5 = 0.432 (left: 0.432)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "5 + 5 = 10"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 5 10)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 - 4 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 - 4 = 2 (left: 2) -> 2 + 2 = 4",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 - 4 = 2 (left: 2) -> 2 + 2 = 4 -> There are no possible next steps as the equation is already simplified to 4.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "4 5 10"
                }
            },
            "Step 4": {
                "Step": "10 - 5 = 5 (left: 4 5 10) -> 10 - 4 = 6 (left: 6 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 5 = 5 (left: 4 5 10) -> 10 - 4 = 6 (left: 6 10) -> 10 / 6 = 1.6667 (left: 1.6667)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 5 = 5 (left: 4 5 10) -> 10 - 4 = 6 (left: 6 10) -> 10 / 6 = 1.6667 (left: 1.6667) -> There are no possible next steps with the input 1.6667.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "4 + 4 = 8"
                }
            },
            "Step 7": {
                "Step": "10 - 4 = 6 (left: 6 5 10) -> 10 / 5 = 2 (left: 2 6) -> 6 - 2 = 4 (left: 4) -> 4 + 4 = 8 -> 4 / 4 = 1 (left: 1 4 8)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 4 = 6 (left: 6 5 10) -> 10 / 5 = 2 (left: 2 6) -> 6 - 2 = 4 (left: 4) -> 4 + 4 = 8 -> 4 / 4 = 1 (left: 1 4 8) -> 4 * 8 = 32 (left: 1 32)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 4 10 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (10 - 5) = 24",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (10 - 5) = 24 -> Input: 2 3 4 6\nSteps:\n4 * 6 = 24 (left: 2 3 24)\n3 * 2 = 6 (left: 6 24)\n6 * 24 = 144 (left: 144)\nAnswer: 4 * 6 = 24, 3 * 2 = 6, (6 * 24) / 144 = 24",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "4 5 10"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "4 5 10"
                }
            },
            "Step 4": {
                "Step": "10 - 5 = 5 (left: 4 5 10) -> 5 + 4 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 5 = 5 (left: 4 5 10) -> 5 + 4 = 9 (left: 9) -> 8 + 9 = 17 (left: 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 5 = 5 (left: 4 5 10) -> 5 + 4 = 9 (left: 9) -> 8 + 9 = 17 (left: 9) -> 8 + 9 = 17 (left: 9)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "There are no possible next steps as the equation is already simplified to 4."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "4 + 4 = 8"
                }
            },
            "Step 7": {
                "Step": "10 - 5 = 5 (left: 4 5 10) -> 10 - 4 = 6 (left: 6 10) -> 10 - 6 = 4 (left: 4) -> 4 + 4 = 8 -> 4 * 4 = 16 (left: 8 16)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 5 = 5 (left: 4 5 10) -> 10 - 4 = 6 (left: 6 10) -> 10 - 6 = 4 (left: 4) -> 4 + 4 = 8 -> 4 * 4 = 16 (left: 8 16) -> 8 * 16 = 128 (left: 128)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "There are no possible next steps with the input 1.6667."
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "4 + 5 = 9 (left: 6 9 10)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 5 10"
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 4 5 10) -> 10 - 4 = 6 (left: 6 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 4 5 10) -> 10 - 4 = 6 (left: 6 10) -> 6 / 10 = 0.6 (left: 0.6)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 4 5 10) -> 10 - 4 = 6 (left: 6 10) -> 6 / 10 = 0.6 (left: 0.6) -> There are no possible next steps with the input 0.6.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "4 5 10"
                }
            },
            "Step 4": {
                "Step": "10 - 5 = 5 (left: 4 5 10) -> 10 - 5 = ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 5 = 5 (left: 4 5 10) -> 10 - 5 =  -> 10 - 5 = 5",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 5 = 5 (left: 4 5 10) -> 10 - 5 =  -> 10 - 5 = 5 -> 5 + 5 = 10",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "1.2 + 2 = 3.2"
                }
            },
            "Step 7": {
                "Step": "10 - 5 = 5 (left: 4 5 10) -> 10 - 4 = 6 (left: 6 5) -> 6 / 5 = 1.2 (left: 1.2) -> 1.2 + 2 = 3.2 -> 1.2 * 2 = 2.4 (left: 2.4)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "There are no possible next steps as the equation is already simplified to 4."
                }
            },
            "Step 8": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 - 4 = 2 (left: 2) -> 2 + 2 = 4 -> There are no possible next steps as the equation is already simplified to 4. -> There are no possible next steps as the equation is already simplified to 4.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 4 11 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 + 6 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 * 8 = 80 (left: 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 * 8 = 80 (left: 8) -> 8 - 8 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "4 5 10"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "6 5 10"
                }
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 6 5 10) -> 6 + 5 = 11 (left: 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 6 5 10) -> 6 + 5 = 11 (left: 10) -> 10 + 2 = 12",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 6 5 10) -> 6 + 5 = 11 (left: 10) -> 10 + 2 = 12 -> 12 / 2 = 6 (left: 6 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "4 + 4 = 8"
                }
            },
            "Step 7": {
                "Step": "10 - 5 = 5 (left: 4 5 10) -> 10 - 4 = 6 (left: 6 10) -> 10 - 6 = 4 (left: 4) -> 4 + 4 = 8 -> 8 - 4 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "4 + 4 = 8"
                }
            },
            "Step 8": {
                "Step": "10 - 4 = 6 (left: 6 5 10) -> 10 / 5 = 2 (left: 2 6) -> 6 - 2 = 4 (left: 4) -> 4 + 4 = 8 -> 4 * 4 = 16 (left: 4 8 16)",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "6 * 5 = 30 (left: 4 10 30)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 + 6 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 + 8 = 18 (left: 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 + 8 = 18 (left: 8) -> There are no possible next steps with only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "6 5 10"
                }
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 6 5 10) -> 6 * 5 = 30 (left: 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 6 5 10) -> 6 * 5 = 30 (left: 10) -> 10 / 2 = 5",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 6 5 10) -> 6 * 5 = 30 (left: 10) -> 10 / 2 = 5 -> 10 * 2 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "1.2 + 2 = 3.2"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "1.2 + 2 = 3.2"
                }
            },
            "Step 7": {
                "Step": "10 - 5 = 5 (left: 4 5 10) -> 10 - 4 = 6 (left: 6 5) -> 6 / 5 = 1.2 (left: 1.2) -> 1.2 + 2 = 3.2 -> 3.2 - 2 = 1.2 (left: 1.2 2 3.2)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 5 = 5 (left: 4 5 10) -> 10 - 4 = 6 (left: 6 5) -> 6 / 5 = 1.2 (left: 1.2) -> 1.2 + 2 = 3.2 -> 3.2 - 2 = 1.2 (left: 1.2 2 3.2) -> 3.2 - 1.2 = 2 (left: 2 3.2)",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "6 / 4 = 1.5 (left: 1.5 4 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 + 6 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 * 8 = 80 (left: 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 * 8 = 80 (left: 8) -> 8 + 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "6 5 10"
                },
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "6 5 10"
                }
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 6 5 10) -> 10 / 5 = 2 (left: 2 6)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 6 5 10) -> 10 / 5 = 2 (left: 2 6) -> 6 - 2 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 6 5 10) -> 10 / 5 = 2 (left: 2 6) -> 6 - 2 = 4 (left: 4) -> 4 + 4 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "There are no possible next steps with the input 1.6667."
                }
            },
            "Step 7": {
                "Step": "10 - 5 = 5 (left: 4 5 10) -> 10 - 4 = 6 (left: 6 10) -> 10 / 6 = 1.6667 (left: 1.6667) -> There are no possible next steps with the input 1.6667. -> 1.6667 / 2 = 0.83335 (left: 0.83335)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "4 + 4 = 8"
                }
            },
            "Step 8": {
                "Step": "10 - 4 = 6 (left: 6 5 10) -> 10 / 5 = 2 (left: 2 6) -> 6 - 2 = 4 (left: 4) -> 4 + 4 = 8 -> 8 - 4 = 4 (left: 4 4 8)",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "6 - 4 = 2 (left: 2 5 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 3 + 5 = 8 (left: 7 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 3 + 5 = 8 (left: 7 8) -> 7 - 8 = -1 (left: -1 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 3 + 5 = 8 (left: 7 8) -> 7 - 8 = -1 (left: -1 8) -> -1 - 8 = -9 (left: -9)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "4 11 10"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "4 5 10"
                }
            },
            "Step 4": {
                "Step": "10 - 5 = 5 (left: 4 5 10) -> 5 * 4 = 20 (left: 20 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 5 = 5 (left: 4 5 10) -> 5 * 4 = 20 (left: 20 10) -> 20 / 10 = 2 (left: 2 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 5 = 5 (left: 4 5 10) -> 5 * 4 = 20 (left: 20 10) -> 20 / 10 = 2 (left: 2 10) -> 10 - 2 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "There are no possible next steps with the input 0.6."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "4 + 4 = 8"
                }
            },
            "Step 7": {
                "Step": "10 - 5 = 5 (left: 4 5 10) -> 10 - 4 = 6 (left: 6 10) -> 10 - 6 = 4 (left: 4) -> 4 + 4 = 8 -> 4 - 4 = 0 (left: 0 8)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 5 = 5 (left: 4 5 10) -> 10 - 4 = 6 (left: 6 10) -> 10 - 6 = 4 (left: 4) -> 4 + 4 = 8 -> 4 - 4 = 0 (left: 0 8) -> 0 + 8 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "1.2 + 2 = 3.2"
                }
            }
        },
        "Input": "4 5 6 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "901": {
        "puzzle": "1 2 4 7",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 4 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "1 8 7"
                }
            },
            "Step 1": {
                "Step": "2 * 4 = 8 (left: 1 8 7) -> 8 / 1 = 8 (left: 8 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 4 = 8 (left: 1 8 7) -> 8 / 1 = 8 (left: 8 7) -> 8 / 7 = 1.14285714286 (left: 1.14285714286)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 4 = 8 (left: 1 8 7) -> 8 / 1 = 8 (left: 8 7) -> 8 / 7 = 1.14285714286 (left: 1.14285714286) -> 1.14285714286 * 2 = 2.28571428572",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "2.33 5"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 4 / 3 = 1.33 (left: 1.33 7) -> Input: 5 3 7  -> 7 / 3 = 2.33 (left: 2.33 5) -> 5 - 2.33 = 2.67 (left: 2.67)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "1.14285714286 * 2 = 2.28571428572"
                }
            },
            "Step 5": {
                "Step": "2 * 4 = 8 (left: 1 8 7) -> 8 / 1 = 8 (left: 8 7) -> 8 / 7 = 1.14285714286 (left: 1.14285714286) -> 1.14285714286 * 2 = 2.28571428572 -> 2 - 1.14285714286 = 0.85714285714 (left: 0.85714285714 2.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 4 = 8 (left: 1 8 7) -> 8 / 1 = 8 (left: 8 7) -> 8 / 7 = 1.14285714286 (left: 1.14285714286) -> 1.14285714286 * 2 = 2.28571428572 -> 2 - 1.14285714286 = 0.85714285714 (left: 0.85714285714 2. -> 0.85714285714 + 2 = 2.85714285714 (left: 2.85714285714)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "There are no possible next steps with the input of 5."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "2.33 5"
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 4 / 3 = 1.33 (left: 1.33 7) -> Input: 5 3 7  -> 7 / 3 = 2.33 (left: 2.33 5) -> 5 - 2.33 = 2.67 (left: 2.67 5)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 4 / 3 = 1.33 (left: 1.33 7) -> Input: 5 3 7  -> 7 / 3 = 2.33 (left: 2.33 5) -> 5 - 2.33 = 2.67 (left: 2.67 5) -> 2.67 + 5 = 7.67 (left: 7.67)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "There are no possible next steps with the input of 5."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 - 2 = 2 (left: 1 2 7)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 4 7"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 3 + 4 = 7 (left: 7 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 3 + 4 = 7 (left: 7 7) -> 7 - 7 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 3 + 4 = 7 (left: 7 7) -> 7 - 7 = 0 (left: 0) -> There are no possible next steps as there are no numbers provided in the input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "3 4 7"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 3 * 4 = 12 (left: 12 7)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 3 * 4 = 12 (left: 12 7) -> 12 + 7 = 19 (left: 19)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 3 * 4 = 12 (left: 12 7) -> 12 + 7 = 19 (left: 19) -> There are no possible next steps with just the number 19.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "2.33 5"
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 4 / 3 = 1.33 (left: 1.33 7) -> Input: 5 3 7  -> 7 / 3 = 2.33 (left: 2.33 5) -> 5 - 2.33 = 2.67 (left: 2.67)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "There is only one number provided, so there are no possible next steps to perform any operations."
                }
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 7 - 3 = 4 (left: 4 7) -> Input: 3 -> There is only one number provided, so there are no possible next steps to perform any operations. -> No possible next steps as there is only one number provided.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 * 4 = 8 (left: 1 8 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 4 7"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 4 / 3 = 1.33 (left: 1.33 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 4 / 3 = 1.33 (left: 1.33 7) -> Input: 5 3 7 ",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 4 / 3 = 1.33 (left: 1.33 7) -> Input: 5 3 7  -> 7 / 3 = 2.33 (left: 2.33 5)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 8 7"
                }
            },
            "Step 4": {
                "Step": "2 * 4 = 8 (left: 1 8 7) -> 1 + 8 = 9 (left: 7 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 * 4 = 8 (left: 1 8 7) -> 1 + 8 = 9 (left: 7 9) -> 9 / 7 = 1.2857142857142858 (left: 1.2857142857142858)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 4 = 8 (left: 1 8 7) -> 1 + 8 = 9 (left: 7 9) -> 9 / 7 = 1.2857142857142858 (left: 1.2857142857142858) -> 1.2857142857142858 - 2 = -0.7142857142857142 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "2.33 5"
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 4 / 3 = 1.33 (left: 1.33 7) -> Input: 5 3 7  -> 7 / 3 = 2.33 (left: 2.33 5) -> 2.33 * 5 = 11.65 (left: 11.65)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "There are no possible next steps with an input of 0."
                }
            },
            "Step 8": {
                "Step": "2 * 4 = 8 (left: 1 8 7) -> 8 / 1 = 8 (left: 8 8) -> 8 - 8 = 0 (left: 0) -> There are no possible next steps with an input of 0. -> There are no possible next steps with an input of 0.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 4 7)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "1 2 3"
                }
            },
            "Step 1": {
                "Step": "7 - 4 = 3 (left: 1 2 3) -> 1 * 2 = 2 (left: 2 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 4 = 3 (left: 1 2 3) -> 1 * 2 = 2 (left: 2 3) -> 2 * 3 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 4 = 3 (left: 1 2 3) -> 1 * 2 = 2 (left: 2 3) -> 2 * 3 = 6 (left: 6) -> 6 - 8 = -2 (left: -2)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "1 8 7"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "3 4 7"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 7 - 4 = ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 7 - 4 =  -> 7 - 4 = 3",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 7 - 4 =  -> 7 - 4 = 3 -> 3 + 4 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "There are no possible next steps with an input of 0."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "2.33 5"
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 4 / 3 = 1.33 (left: 1.33 7) -> Input: 5 3 7  -> 7 / 3 = 2.33 (left: 2.33 5) -> 5 - 2.33 = 2.67 (left: 2.67)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "There are no possible next steps for the input 2.3333333333333335 as it is already a single number and cannot be further manipulated using basic arithmetic operations."
                }
            },
            "Step 8": {
                "Step": "4 - 2 = 2 (left: 1 2 7) -> 1 + 2 = 3 (left: 3 7) -> 7 / 3 = 2.3333333333333335 (left: 2.3333333333333335) -> There are no possible next steps for the input 2.3333333333333335 as it is already a single number and cannot be further manipulated using basic arithmetic operations. -> None.",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "There are no possible next steps for the input 2.3333333333333335 as it is already a single number and cannot be further manipulated using basic arithmetic operations."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 + 7 = 11 (left: 1 2 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "1 2 3"
                }
            },
            "Step 1": {
                "Step": "7 - 4 = 3 (left: 1 2 3) -> 2 + 3 = 5 (left: 1 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 4 = 3 (left: 1 2 3) -> 2 + 3 = 5 (left: 1 5) -> 5 / 1 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 4 = 3 (left: 1 2 3) -> 2 + 3 = 5 (left: 1 5) -> 5 / 1 = 5 (left: 5) -> There are no possible next steps with the input of 5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "3 4 7"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 4 - 3 = 1 (left: 1 7)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 4 - 3 = 1 (left: 1 7) -> 1 * 7 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 4 - 3 = 1 (left: 1 7) -> 1 * 7 = 7 (left: 7) -> 7 - 8 = -1 (left: -1 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "2.33 5"
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 4 / 3 = 1.33 (left: 1.33 7) -> Input: 5 3 7  -> 7 / 3 = 2.33 (left: 2.33 5) -> 2.33 / 5 = 0.466 (left: 0.466)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "There are no possible next steps for the input 2.3333333333333335 as it is already a single number and cannot be further manipulated using basic arithmetic operations."
                }
            },
            "Step 8": {
                "Step": "4 - 2 = 2 (left: 1 2 7) -> 1 + 2 = 3 (left: 3 7) -> 7 / 3 = 2.3333333333333335 (left: 2.3333333333333335) -> There are no possible next steps for the input 2.3333333333333335 as it is already a single number and cannot be further manipulated using basic arithmetic operations. -> There are no possible next steps for the input 2.3333333333333335 as it is already a single number and cannot be further manipulated using basic arithmetic operations.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "7 - 4 = 3 (left: 1 2 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "1 2 7"
                }
            },
            "Step 1": {
                "Step": "4 - 2 = 2 (left: 1 2 7) -> 1 + 2 = 3 (left: 3 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 - 2 = 2 (left: 1 2 7) -> 1 + 2 = 3 (left: 3 7) -> 7 / 3 = 2.3333333333333335 (left: 2.3333333333333335)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 - 2 = 2 (left: 1 2 7) -> 1 + 2 = 3 (left: 3 7) -> 7 / 3 = 2.3333333333333335 (left: 2.3333333333333335) -> There are no possible next steps for the input 2.3333333333333335 as it is already a single number and cannot be further manipulated using basic arithmetic operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "3 4 7"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 3 /",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 3 / -> 3 / 8 = 0.375",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 3 / -> 3 / 8 = 0.375 -> 3 - 8 = -5 (left: -5)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "2.33 5"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "2.33 5"
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 4 / 3 = 1.33 (left: 1.33 7) -> Input: 5 3 7  -> 7 / 3 = 2.33 (left: 2.33 5) -> Possible next steps:",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 4 / 3 = 1.33 (left: 1.33 7) -> Input: 5 3 7  -> 7 / 3 = 2.33 (left: 2.33 5) -> Possible next steps: -> It seems like there was an error in the input. Can you please provide the correct set of numbers for me to suggest possible next steps?",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "7 - 1 = 6 (left: 2 4 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "1 8 7"
                }
            },
            "Step 1": {
                "Step": "2 * 4 = 8 (left: 1 8 7) -> 1 + 8 = 9 (left: 7 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 4 = 8 (left: 1 8 7) -> 1 + 8 = 9 (left: 7 9) -> 7 / 9 = 0.7777777777777778 (left: 0.7777777777777778)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 4 = 8 (left: 1 8 7) -> 1 + 8 = 9 (left: 7 9) -> 7 / 9 = 0.7777777777777778 (left: 0.7777777777777778) -> 0.7777777777777778 / 0.7777777777777778 = 1.0",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "3 4 7"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 4 - 3 = 1 (left: 1 7)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 4 - 3 = 1 (left: 1 7) -> 7 / 1 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 4 - 3 = 1 (left: 1 7) -> 7 / 1 = 7 (left: 7) -> 7 - 8 = -1 (left: -1 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "2.33 5"
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 4 / 3 = 1.33 (left: 1.33 7) -> Input: 5 3 7  -> 7 / 3 = 2.33 (left: 2.33 5) -> ",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "There are no possible next steps with the input of 5."
                }
            },
            "Step 8": {
                "Step": "7 - 4 = 3 (left: 1 2 3) -> 2 + 3 = 5 (left: 1 5) -> 5 / 1 = 5 (left: 5) -> There are no possible next steps with the input of 5. -> There are no possible next steps with the input of 5. -> There are no possible next steps with the input of 5. -> There are no possible next steps with the input of 5.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "2 * 4 = 8 (left: 1 8 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 8 7"
                }
            },
            "Step 1": {
                "Step": "2 * 4 = 8 (left: 1 8 7) -> 8 - 7 = 1 (left: 1 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 4 = 8 (left: 1 8 7) -> 8 - 7 = 1 (left: 1 8) -> 8 - 1 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 4 = 8 (left: 1 8 7) -> 8 - 7 = 1 (left: 1 8) -> 8 - 1 = 7 (left: 7) -> 7 / 8 = 0.875 (left: 0.875)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "3 4 7"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "3 4 7"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 7 - 3 = 4 (left: 4 7)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 7 - 3 = 4 (left: 4 7) -> Input: 3",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 7 - 3 = 4 (left: 4 7) -> Input: 3 -> There is only one number provided, so there are no possible next steps to perform any operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "2.33 5"
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 4 / 3 = 1.33 (left: 1.33 7) -> Input: 5 3 7  -> 7 / 3 = 2.33 (left: 2.33 5) -> Input: -4 10",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 4 / 3 = 1.33 (left: 1.33 7) -> Input: 5 3 7  -> 7 / 3 = 2.33 (left: 2.33 5) -> Input: -4 10 -> -4 + 10 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "There are no possible next steps with the input 3."
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "7 - 4 = 3 (left: 1 2 3)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 4 7"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 3 + 4 = 7 (left: 7 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 3 + 4 = 7 (left: 7 7) -> 7 + 7 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 3 + 4 = 7 (left: 7 7) -> 7 + 7 = 14 (left: 14) -> 14 - 2 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "1 2 3"
                },
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "2.33 5"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 4 / 3 = 1.33 (left: 1.33 7) -> Input: 5 3 7  -> 7 / 3 = 2.33 (left: 2.33 5) -> 2.33 * 5 = 11.65 (left: 11.65)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "There are no possible next steps with the input of 5."
                }
            },
            "Step 5": {
                "Step": "7 - 4 = 3 (left: 1 2 3) -> 2 + 3 = 5 (left: 1 5) -> 5 / 1 = 5 (left: 5) -> There are no possible next steps with the input of 5. -> There are no possible next steps with the input of 5.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 4 = 3 (left: 1 2 3) -> 2 + 3 = 5 (left: 1 5) -> 5 / 1 = 5 (left: 5) -> There are no possible next steps with the input of 5. -> There are no possible next steps with the input of 5. -> There are no possible next steps with the input of 5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "2.33 5"
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 4 / 3 = 1.33 (left: 1.33 7) -> Input: 5 3 7  -> 7 / 3 = 2.33 (left: 2.33 5) -> 10 + 3.5 =",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 4 / 3 = 1.33 (left: 1.33 7) -> Input: 5 3 7  -> 7 / 3 = 2.33 (left: 2.33 5) -> 10 + 3.5 = -> 10 + 3.5 = 13.5",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "4 - 2 = 2 (left: 1 2 7)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "1 8 7"
                }
            },
            "Step 1": {
                "Step": "2 * 4 = 8 (left: 1 8 7) -> 8 / 1 = 8 (left: 8 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 4 = 8 (left: 1 8 7) -> 8 / 1 = 8 (left: 8 8) -> 8 - 8 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 4 = 8 (left: 1 8 7) -> 8 / 1 = 8 (left: 8 8) -> 8 - 8 = 0 (left: 0) -> There are no possible next steps with an input of 0.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "1 2 3"
                }
            },
            "Step 4": {
                "Step": "7 - 4 = 3 (left: 1 2 3) -> 1 * 3 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 - 4 = 3 (left: 1 2 3) -> 1 * 3 = 3 (left: 3) -> There are no possible next steps with the input 3.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 4 = 3 (left: 1 2 3) -> 1 * 3 = 3 (left: 3) -> There are no possible next steps with the input 3. -> There are no possible next steps with the input 3.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "2.33 5"
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 4 / 3 = 1.33 (left: 1.33 7) -> Input: 5 3 7  -> 7 / 3 = 2.33 (left: 2.33 5) -> 5 - 2.33 = 2.67 (left: 2.67)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "1.2857142857142858 - 2 = -0.7142857142857142 "
                }
            },
            "Step 8": {
                "Step": "2 * 4 = 8 (left: 1 8 7) -> 1 + 8 = 9 (left: 7 9) -> 9 / 7 = 1.2857142857142858 (left: 1.2857142857142858) -> 1.2857142857142858 - 2 = -0.7142857142857142  -> 1.2857142857142858 * 2 = 2.5714285714285716 (left: 2.5714285714285716 -0.7142857142857142)",
                "Pruning": null
            }
        },
        "Input": "1 2 4 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "902": {
        "puzzle": "2 5 8 11",
        "Agent 0": {
            "Step 0": {
                "Step": "11 - 5 = 6 (left: 2 6 ",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 8 11"
                }
            },
            "Step 1": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 3 = 8 (left: 8 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 3 = 8 (left: 8 11) -> 8 + 11 = 19 (left: 19)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 3 = 8 (left: 8 11) -> 8 + 11 = 19 (left: 19) -> 19 / 2 = 9.5 (left: 9.5)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "2 5 9"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "2 5 9"
                }
            },
            "Step 4": {
                "Step": "11 - 2 = 9 (left: 2 5 9) -> 2 + 5 = 7 (left: 7 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 2 = 9 (left: 2 5 9) -> 2 + 5 = 7 (left: 7 9) -> 7 * 9 = 63 (left: 63)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 2 = 9 (left: 2 5 9) -> 2 + 5 = 7 (left: 7 9) -> 7 * 9 = 63 (left: 63) -> 63 is a single number, so there are no possible next steps to perform.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "63 is a single number, so there are no possible next steps to perform."
                }
            },
            "Step 7": {
                "Step": "11 - 2 = 9 (left: 2 5 9) -> 2 + 5 = 7 (left: 7 9) -> 7 * 9 = 63 (left: 63) -> 63 is a single number, so there are no possible next steps to perform. -> 63 + 2 = 65",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 2 = 9 (left: 2 5 9) -> 2 + 5 = 7 (left: 7 9) -> 7 * 9 = 63 (left: 63) -> 63 is a single number, so there are no possible next steps to perform. -> 63 + 2 = 65 -> 63 * 2 = 126 (left: 126)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "0.8181818181818182 + 2 = 2.8181818181818183"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "11 - 2 = 9 (left: 2 5 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 8 11"
                }
            },
            "Step 1": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 / 3 = 3.67 (left: 3.67 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 / 3 = 3.67 (left: 3.67 8) -> 3.67 + 8 = 11.67 (left: 11.67)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 / 3 = 3.67 (left: 3.67 8) -> 3.67 + 8 = 11.67 (left: 11.67) -> There is only one number provided, so there are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "2 5 9"
                }
            },
            "Step 4": {
                "Step": "11 - 2 = 9 (left: 2 5 9) -> 9 - 2 = 7 (left: 5 7)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 2 = 9 (left: 2 5 9) -> 9 - 2 = 7 (left: 5 7) -> 5 + 7 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 2 = 9 (left: 2 5 9) -> 9 - 2 = 7 (left: 5 7) -> 5 + 7 = 12 (left: 12) -> 12 / 8 = 1.5 (left: 1.",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "There are no possible next steps with the input of -4."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "13 26"
                }
            },
            "Step 7": {
                "Step": "5 * 8 = 40 (left: 2 40 11) -> 11 / 2 = 5.5 ( -> 11 + 2 = 13 (left: 2 13) -> 2 * 13 = 26 (left: 13 26) -> 10 - 3 =",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 * 8 = 40 (left: 2 40 11) -> 11 / 2 = 5.5 ( -> 11 + 2 = 13 (left: 2 13) -> 2 * 13 = 26 (left: 13 26) -> 10 - 3 = -> 10 - 3 = 7",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 - 2 = 3 (left: 3 8 11)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "2 13 11"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 2 13 11) -> Possible next steps:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 2 13 11) -> Possible next steps: -> There are no possible next steps with the given input.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 2 13 11) -> Possible next steps: -> There are no possible next steps with the given input. -> There are no possible next steps with the given input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "2 5 9"
                }
            },
            "Step 4": {
                "Step": "11 - 2 = 9 (left: 2 5 9) -> 9 - 5 = 4 (left: 2 4)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 2 = 9 (left: 2 5 9) -> 9 - 5 = 4 (left: 2 4) -> 2 + 4 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 2 = 9 (left: 2 5 9) -> 9 - 5 = 4 (left: 2 4) -> 2 + 4 = 6 (left: 6) -> 6 * 8 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "0.8181818181818182 + 2 = 2.8181818181818183"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "18 9"
                }
            },
            "Step 7": {
                "Step": "5 + 8 = 13 (left: 2 13 11) -> 2 + 13 = 15 (left: 11 15) -> Input: 3 6 9 -> 6 * 3 = 18 (left: 18 9) -> 18 - 9 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "None, the input has already been evaluated."
                }
            },
            "Step 8": {
                "Step": "5 + 8 = 13 (left: 2 13 11) -> 2 * 13 = 26 (left: 11 26) -> Possible next steps: -> None, the input has already been evaluated. -> N/A",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "63 is a single number, so there are no possible next steps to perform."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 * 8 = 40 (left: 2 40 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "7 8 11"
                }
            },
            "Step 1": {
                "Step": "2 + 5 = 7 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 5 = 7 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 11 - 1 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 5 = 7 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 11 - 1 = 10 (left: 10) -> 10 / 2 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "2 13 11"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "2 5 9"
                }
            },
            "Step 4": {
                "Step": "11 - 2 = 9 (left: 2 5 9) -> 5 * 9 = 45 (left: 2 45)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 2 = 9 (left: 2 5 9) -> 5 * 9 = 45 (left: 2 45) -> 45 - 2 = 43",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 2 = 9 (left: 2 5 9) -> 5 * 9 = 45 (left: 2 45) -> 45 - 2 = 43 -> 45 * 2 = 90 (left: 43 90)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "There are no possible next steps with the given input."
                }
            },
            "Step 7": {
                "Step": "5 + 8 = 13 (left: 2 13 11) -> Possible next steps: -> There are no possible next steps with the given input. -> There are no possible next steps with the given input. -> There are no possible next steps with the given input.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 8 = 13 (left: 2 13 11) -> Possible next steps: -> There are no possible next steps with the given input. -> There are no possible next steps with the given input. -> There are no possible next steps with the given input. -> There are no possible next steps with the given input.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 5 = 7 (left: 7 8 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "2 13 11"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 2 13 11) -> 2 * 13 = 26 (left: 11 26)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 2 13 11) -> 2 * 13 = 26 (left: 11 26) -> Possible next steps:",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 2 13 11) -> 2 * 13 = 26 (left: 11 26) -> Possible next steps: -> None, the input has already been evaluated.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "2 13 11"
                }
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 2 13 11) -> 2 + 13 = 15 (left: 11 15)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 8 = 13 (left: 2 13 11) -> 2 + 13 = 15 (left: 11 15) -> Input: 3 6 9",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 8 = 13 (left: 2 13 11) -> 2 + 13 = 15 (left: 11 15) -> Input: 3 6 9 -> 6 * 3 = 18 (left: 18 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "There are no possible next steps with the input of -4."
                }
            },
            "Step 7": {
                "Step": "5 + 8 = 13 (left: 2 13 11) -> 2 + 13 = 15 (left: 11 15) -> 11 - 15 = -4 (left: -4) -> There are no possible next steps with the input of -4. -> There are no possible next steps with the input of -4.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 8 = 13 (left: 2 13 11) -> 2 + 13 = 15 (left: 11 15) -> 11 - 15 = -4 (left: -4) -> There are no possible next steps with the input of -4. -> There are no possible next steps with the input of -4. -> There are no possible next steps with the input of -4.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 2 13 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "2 13 11"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 2 13 11) -> 11 - 2 = 9 (left: 9 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 2 13 11) -> 11 - 2 = 9 (left: 9 11) -> 9 / 11 = 0.8181818181818182 (left: 0.8181818181818182)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 2 13 11) -> 11 - 2 = 9 (left: 9 11) -> 9 / 11 = 0.8181818181818182 (left: 0.8181818181818182) -> 0.8181818181818182 + 2 = 2.8181818181818183",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "2 40 11"
                }
            },
            "Step 4": {
                "Step": "5 * 8 = 40 (left: 2 40 11) -> 40 - 11 = 29 (left: 2 29)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 8 = 40 (left: 2 40 11) -> 40 - 11 = 29 (left: 2 29) -> 29 - 2 = 27 (left: 27)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 8 = 40 (left: 2 40 11) -> 40 - 11 = 29 (left: 2 29) -> 29 - 2 = 27 (left: 27) -> 27 - 2 = 25 (left: 25)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "There are no possible next steps with the input of -4."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "0.8181818181818182 + 2 = 2.8181818181818183"
                }
            },
            "Step 7": {
                "Step": "5 + 8 = 13 (left: 2 13 11) -> 11 - 2 = 9 (left: 9 11) -> 9 / 11 = 0.8181818181818182 (left: 0.8181818181818182) -> 0.8181818181818182 + 2 = 2.8181818181818183 -> 2 - 0.8181818181818182 = 1.1818181818181818 (left: 0.4090909090909091 1.1818181818181818 2.8181818181818183)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 8 = 13 (left: 2 13 11) -> 11 - 2 = 9 (left: 9 11) -> 9 / 11 = 0.8181818181818182 (left: 0.8181818181818182) -> 0.8181818181818182 + 2 = 2.8181818181818183 -> 2 - 0.8181818181818182 = 1.1818181818181818 (left: 0.4090909090909091 1.1818181818181818 2.8181818181818183) -> 0.4090909090909091 * 1.1818181818181818 = 0.4833333333333334 (left: 0.4833333333333334 2.8181818181818183)",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "2 + 5 = 7 (left: 7 8 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "2 13 11"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 2 13 11) -> 2 + 13 = 15 (left: 11 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 2 13 11) -> 2 + 13 = 15 (left: 11 15) -> 11 - 15 = -4 (left: -4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 2 13 11) -> 2 + 13 = 15 (left: 11 15) -> 11 - 15 = -4 (left: -4) -> There are no possible next steps with the input of -4.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "2 40 11"
                }
            },
            "Step 4": {
                "Step": "5 * 8 = 40 (left: 2 40 11) -> 11 / 2 = 5.5 (",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 8 = 40 (left: 2 40 11) -> 11 / 2 = 5.5 ( -> 11 + 2 = 13 (left: 2 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 8 = 40 (left: 2 40 11) -> 11 / 2 = 5.5 ( -> 11 + 2 = 13 (left: 2 13) -> 2 * 13 = 26 (left: 13 26)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "13 26"
                }
            },
            "Step 7": {
                "Step": "5 * 8 = 40 (left: 2 40 11) -> 11 / 2 = 5.5 ( -> 11 + 2 = 13 (left: 2 13) -> 2 * 13 = 26 (left: 13 26) -> 26 - 13 = 13 (left: 13)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "None, the input has already been evaluated."
                }
            },
            "Step 8": {
                "Step": "5 + 8 = 13 (left: 2 13 11) -> 2 * 13 = 26 (left: 11 26) -> Possible next steps: -> None, the input has already been evaluated. -> Input: None",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 2 13 11)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 8 11"
                }
            },
            "Step 1": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 3 * 8 = 24 (left: 11 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 3 * 8 = 24 (left: 11 24) -> 11 * 24 = 264 (left: 264)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 3 * 8 = 24 (left: 11 24) -> 11 * 24 = 264 (left: 264) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "2 13 11"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "2 40 11"
                }
            },
            "Step 4": {
                "Step": "5 * 8 = 40 (left: 2 40 11) -> 2 * 40 = 80 (left: 80 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 8 = 40 (left: 2 40 11) -> 2 * 40 = 80 (left: 80 11) -> 80 * 11 = 880 (left: 880)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 8 = 40 (left: 2 40 11) -> 2 * 40 = 80 (left: 80 11) -> 80 * 11 = 880 (left: 880) -> 8 * 0 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "There are no possible next steps with the given input."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "There are no possible next steps with the input 0."
                }
            },
            "Step 7": {
                "Step": "5 + 8 = 13 (left: 2 13 11) -> 13 - 2 = 11 (left: 11 11) -> 11 - 11 = 0 (left: 0) -> There are no possible next steps with the input 0. -> There are no possible next steps with the input 0.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 8 = 13 (left: 2 13 11) -> 13 - 2 = 11 (left: 11 11) -> 11 - 11 = 0 (left: 0) -> There are no possible next steps with the input 0. -> There are no possible next steps with the input 0. -> There are no possible next steps with the input 0.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 2 13 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 8 11"
                }
            },
            "Step 1": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 3 * 8 = 24 (left: 11 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 3 * 8 = 24 (left: 11 24) -> 24 - 11 = 13 (left: 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 3 * 8 = 24 (left: 11 24) -> 24 - 11 = 13 (left: 13) -> There are no possible next steps with the input 13.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "2 40 11"
                }
            },
            "Step 4": {
                "Step": "5 * 8 = 40 (left: 2 40 11) -> 2 * 40 = 80 (left: 11 80)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 8 = 40 (left: 2 40 11) -> 2 * 40 = 80 (left: 11 80) -> 3 * 5 = 15",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 8 = 40 (left: 2 40 11) -> 2 * 40 = 80 (left: 11 80) -> 3 * 5 = 15 -> 3 + 5 = 8 (left: 8 = 15)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "13 26"
                }
            },
            "Step 7": {
                "Step": "5 * 8 = 40 (left: 2 40 11) -> 11 / 2 = 5.5 ( -> 11 + 2 = 13 (left: 2 13) -> 2 * 13 = 26 (left: 13 26) -> 26 - 13 = 13 (left: 13)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "0.8181818181818182 + 2 = 2.8181818181818183"
                }
            },
            "Step 8": {
                "Step": "5 + 8 = 13 (left: 2 13 11) -> 11 - 2 = 9 (left: 9 11) -> 9 / 11 = 0.8181818181818182 (left: 0.8181818181818182) -> 0.8181818181818182 + 2 = 2.8181818181818183 -> 2.8181818181818183 * 2 = 5.636363636363637",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "8 * 11 = 88 (left: 2 5 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "2 13 11"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 2 13 11) -> 13 - 2 = 11 (left: 11 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 2 13 11) -> 13 - 2 = 11 (left: 11 11) -> 11 * 11 = 121 (left: 121)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 2 13 11) -> 13 - 2 = 11 (left: 11 11) -> 11 * 11 = 121 (left: 121) -> 2 * 1 + 1 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "2 40 11"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "2 13 11"
                }
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 2 13 11) -> 13 - 2 = 11 (left: 11 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 8 = 13 (left: 2 13 11) -> 13 - 2 = 11 (left: 11 11) -> 11 - 11 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 8 = 13 (left: 2 13 11) -> 13 - 2 = 11 (left: 11 11) -> 11 - 11 = 0 (left: 0) -> There are no possible next steps with the input 0.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "43 90"
                }
            },
            "Step 7": {
                "Step": "11 - 2 = 9 (left: 2 5 9) -> 5 * 9 = 45 (left: 2 45) -> 45 - 2 = 43 -> 45 * 2 = 90 (left: 43 90) -> 43 / 90 = 0.4777777777777778 (left: 0.4777777777777778)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "None, the input has already been evaluated."
                }
            },
            "Step 8": {
                "Step": "5 + 8 = 13 (left: 2 13 11) -> 2 * 13 = 26 (left: 11 26) -> Possible next steps: -> None, the input has already been evaluated. -> No further steps can be taken as all possible operations have been exhausted. The final numbers are 8, 8, and 12.",
                "Pruning": null
            }
        },
        "Input": "2 5 8 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "903": {
        "puzzle": "3 4 4 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 4 = 9 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "13 - 4 = 9 (left"
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left -> 13 / 4 = 3.25 (left: 3.25 - 4 = -0.75)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left -> 13 / 4 = 3.25 (left: 3.25 - 4 = -0.75) -> 3.25 + 4 = 7.25 (left: 7.25 - 4 = 3.25)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left -> 13 / 4 = 3.25 (left: 3.25 - 4 = -0.75) -> 3.25 + 4 = 7.25 (left: 7.25 - 4 = 3.25) -> 4 - 7.25 = -3.25 (left: -3.25)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "1 4 13"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "4 4 16"
                }
            },
            "Step 4": {
                "Step": "13 + 3 = 16 (left: 4 4 16) -> 16 / 4 = 4 (left: 4 4)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 + 3 = 16 (left: 4 4 16) -> 16 / 4 = 4 (left: 4 4) -> 4 * 4 = 16 (left: 16)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 + 3 = 16 (left: 4 4 16) -> 16 / 4 = 4 (left: 4 4) -> 4 * 4 = 16 (left: 16) -> There are no possible next steps with the number 16 as it is the final result.",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps with the number 16 as it is the final result."
                }
            },
            "Step 7": {
                "Step": "13 + 3 = 16 (left: 4 4 16) -> 16 / 4 = 4 (left: 4 4) -> 4 * 4 = 16 (left: 16) -> There are no possible next steps with the number 16 as it is the final result. -> N/A",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "7.67 / 2 = 3.835"
                }
            },
            "Step 8": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 4 / 3 = 1.33 (left: 1.33 9) -> 9 - 1.33 = 7.67 (left: 7.67) -> 7.67 / 2 = 3.835 -> 7.67 * 2 = 15.34",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 * 4 = 12 (left: 4 12 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "13 - 4 = 9 (left"
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left -> 4 - 13 = -9 (left: -9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left -> 4 - 13 = -9 (left: -9) -> -9 - 2 = -11 (left: 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left -> 4 - 13 = -9 (left: -9) -> -9 - 2 = -11 (left: 2) -> 2 + 2 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "0 54"
                }
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left -> 13 * 4 = 52 (left: 52) -> 52 + 2 = 54 -> 2 - 2 = 0 (left: 0 54) -> 0 - 54 = -54 (left: -54)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": ""
                }
            },
            "Step 5": {
                "Step": "13 - 4 = 9 (left:  -> There are no possible next steps with the given input.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 4 = 9 (left:  -> There are no possible next steps with the given input. -> There are no possible next steps with the given input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps with the number 16 as it is the final result."
                }
            },
            "Step 7": {
                "Step": "13 + 3 = 16 (left: 4 4 16) -> 16 / 4 = 4 (left: 4 4) -> 4 * 4 = 16 (left: 16) -> There are no possible next steps with the number 16 as it is the final result. -> N/A",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "8 8"
                }
            },
            "Step 8": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 9 - 3 = 6 (left: 4 6) -> 4 + 6 = 10 (left: 10) -> 10 - 2 = 8 (left: 8 8) -> 8 * 8 = 64 (left: 64)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "2 + 2 = 4"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 4 = 9 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 4 9"
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 9 - 3 = 6 (left: 4 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 9 - 3 = 6 (left: 4 6) -> 6 - 4 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 9 - 3 = 6 (left: 4 6) -> 6 - 4 = 2 (left: 2) -> Cannot perform any operations with only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "4 4 16"
                }
            },
            "Step 4": {
                "Step": "13 + 3 = 16 (left: 4 4 16) -> 4 - 4 = 0 (left: 0 16)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 + 3 = 16 (left: 4 4 16) -> 4 - 4 = 0 (left: 0 16) -> 16 - 0 = 16 (left: 16)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 + 3 = 16 (left: 4 4 16) -> 4 - 4 = 0 (left: 0 16) -> 16 - 0 = 16 (left: 16) -> 16 / 2 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps with the number 16 as it is the final result."
                }
            },
            "Step 7": {
                "Step": "13 + 3 = 16 (left: 4 4 16) -> 16 / 4 = 4 (left: 4 4) -> 4 * 4 = 16 (left: 16) -> There are no possible next steps with the number 16 as it is the final result. -> N/A",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "8 8"
                }
            },
            "Step 8": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 9 - 3 = 6 (left: 4 6) -> 4 + 6 = 10 (left: 10) -> 10 - 2 = 8 (left: 8 8) -> 8 / 8 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "2 + 2 = 4"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "13 - 4 = 9 (left: 3 4 9)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 4 9"
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 4 / 3 = 1.3333 (left: 1.3333 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 4 / 3 = 1.3333 (left: 1.3333 9) -> 9 / 1.3333 = 6.7499 (left: 6.7499 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 4 / 3 = 1.3333 (left: 1.3333 9) -> 9 / 1.3333 = 6.7499 (left: 6.7499 9) -> 6.7499 - 9 = -2.2501 (left: -2.2501)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": ""
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "4 4 16"
                }
            },
            "Step 4": {
                "Step": "13 + 3 = 16 (left: 4 4 16) -> 4 - 4 = 0 (left: 0 16)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 + 3 = 16 (left: 4 4 16) -> 4 - 4 = 0 (left: 0 16) -> 16 / 2 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 + 3 = 16 (left: 4 4 16) -> 4 - 4 = 0 (left: 0 16) -> 16 / 2 = 8 (left: 8) -> There are no possible next steps with only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps with the number 16 as it is the final result."
                }
            },
            "Step 7": {
                "Step": "13 + 3 = 16 (left: 4 4 16) -> 16 / 4 = 4 (left: 4 4) -> 4 * 4 = 16 (left: 16) -> There are no possible next steps with the number 16 as it is the final result. -> N/A",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "Cannot perform any operations with only one number."
                }
            },
            "Step 8": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 9 - 3 = 6 (left: 4 6) -> 6 - 4 = 2 (left: 2) -> Cannot perform any operations with only one number. -> 7 - 5 = 2 (left: 2 2)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 - 4 = 9 (left",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 4 16"
                }
            },
            "Step 1": {
                "Step": "13 + 3 = 16 (left: 4 4 16) -> 4 / 4 = 1 (left: 1 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 + 3 = 16 (left: 4 4 16) -> 4 / 4 = 1 (left: 1 16) -> 16 - 1 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 + 3 = 16 (left: 4 4 16) -> 4 / 4 = 1 (left: 1 16) -> 16 - 1 = 15 (left: 15) -> There are no possible next steps with the number 15 as the only input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "4 4 16"
                }
            },
            "Step 4": {
                "Step": "13 + 3 = 16 (left: 4 4 16) -> 16 / 4 = 4 (left: 4 4)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 + 3 = 16 (left: 4 4 16) -> 16 / 4 = 4 (left: 4 4) -> 4 / 4 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 + 3 = 16 (left: 4 4 16) -> 16 / 4 = 4 (left: 4 4) -> 4 / 4 = 1 (left: 1) -> There are no possible next steps with just one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps with the number 16 as it is the final result."
                }
            },
            "Step 7": {
                "Step": "13 + 3 = 16 (left: 4 4 16) -> 16 / 4 = 4 (left: 4 4) -> 4 * 4 = 16 (left: 16) -> There are no possible next steps with the number 16 as it is the final result. -> N/A",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "8 8"
                }
            },
            "Step 8": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 9 - 3 = 6 (left: 4 6) -> 4 + 6 = 10 (left: 10) -> 10 - 2 = 8 (left: 8 8) -> 8 + 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "There are no possible next steps with the number 16 as it is the final result."
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "13 - 4 = 9 (left",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 4 9"
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 9 - 3 = 6 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 9 - 3 = 6 (left: -> 9 * 3 = 27 (left: 6 27)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 9 - 3 = 6 (left: -> 9 * 3 = 27 (left: 6 27) -> 6 + 27 = 33 (left: 33)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "3 4 9"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "3 4 9"
                }
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 4 / 3 = 1.33 (left: 1.33 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 4 / 3 = 1.33 (left: 1.33 9) -> 9 - 1.33 = 7.67 (left: 7.67)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 4 / 3 = 1.33 (left: 1.33 9) -> 9 - 1.33 = 7.67 (left: 7.67) -> 7.67 / 2 = 3.835",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps with the number 16 as it is the final result."
                }
            },
            "Step 7": {
                "Step": "13 + 3 = 16 (left: 4 4 16) -> 16 / 4 = 4 (left: 4 4) -> 4 * 4 = 16 (left: 16) -> There are no possible next steps with the number 16 as it is the final result. -> None",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "There are no possible next steps with the number 16 as it is the final result."
                }
            },
            "Step 8": {
                "Step": "13 + 3 = 16 (left: 4 4 16) -> 16 / 4 = 4 (left: 4 4) -> 4 * 4 = 16 (left: 16) -> There are no possible next steps with the number 16 as it is the final result. -> There are no possible next steps.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "13 + 3 = 16 (left: 4 4 16)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 4 9"
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 4 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 4 3) -> 4 + 3 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 4 3) -> 4 + 3 = 7 (left: 7) -> 7 - 8 = -1 (left: -1)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "13 - 4 = 9 (left"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "3 4 9"
                }
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 9 / 4 = 2.25 (left: 3 2.25)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 9 / 4 = 2.25 (left: 3 2.25) -> 3 + 2.25 = 5.25 (left: 2.25 5.25)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 9 / 4 = 2.25 (left: 3 2.25) -> 3 + 2.25 = 5.25 (left: 2.25 5.25) -> 2.25 + 5.25 = 7.5 (left: 7.5) ",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "There are no possible next steps with the number 15 as the only input."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps with the number 16 as it is the final result."
                }
            },
            "Step 7": {
                "Step": "13 + 3 = 16 (left: 4 4 16) -> 16 / 4 = 4 (left: 4 4) -> 4 * 4 = 16 (left: 16) -> There are no possible next steps with the number 16 as it is the final result. -> None",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "8 + 8 = 16"
                }
            },
            "Step 8": {
                "Step": "13 + 3 = 16 (left: 4 4 16) -> 4 + 4 = 8 (left: 8 16) -> 16 - 8 = 8 (left: 8) -> 8 + 8 = 16 -> 8 * 8 = 64 (left: 16 64)",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 4 7 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 4 9"
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 9 - 3 = 6 (left: 4 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 9 - 3 = 6 (left: 4 6) -> 4 + 6 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 9 - 3 = 6 (left: 4 6) -> 4 + 6 = 10 (left: 10) -> 10 - 2 = 8 (left: 8 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "0 54"
                }
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left -> 13 * 4 = 52 (left: 52) -> 52 + 2 = 54 -> 2 - 2 = 0 (left: 0 54) -> 0 * 54 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "1 4 13"
                }
            },
            "Step 5": {
                "Step": "4 - 3 = 1 (left: 1 4 13) -> 1 * 4 = ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 - 3 = 1 (left: 1 4 13) -> 1 * 4 =  -> 1 * 4 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps with the number 16 as it is the final result."
                }
            },
            "Step 7": {
                "Step": "13 + 3 = 16 (left: 4 4 16) -> 16 / 4 = 4 (left: 4 4) -> 4 * 4 = 16 (left: 16) -> There are no possible next steps with the number 16 as it is the final result. -> None",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "Cannot perform any operations with only one number."
                }
            },
            "Step 8": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 9 - 3 = 6 (left: 4 6) -> 6 - 4 = 2 (left: 2) -> Cannot perform any operations with only one number. -> Possible next steps:",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "4 - 3 = 1 (left: 1 4 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "13 - 4 = 9 (left"
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left -> 13 * 4 = 52 (left: 52)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left -> 13 * 4 = 52 (left: 52) -> 52 + 2 = 54",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left -> 13 * 4 = 52 (left: 52) -> 52 + 2 = 54 -> 2 - 2 = 0 (left: 0 54)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "4 4 16"
                }
            },
            "Step 4": {
                "Step": "13 + 3 = 16 (left: 4 4 16) -> 4 + 4 = 8 (left: 8 16)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 + 3 = 16 (left: 4 4 16) -> 4 + 4 = 8 (left: 8 16) -> 16 - 8 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 + 3 = 16 (left: 4 4 16) -> 4 + 4 = 8 (left: 8 16) -> 16 - 8 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps with the number 16 as it is the final result."
                }
            },
            "Step 7": {
                "Step": "13 + 3 = 16 (left: 4 4 16) -> 16 / 4 = 4 (left: 4 4) -> 4 * 4 = 16 (left: 16) -> There are no possible next steps with the number 16 as it is the final result. -> None",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "1 * 4 = 4"
                }
            },
            "Step 8": {
                "Step": "4 - 3 = 1 (left: 1 4 13) -> 1 * 4 =  -> 1 * 4 = 4 -> 4 * 1 = 4 (left: 4 4)",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "4 / 3 = 1.33 (left: 1.33 4 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 4 9"
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 4 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 4 3) -> 4 + 3 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 4 3) -> 4 + 3 = 7 (left: 7) -> 7 - 2 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "4 4 16"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "3 4 9"
                }
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 3 * 4 = 12 (left: 12 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 3 * 4 = 12 (left: 12 9) -> 12 / 9 = 1.33 (left: 1.33 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 3 * 4 = 12 (left: 12 9) -> 12 / 9 = 1.33 (left: 1.33 9) -> 1.33 * 9 = 11.97 (left: 11.97)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "Cannot perform any operations with only one number."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps with the number 16 as it is the final result."
                }
            },
            "Step 7": {
                "Step": "13 + 3 = 16 (left: 4 4 16) -> 16 / 4 = 4 (left: 4 4) -> 4 * 4 = 16 (left: 16) -> There are no possible next steps with the number 16 as it is the final result. -> None",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "1 * 4 = 4"
                }
            },
            "Step 8": {
                "Step": "4 - 3 = 1 (left: 1 4 13) -> 1 * 4 =  -> 1 * 4 = 4 -> 1 / 4 = 0.25 (left: 0.25)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "8 + 8 = 16"
                }
            }
        },
        "Input": "3 4 4 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "904": {
        "puzzle": "6 7 8 9",
        "Agent 0": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 8 9 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 9 56"
                }
            },
            "Step 1": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 6 / 9 = 0.6666666666666666 (left: 0.666",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 6 / 9 = 0.6666666666666666 (left: 0.666 -> There are no possible next steps with the input 0.666.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 6 / 9 = 0.6666666666666666 (left: 0.666 -> There are no possible next steps with the input 0.666. -> There are no possible next steps with the input 0.666.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "60 4"
                }
            },
            "Step 4": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 30 * 2 = 60 (left: 60 4) -> 60 + 4 = 64 (left: 64)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "8 9 13"
                }
            },
            "Step 5": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 9 / 8 = 1.125 (left: 1.125 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 9 / 8 = 1.125 (left: 1.125 13) -> 13 / 1.125 = 11.555555555555555 (left: 11.555555555555555)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "5 10"
                }
            },
            "Step 7": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 9 - 8 = 1 (left: 1 13) -> 5 + 5 = 10 (left: 5 10) -> 10 / 5 = 2 (left: 2 10)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 9 - 8 = 1 (left: 1 13) -> 5 + 5 = 10 (left: 5 10) -> 10 / 5 = 2 (left: 2 10) -> Possible next steps:",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 8 9 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 9 56"
                }
            },
            "Step 1": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 30 * 2 = 60 (left: 60 4)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "60 4"
                }
            },
            "Step 4": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 30 * 2 = 60 (left: 60 4) -> 60 + 4 = 64 (left: 64)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There are no possible next steps with the input 0.666."
                }
            },
            "Step 5": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 6 / 9 = 0.6666666666666666 (left: 0.666 -> There are no possible next steps with the input 0.666. -> There are no possible next steps with the input 0.666. -> There are no possible next steps with the input 0.666.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 6 / 9 = 0.6666666666666666 (left: 0.666 -> There are no possible next steps with the input 0.666. -> There are no possible next steps with the input 0.666. -> There are no possible next steps with the input 0.666. -> There are no possible next steps as the input 0.666 does not form a valid equation with the given operators.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "23 / 6 = 3.83"
                }
            },
            "Step 7": {
                "Step": "8 + 9 = 17 (left: 6 7 17) -> 17 / 6 = 2.83 ( -> 17 + 6 = 23 (left: 23 / 6 = 3.83) -> 23 - 6 = 17 (left: 17 / 6 = 2.83)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 + 9 = 17 (left: 6 7 17) -> 17 / 6 = 2.83 ( -> 17 + 6 = 23 (left: 23 / 6 = 3.83) -> 23 - 6 = 17 (left: 17 / 6 = 2.83) -> 17 + 6 = 23 (left: 23)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There are no possible next steps with the input 0.666."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 8 9 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 9 56"
                }
            },
            "Step 1": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 56 / 9 = 6 (left: 6 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 56 / 9 = 6 (left: 6 6) -> 6 / 6 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 56 / 9 = 6 (left: 6 6) -> 6 / 6 = 1 (left: 1) -> There are no possible next steps with just one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "60 4"
                }
            },
            "Step 4": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 30 * 2 = 60 (left: 60 4) -> 60 - 4 = 56 (left: 56)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "6 7 "
                }
            },
            "Step 5": {
                "Step": "8 * 9 = 72 (left: 6 7  -> 6 + 7 = 13 (left: 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 * 9 = 72 (left: 6 7  -> 6 + 7 = 13 (left: 13) -> 13 + 2 = 15",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "There are no possible next steps with the input 0.666."
                }
            },
            "Step 7": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 6 / 9 = 0.6666666666666666 (left: 0.666 -> There are no possible next steps with the input 0.666. -> There are no possible next steps with the input 0.666. -> There are no possible next steps with the input 0.666. -> There are no possible next steps with the input 0.666. -> There are no possible next steps with the input 0.666.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 6 / 9 = 0.6666666666666666 (left: 0.666 -> There are no possible next steps with the input 0.666. -> There are no possible next steps with the input 0.666. -> There are no possible next steps with the input 0.666. -> There are no possible next steps with the input 0.666. -> There are no possible next steps with the input 0.666. -> There are no possible next steps with the input 0.666.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 * 8 = 56 (left: 6 9 56)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 7 17"
                }
            },
            "Step 1": {
                "Step": "8 + 9 = 17 (left: 6 7 17) -> 17 / 6 = 2.83 (left: 2.83 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 + 9 = 17 (left: 6 7 17) -> 17 / 6 = 2.83 (left: 2.83 7) -> Input: 10 5 3",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 + 9 = 17 (left: 6 7 17) -> 17 / 6 = 2.83 (left: 2.83 7) -> Input: 10 5 3 -> 10 - 5 = 5 (left: 5 3)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "60 4"
                }
            },
            "Step 4": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 30 * 2 = 60 (left: 60 4) -> 60 - 4 = 56 (left: 56)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "8 9 13"
                }
            },
            "Step 5": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 9 - 8 = 1 (left: 1 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 9 - 8 = 1 (left: 1 13) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "Possible next steps:"
                }
            },
            "Step 7": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 9 - 8 = 1 (left: 1 13) -> Possible next steps: -> There are no more possible next steps with the given input.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 9 - 8 = 1 (left: 1 13) -> Possible next steps: -> There are no more possible next steps with the given input. -> There are no more possible next steps with the given input.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "7 + 8 = 15 (left: 6 9 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 9 56"
                }
            },
            "Step 1": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 + 6 = 15 (left: 15 56)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 + 6 = 15 (left: 15 56) -> 15 - 56 = -41 (left: -41)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 + 6 = 15 (left: 15 56) -> 15 - 56 = -41 (left: -41) -> -41 * 2 = -82 (left: 2)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "6 7 "
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "60 4"
                }
            },
            "Step 4": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 30 * 2 = 60 (left: 60 4) -> 60 + 4 = 64 (left: 64)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There are no possible next steps with the input 0.666."
                }
            },
            "Step 5": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 6 / 9 = 0.6666666666666666 (left: 0.666 -> There are no possible next steps with the input 0.666. -> There are no possible next steps with the input 0.666. -> There are no possible next steps with the input 0.666.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 6 / 9 = 0.6666666666666666 (left: 0.666 -> There are no possible next steps with the input 0.666. -> There are no possible next steps with the input 0.666. -> There are no possible next steps with the input 0.666. -> There are no possible next steps with the input 0.666.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "23 / 6 = 3.83"
                }
            },
            "Step 7": {
                "Step": "8 + 9 = 17 (left: 6 7 17) -> 17 / 6 = 2.83 ( -> 17 + 6 = 23 (left: 23 / 6 = 3.83) -> 23 + 6 = 29 (left: 29 / 6 = 3.83)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 + 9 = 17 (left: 6 7 17) -> 17 / 6 = 2.83 ( -> 17 + 6 = 23 (left: 23 / 6 = 3.83) -> 23 + 6 = 29 (left: 29 / 6 = 3.83) -> 6 - 29 = -23 (left: -23)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "60 4"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "8 - 7 = 1 (left: 6 1 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 9 56"
                }
            },
            "Step 1": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 56 - 9 = 47 (",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 56 - 9 = 47 ( -> 3 + 5 = 8 (left: 7 8 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 56 - 9 = 47 ( -> 3 + 5 = 8 (left: 7 8 9) -> 8 * 9 = 72 (left: 7 72)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "60 4"
                }
            },
            "Step 4": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 30 * 2 = 60 (left: 60 4) -> 60 * 4 = 240 (left: 240)",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "6 7 17"
                }
            },
            "Step 5": {
                "Step": "8 + 9 = 17 (left: 6 7 17) -> 17 / 6 = 2.83 (",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 + 9 = 17 (left: 6 7 17) -> 17 / 6 = 2.83 ( -> 17 + 6 = 23 (left: 23 / 6 = 3.83)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "There are no possible next steps with the input 0.666."
                }
            },
            "Step 7": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 6 / 9 = 0.6666666666666666 (left: 0.666 -> There are no possible next steps with the input 0.666. -> There are no possible next steps with the input 0.666. -> There are no possible next steps with the input 0.666. -> There are no possible next steps with the input 0.666. -> There are no possible next steps with the input 0.666.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 6 / 9 = 0.6666666666666666 (left: 0.666 -> There are no possible next steps with the input 0.666. -> There are no possible next steps with the input 0.666. -> There are no possible next steps with the input 0.666. -> There are no possible next steps with the input 0.666. -> There are no possible next steps with the input 0.666. -> There are no possible next steps with the input 0.666.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "8 * 9 = 72 (left: 6 7 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "8 9 13"
                }
            },
            "Step 1": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 13 - 9 = 4 (left: 8 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 13 - 9 = 4 (left: 8 4) -> 8 + 4 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 13 - 9 = 4 (left: 8 4) -> 8 + 4 = 12 (left: 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "6 9 56"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "60 4"
                }
            },
            "Step 4": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 30 * 2 = 60 (left: 60 4) -> 60 + 4 = 64 (left: 64)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "6 1 9"
                }
            },
            "Step 5": {
                "Step": "8 - 7 = 1 (left: 6 1 9) -> 1 + 9 = 10 (left: 6 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 7 = 1 (left: 6 1 9) -> 1 + 9 = 10 (left: 6 10) -> 10 - 6 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "5 10"
                }
            },
            "Step 7": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 9 - 8 = 1 (left: 1 13) -> 5 + 5 = 10 (left: 5 10) -> Possible next steps:",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 9 - 8 = 1 (left: 1 13) -> 5 + 5 = 10 (left: 5 10) -> Possible next steps: -> There are no possible next steps with the given input.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "7 * 8 = 56 (left: 6 9 56)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 9 56"
                }
            },
            "Step 1": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 56 / 9 = 6 (left: 6 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 56 / 9 = 6 (left: 6 6) -> 6 - 6 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 56 / 9 = 6 (left: 6 6) -> 6 - 6 = 0 (left: 0) -> No possible next steps, as there is no input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "60 4"
                }
            },
            "Step 4": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 30 * 2 = 60 (left: 60 4) -> 60 / 4 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "8 9 13"
                }
            },
            "Step 5": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 8 * 9 = 72 (left: 72 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 8 * 9 = 72 (left: 72 13) -> 72 - 13 = 59 (left: 59)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "13 + 2 = 15"
                }
            },
            "Step 7": {
                "Step": "8 * 9 = 72 (left: 6 7  -> 6 + 7 = 13 (left: 13) -> 13 + 2 = 15 -> 15 - 13 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "3.733 - 3 = 0.733"
                }
            },
            "Step 8": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 6 + 9 = 15 (left: 15 56) -> 56 / 15 = 3.7333333333333334 (left: 3.733 -> 3.733 - 3 = 0.733 -> 3.733 / 3 = 1.2443333333333335 (left: 1.2443333333333335)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "There are no possible next steps with just one number provided."
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "8 + 9 = 17 (left: 6 7 17)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 9 56"
                }
            },
            "Step 1": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 6 * 9 = 54 (left: 54 56)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 6 * 9 = 54 (left: 54 56) -> 54 + 56 = 110 (left: 110)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 6 * 9 = 54 (left: 54 56) -> 54 + 56 = 110 (left: 110) -> 110 / 10 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "8 9 13"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "60 4"
                }
            },
            "Step 4": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 30 * 2 = 60 (left: 60 4) -> 60 - 4 = 56 (left: 56)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "8 9 13"
                }
            },
            "Step 5": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 9 - 8 = 1 (left: 1 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 9 - 8 = 1 (left: 1 13) -> 5 + 5 = 10 (left: 5 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "There are no possible next steps with the input 0.666."
                }
            },
            "Step 7": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 6 / 9 = 0.6666666666666666 (left: 0.666 -> There are no possible next steps with the input 0.666. -> There are no possible next steps with the input 0.666. -> There are no possible next steps with the input 0.666. -> There are no possible next steps with the input 0.666. -> There are no possible next steps with the input 0.666.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 6 / 9 = 0.6666666666666666 (left: 0.666 -> There are no possible next steps with the input 0.666. -> There are no possible next steps with the input 0.666. -> There are no possible next steps with the input 0.666. -> There are no possible next steps with the input 0.666. -> There are no possible next steps with the input 0.666. -> There are no possible operations that can be performed with the input 0.666.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "8 + 9 = 17 (left: 6 7 17)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 9 56"
                }
            },
            "Step 1": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 6 + 9 = 15 (left: 15 56)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 6 + 9 = 15 (left: 15 56) -> 56 / 15 = 3.7333333333333334 (left: 3.733",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 6 + 9 = 15 (left: 15 56) -> 56 / 15 = 3.7333333333333334 (left: 3.733 -> 3.733 - 3 = 0.733",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "60 4"
                }
            },
            "Step 4": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 30 * 2 = 60 (left: 60 4) -> 60 + 4 = 64 (left: 64)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "6 9 56"
                }
            },
            "Step 5": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 + 6 = 15 (left: 15 56)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 + 6 = 15 (left: 15 56) -> 56 - 15 = 41 (left: 41)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "Possible next steps:"
                }
            },
            "Step 7": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 9 - 8 = 1 (left: 1 13) -> Possible next steps: -> There are no possible next steps for the input provided.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 9 - 8 = 1 (left: 1 13) -> Possible next steps: -> There are no possible next steps for the input provided. -> There are no possible next steps for the input provided.",
                "Pruning": null
            }
        },
        "Input": "6 7 8 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "905": {
        "puzzle": "1 11 11 13",
        "Agent 0": {
            "Step 0": {
                "Step": "11 / 1 = 11 (left: 11 13 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 12 * 13 = 156 (left: 11 156)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 12 * 13 = 156 (left: 11 156) -> 11 / 156 = 0.0705 (left: 0.0705)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 12 * 13 = 156 (left: 11 156) -> 11 / 156 = 0.0705 (left: 0.0705) -> 0.0705 * 2 = 0.141 (left: 0.141)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "11 12 13"
                },
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 4": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23) -> 13 + 23 = 36 (left: 36)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23) -> 13 + 23 = 36 (left: 36) -> There are no possible next steps since we only have one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "6 10 12"
                }
            },
            "Step 7": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 12 / 2 = 6 -> 12 - 2 = 10 (left: 6 10 12) -> 12 / 6 = 2 (left: 2 10)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 12 / 2 = 6 -> 12 - 2 = 10 (left: 6 10 12) -> 12 / 6 = 2 (left: 2 10) -> 2 + 10 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "8 21"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "11 - 1 = 10 (left: 10 11 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 1 + 13 = 14",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 1 + 13 = 14 -> 13 / 1 = 13 (left: 13 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 4": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 13 / 1 = 13 (left: 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 13 / 1 = 13 (left: 13) -> 13 * 2 = 26 (left: 26)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "13 + 1 = 14"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "6 10 12"
                }
            },
            "Step 7": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 12 / 2 = 6 -> 12 - 2 = 10 (left: 6 10 12) -> 6 * 10 = 60 (left: 60 12)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 12 / 2 = 6 -> 12 - 2 = 10 (left: 6 10 12) -> 6 * 10 = 60 (left: 60 12) -> 60 + 12 = 72 (left: 72)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "There are no possible next steps since we only have one number."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 11 11 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 13 / 11 = 1.18 (left: 1.18 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 13 / 11 = 1.18 (left: 1.18 12) -> 1.18 + 12 = 13.18 (left: 13.18)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 13 / 11 = 1.18 (left: 1.18 12) -> 1.18 + 12 = 13.18 (left: 13.18) -> 13 / 18 = 0.72 (left: 0.72)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "11 13 11"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 4": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 12 / 2 = 6",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 12 / 2 = 6 -> 12 - 2 = 10 (left: 6 10 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "6 10 12"
                }
            },
            "Step 7": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 12 / 2 = 6 -> 12 - 2 = 10 (left: 6 10 12) -> 12 - 6 = 6 (left: ",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "8 21"
                }
            },
            "Step 8": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 13 / 1 = 13 (left: 13) -> 13 + 8 = 21 (left: 8 21) -> 8 * 21 = 168 (left: 168)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "There are no possible next steps since we only have one number."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "11 + 1 = 12 (left: 11 12 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 12 / 11 = 1.090909 (left: 1.090909 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 12 / 11 = 1.090909 (left: 1.090909 13) -> 13 - 1.090909 = 11.909091 (left: 11.909091)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 12 / 11 = 1.090909 (left: 1.090909 13) -> 13 - 1.090909 = 11.909091 (left: 11.909091) -> 11.909091 * 11 = 131 (left: 131)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "11 11 12"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 4": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 11 / 12 = 0.9166666666666666 (left: 0.9166666666666666 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 11 / 12 = 0.9166666666666666 (left: 0.9166666666666666 13) -> 0.916666",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 11 / 12 = 0.9166666666666666 (left: 0.9166666666666666 13) -> 0.916666 -> There are no possible next steps for the input 0.916666.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "6 10 12"
                }
            },
            "Step 7": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 12 / 2 = 6 -> 12 - 2 = 10 (left: 6 10 12) -> 6 + 10 = 16 (left: 16 12)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 12 / 2 = 6 -> 12 - 2 = 10 (left: 6 10 12) -> 6 + 10 = 16 (left: 16 12) -> 16 * 12 = 192 (left: 192)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "13 + 1 = 14"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 11 11 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23) -> 13 - 23 = -10 (left: -10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23) -> 13 - 23 = -10 (left: -10) -> -10 / 2 = -5 (left: -5)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "11 12 13"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 4": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132) -> 132 / 13 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132) -> 132 / 13 = 10 (left: 10) -> 10 + 10 = 20",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "6 10 12"
                }
            },
            "Step 7": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 12 / 2 = 6 -> 12 - 2 = 10 (left: 6 10 12) -> 10 - 6 = 4 (left: 4 12)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 12 / 2 = 6 -> 12 - 2 = 10 (left: 6 10 12) -> 10 - 6 = 4 (left: 4 12) -> 4 + 12 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "13 14"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "1 + 11 = 12 (left: 11 12 13)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 11 / 12 = 0.9166666666666666 (left: 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 11 / 12 = 0.9166666666666666 (left: 13) -> There are no possible next steps with the number 13.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 11 / 12 = 0.9166666666666666 (left: 13) -> There are no possible next steps with the number 13. -> 13 + 1 = 14",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 4": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 13 / 1 = 13 (left: 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 13 / 1 = 13 (left: 13) -> 13 + 8 = 21 (left: 8 21)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "6 10 12"
                }
            },
            "Step 7": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 12 / 2 = 6 -> 12 - 2 = 10 (left: 6 10 12) -> 12 / 6 = 2 (left: 2 10)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 12 / 2 = 6 -> 12 - 2 = 10 (left: 6 10 12) -> 12 / 6 = 2 (left: 2 10) -> 10 - 2 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "13 + 1 = 14"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "13 - 11 = 2 (left: 1 11 2)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 11 + 13 = 24 (left: 12 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 11 + 13 = 24 (left: 12 24) -> 12 + 24 = 36 (left: 36)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 11 + 13 = 24 (left: 12 24) -> 12 + 24 = 36 (left: 36) -> There are no possible next steps with the input 36.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 4": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 1 + 13 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 1 + 13 = 14 (left: 14) -> 14 / 2 = 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "6 10 12"
                }
            },
            "Step 7": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 12 / 2 = 6 -> 12 - 2 = 10 (left: 6 10 12) -> 12 - 6 = 6 (left: 6 12)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 12 / 2 = 6 -> 12 - 2 = 10 (left: 6 10 12) -> 12 - 6 = 6 (left: 6 12) -> 6 - 12 = -6 (left: -6)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "11 / 2 is not possible as it doesn't result in a whole number."
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "1 + 11 = 12 (left: 11 12 13)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 13 / 11 = 1.181818181",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 13 / 11 = 1.181818181 -> 13 / 11 = 1.181818181 (left: 1.181818181)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 13 / 11 = 1.181818181 -> 13 / 11 = 1.181818181 (left: 1.181818181) -> 1.181818181 + 1 = 2.181818181 (left: 1 2.181818181)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 4": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14) -> No possible next steps as there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "6 10 12"
                }
            },
            "Step 7": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 12 / 2 = 6 -> 12 - 2 = 10 (left: 6 10 12) -> 12 / 6 = ",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 12 / 2 = 6 -> 12 - 2 = 10 (left: 6 10 12) -> 12 / 6 =  -> 12 / 6 = 2",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "1 + 11 = 12 (left: 11 12 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 12 + 13 = 25 (left: 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 12 + 13 = 25 (left: 11) -> There are no possible next steps with the input of 11.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 12 + 13 = 25 (left: 11) -> There are no possible next steps with the input of 11. -> 11 / 2 is not possible as it doesn't result in a whole number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 4": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23) -> 13 / 23 \u2248 0.5652 (left: 0.5652)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23) -> 13 / 23 \u2248 0.5652 (left: 0.5652) -> 0.5652 - 0.5652 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "13 + 1 = 14"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "6 10 12"
                }
            },
            "Step 7": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 12 / 2 = 6 -> 12 - 2 = 10 (left: 6 10 12) -> 10 - 6 = 4 (left: 4 12)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 12 / 2 = 6 -> 12 - 2 = 10 (left: 6 10 12) -> 10 - 6 = 4 (left: 4 12) -> 4 * 12 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "There are no possible next steps with the input 36."
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "11 + 1 = 12 (left: 11 12 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6) -> 6 / 2 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "11 12 13"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "1 2.181818181"
                }
            },
            "Step 4": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 13 / 11 = 1.181818181 -> 13 / 11 = 1.181818181 (left: 1.181818181) -> 1.181818181 + 1 = 2.181818181 (left: 1 2.181818181) -> 1 / 2.181818181 \u2248 0.458333333 (left: 2.181818181 0.458333333)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 13 / 11 = 1.181818181 -> 13 / 11 = 1.181818181 (left: 1.181818181) -> 1.181818181 + 1 = 2.181818181 (left: 1 2.181818181) -> 1 / 2.181818181 \u2248 0.458333333 (left: 2.181818181 0.458333333) -> 2.181818181 + 0.458333333 = 2.640151514 (left: 2.640151514)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "11 12 13"
                }
            },
            "Step 6": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "6 10 12"
                }
            },
            "Step 7": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 12 / 2 = 6 -> 12 - 2 = 10 (left: 6 10 12) -> 10 + 12 = 22 (left: 6 22)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 12 / 2 = 6 -> 12 - 2 = 10 (left: 6 10 12) -> 10 + 12 = 22 (left: 6 22) -> 22 / 6 = 3.6666666666666665 (left: 3.6666666666666665)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "10 + 10 = 20"
                }
            }
        },
        "Input": "1 11 11 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "906": {
        "puzzle": "1 8 10 11",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 8 = 9 (left: 9 10 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "8 10 "
                }
            },
            "Step 1": {
                "Step": "10 / 1 = 10 (left: 8 10  -> 8 + 10 = 18 (left: 18)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 1 = 10 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 / 1 = 10 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> There are no possible next steps with the input 18. -> There are no possible next steps with the input 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "8 10 "
                }
            },
            "Step 4": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 10 - 8 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 10 - 8 = 2 (left: 2) -> No possible next steps with just one number.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 10 - 8 = 2 (left: 2) -> No possible next steps with just one number. -> No possible next steps with just one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "There are no possible next steps with the input 18."
                }
            },
            "Step 7": {
                "Step": "10 / 1 = 10 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> There are no possible next steps with the input 18. -> There are no possible next steps with the input 18. -> None",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "There are no possible next steps with the input 2.5."
                }
            },
            "Step 8": {
                "Step": "10 / 1 = 10 (left: 8 10  -> 10 / 8 = 1.25 (left: 1.25) -> 1.25 * 2 = 2.5 (left: 2.5) -> There are no possible next steps with the input 2.5. -> There are no possible next steps with the input 2.5.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "11 / 1 = 11 (left: 8 10 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "8 10 "
                }
            },
            "Step 1": {
                "Step": "10 / 1 = 10 (left: 8 10  -> 8 * 10 = 80 (left: 80)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 1 = 10 (left: 8 10  -> 8 * 10 = 80 (left: 80) -> There are no possible next steps with just the number 80.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 / 1 = 10 (left: 8 10  -> 8 * 10 = 80 (left: 80) -> There are no possible next steps with just the number 80. -> 80 / 2 = 40 (left: 40)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "8 10 "
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "8 10 "
                }
            },
            "Step 4": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 8 + 10 = 18 (left: 18)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> No more possible next steps as there are no more numbers to compute with. The final result is 18.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> No more possible next steps as there are no more numbers to compute with. The final result is 18. -> No more possible next steps as there are no more numbers to compute with. The final result is 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "There are no possible next steps with only one number provided."
                }
            },
            "Step 7": {
                "Step": "10 / 1 = 10 (left: 8 10  -> 8 * 10 = 80 (left: 80) -> 80 - 2 = 78 (left: 2) -> There are no possible next steps with only one number provided. -> Provide at least two numbers to perform operations on.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 / 1 = 10 (left: 8 10  -> 8 * 10 = 80 (left: 80) -> 80 - 2 = 78 (left: 2) -> There are no possible next steps with only one number provided. -> Provide at least two numbers to perform operations on. -> 5 + 3 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "There is only one possible next step for the input 2.8:"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "8 / 1 = 8 (left: 8 10 ",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "8 10 "
                }
            },
            "Step 1": {
                "Step": "10 / 1 = 10 (left: 8 10  -> 10 - 8 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 1 = 10 (left: 8 10  -> 10 - 8 = 2 (left: 2) -> 2 + 2 = 4",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 / 1 = 10 (left: 8 10  -> 10 - 8 = 2 (left: 2) -> 2 + 2 = 4 -> 2 / 2 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "8 10 "
                },
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "8 10 "
                }
            },
            "Step 4": {
                "Step": "10 / 1 = 10 (left: 8 10  -> Possible next steps:",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 / 1 = 10 (left: 8 10  -> Possible next steps: -> There are no possible next steps with the current input.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 / 1 = 10 (left: 8 10  -> Possible next steps: -> There are no possible next steps with the current input. -> None",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "No possible next steps as there is only one number left."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "There is only one possible next step for the input 2.8:"
                }
            },
            "Step 7": {
                "Step": "10 / 1 = 10 (left: 8 10  -> 8 / 10 = 0.8 (left: 0.8) -> 0.8 + 2 = 2.8 (left: 2.8) -> There is only one possible next step for the input 2.8: -> 2.8 * 2 = 5.6",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 / 1 = 10 (left: 8 10  -> 8 / 10 = 0.8 (left: 0.8) -> 0.8 + 2 = 2.8 (left: 2.8) -> There is only one possible next step for the input 2.8: -> 2.8 * 2 = 5.6 -> Input: 3 5 7",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "8 - 1 = 7 (left: 7 10 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "8 10 "
                }
            },
            "Step 1": {
                "Step": "10 / 1 = 10 (left: 8 10  -> 8 + 10 = 18 (left: 18)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 1 = 10 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> 18 - 6 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 / 1 = 10 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> 18 - 6 = 12 (left: 12) -> 12 * 8 = 96 (left: 8 96)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "8 10 "
                }
            },
            "Step 4": {
                "Step": "10 / 1 = 10 (left: 8 10  -> 10 / 8 = 1.25 (left: 1.25)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 / 1 = 10 (left: 8 10  -> 10 / 8 = 1.25 (left: 1.25) -> 1.25 * 2 = 2.5 (left: 2.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 / 1 = 10 (left: 8 10  -> 10 / 8 = 1.25 (left: 1.25) -> 1.25 * 2 = 2.5 (left: 2.5) -> There are no possible next steps with the input 2.5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "4 + 6 = 10"
                }
            },
            "Step 7": {
                "Step": "8 - 1 = 7 (left: 7 10 11) -> 4 + 6 = -> 4 + 6 = 10 -> 10 / 4 = 2.5 (left",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 - 1 = 7 (left: 7 10 11) -> 4 + 6 = -> 4 + 6 = 10 -> 10 / 4 = 2.5 (left -> 10 * 4 = 40 (left: 40 14)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "10 + 1 = 11 (left: 8 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "8 10 11"
                }
            },
            "Step 1": {
                "Step": "10 * 1 = 10 (left: 8 10 11) -> 10 - 11 = -1 (left: 8 -1)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 * 1 = 10 (left: 8 10 11) -> 10 - 11 = -1 (left: 8 -1) -> 8 / -1 = -8 (left: -8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 * 1 = 10 (left: 8 10 11) -> 10 - 11 = -1 (left: 8 -1) -> 8 / -1 = -8 (left: -8) -> -8 - 2 = -10 (left: -10)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "8 10 "
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "8 10 "
                }
            },
            "Step 4": {
                "Step": "10 / 1 = 10 (left: 8 10  -> Input: 4 8 14",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 / 1 = 10 (left: 8 10  -> Input: 4 8 14 -> 14 - 4 = 10 (left: 4 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 / 1 = 10 (left: 8 10  -> Input: 4 8 14 -> 14 - 4 = 10 (left: 4 10) -> 4 + 10 = 14 (left: 10)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "There are no possible next steps with only one number provided."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "There are no possible next steps with the input 18."
                }
            },
            "Step 7": {
                "Step": "10 / 1 = 10 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> There are no possible next steps with the input 18. -> There are no possible next steps with the input 18. -> None",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "There are no possible next steps with only one number provided."
                }
            },
            "Step 8": {
                "Step": "10 / 1 = 10 (left: 8 10  -> 8 * 10 = 80 (left: 80) -> 80 - 2 = 78 (left: 2) -> There are no possible next steps with only one number provided. -> Provide more numbers to continue the calculations.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "10 + 1 = 11 (left: 8 11 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "8 10 "
                }
            },
            "Step 1": {
                "Step": "10 / 1 = 10 (left: 8 10  -> 8 / 10 = 0.8 (left: 0.8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 1 = 10 (left: 8 10  -> 8 / 10 = 0.8 (left: 0.8) -> 0.8 + 2 = 2.8 (left: 2.8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 / 1 = 10 (left: 8 10  -> 8 / 10 = 0.8 (left: 0.8) -> 0.8 + 2 = 2.8 (left: 2.8) -> There is only one possible next step for the input 2.8:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "8 10 "
                }
            },
            "Step 4": {
                "Step": "10 / 1 = 10 (left: 8 10  -> 8 - 4 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 / 1 = 10 (left: 8 10  -> 8 - 4 = 4 (left: 4) -> 4 * 8 = 32 (left: 32)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 / 1 = 10 (left: 8 10  -> 8 - 4 = 4 (left: 4) -> 4 * 8 = 32 (left: 32) -> 32 / 2 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There are no possible next steps with the input 18."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "There are no possible next steps with the input 2.5."
                }
            },
            "Step 7": {
                "Step": "10 / 1 = 10 (left: 8 10  -> 10 / 8 = 1.25 (left: 1.25) -> 1.25 * 2 = 2.5 (left: 2.5) -> There are no possible next steps with the input 2.5. -> There are no possible next steps with the input 2.5 as it is a decimal number.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 / 1 = 10 (left: 8 10  -> 10 / 8 = 1.25 (left: 1.25) -> 1.25 * 2 = 2.5 (left: 2.5) -> There are no possible next steps with the input 2.5. -> There are no possible next steps with the input 2.5 as it is a decimal number. -> There are no possible next steps with the input 2.5 as it is a decimal number.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "1 + 8 = 9 (left: 9 10 11)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "8 10 "
                }
            },
            "Step 1": {
                "Step": "10 / 1 = 10 (left: 8 10  -> 8 * 10 = 80 (left: 80)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 1 = 10 (left: 8 10  -> 8 * 10 = 80 (left: 80) -> 80 - 2 = 78 (left: 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 / 1 = 10 (left: 8 10  -> 8 * 10 = 80 (left: 80) -> 80 - 2 = 78 (left: 2) -> There are no possible next steps with only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "8 10 "
                }
            },
            "Step 4": {
                "Step": "10 / 1 = 10 (left: 8 10  -> 8 + 10 = 18 (left: 18)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 / 1 = 10 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> 18 - 8 = 10 (left: 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 / 1 = 10 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> 18 - 8 = 10 (left: 8) -> 8 + 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "There is only one possible next step for the input 2.8:"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "No more possible next steps as there are no more numbers to compute with. The final result is 18."
                }
            },
            "Step 7": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> No more possible next steps as there are no more numbers to compute with. The final result is 18. -> No more possible next steps as there are no more numbers to compute with. The final result is 18. -> No more possible next steps as there are no more numbers to compute with. The final result is 18.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> No more possible next steps as there are no more numbers to compute with. The final result is 18. -> No more possible next steps as there are no more numbers to compute with. The final result is 18. -> No more possible next steps as there are no more numbers to compute with. The final result is 18. -> None",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "There are no possible next steps with just one number given."
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "10 / 1 = 10 (left: 8 10 ",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "8 11 11"
                }
            },
            "Step 1": {
                "Step": "10 + 1 = 11 (left: 8 11 11) -> 11 / 8 = 1.375 (left: 1.375 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 1 = 11 (left: 8 11 11) -> 11 / 8 = 1.375 (left: 1.375 11) -> 11 / 1.375 = 8 (left: 1.375 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 + 1 = 11 (left: 8 11 11) -> 11 / 8 = 1.375 (left: 1.375 11) -> 11 / 1.375 = 8 (left: 1.375 11) -> 11 * 1.375 = 15.125 (left: 15.125)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "9 10 11"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "8 96"
                }
            },
            "Step 4": {
                "Step": "10 / 1 = 10 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> 18 - 6 = 12 (left: 12) -> 12 * 8 = 96 (left: 8 96) -> 8 - 96 = -88 (left: -88)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "7 10 11"
                }
            },
            "Step 5": {
                "Step": "8 - 1 = 7 (left: 7 10 11) -> 4 + 6 =",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 1 = 7 (left: 7 10 11) -> 4 + 6 = -> 4 + 6 = 10",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "40 82"
                }
            },
            "Step 7": {
                "Step": "10 / 1 = 10 (left: 8 10  -> 8 * 10 = 80 (left: 80) -> 80 + 2 = 82 -> 80 / 2 = 40 (left: 40 82) -> 40 + 82 = 122 (left: 122)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "There is only one possible next step for the input 2.8:"
                }
            },
            "Step 8": {
                "Step": "10 / 1 = 10 (left: 8 10  -> 8 / 10 = 0.8 (left: 0.8) -> 0.8 + 2 = 2.8 (left: 2.8) -> There is only one possible next step for the input 2.8: -> 2.8 * 2 = 5.6",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "10 - 1 = 9 (left: 8 9 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "8 10 "
                }
            },
            "Step 1": {
                "Step": "10 / 1 = 10 (left: 8 10  -> 8 + 10 = 18 (left: 18)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 1 = 10 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> 18 / 2 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 / 1 = 10 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> 18 / 2 = 9 (left: 9) -> There are no possible next steps with just one number given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "8 10 "
                }
            },
            "Step 4": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 8 / 10 = 0.8 (left: 0.8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 8 / 10 = 0.8 (left: 0.8) -> There is only one number so there are no possible operations to perform.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 8 / 10 = 0.8 (left: 0.8) -> There is only one number so there are no possible operations to perform. -> There are no possible next steps as there is only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "No possible next steps as there is only one number left."
                }
            },
            "Step 7": {
                "Step": "10 / 1 = 10 (left: 8 10  -> 14 -> No possible next steps as there is only one number left. -> No possible next steps as there is only one number left. -> No possible next steps as there is only one number left.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 / 1 = 10 (left: 8 10  -> 14 -> No possible next steps as there is only one number left. -> No possible next steps as there is only one number left. -> No possible next steps as there is only one number left. -> No possible next steps as there is only one number left.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "10 * 1 = 10 (left: 8 10 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "8 10 "
                }
            },
            "Step 1": {
                "Step": "10 / 1 = 10 (left: 8 10  -> 14",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 1 = 10 (left: 8 10  -> 14 -> No possible next steps as there is only one number left.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 / 1 = 10 (left: 8 10  -> 14 -> No possible next steps as there is only one number left. -> No possible next steps as there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "8 10 "
                }
            },
            "Step 4": {
                "Step": "10 / 1 = 10 (left: 8 10  -> 8 * 10 = 80 (left: 80)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 / 1 = 10 (left: 8 10  -> 8 * 10 = 80 (left: 80) -> 80 + 2 = 82",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 / 1 = 10 (left: 8 10  -> 8 * 10 = 80 (left: 80) -> 80 + 2 = 82 -> 80 / 2 = 40 (left: 40 82)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "There is only one possible next step for the input 2.8:"
                }
            },
            "Step 7": {
                "Step": "10 / 1 = 10 (left: 8 10  -> 8 / 10 = 0.8 (left: 0.8) -> 0.8 + 2 = 2.8 (left: 2.8) -> There is only one possible next step for the input 2.8: -> 2 + 8 = 10",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 / 1 = 10 (left: 8 10  -> 8 / 10 = 0.8 (left: 0.8) -> 0.8 + 2 = 2.8 (left: 2.8) -> There is only one possible next step for the input 2.8: -> 2 + 8 = 10 -> 8 + 10 = 18 (left: 10 18)",
                "Pruning": null
            }
        },
        "Input": "1 8 10 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "907": {
        "puzzle": "2 3 6 9",
        "Agent 0": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 6 9 9)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 9 9"
                }
            },
            "Step 1": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - 9 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - 9 = 0 (left: 0) -> No possible next steps as there are no numbers provided.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - 9 = 0 (left: 0) -> No possible next steps as there are no numbers provided. -> No possible next steps as there are no numbers provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "2 2 9"
                }
            },
            "Step 4": {
                "Step": "6 / 3 = 2 (left: 2 2 9) -> 9 - 2 = 7 (left: 2 7)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 / 3 = 2 (left: 2 2 9) -> 9 - 2 = 7 (left: 2 7) -> 2 + 7 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 3 = 2 (left: 2 2 9) -> 9 - 2 = 7 (left: 2 7) -> 2 + 7 = 9 (left: 9) -> There are no possible next steps with just the number 9.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "0.6666666666666666 = 54"
                }
            },
            "Step 7": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 6 * 9 =  -> 6 * 9 = 54 -> 6 / 9 = 0.6666666666666666 (left: 0.6666666666666666 = 54) -> 0.6666666666666666 + 54 = 54.6666666666666666 (left: 54.6666666666666666)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "8 12"
                }
            },
            "Step 8": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 9 / 3 = 3 (left: 3 3) -> 3 + 3 = 6 (left: 6) -> 6 * 2 = 12 (left: 8 12) -> 8 * 12 = 96 (left: 96)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "8 12"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 6 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 9 9"
                }
            },
            "Step 1": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 / 3 = 3 (left: 6 9 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 / 3 = 3 (left: 6 9  -> 6 + 9 = 15 (left: 9 15)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 / 3 = 3 (left: 6 9  -> 6 + 9 = 15 (left: 9 15) -> 15 - 9 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "2 3 3"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "2 2 9"
                }
            },
            "Step 4": {
                "Step": "6 / 3 = 2 (left: 2 2 9) -> 2 + 2 = 4 (left: 4 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 / 3 = 2 (left: 2 2 9) -> 2 + 2 = 4 (left: 4 9) -> 9 - 4 = 5 (left: 4 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 3 = 2 (left: 2 2 9) -> 2 + 2 = 4 (left: 4 9) -> 9 - 4 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "0.6666666666666666 = 54"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "54 = 54"
                }
            },
            "Step 7": {
                "Step": "9 - 6 = 3 (left: 2 3 3) -> 2 + 3 = 5 (left: 3 5) -> 6 * 9 = 54 -> 9 * 6 = 54 (left: 54 = 54) -> There are no possible next steps as the equation is already balanced.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 6 = 3 (left: 2 3 3) -> 2 + 3 = 5 (left: 3 5) -> 6 * 9 = 54 -> 9 * 6 = 54 (left: 54 = 54) -> There are no possible next steps as the equation is already balanced. -> None",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "8 12"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 6 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 6 9"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 6 * 9 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 6 * 9 =  -> 6 * 9 = 54",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 6 * 9 =  -> 6 * 9 = 54 -> 6 / 9 = 0.6666666666666666 (left: 0.6666666666666666 = 54)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "2 3 3"
                }
            },
            "Step 4": {
                "Step": "9 - 6 = 3 (left: 2 3 3) -> 2 * 3 = 6 (left: 3 6)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 6 = 3 (left: 2 3 3) -> 2 * 3 = 6 (left: 3 6) -> Input: 4 9",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 6 = 3 (left: 2 3 3) -> 2 * 3 = 6 (left: 3 6) -> Input: 4 9 -> 9 - 4 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "0.6666666666666666 = 54"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "54 = 54"
                }
            },
            "Step 7": {
                "Step": "9 - 6 = 3 (left: 2 3 3) -> 2 + 3 = 5 (left: 3 5) -> 6 * 9 = 54 -> 9 * 6 = 54 (left: 54 = 54) -> There are no possible next steps since the equation is already solved and equal to 54.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 6 = 3 (left: 2 3 3) -> 2 + 3 = 5 (left: 3 5) -> 6 * 9 = 54 -> 9 * 6 = 54 (left: 54 = 54) -> There are no possible next steps since the equation is already solved and equal to 54. -> N/A",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "4.5 6.5"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: 2 3 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 9 9"
                }
            },
            "Step 1": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 * 3 = 27 (left: 6 9 27)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 * 3 = 27 (left: 6 9 27) -> 27 / 9 = 3 (left: 6 3)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 * 3 = 27 (left: 6 9 27) -> 27 / 9 = 3 (left: 6 3) -> 6 + 3 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "2 3 3"
                },
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "2 2 9"
                }
            },
            "Step 4": {
                "Step": "6 / 3 = 2 (left: 2 2 9) -> 9 - 2 = 7 (left: 2 7)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 / 3 = 2 (left: 2 2 9) -> 9 - 2 = 7 (left: 2 7) -> 7 - 2 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 3 = 2 (left: 2 2 9) -> 9 - 2 = 7 (left: 2 7) -> 7 - 2 = 5 (left: 5) -> There is only one possible next step:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "54 = 54"
                }
            },
            "Step 7": {
                "Step": "9 - 6 = 3 (left: 2 3 3) -> 2 + 3 = 5 (left: 3 5) -> 6 * 9 = 54 -> 9 * 6 = 54 (left: 54 = 54) -> There are no possible next steps as 54 = 54 is already an equation that is true.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 6 = 3 (left: 2 3 3) -> 2 + 3 = 5 (left: 3 5) -> 6 * 9 = 54 -> 9 * 6 = 54 (left: 54 = 54) -> There are no possible next steps as 54 = 54 is already an equation that is true. -> There are no possible next steps as 54 = 54 is already an equation that is true.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 * 3 = 6 (left: 6 6 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "5 6 9"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 9 / 3 = 3 (left: 3 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 9 / 3 = 3 (left: 3 3) -> 3 + 3 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 9 / 3 = 3 (left: 3 3) -> 3 + 3 = 6 (left: 6) -> 6 * 2 = 12 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "2 2 9"
                }
            },
            "Step 4": {
                "Step": "6 / 3 = 2 (left: 2 2 9) -> 9 / 2 = 4.5 (left: 2 4.5)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 / 3 = 2 (left: 2 2 9) -> 9 / 2 = 4.5 (left: 2 4.5) -> 2 + 4.5 = 6.5 (left: 6.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 3 = 2 (left: 2 2 9) -> 9 / 2 = 4.5 (left: 2 4.5) -> 2 + 4.5 = 6.5 (left: 6.5) -> There are no possible next steps with the input 6.5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "54 = 54"
                }
            },
            "Step 7": {
                "Step": "9 - 6 = 3 (left: 2 3 3) -> 2 + 3 = 5 (left: 3 5) -> 6 * 9 = 54 -> 9 * 6 = 54 (left: 54 = 54) -> No possible next steps as the equation is already solved.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 6 = 3 (left: 2 3 3) -> 2 + 3 = 5 (left: 3 5) -> 6 * 9 = 54 -> 9 * 6 = 54 (left: 54 = 54) -> No possible next steps as the equation is already solved. -> No possible next steps as the equation is already solved.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "6 - 3 = 3 (left: 2 3 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 9 9"
                }
            },
            "Step 1": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 / 6 = 1.5 (left: 1.5 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 / 6 = 1.5 (left: 1.5 9) -> 9 / 1.5 = 6 (left: 6 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 / 6 = 1.5 (left: 1.5 9) -> 9 / 1.5 = 6 (left: 6 9) -> 6 + 9 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "2 3 9"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "2 2 9"
                }
            },
            "Step 4": {
                "Step": "6 / 3 = 2 (left: 2 2 9) -> Input: 2 3 6",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 / 3 = 2 (left: 2 2 9) -> Input: 2 3 6 -> 2 + 3 = 5 (left: 5 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 3 = 2 (left: 2 2 9) -> Input: 2 3 6 -> 2 + 3 = 5 (left: 5 6) -> 5 + 6 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "8 12"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "0.6666666666666666 = 54"
                }
            },
            "Step 7": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 6 * 9 =  -> 6 * 9 = 54 -> 6 / 9 = 0.6666666666666666 (left: 0.6666666666666666 = 54) -> 54 + 0.6666666666666666 = 54.66666666666667 (left: 54.666666",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "54 = 54"
                }
            },
            "Step 8": {
                "Step": "9 - 6 = 3 (left: 2 3 3) -> 2 + 3 = 5 (left: 3 5) -> 6 * 9 = 54 -> 9 * 6 = 54 (left: 54 = 54) -> 54 + 54 = 108 (left: 54 108)",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 / 3 = 2 (left: 2 2 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "2 2 9"
                }
            },
            "Step 1": {
                "Step": "6 / 3 = 2 (left: 2 2 9) -> 9 / 2 = 4.5 (left: 2 4.5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 3 = 2 (left: 2 2 9) -> 9 / 2 = 4.5 (left: 2 4.5) -> 2 + 4.5 = 6.5 (left: 6.5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 / 3 = 2 (left: 2 2 9) -> 9 / 2 = 4.5 (left: 2 4.5) -> 2 + 4.5 = 6.5 (left: 6.5) -> 6.5 + 8 = 14.5 (left: 14.5)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "2 2 9"
                },
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "2 2 9"
                }
            },
            "Step 4": {
                "Step": "6 / 3 = 2 (left: 2 2 9) -> 9 - 2 = 7 (left: 2 7)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 / 3 = 2 (left: 2 2 9) -> 9 - 2 = 7 (left: 2 7) -> 2 * 7 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 3 = 2 (left: 2 2 9) -> 9 - 2 = 7 (left: 2 7) -> 2 * 7 = 14 (left: 14) -> No possible next steps as there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "54 = 54"
                }
            },
            "Step 7": {
                "Step": "9 - 6 = 3 (left: 2 3 3) -> 2 + 3 = 5 (left: 3 5) -> 6 * 9 = 54 -> 9 * 6 = 54 (left: 54 = 54) -> There are no possible next steps for this input as it is already equal to 54.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 6 = 3 (left: 2 3 3) -> 2 + 3 = 5 (left: 3 5) -> 6 * 9 = 54 -> 9 * 6 = 54 (left: 54 = 54) -> There are no possible next steps for this input as it is already equal to 54. -> N/A",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "There are no possible next steps with just the number 9."
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "9 - 2 = 7 (left: 2 6 7)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 9 9"
                }
            },
            "Step 1": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9) -> 3 + 9 = 12 (left: 9 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9) -> 3 + 9 = 12 (left: 9 12) -> 9 / 12 = 0.75 (left: 0.75)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "2 6 7"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "2 6 7"
                }
            },
            "Step 4": {
                "Step": "9 - 2 = 7 (left: 2 6 7) -> 2 * 6 = 12 (left: 12 7)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 2 = 7 (left: 2 6 7) -> 2 * 6 = 12 (left: 12 7) -> 12 / 7 = 1.7142857142857142 (left: 1.7142857142857142)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 2 = 7 (left: 2 6 7) -> 2 * 6 = 12 (left: 12 7) -> 12 / 7 = 1.7142857142857142 (left: 1.7142857142857142) -> 1.7142857142857142 * 2 = 3.4285714285714284",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "0.6666666666666666 = 54"
                }
            },
            "Step 7": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 6 * 9 =  -> 6 * 9 = 54 -> 6 / 9 = 0.6666666666666666 (left: 0.6666666666666666 = 54) -> 0.6666666666666666 - 54 = -53.333333333333336 (left: -53.333333333333336)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "There are no possible next steps with the input 6.5."
                }
            },
            "Step 8": {
                "Step": "6 / 3 = 2 (left: 2 2 9) -> 9 / 2 = 4.5 (left: 2 4.5) -> 2 + 4.5 = 6.5 (left: 6.5) -> There are no possible next steps with the input 6.5. -> There are no possible next steps with the input 6.5.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 6 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 9 9"
                }
            },
            "Step 1": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 6 + 9 = 15 (left: 9 9 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 6 + 9 = 15 (left: 9 9 15) -> 9 / 9 = 1 (left: 1 15)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 6 + 9 = 15 (left: 9 9 15) -> 9 / 9 = 1 (left: 1 15) -> 15 - 1 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "6 6 9"
                },
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "2 2 9"
                }
            },
            "Step 4": {
                "Step": "6 / 3 = 2 (left: 2 2 9) -> 9 / 2 = 4.5 (left: 2 4.5)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 / 3 = 2 (left: 2 2 9) -> 9 / 2 = 4.5 (left: 2 4.5) -> 2 + 4.5 = 6.5",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 3 = 2 (left: 2 2 9) -> 9 / 2 = 4.5 (left: 2 4.5) -> 2 + 4.5 = 6.5 -> 6.5 - 2 = 4.5 (left: 4.5 6.5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "0.6666666666666666 = 54"
                }
            },
            "Step 7": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 6 * 9 =  -> 6 * 9 = 54 -> 6 / 9 = 0.6666666666666666 (left: 0.6666666666666666 = 54) -> 0.6666666666666666 + 54 = 54.666666666666664 (left: 54.666666666666664)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "0.6666666666666666 = 54"
                }
            },
            "Step 8": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 6 * 9 =  -> 6 * 9 = 54 -> 6 / 9 = 0.6666666666666666 (left: 0.6666666666666666 = 54) -> 0.6666666666666666 * 54 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "0.6666666666666666 = 54"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: 2 3 3)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "2 6 7"
                }
            },
            "Step 1": {
                "Step": "9 - 2 = 7 (left: 2 6 7) -> 2 * 6 = 12 (left: 7 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 2 = 7 (left: 2 6 7) -> 2 * 6 = 12 (left: 7 12) -> 7 / 12 = 0.583333 (left: 0.583333)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 2 = 7 (left: 2 6 7) -> 2 * 6 = 12 (left: 7 12) -> 7 / 12 = 0.583333 (left: 0.583333) -> 2 - 0.583333 = 1.416667 (left: 1.416667)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "2 6 7"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "2 3 3"
                }
            },
            "Step 4": {
                "Step": "9 - 6 = 3 (left: 2 3 3) -> 2 + 3 = 5 (left: 3 5)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 6 = 3 (left: 2 3 3) -> 2 + 3 = 5 (left: 3 5) -> 6 * 9 = 54",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 6 = 3 (left: 2 3 3) -> 2 + 3 = 5 (left: 3 5) -> 6 * 9 = 54 -> 9 * 6 = 54 (left: 54 = 54)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "4.5 6.5"
                }
            },
            "Step 7": {
                "Step": "6 / 3 = 2 (left: 2 2 9) -> 9 / 2 = 4.5 (left: 2 4.5) -> 2 + 4.5 = 6.5 -> 6.5 - 2 = 4.5 (left: 4.5 6.5) -> 4.5 * 6.5 = 29.25 (left: 29.25)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "There is only one possible next step:"
                }
            },
            "Step 8": {
                "Step": "6 / 3 = 2 (left: 2 2 9) -> 9 - 2 = 7 (left: 2 7) -> 7 - 2 = 5 (left: 5) -> There is only one possible next step: -> 8 / 8 = 1 (left: 2 1 14)",
                "Pruning": null
            }
        },
        "Input": "2 3 6 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "908": {
        "puzzle": "1 3 5 9",
        "Agent 0": {
            "Step 0": {
                "Step": "3 * 5 = 15 (left: 1 15 9)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 15 9"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 9 = 1.67 (left: 1.67 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 9 = 1.67 (left: 1.67 9) -> 1.67 + 9 = 10.67 (left: 10.67)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 9 = 1.67 (left: 1.67 9) -> 1.67 + 9 = 10.67 (left: 10.67) -> There are no possible next steps for the number 10.67 as it is already a single number and cannot be further operated on with the given operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "4 5 9"
                }
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 4 5 9) -> 5 * 4 = 20 (left: 20 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 + 3 = 4 (left: 4 5 9) -> 5 * 4 = 20 (left: 20 9) -> 20 + 9 = 29 (left: 29)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 3 = 4 (left: 4 5 9) -> 5 * 4 = 20 (left: 20 9) -> 20 + 9 = 29 (left: 29) -> 29 is a prime number, so there are no possible next steps for this number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "There are no possible next steps without an input."
                }
            },
            "Step 7": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9) -> 9 - 15 = -6 (left: - -> There are no possible next steps without an input. -> Input needed.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9) -> 9 - 15 = -6 (left: - -> There are no possible next steps without an input. -> Input needed. -> Input: 3 9 9 27",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 + 9 = 14 (left: 1 3 14)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 15 9"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 1 * 15 = 15 (left: 15 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 1 * 15 = 15 (left: 15 9) -> 15 - 9 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 1 * 15 = 15 (left: 15 9) -> 15 - 9 = 6 (left: 6) -> 6 + 8 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "4 5 9"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "4 5 9"
                }
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 4 5 9) -> 9 - 4 = 5 (left: 5 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 + 3 = 4 (left: 4 5 9) -> 9 - 4 = 5 (left: 5 9) -> 5 + 9 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 3 = 4 (left: 4 5 9) -> 9 - 4 = 5 (left: 5 9) -> 5 + 9 = 14 (left: 14) -> No further steps can be taken with just one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "There are no possible next steps without an input."
                }
            },
            "Step 7": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9) -> 9 - 15 = -6 (left: - -> There are no possible next steps without an input. -> Please provide an input in order to determine possible next steps.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9) -> 9 - 15 = -6 (left: - -> There are no possible next steps without an input. -> Please provide an input in order to determine possible next steps. -> There are no possible next steps without an input provided.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 - 5 = 4 (left: 1 3 4)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 15 9"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9) -> 9 - 15 = -6 (left: -",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9) -> 9 - 15 = -6 (left: - -> There are no possible next steps without an input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "4 5 9"
                }
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 4 5 9) -> 6 / 3 = 2 (",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 + 3 = 4 (left: 4 5 9) -> 6 / 3 = 2 ( -> 6 * 3 = 18 (left: 18 = 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 3 = 4 (left: 4 5 9) -> 6 / 3 = 2 ( -> 6 * 3 = 18 (left: 18 = 2) -> 2 - 18 = -16 (left: -16)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "1.5555555555555556 - 1 = 0.5555555555555556"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "There are no possible next steps without an input."
                }
            },
            "Step 7": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9) -> 9 - 15 = -6 (left: - -> There are no possible next steps without an input. -> Please provide an input in order to generate possible next steps.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9) -> 9 - 15 = -6 (left: - -> There are no possible next steps without an input. -> Please provide an input in order to generate possible next steps. -> Please provide an input in order to generate possible next steps.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 * 9 = 45 (left: 1 3 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 15 9"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 - 1 = 14 (left: 14 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 - 1 = 14 (left: 14 9) -> 14 / 9 = 1.5555555555555556 (left: 1.5555555555555556)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 - 1 = 14 (left: 14 9) -> 14 / 9 = 1.5555555555555556 (left: 1.5555555555555556) -> 1.5555555555555556 - 1 = 0.5555555555555556",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "4 5 9"
                }
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 4 5 9) -> 9 / 4 = 2.25 (left: 2.25 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 + 3 = 4 (left: 4 5 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> 9 - 2.25 = 6.75 (left: 6.75)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 3 = 4 (left: 4 5 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> 9 - 2.25 = 6.75 (left: 6.75) -> There is only one number provided (6.75), so there are no possible next steps to perform any operations on.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "3 - 5.5 = -2.5"
                }
            },
            "Step 7": {
                "Step": "1 + 3 = 4 (left: 4 5 9) -> 4 / 5 = 0.8 (left: 0.8 9) -> 3 + 5.5 = 8.5 -> 3 - 5.5 = -2.5 -> 3 / (-5.5) = -0.5454545454545454 (left: -2.5 -0.5454545454545454)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 + 3 = 4 (left: 4 5 9) -> 4 / 5 = 0.8 (left: 0.8 9) -> 3 + 5.5 = 8.5 -> 3 - 5.5 = -2.5 -> 3 / (-5.5) = -0.5454545454545454 (left: -2.5 -0.5454545454545454) -> -2.5 * (-0.5454545454545454) = 1.363636363636363",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 - 1 = 2 (left: 2 5 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 15 9"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9) -> 9 + 15 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9) -> 9 + 15 = 24 (left: 24) -> Answer: (3 * 5) + (15 / 1) = 24",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "4 5 9"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "4 5 9"
                }
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 4 5 9) -> 4 + 5 = 9 (left: 9 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 + 3 = 4 (left: 4 5 9) -> 4 + 5 = 9 (left: 9 9) -> 9 - 9 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 3 = 4 (left: 4 5 9) -> 4 + 5 = 9 (left: 9 9) -> 9 - 9 = 0 (left: 0) -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "There are no possible next steps without an input."
                }
            },
            "Step 7": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9) -> 9 - 15 = -6 (left: - -> There are no possible next steps without an input. -> 7 * 3 = 21 (left: 5 21 2)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9) -> 9 - 15 = -6 (left: - -> There are no possible next steps without an input. -> 7 * 3 = 21 (left: 5 21 2) -> 2 / 5 = 0.4 (left: 0.4 21)",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 4 5 9)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 15 9"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 9 - 1 = 8 (left: 8 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 9 - 1 = 8 (left: 8 9) -> 8 + 9 = 17 (left: 17)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 9 - 1 = 8 (left: 8 9) -> 8 + 9 = 17 (left: 17) -> There are no possible next steps for the input 17 as it is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "4 5 9"
                }
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 4 5 9) -> 5 / 4 = 1.25 (left: 1.25 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 + 3 = 4 (left: 4 5 9) -> 5 / 4 = 1.25 (left: 1.25 9) -> 1.25 + 9 = 10.25 (left: 9 10.25)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 3 = 4 (left: 4 5 9) -> 5 / 4 = 1.25 (left: 1.25 9) -> 1.25 + 9 = 10.25 (left: 9 10.25) -> 9 * 10.25 = 92.25 (left: 92.25)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "There are no possible next steps without an input."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "There are no possible next steps without an input."
                }
            },
            "Step 7": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9) -> 9 - 15 = -6 (left: - -> There are no possible next steps without an input. -> Please provide an input in order to generate possible next steps.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9) -> 9 - 15 = -6 (left: - -> There are no possible next steps without an input. -> Please provide an input in order to generate possible next steps. -> It looks like you haven't provided an input yet. Please provide a set of numbers in order to generate possible next steps.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "3 + 5 = 8 (left: 1 8 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 15 9"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 9 - 1 = 8 (left: 8 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 9 - 1 = 8 (left: 8 9) -> 8 / 9 = 0.8888888889 (left: 0.8888888889)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 9 - 1 = 8 (left: 8 9) -> 8 / 9 = 0.8888888889 (left: 0.8888888889) -> 0.8888888889 * 2 = 1.777777778 (left: 1.777777778)",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "4 5 9"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "4 5 9"
                }
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 4 5 9) -> 5 * 4 = 20 (left: 9 20)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 + 3 = 4 (left: 4 5 9) -> 5 * 4 = 20 (left: 9 20) -> 9 + 20 = 29 (left: 29)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 3 = 4 (left: 4 5 9) -> 5 * 4 = 20 (left: 9 20) -> 9 + 20 = 29 (left: 29) -> 29 * 2 = 58 (left: 58) ",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There are no possible next steps for the number 10.67 as it is already a single number and cannot be further operated on with the given operations."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "There are no possible next steps with the number 18."
                }
            },
            "Step 7": {
                "Step": "1 + 3 = 4 (left: 4 5 9) -> 5 + 9 = 14 (left: 4 14) -> 4 + 14 = 18 (left: 18) -> There are no possible next steps with the number 18. -> There are no possible next steps with the number 18.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 + 3 = 4 (left: 4 5 9) -> 5 + 9 = 14 (left: 4 14) -> 4 + 14 = 18 (left: 18) -> There are no possible next steps with the number 18. -> There are no possible next steps with the number 18. -> None",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "No possible next steps."
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "5 * 9 = 45 (left: 1 3 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 15 9"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9) -> 15 + 9 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9) -> 15 + 9 = 24 (left: 24) -> Answer: (3 * 5) + (15 + 9) = 24",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "1 3 "
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "4 5 9"
                }
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 4 5 9) -> 4 / 5 = 0.8 (left: 0.8 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 + 3 = 4 (left: 4 5 9) -> 4 / 5 = 0.8 (left: 0.8 9) -> 0.8 * 9 = 7.2 (left: 7.2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 3 = 4 (left: 4 5 9) -> 4 / 5 = 0.8 (left: 0.8 9) -> 0.8 * 9 = 7.2 (left: 7.2) -> 7.2 * 8 = 57.6 (left: 57.6)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "There are no possible next steps without an input."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "No possible next steps."
                }
            },
            "Step 7": {
                "Step": "1 + 3 = 4 (left: 4 5 9) -> 4 + 5 = 9 (left: 9 9) -> 9 - 9 = 0 (left: 0) -> No possible next steps. -> No possible next steps.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 + 3 = 4 (left: 4 5 9) -> 4 + 5 = 9 (left: 9 9) -> 9 - 9 = 0 (left: 0) -> No possible next steps. -> No possible next steps. -> There are no possible next steps with the given numbers.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "5 * 9 = 45 (left: 1 3 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "4 5 9"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 4 5 9) -> 5 - 4 = 1 (left: 1 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 3 = 4 (left: 4 5 9) -> 5 - 4 = 1 (left: 1 9) -> 9 - 1 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 4 5 9) -> 5 - 4 = 1 (left: 1 9) -> 9 - 1 = 8 (left: 8) -> There are no possible next steps with just the number 8.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "4 5 9"
                }
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 4 5 9) -> 4 / 5 = 0.8 (left: 0.8 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 + 3 = 4 (left: 4 5 9) -> 4 / 5 = 0.8 (left: 0.8 9) -> 3 + 5.5 = 8.5",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 3 = 4 (left: 4 5 9) -> 4 / 5 = 0.8 (left: 0.8 9) -> 3 + 5.5 = 8.5 -> 3 - 5.5 = -2.5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "There are no possible next steps without an input."
                }
            },
            "Step 7": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9) -> 9 - 15 = -6 (left: - -> There are no possible next steps without an input. -> Please provide an input in order to determine the possible next steps.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9) -> 9 - 15 = -6 (left: - -> There are no possible next steps without an input. -> Please provide an input in order to determine the possible next steps. -> ",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "3 - 5.5 = -2.5"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 4 5 9)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 15 9"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 1 + 15 = 16 (left: 9 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 1 + 15 = 16 (left: 9 16) -> 9 * 16 = 144 (left: 144)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 1 + 15 = 16 (left: 9 16) -> 9 * 16 = 144 (left: 144) -> There is only one number given, so there are no possible next steps to perform any operations. The input number is already complete.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "4 5 9"
                }
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 4 5 9) -> 5 + 9 = 14 (left: 4 14)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 + 3 = 4 (left: 4 5 9) -> 5 + 9 = 14 (left: 4 14) -> 4 + 14 = 18 (left: 18)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 3 = 4 (left: 4 5 9) -> 5 + 9 = 14 (left: 4 14) -> 4 + 14 = 18 (left: 18) -> There are no possible next steps with the number 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "There is only one number given, so there are no possible next steps to perform any operations. The input number is already complete."
                }
            },
            "Step 7": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 1 + 15 = 16 (left: 9 16) -> 9 * 16 = 144 (left: 144) -> There is only one number given, so there are no possible next steps to perform any operations. The input number is already complete. -> No possible next steps as there is only one number given.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 1 + 15 = 16 (left: 9 16) -> 9 * 16 = 144 (left: 144) -> There is only one number given, so there are no possible next steps to perform any operations. The input number is already complete. -> No possible next steps as there is only one number given. -> No possible next steps as there is only one number given.",
                "Pruning": null
            }
        },
        "Input": "1 3 5 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "909": {
        "puzzle": "3 3 7 12",
        "Agent 0": {
            "Step 0": {
                "Step": "3 * 7 = 21 (left: 21 3 ",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "21 3 "
                }
            },
            "Step 1": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 / 3 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 / 3 = 7 (left: 7) -> 7 * 8 = 56 (left: 8 56)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 / 3 = 7 (left: 7) -> 7 * 8 = 56 (left: 8 56) -> 56 - 8 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "3 4 12"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "3 4 12"
                }
            },
            "Step 4": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 / 4 = 3 (left: 3 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 / 4 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 / 4 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> There are no possible next steps for the number 36 as it is a single number and cannot be combined with any other numbers in the input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "36 = 36"
                }
            },
            "Step 7": {
                "Step": "12 - 3 = 9 (left: 3 7 9) -> 9 / 3 = 3 (left: 3 7) -> 4 * 9 = 36 -> 4 * 9 = 36 (left: 36 = 36) -> 36 - 36 = 0",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 - 3 = 9 (left: 3 7 9) -> 9 / 3 = 3 (left: 3 7) -> 4 * 9 = 36 -> 4 * 9 = 36 (left: 36 = 36) -> 36 - 36 = 0 -> 36 - 36 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "9 12"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 - 3 = 9 (left: 3 7 9)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "21 3 "
                }
            },
            "Step 1": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 * 3 = 63 (left: 63)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 * 3 = 63 (left: 63) -> 6 + 3 = 9",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 * 3 = 63 (left: 63) -> 6 + 3 = 9 -> 3 / 6 = 0.5 (left: 0.5 9 18)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "21 3 "
                }
            },
            "Step 4": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 - 3 = 18 (left: 18)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 - 3 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 - 3 = 18 (left: 18) -> There are no possible next steps with the input 18. -> None",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "36 = 36"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "There are no possible next steps as the equation is already equal."
                }
            },
            "Step 7": {
                "Step": "12 - 3 = 9 (left: 3 7 9) -> 9 / 3 = 3 (left: 3 7) -> 4 * 9 = 36 -> 4 * 9 = 36 (left: 36 = 36) -> No possible next steps as the equation is already equal. -> No possible next steps as the equation is already equal. -> There are no possible next steps as the equation is already equal. -> N/A",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "There are no possible next steps as the equation is already equal."
                }
            },
            "Step 8": {
                "Step": "12 - 3 = 9 (left: 3 7 9) -> 9 / 3 = 3 (left: 3 7) -> 4 * 9 = 36 -> 4 * 9 = 36 (left: 36 = 36) -> No possible next steps as the equation is already equal. -> No possible next steps as the equation is already equal. -> There are no possible next steps as the equation is already equal. -> None",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "There are no possible next steps as there are no numbers provided to operate on."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 * 3 = 21 (left: 21 3 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 7 9"
                }
            },
            "Step 1": {
                "Step": "12 - 3 = 9 (left: 3 7 9) -> 9 / 3 = 3 (left: 3 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 3 = 9 (left: 3 7 9) -> 9 / 3 = 3 (left: 3 7) -> 4 * 9 = 36",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 3 = 9 (left: 3 7 9) -> 9 / 3 = 3 (left: 3 7) -> 4 * 9 = 36 -> 4 * 9 = 36 (left: 36 = 36)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "21 3 "
                }
            },
            "Step 4": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 * 3 = 63 (left: 63)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 * 3 = 63 (left: 63) -> 63 + 2 = 65 (left: 65)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 * 3 = 63 (left: 63) -> 63 + 2 = 65 (left: 65) -> There are no possible next steps with the input of 65.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "36 = 36"
                }
            },
            "Step 7": {
                "Step": "12 - 3 = 9 (left: 3 7 9) -> 9 / 3 = 3 (left: 3 7) -> 4 * 9 = 36 -> 4 * 9 = 36 (left: 36 = 36) -> 36 + 36 = 72 (left: 72)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "36 = 36"
                }
            },
            "Step 8": {
                "Step": "12 - 3 = 9 (left: 3 7 9) -> 9 / 3 = 3 (left: 3 7) -> 4 * 9 = 36 -> 4 * 9 = 36 (left: 36 = 36) -> There are no possible next steps as the equation is already solved.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 - 3 = 4 (left: 3 4 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "21 3 "
                }
            },
            "Step 1": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 - 3 = 18 (left: 18)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 - 3 = 18 (left: 18) -> None, as there are no other numbers to perform operations with.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 - 3 = 18 (left: 18) -> None, as there are no other numbers to perform operations with. -> There are no possible next steps as there are no numbers left to perform operations with.",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "8 96"
                }
            },
            "Step 4": {
                "Step": "12 - 3 = 9 (left: 3 7 9) -> 3 * 7 = 21 (left: 9 21) -> 21 - 9 = 12 (left: 12) -> 12 * 8 = 96 (left: 8 96) -> 96 + 8 = 104 (left: 8 104)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 3 = 9 (left: 3 7 9) -> 3 * 7 = 21 (left: 9 21) -> 21 - 9 = 12 (left: 12) -> 12 * 8 = 96 (left: 8 96) -> 96 + 8 = 104 (left: 8 104) -> 104 / 8 = 13 (left: 13)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "There are no possible next steps as there are no numbers left to perform operations with."
                }
            },
            "Step 6": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 - 3 = 18 (left: 18) -> None, as there are no other numbers to perform operations with. -> There are no possible next steps as there are no numbers left to perform operations with. -> There are no possible next steps as there are no numbers left to perform operations with.",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "36 = 36"
                }
            },
            "Step 7": {
                "Step": "12 - 3 = 9 (left: 3 7 9) -> 9 / 3 = 3 (left: 3 7) -> 4 * 9 = 36 -> 4 * 9 = 36 (left: 36 = 36) -> 36 * 36 = 1296 (left: 36 1296)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 - 3 = 9 (left: 3 7 9) -> 9 / 3 = 3 (left: 3 7) -> 4 * 9 = 36 -> 4 * 9 = 36 (left: 36 = 36) -> 36 * 36 = 1296 (left: 36 1296) -> 1296 / 36 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "9 12"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "7 - 3 = 4 (left: 3 4 12)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 7 9"
                }
            },
            "Step 1": {
                "Step": "12 - 3 = 9 (left: 3 7 9) -> 3 * 7 = 21 (left: 9 21)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 3 = 9 (left: 3 7 9) -> 3 * 7 = 21 (left: 9 21) -> 21 - 9 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 3 = 9 (left: 3 7 9) -> 3 * 7 = 21 (left: 9 21) -> 21 - 9 = 12 (left: 12) -> 12 * 8 = 96 (left: 8 96)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "36 = 36"
                }
            },
            "Step 4": {
                "Step": "12 - 3 = 9 (left: 3 7 9) -> 9 / 3 = 3 (left: 3 7) -> 4 * 9 = 36 -> 4 * 9 = 36 (left: 36 = 36) -> 36 * 36 = 1296 (left: 1296)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "9 7 12"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 7 12) -> 7 + 12 = 19 (left: 9 19)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 7 12) -> 7 + 12 = 19 (left: 9 19) -> 19 - 9 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "36 = 36"
                }
            },
            "Step 7": {
                "Step": "12 - 3 = 9 (left: 3 7 9) -> 9 / 3 = 3 (left: 3 7) -> 4 * 9 = 36 -> 4 * 9 = 36 (left: 36 = 36) -> 36 + 36 = 72 (left: 72)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "There are no possible next steps as there are no numbers provided to operate on."
                }
            },
            "Step 8": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 3 - 21 = -18 (left: -18) -> There are no possible next steps as there are no numbers provided to operate on with -18. -> There are no possible next steps as there are no numbers provided to operate on. -> No numbers provided.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "7 - 3 = 4 (left: 3 4 12)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "21 3 "
                }
            },
            "Step 1": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 3 - 21 = -18 (left: -18)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 3 - 21 = -18 (left: -18) -> There are no possible next steps as there are no numbers provided to operate on with -18.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 3 - 21 = -18 (left: -18) -> There are no possible next steps as there are no numbers provided to operate on with -18. -> There are no possible next steps as there are no numbers provided to operate on.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "3 4 12"
                }
            },
            "Step 4": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 / 4 = ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 / 4 =  -> 12 / 4 = 3",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 / 4 =  -> 12 / 4 = 3 -> 12 * 4 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "9 12"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "36 = 36"
                }
            },
            "Step 7": {
                "Step": "12 - 3 = 9 (left: 3 7 9) -> 9 / 3 = 3 (left: 3 7) -> 4 * 9 = 36 -> 4 * 9 = 36 (left: 36 = 36) -> 36 - 2 = 34 (left: 34 = 36)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 - 3 = 9 (left: 3 7 9) -> 9 / 3 = 3 (left: 3 7) -> 4 * 9 = 36 -> 4 * 9 = 36 (left: 36 = 36) -> 36 - 2 = 34 (left: 34 = 36) -> 34 - 2 = 32 (left: 2 32)",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "12 - 7 = 5 (left: 3 5 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 4 12"
                }
            },
            "Step 1": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 - 4 = 8 (left: 3 8 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 - 4 = 8 (left: 3 8 12) -> 12 - 3 = 9 (left: 3 9 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 - 4 = 8 (left: 3 8 12) -> 12 - 3 = 9 (left: 3 9 12) -> 12 - 3 = 9 (left: 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "8 96"
                }
            },
            "Step 4": {
                "Step": "12 - 3 = 9 (left: 3 7 9) -> 3 * 7 = 21 (left: 9 21) -> 21 - 9 = 12 (left: 12) -> 12 * 8 = 96 (left: 8 96) -> 8 / 8 = 1 (left: 1 96)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 3 = 9 (left: 3 7 9) -> 3 * 7 = 21 (left: 9 21) -> 21 - 9 = 12 (left: 12) -> 12 * 8 = 96 (left: 8 96) -> 8 / 8 = 1 (left: 1 96) -> 1 + 96 = 97 (left: 97)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "8 96"
                }
            },
            "Step 6": {
                "Step": "12 - 3 = 9 (left: 3 7 9) -> 3 * 7 = 21 (left: 9 21) -> 21 - 9 = 12 (left: 12) -> 12 * 8 = 96 (left: 8 96) -> 96 / 8 = 12 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "36 = 36"
                }
            },
            "Step 7": {
                "Step": "12 - 3 = 9 (left: 3 7 9) -> 9 / 3 = 3 (left: 3 7) -> 4 * 9 = 36 -> 4 * 9 = 36 (left: 36 = 36) -> 36 + 2 = 38 (left: 38 = 36)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 - 3 = 9 (left: 3 7 9) -> 9 / 3 = 3 (left: 3 7) -> 4 * 9 = 36 -> 4 * 9 = 36 (left: 36 = 36) -> 36 + 2 = 38 (left: 38 = 36) -> 38 + 36 = 74 (left: 74)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "9 12"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 7 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "21 3 "
                }
            },
            "Step 1": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 / 3 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 / 3 = 7 (left: 7) -> 7 / 8 = 0.875 (left: 0.875)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 / 3 = 7 (left: 7) -> 7 / 8 = 0.875 (left: 0.875) -> There is only one number given in the input, so there are no possible next steps to perform any mathematical operations. The number 0.875 stands on its own.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "36 = 36"
                }
            },
            "Step 4": {
                "Step": "12 - 3 = 9 (left: 3 7 9) -> 9 / 3 = 3 (left: 3 7) -> 4 * 9 = 36 -> 4 * 9 = 36 (left: 36 = 36) -> No possible next steps as the equation is already equal.",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 3 = 9 (left: 3 7 9) -> 9 / 3 = 3 (left: 3 7) -> 4 * 9 = 36 -> 4 * 9 = 36 (left: 36 = 36) -> No possible next steps as the equation is already equal. -> No possible next steps as the equation is already equal.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 3 = 9 (left: 3 7 9) -> 9 / 3 = 3 (left: 3 7) -> 4 * 9 = 36 -> 4 * 9 = 36 (left: 36 = 36) -> No possible next steps as the equation is already equal. -> No possible next steps as the equation is already equal. -> There are no possible next steps as the equation is already equal.",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "There are no possible next steps as the equation is already equal."
                }
            },
            "Step 7": {
                "Step": "12 - 3 = 9 (left: 3 7 9) -> 9 / 3 = 3 (left: 3 7) -> 4 * 9 = 36 -> 4 * 9 = 36 (left: 36 = 36) -> No possible next steps as the equation is already equal. -> No possible next steps as the equation is already equal. -> There are no possible next steps as the equation is already equal. -> N/A",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "There are no possible next steps with the input of 65."
                }
            },
            "Step 8": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 * 3 = 63 (left: 63) -> 63 + 2 = 65 (left: 65) -> There are no possible next steps with the input of 65. -> There are no possible next steps with the input of 65.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "7 * 3 = 21 (left: 3 12 ",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "21 3 "
                }
            },
            "Step 1": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: (3 * 7) + 3 = 24",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: (3 * 7) + 3 = 24 -> Input: 2 3 4 6\nSteps:\n4 + 6 = 10 (left: 2 3 10)\n10 * 2 = 20 (left: 3 20)\n20 + 3 = 23 (left: 23)\n23 + 1 = 24 (left: 24)\nAnswer: ((4 + 6) * 2) + (3 + 1) = 24",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "21 3 "
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "3 4 12"
                }
            },
            "Step 4": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 4 * 3 = 12 (left: 12 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 4 * 3 = 12 (left: 12 12) -> 12 - 12 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 4 * 3 = 12 (left: 12 12) -> 12 - 12 = 0 (left: 0) -> No possible next steps with input 0.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "36 = 36"
                }
            },
            "Step 7": {
                "Step": "12 - 3 = 9 (left: 3 7 9) -> 9 / 3 = 3 (left: 3 7) -> 4 * 9 = 36 -> 4 * 9 = 36 (left: 36 = 36) -> 36 - 2 = 34 (left: 34)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "There are no possible next steps as the equation is already equal."
                }
            },
            "Step 8": {
                "Step": "12 - 3 = 9 (left: 3 7 9) -> 9 / 3 = 3 (left: 3 7) -> 4 * 9 = 36 -> 4 * 9 = 36 (left: 36 = 36) -> No possible next steps as the equation is already equal. -> No possible next steps as the equation is already equal. -> There are no possible next steps as the equation is already equal. -> The equation is already equal.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 6 7 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 4 12"
                }
            },
            "Step 1": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 3 + 4 = 7 (left: 7 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 3 + 4 = 7 (left: 7 12) -> 7 / 12 \u2248 0.5833 (left: 0.5833)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 3 + 4 = 7 (left: 7 12) -> 7 / 12 \u2248 0.5833 (left: 0.5833) -> There are no possible next steps as the input is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "36 = 36"
                }
            },
            "Step 4": {
                "Step": "12 - 3 = 9 (left: 3 7 9) -> 9 / 3 = 3 (left: 3 7) -> 4 * 9 = 36 -> 4 * 9 = 36 (left: 36 = 36) -> No possible next steps as the equation is already balanced.",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 3 = 9 (left: 3 7 9) -> 9 / 3 = 3 (left: 3 7) -> 4 * 9 = 36 -> 4 * 9 = 36 (left: 36 = 36) -> No possible next steps as the equation is already balanced. -> No possible next steps as the equation is already balanced.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 3 = 9 (left: 3 7 9) -> 9 / 3 = 3 (left: 3 7) -> 4 * 9 = 36 -> 4 * 9 = 36 (left: 36 = 36) -> No possible next steps as the equation is already balanced. -> No possible next steps as the equation is already balanced. -> No possible next steps as the equation is already balanced.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "36 = 36"
                }
            },
            "Step 7": {
                "Step": "12 - 3 = 9 (left: 3 7 9) -> 9 / 3 = 3 (left: 3 7) -> 4 * 9 = 36 -> 4 * 9 = 36 (left: 36 = 36) -> 36 - 36 = 0 (left: 0 36)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 - 3 = 9 (left: 3 7 9) -> 9 / 3 = 3 (left: 3 7) -> 4 * 9 = 36 -> 4 * 9 = 36 (left: 36 = 36) -> 36 - 36 = 0 (left: 0 36) -> 36 / 36 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "No possible next steps with input 0."
                }
            }
        },
        "Input": "3 3 7 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "910": {
        "puzzle": "4 5 7 9",
        "Agent 0": {
            "Step 0": {
                "Step": "4 * 5 = 20 (left: 7 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 9"
                }
            },
            "Step 1": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 - 4 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 - 4 = 5 (left: 5) -> There are no possible next steps with just the number 5.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 - 4 = 5 (left: 5) -> There are no possible next steps with just the number 5. -> 5 + 5 = 10",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "4 5 16"
                }
            },
            "Step 4": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 5 * 16 = 80 (left: 80)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 5 * 16 = 80 (left: 80) -> 80 / 2 = 40",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 5 * 16 = 80 (left: 80) -> 80 / 2 = 40 -> 80 / 2 = 40 (left: 40)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "1.7777777777777777 * 2 = 3.5555555555555554"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "5 4"
                }
            },
            "Step 7": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 4 + 5 = 9 (left: 9 16) -> 9 * 16 = 144 (left: 144) -> 1 + 4 = 5 (left: 5 4) -> 5 * 4 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "There are no possible next steps with the input 60."
                }
            },
            "Step 8": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 16 - 4 = 12 (left: 5 12) -> 5 * 12 = 60 (left: 60) -> There are no possible next steps with the input 60. -> There are no possible next steps with the input 60.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 * 7 = 35 (left: 4 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 5 16"
                }
            },
            "Step 1": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 4 + 5 = 9 (left: 9 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 4 + 5 = 9 (left: 9 16) -> 16 / 9 = 1.7777777777777777 (left: 1.7777777777777777)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 4 + 5 = 9 (left: 9 16) -> 16 / 9 = 1.7777777777777777 (left: 1.7777777777777777) -> 1.7777777777777777 * 2 = 3.5555555555555554",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "4 5 16"
                }
            },
            "Step 4": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 4 + 5 = 9 (left: 9 16)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 4 + 5 = 9 (left: 9 16) -> 9 * 16 = 144 (left: 144)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 4 + 5 = 9 (left: 9 16) -> 9 * 16 = 144 (left: 144) -> 1 + 4 = 5 (left: 5 4)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "5 4"
                }
            },
            "Step 7": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 4 + 5 = 9 (left: 9 16) -> 9 * 16 = 144 (left: 144) -> 1 + 4 = 5 (left: 5 4) -> 5 - 4 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "5 4"
                }
            },
            "Step 8": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 4 + 5 = 9 (left: 9 16) -> 9 * 16 = 144 (left: 144) -> 1 + 4 = 5 (left: 5 4) -> Possible next steps:",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 * 7 = 35 (left: 4 9 35)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 9"
                }
            },
            "Step 1": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 - 4 = 5 (left: 5 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 - 4 = 5 (left: 5 9) -> 9 - 5 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 - 4 = 5 (left: 5 9) -> 9 - 5 = 4 (left: 4) -> 4 - 4 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "7 9"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "4 5 16"
                }
            },
            "Step 4": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 4 * 5 = 20 (left: 20 16)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 4 * 5 = 20 (left: 20 16) -> 16 / 20 =",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 4 * 5 = 20 (left: 20 16) -> 16 / 20 = -> 16 / 20 = 0.8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "5 4"
                }
            },
            "Step 7": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 4 + 5 = 9 (left: 9 16) -> 9 * 16 = 144 (left: 144) -> 1 + 4 = 5 (left: 5 4) -> 5 / 4 = 1.25 (left: 1.25)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "1.7777777777777777 * 2 = 3.5555555555555554"
                }
            },
            "Step 8": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 4 + 5 = 9 (left: 9 16) -> 16 / 9 = 1.7777777777777777 (left: 1.7777777777777777) -> 1.7777777777777777 * 2 = 3.5555555555555554 -> 1.7777777777777777 - 2 = -0.22222222222222223 (left: -0.222222222222222",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "5 + 5 = 10"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 - 5 = -1 (left:",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 5 16"
                }
            },
            "Step 1": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 5 + 4 = 9 (left: 9 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 5 + 4 = 9 (left: 9 16) -> 9 + 16 = 25 (left: 25)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 5 + 4 = 9 (left: 9 16) -> 9 + 16 = 25 (left: 25) -> There are no possible next steps with the number 25.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "4 5 16"
                }
            },
            "Step 4": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 16 - 5 = 11 (left: 4 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 16 - 5 = 11 (left: 4 11) -> 11 - 4 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 16 - 5 = 11 (left: 4 11) -> 11 - 4 = 7 (left: 7) -> 7 * 8 = 56 (left: 56)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "1.7777777777777777 * 2 = 3.5555555555555554"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "5 4"
                }
            },
            "Step 7": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 4 + 5 = 9 (left: 9 16) -> 9 * 16 = 144 (left: 144) -> 1 + 4 = 5 (left: 5 4) -> 5 / 4 = 1.25 (left: 1.25)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "There are no more possible next steps with the input 11."
                }
            },
            "Step 8": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 16 - 5 = 11 (left: -> 16 - 5 = 11 (left: 11) -> There are no more possible next steps with the input 11. -> 11 + 2 = 13 (left: 2 13)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 * 5 = 20 (left: 7 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 9"
                }
            },
            "Step 1": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> Input: 5 3",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> Input: 5 3 -> 5 * 3 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "4 9 35"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "4.5 = 4.25"
                }
            },
            "Step 4": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25) -> 2 + 2.25 = 4.25 -> 2.25 * 2 = 4.5 (left: 4.5 = 4.25) -> 4.5 - 4.25 = 0.25 (left: 4.25)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "7 9"
                }
            },
            "Step 5": {
                "Step": "4 * 5 = 20 (left: 7 9) -> 7 + 9 = 16 (left: 16)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 5 = 20 (left: 7 9) -> 7 + 9 = 16 (left: 16) -> There are no possible next steps as there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "5 4"
                }
            },
            "Step 7": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 4 + 5 = 9 (left: 9 16) -> 9 * 16 = 144 (left: 144) -> 1 + 4 = 5 (left: 5 4) -> 5 * 4 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "16 / 20 = 0.8"
                }
            },
            "Step 8": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 4 * 5 = 20 (left: 20 16) -> 16 / 20 = -> 16 / 20 = 0.8 -> There are no possible next steps for this calculation as it already simplifies to 0.8.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "4 + 5 = 9 (left: 7 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 5 16"
                }
            },
            "Step 1": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 5 * 4 = 20 (left: 20 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 5 * 4 = 20 (left: 20 16) -> 20 - 16 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 5 * 4 = 20 (left: 20 16) -> 20 - 16 = 4 (left: 4) -> 4 + 4 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "4 5 16"
                }
            },
            "Step 4": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 16 - 5 = 11 (left:",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 16 - 5 = 11 (left: -> 16 - 5 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 16 - 5 = 11 (left: -> 16 - 5 = 11 (left: 11) -> There are no more possible next steps with the input 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "5 4"
                }
            },
            "Step 7": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 4 + 5 = 9 (left: 9 16) -> 9 * 16 = 144 (left: 144) -> 1 + 4 = 5 (left: 5 4) -> 9",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "There are no more possible next steps with the input 11."
                }
            },
            "Step 8": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 16 - 5 = 11 (left: -> 16 - 5 = 11 (left: 11) -> There are no more possible next steps with the input 11. -> There are no more possible next steps with the input 11.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "7 * 9 = 63 (left: 4 5 63)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 9"
                }
            },
            "Step 1": {
                "Step": "5 * 7 = 35 (left: 4 9) -> Possible next steps:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 7 = 35 (left: 4 9) -> Possible next steps: -> 14 - 8 = 6 (left: 2 6 ",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 7 = 35 (left: 4 9) -> Possible next steps: -> 14 - 8 = 6 (left: 2 6  -> 2 + 6 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "4 5 16"
                },
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "4 5 16"
                }
            },
            "Step 4": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 16 - 4 = 12 (left: 5 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 16 - 4 = 12 (left: 5 12) -> 5 * 12 = 60 (left: 60)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 16 - 4 = 12 (left: 5 12) -> 5 * 12 = 60 (left: 60) -> There are no possible next steps with the input 60.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "5 4"
                }
            },
            "Step 7": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 4 + 5 = 9 (left: 9 16) -> 9 * 16 = 144 (left: 144) -> 1 + 4 = 5 (left: 5 4) -> 5 / 4 = 1.25 (left: 1.25 4)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 4 + 5 = 9 (left: 9 16) -> 9 * 16 = 144 (left: 144) -> 1 + 4 = 5 (left: 5 4) -> 5 / 4 = 1.25 (left: 1.25 4) -> 1.25 * 4 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "1.7777777777777777 * 2 = 3.5555555555555554"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "4 + 5 = 9 (left: 7 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 9 35"
                }
            },
            "Step 1": {
                "Step": "5 * 7 = 35 (left: 4 9 35) -> 4 + 9 = 13 (left: 13 35)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 7 = 35 (left: 4 9 35) -> 4 + 9 = 13 (left: 13 35) -> 13 + 35 = 48 (left: 48)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 7 = 35 (left: 4 9 35) -> 4 + 9 = 13 (left: 13 35) -> 13 + 35 = 48 (left: 48) -> 48 / 8 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "7 9"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "4 5 16"
                }
            },
            "Step 4": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 4 + 5 = 9 (left: 9 16)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 4 + 5 = 9 (left: 9 16) -> 16 - 9 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 4 + 5 = 9 (left: 9 16) -> 16 - 9 = 7 (left: 7) -> 7 / 2 = 3.5 (left: 3.5)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "There are no possible next steps with the number 25."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "5 4"
                }
            },
            "Step 7": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 4 + 5 = 9 (left: 9 16) -> 9 * 16 = 144 (left: 144) -> 1 + 4 = 5 (left: 5 4) -> 5 / 4 = 1.25 (left: 1.25 4)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 4 + 5 = 9 (left: 9 16) -> 9 * 16 = 144 (left: 144) -> 1 + 4 = 5 (left: 5 4) -> 5 / 4 = 1.25 (left: 1.25 4) -> 1.25 + 4 = 5.25 (left: 5.25)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "5 4"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "5 + 7 = 12 (left: 4 12 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 9"
                }
            },
            "Step 1": {
                "Step": "5 * 7 = 35 (left: 4 9) -> Input: 3 6 9",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 7 = 35 (left: 4 9) -> Input: 3 6 9 -> 3 + 6 = 9 (left: 9 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 7 = 35 (left: 4 9) -> Input: 3 6 9 -> 3 + 6 = 9 (left: 9 9) -> 9 - 9 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "7 9"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "4 5 16"
                }
            },
            "Step 4": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 16 - 4 = 12 (left: 5 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 16 - 4 = 12 (left: 5 12) -> 12 - 5 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 16 - 4 = 12 (left: 5 12) -> 12 - 5 = 7 (left: 7) -> 7 + 8 = 15 (left: 8 15)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "5 4"
                }
            },
            "Step 7": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 4 + 5 = 9 (left: 9 16) -> 9 * 16 = 144 (left: 144) -> 1 + 4 = 5 (left: 5 4) -> 5 + 4 = 9 (left: 4 9)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 4 + 5 = 9 (left: 9 16) -> 9 * 16 = 144 (left: 144) -> 1 + 4 = 5 (left: 5 4) -> 5 + 4 = 9 (left: 4 9) -> 4 + 9 = 13 (left: 13)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "There are no possible next steps with the number 25."
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "7 + 9 = 16 (left: 4 5 16)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 9"
                }
            },
            "Step 1": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25) -> 2 + 2.25 = 4.25",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25) -> 2 + 2.25 = 4.25 -> 2.25 * 2 = 4.5 (left: 4.5 = 4.25)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "4 5 16"
                }
            },
            "Step 4": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 16 - 5 = 11 (left: 4 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 16 - 5 = 11 (left: 4 11) -> 11 - 4 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 16 - 5 = 11 (left: 4 11) -> 11 - 4 = 7 (left: 7) -> 7 - 8 = -1 (left: -1 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "5 4"
                }
            },
            "Step 7": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 4 + 5 = 9 (left: 9 16) -> 9 * 16 = 144 (left: 144) -> 1 + 4 = 5 (left: 5 4) -> 12",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "1.7777777777777777 * 2 = 3.5555555555555554"
                }
            },
            "Step 8": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 4 + 5 = 9 (left: 9 16) -> 16 / 9 = 1.7777777777777777 (left: 1.7777777777777777) -> 1.7777777777777777 * 2 = 3.5555555555555554 -> 1.7777777777777777 + 2 = 3.7777777777777777 (left: 3.7777777777777777)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "There are no possible next steps with the number 25."
                }
            }
        },
        "Input": "4 5 7 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "911": {
        "puzzle": "1 2 8 13",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 8 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5) -> 3 + 5 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5) -> 3 + 5 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "5 2"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 * 13 = 312 (left: 312) -> 3 * 1 + 2 = 5 (left: 5 2) -> 5 * 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "3 8 13"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 / 3 = ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 / 3 =  -> 13 * 3 = 39 (left: 39)"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 2 = 11 (left: 1 8 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10) -> Input: 4 8 16",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10) -> Input: 4 8 16 -> 4 + 8 = 12 (left: 12 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "5 2"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 * 13 = 312 (left: 312) -> 3 * 1 + 2 = 5 (left: 5 2) -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "2 8 "
                }
            },
            "Step 5": {
                "Step": "13 / 1 = 13 (left: 2 8  -> 2 * 8 = 16 (left: 16)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 / 1 = 13 (left: 2 8  -> 2 * 8 = 16 (left: 16) -> No possible next steps, as there is only one number left."
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 2 = 11 (left: 1 8 ",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 * 13 = 312 (left: 312)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 * 13 = 312 (left: 312) -> 3 + 1 = 4 (left: 4 2)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 * 13 = 312 (left: 312)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 * 13 = 312 (left: 312) -> 31 * 2 = 62 (left: 2)"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 * 8 = 16 (left: 1 16 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 8 "
                }
            },
            "Step 1": {
                "Step": "13 - 2 = 11 (left: 1 8  -> 1 * 8 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 2 = 11 (left: 1 8  -> 1 * 8 = 8 (left: 8) -> 8 + 8 = 16 (left: 16)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 2 = 11 (left: 1 8  -> 1 * 8 = 8 (left: 8) -> 8 + 8 = 16 (left: 16) -> There are no possible next steps as the input is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "1 16 13"
                }
            },
            "Step 4": {
                "Step": "2 * 8 = 16 (left: 1 16 13) -> 16 - 1 = 15 (left: 15 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 * 8 = 16 (left: 1 16 13) -> 16 - 1 = 15 (left: 15 13) -> 15 + 13 = 28 (left: 28)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 8 = 16 (left: 1 16 13) -> 16 - 1 = 15 (left: 15 13) -> 15 + 13 = 28 (left: 28) -> 2 + 8 = 10 (left: 10)"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 8 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 * 13 = 312 (left: 312)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 * 13 = 312 (left: 312) -> 3 * 1 + 2 = 5 (left: 5 2)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "5 2"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 * 13 = 312 (left: 312) -> 3 * 1 + 2 = 5 (left: 5 2) -> 5 + 2 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "2 8 12"
                }
            },
            "Step 5": {
                "Step": "13 - 1 = 12 (left: 2 8 12) -> 12 + 2 = 14 (left: 4 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 1 = 12 (left: 2 8 12) -> 12 + 2 = 14 (left: 4 14) -> 14 / 4 = 3.5 (left: 3.5 14)"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "13 / 1 = 13 (left: 2 8 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 - 13 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 - 13 = 11 (left: 11) -> 11 + 2 = 13 (left: 13)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "3 8 13"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10) -> 8 - 10 = -2 (left: -2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10) -> 8 - 10 = -2 (left: -2) -> -2 + 8 = 6 (left: 6 8)"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 2 8 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 8 / 3 = 2.67 (left: 2.67 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 8 / 3 = 2.67 (left: 2.67 13) -> 2.67 + 13 = 15.67 (left: 15.67)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 8 / 3 = 2.67 (left: 2.67 13) -> 2.67 + 13 = 15.67 (left: 15.67) -> There are no possible next steps with the number 15.67.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((1 + 2) + 8) + 13 = 24"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "2 * 8 = 16 (left: 1 16 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 8 / 3 = 2.67 (left: 2.67 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 8 / 3 = 2.67 (left: 2.67 13) -> 13 - 2.67 = 10.33 (left: 10.33)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 8 / 3 = 2.67 (left: 2.67 13) -> 13 - 2.67 = 10.33 (left: 10.33) -> 10.33 * 8 = 82.64 (left: 8)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "1 16 13"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 8 / 3 = 2.67 (left: 2.67 8 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 8 / 3 = 2.67 (left: 2.67 8 13) -> 13 - 2.67 = 10.33 (left: 10.33 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 8 / 3 = 2.67 (left: 2.67 8 13) -> 13 - 2.67 = 10.33 (left: 10.33 8) -> 10.33 - 8 = 2.33 (left: 2.33 8)"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "2 * 8 = 16 (left: 1 16 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 8 "
                }
            },
            "Step 1": {
                "Step": "13 - 2 = 11 (left: 1 8  -> 8 - 1 = 7 (left: 7 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 2 = 11 (left: 1 8  -> 8 - 1 = 7 (left: 7 8) -> 8 + 7 = 15 (left: 7 15)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 2 = 11 (left: 1 8  -> 8 - 1 = 7 (left: 7 8) -> 8 + 7 = 15 (left: 7 15) -> 7 - 15 = -8 (left: -8)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "2 8 "
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "5 2"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 * 13 = 312 (left: 312) -> 3 * 1 + 2 = 5 (left: 5 2) -> 5 * 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "1 16 13"
                }
            },
            "Step 5": {
                "Step": "2 * 8 = 16 (left: 1 16 13) -> 13 + 1 = 14 (left: 14 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 8 = 16 (left: 1 16 13) -> 13 + 1 = 14 (left: 14 13) -> 14 + 13 = 27 (left: 27)"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "8 + 2 = 10 (left: 1 10 13)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 8 "
                }
            },
            "Step 1": {
                "Step": "13 - 2 = 11 (left: 1 8  -> 1 * 8 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 2 = 11 (left: 1 8  -> 1 * 8 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 2 = 11 (left: 1 8  -> 1 * 8 = 8 (left: 8) -> 8 + 8 = 16 -> 8 - 8 = 0 (left: 0 8 14)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 8 / 3 = 2.67 (left: 2.67 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 8 / 3 = 2.67 (left: 2.67 13) -> 13 - 2.67 = 10.33 (left: 10.33)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 8 / 3 = 2.67 (left: 2.67 13) -> 13 - 2.67 = 10.33 (left: 10.33) -> There are no possible next steps with the input of 10.33 as it is a single number and not a combination of numbers with operators."
            }
        },
        "Input": "1 2 8 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "912": {
        "puzzle": "4 6 6 9",
        "Agent 0": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 6 6 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 5 6 6) -> 6 / 5 = 1.2 (left: 1.2 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 5 6 6) -> 6 / 5 = 1.2 (left: 1.2 6) -> 1.2 - 6 = -4.8 (left: -4.8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 5 6 6) -> 6 / 5 = 1.2 (left: 1.2 6) -> 1.2 - 6 = -4.8 (left: -4.8) -> -4.8 + 2 = -2.8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "6 6 9"
                }
            },
            "Step 4": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 6 * 6 = 36 (left: 36 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 6 * 6 = 36 (left: 36 9) -> 9 * 36 = 324 (left: 324)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 6 * 6 = 36 (left: 36 9) -> 9 * 36 = 324 (left: 324) -> 4 + 2 = 6 (left: 3 6)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "3 6"
                }
            },
            "Step 7": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 6 * 6 = 36 (left: 36 9) -> 9 * 36 = 324 (left: 324) -> 4 + 2 = 6 (left: 3 6) -> 6 - 3 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "There are no possible next steps with the input 30."
                }
            },
            "Step 8": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 + 6 = 30 ( -> 6 + 24 = 30 (left: 30) -> There are no possible next steps with the input 30. -> There are no possible next steps with the input 30.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 6 = 24 (left: 24 6 9)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 / 4 = 1.5 (left"
                }
            },
            "Step 1": {
                "Step": "6 / 4 = 1.5 (left -> 6 * 4 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 4 = 1.5 (left -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (4 + 6) = 24",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 / 4 = 1.5 (left -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (4 + 6) = 24 -> Input: 3 3 7 8\nSteps:\n3 * 8 = 24 (left: 3 7 24)\n7 - 3 = 4 (left: 4 24)\n4 * 24 = 24 (left: 24)\nAnswer: (3 * 8) * (7 - 3) = 24",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "6 6 9"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "6 6 9"
                }
            },
            "Step 4": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 6 + 6 = 12 (left: 9 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 6 + 6 = 12 (left: 9 12) -> 12 - 9 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 6 + 6 = 12 (left: 9 12) -> 12 - 9 = 3 (left: 3) -> 3 * 3 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "Input: 3.6 8"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "3 6"
                }
            },
            "Step 7": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 6 * 6 = 36 (left: 36 9) -> 9 * 36 = 324 (left: 324) -> 4 + 2 = 6 (left: 3 6) -> 6 / 3 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "There are no possible next steps with the input 30."
                }
            },
            "Step 8": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 + 6 = 30 ( -> 6 + 24 = 30 (left: 30) -> There are no possible next steps with the input 30. -> None.",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "There are no possible next steps with the input 0."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 6 6 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 5 6 6) -> Possible",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 5 6 6) -> Possible -> It seems like the input you provided is not clear. Could you please provide a clearer input for me to generate possible next steps for you? Thank you.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 5 6 6) -> Possible -> It seems like the input you provided is not clear. Could you please provide a clearer input for me to generate possible next steps for you? Thank you. -> I'm sorry, I am unable to provide possible next steps without a clear input. Please provide a valid input for me to generate possible next steps. Thank you.",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 4": {
                "Step": "9 - 4 = 5 (left: 5 6 6) -> 6 / 6 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 4 = 5 (left: 5 6 6) -> 6 / 6 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 4 = 5 (left: 5 6 6) -> 6 / 6 = 1 (left: 1) -> 1 + 1 = 2 -> 1 * 1 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "I'm sorry, I am unable to provide possible next steps without a clear input. Please provide a valid input for me to generate possible next steps. Thank you."
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "3 6"
                }
            },
            "Step 7": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 6 * 6 = 36 (left: 36 9) -> 9 * 36 = 324 (left: 324) -> 4 + 2 = 6 (left: 3 6) -> 3 + 6 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "There are no possible next steps with the input of -2.5."
                }
            },
            "Step 8": {
                "Step": "6 / 4 = 1.5 (left -> 1.5 - 4 = -2.5 (left: -2.5) -> There are no possible next steps with the input of -2.5. -> There are no possible next steps with the input of -2.5. -> There are no possible next steps with the input of -2.5.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 / 4 = 1.5 (left",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "24 6 9"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 * 6 = 144 (left: 9 144)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 * 6 = 144 (left: 9 144) -> 9 + 144 = 153 (left: 153)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 * 6 = 144 (left: 9 144) -> 9 + 144 = 153 (left: 153) -> 15 / 3 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "5 6 6"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 4": {
                "Step": "9 - 4 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 4 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 4 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6) -> 6 - 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "There are no possible next steps with the input 30."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "3 6"
                }
            },
            "Step 7": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 6 * 6 = 36 (left: 36 9) -> 9 * 36 = 324 (left: 324) -> 4 + 2 = 6 (left: 3 6) -> 6 - 3 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "3 6"
                }
            },
            "Step 8": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 6 * 6 = 36 (left: 36 9) -> 9 * 36 = 324 (left: 324) -> 4 + 2 = 6 (left: 3 6) -> 6 / 3 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "Input: 3.6 8"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 / 4 = 1.5 (left: 1.5 6 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 5 6 6) -> 6 / 5 = 1.2 (left: 1.2 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 5 6 6) -> 6 / 5 = 1.2 (left: 1.2 6) -> 1.2 * 6 = 7.2 (left: 7.2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 5 6 6) -> 6 / 5 = 1.2 (left: 1.2 6) -> 1.2 * 6 = 7.2 (left: 7.2) -> 7 - 2 = 5.2 (left: 5.2)",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "6 / 4 = 1.5 (left"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "6 6 9"
                }
            },
            "Step 4": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 6 / 6 = 1 (left: 1 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 6 / 6 = 1 (left: 1 9) -> 9 - 1 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 6 / 6 = 1 (left: 1 9) -> 9 - 1 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "3 6"
                }
            },
            "Step 7": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 6 * 6 = 36 (left: 36 9) -> 9 * 36 = 324 (left: 324) -> 4 + 2 = 6 (left: 3 6) -> 3 * 6 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "Input: 3.6 8"
                }
            },
            "Step 8": {
                "Step": "9 - 4 = 5 (left: 5 6 6) -> 6 / 5 = 1.2 (left: 1.2 6) -> 1.2 * 6 = 7.2 (left: 7.2) -> Input: 3.6 8 -> 8 / 3.6 = 2.2222 (left: 2.2222)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "There are no possible next steps with the input 0."
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "9 - 6 = 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "24 6 9"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 + 6 = 30 (",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 + 6 = 30 ( -> 6 + 24 = 30 (left: 30)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 + 6 = 30 ( -> 6 + 24 = 30 (left: 30) -> There are no possible next steps with the input 30.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "6 / 4 = 1.5 (left"
                }
            },
            "Step 4": {
                "Step": "6 / 4 = 1.5 (left -> 4 / 6 = 0.6667 (left: 0.6667)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 / 4 = 1.5 (left -> 4 / 6 = 0.6667 (left: 0.6667) -> There are no possible next steps with the input 0.6667.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 4 = 1.5 (left -> 4 / 6 = 0.6667 (left: 0.6667) -> There are no possible next steps with the input 0.6667. -> There are no possible next steps with the input 0.6667.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "3 6"
                }
            },
            "Step 7": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 6 * 6 = 36 (left: 36 9) -> 9 * 36 = 324 (left: 324) -> 4 + 2 = 6 (left: 3 6) -> 3 * 6 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "Input: 3.6 8"
                }
            },
            "Step 8": {
                "Step": "9 - 4 = 5 (left: 5 6 6) -> 6 / 5 = 1.2 (left: 1.2 6) -> 1.2 * 6 = 7.2 (left: 7.2) -> Input: 3.6 8 -> 8 - 3.6 = 4.4 (left: 4.4)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "There are no possible next steps with the input of -2.5."
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "9 - 4 = 5 (left: 5 6 6)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 5 6 6) -> 6 / 5 = 1.2 (left: 1.2 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 5 6 6) -> 6 / 5 = 1.2 (left: 1.2 6) -> 1.2 * 6 = 7.2 (left: 7.2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 5 6 6) -> 6 / 5 = 1.2 (left: 1.2 6) -> 1.2 * 6 = 7.2 (left: 7.2) -> Input: 3.6 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "6 / 4 = 1.5 (left"
                }
            },
            "Step 4": {
                "Step": "6 / 4 = 1.5 (left -> 4 / 6 = 0.6667 (left: 0.6667 1.5)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 / 4 = 1.5 (left -> 4 / 6 = 0.6667 (left: 0.6667 1.5) -> 1.5 / 0.6667 = 2.25 (left: 2.25)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 4 = 1.5 (left -> 4 / 6 = 0.6667 (left: 0.6667 1.5) -> 1.5 / 0.6667 = 2.25 (left: 2.25) -> There are no possible next steps for the input 2.25.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "3 6"
                }
            },
            "Step 7": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 6 * 6 = 36 (left: 36 9) -> 9 * 36 = 324 (left: 324) -> 4 + 2 = 6 (left: 3 6) -> 6 - 3 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "There are no possible next steps with the input 0.6667."
                }
            },
            "Step 8": {
                "Step": "6 / 4 = 1.5 (left -> 4 / 6 = 0.6667 (left: 0.6667) -> There are no possible next steps with the input 0.6667. -> There are no possible next steps with the input 0.6667. -> There are no possible next steps with the input 0.6667.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 6 6 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "24 6 9"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 - 6 = 18 (left: 18 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 - 6 = 18 (left: 18 9) -> 18 + 9 = 27 (left: 27)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 - 6 = 18 (left: 18 9) -> 18 + 9 = 27 (left: 27) -> 27 * 2 = 54",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "6 / 4 = 1.5 (left"
                }
            },
            "Step 4": {
                "Step": "6 / 4 = 1.5 (left -> 1.5 - 4 = -2.5 (left: -2.5)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 / 4 = 1.5 (left -> 1.5 - 4 = -2.5 (left: -2.5) -> There are no possible next steps with the input of -2.5.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 4 = 1.5 (left -> 1.5 - 4 = -2.5 (left: -2.5) -> There are no possible next steps with the input of -2.5. -> There are no possible next steps with the input of -2.5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "3 6"
                }
            },
            "Step 7": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 6 * 6 = 36 (left: 36 9) -> 9 * 36 = 324 (left: 324) -> 4 + 2 = 6 (left: 3 6) -> 6 - 3 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "There are no possible next steps with the input 0.6667."
                }
            },
            "Step 8": {
                "Step": "6 / 4 = 1.5 (left -> 4 / 6 = 0.6667 (left: 0.6667) -> There are no possible next steps with the input 0.6667. -> There are no possible next steps with the input 0.6667. -> There are no possible next steps with the input 0.6667.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 6 6 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 5 6 6) -> 6 - 6 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 5 6 6) -> 6 - 6 = 0 (left: 0) -> There are no possible next steps as there are no numbers provided in the input.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 5 6 6) -> 6 - 6 = 0 (left: 0) -> There are no possible next steps as there are no numbers provided in the input. -> There are no possible next steps as there are no numbers provided in the input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "6 6 9"
                }
            },
            "Step 4": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 6 - 6 = 0 (left: 0 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 6 - 6 = 0 (left: 0 9) -> 0 * 9 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 6 - 6 = 0 (left: 0 9) -> 0 * 9 = 0 (left: 0) -> There are no possible next steps with the input 0.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "3 6"
                }
            },
            "Step 7": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 6 * 6 = 36 (left: 36 9) -> 9 * 36 = 324 (left: 324) -> 4 + 2 = 6 (left: 3 6) -> 6 - 3 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "There are no possible next steps with the input 30."
                }
            },
            "Step 8": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 + 6 = 30 ( -> 6 + 24 = 30 (left: 30) -> There are no possible next steps with the input 30. -> There are no possible next steps with the input 30.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "6 / 4 = 1.5 (left",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "24 6 9"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 6 = 4 (left: 4 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 6 = 4 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 6 = 4 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> Input: 3 12",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "6 6 9"
                }
            },
            "Step 4": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 9 - 6 = 3 (left: 6 3)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 9 - 6 = 3 (left: 6 3) -> 6 + 3 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 9 - 6 = 3 (left: 6 3) -> 6 + 3 = 9 (left: 9) -> 9 - 2 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "There are no possible next steps with the input 30."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "3 6"
                }
            },
            "Step 7": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 6 * 6 = 36 (left: 36 9) -> 9 * 36 = 324 (left: 324) -> 4 + 2 = 6 (left: 3 6) -> 3 + 6 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "There are no possible next steps for the input 2.25."
                }
            },
            "Step 8": {
                "Step": "6 / 4 = 1.5 (left -> 4 / 6 = 0.6667 (left: 0.6667 1.5) -> 1.5 / 0.6667 = 2.25 (left: 2.25) -> There are no possible next steps for the input 2.25. -> There are no possible next steps for the input 2.25.",
                "Pruning": null
            }
        },
        "Input": "4 6 6 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "913": {
        "puzzle": "1 4 4 8",
        "Agent 0": {
            "Step 0": {
                "Step": "8 - 4 = 4 (left: 1 4 4)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 8 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 8 12) -> 12 - 8 = 4 (left: 8 4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 8 12) -> 12 - 8 = 4 (left: 8 4) -> 8 + 4 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "1 4 4"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1 4 4"
                }
            },
            "Step 4": {
                "Step": "8 - 4 = 4 (left: 1 4 4) -> 1 + 4 = 5 (left: 4 5)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 - 4 = 4 (left: 1 4 4) -> 1 + 4 = 5 (left: 4 5) -> 4 / 5 = 0.8 (left: 0.8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 4 = 4 (left: 1 4 4) -> 1 + 4 = 5 (left: 4 5) -> 4 / 5 = 0.8 (left: 0.8) -> 0.8 * 2 = 1.6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "No possible next steps as there is no input given."
                }
            },
            "Step 7": {
                "Step": "8 - 4 = 4 (left: 1 4 4) -> 4 / 1 = 4 (left: 4 4) -> 4 - 4 = 0 (left: 0) -> No possible next steps as there is no input given. -> No possible next steps as there is no input given.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 - 4 = 4 (left: 1 4 4) -> 4 / 1 = 4 (left: 4 4) -> 4 - 4 = 0 (left: 0) -> No possible next steps as there is no input given. -> No possible next steps as there is no input given. -> No possible next steps as there is no input given.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "1 + 4 = 5 (left: 4 5 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "1 4 8"
                }
            },
            "Step 1": {
                "Step": "4 / 4 = 1 (left: 1 4 8) -> 8 - 4 = 4 (left: 1 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 4 = 1 (left: 1 4 8) -> 8 - 4 = 4 (left: 1 4) -> 4 - 1 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 / 4 = 1 (left: 1 4 8) -> 8 - 4 = 4 (left: 1 4) -> 4 - 1 = 3 (left: 3) -> 14",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "1 4 8"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "1 4 4"
                }
            },
            "Step 4": {
                "Step": "8 - 4 = 4 (left: 1 4 4) -> 4 / 1 = 4 (left: 4 4)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 - 4 = 4 (left: 1 4 4) -> 4 / 1 = 4 (left: 4 4) -> 4 - 4 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 4 = 4 (left: 1 4 4) -> 4 / 1 = 4 (left: 4 4) -> 4 - 4 = 0 (left: 0) -> No possible next steps as there is no input given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "None, as there is only one number left."
                }
            },
            "Step 7": {
                "Step": "8 - 4 = 4 (left: 1 4 4) -> 4 / 1 = 4 (left: 4 4) -> 4 * 4 = 16 (left: 16) -> None, as there is only one number left. -> There are no possible next steps as there is only one number left.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 - 4 = 4 (left: 1 4 4) -> 4 / 1 = 4 (left: 4 4) -> 4 * 4 = 16 (left: 16) -> None, as there is only one number left. -> There are no possible next steps as there is only one number left. -> No possible next steps.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 - 1 = 3 (left: 3 4 ",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 8 32)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 8 32) -> 32 - 8 = 24 (left: 8 24)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 8 32) -> 32 - 8 = 24 (left: 8 24) -> 24 - 8 = 16 (left: 8 16)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1 4 4"
                }
            },
            "Step 4": {
                "Step": "8 - 4 = 4 (left: 1 4 4) -> 4 - 1 = 3 (left: 3 4)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 - 4 = 4 (left: 1 4 4) -> 4 - 1 = 3 (left: 3 4) -> 4 / 3 = 1.33 (left: 1.33)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 4 = 4 (left: 1 4 4) -> 4 - 1 = 3 (left: 3 4) -> 4 / 3 = 1.33 (left: 1.33) -> There is only one number provided, so there are no possible next steps to perform any operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "No possible next steps as there are no numbers inputted."
                }
            },
            "Step 7": {
                "Step": "8 - 4 = 4 (left: 1 4 4) -> 3 + 6 = 9 (left: 9 9) -> 9 - 9 = 0 (left: 0) -> No possible next steps as there are no numbers inputted. -> Please input numbers to find possible next steps.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 - 4 = 4 (left: 1 4 4) -> 3 + 6 = 9 (left: 9 9) -> 9 - 9 = 0 (left: 0) -> No possible next steps as there are no numbers inputted. -> Please input numbers to find possible next steps. -> Please enter numbers to continue the calculation.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 / 1 = 4 (left: 4 4 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 4 8"
                }
            },
            "Step 1": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8) -> 8 / 1 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8) -> 8 / 1 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1 4 4"
                }
            },
            "Step 4": {
                "Step": "8 - 4 = 4 (left: 1 4 4) -> 1 + 4 = 5 (left: 4 5)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 - 4 = 4 (left: 1 4 4) -> 1 + 4 = 5 (left: 4 5) -> 4 + 5 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 4 = 4 (left: 1 4 4) -> 1 + 4 = 5 (left: 4 5) -> 4 + 5 = 9 (left: 9) -> There are no possible next steps with just the number 9.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "There are no possible next steps with the input of 20."
                }
            },
            "Step 7": {
                "Step": "8 - 4 = 4 (left: 1 4 4) -> 1 + 4 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 20) -> There are no possible next steps with the input of 20. -> There are no possible next steps with the input of 20.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 - 4 = 4 (left: 1 4 4) -> 1 + 4 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 20) -> There are no possible next steps with the input of 20. -> There are no possible next steps with the input of 20. -> There are no possible next steps with the input of 20.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "8 / 4 = 2 (left: 2 4 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 5 8"
                }
            },
            "Step 1": {
                "Step": "1 + 4 = 5 (left: 4 5 8) -> 5 - 4 = 1 (left: 1 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 4 = 5 (left: 4 5 8) -> 5 - 4 = 1 (left: 1 8) -> 1 + 8 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 4 = 5 (left: 4 5 8) -> 5 - 4 = 1 (left: 1 8) -> 1 + 8 = 9 (left: 9) -> 9 * 2 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "1 4 4"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1 4 4"
                }
            },
            "Step 4": {
                "Step": "8 - 4 = 4 (left: 1 4 4) -> 1 * 4 = 4 (left: 4 4)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 - 4 = 4 (left: 1 4 4) -> 1 * 4 = 4 (left: 4 4) -> 4 / 4 = 1 (left: 1) ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 4 = 4 (left: 1 4 4) -> 1 * 4 = 4 (left: 4 4) -> 4 / 4 = 1 (left: 1)  -> 1 + 1 = 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "No possible next steps as there is no input given."
                }
            },
            "Step 7": {
                "Step": "8 - 4 = 4 (left: 1 4 4) -> 4 / 1 = 4 (left: 4 4) -> 4 - 4 = 0 (left: 0) -> No possible next steps as there is no input given. -> No possible next steps as there is no input given.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 - 4 = 4 (left: 1 4 4) -> 4 / 1 = 4 (left: 4 4) -> 4 - 4 = 0 (left: 0) -> No possible next steps as there is no input given. -> No possible next steps as there is no input given. -> No possible next steps as there is no input given.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "4 / 1 = 4 (left: 4 4 8)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8) -> Input: 2 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "1 4 4"
                }
            },
            "Step 4": {
                "Step": "8 - 4 = 4 (left: 1 4 4) -> 3 + 6 = 9 (left: 9 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 - 4 = 4 (left: 1 4 4) -> 3 + 6 = 9 (left: 9 9) -> 9 - 9 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 4 = 4 (left: 1 4 4) -> 3 + 6 = 9 (left: 9 9) -> 9 - 9 = 0 (left: 0) -> No possible next steps as there are no numbers inputted.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "None, as there is only one number left."
                }
            },
            "Step 7": {
                "Step": "8 - 4 = 4 (left: 1 4 4) -> 4 / 1 = 4 (left: 4 4) -> 4 * 4 = 16 (left: 16) -> None, as there is only one number left. -> There are no possible next steps as there is only one number left.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 - 4 = 4 (left: 1 4 4) -> 4 / 1 = 4 (left: 4 4) -> 4 * 4 = 16 (left: 16) -> None, as there is only one number left. -> There are no possible next steps as there is only one number left. -> No possible next steps.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "8 - 4 = 4 (left: 1 4 4)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 4 8"
                }
            },
            "Step 1": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 + 4 = 8 (left: 8 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 + 4 = 8 (left: 8 8) -> 8 / 8 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 + 4 = 8 (left: 8 8) -> 8 / 8 = 1 (left: 1) -> There are no possible next steps with just one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "1 4 4"
                }
            },
            "Step 4": {
                "Step": "8 - 4 = 4 (left: 1 4 4) -> 4 + 1 = 5 (left: 4 5)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 - 4 = 4 (left: 1 4 4) -> 4 + 1 = 5 (left: 4 5) -> 10 + 3 = 13 (left: 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 4 = 4 (left: 1 4 4) -> 4 + 1 = 5 (left: 4 5) -> 10 + 3 = 13 (left: 3) -> 3 - 8 is not a valid operation.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "3 - 8 is not a valid operation."
                }
            },
            "Step 7": {
                "Step": "8 - 4 = 4 (left: 1 4 4) -> 4 + 1 = 5 (left: 4 5) -> 10 + 3 = 13 (left: 3) -> 3 - 8 is not a valid operation. -> 3 + 8 = 11 (left: -8 11)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 - 4 = 4 (left: 1 4 4) -> 4 + 1 = 5 (left: 4 5) -> 10 + 3 = 13 (left: 3) -> 3 - 8 is not a valid operation. -> 3 + 8 = 11 (left: -8 11) -> -8 * 11 = -88 (left: -88)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "There are no possible next steps with the input 96."
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "4 / 1 = 4 (left: 4 4 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 4 4"
                }
            },
            "Step 1": {
                "Step": "8 - 4 = 4 (left: 1 4 4) -> 1 + 4 = 5 (left: 4 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 4 = 4 (left: 1 4 4) -> 1 + 4 = 5 (left: 4 5) -> 4 + 5 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 4 = 4 (left: 1 4 4) -> 1 + 4 = 5 (left: 4 5) -> 4 + 5 = 9 (left: 9) -> 8 - 9 = -1 (left: 9)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "4 4 8"
                },
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "1 4 4"
                }
            },
            "Step 4": {
                "Step": "8 - 4 = 4 (left: 1 4 4) -> 1 + 4 = 5 (left: 4 5)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 - 4 = 4 (left: 1 4 4) -> 1 + 4 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 20)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 4 = 4 (left: 1 4 4) -> 1 + 4 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 20) -> There are no possible next steps with the input of 20.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "3 - 8 is not a valid operation."
                }
            },
            "Step 7": {
                "Step": "8 - 4 = 4 (left: 1 4 4) -> 4 + 1 = 5 (left: 4 5) -> 10 + 3 = 13 (left: 3) -> 3 - 8 is not a valid operation. -> 3 * 8 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "There are no possible next steps with the input 96."
                }
            },
            "Step 8": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12) -> 8 * 12 = 96 (left: 96) -> There are no possible next steps with the input 96. -> None",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "There are no possible next steps with the input 96."
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 4 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12) -> 8 * 12 = 96 (left: 96)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12) -> 8 * 12 = 96 (left: 96) -> There are no possible next steps with the input 96.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1 4 4"
                }
            },
            "Step 4": {
                "Step": "8 - 4 = 4 (left: 1 4 4) -> 4 / 1 = 4 (left: 4 4)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 - 4 = 4 (left: 1 4 4) -> 4 / 1 = 4 (left: 4 4) -> 4 * 4 = 16 (left: 16)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 4 = 4 (left: 1 4 4) -> 4 / 1 = 4 (left: 4 4) -> 4 * 4 = 16 (left: 16) -> None, as there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "3 - 8 is not a valid operation."
                }
            },
            "Step 7": {
                "Step": "8 - 4 = 4 (left: 1 4 4) -> 4 + 1 = 5 (left: 4 5) -> 10 + 3 = 13 (left: 3) -> 3 - 8 is not a valid operation. -> 3 + 8 = 11 (left: -8 11)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 - 4 = 4 (left: 1 4 4) -> 4 + 1 = 5 (left: 4 5) -> 10 + 3 = 13 (left: 3) -> 3 - 8 is not a valid operation. -> 3 + 8 = 11 (left: -8 11) -> -8 - 11 = -19 (left: -19)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "There is only one number provided, so there are no possible next steps to perform any operations."
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "4 + 4 = 8 (left: 4 8 8)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 4 8"
                }
            },
            "Step 1": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 * 4 = 16 (left: 16 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 * 4 = 16 (left: 16 8) -> 16 / 8 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 * 4 = 16 (left: 16 8) -> 16 / 8 = 2 (left: 2) -> End of input. No more possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "1 4 4"
                }
            },
            "Step 4": {
                "Step": "8 - 4 = 4 (left: 1 4 4) -> 4 - 1 = 3 (left: 3 4)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 - 4 = 4 (left: 1 4 4) -> 4 - 1 = 3 (left: 3 4) -> 3 + 4 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 4 = 4 (left: 1 4 4) -> 4 - 1 = 3 (left: 3 4) -> 3 + 4 = 7 (left: 7) -> 7 / 2 = 3.5 (left: 3.5)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "There are no possible next steps with the input 96."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "No possible next steps as there are no numbers inputted."
                }
            },
            "Step 7": {
                "Step": "8 - 4 = 4 (left: 1 4 4) -> 3 + 6 = 9 (left: 9 9) -> 9 - 9 = 0 (left: 0) -> No possible next steps as there are no numbers inputted. -> No possible next steps as there are no numbers inputted.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 - 4 = 4 (left: 1 4 4) -> 3 + 6 = 9 (left: 9 9) -> 9 - 9 = 0 (left: 0) -> No possible next steps as there are no numbers inputted. -> No possible next steps as there are no numbers inputted. -> No possible next steps as there are no numbers inputted.",
                "Pruning": null
            }
        },
        "Input": "1 4 4 8",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "914": {
        "puzzle": "1 5 10 11",
        "Agent 0": {
            "Step 0": {
                "Step": "11 - 5 = 6 (left: 1 6 ",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "5 11 11"
                }
            },
            "Step 1": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 / 5 = 2.2 (left: 2.2 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 / 5 = 2.2 (left: 2.2 11) -> Possible next steps:",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 / 5 = 2.2 (left: 2.2 11) -> Possible next steps: -> There are no possible next steps with the current input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "5 10"
                }
            },
            "Step 4": {
                "Step": "11 - 1 = 10 (left: 5 10) -> 5 * 10 = 50 (left: 50)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 1 = 10 (left: 5 10) -> 5 * 10 = 50 (left: 50) -> There are no possible next steps with only one number provided.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 1 = 10 (left: 5 10) -> 5 * 10 = 50 (left: 50) -> There are no possible next steps with only one number provided. -> Please provide at least two numbers to find possible next steps.",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "8 40"
                }
            },
            "Step 7": {
                "Step": "11 - 1 = 10 (left: 5 10) -> 10 / 5 = 2 (left: 2 10) -> 2 * 10 = 20 (left: 20) -> 20 * 2 = 40 (left: 8 40) -> 40 - 32 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "27 + 2 = 29"
                }
            },
            "Step 8": {
                "Step": "1 + 5 = 6 (left: 6 10 11) -> 6 + 10 = 16 (left: 11 16) -> 11 + 16 = 27 (left: 27) -> 27 + 2 = 29 -> 27 / 2 = 13.5 (left: 13.5)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "Please provide at least two numbers to find possible next steps."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "1 + 5 = 6 (left: 6 10 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "5 11 11"
                }
            },
            "Step 1": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 - 5 = 6 (left: 6 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 - 5 = 6 (left: 6 11) -> 6 - 11 = -5 (left: -5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 - 5 = 6 (left: 6 11) -> 6 - 11 = -5 (left: -5) -> There are no possible next steps for the input -5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "5 10 11"
                }
            },
            "Step 4": {
                "Step": "1 * 5 = 5 (left: 5 10 11) -> 11 / 5 = 2.2 (left:",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 * 5 = 5 (left: 5 10 11) -> 11 / 5 = 2.2 (left: -> 3 + 4 = 7 (left: 7 5 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 * 5 = 5 (left: 5 10 11) -> 11 / 5 = 2.2 (left: -> 3 + 4 = 7 (left: 7 5 7) -> 7 / 5 = 1.4 (left: 1.4 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "8 40"
                }
            },
            "Step 7": {
                "Step": "11 - 1 = 10 (left: 5 10) -> 10 / 5 = 2 (left: 2 10) -> 2 * 10 = 20 (left: 20) -> 20 * 2 = 40 (left: 8 40) -> 8 + 40 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "27 + 2 = 29"
                }
            },
            "Step 8": {
                "Step": "1 + 5 = 6 (left: 6 10 11) -> 6 + 10 = 16 (left: 11 16) -> 11 + 16 = 27 (left: 27) -> 27 + 2 = 29 -> 29 / 2 = 14.5 (left: 14.5)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "66 + 2 = 68"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "11 - 1 = 10 (left: 5 10 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6) -> 6 / 8 = 0.75 (left: 0.75)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6) -> 6 / 8 = 0.75 (left: 0.75) -> 0.75 + 0.75 = 1.5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "5 10"
                }
            },
            "Step 4": {
                "Step": "11 - 1 = 10 (left: 5 10) -> 5 + 10 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 1 = 10 (left: 5 10) -> 5 + 10 = 15 (left: 15) -> 15 + 8 = 23 (left: 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 1 = 10 (left: 5 10) -> 5 + 10 = 15 (left: 15) -> 15 + 8 = 23 (left: 8) -> 8 * 8 = 64",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "8 40"
                }
            },
            "Step 7": {
                "Step": "11 - 1 = 10 (left: 5 10) -> 10 / 5 = 2 (left: 2 10) -> 2 * 10 = 20 (left: 20) -> 20 * 2 = 40 (left: 8 40) -> 40 - 8 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "0.75 + 0.75 = 1.5"
                }
            },
            "Step 8": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6) -> 6 / 8 = 0.75 (left: 0.75) -> 0.75 + 0.75 = 1.5 -> 0.75 + 0.5625 = 1.3125 (left: 0.75 1.3125)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 + 1 = 11 (left: 5 11 11)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "5 11 11"
                }
            },
            "Step 1": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 - 5 = 6 (left: 6 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 - 5 = 6 (left: 6 11) -> 6 * 11 = 66 (left: 66)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 - 5 = 6 (left: 6 11) -> 6 * 11 = 66 (left: 66) -> 66 + 2 = 68",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "5 10"
                }
            },
            "Step 4": {
                "Step": "11 - 1 = 10 (left: 5 10) -> 5 + 10 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 1 = 10 (left: 5 10) -> 5 + 10 = 15 (left: 15) -> 15 * 2 = 30 (left: 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 1 = 10 (left: 5 10) -> 5 + 10 = 15 (left: 15) -> 15 * 2 = 30 (left: 8) -> 8 * 8 = 64 (left: 64) ",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "27 + 2 = 29"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "8 40"
                }
            },
            "Step 7": {
                "Step": "11 - 1 = 10 (left: 5 10) -> 10 / 5 = 2 (left: 2 10) -> 2 * 10 = 20 (left: 20) -> 20 * 2 = 40 (left: 8 40) -> 8 * 5 = 40 (left: 40)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "0.75 + 0.75 = 1.5"
                }
            },
            "Step 8": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6) -> 6 / 8 = 0.75 (left: 0.75) -> 0.75 + 0.75 = 1.5 -> 0.75 / 0.75 = 1 (left: 1 0.75)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 * 10 = 50 (left: 1 50 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "5 10 11"
                }
            },
            "Step 1": {
                "Step": "1 * 5 = 5 (left: 5 10 11) -> 5 + 10 = 15 (left: 11 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 * 5 = 5 (left: 5 10 11) -> 5 + 10 = 15 (left: 11 15) -> 11 - 15 = -4 (left: -4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 * 5 = 5 (left: 5 10 11) -> 5 + 10 = 15 (left: 11 15) -> 11 - 15 = -4 (left: -4) -> There are no possible next steps for the input -4.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "5 10"
                }
            },
            "Step 4": {
                "Step": "11 - 1 = 10 (left: 5 10) -> 10 / 5 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 1 = 10 (left: 5 10) -> 10 / 5 = 2 (left: 2) -> No further calculation is possible with just one number provided.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 1 = 10 (left: 5 10) -> 10 / 5 = 2 (left: 2) -> No further calculation is possible with just one number provided. -> Provide more numbers to continue calculations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "8 40"
                }
            },
            "Step 7": {
                "Step": "11 - 1 = 10 (left: 5 10) -> 10 / 5 = 2 (left: 2 10) -> 2 * 10 = 20 (left: 20) -> 20 * 2 = 40 (left: 8 40) -> 8 + 40 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "8 40"
                }
            },
            "Step 8": {
                "Step": "11 - 1 = 10 (left: 5 10) -> 10 / 5 = 2 (left: 2 10) -> 2 * 10 = 20 (left: 20) -> 20 * 2 = 40 (left: 8 40) -> 40 / 8 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "27 + 2 = 29"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "11 - 1 = 10 (left: 10 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "5 10 11"
                }
            },
            "Step 1": {
                "Step": "1 * 5 = 5 (left: 5 10 11) -> 10 - 5 = 5 (left: 5 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 * 5 = 5 (left: 5 10 11) -> 10 - 5 = 5 (left: 5 11) -> Input: 3 9 27",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 * 5 = 5 (left: 5 10 11) -> 10 - 5 = 5 (left: 5 11) -> Input: 3 9 27 -> 3 * 9 = 27 (left: 27 27)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "5 10"
                }
            },
            "Step 4": {
                "Step": "11 - 1 = 10 (left: 5 10) -> 10 / 5 = 2 (left: 2 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 1 = 10 (left: 5 10) -> 10 / 5 = 2 (left: 2 10) -> 2 * 10 = 20 (left: 20)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 1 = 10 (left: 5 10) -> 10 / 5 = 2 (left: 2 10) -> 2 * 10 = 20 (left: 20) -> 20 * 2 = 40 (left: 8 40)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "8 40"
                }
            },
            "Step 7": {
                "Step": "11 - 1 = 10 (left: 5 10) -> 10 / 5 = 2 (left: 2 10) -> 2 * 10 = 20 (left: 20) -> 20 * 2 = 40 (left: 8 40) -> 8 + 40 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "There are no possible next steps for the input -5."
                }
            },
            "Step 8": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 - 5 = 6 (left: 6 11) -> 6 - 11 = -5 (left: -5) -> There are no possible next steps for the input -5. -> There are no possible next steps for the input -5.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "10 + 1 = 11 (left: 5 11 11)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 10 11"
                }
            },
            "Step 1": {
                "Step": "1 + 5 = 6 (left: 6 10 11) -> 6 + 10 = 16 (left: 11 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 5 = 6 (left: 6 10 11) -> 6 + 10 = 16 (left: 11 16) -> 11 + 16 = 27 (left: 27)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 5 = 6 (left: 6 10 11) -> 6 + 10 = 16 (left: 11 16) -> 11 + 16 = 27 (left: 27) -> 27 + 2 = 29",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "5 10"
                }
            },
            "Step 4": {
                "Step": "11 - 1 = 10 (left: 5 10) -> 5 * 10 = 50 (left: 50)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 1 = 10 (left: 5 10) -> 5 * 10 = 50 (left: 50) -> None - there is only one number provided.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 1 = 10 (left: 5 10) -> 5 * 10 = 50 (left: 50) -> None - there is only one number provided. -> There are no possible next steps because there is only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "8 40"
                }
            },
            "Step 7": {
                "Step": "11 - 1 = 10 (left: 5 10) -> 10 / 5 = 2 (left: 2 10) -> 2 * 10 = 20 (left: 20) -> 20 * 2 = 40 (left: 8 40) -> 40 - 8 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "There are no possible next steps for the input -4."
                }
            },
            "Step 8": {
                "Step": "1 * 5 = 5 (left: 5 10 11) -> 5 + 10 = 15 (left: 11 15) -> 11 - 15 = -4 (left: -4) -> There are no possible next steps for the input -4. -> There are no possible next steps for the input -4.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "11 - 1 = 10 (left: 5 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6) -> 6 - 8 = -2 (left: -2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6) -> 6 - 8 = -2 (left: -2) -> -2 * 8 = -16 (left: -16)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "5 10"
                },
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "5 10"
                }
            },
            "Step 4": {
                "Step": "11 - 1 = 10 (left: 5 10) -> 5 + 10 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 1 = 10 (left: 5 10) -> 5 + 10 = 15 (left: 15) -> There are no possible next steps with the input 15.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 1 = 10 (left: 5 10) -> 5 + 10 = 15 (left: 15) -> There are no possible next steps with the input 15. -> There are no possible next steps with the input 15.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "8 40"
                }
            },
            "Step 7": {
                "Step": "11 - 1 = 10 (left: 5 10) -> 10 / 5 = 2 (left: 2 10) -> 2 * 10 = 20 (left: 20) -> 20 * 2 = 40 (left: 8 40) -> 8 * 5 = 40 (left: 40)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "There are no possible next steps with the input 15."
                }
            },
            "Step 8": {
                "Step": "11 - 1 = 10 (left: 5 10) -> 5 + 10 = 15 (left: 15) -> There are no possible next steps with the input 15. -> There are no possible next steps with the input 15. -> There are no possible next steps with the input 15.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "1 * 5 = 5 (left: 5 10 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "5 11 11"
                }
            },
            "Step 1": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 - 5 = 6 (left: 6 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 - 5 = 6 (left: 6 11) -> 6 / 11 = 0.5454545454545454 (left: 0.5454545454545454)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 - 5 = 6 (left: 6 11) -> 6 / 11 = 0.5454545454545454 (left: 0.5454545454545454) -> 0.5454545454545454 + 2 = 2.5454545454545454",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "5 10"
                }
            },
            "Step 4": {
                "Step": "11 - 1 = 10 (left: 5 10) -> 10 / 5 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 1 = 10 (left: 5 10) -> 10 / 5 = 2 (left: 2) -> No possible next steps with only one number provided.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 1 = 10 (left: 5 10) -> 10 / 5 = 2 (left: 2) -> No possible next steps with only one number provided. -> Provide more than one number to perform operations on.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "8 40"
                }
            },
            "Step 7": {
                "Step": "11 - 1 = 10 (left: 5 10) -> 10 / 5 = 2 (left: 2 10) -> 2 * 10 = 20 (left: 20) -> 20 * 2 = 40 (left: 8 40) -> 40 / 8 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "8 40"
                }
            },
            "Step 8": {
                "Step": "11 - 1 = 10 (left: 5 10) -> 10 / 5 = 2 (left: 2 10) -> 2 * 10 = 20 (left: 20) -> 20 * 2 = 40 (left: 8 40) -> 8 * 5 = 40 (left: 40)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "0.5454545454545454 + 2 = 2.5454545454545454"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "1 * 5 = 5 (left: 5 10 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "5 11 11"
                }
            },
            "Step 1": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 * 5 = 55 (left: 11 55)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 * 5 = 55 (left: 11 55) -> 9 / 3 = 3 (left: 3 27)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 * 5 = 55 (left: 11 55) -> 9 / 3 = 3 (left: 3 27) -> 3 * 27 = 81 (left: 81)",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "5 10 11"
                },
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "5 10"
                }
            },
            "Step 4": {
                "Step": "11 - 1 = 10 (left: 5 10) -> 5 + 10 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 1 = 10 (left: 5 10) -> 5 + 10 = 15 (left: 15) -> 15 / 2 = 7.5 (left: 7.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 1 = 10 (left: 5 10) -> 5 + 10 = 15 (left: 15) -> 15 / 2 = 7.5 (left: 7.5) -> 7.5 / 8 = 0.9375 (left: 0.9375)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "27 + 2 = 29"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "8 40"
                }
            },
            "Step 7": {
                "Step": "11 - 1 = 10 (left: 5 10) -> 10 / 5 = 2 (left: 2 10) -> 2 * 10 = 20 (left: 20) -> 20 * 2 = 40 (left: 8 40) -> 40 / 40 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "There are no possible next steps for the input -5."
                }
            },
            "Step 8": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 - 5 = 6 (left: 6 11) -> 6 - 11 = -5 (left: -5) -> There are no possible next steps for the input -5. -> There are no possible next steps for the input -5.",
                "Pruning": null
            }
        },
        "Input": "1 5 10 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "915": {
        "puzzle": "3 4 6 11",
        "Agent 0": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 3 10 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "11 - 4 = 7 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 4 = 7 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9) -> 7 / 9 = 0.7777777777777778 (left: 0.7777777777777778)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 4 = 7 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9) -> 7 / 9 = 0.7777777777777778 (left: 0.7777777777777778) -> 0.7777777777777778 * 2 = 1.555555555555556",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "5 0 4"
                }
            },
            "Step 4": {
                "Step": "3 * 4 = 12 (left: 6 11 12) -> 11 + 6 = 17 (left: 12 17) -> 12 * 17 = 204 (left: 204) -> 20 / 4 = 5 (left: 5 0 4) -> 5 / 0 = undefined (cannot divide by zero)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 4 = 12 (left: 6 11 12) -> 11 + 6 = 17 (left: 12 17) -> 12 * 17 = 204 (left: 204) -> 20 / 4 = 5 (left: 5 0 4) -> 5 / 0 = undefined (cannot divide by zero) -> 5 + 0 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "3 10 11"
                }
            },
            "Step 6": {
                "Step": "4 + 6 = 10 (left: 3 10 11) -> 11 - 3 = 8 (left: 8 10)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "8 10"
                }
            },
            "Step 7": {
                "Step": "4 + 6 = 10 (left: 3 10 11) -> 11 - 3 = 8 (left: 8 10) -> 10 / 8 = 1.25 (left: 1.25)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 6 = 10 (left: 3 10 11) -> 11 - 3 = 8 (left: 8 10) -> 10 / 8 = 1.25 (left: 1.25) -> There are no possible next steps for the input 1.25 as it is a single number.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 6 7 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "11 - 4 = 7 (left: 3 6 7) -> Possible",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 4 = 7 (left: 3 6 7) -> Possible -> It seems like the input is missing. Could you please provide the input so that I can generate the possible next steps for you?",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 4 = 7 (left: 3 6 7) -> Possible -> It seems like the input is missing. Could you please provide the input so that I can generate the possible next steps for you? -> It seems like the input is missing. Could you please provide the input so that I can generate the possible next steps for you?",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "5 0 4"
                }
            },
            "Step 4": {
                "Step": "3 * 4 = 12 (left: 6 11 12) -> 11 + 6 = 17 (left: 12 17) -> 12 * 17 = 204 (left: 204) -> 20 / 4 = 5 (left: 5 0 4) -> 4 - 0 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "5 0 4"
                }
            },
            "Step 5": {
                "Step": "3 * 4 = 12 (left: 6 11 12) -> 11 + 6 = 17 (left: 12 17) -> 12 * 17 = 204 (left: 204) -> 20 / 4 = 5 (left: 5 0 4) -> 0 / 4 = 0 (left",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 4 = 12 (left: 6 11 12) -> 11 + 6 = 17 (left: 12 17) -> 12 * 17 = 204 (left: 204) -> 20 / 4 = 5 (left: 5 0 4) -> 0 / 4 = 0 (left -> 12 + 3 = 15 (left: 5 6 15",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "8 10"
                }
            },
            "Step 7": {
                "Step": "4 + 6 = 10 (left: 3 10 11) -> 11 - 3 = 8 (left: 8 10) -> 8 / 10 = 0.8 (left: 0.8)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 6 = 10 (left: 3 10 11) -> 11 - 3 = 8 (left: 8 10) -> 8 / 10 = 0.8 (left: 0.8) -> There is only one possible next step for the input 0.8:",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "11 - 6 = 5 (left: 3 4 5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 11 12"
                }
            },
            "Step 1": {
                "Step": "3 * 4 = 12 (left: 6 11 12) -> 11 + 6 = 17 (left: 12 17)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 4 = 12 (left: 6 11 12) -> 11 + 6 = 17 (left: 12 17) -> 12 * 17 = 204 (left: 204)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 4 = 12 (left: 6 11 12) -> 11 + 6 = 17 (left: 12 17) -> 12 * 17 = 204 (left: 204) -> 20 / 4 = 5 (left: 5 0 4)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "6 7 11"
                }
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 7 / 6 = 1.17 (left: 1.17 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 7 / 6 = 1.17 (left: 1.17 11) -> 1.17 * 11 = 12.87 (left: 12.87)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 7 / 6 = 1.17 (left: 1.17 11) -> 1.17 * 11 = 12.87 (left: 12.87) -> 12 * 87 = 1044 (left: 1044) ",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "No possible next steps."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "8 10"
                }
            },
            "Step 7": {
                "Step": "4 + 6 = 10 (left: 3 10 11) -> 11 - 3 = 8 (left: 8 10) -> 8 * 10 = 80 (left: 80)  ",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 6 = 10 (left: 3 10 11) -> 11 - 3 = 8 (left: 8 10) -> 8 * 10 = 80 (left: 80)   -> There are no possible next steps for the input 80.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 + 4 = 10 (left: 3 10 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "11 - 4 = 7 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 4 = 7 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 4 = 7 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (11 - 4) - (3 + 6) = 24",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "3 10 "
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "5 0 4"
                }
            },
            "Step 4": {
                "Step": "3 * 4 = 12 (left: 6 11 12) -> 11 + 6 = 17 (left: 12 17) -> 12 * 17 = 204 (left: 204) -> 20 / 4 = 5 (left: 5 0 4) -> 0 - 4 = -4 (left: 4)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "6 7 11"
                }
            },
            "Step 5": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 6 * 7 = 42 (left: 11 42)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 6 * 7 = 42 (left: 11 42) -> 11 + 42 = 53 (left: 53)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "8 10"
                }
            },
            "Step 7": {
                "Step": "4 + 6 = 10 (left: 3 10 11) -> 11 - 3 = 8 (left: 8 10) -> 8 / 10 = 0.8 (left: 0.8)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 6 = 10 (left: 3 10 11) -> 11 - 3 = 8 (left: 8 10) -> 8 / 10 = 0.8 (left: 0.8) -> 0.8 + 2 = 2.8 (left: 2.8)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "0.7777777777777778 * 2 = 1.555555555555556"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 * 4 = 12 (left: 6 11 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "11 - 4 = 7 (left: 3 6 7) -> 6 / 3 = 2 (left: 2 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 4 = 7 (left: 3 6 7) -> 6 / 3 = 2 (left: 2 7) -> 2 + 7 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 4 = 7 (left: 3 6 7) -> 6 / 3 = 2 (left: 2 7) -> 2 + 7 = 9 (left: 9) -> 7 + 2 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "6 7 11"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "6 7 11"
                }
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 6 + 7 = 13 (left: 11 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 6 + 7 = 13 (left: 11 13) -> 11 / 13 = 0.8461538461538461 (left: 0.8461538461538461)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 6 + 7 = 13 (left: 11 13) -> 11 / 13 = 0.8461538461538461 (left: 0.8461538461538461) -> There are no possible next steps for the input 0.8461538461538461.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "8 10"
                }
            },
            "Step 7": {
                "Step": "4 + 6 = 10 (left: 3 10 11) -> 11 - 3 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 6 = 10 (left: 3 10 11) -> 11 - 3 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> There are no possible next steps with the number 18.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 6 7 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "11 - 4 = 7 (left: 3 6 7) -> 6 / 3 = 2 (left: 2 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 4 = 7 (left: 3 6 7) -> 6 / 3 = 2 (left: 2 7) -> 2 * 7 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 4 = 7 (left: 3 6 7) -> 6 / 3 = 2 (left: 2 7) -> 2 * 7 = 14 (left: 14) -> There are no possible next steps with just the number 14 as input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "6 7 11"
                }
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 11 / ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 11 /  -> 11 / 8 = 1.375 (left: 1.375)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 11 /  -> 11 / 8 = 1.375 (left: 1.375) -> 1.375 * 2 = 2.75",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "8 10"
                }
            },
            "Step 7": {
                "Step": "4 + 6 = 10 (left: 3 10 11) -> 11 - 3 = 8 (left: 8 10) -> 10 - 8 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 6 = 10 (left: 3 10 11) -> 11 - 3 = 8 (left: 8 10) -> 10 - 8 = 2 (left: 2) -> 2 * 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "No possible next steps."
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 3 10 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 7 11"
                }
            },
            "Step 1": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 4 = 7 (left: 6 7 11) ->  -> There are no possible next steps since there are no more integers provided.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 + 4 = 7 (left: 6 7 11) ->  -> There are no possible next steps since there are no more integers provided. -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "5 0 4"
                }
            },
            "Step 4": {
                "Step": "3 * 4 = 12 (left: 6 11 12) -> 11 + 6 = 17 (left: 12 17) -> 12 * 17 = 204 (left: 204) -> 20 / 4 = 5 (left: 5 0 4) -> 0 + 4 = 4 (left: 5 4)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 4 = 12 (left: 6 11 12) -> 11 + 6 = 17 (left: 12 17) -> 12 * 17 = 204 (left: 204) -> 20 / 4 = 5 (left: 5 0 4) -> 0 + 4 = 4 (left: 5 4) -> 4 * 5 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "It seems like the input is missing. Could you please provide the input so that I can generate the possible next steps for you?"
                }
            },
            "Step 6": {
                "Step": "11 - 4 = 7 (left: 3 6 7) -> Possible -> It seems like the input is missing. Could you please provide the input so that I can generate the possible next steps for you? -> It seems like the input is missing. Could you please provide the input so that I can generate the possible next steps for you? -> It seems like the input is missing. Could you please provide the input so that I can generate the possible next steps for you?",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "8 10"
                }
            },
            "Step 7": {
                "Step": "4 + 6 = 10 (left: 3 10 11) -> 11 - 3 = 8 (left: 8 10) -> 8 * 10 = 80 (left: 80)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 6 = 10 (left: 3 10 11) -> 11 - 3 = 8 (left: 8 10) -> 8 * 10 = 80 (left: 80) -> 80 / 2 = 40 (left: 40) ",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "Unfortunately, there are no possible next steps for the input 130 using the numbers 2, 8, and 14."
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "6 * 3 = 18 (left: 4 11 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "11 - 4 = 7 (left: 3 6 7) -> 6 - 3 = 3 (left: 3 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 4 = 7 (left: 3 6 7) -> 6 - 3 = 3 (left: 3 7) -> 7 - 3 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 4 = 7 (left: 3 6 7) -> 6 - 3 = 3 (left: 3 7) -> 7 - 3 = 4 (left: 4) -> There are no possible next steps with the input of 4.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "5 0 4"
                }
            },
            "Step 4": {
                "Step": "3 * 4 = 12 (left: 6 11 12) -> 11 + 6 = 17 (left: 12 17) -> 12 * 17 = 204 (left: 204) -> 20 / 4 = 5 (left: 5 0 4) -> 0 + 4 = 4 (left: 5)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "3 10 11"
                }
            },
            "Step 5": {
                "Step": "4 + 6 = 10 (left: 3 10 11) -> 3 * 10 = 30 (left: 11 30)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 6 = 10 (left: 3 10 11) -> 3 * 10 = 30 (left: 11 30) -> 11 / 30 = 0.36666666666666664 (left: 0.36666666666666664)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "8 10"
                }
            },
            "Step 7": {
                "Step": "4 + 6 = 10 (left: 3 10 11) -> 11 - 3 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) ",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 6 = 10 (left: 3 10 11) -> 11 - 3 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18)  -> 18 - 8 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "No possible next steps."
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 3 10 ",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "11 - 4 = 7 (left: 3 6 7) -> 6 / 3 = 2 (left: 2 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 4 = 7 (left: 3 6 7) -> 6 / 3 = 2 (left: 2 7) -> 2 + 7 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 4 = 7 (left: 3 6 7) -> 6 / 3 = 2 (left: 2 7) -> 2 + 7 = 9 (left: 9) -> 9 - 1 = 8 (left: 1)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "3 10 11"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "6 7 11"
                }
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 11 - 7 = 4 (left: 6)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 11 - 7 = 4 (left: 6) -> 6 - 8 = -2 (left: -2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 11 - 7 = 4 (left: 6) -> 6 - 8 = -2 (left: -2) -> -2 * 8 = -16 (left: -16)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "Unfortunately, there are no possible next steps for the input 130 using the numbers 2, 8, and 14."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "5 6 15"
                }
            },
            "Step 7": {
                "Step": "3 * 4 = 12 (left: 6 11 12) -> 11 + 6 = 17 (left: 12 17) -> 12 * 17 = 204 (left: 204) -> 20 / 4 = 5 (left: 5 0 4) -> 0 / 4 = 0 (left -> 12 + 3 = 15 (left: 5 6 15 -> 6 / 5 = 1.2 (left: 1.2 15)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 4 = 12 (left: 6 11 12) -> 11 + 6 = 17 (left: 12 17) -> 12 * 17 = 204 (left: 204) -> 20 / 4 = 5 (left: 5 0 4) -> 0 / 4 = 0 (left -> 12 + 3 = 15 (left: 5 6 15 -> 6 / 5 = 1.2 (left: 1.2 15) -> 1.2 + 15 = 16.2 (left: 16.2)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "Unfortunately, there are no possible next steps for the input 130 using the numbers 2, 8, and 14."
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 3 6 7)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 10 "
                }
            },
            "Step 1": {
                "Step": "4 + 6 = 10 (left: 3 10  -> 3 + 10 = 13 (left: 10 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 6 = 10 (left: 3 10  -> 3 + 10 = 13 (left: 10 13) -> 10 * 13 = 130 (left: 130)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 6 = 10 (left: 3 10  -> 3 + 10 = 13 (left: 10 13) -> 10 * 13 = 130 (left: 130) -> Unfortunately, there are no possible next steps for the input 130 using the numbers 2, 8, and 14.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "5 0 4"
                }
            },
            "Step 4": {
                "Step": "3 * 4 = 12 (left: 6 11 12) -> 11 + 6 = 17 (left: 12 17) -> 12 * 17 = 204 (left: 204) -> 20 / 4 = 5 (left: 5 0 4) -> 4 + 0 = 4 (left: 5 4)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 4 = 12 (left: 6 11 12) -> 11 + 6 = 17 (left: 12 17) -> 12 * 17 = 204 (left: 204) -> 20 / 4 = 5 (left: 5 0 4) -> 4 + 0 = 4 (left: 5 4) -> 5 / 4 = 1.25 (left: 1.25)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "6 11 12"
                }
            },
            "Step 6": {
                "Step": "3 * 4 = 12 (left: 6 11 12) -> 11 / 6 = 1.83 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "8 10"
                }
            },
            "Step 7": {
                "Step": "4 + 6 = 10 (left: 3 10 11) -> 11 - 3 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 6 = 10 (left: 3 10 11) -> 11 - 3 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> 18 / 2 = 9",
                "Pruning": null
            }
        },
        "Input": "3 4 6 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "916": {
        "puzzle": "2 4 8 9",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 6 8 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 8 9"
                }
            },
            "Step 1": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 9 / 4 = 2.",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 9 / 4 = 2. -> 9 - 4 = 5 (left: 5 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 9 / 4 = 2. -> 9 - 4 = 5 (left: 5 2) -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "4 8 9"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 8 / 6 = 1.33 (left: 1.33 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 8 / 6 = 1.33 (left: 1.33 9) -> 9 / 1.33 = 6.77 (left: 6.77)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 8 / 6 = 1.33 (left: 1.33 9) -> 9 / 1.33 = 6.77 (left: 6.77) -> 6.77 * 2 = 13.54",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "11"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11) -> There are no possible next steps with the input 11.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11) -> There are no possible next steps with the input 11. -> There are no possible next steps with the input 11.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 - 4 = 5 (left: 2 5 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 8 9"
                }
            },
            "Step 1": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 9 - 4 = 5 (left: 4 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 9 - 4 = 5 (left: 4 5) -> 5 - 4 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 9 - 4 = 5 (left: 4 5) -> 5 - 4 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "2 5 8"
                }
            },
            "Step 4": {
                "Step": "9 - 4 = 5 (left: 2 5 8) -> 2 * 5 = 10 (left: 10 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 4 = 5 (left: 2 5 8) -> 2 * 5 = 10 (left: 10 8) -> 10 * 8 = 80 (left: 80)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 4 = 5 (left: 2 5 8) -> 2 * 5 = 10 (left: 10 8) -> 10 * 8 = 80 (left: 80) -> There is only one number, so there are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "There are no possible next steps with the given input."
                }
            },
            "Step 7": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> Input: 3 6 -> Possible next steps: -> There are no possible next steps with the given input. -> No possible next steps.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> Input: 3 6 -> Possible next steps: -> There are no possible next steps with the given input. -> No possible next steps. -> None",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "1 + 1 = 2"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "8 - 4 = 4 (left: 2 4 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 8 9"
                }
            },
            "Step 1": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 8 / 4 = 2 (left: 2 9 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 8 / 4 = 2 (left: 2 9 8) -> 2 + 9 = 11 (left: 8 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 8 / 4 = 2 (left: 2 9 8) -> 2 + 9 = 11 (left: 8 11) -> 11 - 8 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "2 5 8"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 6 + 8 = 14 (left: 9 14)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 6 + 8 = 14 (left: 9 14) -> 9 - 14 = -5 (left: -5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 6 + 8 = 14 (left: 9 14) -> 9 - 14 = -5 (left: -5) -> There are no possible next steps with the input of -5 as there are no numbers to operate on.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "47 + 2 = 49"
                }
            },
            "Step 7": {
                "Step": "9 - 2 = 7 (left: 7 8 9) -> 7 * 8 = 56 (left: 9 56) -> 56 - 9 = 47 (left: 47) -> 47 + 2 = 49 -> 47 + 2 = 49 (left: 49 - 2 = 47",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 2 = 7 (left: 7 8 9) -> 7 * 8 = 56 (left: 9 56) -> 56 - 9 = 47 (left: 47) -> 47 + 2 = 49 -> 47 + 2 = 49 (left: 49 - 2 = 47 -> 49 - 8 = 41 (left: 8 41)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "8 - 4 = 4 (left: 2 4 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 8 9"
                }
            },
            "Step 1": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 9 - 4 = 5 (left: 5 8 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 9 - 4 = 5 (left: 5 8 9) -> 5 + 8 = 13 (left: 9 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 9 - 4 = 5 (left: 5 8 9) -> 5 + 8 = 13 (left: 9 13) -> 9 * 13 = 117 (left: 117)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "8 8 9"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "2 5 8"
                }
            },
            "Step 4": {
                "Step": "9 - 4 = 5 (left: 2 5 8) -> 2 * 5 = 10 (left: 10 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 4 = 5 (left: 2 5 8) -> 2 * 5 = 10 (left: 10 8) -> 10 * 8 = 80 (left: 80)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 4 = 5 (left: 2 5 8) -> 2 * 5 = 10 (left: 10 8) -> 10 * 8 = 80 (left: 80) -> There are no possible next steps for the input 80 as it is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "1 + 1 = 2"
                }
            },
            "Step 7": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 9 - 4 = 5 (left: 4 5) -> 5 - 4 = 1 (left: 1) -> 1 + 1 = 2 -> 1 + 1 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "There are no possible next steps with the number 18."
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 8 - 6 = 2 (left: 2 9) -> 2 * 9 = 18 (left: 18) -> There are no possible next steps with the number 18. -> None",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "32 36"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 * 2 = 8 (left: 8 8 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 8 9"
                }
            },
            "Step 1": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 9 - 4 = 5 (left: 5 8 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 9 - 4 = 5 (left: 5 8 9) -> 9 - 5 = 4 (left: 4 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 9 - 4 = 5 (left: 5 8 9) -> 9 - 5 = 4 (left: 4 9) -> 9 - 4 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "8 8 9"
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 8 - 6 = 2 (left: 2 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 8 - 6 = 2 (left: 2 9) -> 2 * 9 = 18 (left: 18)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 8 - 6 = 2 (left: 2 9) -> 2 * 9 = 18 (left: 18) -> There are no possible next steps with the number 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "11"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11) -> 11 + 2 = 13 (left: 13)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "1 + 1 = 2"
                }
            },
            "Step 8": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 9 - 4 = 5 (left: 4 5) -> 5 - 4 = 1 (left: 1) -> 1 + 1 = 2 -> 1 * 1 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "9 36"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "9 - 8 = 1 (left: 2 4 1)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 8 9"
                }
            },
            "Step 1": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 8 / 4 = 2 (left: 2 9 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 8 / 4 = 2 (left: 2 9 8) -> 2 + 9 = 11 (left: 8 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 8 / 4 = 2 (left: 2 9 8) -> 2 + 9 = 11 (left: 8 11) -> 8 * 11 = 88 (left: 88)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "8 8 9"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "8 8 9"
                }
            },
            "Step 4": {
                "Step": "4 * 2 = 8 (left: 8 8 9) -> 9 + 8 = 17 (left: 8 17)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 * 2 = 8 (left: 8 8 9) -> 9 + 8 = 17 (left: 8 17) -> 8 * 17 = 136 (left: 136)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 2 = 8 (left: 8 8 9) -> 9 + 8 = 17 (left: 8 17) -> 8 * 17 = 136 (left: 136) -> 36 / 1 = 36 (left: 1)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "1 + 1 = 2"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "11"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11) -> There are no possible next steps with the input 11.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11) -> There are no possible next steps with the input 11. -> There are no possible next steps with the input 11.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "9 - 2 = 7 (left: 7 8 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 8 9"
                }
            },
            "Step 1": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 8 - 4 = 4 (left: 4 9 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 8 - 4 = 4 (left: 4 9 8) -> 4 * 9 = 36 (left: 8 36)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 8 - 4 = 4 (left: 4 9 8) -> 4 * 9 = 36 (left: 8 36) -> 8 * 4 = 32 (left: 32 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 8 * 3 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 8 * 3 = 24 (left: 24) -> Answer: (2 + 4) * (8 - 9) = 24",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "1 + 1 = 2"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "There are no possible next steps with the given input."
                }
            },
            "Step 7": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> Input: 3 6 -> Possible next steps: -> There are no possible next steps with the given input. -> There are no possible next steps with the given input.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> Input: 3 6 -> Possible next steps: -> There are no possible next steps with the given input. -> There are no possible next steps with the given input. -> None",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "There is only one number, so there are no possible next steps."
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "4 * 2 = 8 (left: 8 8 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "2 4 8"
                }
            },
            "Step 1": {
                "Step": "8 - 4 = 4 (left: 2 4 8) -> 8 / 2 = 4 (left: 4 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 4 = 4 (left: 2 4 8) -> 8 / 2 = 4 (left: 4 8) -> 4 * 8 = 32 (left: 32)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 4 = 4 (left: 2 4 8) -> 8 / 2 = 4 (left: 4 8) -> 4 * 8 = 32 (left: 32) -> None",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "6 8 9"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "4 8 9"
                }
            },
            "Step 4": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 8 - 4 = 4 (left: 4 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 8 - 4 = 4 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 8 - 4 = 4 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> 9 - 2.25 = 6.75 (left: 6.75)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "47 + 2 = 49"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "1 + 1 = 2"
                }
            },
            "Step 7": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 9 - 4 = 5 (left: 4 5) -> 5 - 4 = 1 (left: 1) -> 1 + 1 = 2 -> 1 * 1 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "There are no possible next steps for the input 80 as it is a single number."
                }
            },
            "Step 8": {
                "Step": "9 - 4 = 5 (left: 2 5 8) -> 2 * 5 = 10 (left: 10 8) -> 10 * 8 = 80 (left: 80) -> There are no possible next steps for the input 80 as it is a single number. -> There are no possible next steps for the input 80 as it is a single number.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "8 / 2 = 4 (left: 4 8 9)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 1": {
                "Step": "9 - 2 = 7 (left: 7 8 9) -> 7 * 8 = 56 (left: 9 56)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 2 = 7 (left: 7 8 9) -> 7 * 8 = 56 (left: 9 56) -> 56 - 9 = 47 (left: 47)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 2 = 7 (left: 7 8 9) -> 7 * 8 = 56 (left: 9 56) -> 56 - 9 = 47 (left: 47) -> 47 + 2 = 49",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "9 36"
                }
            },
            "Step 4": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 4 + 8 = 12 (left: 8 9 12) -> 12 - 8 = 4 (left: 4 9) -> 4 * 9 = 36 (left: 9 36) -> 36 / 9 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "6 8 9"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "There are no possible next steps with the number 18."
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 8 - 6 = 2 (left: 2 9) -> 2 * 9 = 18 (left: 18) -> There are no possible next steps with the number 18. -> None.",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "1 + 1 = 2"
                }
            },
            "Step 8": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 9 - 4 = 5 (left: 4 5) -> 5 - 4 = 1 (left: 1) -> 1 + 1 = 2 -> 1 + 1 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "47 + 2 = 49"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "4 * 2 = 8 (left: 8 8 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 8 9"
                }
            },
            "Step 1": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 4 + 8 = 12 (left: 8 9 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 4 + 8 = 12 (left: 8 9 12) -> 12 - 8 = 4 (left: 4 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 4 + 8 = 12 (left: 8 9 12) -> 12 - 8 = 4 (left: 4 9) -> 4 * 9 = 36 (left: 9 36)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "4 8 9"
                }
            },
            "Step 4": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> Input: 3 6",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> Input: 3 6 -> Possible next steps:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> Input: 3 6 -> Possible next steps: -> There are no possible next steps with the given input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "There are no possible next steps with the given input."
                }
            },
            "Step 7": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> Input: 3 6 -> Possible next steps: -> There are no possible next steps with the given input. -> There are no possible next steps with the given input.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> Input: 3 6 -> Possible next steps: -> There are no possible next steps with the given input. -> There are no possible next steps with the given input. -> There are no possible next steps with the given input.",
                "Pruning": null
            }
        },
        "Input": "2 4 8 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "917": {
        "puzzle": "1 4 5 13",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 4 = 5 (left: 5 5 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 20 "
                }
            },
            "Step 1": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 1 + 20 = 21 (left: 21)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 1 + 20 = 21 (left: 21) -> 21 * 2 = 42 (left: 42)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 1 + 20 = 21 (left: 21) -> 21 * 2 = 42 (left: 42) -> There are no possible next steps for the number 42.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "5 5 13"
                }
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 - 5 = 0 (left: 0 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 - 5 = 0 (left: 0 13) -> Possible next steps:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 - 5 = 0 (left: 0 13) -> Possible next steps: -> There are no possible next steps as the input is already in its simplest form.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no possible next steps for the input 1.923."
                }
            },
            "Step 7": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 * 5 = 25 (left: 25 13) -> 25 / 13 = 1.923 (left: 1.923) -> There are no possible next steps for the input 1.923. -> There are no possible next steps for the input 1.923 as it is not a whole number.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 * 5 = 25 (left: 25 13) -> 25 / 13 = 1.923 (left: 1.923) -> There are no possible next steps for the input 1.923. -> There are no possible next steps for the input 1.923 as it is not a whole number. -> Input is not a whole number, please enter a whole number to find possible next steps.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 + 5 = 9 (left: 1 9 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 20 "
                }
            },
            "Step 1": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 20 / 1 = 20 (left: 20 20)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 20 / 1 = 20 (left: 20 20) -> 20 + 20 = 40 (left: 40)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 20 / 1 = 20 (left: 20 20) -> 20 + 20 = 40 (left: 40) -> There is only one possible next step for the input 40:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "5 5 13"
                }
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 * 5 = 25 (left: 25 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 * 5 = 25 (left: 25 13) -> 25 / 13 = 1.923 (left: 1.923)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 * 5 = 25 (left: 25 13) -> 25 / 13 = 1.923 (left: 1.923) -> There are no possible next steps for the input 1.923.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no possible next steps for the input 1.923."
                }
            },
            "Step 7": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 * 5 = 25 (left: 25 13) -> 25 / 13 = 1.923 (left: 1.923) -> There are no possible next steps for the input 1.923. -> 1.923 / 1 = 1.923 (left: 1.923 1.923)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 * 5 = 25 (left: 25 13) -> 25 / 13 = 1.923 (left: 1.923) -> There are no possible next steps for the input 1.923. -> 1.923 / 1 = 1.923 (left: 1.923 1.923) -> 1.923 * 1.923 = 3.697129 (left: 3.697129)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "There is only one possible next step for the input 40:"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 20 "
                }
            },
            "Step 1": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 20 / 1 = 20 (left: 20)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 20 / 1 = 20 (left: 20) -> 20 - 2 = 18 (left: 2 18)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 20 / 1 = 20 (left: 20) -> 20 - 2 = 18 (left: 2 18) -> 18 / 2 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "5 5 13"
                },
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "5 5 13"
                }
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 * 5 = 25 (left: 25 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 * 5 = 25 (left: 25 13) -> 25 / 13 \u2248 1.923 (left: 1.923)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 * 5 = 25 (left: 25 13) -> 25 / 13 \u2248 1.923 (left: 1.923) -> 1.923 + 2 = 3.923 (left: 3.923) ",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "There is only one possible next step for the input 40:"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There is only one possible next step for the input 40:"
                }
            },
            "Step 7": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 20 / 1 = 20 (left: 20 20) -> 20 + 20 = 40 (left: 40) -> There is only one possible next step for the input 40: -> 40 / 2 = 20",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 20 / 1 = 20 (left: 20 20) -> 20 + 20 = 40 (left: 40) -> There is only one possible next step for the input 40: -> 40 / 2 = 20 -> 20 * 2 = 40 (left: 20)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "There is only one possible next step for the input 40:"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 20 "
                }
            },
            "Step 1": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 1 + 20 = 21 (left: 20 21)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 1 + 20 = 21 (left: 20 21) -> 20 / 21 \u2248 0.9524 (left: 0.9524)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 1 + 20 = 21 (left: 20 21) -> 20 / 21 \u2248 0.9524 (left: 0.9524) -> There are no possible next steps for the input 0.9524 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "5 5 13"
                }
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 + 13 = 18 (left: 5 18)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 + 13 = 18 (left: 5 18) -> 18 - 5 = 13 (left: 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 + 13 = 18 (left: 5 18) -> 18 - 5 = 13 (left: 13) -> 13 + 2 = 15 (left: 2 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "There is only one possible next step:"
                }
            },
            "Step 7": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 13 + 5 = 18 (left: 5 18) -> 18 / 5 = 3.6 (left: 3.6) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 13 + 5 = 18 (left: 5 18) -> 18 / 5 = 3.6 (left: 3.6) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16) -> 16 / 2 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There are no possible next steps for the number 42."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "5 5 13"
                }
            },
            "Step 1": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 13 - 5 = 8 (left: 5 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 13 - 5 = 8 (left: 5 8) -> 5 + 8 = 13 (left: 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 13 - 5 = 8 (left: 5 8) -> 5 + 8 = 13 (left: 13) -> There are no possible next steps with just the number 13.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "5 5 13"
                }
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 13 - 5 = 8 (left: 5",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 13 - 5 = 8 (left: 5 -> There are no possible next steps with just one number.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 13 - 5 = 8 (left: 5 -> There are no possible next steps with just one number. -> - Add two numbers together",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "There is only one possible next step:"
                }
            },
            "Step 7": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 13 + 5 = 18 (left: 5 18) -> 18 / 5 = 3.6 (left: 3.6) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 13 + 5 = 18 (left: 5 18) -> 18 / 5 = 3.6 (left: 3.6) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16) -> 2 + 16 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "There is only one possible next step for the input 40:"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 4 12 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "5 5 13"
                }
            },
            "Step 1": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 13 - 5 = 8 (left: 5 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 13 - 5 = 8 (left: 5 8) -> 8 / 5 = 1.6 (left: 1.6)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 13 - 5 = 8 (left: 5 8) -> 8 / 5 = 1.6 (left: 1.6) -> There is only one number given, so there are no possible next steps to perform.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "5 5 13"
                }
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 13 + 5 = 18 (left: 5 18)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 13 + 5 = 18 (left: 5 18) -> 18 / 5 = 3.6 (left: 3.6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 13 + 5 = 18 (left: 5 18) -> 18 / 5 = 3.6 (left: 3.6) -> There is only one possible next step:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "There are no possible next steps with just the number 13."
                }
            },
            "Step 7": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 13 - 5 = 8 (left: 5 8) -> 5 + 8 = 13 (left: 13) -> There are no possible next steps with just the number 13. -> None",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "There is only one possible next step:"
                }
            },
            "Step 8": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 13 + 5 = 18 (left: 5 18) -> 18 / 5 = 3.6 (left: 3.6) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16)",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "5 * 4 = 20 (left: 1 20 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "5 5 13"
                }
            },
            "Step 1": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 - 13 = -8 (left: -8",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 - 13 = -8 (left: -8 -> There are no possible next steps as the input value does not match any of the remaining numbers in the list.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 - 13 = -8 (left: -8 -> There are no possible next steps as the input value does not match any of the remaining numbers in the list. -> N/A",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "1 9 13"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "5 5 13"
                }
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> Input: 3 3",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> Input: 3 3 -> 3 - 3 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> Input: 3 3 -> 3 - 3 = 0 (left: 0) -> No next steps, please provide a new set of numbers.",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There is only one possible next step for the input 40:"
                }
            },
            "Step 7": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 20 / 1 = 20 (left: 20 20) -> 20 + 20 = 40 (left: 40) -> There is only one possible next step for the input 40: -> 40 / 2 = 20",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 20 / 1 = 20 (left: 20 20) -> 20 + 20 = 40 (left: 40) -> There is only one possible next step for the input 40: -> 40 / 2 = 20 -> 40 - 2 = 38 (left: 38)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "There is only one possible next step for the input 40:"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "5 + 4 = 9 (left: 1 9 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 20 "
                }
            },
            "Step 1": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 1 + 20 = 21 (left: 20 21)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 1 + 20 = 21 (left: 20 21) -> 20 / 21 = 0.9523809523809523 (left: 0.9523809523809523)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 1 + 20 = 21 (left: 20 21) -> 20 / 21 = 0.9523809523809523 (left: 0.9523809523809523) -> 0.9523809523809523 - 0.9523809523809523 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "5 5 13"
                }
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> Possible",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> Possible -> 1. P + ossible = Possible",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> Possible -> 1. P + ossible = Possible -> 1 + P = 1P (left: P Possible)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There is only one possible next step for the input 40:"
                }
            },
            "Step 7": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 20 / 1 = 20 (left: 20 20) -> 20 + 20 = 40 (left: 40) -> There is only one possible next step for the input 40: -> 40 / 2 = 20",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 20 / 1 = 20 (left: 20 20) -> 20 + 20 = 40 (left: 40) -> There is only one possible next step for the input 40: -> 40 / 2 = 20 -> 40 + 2 = 42 (left: 2 20)",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "1 + 4 = 5 (left: 5 5 13)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "5 5 13"
                }
            },
            "Step 1": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 * 5 = 25 (left: 25 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 * 5 = 25 (left: 25 13) -> 25 - 13 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 * 5 = 25 (left: 25 13) -> 25 - 13 = 12 (left: 12) -> 12 - 8 = 4 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "5 5 13"
                }
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 * 5 = 25 (left: 25 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 * 5 = 25 (left: 25 13) -> 25 - 13 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 * 5 = 25 (left: 25 13) -> 25 - 13 = 12 (left: 12) -> 12 * 2 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "There are no possible next steps with just the number 13."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There is only one possible next step for the input 40:"
                }
            },
            "Step 7": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 20 / 1 = 20 (left: 20 20) -> 20 + 20 = 40 (left: 40) -> There is only one possible next step for the input 40: -> 40 / 2 = 20",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 20 / 1 = 20 (left: 20 20) -> 20 + 20 = 40 (left: 40) -> There is only one possible next step for the input 40: -> 40 / 2 = 20 -> 40 / 2 = 20 (left: 20 20)",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "13 - 5 = 8 (left: 1 4 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 20 "
                }
            },
            "Step 1": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 20 * 1 = 20 (left: 20 20)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 20 * 1 = 20 (left: 20 20) -> 20 * 20 = 400 (left: 400)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 20 * 1 = 20 (left: 20 20) -> 20 * 20 = 400 (left: 400) -> 400 * 2 = 800 (left: 800)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "4 5 12"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "5 5 13"
                }
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 13 + 5 = 18 (left: 5 18)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 13 + 5 = 18 (left: 5 18) -> 18 / 5 = 3.6 (left: 3.6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 13 + 5 = 18 (left: 5 18) -> 18 / 5 = 3.6 (left: 3.6) -> 3.6 + 2 = 5.6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "2 15"
                }
            },
            "Step 7": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 + 13 = 18 (left: 5 18) -> 18 - 5 = 13 (left: 13) -> 13 + 2 = 15 (left: 2 15) -> 15 / 2 = 7.5 (left: 2 7.5)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 + 13 = 18 (left: 5 18) -> 18 - 5 = 13 (left: 13) -> 13 + 2 = 15 (left: 2 15) -> 15 / 2 = 7.5 (left: 2 7.5) -> 2 + 7.5 = 9.5",
                "Pruning": null
            }
        },
        "Input": "1 4 5 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "918": {
        "puzzle": "2 2 7 12",
        "Agent 0": {
            "Step 0": {
                "Step": "7 + 2 = 9 (left: 2 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 10 - 7 = 3 (left: 2 3 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 10 - 7 = 3 (left: 2 3 10) -> 2 + 3 = 5 (left: 5 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 10 - 7 = 3 (left: 2 3 10) -> 2 + 3 = 5 (left: 5 10) -> 3 * 6 = 18 (left: 18 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 4": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 10 - 7 = 3 (left: 2 3)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 10 - 7 = 3 (left: 2 3) -> 2 + 3 = 5",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 10 - 7 = 3 (left: 2 3) -> 2 + 3 = 5 -> 3 / 2 = 1.5 (left: 1.5 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "4 7 19"
                }
            },
            "Step 7": {
                "Step": "2 * 2 = 4 (left: 4 7 12) -> 7 + 4 =  -> 7 + 4 = 11 -> 11 + 8 = 19 (left: 4 7 19) -> 7 / 4 = 1.75 (left: 1.75 19)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 2 = 4 (left: 4 7 12) -> 7 + 4 =  -> 7 + 4 = 11 -> 11 + 8 = 19 (left: 4 7 19) -> 7 / 4 = 1.75 (left: 1.75 19) -> 1.75 + 19 = 20.75 (left: 20.75)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "12 + 4 = 16 (left"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 - 2 = 10 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 7 12"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 7 12) -> 12 / 4 = 3 (left: 3 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 7 12) -> 12 / 4 = 3 (left: 3 7) -> 3 + 7 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 7 12) -> 12 / 4 = 3 (left: 3 7) -> 3 + 7 = 10 (left: 10) -> 10 + 2 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "4 7 12"
                },
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 4": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10) -> 10 / 9 = 1.11 (left: 1.11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10) -> 10 / 9 = 1.11 (left: 1.11) -> 1 + 1 = 2 (left: 2.11)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "90 + 2 = 92"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "4 7 19"
                }
            },
            "Step 7": {
                "Step": "2 * 2 = 4 (left: 4 7 12) -> 7 + 4 =  -> 7 + 4 = 11 -> 11 + 8 = 19 (left: 4 7 19) -> 7 * 4 = 28 (left: 28 19)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 2 = 4 (left: 4 7 12) -> 7 + 4 =  -> 7 + 4 = 11 -> 11 + 8 = 19 (left: 4 7 19) -> 7 * 4 = 28 (left: 28 19) -> 28 + 19 = 47 (left: 47)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "1 + 4 = 5"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 7 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 7 12"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 7 12) -> 12 / 4 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 7 12) -> 12 / 4 =  -> 12 / 4 = 3",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 7 12) -> 12 / 4 =  -> 12 / 4 = 3 -> 12 + 4 = 16 (left",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "4 7 12"
                }
            },
            "Step 4": {
                "Step": "2 * 2 = 4 (left: 4 7 12) -> 4 * 7 = 28 (left: 28 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 * 2 = 4 (left: 4 7 12) -> 4 * 7 = 28 (left: 28 12) -> 28 - 12 = 16 (left: 16)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 2 = 4 (left: 4 7 12) -> 4 * 7 = 28 (left: 28 12) -> 28 - 12 = 16 (left: 16) -> There are no possible next steps as there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "4 7 19"
                }
            },
            "Step 7": {
                "Step": "2 * 2 = 4 (left: 4 7 12) -> 7 + 4 =  -> 7 + 4 = 11 -> 11 + 8 = 19 (left: 4 7 19) -> 19 - 4 = 15 (left: 7 15)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 2 = 4 (left: 4 7 12) -> 7 + 4 =  -> 7 + 4 = 11 -> 11 + 8 = 19 (left: 4 7 19) -> 19 - 4 = 15 (left: 7 15) -> 15 - 7 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "4 7 19"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "12 / 2 = 6 (left: 2 6 ",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (12 - 2) * (2 * 7) = 24",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "2 7 10"
                },
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "4 7 12"
                }
            },
            "Step 4": {
                "Step": "2 * 2 = 4 (left: 4 7 12) -> 7 + 4 = ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 * 2 = 4 (left: 4 7 12) -> 7 + 4 =  -> 7 + 4 = 11",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 2 = 4 (left: 4 7 12) -> 7 + 4 =  -> 7 + 4 = 11 -> 11 + 8 = 19 (left: 4 7 19)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "4 7 19"
                }
            },
            "Step 7": {
                "Step": "2 * 2 = 4 (left: 4 7 12) -> 7 + 4 =  -> 7 + 4 = 11 -> 11 + 8 = 19 (left: 4 7 19) -> 7 + 4 = 11 (left: 11 19)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 2 = 4 (left: 4 7 12) -> 7 + 4 =  -> 7 + 4 = 11 -> 11 + 8 = 19 (left: 4 7 19) -> 7 + 4 = 11 (left: 11 19) -> 11 / 19 \u2248 0.58 (left: 0.58)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "4 7 19"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 * 7 = 14 (left: 2 12 14)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 / 10 = 1.4 (left: 1.4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 / 10 = 1.4 (left: 1.4) -> 1 + 4 = 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 4": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10) -> 9 * 10 = 90 (left: 90)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10) -> 9 * 10 = 90 (left: 90) -> There are no possible next steps with the given input of 90.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "4 7 19"
                }
            },
            "Step 7": {
                "Step": "2 * 2 = 4 (left: 4 7 12) -> 7 + 4 =  -> 7 + 4 = 11 -> 11 + 8 = 19 (left: 4 7 19) -> 7 * 4 = 28 (left: 28 19)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 2 = 4 (left: 4 7 12) -> 7 + 4 =  -> 7 + 4 = 11 -> 11 + 8 = 19 (left: 4 7 19) -> 7 * 4 = 28 (left: 28 19) -> 28 * 19 = 532 (left: 532)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "1.142857142857143 + 1 = 2.142857142857143"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "12 - 2 = 10 (left: 2 7 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10) -> 9 * 10 = 90 (left: 90)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10) -> 9 * 10 = 90 (left: 90) -> 90 + 2 = 92",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 4": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10) -> Possible next steps:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10) -> Possible next steps: -> There seems to be an issue with the input. Can you please provide a valid input for me to generate possible next steps? Thank you.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "4 7 19"
                }
            },
            "Step 7": {
                "Step": "2 * 2 = 4 (left: 4 7 12) -> 7 + 4 =  -> 7 + 4 = 11 -> 11 + 8 = 19 (left: 4 7 19) -> 4 + 7 = 11 (left: 11 19)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 2 = 4 (left: 4 7 12) -> 7 + 4 =  -> 7 + 4 = 11 -> 11 + 8 = 19 (left: 4 7 19) -> 4 + 7 = 11 (left: 11 19) -> 11 * 19 = 209 (left: 209)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "90 + 2 = 92"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 7 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 3.5 12"
                }
            },
            "Step 1": {
                "Step": "7 / 2 = 3.5 (left: 2 3.5 12) -> 2 * 3.5 = 7 (left: 7 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 / 2 = 3.5 (left: 2 3.5 12) -> 2 * 3.5 = 7 (left: 7 12) -> 7 * 12 = 84 (left: 84)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 / 2 = 3.5 (left: 2 3.5 12) -> 2 * 3.5 = 7 (left: 7 12) -> 7 * 12 = 84 (left: 84) -> 8 + 4 = 12",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "4 7 12"
                }
            },
            "Step 4": {
                "Step": "2 * 2 = 4 (left: 4 7 12) -> 12 - 4 = 8 (left: 8 7)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 * 2 = 4 (left: 4 7 12) -> 12 - 4 = 8 (left: 8 7) -> 8 / 7 = 1.142857142857143 (left: 1.142857142857143)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 2 = 4 (left: 4 7 12) -> 12 - 4 = 8 (left: 8 7) -> 8 / 7 = 1.142857142857143 (left: 1.142857142857143) -> 1.142857142857143 + 1 = 2.142857142857143",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "4 7 19"
                }
            },
            "Step 7": {
                "Step": "2 * 2 = 4 (left: 4 7 12) -> 7 + 4 =  -> 7 + 4 = 11 -> 11 + 8 = 19 (left: 4 7 19) -> 7 * 4 = 28 (left: 28 19)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 2 = 4 (left: 4 7 12) -> 7 + 4 =  -> 7 + 4 = 11 -> 11 + 8 = 19 (left: 4 7 19) -> 7 * 4 = 28 (left: 28 19) -> 28 + 19 = 47",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 2 5 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 12 14"
                }
            },
            "Step 1": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 2 * 12 = 24 (left: 14 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 2 * 12 = 24 (left: 14 24) -> 14 + 24 = 38 (left: 38)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 2 * 12 = 24 (left: 14 24) -> 14 + 24 = 38 (left: 38) -> 8 / 3 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "2 7 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 4": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 7 + 2 = ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 7 + 2 =  -> 7 + 2 = 9",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 7 + 2 =  -> 7 + 2 = 9 -> 9 * 2 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "90 + 2 = 92"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "4 7 19"
                }
            },
            "Step 7": {
                "Step": "2 * 2 = 4 (left: 4 7 12) -> 7 + 4 =  -> 7 + 4 = 11 -> 11 + 8 = 19 (left: 4 7 19) -> 7 * 4 = 28 (left: 28 19)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 2 = 4 (left: 4 7 12) -> 7 + 4 =  -> 7 + 4 = 11 -> 11 + 8 = 19 (left: 4 7 19) -> 7 * 4 = 28 (left: 28 19) -> Possible next steps:",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 7 12)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 3.5 12"
                }
            },
            "Step 1": {
                "Step": "7 / 2 = 3.5 (left: 2 3.5 12) -> 3.5 * 2 = 7 (left: 7 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 / 2 = 3.5 (left: 2 3.5 12) -> 3.5 * 2 = 7 (left: 7 12) -> 7 * 12 = 84 (left: 84)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 / 2 = 3.5 (left: 2 3.5 12) -> 3.5 * 2 = 7 (left: 7 12) -> 7 * 12 = 84 (left: 84) -> 8 + 4 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "2 9 12"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 4": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 7 * 2 = 14 (left: 14 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 7 * 2 = 14 (left: 14 10) -> 14 * 10 = 140 (left: 140)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 7 * 2 = 14 (left: 14 10) -> 14 * 10 = 140 (left: 140) -> 1 + 4 + 0 = 5 (left: 5 0)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "4 7 19"
                }
            },
            "Step 7": {
                "Step": "2 * 2 = 4 (left: 4 7 12) -> 7 + 4 =  -> 7 + 4 = 11 -> 11 + 8 = 19 (left: 4 7 19) -> 19 - 4 = 15 (left: 7 15)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 2 = 4 (left: 4 7 12) -> 7 + 4 =  -> 7 + 4 = 11 -> 11 + 8 = 19 (left: 4 7 19) -> 19 - 4 = 15 (left: 7 15) -> 15 - 7 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "There are no possible next steps with the given input of 90."
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "7 / 2 = 3.5 (left: 2 3.5 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 12 14"
                }
            },
            "Step 1": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 12 / 2 = 6 (left: 6 12 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 12 / 2 = 6 (left: 6 12 14) -> 6 * 2 = 12 (left: 12 14)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 12 / 2 = 6 (left: 6 12 14) -> 6 * 2 = 12 (left: 12 14) -> 12 + 14 = 26 (left: 26)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "2 6 "
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "4 7 12"
                }
            },
            "Step 4": {
                "Step": "2 * 2 = 4 (left: 4 7 12) -> 7 + 4 = 11 (left: 11 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 * 2 = 4 (left: 4 7 12) -> 7 + 4 = 11 (left: 11 12) -> 11 * 12 = 132 (left: 132)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 2 = 4 (left: 4 7 12) -> 7 + 4 = 11 (left: 11 12) -> 11 * 12 = 132 (left: 132) -> 1 + 3 + 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "90 + 2 = 92"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "4 7 19"
                }
            },
            "Step 7": {
                "Step": "2 * 2 = 4 (left: 4 7 12) -> 7 + 4 =  -> 7 + 4 = 11 -> 11 + 8 = 19 (left: 4 7 19) -> 19 - 7 = 12 (left: 4 12)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 2 = 4 (left: 4 7 12) -> 7 + 4 =  -> 7 + 4 = 11 -> 11 + 8 = 19 (left: 4 7 19) -> 19 - 7 = 12 (left: 4 12) -> 4 + 12 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "There seems to be an issue with the input. Can you please provide a valid input for me to generate possible next steps? Thank you."
                }
            }
        },
        "Input": "2 2 7 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "919": {
        "puzzle": "3 3 6 7",
        "Agent 0": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> Possible",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> Possible -> Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> Possible -> Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance. -> 3. Utilize parentheses to change the order of operations.",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "9 6 7"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 6 7) -> 9 + 6 = 15 (left: 7 15)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 6 7) -> 9 + 6 = 15 (left: 7 15) -> 15 / 7 = 2.14 (left: 2.14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 6 7) -> 9 + 6 = 15 (left: 7 15) -> 15 / 7 = 2.14 (left: 2.14) -> There are no possible next steps for the input 2.14 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "3. Utilize parentheses to change the order of operations."
                }
            },
            "Step 7": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> Possible -> Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance. -> 3. Utilize parentheses to change the order of operations. -> (2 + 8) * 8 = 80 (left: 80 14)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> Possible -> Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance. -> 3. Utilize parentheses to change the order of operations. -> (2 + 8) * 8 = 80 (left: 80 14) -> 80 / 14 = 5.71 (left: 5.71)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "2 + 2 = 4"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 * 6 = 18 (left: 7 18)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 * 6 = 18 (left: 7 18) -> 18 / 7 = 2.57 (left: 2.57)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 * 6 = 18 (left: 7 18) -> 18 / 7 = 2.57 (left: 2.57) -> 2.57 + 8 = 10.57 (left: 8)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "3 9 7"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "9 6 7"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 6 7) -> 9 / 6 = 1.5 (left: 1.5 7)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 6 7) -> 9 / 6 = 1.5 (left: 1.5 7) -> 1.5 + 7 = 8.5 (left: 8.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 6 7) -> 9 / 6 = 1.5 (left: 1.5 7) -> 1.5 + 7 = 8.5 (left: 8.5) -> 8.5 + 2 = 10.5 (left: 8.5 10.5)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "3. Utilize parentheses to change the order of operations."
                }
            },
            "Step 7": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> Possible -> Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance. -> 3. Utilize parentheses to change the order of operations. -> (2 + 8) * 8 = 80 (left: 80 14)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> Possible -> Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance. -> 3. Utilize parentheses to change the order of operations. -> (2 + 8) * 8 = 80 (left: 80 14) -> 80 * 14 = 1120 (left: 1120)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "2 + 2 = 4"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 - 3 = 3 (left: 3 6 7)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 6 - 3 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 6 - 3 =  -> 6 - 3 = 3",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 6 - 3 =  -> 6 - 3 = 3 -> 3",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "9 6 7"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "3. Utilize parentheses to change the order of operations."
                }
            },
            "Step 4": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> Possible -> Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance. -> 3. Utilize parentheses to change the order of operations. -> 2 * (8 + 8) = 32 (left: 32 14)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> Possible -> Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance. -> 3. Utilize parentheses to change the order of operations. -> 2 * (8 + 8) = 32 (left: 32 14) -> 32 / 14 = 2.28571428571 (left: 2.28571428571)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "9 6 7"
                }
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 6 7) -> 7 - 6 = 1 (left: 9 1)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "9 1"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 6 7) -> 7 - 6 = 1 (left: 9 1) -> 9 * 1 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 6 7) -> 7 - 6 = 1 (left: 9 1) -> 9 * 1 = 9 (left: 9) -> 8 + 9 = 17 (left: 17)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "There are no possible next steps with the input 1.5. Please provide more numbers to continue the calculations."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9) -> 7 * 9 = 63 (left: 63)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9) -> 7 * 9 = 63 (left: 63) -> 6 + 3 = 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "3. Utilize parentheses to change the order of operations."
                }
            },
            "Step 4": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> Possible -> Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance. -> 3. Utilize parentheses to change the order of operations. -> (14 + 2) * 8 = 128 (left: 8 128)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> Possible -> Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance. -> 3. Utilize parentheses to change the order of operations. -> (14 + 2) * 8 = 128 (left: 8 128) -> 128 / 8 = 16 (left: 8 16)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> Possible -> Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance. -> 3. Utilize parentheses to change the order of operations. -> (14 + 2) * 8 = 128 (left: 8 128) -> 128 / 8 = 16 (left: 8 16) -> 16 - 8 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "There are no possible next steps with the input 1.5. Please provide more numbers to continue the calculations."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "4 6"
                }
            },
            "Step 7": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 4 + 6 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 4 + 6 = 10 (left: 10) -> 10 - 8 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "There are no possible next steps with the input 1.5. Please provide more numbers to continue the calculations."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 3 9 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 2 7"
                }
            },
            "Step 1": {
                "Step": "6 / 3 = 2 (left: 3 2 7) -> 7 / 2 = 3.5 (left: 3.5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 3 = 2 (left: 3 2 7) -> 7 / 2 = 3.5 (left: 3.5) -> 8 / 3.5 = 2.28571428571 (left: 2.28571428571)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 / 3 = 2 (left: 3 2 7) -> 7 / 2 = 3.5 (left: 3.5) -> 8 / 3.5 = 2.28571428571 (left: 2.28571428571) -> 2.28571428571 * 2 = 4.57142857142",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "3. Utilize parentheses to change the order of operations."
                }
            },
            "Step 4": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> Possible -> Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance. -> 3. Utilize parentheses to change the order of operations. -> 8 / (2 + 8) = 1 (left: 1 8 14)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> Possible -> Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance. -> 3. Utilize parentheses to change the order of operations. -> 8 / (2 + 8) = 1 (left: 1 8 14) -> 14 - 8 = 6 (left: 1 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> Possible -> Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance. -> 3. Utilize parentheses to change the order of operations. -> 8 / (2 + 8) = 1 (left: 1 8 14) -> 14 - 8 = 6 (left: 1 6) -> 1 + 6 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "3. Utilize parentheses to change the order of operations."
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "3. Utilize parentheses to change the order of operations."
                }
            },
            "Step 7": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> Possible -> Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance. -> 3. Utilize parentheses to change the order of operations. -> (2 + 8) * 8 = 80 (left: 80 14)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> Possible -> Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance. -> 3. Utilize parentheses to change the order of operations. -> (2 + 8) * 8 = 80 (left: 80 14) -> 80 * 14 = 1120 (left: 1120)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "2 + 2 = 4"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 3 9 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9) -> 9 - 7 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9) -> 9 - 7 = 2 (left: 2) -> 2 + 2 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "3. Utilize parentheses to change the order of operations."
                }
            },
            "Step 4": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> Possible -> Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance. -> 3. Utilize parentheses to change the order of operations. -> 8 / (2 + 8) = 0.8 (left: 0.8 14)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> Possible -> Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance. -> 3. Utilize parentheses to change the order of operations. -> 8 / (2 + 8) = 0.8 (left: 0.8 14) -> Input: 6 3",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> Possible -> Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance. -> 3. Utilize parentheses to change the order of operations. -> 8 / (2 + 8) = 0.8 (left: 0.8 14) -> Input: 6 3 -> 6 - 3 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "2 + 2 = 4"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "3. Utilize parentheses to change the order of operations."
                }
            },
            "Step 7": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> Possible -> Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance. -> 3. Utilize parentheses to change the order of operations. -> 8 / (2 * 8) = 0.5 (left: 0.5 14)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> Possible -> Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance. -> 3. Utilize parentheses to change the order of operations. -> 8 / (2 * 8) = 0.5 (left: 0.5 14) -> 0.5 * 14 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "There are no possible next steps as there are not enough numbers given to perform any operations."
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 / 3 = 2 (left: 3 2 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 7) -> 4 + 7 = 11 (left: 7 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 7) -> 4 + 7 = 11 (left: 7 11) -> 11 / 7 = 1.57 (left: 1.57)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "9 6 7"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "3. Utilize parentheses to change the order of operations."
                }
            },
            "Step 4": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> Possible -> Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance. -> 3. Utilize parentheses to change the order of operations. -> 8 / (2 * 8) = 0.5 (left: 0.5 14)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> Possible -> Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance. -> 3. Utilize parentheses to change the order of operations. -> 8 / (2 * 8) = 0.5 (left: 0.5 14) -> 0.5 + 14 = 14.5 (left: 14.5)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "3 6 7"
                }
            },
            "Step 6": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "3. Utilize parentheses to change the order of operations."
                }
            },
            "Step 7": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> Possible -> Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance. -> 3. Utilize parentheses to change the order of operations. -> (14 + 2) * 8 = 128 (left: 8 128)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> Possible -> Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance. -> 3. Utilize parentheses to change the order of operations. -> (14 + 2) * 8 = 128 (left: 8 128) -> 8 + 128 = 136 (left: 136)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "2.28571428571 * 2 = 4.57142857142"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5) -> There are no possible next steps with the input 1.5. Please provide more numbers to continue the calculations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "9 6 7"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 6 7) -> 9 - 6 = 3 (left: 3 7)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 6 7) -> 9 - 6 = 3 (left: 3 7) -> 7 - 3 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 6 7) -> 9 - 6 = 3 (left: 3 7) -> 7 - 3 = 4 (left: 4) -> There are no possible next steps as there are not enough numbers given to perform any operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "3. Utilize parentheses to change the order of operations."
                }
            },
            "Step 7": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> Possible -> Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance. -> 3. Utilize parentheses to change the order of operations. -> (8 / 2) + 8 = 12 (left: 12 14)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> Possible -> Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance. -> 3. Utilize parentheses to change the order of operations. -> (8 / 2) + 8 = 12 (left: 12 14) -> 12 * 14 = 168 (left: 168)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "There are no possible next steps with the input 1.5. Please provide more numbers to continue the calculations."
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 6 9 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9) -> 9 - 7 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9) -> 9 - 7 = 2 (left: 2) -> 2 * 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "9 6 7"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "3. Utilize parentheses to change the order of operations."
                }
            },
            "Step 4": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> Possible -> Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance. -> 3. Utilize parentheses to change the order of operations. -> 2 + (8 * 8) = 66 (left: 66 14)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> Possible -> Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance. -> 3. Utilize parentheses to change the order of operations. -> 2 + (8 * 8) = 66 (left: 66 14) -> 66 + 14 = 80 (left: 80)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "9 6 7"
                }
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 6 7) -> 6 + 7 = 13 (left: 9 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "3. Utilize parentheses to change the order of operations."
                }
            },
            "Step 7": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> Possible -> Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance. -> 3. Utilize parentheses to change the order of operations. -> 8 / (2 + 8) = 1 (left: 1 14)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> Possible -> Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance. -> 3. Utilize parentheses to change the order of operations. -> 8 / (2 + 8) = 1 (left: 1 14) -> 14 / 1 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "6 + 3 = 9"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9) -> 3 -",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9) -> 3 - -> 3 + 1 = 4 (left: -)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "6 9 7"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "3. Utilize parentheses to change the order of operations."
                }
            },
            "Step 4": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> Possible -> Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance. -> 3. Utilize parentheses to change the order of operations. -> (2 + 8) * 8 = 80 (left: 80 14)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> Possible -> Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance. -> 3. Utilize parentheses to change the order of operations. -> (2 + 8) * 8 = 80 (left: 80 14) -> 80 - 14 = 66 (left: 66)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "There are no possible next steps with the input 1.5. Please provide more numbers to continue the calculations."
                }
            },
            "Step 6": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5) -> There are no possible next steps with the input 1.5. Please provide more numbers to continue the calculations. -> 1.5 + 2 = 3.5 (left: 3.5)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "2.28571428571 * 2 = 4.57142857142"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "9 1"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 6 7) -> 7 - 6 = 1 (left: 9 1) -> 9 / 1 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 6 7) -> 7 - 6 = 1 (left: 9 1) -> 9 / 1 = 9 (left: 9) -> 9 - 9 =",
                "Pruning": null
            }
        },
        "Input": "3 3 6 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "920": {
        "puzzle": "1 5 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 5 = 8 (left: 1 8 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "1 5 22"
                }
            },
            "Step 1": {
                "Step": "9 + 13 = 22 (left: 1 5 22) -> 22 - 1 = 21 (left: 5 21)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 13 = 22 (left: 1 5 22) -> 22 - 1 = 21 (left: 5 21) -> 21 - 5 = 16 (left: 16)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 + 13 = 22 (left: 1 5 22) -> 22 - 1 = 21 (left: 5 21) -> 21 - 5 = 16 (left: 16) -> 16 / 2 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "57 * 2 = 114 (left:"
                }
            },
            "Step 4": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 1 = 44 (left: 44 13) -> 44 * 13 = 572 (left: 572) -> 57 * 2 = 114 (left: -> 57 + 2 = 59 (left: 59)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "1 45 13"
                }
            },
            "Step 5": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 13 - 1 = 12 (left: 12 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 13 - 1 = 12 (left: 12 13) -> 12 * 13 = 156 (left: 156)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "0.07065217391304347 2 2"
                }
            },
            "Step 7": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 1 + 45 = 46 (left: 13 46) -> 13 / 46 = 0.2826086956521739 (left: 0.2826086956521739) -> 0.2826086956521739 / 2 = 0.14130434782608695 -> 0.14130434782608695 * 2 = 0.2826086956521739 -> 0.14130434782608695 / 2 = 0.07065217391304347 (left: 0.07065217391304347 2 2) -> 0.07065217391304347 * 2 = 0.14130434782608694 (left: 2 0.14130434782608694)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 1 + 45 = 46 (left: 13 46) -> 13 / 46 = 0.2826086956521739 (left: 0.2826086956521739) -> 0.2826086956521739 / 2 = 0.14130434782608695 -> 0.14130434782608695 * 2 = 0.2826086956521739 -> 0.14130434782608695 / 2 = 0.07065217391304347 (left: 0.07065217391304347 2 2) -> 0.07065217391304347 * 2 = 0.14130434782608694 (left: 2 0.14130434782608694) -> 2 / 0.14130434782608694 = 14.173913043478262 (left: 14.173913043478262)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "57 * 2 = 114 (left:"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 * 9 = 45 (left: 1 45 13)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "1 5 22"
                }
            },
            "Step 1": {
                "Step": "9 + 13 = 22 (left: 1 5 22) -> 1 * 5 = 5 (left: 5 22)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 13 = 22 (left: 1 5 22) -> 1 * 5 = 5 (left: 5 22) -> 22 / 5 = 4.4 (left: 4.4 22)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 + 13 = 22 (left: 1 5 22) -> 1 * 5 = 5 (left: 5 22) -> 22 / 5 = 4.4 (left: 4.4 22) -> Input: 5.6 2.8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "57 * 2 = 114 (left:"
                }
            },
            "Step 4": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 1 = 44 (left: 44 13) -> 44 * 13 = 572 (left: 572) -> 57 * 2 = 114 (left: -> 57 + 2 = 59 (left: 59)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "4 9 13"
                }
            },
            "Step 5": {
                "Step": "5 - 1 = 4 (left: 4 9 13) -> 13 - 4 = 9 (left: 4 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 - 1 = 4 (left: 4 9 13) -> 13 - 4 = 9 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "0.07065217391304347 2 2"
                }
            },
            "Step 7": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 1 + 45 = 46 (left: 13 46) -> 13 / 46 = 0.2826086956521739 (left: 0.2826086956521739) -> 0.2826086956521739 / 2 = 0.14130434782608695 -> 0.14130434782608695 * 2 = 0.2826086956521739 -> 0.14130434782608695 / 2 = 0.07065217391304347 (left: 0.07065217391304347 2 2) -> 2 * 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "57 * 2 = 114 (left:"
                }
            },
            "Step 8": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 1 = 44 (left: 44 13) -> 44 * 13 = 572 (left: 572) -> 57 * 2 = 114 (left: -> 57 - 2 = 55 (left: 55)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "57 * 2 = 114 (left:"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 * 5 = 5 (left: 5 9 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 9 13"
                }
            },
            "Step 1": {
                "Step": "1 * 5 = 5 (left: 5 9 13) -> 5 * 9 = 45 (left: 45 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 * 5 = 5 (left: 5 9 13) -> 5 * 9 = 45 (left: 45 13) -> 45 / 13 = 3.46 (left: 3.46)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 * 5 = 5 (left: 5 9 13) -> 5 * 9 = 45 (left: 45 13) -> 45 / 13 = 3.46 (left: 3.46) -> There is only one number given, so there are no possible next steps to calculate.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "57 * 2 = 114 (left:"
                }
            },
            "Step 4": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 1 = 44 (left: 44 13) -> 44 * 13 = 572 (left: 572) -> 57 * 2 = 114 (left: -> 57 + 2 = 59 (left: 59 * 2 = 114)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 1 = 44 (left: 44 13) -> 44 * 13 = 572 (left: 572) -> 57 * 2 = 114 (left: -> 57 + 2 = 59 (left: 59 * 2 = 114) -> Possible next steps:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 1 = 44 (left: 44 13) -> 44 * 13 = 572 (left: 572) -> 57 * 2 = 114 (left: -> 57 + 2 = 59 (left: 59 * 2 = 114) -> Possible next steps: -> There are no possible next steps with the given numbers.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "0.07065217391304347 2 2"
                }
            },
            "Step 7": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 1 + 45 = 46 (left: 13 46) -> 13 / 46 = 0.2826086956521739 (left: 0.2826086956521739) -> 0.2826086956521739 / 2 = 0.14130434782608695 -> 0.14130434782608695 * 2 = 0.2826086956521739 -> 0.14130434782608695 / 2 = 0.07065217391304347 (left: 0.07065217391304347 2 2) -> 2 + 0.07065217391304347 = 2.0706521739130435 (left: 2 2.0706521739130435)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 1 + 45 = 46 (left: 13 46) -> 13 / 46 = 0.2826086956521739 (left: 0.2826086956521739) -> 0.2826086956521739 / 2 = 0.14130434782608695 -> 0.14130434782608695 * 2 = 0.2826086956521739 -> 0.14130434782608695 / 2 = 0.07065217391304347 (left: 0.07065217391304347 2 2) -> 2 + 0.07065217391304347 = 2.0706521739130435 (left: 2 2.0706521739130435) -> ",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "57 * 2 = 114 (left:"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 * 9 = 45 (left: 1 45 13)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 45 13"
                }
            },
            "Step 1": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 1 * 45 = 45 (left: 45 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 1 * 45 = 45 (left: 45 13) -> 45 + 13 = 58 (left: 58)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 1 * 45 = 45 (left: 45 13) -> 45 + 13 = 58 (left: 58) -> 5 + 8 = 13",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "57 * 2 = 114 (left:"
                }
            },
            "Step 4": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 1 = 44 (left: 44 13) -> 44 * 13 = 572 (left: 572) -> 57 * 2 = 114 (left: -> 57 * 2 = 114 (left: 114)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "0.2826086956521739 / 2 = 0.14130434782608695"
                }
            },
            "Step 5": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 1 + 45 = 46 (left: 13 46) -> 13 / 46 = 0.2826086956521739 (left: 0.2826086956521739) -> 0.2826086956521739 / 2 = 0.14130434782608695 -> 0.14130434782608695 * 2 = 0.2826086956521739",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 1 + 45 = 46 (left: 13 46) -> 13 / 46 = 0.2826086956521739 (left: 0.2826086956521739) -> 0.2826086956521739 / 2 = 0.14130434782608695 -> 0.14130434782608695 * 2 = 0.2826086956521739 -> 0.14130434782608695 / 2 = 0.07065217391304347 (left: 0.07065217391304347 2 2)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "0.07065217391304347 2 2"
                }
            },
            "Step 7": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 1 + 45 = 46 (left: 13 46) -> 13 / 46 = 0.2826086956521739 (left: 0.2826086956521739) -> 0.2826086956521739 / 2 = 0.14130434782608695 -> 0.14130434782608695 * 2 = 0.2826086956521739 -> 0.14130434782608695 / 2 = 0.07065217391304347 (left: 0.07065217391304347 2 2) -> 2 / 0.070",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 1 + 45 = 46 (left: 13 46) -> 13 / 46 = 0.2826086956521739 (left: 0.2826086956521739) -> 0.2826086956521739 / 2 = 0.14130434782608695 -> 0.14130434782608695 * 2 = 0.2826086956521739 -> 0.14130434782608695 / 2 = 0.07065217391304347 (left: 0.07065217391304347 2 2) -> 2 / 0.070 -> Division by zero is undefined.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "9 - 5 = 4 (left: 1 4 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "1 5 22"
                }
            },
            "Step 1": {
                "Step": "9 + 13 = 22 (left: 1 5 22) -> 1 * 5 = 5 (left: 5 22)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 13 = 22 (left: 1 5 22) -> 1 * 5 = 5 (left: 5 22) -> 22 / 5 = 4.4 (left: 4.4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 + 13 = 22 (left: 1 5 22) -> 1 * 5 = 5 (left: 5 22) -> 22 / 5 = 4.4 (left: 4.4) -> None. The input is a single number, so there are no possible operations that can be performed on it with another number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "57 * 2 = 114 (left:"
                }
            },
            "Step 4": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 1 = 44 (left: 44 13) -> 44 * 13 = 572 (left: 572) -> 57 * 2 = 114 (left: -> 57 * 2 = 114 (left: 114)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "1 5 22"
                }
            },
            "Step 5": {
                "Step": "9 + 13 = 22 (left: 1 5 22) -> 5 * 1 = 5 (left: 5 22)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 13 = 22 (left: 1 5 22) -> 5 * 1 = 5 (left: 5 22) -> 3 + 9 = 12 (left: 12 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "0.07065217391304347 2 2"
                }
            },
            "Step 7": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 1 + 45 = 46 (left: 13 46) -> 13 / 46 = 0.2826086956521739 (left: 0.2826086956521739) -> 0.2826086956521739 / 2 = 0.14130434782608695 -> 0.14130434782608695 * 2 = 0.2826086956521739 -> 0.14130434782608695 / 2 = 0.07065217391304347 (left: 0.07065217391304347 2 2) -> 2 * 2 = 4 (left: 4 2 2)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 1 + 45 = 46 (left: 13 46) -> 13 / 46 = 0.2826086956521739 (left: 0.2826086956521739) -> 0.2826086956521739 / 2 = 0.14130434782608695 -> 0.14130434782608695 * 2 = 0.2826086956521739 -> 0.14130434782608695 / 2 = 0.07065217391304347 (left: 0.07065217391304347 2 2) -> 2 * 2 = 4 (left: 4 2 2) -> 4 / 2 = 2 (left: 2 2)",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "1 * 5 = 5 (left: 5 9 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 9 13"
                }
            },
            "Step 1": {
                "Step": "1 * 5 = 5 (left: 5 9 13) -> Input: 3 7 5 12",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 * 5 = 5 (left: 5 9 13) -> Input: 3 7 5 12 -> 7 - 3 = 4 (left: 4 5 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 * 5 = 5 (left: 5 9 13) -> Input: 3 7 5 12 -> 7 - 3 = 4 (left: 4 5 12) -> 4 + 5 = 9 (left: 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "57 * 2 = 114 (left:"
                }
            },
            "Step 4": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 1 = 44 (left: 44 13) -> 44 * 13 = 572 (left: 572) -> 57 * 2 = 114 (left: -> 57 - 2 = 55 (left: 55)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "5 9 "
                }
            },
            "Step 5": {
                "Step": "9 / 1 = 9 (left: 5 9  -> 6 / 3 = 2 (left: 2 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 / 1 = 9 (left: 5 9  -> 6 / 3 = 2 (left: 2 9) -> Input: 3 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "0.07065217391304347 2 2"
                }
            },
            "Step 7": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 1 + 45 = 46 (left: 13 46) -> 13 / 46 = 0.2826086956521739 (left: 0.2826086956521739) -> 0.2826086956521739 / 2 = 0.14130434782608695 -> 0.14130434782608695 * 2 = 0.2826086956521739 -> 0.14130434782608695 / 2 = 0.07065217391304347 (left: 0.07065217391304347 2 2) -> 0.07065217391304347 * 2 = 0.14130434782608694 (left: 0.14130434782608694 2)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 1 + 45 = 46 (left: 13 46) -> 13 / 46 = 0.2826086956521739 (left: 0.2826086956521739) -> 0.2826086956521739 / 2 = 0.14130434782608695 -> 0.14130434782608695 * 2 = 0.2826086956521739 -> 0.14130434782608695 / 2 = 0.07065217391304347 (left: 0.07065217391304347 2 2) -> 0.07065217391304347 * 2 = 0.14130434782608694 (left: 0.14130434782608694 2) -> 0.14130434782608694 + 2 = 2.141304347826087 (left: 2.141304347826087)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "There are no possible next steps with the input 17."
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "9 / 1 = 9 (left: 5 9 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9 13"
                }
            },
            "Step 1": {
                "Step": "5 - 1 = 4 (left: 4 9 13) -> 13 - 9 = 4 (left: 4 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 - 1 = 4 (left: 4 9 13) -> 13 - 9 = 4 (left: 4 13) -> 4 + 13 = 17 (left: 17)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 - 1 = 4 (left: 4 9 13) -> 13 - 9 = 4 (left: 4 13) -> 4 + 13 = 17 (left: 17) -> There are no possible next steps with the input 17.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "57 * 2 = 114 (left:"
                }
            },
            "Step 4": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 1 = 44 (left: 44 13) -> 44 * 13 = 572 (left: 572) -> 57 * 2 = 114 (left: -> 57 / 2 = 28.5 (left: 28.5 2 114)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 1 = 44 (left: 44 13) -> 44 * 13 = 572 (left: 572) -> 57 * 2 = 114 (left: -> 57 / 2 = 28.5 (left: 28.5 2 114) -> 114 - 28.5 = 85.5",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 1 = 44 (left: 44 13) -> 44 * 13 = 572 (left: 572) -> 57 * 2 = 114 (left: -> 57 / 2 = 28.5 (left: 28.5 2 114) -> 114 - 28.5 = 85.5 -> 114 / 28.5 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "0.07065217391304347 2 2"
                }
            },
            "Step 7": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 1 + 45 = 46 (left: 13 46) -> 13 / 46 = 0.2826086956521739 (left: 0.2826086956521739) -> 0.2826086956521739 / 2 = 0.14130434782608695 -> 0.14130434782608695 * 2 = 0.2826086956521739 -> 0.14130434782608695 / 2 = 0.07065217391304347 (left: 0.07065217391304347 2 2) -> 0.07065217391304347 * 2 = 0.14130434782608694 (left: 2 0.14130434782608694)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 1 + 45 = 46 (left: 13 46) -> 13 / 46 = 0.2826086956521739 (left: 0.2826086956521739) -> 0.2826086956521739 / 2 = 0.14130434782608695 -> 0.14130434782608695 * 2 = 0.2826086956521739 -> 0.14130434782608695 / 2 = 0.07065217391304347 (left: 0.07065217391304347 2 2) -> 0.07065217391304347 * 2 = 0.14130434782608694 (left: 2 0.14130434782608694) -> 2 + 0.14130434782608694 = 2.141304347826087 (left: 0.14130434782608694 2.141304347826087)",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "9 + 13 = 22 (left: 1 5 22)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 45 13"
                }
            },
            "Step 1": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 1 = 44 (left: 44 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 1 = 44 (left: 44 13) -> 44 * 13 = 572 (left: 572)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 1 = 44 (left: 44 13) -> 44 * 13 = 572 (left: 572) -> 572 + 5 = 577 (left: 7 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "57 * 2 = 114 (left:"
                }
            },
            "Step 4": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 1 = 44 (left: 44 13) -> 44 * 13 = 572 (left: 572) -> 57 * 2 = 114 (left: -> 57 + 2 = 59 (left: 59)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "1 4 13"
                }
            },
            "Step 5": {
                "Step": "9 - 5 = 4 (left: 1 4 13) -> 13 - 4 = 9 (left: 1 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 5 = 4 (left: 1 4 13) -> 13 - 4 = 9 (left: 1 9) -> 1 * 9 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "0.07065217391304347 2 2"
                }
            },
            "Step 7": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 1 + 45 = 46 (left: 13 46) -> 13 / 46 = 0.2826086956521739 (left: 0.2826086956521739) -> 0.2826086956521739 / 2 = 0.14130434782608695 -> 0.14130434782608695 * 2 = 0.2826086956521739 -> 0.14130434782608695 / 2 = 0.07065217391304347 (left: 0.07065217391304347 2 2) -> 2 * 2 = 4 (left: 0.07065217391304347 4 2)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 1 + 45 = 46 (left: 13 46) -> 13 / 46 = 0.2826086956521739 (left: 0.2826086956521739) -> 0.2826086956521739 / 2 = 0.14130434782608695 -> 0.14130434782608695 * 2 = 0.2826086956521739 -> 0.14130434782608695 / 2 = 0.07065217391304347 (left: 0.07065217391304347 2 2) -> 2 * 2 = 4 (left: 0.07065217391304347 4 2) -> 4 * 2 = 8 (left: 0.07065217391304347 8)",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "5 - 1 = 4 (left: 4 9 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 45 13"
                }
            },
            "Step 1": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 1 = 44 (left: 44 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 1 = 44 (left: 44 13) -> 44 * 13 = 572 (left: 572)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 1 = 44 (left: 44 13) -> 44 * 13 = 572 (left: 572) -> 57 * 2 = 114 (left:",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "57 * 2 = 114 (left:"
                }
            },
            "Step 4": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 1 = 44 (left: 44 13) -> 44 * 13 = 572 (left: 572) -> 57 * 2 = 114 (left: -> Possible next steps:",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 1 = 44 (left: 44 13) -> 44 * 13 = 572 (left: 572) -> 57 * 2 = 114 (left: -> Possible next steps: -> There are no possible next steps with the current input.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 1 = 44 (left: 44 13) -> 44 * 13 = 572 (left: 572) -> 57 * 2 = 114 (left: -> Possible next steps: -> There are no possible next steps with the current input. -> None",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "57 * 2 = 114 (left:"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "0.07065217391304347 2 2"
                }
            },
            "Step 7": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 1 + 45 = 46 (left: 13 46) -> 13 / 46 = 0.2826086956521739 (left: 0.2826086956521739) -> 0.2826086956521739 / 2 = 0.14130434782608695 -> 0.14130434782608695 * 2 = 0.2826086956521739 -> 0.14130434782608695 / 2 = 0.07065217391304347 (left: 0.07065217391304347 2 2) -> 2 + 0.07065217391304347 = 2.0706521739130435 (left: 2 2.0706521739130435 2)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 1 + 45 = 46 (left: 13 46) -> 13 / 46 = 0.2826086956521739 (left: 0.2826086956521739) -> 0.2826086956521739 / 2 = 0.14130434782608695 -> 0.14130434782608695 * 2 = 0.2826086956521739 -> 0.14130434782608695 / 2 = 0.07065217391304347 (left: 0.07065217391304347 2 2) -> 2 + 0.07065217391304347 = 2.0706521739130435 (left: 2 2.0706521739130435 2) -> 2 * 2.0706521739130435 = 4.141304347826087 (left: 4.141304347826087 2)",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "5 / 1 = 5 (left: 5 9 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 45 13"
                }
            },
            "Step 1": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 1 + 45 = 46 (left: 13 46)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 1 + 45 = 46 (left: 13 46) -> 13 / 46 = 0.2826086956521739 (left: 0.2826086956521739)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 1 + 45 = 46 (left: 13 46) -> 13 / 46 = 0.2826086956521739 (left: 0.2826086956521739) -> 0.2826086956521739 / 2 = 0.14130434782608695",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "57 * 2 = 114 (left:"
                }
            },
            "Step 4": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 1 = 44 (left: 44 13) -> 44 * 13 = 572 (left: 572) -> 57 * 2 = 114 (left: -> 57 * 2 = 114 (left: 114)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "5 9 13"
                }
            },
            "Step 5": {
                "Step": "1 * 5 = 5 (left: 5 9 13) -> 5 * 9 = 45 (left: 45 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 * 5 = 5 (left: 5 9 13) -> 5 * 9 = 45 (left: 45 13) -> 45 / 13 = 3.4615 (left: 3.4615)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "0.07065217391304347 2 2"
                }
            },
            "Step 7": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 1 + 45 = 46 (left: 13 46) -> 13 / 46 = 0.2826086956521739 (left: 0.2826086956521739) -> 0.2826086956521739 / 2 = 0.14130434782608695 -> 0.14130434782608695 * 2 = 0.2826086956521739 -> 0.14130434782608695 / 2 = 0.07065217391304347 (left: 0.07065217391304347 2 2) -> 0.07065217391304347 * 2 = 0.14130434782608694 (left: 0.14130434782608694 2)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 1 + 45 = 46 (left: 13 46) -> 13 / 46 = 0.2826086956521739 (left: 0.2826086956521739) -> 0.2826086956521739 / 2 = 0.14130434782608695 -> 0.14130434782608695 * 2 = 0.2826086956521739 -> 0.14130434782608695 / 2 = 0.07065217391304347 (left: 0.07065217391304347 2 2) -> 0.07065217391304347 * 2 = 0.14130434782608694 (left: 0.14130434782608694 2) -> 0.14130434782608694 * 2 = 0.2826086956521739 (left: 0.2826086956521739)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "9 12"
                }
            }
        },
        "Input": "1 5 9 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "921": {
        "puzzle": "5 6 7 13",
        "Agent 0": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 5 13 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "7 11 13"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 7 11 13) -> 7 / 11 = 0.636363",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 7 11 13) -> 7 / 11 = 0.636363 -> Possible next steps:",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 7 11 13) -> 7 / 11 = 0.636363 -> Possible next steps: -> There are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "3 7 3"
                }
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 5 8 -> 8 - 5 = 3 (left: 3 4 3) -> 3 + 4 = 7 (left: 3 7 3) -> Input: 5 5",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 5 8 -> 8 - 5 = 3 (left: 3 4 3) -> 3 + 4 = 7 (left: 3 7 3) -> Input: 5 5 -> 5 / 5 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "66 + 2 = 68"
                }
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 5 + 6 = 11 (left: 6 11) -> 6 * 11 = 66 (left: 66) -> 66 + 2 = 68 -> 66 * 2 = 132 (left: 132 2 68)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps since all possible operations have been performed."
                }
            },
            "Step 7": {
                "Step": "5 + 6 = 11 (left: 7 11 13) -> 7 / 11 = 0.636363 -> Possible next steps: -> There are no possible next steps. -> There are no possible next steps. -> There are no possible next steps since all possible operations have been performed. -> There are no possible next steps since all possible operations have been performed.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 6 = 11 (left: 7 11 13) -> 7 / 11 = 0.636363 -> Possible next steps: -> There are no possible next steps. -> There are no possible next steps. -> There are no possible next steps since all possible operations have been performed. -> There are no possible next steps since all possible operations have been performed. -> There are no possible next steps since all possible operations have been performed.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 5 13 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 5 + 6 = 11 (left: 6 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 5 + 6 = 11 (left: 6 11) -> 6 * 11 = 66 (left: 66)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 5 + 6 = 11 (left: 6 11) -> 6 * 11 = 66 (left: 66) -> 66 + 2 = 68",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "6 4"
                }
            },
            "Step 4": {
                "Step": "6 + 7 = 13 (left: 5 13 13) -> 5 + 13 = 18 (left: 13 18) -> 13 * 18 = 234 (left: 234) -> 2 * 3 = 6 (left: 6 4) -> 6 * 4 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "1."
                }
            },
            "Step 5": {
                "Step": "6 / 5 = 1.2 (left: 1. -> 1 + 1 = 2",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 5 = 1.2 (left: 1. -> 1 + 1 = 2 -> 1 + 1 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps since all possible operations have been performed."
                }
            },
            "Step 7": {
                "Step": "5 + 6 = 11 (left: 7 11 13) -> 7 / 11 = 0.636363 -> Possible next steps: -> There are no possible next steps. -> There are no possible next steps. -> There are no possible next steps since all possible operations have been performed. -> There are no possible next steps since all possible operations have been performed.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 6 = 11 (left: 7 11 13) -> 7 / 11 = 0.636363 -> Possible next steps: -> There are no possible next steps. -> There are no possible next steps. -> There are no possible next steps since all possible operations have been performed. -> There are no possible next steps since all possible operations have been performed. -> There are no possible next steps since all possible operations have been performed.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 7 = 6 (left: 5 6 6)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "5 13 13"
                }
            },
            "Step 1": {
                "Step": "6 + 7 = 13 (left: 5 13 13) -> 5 + 13 = 18 (left: 13 18)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 7 = 13 (left: 5 13 13) -> 5 + 13 = 18 (left: 13 18) -> 13 * 18 = 234 (left: 234)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 7 = 13 (left: 5 13 13) -> 5 + 13 = 18 (left: 13 18) -> 13 * 18 = 234 (left: 234) -> 2 * 3 = 6 (left: 6 4)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "0 12"
                }
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 7 7 -> 3 * 4 = 12 (left: 7 7 12) -> 7 - 7 = 0 (left: 0 12) -> 12 - 0 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There are no possible next steps."
                }
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 7 11 13) -> 7 / 11 = 0.636363 -> Possible next steps: -> There are no possible next steps. -> There are no possible next steps.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 7 11 13) -> 7 / 11 = 0.636363 -> Possible next steps: -> There are no possible next steps. -> There are no possible next steps. -> There are no possible next steps since all possible operations have been performed.",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps since all possible operations have been performed."
                }
            },
            "Step 7": {
                "Step": "5 + 6 = 11 (left: 7 11 13) -> 7 / 11 = 0.636363 -> Possible next steps: -> There are no possible next steps. -> There are no possible next steps. -> There are no possible next steps since all possible operations have been performed. -> There are no possible next steps since all possible operations have been performed.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 6 = 11 (left: 7 11 13) -> 7 / 11 = 0.636363 -> Possible next steps: -> There are no possible next steps. -> There are no possible next steps. -> There are no possible next steps since all possible operations have been performed. -> There are no possible next steps since all possible operations have been performed. -> None",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "0 12"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 5 13 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 5 8",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 5 8 -> 8 - 5 = 3 (left: 3 4 3)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 5 8 -> 8 - 5 = 3 (left: 3 4 3) -> 3 + 4 = 7 (left: 3 7 3)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "0 12"
                }
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 7 7 -> 3 * 4 = 12 (left: 7 7 12) -> 7 - 7 = 0 (left: 0 12) -> 0 / 12 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "5 13 13"
                }
            },
            "Step 5": {
                "Step": "6 + 7 = 13 (left: 5 13 13) -> 13 / 5 = 2.6 (left: 2.6 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 7 = 13 (left: 5 13 13) -> 13 / 5 = 2.6 (left: 2.6 13) -> 3 + 9 = 12 (left: 12 27)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps since all possible operations have been performed."
                }
            },
            "Step 7": {
                "Step": "5 + 6 = 11 (left: 7 11 13) -> 7 / 11 = 0.636363 -> Possible next steps: -> There are no possible next steps. -> There are no possible next steps. -> There are no possible next steps since all possible operations have been performed. -> There are no possible next steps since all possible operations have been performed.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 6 = 11 (left: 7 11 13) -> 7 / 11 = 0.636363 -> Possible next steps: -> There are no possible next steps. -> There are no possible next steps. -> There are no possible next steps since all possible operations have been performed. -> There are no possible next steps since all possible operations have been performed. -> None",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There are no possible next steps."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 * 6 = 30 (left: 7 13 30)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 3 + 9 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 3 + 9 =  -> 3 + 9 = 12",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 3 + 9 =  -> 3 + 9 = 12 -> 9 - 3 = 6 (left: 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "6 4"
                }
            },
            "Step 4": {
                "Step": "6 + 7 = 13 (left: 5 13 13) -> 5 + 13 = 18 (left: 13 18) -> 13 * 18 = 234 (left: 234) -> 2 * 3 = 6 (left: 6 4) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "5 13 13"
                }
            },
            "Step 5": {
                "Step": "6 + 7 = 13 (left: 5 13 13) -> 5 + 13 = 18 (left: 13 18)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 7 = 13 (left: 5 13 13) -> 5 + 13 = 18 (left: 13 18) -> 13 - 18 = -5 (left: -5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps since all possible operations have been performed."
                }
            },
            "Step 7": {
                "Step": "5 + 6 = 11 (left: 7 11 13) -> 7 / 11 = 0.636363 -> Possible next steps: -> There are no possible next steps. -> There are no possible next steps. -> There are no possible next steps since all possible operations have been performed. -> There are no possible next steps since all possible operations have been performed.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 6 = 11 (left: 7 11 13) -> 7 / 11 = 0.636363 -> Possible next steps: -> There are no possible next steps. -> There are no possible next steps. -> There are no possible next steps since all possible operations have been performed. -> There are no possible next steps since all possible operations have been performed. -> There are no possible next steps since all possible operations have been performed.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "5 * 6 = 30 (left: 7 13 30)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 / 5 = 1.2 (left: 1.2 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 / 5 = 1.2 (left: 1.2 6) -> 6 - 1.2 = 4.8 (left: 4.8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 / 5 = 1.2 (left: 1.2 6) -> 6 - 1.2 = 4.8 (left: 4.8) -> 4 + 8 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "5 13 13"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "3 7 3"
                }
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 5 8 -> 8 - 5 = 3 (left: 3 4 3) -> 3 + 4 = 7 (left: 3 7 3) -> 7 / 3 = 2 (left: 2 3)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 5 8 -> 8 - 5 = 3 (left: 3 4 3) -> 3 + 4 = 7 (left: 3 7 3) -> 7 / 3 = 2 (left: 2 3) -> 2 * 3 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "5 6 "
                }
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 5 6  -> 5 + 6 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps since all possible operations have been performed."
                }
            },
            "Step 7": {
                "Step": "5 + 6 = 11 (left: 7 11 13) -> 7 / 11 = 0.636363 -> Possible next steps: -> There are no possible next steps. -> There are no possible next steps. -> There are no possible next steps since all possible operations have been performed. -> There are no possible next steps since all possible operations have been performed.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 6 = 11 (left: 7 11 13) -> 7 / 11 = 0.636363 -> Possible next steps: -> There are no possible next steps. -> There are no possible next steps. -> There are no possible next steps since all possible operations have been performed. -> There are no possible next steps since all possible operations have been performed. -> There are no possible next steps since all possible operations have been performed.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 7 11 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 5 * 6 = 30 (left: 6 30)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 5 * 6 = 30 (left: 6 30) -> 30 / 6 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 5 * 6 = 30 (left: 6 30) -> 30 / 6 = 5 (left: 5) -> There are no possible next steps with just the number 5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "6 4"
                }
            },
            "Step 4": {
                "Step": "6 + 7 = 13 (left: 5 13 13) -> 5 + 13 = 18 (left: 13 18) -> 13 * 18 = 234 (left: 234) -> 2 * 3 = 6 (left: 6 4) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "6 4"
                }
            },
            "Step 5": {
                "Step": "6 + 7 = 13 (left: 5 13 13) -> 5 + 13 = 18 (left: 13 18) -> 13 * 18 = 234 (left: 234) -> 2 * 3 = 6 (left: 6 4) -> 6 - 4 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "5 13 13"
                }
            },
            "Step 6": {
                "Step": "6 + 7 = 13 (left: 5 13 13) -> 13 - 5 = 8 (left: 8 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps since all possible operations have been performed."
                }
            },
            "Step 7": {
                "Step": "5 + 6 = 11 (left: 7 11 13) -> 7 / 11 = 0.636363 -> Possible next steps: -> There are no possible next steps. -> There are no possible next steps. -> There are no possible next steps since all possible operations have been performed. -> There are no possible next steps since all possible operations have been performed.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 6 = 11 (left: 7 11 13) -> 7 / 11 = 0.636363 -> Possible next steps: -> There are no possible next steps. -> There are no possible next steps. -> There are no possible next steps since all possible operations have been performed. -> There are no possible next steps since all possible operations have been performed. -> There are no possible next steps since all possible operations have been performed.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "13 - 7 = 6 (left: 5 6 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "7 11 13"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 7 11 13) -> 11 + 13 = 24 (left: 7 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 7 11 13) -> 11 + 13 = 24 (left: 7 24) -> 24 - 7 = 17 (left: 17)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 7 11 13) -> 11 + 13 = 24 (left: 7 24) -> 24 - 7 = 17 (left: 17) -> 17 - 2 = 15 (left: 2)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "5 13 13"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "6 4"
                }
            },
            "Step 4": {
                "Step": "6 + 7 = 13 (left: 5 13 13) -> 5 + 13 = 18 (left: 13 18) -> 13 * 18 = 234 (left: 234) -> 2 * 3 = 6 (left: 6 4) -> 6 * 4 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "5 13 13"
                }
            },
            "Step 5": {
                "Step": "6 + 7 = 13 (left: 5 13 13) -> 13 - 5 = 8 (left: 8 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 7 = 13 (left: 5 13 13) -> 13 - 5 = 8 (left: 8 13) -> 8 - 13 = -5 (left: -5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps since all possible operations have been performed."
                }
            },
            "Step 7": {
                "Step": "5 + 6 = 11 (left: 7 11 13) -> 7 / 11 = 0.636363 -> Possible next steps: -> There are no possible next steps. -> There are no possible next steps. -> There are no possible next steps since all possible operations have been performed. -> There are no possible next steps since all possible operations have been performed.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 6 = 11 (left: 7 11 13) -> 7 / 11 = 0.636363 -> Possible next steps: -> There are no possible next steps. -> There are no possible next steps. -> There are no possible next steps since all possible operations have been performed. -> There are no possible next steps since all possible operations have been performed. -> There are no possible next steps since all possible operations have been performed.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 7 11 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 7 7",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 7 7 -> 3 * 4 = 12 (left: 7 7 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 7 7 -> 3 * 4 = 12 (left: 7 7 12) -> 7 - 7 = 0 (left: 0 12)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "6 4"
                }
            },
            "Step 4": {
                "Step": "6 + 7 = 13 (left: 5 13 13) -> 5 + 13 = 18 (left: 13 18) -> 13 * 18 = 234 (left: 234) -> 2 * 3 = 6 (left: 6 4) -> 6 - 4 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "5 13 13"
                }
            },
            "Step 5": {
                "Step": "6 + 7 = 13 (left: 5 13 13) -> 13 / 5 = 2.6 (left: 2.6 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 7 = 13 (left: 5 13 13) -> 13 / 5 = 2.6 (left: 2.6 13) -> 2.6 + 13 = 15.6 (left: 15.6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps since all possible operations have been performed."
                }
            },
            "Step 7": {
                "Step": "5 + 6 = 11 (left: 7 11 13) -> 7 / 11 = 0.636363 -> Possible next steps: -> There are no possible next steps. -> There are no possible next steps. -> There are no possible next steps since all possible operations have been performed. -> There are no possible next steps since all possible operations have been performed.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 6 = 11 (left: 7 11 13) -> 7 / 11 = 0.636363 -> Possible next steps: -> There are no possible next steps. -> There are no possible next steps. -> There are no possible next steps since all possible operations have been performed. -> There are no possible next steps since all possible operations have been performed. -> There are no possible next steps since all possible operations have been performed.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "6 / 5 = 1.2 (left: 1.",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 + 5 = 11 (left: 6 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 + 5 = 11 (left: 6 11) -> 6 + 11 = 17 (left: 17)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 + 5 = 11 (left: 6 11) -> 6 + 11 = 17 (left: 17) -> 17 + 8 = 25 (left: 8 25)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "0 12"
                }
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 7 7 -> 3 * 4 = 12 (left: 7 7 12) -> 7 - 7 = 0 (left: 0 12) -> 0 + 12 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "5 13 13"
                }
            },
            "Step 5": {
                "Step": "6 + 7 = 13 (left: 5 13 13) -> 13 - 5 = 8 (left: 8 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 7 = 13 (left: 5 13 13) -> 13 - 5 = 8 (left: 8 13) -> 8 * 13 = 104 (left: 104)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps since all possible operations have been performed."
                }
            },
            "Step 7": {
                "Step": "5 + 6 = 11 (left: 7 11 13) -> 7 / 11 = 0.636363 -> Possible next steps: -> There are no possible next steps. -> There are no possible next steps. -> There are no possible next steps since all possible operations have been performed. -> None",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "12 27"
                }
            },
            "Step 8": {
                "Step": "6 + 7 = 13 (left: 5 13 13) -> 13 / 5 = 2.6 (left: 2.6 13) -> 3 + 9 = 12 (left: 12 27) -> 12 * 27 = 324 (left: 324)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "3 7 3"
                }
            }
        },
        "Input": "5 6 7 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "922": {
        "puzzle": "5 5 8 10",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 8 = 2 (left: 2 8 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 8 10"
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 10 - 5 = 5 (left: 5 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 10 - 5 = 5 (left: 5 10) -> 10 / 5 = 2 (left: 2 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 10 - 5 = 5 (left: 5 10) -> 10 / 5 = 2 (left: 2 10) -> 2 + 10 = 12",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "There is only one possible next step:"
                }
            },
            "Step 4": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 8 - 5 = 3 (left: 3 10) -> 3 * 10 = 30 (left: 30) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 8 - 5 = 3 (left: 3 10) -> 3 * 10 = 30 (left: 30) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16) -> 2 + 16 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "0 8 10"
                }
            },
            "Step 6": {
                "Step": "5 - 5 = 0 (left: 0 8 10) -> 8 * 10 = 80 (left: 0 80)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "1.5 14"
                }
            },
            "Step 7": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 8 - 5 = 3 (left: 3 10) -> 3 * 10 = 30 (left: 30) -> There is only one possible next step: -> 8 - 2 = 6 (left: 2 6 14) -> Input: 8 12 14 -> 12 / 8 = 1.5 (left: 1.5 14) -> 14 / 1.5 = 9.33333 (left: 9.33333)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "There are no possible next steps with just the input of 17."
                }
            },
            "Step 8": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 5 + 2 = 7 (left: 7 10) -> 7 + 10 = 17 (left: 17) -> There are no possible next steps with just the input of 17. -> There are no possible next steps with just the input of 17.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 - 8 = 2 (left: 5 2 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 8 10"
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 10 / 5 = 2 (left: 2 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 10 / 5 = 2 (left: 2 10) -> 2 * 10 = 20 (left: 20)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 10 / 5 = 2 (left: 2 10) -> 2 * 10 = 20 (left: 20) -> There are no possible next steps with the input of 20.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "There is only one possible next step:"
                }
            },
            "Step 4": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 8 - 5 = 3 (left: 3 10) -> 3 * 10 = 30 (left: 30) -> There is only one possible next step: -> 8 + 4 = 12 (left: 2 12 14)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 8 - 5 = 3 (left: 3 10) -> 3 * 10 = 30 (left: 30) -> There is only one possible next step: -> 8 + 4 = 12 (left: 2 12 14) -> 12 / 2 = 6 (left: 6 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 8 - 5 = 3 (left: 3 10) -> 3 * 10 = 30 (left: 30) -> There is only one possible next step: -> 8 + 4 = 12 (left: 2 12 14) -> 12 / 2 = 6 (left: 6 14) -> 14 - 6 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "There are no possible next steps with the input of 20."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "1.5 14"
                }
            },
            "Step 7": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 8 - 5 = 3 (left: 3 10) -> 3 * 10 = 30 (left: 30) -> There is only one possible next step: -> 8 - 2 = 6 (left: 2 6 14) -> Input: 8 12 14 -> 12 / 8 = 1.5 (left: 1.5 14) -> 1.5 * 14 = 21 (left: 21)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "There is only one possible next step:"
                }
            },
            "Step 8": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 8 - 5 = 3 (left: 3 10) -> 3 * 10 = 30 (left: 30) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 5 = 5 (left: 5 8 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "0 8 10"
                }
            },
            "Step 1": {
                "Step": "5 - 5 = 0 (left: 0 8 10) -> 8 + 0 = 8 (left: 8 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 - 5 = 0 (left: 0 8 10) -> 8 + 0 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 - 5 = 0 (left: 0 8 10) -> 8 + 0 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> None",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "5 8 10"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "There is only one possible next step:"
                }
            },
            "Step 4": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 8 - 5 = 3 (left: 3 10) -> 3 * 10 = 30 (left: 30) -> There is only one possible next step: -> 7 * 8 = 56 (left: 2 8 56)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 8 - 5 = 3 (left: 3 10) -> 3 * 10 = 30 (left: 30) -> There is only one possible next step: -> 7 * 8 = 56 (left: 2 8 56) -> 56 - 8 = 48 (left:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 8 - 5 = 3 (left: 3 10) -> 3 * 10 = 30 (left: 30) -> There is only one possible next step: -> 7 * 8 = 56 (left: 2 8 56) -> 56 - 8 = 48 (left: -> 56 * 8 = 448 (left: 448)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "There is only one possible next step:"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "8 10"
                }
            },
            "Step 7": {
                "Step": "10 - 8 = 2 (left: 2 8 10) -> 10 - 2 = 8 (left: 8 10) -> Possible next steps",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 8 = 2 (left: 2 8 10) -> 10 - 2 = 8 (left: 8 10) -> Possible next steps -> 15 / 8 = 1.875 (left: 1.875)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "There are no possible next steps with just the input of 17."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 - 5 = 5 (left: 5 8 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "5 8 10"
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 8 - 5 = 3 (left: 3 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 8 - 5 = 3 (left: 3 10) -> 10 / 3 \u2248 3.33 (left: 3 3)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 8 - 5 = 3 (left: 3 10) -> 10 / 3 \u2248 3.33 (left: 3 3) -> 3 * 3 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "5 8 10"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "There is only one possible next step:"
                }
            },
            "Step 4": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 8 - 5 = 3 (left: 3 10) -> 3 * 10 = 30 (left: 30) -> There is only one possible next step: -> 8 - 2 = 6 (left: 2 6 14)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 8 - 5 = 3 (left: 3 10) -> 3 * 10 = 30 (left: 30) -> There is only one possible next step: -> 8 - 2 = 6 (left: 2 6 14) -> Input: 8 12 14",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 8 - 5 = 3 (left: 3 10) -> 3 * 10 = 30 (left: 30) -> There is only one possible next step: -> 8 - 2 = 6 (left: 2 6 14) -> Input: 8 12 14 -> 12 / 8 = 1.5 (left: 1.5 14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "1.5 14"
                }
            },
            "Step 7": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 8 - 5 = 3 (left: 3 10) -> 3 * 10 = 30 (left: 30) -> There is only one possible next step: -> 8 - 2 = 6 (left: 2 6 14) -> Input: 8 12 14 -> 12 / 8 = 1.5 (left: 1.5 14) -> 1.5 / 14 = 0.107 (left: 0.107)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "There are no possible next steps with just the input of 17."
                }
            },
            "Step 8": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 5 + 2 = 7 (left: 7 10) -> 7 + 10 = 17 (left: 17) -> There are no possible next steps with just the input of 17. -> There are no possible next steps with just the input of 17.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 - 5 = 0 (left: 0 8 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "5 2 10"
                }
            },
            "Step 1": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 5 + 2 = 7 (left: 7 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 5 + 2 = 7 (left: 7 10) -> 7 + 10 = 17 (left: 17)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 5 + 2 = 7 (left: 7 10) -> 7 + 10 = 17 (left: 17) -> There are no possible next steps with just the input of 17.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "There is only one possible next step:"
                }
            },
            "Step 4": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 8 - 5 = 3 (left: 3 10) -> 3 * 10 = 30 (left: 30) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 8 - 5 = 3 (left: 3 10) -> 3 * 10 = 30 (left: 30) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16) -> 2 + 16 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "2 8 10"
                }
            },
            "Step 6": {
                "Step": "10 - 8 = 2 (left: 2 8 10) -> 10 - 2 = 8 (left: 8 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "8 10"
                }
            },
            "Step 7": {
                "Step": "10 - 8 = 2 (left: 2 8 10) -> 10 - 2 = 8 (left: 8 10) -> 10 / 8 = 1.25 (left: 1.25)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 8 = 2 (left: 2 8 10) -> 10 - 2 = 8 (left: 8 10) -> 10 / 8 = 1.25 (left: 1.25) -> 1.25 + 8 = 9.25 (left: 8)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "There is only one possible next step:"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "5 * 10 = 50 (left: 5 8 50)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 8 10"
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 8 / 5 = 1.6 (left: 1.6 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 8 / 5 = 1.6 (left: 1.6 10) -> 10 / 1.6 = 6.25 (left: 1.6 6.25)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 8 / 5 = 1.6 (left: 1.6 10) -> 10 / 1.6 = 6.25 (left: 1.6 6.25) -> 6.25 - 1.6 = 4.65 (left: 4.65)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "5 8 50"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "There is only one possible next step:"
                }
            },
            "Step 4": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 8 - 5 = 3 (left: 3 10) -> 3 * 10 = 30 (left: 30) -> There is only one possible next step: -> 8 * 8 = 64 (left: 2 64 14)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 8 - 5 = 3 (left: 3 10) -> 3 * 10 = 30 (left: 30) -> There is only one possible next step: -> 8 * 8 = 64 (left: 2 64 14) -> 64 / 2 = 32 (left: 14 32)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 8 - 5 = 3 (left: 3 10) -> 3 * 10 = 30 (left: 30) -> There is only one possible next step: -> 8 * 8 = 64 (left: 2 64 14) -> 64 / 2 = 32 (left: 14 32) -> 14 * 32 = 448 (left: 448)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "There are no possible next steps with just the input of 17."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "8 10"
                }
            },
            "Step 7": {
                "Step": "10 - 8 = 2 (left: 2 8 10) -> 10 - 2 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 8 = 2 (left: 2 8 10) -> 10 - 2 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "8 + 2 = 10 (left: 10 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 8 10"
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 8 - 5 = 3 (left: 3 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 8 - 5 = 3 (left: 3 10) -> 3 * 10 = 30 (left: 30)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 8 - 5 = 3 (left: 3 10) -> 3 * 10 = 30 (left: 30) -> 30 + 8 = 38 (left: 8)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "8 10 10"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "5 8 10"
                }
            },
            "Step 4": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 10 / 5 = 2 (left: 2 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 10 / 5 = 2 (left: 2 10) -> 2 * 10 = 20 (left: 20)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 10 / 5 = 2 (left: 2 10) -> 2 * 10 = 20 (left: 20) -> 20 - 8 = 12 (left: 8)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "There are no possible next steps with just the input of 17."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "8 10"
                }
            },
            "Step 7": {
                "Step": "10 - 8 = 2 (left: 2 8 10) -> 10 - 2 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 8 = 2 (left: 2 8 10) -> 10 - 2 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> There are no possible next steps as there are no other numbers provided to perform operations with.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "5 + 5 = 10 (left: 8 10 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 8 10"
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 8 - 5 = 3 (left: 3 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 8 - 5 = 3 (left: 3 10) -> 3 * 10 = 30 (left: 30)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 8 - 5 = 3 (left: 3 10) -> 3 * 10 = 30 (left: 30) -> There is only one possible next step:",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "5 8 10"
                }
            },
            "Step 4": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> Input: 3 5 6 9",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> Input: 3 5 6 9 -> 9 - 5 = 4 (left: 3 4 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> Input: 3 5 6 9 -> 9 - 5 = 4 (left: 3 4 6) -> 6 / 4 = 1.5 (left: 1.5 6)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "1.5 14"
                }
            },
            "Step 7": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 8 - 5 = 3 (left: 3 10) -> 3 * 10 = 30 (left: 30) -> There is only one possible next step: -> 8 - 2 = 6 (left: 2 6 14) -> Input: 8 12 14 -> 12 / 8 = 1.5 (left: 1.5 14) -> 1.5 * 14 = 21 (left: 21)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "1.5 6"
                }
            },
            "Step 8": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> Input: 3 5 6 9 -> 9 - 5 = 4 (left: 3 4 6) -> 6 / 4 = 1.5 (left: 1.5 6) -> 6 - 1.5 = 4.5 (left: 4.5)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "1.5 6"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "5 2 10"
                }
            },
            "Step 1": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 5 * 2 = 10 (left: 10 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 5 * 2 = 10 (left: 10 10) -> 10 + 10 = 20 (left: 20) ",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 5 * 2 = 10 (left: 10 10) -> 10 + 10 = 20 (left: 20)  -> 20 + 8 = 28 (left: 8)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": ""
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "5 8 50"
                }
            },
            "Step 4": {
                "Step": "5 * 10 = 50 (left: 5 8 50) -> 8 * 5 = 40 (left: 40 50)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 10 = 50 (left: 5 8 50) -> 8 * 5 = 40 (left: 40 50) -> 40 / 50 = 0.8 (left: 0.8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 10 = 50 (left: 5 8 50) -> 8 * 5 = 40 (left: 40 50) -> 40 / 50 = 0.8 (left: 0.8) -> There are no possible next steps with the input of 0.8 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "1.5 14"
                }
            },
            "Step 7": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 8 - 5 = 3 (left: 3 10) -> 3 * 10 = 30 (left: 30) -> There is only one possible next step: -> 8 - 2 = 6 (left: 2 6 14) -> Input: 8 12 14 -> 12 / 8 = 1.5 (left: 1.5 14) -> 1.5 * 14 = 21 (left: 21)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "1.5 6"
                }
            },
            "Step 8": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> Input: 3 5 6 9 -> 9 - 5 = 4 (left: 3 4 6) -> 6 / 4 = 1.5 (left: 1.5 6) -> 3 + 9 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "2 + 10 = 12"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "10 / 5 = 2 (left: 5 8 2)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 8 10"
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 10 - 8 = 2 (left: 2 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 10 - 8 = 2 (left: 2 10) -> 10 / 2 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 10 - 8 = 2 (left: 2 10) -> 10 / 2 = 5 (left: 5) -> There is only one possible next step: 5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "5 8 50"
                }
            },
            "Step 4": {
                "Step": "5 * 10 = 50 (left: 5 8 50) -> 8 - 5 = 3 (left: 3 8 50)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 10 = 50 (left: 5 8 50) -> 8 - 5 = 3 (left: 3 8 50) -> 3 + 8 = 11 (left: 11 50)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 10 = 50 (left: 5 8 50) -> 8 - 5 = 3 (left: 3 8 50) -> 3 + 8 = 11 (left: 11 50) -> 9",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "2 + 10 = 12"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "8 10"
                }
            },
            "Step 7": {
                "Step": "10 - 8 = 2 (left: 2 8 10) -> 10 - 2 = 8 (left: 8 10) -> 10 - 8 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 8 = 2 (left: 2 8 10) -> 10 - 2 = 8 (left: 8 10) -> 10 - 8 = 2 (left: 2) -> 2 - 2 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "1.5 6"
                }
            }
        },
        "Input": "5 5 8 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "923": {
        "puzzle": "2 4 6 12",
        "Agent 0": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 2 10 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 4 6  -> 6 - 4 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 4 6  -> 6 - 4 = 2 (left: 2) -> None, as there is only one number.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 2 = 12 (left: 4 6  -> 6 - 4 = 2 (left: 2) -> None, as there is only one number. -> There is no next step as there is only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "24 144"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 -> 12 * 12 = 144 (left: 24 144) -> 24 * 6 = 144 (left: 144)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "4 12 12"
                }
            },
            "Step 5": {
                "Step": "6 * 2 = 12 (left: 4 12 12) -> 12 - 4 = 8 (left: 8 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 2 = 12 (left: 4 12 12) -> 12 - 4 = 8 (left: 8 12) -> 8 + 12 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "12 / 2 = 6 (left: 2 6 12) -> 12 - 6 = 6 (left: 6) -> 6 / 2 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "No possible next steps with only one number."
                }
            },
            "Step 8": {
                "Step": "6 * 2 = 12 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 - 8 = 2 (left: 2) -> No possible next steps with only one number. -> None",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "There are no possible next steps for the number 96 as it is already a single number."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 ^ 2 = 16 (left: 2 16 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 - 6 = 6 (left: 6 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 - 6 = 6 (left: 6 6) -> 6 * 6 = 36 (left: 36)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 - 6 = 6 (left: 6 6) -> 6 * 6 = 36 (left: 36) -> None, as there is only one number given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "24 144"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 -> 12 * 12 = 144 (left: 24 144) -> 144 / 24 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "6 6 12"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 * 12 = 72 (left:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 * 12 = 72 (left: -> 12 / 6 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "12 / 2 = 6 (left: 2 6 12) -> 12 - 6 = 6 (left: 6) -> 6 / 2 = 3 (left: 3 8) -> 8 / 3 = 2.6666666666666665 (left: 2.67)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "24 144"
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 -> 12 * 12 = 144 (left: 24 144) -> 24 * 6 = 144 (left: 144)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "No possible next steps with only one number."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 * 2 = 12 (left: 4 12 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 - 6 = 0 (left: 0 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 - 6 = 0 (left: 0 12) -> 0 + 12 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 - 6 = 0 (left: 0 12) -> 0 + 12 = 12 (left: 12) -> 12 + 2 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "10 6 "
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "24 144"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 -> 12 * 12 = 144 (left: 24 144) -> 24 * 6 = 144 (left: 144)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "10 6 "
                }
            },
            "Step 5": {
                "Step": "12 - 2 = 10 (left: 10 6  -> 10 + 6 = 16 (left: 16)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 2 = 10 (left: 10 6  -> 10 + 6 = 16 (left: 16) -> There are no possible next steps as there is only one number left (16).",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "12 / 2 = 6 (left: 2 6 12) -> 12 - 6 = 6 (left: 6) -> 6 / 2 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) ",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "24 144"
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 -> 12 * 12 = 144 (left: 24 144) -> 24 + 144 = 168 (left: 168)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "There are no possible next steps for the number 96 as it is already a single number."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 6 6 12)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12) -> 12 / 1 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12) -> 12 / 1 = 12 (left: 12) -> 12 * 2 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "4 12 12"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "24 144"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 -> 12 * 12 = 144 (left: 24 144) -> 24 * 6 = 144 (left: 144)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "2 6 12"
                }
            },
            "Step 5": {
                "Step": "12 / 2 = 6 (left: 2 6 12) -> 12 - 6 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 2 = 6 (left: 2 6 12) -> 12 - 6 = 6 (left: 6) -> 6 / 2 = 3 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "12 / 2 = 6 (left: 2 6 12) -> 12 - 6 = 6 (left: 6) -> 6 / 2 = 3 (left: 3 8) -> Possible next steps:",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 / 2 = 6 (left: 2 6 12) -> 12 - 6 = 6 (left: 6) -> 6 / 2 = 3 (left: 3 8) -> Possible next steps: -> There are no possible next steps as the input values have been exhausted.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 - 2 = 10 (left: 10 6 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 4 6  -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 4 6  -> 6 / 4 = 1.5 (left: 1.5) -> 1.5 * 8 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 2 = 12 (left: 4 6  -> 6 / 4 = 1.5 (left: 1.5) -> 1.5 * 8 = 12 (left: 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "2 6 12"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "24 144"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 -> 12 * 12 = 144 (left: 24 144) -> 24 - 144 = -120 (left: -120)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "No possible next steps with only one number."
                }
            },
            "Step 5": {
                "Step": "6 * 2 = 12 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 - 8 = 2 (left: 2) -> No possible next steps with only one number. -> No possible next steps with only one number.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 2 = 12 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 - 8 = 2 (left: 2) -> No possible next steps with only one number. -> No possible next steps with only one number. -> There are no possible next steps with only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "12 / 2 = 6 (left: 2 6 12) -> 12 - 6 = 6 (left: 6) -> 6 / 2 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "Please provide a list of numbers to continue the sequence."
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 - 12 = 0 (left: 0) -> Please provide a list of numbers to continue the sequence. -> - Divide one number by another",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 6 6 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 12 12"
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 4 12 12) -> 12 - 4 = 8 (left: 8 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 4 12 12) -> 12 - 4 = 8 (left: 8 12) -> 8 * 12 = 96 (left: 96)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 2 = 12 (left: 4 12 12) -> 12 - 4 = 8 (left: 8 12) -> 8 * 12 = 96 (left: 96) -> 9 - 6 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "10 6 "
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "24 144"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 -> 12 * 12 = 144 (left: 24 144) -> 144 / 24 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "2 16 "
                }
            },
            "Step 5": {
                "Step": "4 ^ 2 = 16 (left: 2 16  -> 16 - 2 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 ^ 2 = 16 (left: 2 16  -> 16 - 2 = 14 (left: 14) -> There are no possible next steps with only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "12 / 2 = 6 (left: 2 6 12) -> 12 - 6 = 6 (left: 6) -> 6 / 2 = 3 (left: 3 8) -> 5 - 4 = 1 (left: 1 7)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 / 2 = 6 (left: 2 6 12) -> 12 - 6 = 6 (left: 6) -> 6 / 2 = 3 (left: 3 8) -> 5 - 4 = 1 (left: 1 7) -> 1 * 7 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "There are no possible next steps for the number 96 as it is already a single number."
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "12 / 2 = 6 (left: 2 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 -> 12 * 12 = 144 (left: 24 144)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "24 144"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 -> 12 * 12 = 144 (left: 24 144) -> 144 / 24 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "10 6 "
                }
            },
            "Step 5": {
                "Step": "12 - 2 = 10 (left: 10 6  -> 10 * 6 = 60 (left: 60)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 2 = 10 (left: 10 6  -> 10 * 6 = 60 (left: 60) -> There is only one number given (60), so there are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "12 / 2 = 6 (left: 2 6 12) -> 12 - 6 = 6 (left: 6) -> 6 / 2 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "There are no possible next steps for the number 96 as it is already a single number."
                }
            },
            "Step 8": {
                "Step": "6 * 2 = 12 (left: 4 12 12) -> 12 - 4 = 8 (left: 8 12) -> 8 * 12 = 96 (left: 96) -> There are no possible next steps for the number 96 as it is already a single number. -> There are no possible next steps for the number 96 as it is already a single number.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "6 * 2 = 12 (left: 4 6 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 4 6  -> Input: 3 9 5",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 4 6  -> Input: 3 9 5 -> 9 / 3 = 3 (left: 3 5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 2 = 12 (left: 4 6  -> Input: 3 9 5 -> 9 / 3 = 3 (left: 3 5) -> 5 / 3 = 1.67 (left: 1.67)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "2 10 12"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "4 12 12"
                }
            },
            "Step 4": {
                "Step": "6 * 2 = 12 (left: 4 12 12) -> 12 - 4 = 8 (left: 8 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 * 2 = 12 (left: 4 12 12) -> 12 - 4 = 8 (left: 8 12) -> 8 * 12 = 96 (left: 96)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 2 = 12 (left: 4 12 12) -> 12 - 4 = 8 (left: 8 12) -> 8 * 12 = 96 (left: 96) -> There are no possible next steps for the number 96 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "12 / 2 = 6 (left: 2 6 12) -> 12 - 6 = 6 (left: 6) -> 6 / 2 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5) ",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "3 8"
                }
            },
            "Step 8": {
                "Step": "12 / 2 = 6 (left: 2 6 12) -> 12 - 6 = 6 (left: 6) -> 6 / 2 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "There are no possible next steps for the number 96 as it is already a single number."
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "12 / 4 = 3 (left: 2 3 ",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 4 6  -> 4 + 6 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 - 8 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 2 = 12 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 - 8 = 2 (left: 2) -> No possible next steps with only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "24 144"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 -> 12 * 12 = 144 (left: 24 144) -> 144 - 24 = 120 (left: 120)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "2 6 12"
                }
            },
            "Step 5": {
                "Step": "12 / 2 = 6 (left: 2 6 12) -> 12 - 2 = 10 (left: 2 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 2 = 6 (left: 2 6 12) -> 12 - 2 = 10 (left: 2 10) -> 10 / 2 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps as there is only one number left (16"
                }
            },
            "Step 7": {
                "Step": "12 - 2 = 10 (left: 10 6  -> 10 + 6 = 16 (left: 16) -> There are no possible next steps as there is only one number left (16). -> There are no possible next steps as there is only one number left (16).",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 - 2 = 10 (left: 10 6  -> 10 + 6 = 16 (left: 16) -> There are no possible next steps as there is only one number left (16). -> There are no possible next steps as there is only one number left (16). -> There are no possible next steps as there is only one number left (16).",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "12 / 2 = 6 (left: 2 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 - 12 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 - 12 = 0 (left: 0) -> Please provide a list of numbers to continue the sequence.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "10 6 "
                }
            },
            "Step 4": {
                "Step": "12 - 2 = 10 (left: 10 6  -> 10 / 6 = 1.6666666666666667 (left: 1.6666666666666667)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 2 = 10 (left: 10 6  -> 10 / 6 = 1.6666666666666667 (left: 1.6666666666666667) -> There are no possible next steps for the number 1.6666666666666667 as it is already a decimal number.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 2 = 10 (left: 10 6  -> 10 / 6 = 1.6666666666666667 (left: 1.6666666666666667) -> There are no possible next steps for the number 1.6666666666666667 as it is already a decimal number. -> There are no possible next steps for the number 1.6666666666666667 as it is already a decimal number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps as there is only one number left (16"
                }
            },
            "Step 7": {
                "Step": "12 - 2 = 10 (left: 10 6  -> 10 + 6 = 16 (left: 16) -> There are no possible next steps as there is only one number left (16). -> There are no possible next steps as there is only one number left (16).",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 - 2 = 10 (left: 10 6  -> 10 + 6 = 16 (left: 16) -> There are no possible next steps as there is only one number left (16). -> There are no possible next steps as there is only one number left (16). -> There are no possible next steps as there is only one number left (16).",
                "Pruning": null
            }
        },
        "Input": "2 4 6 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "924": {
        "puzzle": "6 7 8 11",
        "Agent 0": {
            "Step 0": {
                "Step": "11 - 7 = 4 (left: 6 8 4)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1 6 11"
                }
            },
            "Step 1": {
                "Step": "7 - 6 = 1 (left: 1 6 11) -> 11 - 6 = 5 (left: 1 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 6 = 1 (left: 1 6 11) -> 11 - 6 = 5 (left: 1 5) -> 5 / 1 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 6 = 1 (left: 1 6 11) -> 11 - 6 = 5 (left: 1 5) -> 5 / 1 = 5 (left: 5) -> 8 - 5 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "6 7 "
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "6 11 15"
                }
            },
            "Step 4": {
                "Step": "7 + 8 = 15 (left: 6 11 15) -> 15 - 6 = 9 (left: 6 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 + 8 = 15 (left: 6 11 15) -> 15 - 6 = 9 (left: 6 9) -> 7 - 3 = 4 (left: 4 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 8 = 15 (left: 6 11 15) -> 15 - 6 = 9 (left: 6 9) -> 7 - 3 = 4 (left: 4 5) -> 10 + 3 = 13 (left: 13)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "10 8 0"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "8 14"
                }
            },
            "Step 7": {
                "Step": "11 - 7 = 4 (left: 6 8 4) -> 6 - 4 = 2 (left: 2 8) -> 8 - 2 = 6 (left: 6) -> 6 + 8 = 14 (left: 8 14) -> 8 - 14 = -6 (left: -6)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "No possible next steps with the input 17."
                }
            },
            "Step 8": {
                "Step": "7 - 6 = 1 (left: 1 6 11) -> 1 * 6 = 6 (left: 6 11) -> 6 + 11 = 17 (left: 17) -> No possible next steps with the input 17. -> There are no possible next steps with the input 17.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 - 6 = 2 (left: 2 7 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "5 7 8"
                }
            },
            "Step 1": {
                "Step": "11 - 6 = 5 (left: 5 7 8) -> 7 + 8 = 15 (left: 5 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 6 = 5 (left: 5 7 8) -> 7 + 8 = 15 (left: 5 15) -> 9 - 3 = 6 (left: 6 27)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 6 = 5 (left: 5 7 8) -> 7 + 8 = 15 (left: 5 15) -> 9 - 3 = 6 (left: 6 27) -> 6 + 27 = 33 (left: 33)",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "8 11 42"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "8 11 42"
                }
            },
            "Step 4": {
                "Step": "6 * 7 = 42 (left: 8 11 42) -> 42 / 8 = 5.25 (left: 5.25 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 * 7 = 42 (left: 8 11 42) -> 42 / 8 = 5.25 (left: 5.25 11) -> 5.25 + 11 = 16.25 (left: 16.25)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 7 = 42 (left: 8 11 42) -> 42 / 8 = 5.25 (left: 5.25 11) -> 5.25 + 11 = 16.25 (left: 16.25) -> There are no possible next steps with the number 16.25.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "4 + 2 = 6"
                }
            },
            "Step 7": {
                "Step": "11 - 7 = 4 (left: 6 8 4) -> 8 / 4 = 2 (left: 6 2) -> 6 - 2 = 4 (left: 4) -> 4 + 2 = 6 -> 6 - 2 = 4 (left: 4 4)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 7 = 4 (left: 6 8 4) -> 8 / 4 = 2 (left: 6 2) -> 6 - 2 = 4 (left: 4) -> 4 + 2 = 6 -> 6 - 2 = 4 (left: 4 4) -> 4 - 4 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "4 + 2 = 6"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 + 8 = 15 (left: 6 11 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 11 15"
                }
            },
            "Step 1": {
                "Step": "7 + 8 = 15 (left: 6 11 15) -> 15 - 6 = 9 (left: 6 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 6 11 15) -> 15 - 6 = 9 (left: 6 9) -> 10 * 5 = 50",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 + 8 = 15 (left: 6 11 15) -> 15 - 6 = 9 (left: 6 9) -> 10 * 5 = 50 -> 10 + 5 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "6 11 15"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "8 11 42"
                }
            },
            "Step 4": {
                "Step": "6 * 7 = 42 (left: 8 11 42) -> 42 / 8 = 5.25 (left: 5.25 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 * 7 = 42 (left: 8 11 42) -> 42 / 8 = 5.25 (left: 5.25 11) -> 5.25 * 11 = 57.75 (left: 57.75)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 7 = 42 (left: 8 11 42) -> 42 / 8 = 5.25 (left: 5.25 11) -> 5.25 * 11 = 57.75 (left: 57.75) -> 57.75 + 2 = 59.75",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "3 - 0.0075 = 2.9925"
                }
            },
            "Step 7": {
                "Step": "11 - 7 = 4 (left: 6 8 4) -> 8 / 6 = 1.33 (left: 1.33 4) -> 4 / 1.33 = 3.0075 (left: 3.0075) -> 3 - 0.0075 = 2.9925 -> 3 / 0.0075 = 400 (left: 400 - 2.9925)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 7 = 4 (left: 6 8 4) -> 8 / 6 = 1.33 (left: 1.33 4) -> 4 / 1.33 = 3.0075 (left: 3.0075) -> 3 - 0.0075 = 2.9925 -> 3 / 0.0075 = 400 (left: 400 - 2.9925) -> 400 * 2.9925 = 1197.0",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "8 * 11 = 88 (left: 6 7 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1 6 11"
                }
            },
            "Step 1": {
                "Step": "7 - 6 = 1 (left: 1 6 11) -> 1 * 6 = 6 (left: 6 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 6 = 1 (left: 1 6 11) -> 1 * 6 = 6 (left: 6 11) -> 6 + 11 = 17 (left: 17)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 6 = 1 (left: 1 6 11) -> 1 * 6 = 6 (left: 6 11) -> 6 + 11 = 17 (left: 17) -> No possible next steps with the input 17.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "6 8 4"
                }
            },
            "Step 4": {
                "Step": "11 - 7 = 4 (left: 6 8 4) -> 8 - 4 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 7 = 4 (left: 6 8 4) -> 8 - 4 = 4 (left: 4) -> There are no possible next steps with just the number 4 as input.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 7 = 4 (left: 6 8 4) -> 8 - 4 = 4 (left: 4) -> There are no possible next steps with just the number 4 as input. -> There are no possible next steps with just the number 4 as input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "10 8 0"
                }
            },
            "Step 7": {
                "Step": "11 - 6 = 5 (left: 5 7 8) -> 5 * 7 = 35 (left: 8 35) -> 8 * 35 = 280 (left: 280) -> 2 + 8 + 0 = 10 (left: 10 8 0) -> 10 * 8 = 80 (left: 80 0)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 6 = 5 (left: 5 7 8) -> 5 * 7 = 35 (left: 8 35) -> 8 * 35 = 280 (left: 280) -> 2 + 8 + 0 = 10 (left: 10 8 0) -> 10 * 8 = 80 (left: 80 0) -> 80 - 0 = 80 (left: 80)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "There are no possible next steps with just the number 4."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "8 + 11 = 19 (left: 6 7 19)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 8 4"
                }
            },
            "Step 1": {
                "Step": "11 - 7 = 4 (left: 6 8 4) -> 8 - 4 = 4 (left: 6 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 7 = 4 (left: 6 8 4) -> 8 - 4 = 4 (left: 6 4) -> 6 * 4 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 7 = 4 (left: 6 8 4) -> 8 - 4 = 4 (left: 6 4) -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (11 - 7) + 8 - 4 = 24",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "6 8 4"
                },
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "6 8 4"
                }
            },
            "Step 4": {
                "Step": "11 - 7 = 4 (left: 6 8 4) -> 6 / 8 = 0.75 (left: 0.75 8 4)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 7 = 4 (left: 6 8 4) -> 6 / 8 = 0.75 (left: 0.75 8 4) -> 4 * 0.75 = 3 (left: 3 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 7 = 4 (left: 6 8 4) -> 6 / 8 = 0.75 (left: 0.75 8 4) -> 4 * 0.75 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "No possible next steps with the input 17."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "10 8 0"
                }
            },
            "Step 7": {
                "Step": "11 - 6 = 5 (left: 5 7 8) -> 5 * 7 = 35 (left: 8 35) -> 8 * 35 = 280 (left: 280) -> 2 + 8 + 0 = 10 (left: 10 8 0) -> 10 / 8 = 1.25 (left: 1.25 8 0)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 6 = 5 (left: 5 7 8) -> 5 * 7 = 35 (left: 8 35) -> 8 * 35 = 280 (left: 280) -> 2 + 8 + 0 = 10 (left: 10 8 0) -> 10 / 8 = 1.25 (left: 1.25 8 0) -> 1.25 + 8 = 9.25 (left: 0 9.25)",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "7 - 6 = 1 (left: 1 6 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 8 4"
                }
            },
            "Step 1": {
                "Step": "11 - 7 = 4 (left: 6 8 4) -> 6 - 4 = 2 (left: 2 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 7 = 4 (left: 6 8 4) -> 6 - 4 = 2 (left: 2 2) -> 2 * 2 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 7 = 4 (left: 6 8 4) -> 6 - 4 = 2 (left: 2 2) -> 2 * 2 = 4 (left: 4) -> There are no possible next steps with just the number 4.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "6 8 4"
                }
            },
            "Step 4": {
                "Step": "11 - 7 = 4 (left: 6 8 4) -> 8 - 6 = 2 (left: 2 4)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 7 = 4 (left: 6 8 4) -> 8 - 6 = 2 (left: 2 4) -> 2 * 4 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 7 = 4 (left: 6 8 4) -> 8 - 6 = 2 (left: 2 4) -> 2 * 4 = 8 (left: 8) -> 8 * 8 = 64 (left: 64)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "There are no possible next steps with just the number 4."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "3 - 0.0075 = 2.9925"
                }
            },
            "Step 7": {
                "Step": "11 - 7 = 4 (left: 6 8 4) -> 8 / 6 = 1.33 (left: 1.33 4) -> 4 / 1.33 = 3.0075 (left: 3.0075) -> 3 - 0.0075 = 2.9925 -> 3 + 0.0075 = 3.0075 (left: 3.0075)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "4 + 2 = 6"
                }
            },
            "Step 8": {
                "Step": "11 - 7 = 4 (left: 6 8 4) -> 8 / 4 = 2 (left: 6 2) -> 6 - 2 = 4 (left: 4) -> 4 + 2 = 6 -> 2 + 6 = 8 (left: 4 8)",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 * 7 = 42 (left: 8 11 42)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "5 7 8"
                }
            },
            "Step 1": {
                "Step": "11 - 6 = 5 (left: 5 7 8) -> 5 * 7 = 35 (left: 8 35)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 6 = 5 (left: 5 7 8) -> 5 * 7 = 35 (left: 8 35) -> 8 * 35 = 280 (left: 280)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 6 = 5 (left: 5 7 8) -> 5 * 7 = 35 (left: 8 35) -> 8 * 35 = 280 (left: 280) -> 2 + 8 + 0 = 10 (left: 10 8 0)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "6 8 4"
                }
            },
            "Step 4": {
                "Step": "11 - 7 = 4 (left: 6 8 4) -> 6 * 8 = 48 (left: 4 48)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 7 = 4 (left: 6 8 4) -> 6 * 8 = 48 (left: 4 48) -> 48 / 4 = 12 (left: 12 48)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 7 = 4 (left: 6 8 4) -> 6 * 8 = 48 (left: 4 48) -> 48 / 4 = 12 (left: 12 48) -> 48 / 12 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "No input provided."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "57.75 + 2 = 59.75"
                }
            },
            "Step 7": {
                "Step": "6 * 7 = 42 (left: 8 11 42) -> 42 / 8 = 5.25 (left: 5.25 11) -> 5.25 * 11 = 57.75 (left: 57.75) -> 57.75 + 2 = 59.75 -> 57.75 - 2 = 55.75",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 * 7 = 42 (left: 8 11 42) -> 42 / 8 = 5.25 (left: 5.25 11) -> 5.25 * 11 = 57.75 (left: 57.75) -> 57.75 + 2 = 59.75 -> 57.75 - 2 = 55.75 -> 57.75 / 2 = 28.875",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "11 - 6 = 5 (left: 5 7 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 7 19"
                }
            },
            "Step 1": {
                "Step": "8 + 11 = 19 (left: 6 7 19) -> 19 / 6 = 3.1666666666666665 (left: 3.1666666666666665 19)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 + 11 = 19 (left: 6 7 19) -> 19 / 6 = 3.1666666666666665 (left: 3.1666666666666665 19) -> 3.1666666666666665 * 19 = 60 (left: 19 60)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 + 11 = 19 (left: 6 7 19) -> 19 / 6 = 3.1666666666666665 (left: 3.1666666666666665 19) -> 3.1666666666666665 * 19 = 60 (left: 19 60) -> 19 + 60 = 79 (left: 79)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "6 7 "
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "6 8 4"
                }
            },
            "Step 4": {
                "Step": "11 - 7 = 4 (left: 6 8 4) -> 8 / 4 = 2 (left: 6 2)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 7 = 4 (left: 6 8 4) -> 8 / 4 = 2 (left: 6 2) -> 6 - 2 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 7 = 4 (left: 6 8 4) -> 8 / 4 = 2 (left: 6 2) -> 6 - 2 = 4 (left: 4) -> 4 + 2 = 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "No input provided."
                }
            },
            "Step 7": {
                "Step": "7 + 8 = 15 (left: 6 11 15) -> 6 * 11 = 66 (left: 15) -> None -> No input provided. -> Please provide a list of numbers to continue with the calculations.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 + 8 = 15 (left: 6 11 15) -> 6 * 11 = 66 (left: 15) -> None -> No input provided. -> Please provide a list of numbers to continue with the calculations. -> 1 * 5 = 5 (left: 5 9 12)",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "7 + 8 = 15 (left: 6 11 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1 6 11"
                }
            },
            "Step 1": {
                "Step": "7 - 6 = 1 (left: 1 6 11) -> 11 / 1 = 11 (left: 6 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 6 = 1 (left: 1 6 11) -> 11 / 1 = 11 (left: 6 11) -> 11 - 6 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 6 = 1 (left: 1 6 11) -> 11 / 1 = 11 (left: 6 11) -> 11 - 6 = 5 (left: 5) -> 8 - 5 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "6 7 19"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "6 8 4"
                }
            },
            "Step 4": {
                "Step": "11 - 7 = 4 (left: 6 8 4) -> 6 - 4 = 2 (left: 2 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 7 = 4 (left: 6 8 4) -> 6 - 4 = 2 (left: 2 8) -> 8 - 2 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 7 = 4 (left: 6 8 4) -> 6 - 4 = 2 (left: 2 8) -> 8 - 2 = 6 (left: 6) -> 6 + 8 = 14 (left: 8 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "8 14"
                }
            },
            "Step 7": {
                "Step": "11 - 7 = 4 (left: 6 8 4) -> 6 - 4 = 2 (left: 2 8) -> 8 - 2 = 6 (left: 6) -> 6 + 8 = 14 (left: 8 14) -> 8 / 14 = 0.57 (left: 0.57)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "No possible next steps with the input 17."
                }
            },
            "Step 8": {
                "Step": "7 - 6 = 1 (left: 1 6 11) -> 1 * 6 = 6 (left: 6 11) -> 6 + 11 = 17 (left: 17) -> No possible next steps with the input 17. -> There are no possible next steps with the input 17.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "6 * 7 = 42 (left: 8 11 42)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 11 15"
                }
            },
            "Step 1": {
                "Step": "7 + 8 = 15 (left: 6 11 15) -> 6 * 11 = 66 (left: 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 6 11 15) -> 6 * 11 = 66 (left: 15) -> None",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 + 8 = 15 (left: 6 11 15) -> 6 * 11 = 66 (left: 15) -> None -> No input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "6 8 4"
                }
            },
            "Step 4": {
                "Step": "11 - 7 = 4 (left: 6 8 4) -> 8 / 6 = 1.33 (left: 1.33 4)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 7 = 4 (left: 6 8 4) -> 8 / 6 = 1.33 (left: 1.33 4) -> 4 / 1.33 = 3.0075 (left: 3.0075)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 7 = 4 (left: 6 8 4) -> 8 / 6 = 1.33 (left: 1.33 4) -> 4 / 1.33 = 3.0075 (left: 3.0075) -> 3 - 0.0075 = 2.9925",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "57.75 + 2 = 59.75"
                }
            },
            "Step 7": {
                "Step": "6 * 7 = 42 (left: 8 11 42) -> 42 / 8 = 5.25 (left: 5.25 11) -> 5.25 * 11 = 57.75 (left: 57.75) -> 57.75 + 2 = 59.75 -> 57.75 - 2 = 55.75",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 * 7 = 42 (left: 8 11 42) -> 42 / 8 = 5.25 (left: 5.25 11) -> 5.25 * 11 = 57.75 (left: 57.75) -> 57.75 + 2 = 59.75 -> 57.75 - 2 = 55.75 -> 57.75 * 2 = 115.5",
                "Pruning": null
            }
        },
        "Input": "6 7 8 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "925": {
        "puzzle": "7 9 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "9 / 7 = 1 (left: 1 9 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "2 9 "
                }
            },
            "Step 1": {
                "Step": "9 - 7 = 2 (left: 2 9  -> 2 + 9 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 7 = 2 (left: 2 9  -> 2 + 9 = 11 (left: 11) -> 11 - 2 = 9 (left: 2 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 7 = 2 (left: 2 9  -> 2 + 9 = 11 (left: 11) -> 11 - 2 = 9 (left: 2 9) -> 2 * 9 = 18 (left: 18)"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 7 9 ",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "2 9 13"
                }
            },
            "Step 1": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 13 + 2 = 15 (left: 9 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 13 + 2 = 15 (left: 9 15) -> 9 / 15 = 0.6 (left: 0.6)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 13 + 2 = 15 (left: 9 15) -> 9 / 15 = 0.6 (left: 0.6) -> 0.6 * 2 = 1.2"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 - 9 = -2 (left: -2 9 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "7 13 27"
                }
            },
            "Step 1": {
                "Step": "9 * 3 = 27 (left: 7 13 27) -> 7 + 13 = 20 (left: 20 27)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 * 3 = 27 (left: 7 13 27) -> 7 + 13 = 20 (left: 20 27) -> 20 - 27 = -7 (left: -7)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 * 3 = 27 (left: 7 13 27) -> 7 + 13 = 20 (left: 20 27) -> 20 - 27 = -7 (left: -7) -> -7 - 8 = -15 (left: -15)"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 7 = 2 (left: 2 9 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "7 13 27"
                }
            },
            "Step 1": {
                "Step": "9 * 3 = 27 (left: 7 13 27) -> 13 - 7 = 6 (left: 6 27)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 * 3 = 27 (left: 7 13 27) -> 13 - 7 = 6 (left: 6 27) -> 27 - 6 = 21 (left: 21)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 * 3 = 27 (left: 7 13 27) -> 13 - 7 = 6 (left: 6 27) -> 27 - 6 = 21 (left: 21) -> 21 / 2 = 10.5 (left: 10.5)"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "7 - 9 = -2 (left: -2 9 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "2 9 13"
                }
            },
            "Step 1": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 + 9 = 11 (left: 11 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 + 9 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 + 9 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (9 - 7 + 9) + 13 = 24"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "7 * 9 = 63 (left: 9 13 63)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "-2 9 13"
                }
            },
            "Step 1": {
                "Step": "7 - 9 = -2 (left: -2 9 13) -> -2 + 9 = 7 (left: 7 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 9 = -2 (left: -2 9 13) -> -2 + 9 = 7 (left: 7 13) -> 13 - 7 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 9 = -2 (left: -2 9 13) -> -2 + 9 = 7 (left: 7 13) -> 13 - 7 = 6 (left: 6) -> 6 - 8 = -2 (left: -2)"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "9 - 7 = 2 (left: 2 9 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "2 9 13"
                }
            },
            "Step 1": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 * 9 = 18 (left: 18 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 * 9 = 18 (left: 18 13) -> 18 - 13 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 * 9 = 18 (left: 18 13) -> 18 - 13 = 5 (left: 5) -> There is only one possible next step: 5 + 5 = 10 (left: 10)"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "13 + 7 = 20 (left: 7 9 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "2 9 13"
                }
            },
            "Step 1": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 9 / 2 = 4.5 (left: 4.5 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 9 / 2 = 4.5 (left: 4.5 13) -> 4.5 + 13 = 17.5 (left: 17.5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 9 / 2 = 4.5 (left: 4.5 13) -> 4.5 + 13 = 17.5 (left: 17.5) -> There are no possible next steps with the input 17.5 as it is a single number."
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "9 * 3 = 27 (left: 7 13 27)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "-2 9 13"
                }
            },
            "Step 1": {
                "Step": "7 - 9 = -2 (left: -2 9 13) -> 9 / -2 = -4.5 (left: -4.5 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 9 = -2 (left: -2 9 13) -> 9 / -2 = -4.5 (left: -4.5 13) -> -4.5 / 13 = -0.34615384615 (left: -0.34615384615)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 9 = -2 (left: -2 9 13) -> 9 / -2 = -4.5 (left: -4.5 13) -> -4.5 / 13 = -0.34615384615 (left: -0.34615384615) -> There are no possible next steps for the input -0.34615384615 as it is already a single number."
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "9 / 7 = 1 (left: 1 9 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 9 13"
                }
            },
            "Step 1": {
                "Step": "9 / 7 = 1 (left: 1 9 13) -> 9 / 1 = 9 (left: 9 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 7 = 1 (left: 1 9 13) -> 9 / 1 = 9 (left: 9 13) -> 9 / 13 = 0.6923 (left: 0.6923)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 / 7 = 1 (left: 1 9 13) -> 9 / 1 = 9 (left: 9 13) -> 9 / 13 = 0.6923 (left: 0.6923) -> 0.6923 * 2 = 1.3846"
            }
        },
        "Input": "7 9 9 13",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "926": {
        "puzzle": "3 6 9 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 3 = 9 (left: 9 6 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 9 9"
                }
            },
            "Step 1": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 / 9 = 1 (left: ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 / 9 = 1 (left:  -> It looks like the input is missing. Please provide the numbers to continue finding possible next steps.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 / 9 = 1 (left:  -> It looks like the input is missing. Please provide the numbers to continue finding possible next steps. -> Without the input numbers, I am unable to provide possible next steps. Please provide the numbers so I can assist you further.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "8.5 10.5"
                }
            },
            "Step 4": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 / 6 = 1.5 (left: 1.5 9) -> 1.5 + 9 = 10.5 (left: 10.5) -> 10.5 - 2 = 8.5 (left: 8.5 10.5) -> 8.5 + 10.5 = 19 (left: 19)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "6 9 9"
                }
            },
            "Step 5": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 6 + 9 = 15 (left: 9 9 15)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 6 + 9 = 15 (left: 9 9 15) -> 15 - 9 = 6 (left:",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "15 - 9 = 6 (left:"
                }
            },
            "Step 7": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 6 + 9 = 15 (left: 9 9 15) -> 15 - 9 = 6 (left: -> 15 - 9 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "4 5"
                }
            },
            "Step 8": {
                "Step": "3 * 6 = 18 (left: 9 12 18) -> 18 - 9 = 9 (left: 9 18) -> Input: 3 5 7 -> 7 - 3 = 4 (left: 4 5) -> 4 + 5 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "There are no possible next steps with the input 30."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 * 3 = 18 (left: 9 18 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "9 12 18"
                }
            },
            "Step 1": {
                "Step": "3 * 6 = 18 (left: 9 12 18) -> 18 - 9 = 9 (left: 9 18)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 6 = 18 (left: 9 12 18) -> 18 - 9 = 9 (left: 9 18) -> Input: 3 5 7",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 6 = 18 (left: 9 12 18) -> 18 - 9 = 9 (left: 9 18) -> Input: 3 5 7 -> 7 - 3 = 4 (left: 4 5)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "8.5 10.5"
                }
            },
            "Step 4": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 / 6 = 1.5 (left: 1.5 9) -> 1.5 + 9 = 10.5 (left: 10.5) -> 10.5 - 2 = 8.5 (left: 8.5 10.5) -> 8.5 / 10.5 = 0.80952381 (left: 0.80952381)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "6 9 9"
                }
            },
            "Step 5": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9) -> 9 / 3 = 3 (left: 3 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "15 - 9 = 6 (left:"
                }
            },
            "Step 7": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 6 + 9 = 15 (left: 9 9 15) -> 15 - 9 = 6 (left: -> 15 * 9 = 135 (left: 135)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "7.67"
                }
            },
            "Step 8": {
                "Step": "3 + 6 = 9 (left: 9 9 12) -> 12 / 9 = 1.33 (left: 9 1.33) -> 9 - 1.33 = 7.67 (left: 7.67) -> There are no valid operations that can be performed with the input 7.67.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 * 6 = 18 (left: 18 9 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 9 9"
                }
            },
            "Step 1": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9) -> 9 / 3 = 3 (left: 3 9 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9) -> 9 / 3 = 3 (left: 3 9 9) -> 9 / 3 = 3 (left: 3 9 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "3 9 9"
                }
            },
            "Step 4": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9) -> 9 / 3 = 3 (left: 3 9 9) -> 9 / 3 = 3 (left: 3 9 9) -> 9 * 3 = 27 (left: 9 27)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9) -> 9 / 3 = 3 (left: 3 9 9) -> 9 / 3 = 3 (left: 3 9 9) -> 9 * 3 = 27 (left: 9 27) -> 9 + 27 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "Without the input numbers, I am unable to provide possible next steps. Please provide the numbers so I can assist you further."
                }
            },
            "Step 6": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 / 9 = 1 (left:  -> It looks like the input is missing. Please provide the numbers to continue finding possible next steps. -> Without the input numbers, I am unable to provide possible next steps. Please provide the numbers so I can assist you further. -> Apologies for not providing the possible next steps without the input numbers. Please provide the numbers so I can assist you further.",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "15 - 9 = 6 (left:"
                }
            },
            "Step 7": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 6 + 9 = 15 (left: 9 9 15) -> 15 - 9 = 6 (left: -> 15 + 9 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "Without the input numbers, I am unable to provide possible next steps. Please provide the numbers so I can assist you further."
                }
            },
            "Step 8": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 / 9 = 1 (left:  -> It looks like the input is missing. Please provide the numbers to continue finding possible next steps. -> Without the input numbers, I am unable to provide possible next steps. Please provide the numbers so I can assist you further. -> I am unable to provide possible next steps without the input numbers. Please provide the numbers so I can assist you further.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "12 - 3 = 9 (left: 6 9 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "18 9 12"
                }
            },
            "Step 1": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 18 - 12 = 6 (left: 6 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 18 - 12 = 6 (left: 6 9) -> 6 * 9 = 54 (left: 54)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 18 - 12 = 6 (left: 6 9) -> 6 * 9 = 54 (left: 54) -> No possible next steps with just one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "9 9 12"
                }
            },
            "Step 4": {
                "Step": "3 + 6 = 9 (left: 9 9 12) -> 9 * 9 = 81 (left: 12 81)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 + 6 = 9 (left: 9 9 12) -> 9 * 9 = 81 (left: 12 81) -> 81 / 12 = 6.75 (left: 6.75)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 6 = 9 (left: 9 9 12) -> 9 * 9 = 81 (left: 12 81) -> 81 / 12 = 6.75 (left: 6.75) -> 6.75 - 2 = 4.75 (left: 8)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "Without the input numbers, I am unable to provide possible next steps. Please provide the numbers so I can assist you further."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "15 - 9 = 6 (left:"
                }
            },
            "Step 7": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 6 + 9 = 15 (left: 9 9 15) -> 15 - 9 = 6 (left: -> 9 + 15 = 24 (left: ",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "3 9"
                }
            },
            "Step 8": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9) -> 9 / 3 = 3 (left: 3 9) -> 9 / 3 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "Apologies for not providing the possible next steps without the input numbers. Please provide the numbers so I can assist you further."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 - 3 = 9 (left: 6 9 9)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "18 9 12"
                }
            },
            "Step 1": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 12 / 9 = 1.33 (left: 18 1.33)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 12 / 9 = 1.33 (left: 18 1.33) -> 18 * 1.33 = 23.94 (left: 1.33 23.94)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 12 / 9 = 1.33 (left: 18 1.33) -> 18 * 1.33 = 23.94 (left: 1.33 23.94) -> 1.33 + 23.94 = 25.27 (left: 25.27)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "9 9 12"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "9 9 12"
                }
            },
            "Step 4": {
                "Step": "3 + 6 = 9 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 + 6 = 9 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 10 / 4",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 6 = 9 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 10 / 4 -> 10 / 4 = 2.5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "15 - 9 = 6 (left:"
                }
            },
            "Step 7": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 6 + 9 = 15 (left: 9 9 15) -> 15 - 9 = 6 (left: -> 9 - 15 = -6 (left: -6)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "15 - 9 = 6 (left:"
                }
            },
            "Step 8": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 6 + 9 = 15 (left: 9 9 15) -> 15 - 9 = 6 (left: -> 15 - 3 = 12 (left: 12 = 6)",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "3 + 6 = 9 (left: 9 9 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "9 6 12"
                }
            },
            "Step 1": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 6 * 12 = 72 (left: 9 72)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 6 * 12 = 72 (left: 9 72) -> 72 / 9 = 8 (left: 8 72)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 6 * 12 = 72 (left: 9 72) -> 72 / 9 = 8 (left: 8 72) -> 8 * 9 = 72 (left: 72)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "3 9 12"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "4 5"
                }
            },
            "Step 4": {
                "Step": "3 * 6 = 18 (left: 9 12 18) -> 18 - 9 = 9 (left: 9 18) -> Input: 3 5 7 -> 7 - 3 = 4 (left: 4 5) -> 5 - 4 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "9 6 12"
                }
            },
            "Step 5": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 6 + 12 = 18 (left: 9 18)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 6 + 12 = 18 (left: 9 18) -> 9 * 18 = 162 (left: 162) ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "15 - 9 = 6 (left:"
                }
            },
            "Step 7": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 6 + 9 = 15 (left: 9 9 15) -> 15 - 9 = 6 (left: -> 9 / 15 = 0.6 (left: 0.6)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "8.5 10.5"
                }
            },
            "Step 8": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 / 6 = 1.5 (left: 1.5 9) -> 1.5 + 9 = 10.5 (left: 10.5) -> 10.5 - 2 = 8.5 (left: 8.5 10.5) -> 8.5 * 10.5 = 89.25 (left: 89.25)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "4 5"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 - 3 = 3 (left: 3 9 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 9 9"
                }
            },
            "Step 1": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 6 + 9 = 15 (left: 9 9 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 6 + 9 = 15 (left: 9 9 15) -> 9 + 9 = 18 (left: 18 15)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 6 + 9 = 15 (left: 9 9 15) -> 9 + 9 = 18 (left: 18 15) -> 18 / 15 = 1.2 (left: 1.2)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "9 9 12"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "8.5 10.5"
                }
            },
            "Step 4": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 / 6 = 1.5 (left: 1.5 9) -> 1.5 + 9 = 10.5 (left: 10.5) -> 10.5 - 2 = 8.5 (left: 8.5 10.5) -> 10.5 - 8.5 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "9 9 12"
                }
            },
            "Step 5": {
                "Step": "3 + 6 = 9 (left: 9 9 12) -> 12 / 9 = 1.33 (left: 9 1.33)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 6 = 9 (left: 9 9 12) -> 12 / 9 = 1.33 (left: 9 1.33) -> 9 - 1.33 = 7.67 (left: 7.67)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "15 - 9 = 6 (left:"
                }
            },
            "Step 7": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 6 + 9 = 15 (left: 9 9 15) -> 15 - 9 = 6 (left: -> 15 + 9 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "162"
                }
            },
            "Step 8": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 6 + 12 = 18 (left: 9 18) -> 9 * 18 = 162 (left: 162)  -> 6",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "4 5"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "3 + 6 = 9 (left: 9 9 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 9 9"
                }
            },
            "Step 1": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 - 9 = 0 (left: 6 0 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 - 9 = 0 (left: 6 0 9) -> 6 / 6 = 1 (left: 1 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 - 9 = 0 (left: 6 0 9) -> 6 / 6 = 1 (left: 1 9) -> 9 / 1 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "9 9 12"
                },
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "9 9 12"
                }
            },
            "Step 4": {
                "Step": "3 + 6 = 9 (left: 9 9 12) -> 12 + 9 = 21 (left: 9 21)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 + 6 = 9 (left: 9 9 12) -> 12 + 9 = 21 (left: 9 21) -> 21 - 9 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 6 = 9 (left: 9 9 12) -> 12 + 9 = 21 (left: 9 21) -> 21 - 9 = 12 (left: 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "No possible next steps with just one number provided."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "15 - 9 = 6 (left:"
                }
            },
            "Step 7": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 6 + 9 = 15 (left: 9 9 15) -> 15 - 9 = 6 (left: -> 15 - 9 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "15 - 9 = 6 (left:"
                }
            },
            "Step 8": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 6 + 9 = 15 (left: 9 9 15) -> 15 - 9 = 6 (left: -> 15 - 9 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "9 + 12"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "3 + 6 = 9 (left: 9 9 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "18 9 12"
                }
            },
            "Step 1": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 18 + 9 = 27 (left: 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 18 + 9 = 27 (left: 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 18 + 9 = 27 (left: 12) -> 12 / 2 = 6 (left: 6) -> 6 + 8 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "3 9 12"
                },
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "9 9 12"
                }
            },
            "Step 4": {
                "Step": "3 + 6 = 9 (left: 9 9 12) -> 12 * 9 = ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 + 6 = 9 (left: 9 9 12) -> 12 * 9 =  -> 12 * 9 = 108",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 6 = 9 (left: 9 9 12) -> 12 * 9 =  -> 12 * 9 = 108 -> 9 + 12",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "15 - 9 = 6 (left:"
                }
            },
            "Step 7": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 6 + 9 = 15 (left: 9 9 15) -> 15 - 9 = 6 (left: -> 15 + 9 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "8.5 10.5"
                }
            },
            "Step 8": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 / 6 = 1.5 (left: 1.5 9) -> 1.5 + 9 = 10.5 (left: 10.5) -> 10.5 - 2 = 8.5 (left: 8.5 10.5) -> 10.5 - 8.5 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "Without the input numbers, I am unable to provide possible next steps. Please provide the numbers so I can assist you further."
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "3 * 6 = 18 (left: 9 12 18)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 9 9"
                }
            },
            "Step 1": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 / 6 = 1.5 (left: 1.5 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 / 6 = 1.5 (left: 1.5 9) -> 1.5 + 9 = 10.5 (left: 10.5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 / 6 = 1.5 (left: 1.5 9) -> 1.5 + 9 = 10.5 (left: 10.5) -> 10.5 - 2 = 8.5 (left: 8.5 10.5)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "9 9 12"
                }
            },
            "Step 4": {
                "Step": "3 + 6 = 9 (left: 9 9 12) -> 9 + 9 = 18 (left: 18 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 + 6 = 9 (left: 9 9 12) -> 9 + 9 = 18 (left: 18 12) -> 18 + 12 = 30 (left: 30)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 6 = 9 (left: 9 9 12) -> 9 + 9 = 18 (left: 18 12) -> 18 + 12 = 30 (left: 30) -> There are no possible next steps with the input 30.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "No possible next steps with just one number provided."
                }
            },
            "Step 7": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 18 - 12 = 6 (left: 6 9) -> 6 * 9 = 54 (left: 54) -> No possible next steps with just one number provided. -> Please provide at least two numbers to generate possible next steps.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 18 - 12 = 6 (left: 6 9) -> 6 * 9 = 54 (left: 54) -> No possible next steps with just one number provided. -> Please provide at least two numbers to generate possible next steps. -> Please provide at least two numbers to generate possible next steps.",
                "Pruning": null
            }
        },
        "Input": "3 6 9 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "927": {
        "puzzle": "6 9 12 13",
        "Agent 0": {
            "Step 0": {
                "Step": "6 * 9 = 54 (left: 12 13 54)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 + 4 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 + 4 = 10 (left: 10) -> 10 / 2 = 5",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 + 4 = 10 (left: 10) -> 10 / 2 = 5 -> 10 + 2 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "6 4 "
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "12 13 54"
                }
            },
            "Step 4": {
                "Step": "6 * 9 = 54 (left: 12 13 54) -> 12 + 13 = 25 (left: 25 54)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 * 9 = 54 (left: 12 13 54) -> 12 + 13 = 25 (left: 25 54) -> 25 * 54 = 1350 (left: 1350)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 9 = 54 (left: 12 13 54) -> 12 + 13 = 25 (left: 25 54) -> 25 * 54 = 1350 (left: 1350) -> 13 - 5 = 8 (left: 8 0)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "8 0"
                }
            },
            "Step 7": {
                "Step": "6 * 9 = 54 (left: 12 13 54) -> 12 + 13 = 25 (left: 25 54) -> 25 * 54 = 1350 (left: 1350) -> 13 - 5 = 8 (left: 8 0) -> 8 - 0 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "There are no possible next steps as there are not enough numbers to perform any operations."
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 + 4 = 10 (left: 10) -> 10 - 8 = 2 (left: 2) -> There are no possible next steps as there are not enough numbers to perform any operations. -> None",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "There are no possible next steps with the input of -2."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 12 13 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "12 13 15"
                }
            },
            "Step 1": {
                "Step": "6 + 9 = 15 (left: 12 13 15) -> 12 / 3 = 4 (left: 4 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 9 = 15 (left: 12 13 15) -> 12 / 3 = 4 (left: 4 15) -> 4 * 15 = 60 (left: 15 60)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 9 = 15 (left: 12 13 15) -> 12 / 3 = 4 (left: 4 15) -> 4 * 15 = 60 (left: 15 60) -> 15 * 60 = 900 (left: 900)",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "3 12 13"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "3 12 13"
                }
            },
            "Step 4": {
                "Step": "9 - 6 = 3 (left: 3 12 13) -> 13 - 12 = 1 (left: 3 1)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 6 = 3 (left: 3 12 13) -> 13 - 12 = 1 (left: 3 1) -> 3 * 1 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 6 = 3 (left: 3 12 13) -> 13 - 12 = 1 (left: 3 1) -> 3 * 1 = 3 (left: 3) -> There are no possible next steps with just the number 3.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "8 0"
                }
            },
            "Step 7": {
                "Step": "6 * 9 = 54 (left: 12 13 54) -> 12 + 13 = 25 (left: 25 54) -> 25 * 54 = 1350 (left: 1350) -> 13 - 5 = 8 (left: 8 0) -> 8 + 0 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "1.444444 - 1 = 0.444444"
                }
            },
            "Step 8": {
                "Step": "9 - 6 = 3 (left: 3 12 13) -> 12 - 3 = 9 (left: 9 13) -> 13 / 9 = 1.444444 (left: 1.444444) -> 1.444444 - 1 = 0.444444 -> 1.444444 + 1 = 2.444444 (left: 1 2.444444)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 12 13 15)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n21 - 5 = 16 (left: 3 16)\n16 + 3 = 19 (left: 19)\n19 + 5 = 24 (left: 24)\nAnswer: ((3 * 7) - 5) + 3 + 5 = 24",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "12 13 54"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "6 4 "
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 - 4 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 - 4 = 2 (left: 2) -> 2 + 2 = 4",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 - 4 = 2 (left: 2) -> 2 + 2 = 4 -> 4 * 2 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "None. The input provided is already in its simplified form."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "8 0"
                }
            },
            "Step 7": {
                "Step": "6 * 9 = 54 (left: 12 13 54) -> 12 + 13 = 25 (left: 25 54) -> 25 * 54 = 1350 (left: 1350) -> 13 - 5 = 8 (left: 8 0) -> 8 + 0 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "None. The input provided is already in its simplified form."
                }
            },
            "Step 8": {
                "Step": "9 - 6 = 3 (left: 3 12 13) -> 12 / 3 = 4 (left: 4 13) -> Possible next steps: -> None. The input provided is already in its simplified form. -> No further calculations needed.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 6 4 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 / 4 = 1.5 (left: 1.5 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 / 4 = 1.5 (left: 1.5 4) -> 4 - 1.5 = 2.5 (left: 2.5 4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 / 4 = 1.5 (left: 1.5 4) -> 4 - 1.5 = 2.5 (left: 2.5 4) -> 2.5 * 4 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "3 12 13"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "6 12 13"
                }
            },
            "Step 4": {
                "Step": "9 / 3 = 3 (left: 6 12 13) -> 12 - 6 = 6 (left: 6 6 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 / 3 = 3 (left: 6 12 13) -> 12 - 6 = 6 (left: 6 6 13) -> 13 + 6 = 19 (left: 6 19)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 / 3 = 3 (left: 6 12 13) -> 12 - 6 = 6 (left: 6 6 13) -> 13 + 6 = 19 (left: 6 19) -> 6 + 19 = 25 (left: 25)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "None. The input provided is already in its simplified form."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "8 0"
                }
            },
            "Step 7": {
                "Step": "6 * 9 = 54 (left: 12 13 54) -> 12 + 13 = 25 (left: 25 54) -> 25 * 54 = 1350 (left: 1350) -> 13 - 5 = 8 (left: 8 0) -> 8 / 0 is undefined (left: 8 0)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 * 9 = 54 (left: 12 13 54) -> 12 + 13 = 25 (left: 25 54) -> 25 * 54 = 1350 (left: 1350) -> 13 - 5 = 8 (left: 8 0) -> 8 / 0 is undefined (left: 8 0) -> 8 * 0 = 0 (left: 0) ",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "None. The input provided is already in its simplified form."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 6 9 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 7 8\nSteps:\n3 * 7 = 21 (left: 3 8 21)\n21 - 8 = 13 (left: 3 13)\n13 * 3 = 39 (left: 39)\nAnswer: (3 * 7) - (8 - 3) = 24",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "6 12 13"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "6 4 "
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 + 4 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 + 4 = 10 (left: 10) -> 10 - 8 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 + 4 = 10 (left: 10) -> 10 - 8 = 2 (left: 2) -> There are no possible next steps as there are not enough numbers to perform any operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "8 0"
                }
            },
            "Step 7": {
                "Step": "6 * 9 = 54 (left: 12 13 54) -> 12 + 13 = 25 (left: 25 54) -> 25 * 54 = 1350 (left: 1350) -> 13 - 5 = 8 (left: 8 0) -> 8 - 0 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "There are no possible next steps with the input 1.5."
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 / 4 = 1.5 (left: 1.5) -> There are no possible next steps with the input 1.5. -> There are no possible next steps with the input 1.5. -> 1.5 + 1.5 = 3 (left: 1.5 3)",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "6 * 9 = 54 (left: 12 13 54)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 4 * 6",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 4 * 6 -> 4 - 6 = -2 (left: -2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 4 * 6 -> 4 - 6 = -2 (left: -2) -> There are no possible next steps with the input of -2.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "6 4 "
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 - 4 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 - 4 = 2 (left: 2) -> 2 + 2 = 4 (left: 2 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 - 4 = 2 (left: 2) -> 2 + 2 = 4 (left: 2 4) -> 2 + 4 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "None. The input provided is already in its simplified form."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "8 0"
                }
            },
            "Step 7": {
                "Step": "6 * 9 = 54 (left: 12 13 54) -> 12 + 13 = 25 (left: 25 54) -> 25 * 54 = 1350 (left: 1350) -> 13 - 5 = 8 (left: 8 0) -> 8 - 2 = 6 (left: 0 6)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 * 9 = 54 (left: 12 13 54) -> 12 + 13 = 25 (left: 25 54) -> 25 * 54 = 1350 (left: 1350) -> 13 - 5 = 8 (left: 8 0) -> 8 - 2 = 6 (left: 0 6) -> 6 - 0 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "There are no possible next steps with the input of -2."
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 6 12 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 + 4 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 + 4 = 10 (left: 10) -> 10 + 10 = 20",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 + 4 = 10 (left: 10) -> 10 + 10 = 20 -> 10 - 10 = 0 (left: 0 10 20)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "6 4 "
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 / 4 = 1.5 (left: 1.5) -> There are no possible next steps with the input 1.5.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 / 4 = 1.5 (left: 1.5) -> There are no possible next steps with the input 1.5. -> There are no possible next steps with the input 1.5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "8 0"
                }
            },
            "Step 7": {
                "Step": "6 * 9 = 54 (left: 12 13 54) -> 12 + 13 = 25 (left: 25 54) -> 25 * 54 = 1350 (left: 1350) -> 13 - 5 = 8 (left: 8 0) -> 8 / 0 = undefined or not a number",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 * 9 = 54 (left: 12 13 54) -> 12 + 13 = 25 (left: 25 54) -> 25 * 54 = 1350 (left: 1350) -> 13 - 5 = 8 (left: 8 0) -> 8 / 0 = undefined or not a number -> Division by zero is undefined in mathematics.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 7 12 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 12 13"
                }
            },
            "Step 1": {
                "Step": "9 - 6 = 3 (left: 3 12 13) -> 12 - 3 = 9 (left: 9 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 6 = 3 (left: 3 12 13) -> 12 - 3 = 9 (left: 9 13) -> 13 / 9 = 1.444444 (left: 1.444444)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 6 = 3 (left: 3 12 13) -> 12 - 3 = 9 (left: 9 13) -> 13 / 9 = 1.444444 (left: 1.444444) -> 1.444444 - 1 = 0.444444",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "6 4 "
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 6 7\nSteps:\n3 * 7 = 21 (left: 3 6 21)\n21 - 6 = 15 (left: 3 15)\n15 + 3 = 18 (left: 18)\n18 + 6 = 24 (left: 24)\nAnswer: ((3 * 7) - 6) + 3 + 6 = 24",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "None. The input provided is already in its simplified form."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "8 0"
                }
            },
            "Step 7": {
                "Step": "6 * 9 = 54 (left: 12 13 54) -> 12 + 13 = 25 (left: 25 54) -> 25 * 54 = 1350 (left: 1350) -> 13 - 5 = 8 (left: 8 0) -> 8 - 0 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "8 0"
                }
            },
            "Step 8": {
                "Step": "6 * 9 = 54 (left: 12 13 54) -> 12 + 13 = 25 (left: 25 54) -> 25 * 54 = 1350 (left: 1350) -> 13 - 5 = 8 (left: 8 0) -> 8 + 0 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "8 0"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: 3 12 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 5 7 8\nSteps:\n5 + 7 = 12 (left: 3 8 12)\n12 - 8 = 4 (left: 3 4)\n3 * 4 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((5 + 7) - 8) * 2 = 24",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "6 12 13"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "6 4 "
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 7 8\nSteps:\n3 + 7 = 10 (left: 3 8 10)\n8 - 3 = 5 (left: 5 10)\n5 * 10 = 50 (left: 50)\n50 / 2 = 25 (left: 25)\n25 - 1 = 24 (left: 24)\nAnswer: (((3 + 7) * 10) / 2)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "There are no possible next steps with the input of -2."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "8 0"
                }
            },
            "Step 7": {
                "Step": "6 * 9 = 54 (left: 12 13 54) -> 12 + 13 = 25 (left: 25 54) -> 25 * 54 = 1350 (left: 1350) -> 13 - 5 = 8 (left: 8 0) -> 8 + 0 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "1.444444 - 1 = 0.444444"
                }
            },
            "Step 8": {
                "Step": "9 - 6 = 3 (left: 3 12 13) -> 12 - 3 = 9 (left: 9 13) -> 13 / 9 = 1.444444 (left: 1.444444) -> 1.444444 - 1 = 0.444444 -> 1.444444 * -1 = -1.444444",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: 3 12 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 12 13"
                }
            },
            "Step 1": {
                "Step": "9 - 6 = 3 (left: 3 12 13) -> 12 / 3 = 4 (left: 4 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 6 = 3 (left: 3 12 13) -> 12 / 3 = 4 (left: 4 13) -> Possible next steps:",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 6 = 3 (left: 3 12 13) -> 12 / 3 = 4 (left: 4 13) -> Possible next steps: -> None. The input provided is already in its simplified form.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "6 4 "
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 3 8\nSteps:\n3 * 3 = 9 (left: 9 8)\n9 - 8 = 1 (left: 1)\n1 * 24 = 24 (left: 24)\nAnswer: (3 * 3 - 8) * 24 = 24",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "There are no possible next steps with the input of -2."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "8 0"
                }
            },
            "Step 7": {
                "Step": "6 * 9 = 54 (left: 12 13 54) -> 12 + 13 = 25 (left: 25 54) -> 25 * 54 = 1350 (left: 1350) -> 13 - 5 = 8 (left: 8 0) -> 8 / 0 = undefined (division by zero)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 * 9 = 54 (left: 12 13 54) -> 12 + 13 = 25 (left: 25 54) -> 25 * 54 = 1350 (left: 1350) -> 13 - 5 = 8 (left: 8 0) -> 8 / 0 = undefined (division by zero) -> There are no possible next steps for the division by zero operation.",
                "Pruning": null
            }
        },
        "Input": "6 9 12 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "928": {
        "puzzle": "4 7 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 4 7 13)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24 -> Input: 3 3 4 7\nSteps:\n3 + 4 = 7 (left: 3 7 7)\n7 + 7 = 14 (left: 3 14)\n14 - 3 = 11 (left: 11)\n11 * 2 = 24 (left: 24)\nAnswer: ((3 + 4) + (7 + 7)) * 2 = 24",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "9 13 28"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "4 6 "
                }
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 + 6 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 + 8 = 18 (left: 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 + 8 = 18 (left: 8) -> 8 + 8 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "There are no possible next steps for the input 18."
                }
            },
            "Step 7": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 + 8 = 18 (left: 18) -> There are no possible next steps for the input 18. -> There are no possible next steps for the input 18.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 + 8 = 18 (left: 18) -> There are no possible next steps for the input 18. -> There are no possible next steps for the input 18. -> None",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "There is only one possible step:"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 - 4 = 5 (left: 5 9 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 + 6 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 + 8 = 18 (left: 18)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 + 8 = 18 (left: 18) -> There are no possible next steps for the input 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "4 6 "
                }
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 10 + 5 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 10 + 5 = 15 (left: 15) -> 15 / 8 = 1.875 (left: 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 10 + 5 = 15 (left: 15) -> 15 / 8 = 1.875 (left: 8) -> 8 * 8 = 64",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "There are no possible next steps for the input 18."
                }
            },
            "Step 7": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 + 8 = 18 (left: 18) -> There are no possible next steps for the input 18. -> There are no possible next steps for the input 18.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 + 8 = 18 (left: 18) -> There are no possible next steps for the input 18. -> There are no possible next steps for the input 18. -> There are no possible next steps for the input 18.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 * 7 = 28 (left: 9 13 28)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 7 13"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 4 + 7 = 11 (left: 11 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 4 + 7 = 11 (left: 11 13) -> 11 - 13 = -2 (left: -2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 4 + 7 = 11 (left: 11 13) -> 11 - 13 = -2 (left: -2) -> There are no possible next steps with -2 as the input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "4 6 "
                }
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 + 6 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 * 2 = 20 (left: 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 * 2 = 20 (left: 2) -> 2 + 2 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "There are no possible next steps for the number 39."
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 7 - 4 = 3 (left: 3 13) -> 3 * 13 = 39 (left: 39) -> There are no possible next steps for the number 39. -> There are no possible next steps for the number 39.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 7 - 4 = 3 (left: 3 13) -> 3 * 13 = 39 (left: 39) -> There are no possible next steps for the number 39. -> There are no possible next steps for the number 39. -> There are no possible next steps for the number 39.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 * 7 = 28 (left: 9 13 28)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 3 + 9 = 12 (left: 12 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 3 + 9 = 12 (left: 12 3) -> 12 - 3 = 9 (left: 9 3)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 3 + 9 = 12 (left: 12 3) -> 12 - 3 = 9 (left: 9 3) -> 9 - 3 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "9 13 28"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "0.75 3.5"
                }
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 6 / 4 = 1.5 (left: 1.5) -> 1.5 + 2 = 3.5 -> 1.5 / 2 = 0.75 (left: 0.75 3.5) -> 0.75 * 3.5 = 2.625 (left: 2.625)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "5 9 13"
                }
            },
            "Step 5": {
                "Step": "9 - 4 = 5 (left: 5 9 13) -> 9 * 5 = 45 (left: 45 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 4 = 5 (left: 5 9 13) -> 9 * 5 = 45 (left: 45 13) -> 45 / 13 = 3.46153846154 (left: 3.46153846154)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "3.46153846154"
                }
            },
            "Step 7": {
                "Step": "9 - 4 = 5 (left: 5 9 13) -> 9 * 5 = 45 (left: 45 13) -> 45 / 13 = 3.46153846154 (left: 3.46153846154) -> 3.46153846154 + 3 = 6.46153846154",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 4 = 5 (left: 5 9 13) -> 9 * 5 = 45 (left: 45 13) -> 45 / 13 = 3.46153846154 (left: 3.46153846154) -> 3.46153846154 + 3 = 6.46153846154 -> 3.46153846154 + 3.461538",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 + 7 = 11 (left: 9 11 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 6 / 4 = 1.5 (left: 1.5) -> 1.5 + 2 = 3.5",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 6 / 4 = 1.5 (left: 1.5) -> 1.5 + 2 = 3.5 -> 1.5 / 2 = 0.75 (left: 0.75 3.5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "4 6 "
                }
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 6 / 4 = 1.5 (left: 1.5) -> There are no possible next steps with the input 1.5.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 6 / 4 = 1.5 (left: 1.5) -> There are no possible next steps with the input 1.5. -> 1.5 * 2 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "There are no possible next steps for the input 18."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "There are no possible next steps with -2 as the input."
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 4 + 7 = 11 (left: 11 13) -> 11 - 13 = -2 (left: -2) -> There are no possible next steps with -2 as the input. -> There are no possible next steps with -2 as the input.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 4 + 7 = 11 (left: 11 13) -> 11 - 13 = -2 (left: -2) -> There are no possible next steps with -2 as the input. -> There are no possible next steps with -2 as the input. -> There are no possible next steps with -2 as the input.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "4 * 7 = 28 (left: 9 13 28)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "5 9 13"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 5 9 13) -> 5 * 9 = 45 (left: 45 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 5 9 13) -> 5 * 9 = 45 (left: 45 13) -> 45 / 13 = 3.4615 (left: 3.4615)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 5 9 13) -> 5 * 9 = 45 (left: 45 13) -> 45 / 13 = 3.4615 (left: 3.4615) -> 3.4615 + 2 = 5.4615 (left: 5.4615)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "4 7 13"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "4 6 "
                }
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24 -> Input: 3 5 6 7\nSteps:\n3 + 7 = 10 (left: 5 6 10)\n5 * 6 = 30 (left: 10 30)\n30 / 10 = 3 (left: 3 30)\n3 * 3 = 9 (left: 9 30)\n30 - 9 = 21 (left: 21)\n21 + 9 = 30 (left: 30",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "There are no possible next steps with -2 as the input."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2 + 2 = 4"
                }
            },
            "Step 7": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 * 2 = 20 (left: 2) -> 2 + 2 = 4 -> 2 / 2 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "There are no possible next steps with -2 as the input."
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 4 + 7 = 11 (left: 11 13) -> 11 - 13 = -2 (left: -2) -> There are no possible next steps with -2 as the input. -> There are no possible next steps with -2 as the input.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "13 - 7 = 6 (left: 4 6 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 7 13"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 13 / 4 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 13 / 4 =  -> 13 - 4 = 9",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 13 / 4 =  -> 13 - 4 = 9 -> 9 + 4 = 13 (left: 13)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "4 7 13"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "4 6 "
                }
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 6 / 4 = 1.5 (left: 1.5) -> 1.5 + 8 = 9.5 (left: 9.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 6 / 4 = 1.5 (left: 1.5) -> 1.5 + 8 = 9.5 (left: 9.5) -> There is only one possible step:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "There are no possible next steps with -2 as the input."
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 4 + 7 = 11 (left: 11 13) -> 11 - 13 = -2 (left: -2) -> There are no possible next steps with -2 as the input. -> Possible next steps:",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 4 + 7 = 11 (left: 11 13) -> 11 - 13 = -2 (left: -2) -> There are no possible next steps with -2 as the input. -> Possible next steps: -> There are no possible next steps with the current input.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "4 * 7 = 28 (left: 9 13 28)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 6 - 4 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 6 - 4 = 2 (left: 2) -> No possible next steps.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 6 - 4 = 2 (left: 2) -> No possible next steps. -> None",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "9 13 28"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "9 13 28"
                }
            },
            "Step 4": {
                "Step": "4 * 7 = 28 (left: 9 13 28) -> 9 * 13 = 117 (left: 117 28)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 * 7 = 28 (left: 9 13 28) -> 9 * 13 = 117 (left: 117 28) -> 117 + 28 = 145 (left: 145)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 7 = 28 (left: 9 13 28) -> 9 * 13 = 117 (left: 117 28) -> 117 + 28 = 145 (left: 145) -> 45 - 1 = 44 (left: 44 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "There are no possible next steps with -2 as the input."
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 4 + 7 = 11 (left: 11 13) -> 11 - 13 = -2 (left: -2) -> There are no possible next steps with -2 as the input. -> There are no possible next steps with -2 as the input.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 4 + 7 = 11 (left: 11 13) -> 11 - 13 = -2 (left: -2) -> There are no possible next steps with -2 as the input. -> There are no possible next steps with -2 as the input. -> There are no possible next steps with -2 as the input.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "4 * 7 = 28 (left: 9 13 28)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24 -> Input: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6)\n3 + 6 = 9 (left: 9)\n9 * 24 = 24\nAnswer: (3 * 8) * (3 + 6) = 24",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "4 6 "
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "4 6 "
                }
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 - 6 = -2 (left: -",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 - 6 = -2 (left: - -> There are no possible next steps as the input is incomplete.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 - 6 = -2 (left: - -> There are no possible next steps as the input is incomplete. -> Input is incomplete. Please provide more numbers to continue.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "8 + 8 = 16"
                }
            },
            "Step 7": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 + 8 = 18 (left: 8) -> 8 + 8 = 16 -> 16 + 8 = 24 (left: 8 24)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 + 8 = 18 (left: 8) -> 8 + 8 = 16 -> 16 + 8 = 24 (left: 8 24) -> 24 - 8 = 16 (left: 8 16)",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 4 7 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24 -> Input: 3 6 8 9\nSteps:\n3 * 8 = 24 (left: 6 9 24)\n9 - 6 = 3 (left: 3 24)\n3 * 24 = 72 (left: 72)\nAnswer: (3 * 8) - (9 - 6) = 24",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "9 11 13"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "4 7 13"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 7 - 4 = 3 (left: 3 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 7 - 4 = 3 (left: 3 13) -> 3 * 13 = 39 (left: 39)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 7 - 4 = 3 (left: 3 13) -> 3 * 13 = 39 (left: 39) -> There are no possible next steps for the number 39.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "There is only one possible step:"
                }
            },
            "Step 7": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 6 / 4 = 1.5 (left: 1.5) -> 1.5 + 8 = 9.5 (left: 9.5) -> There is only one possible step: -> 8 + 8 = 16 (left: 2 16)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 6 / 4 = 1.5 (left: 1.5) -> 1.5 + 8 = 9.5 (left: 9.5) -> There is only one possible step: -> 8 + 8 = 16 (left: 2 16) -> 16 / 2 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "8 * 8 = 64"
                }
            }
        },
        "Input": "4 7 9 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "929": {
        "puzzle": "5 6 8 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 + 6 = 10 (left: 10 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 + 6 = 10 (left: 10 12) -> 12 - 10 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 + 6 = 10 (left: 10 12) -> 12 - 10 = 2 (left: 2) -> 2 - 2 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "8 30 12"
                },
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "8 30 12"
                }
            },
            "Step 4": {
                "Step": "5 * 6 = 30 (left: 8 30 12) -> 30 - 8 = 22 (left: 22 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 6 = 30 (left: 8 30 12) -> 30 - 8 = 22 (left: 22 12) -> 22 / 12 = 1.83 (left: 1.83)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 6 = 30 (left: 8 30 12) -> 30 - 8 = 22 (left: 22 12) -> 22 / 12 = 1.83 (left: 1.83) -> There are no possible next steps for the input 1.83.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "8 160"
                }
            },
            "Step 7": {
                "Step": "5 * 6 = 30 (left: 8 30 12) -> 8 * 30 = 240 (left: 12 240) -> 240 / 12 = 20 (left: 20) -> 20 * 8 = 160 (left: 8 160) -> 8 * 20 = 160 (left: 20)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "There are no possible next steps with the input of 30."
                }
            },
            "Step 8": {
                "Step": "8 - 5 = 3 (left: 3 6 12) -> 3 * 6 = 18 (left: 18 12) -> 18 + 12 = 30 (left: 30) -> There are no possible next steps with the input of 30. -> There are no possible next steps with the input of 30.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 - 5 = 7 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24 12) -> 24 / 12 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24 12) -> 24 / 12 = 2 (left: 2) -> 2 + 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "8 11 12"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "8 96"
                }
            },
            "Step 4": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24 12) -> 24 - 12 = 12 (left: 12) -> 12 * 8 = 96 (left: 8 96) -> 8 - 96 = -88 (left: -88)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": ""
                }
            },
            "Step 5": {
                "Step": "12 - 6 = 6 (left:  -> It seems like you did not provide an input. Please provide the numbers to continue finding possible next steps.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 6 = 6 (left:  -> It seems like you did not provide an input. Please provide the numbers to continue finding possible next steps. -> It seems like you did not provide an input. Please provide the numbers to continue finding possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "8 160"
                }
            },
            "Step 7": {
                "Step": "5 * 6 = 30 (left: 8 30 12) -> 8 * 30 = 240 (left: 12 240) -> 240 / 12 = 20 (left: 20) -> 20 * 8 = 160 (left: 8 160) -> 8 + 160 = 168 (left: 168)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "There are no possible next steps with the input of 30."
                }
            },
            "Step 8": {
                "Step": "8 - 5 = 3 (left: 3 6 12) -> 3 * 6 = 18 (left: 18 12) -> 18 + 12 = 30 (left: 30) -> There are no possible next steps with the input of 30. -> There are no possible next steps with the input of 30.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 * 6 = 30 (left: 8 12 30)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "8 11 12"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 8 11 12) -> 8 * 11 = 88 (left: 88)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 8 11 12) -> 8 * 11 = 88 (left: 88) -> 8 - 8 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 8 11 12) -> 8 * 11 = 88 (left: 88) -> 8 - 8 = 0 (left: 0) -> There are no possible next steps with the input 0.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "8 30 12"
                }
            },
            "Step 4": {
                "Step": "5 * 6 = 30 (left: 8 30 12) -> 8 / 30 = 0.26666666666666666 (left: 0.26666666666666666 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 6 = 30 (left: 8 30 12) -> 8 / 30 = 0.26666666666666666 (left: 0.26666666666666666 12) -> ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 6 = 30 (left: 8 30 12) -> 8 / 30 = 0.26666666666666666 (left: 0.26666666666666666 12) ->  -> It seems like there was no input provided. Please enter a set of numbers to continue.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "8 160"
                }
            },
            "Step 7": {
                "Step": "5 * 6 = 30 (left: 8 30 12) -> 8 * 30 = 240 (left: 12 240) -> 240 / 12 = 20 (left: 20) -> 20 * 8 = 160 (left: 8 160) -> 160 / 8 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "15.75 - 2 = 13.75"
                }
            },
            "Step 8": {
                "Step": "5 * 6 = 30 (left: 8 30 12) -> 30 / 8 = 3.75 (left: 3.75 12) -> 3.75 + 12 = 15.75 (left: 15.75) -> 15.75 - 2 = 13.75 -> 15.75 + 2 = 17.75 (left: 17.75)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "There are no possible next steps with the input of 30."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 * 6 = 30 (left: 8 30 12)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 / 12 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 / 12 = 2 (left: 2) -> No possible next steps with just one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "8 30 12"
                }
            },
            "Step 4": {
                "Step": "5 * 6 = 30 (left: 8 30 12) -> 8 * 30 = 240 (left: 12 240)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 6 = 30 (left: 8 30 12) -> 8 * 30 = 240 (left: 12 240) -> 240 / 12 = 20 (left: 20)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 6 = 30 (left: 8 30 12) -> 8 * 30 = 240 (left: 12 240) -> 240 / 12 = 20 (left: 20) -> 20 * 8 = 160 (left: 8 160)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "8 160"
                }
            },
            "Step 7": {
                "Step": "5 * 6 = 30 (left: 8 30 12) -> 8 * 30 = 240 (left: 12 240) -> 240 / 12 = 20 (left: 20) -> 20 * 8 = 160 (left: 8 160) -> 160 - 8 = 152 (left: 152)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "There are no possible next steps with the input 3.2 as it is only one number."
                }
            },
            "Step 8": {
                "Step": "5 * 6 = 30 (left: 8 30 12) -> 8 / 30 = 0.26667 (left: 0.26667 12) -> 0.26667 * 12 = 3.2 (left: 3.2) -> There are no possible next steps with the input 3.2 as it is only one number. -> There are no possible next steps with the input 3.2 as it is only one number.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 - 8 = 4 (left: 4 6 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "8 11 12"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 8 11 12) -> 8 * 11 = 88 (left: 12 88)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 8 11 12) -> 8 * 11 = 88 (left: 12 88) -> 12 + 88 = 100 (left: 100)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 8 11 12) -> 8 * 11 = 88 (left: 12 88) -> 12 + 88 = 100 (left: 100) -> 100 * 2 = 200 (left: 2)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "8 30 12"
                },
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "8 30 12"
                }
            },
            "Step 4": {
                "Step": "5 * 6 = 30 (left: 8 30 12) -> 30 - 12 = 18 (left: 8 18)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 6 = 30 (left: 8 30 12) -> 30 - 12 = 18 (left: 8 18) -> 8 + 18 = 26 (left: 26)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 6 = 30 (left: 8 30 12) -> 30 - 12 = 18 (left: 8 18) -> 8 + 18 = 26 (left: 26) -> 26 + 2 = 28 (left: 28)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "No further steps can be taken with just the number 14."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "8 160"
                }
            },
            "Step 7": {
                "Step": "5 * 6 = 30 (left: 8 30 12) -> 8 * 30 = 240 (left: 12 240) -> 240 / 12 = 20 (left: 20) -> 20 * 8 = 160 (left: 8 160) -> 8 * 2 = 16 (left: 16 160)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 * 6 = 30 (left: 8 30 12) -> 8 * 30 = 240 (left: 12 240) -> 240 / 12 = 20 (left: 20) -> 20 * 8 = 160 (left: 8 160) -> 8 * 2 = 16 (left: 16 160) -> 16 * 10 = 160 (left: 160)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "There are no possible next steps with the input 0."
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "12 - 5 = 7 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 - 4 = 2 (left: 2 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 - 4 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 - 4 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14) -> No further steps can be taken with just the number 14.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "8 30 12"
                }
            },
            "Step 4": {
                "Step": "5 * 6 = 30 (left: 8 30 12) -> 30 - 12 = 18 (left: 8 18)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 6 = 30 (left: 8 30 12) -> 30 - 12 = 18 (left: 8 18) -> 10 + 5 = 15 (left: 15 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 6 = 30 (left: 8 30 12) -> 30 - 12 = 18 (left: 8 18) -> 10 + 5 = 15 (left: 15 3) -> 15 - 3 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "There are no possible next steps with the input of 30."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "8 160"
                }
            },
            "Step 7": {
                "Step": "5 * 6 = 30 (left: 8 30 12) -> 8 * 30 = 240 (left: 12 240) -> 240 / 12 = 20 (left: 20) -> 20 * 8 = 160 (left: 8 160) -> 160 - 8 = 152 (left: 152)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "There are no possible next steps with the input of 30."
                }
            },
            "Step 8": {
                "Step": "8 - 5 = 3 (left: 3 6 12) -> 3 * 6 = 18 (left: 18 12) -> 18 + 12 = 30 (left: 30) -> There are no possible next steps with the input of 30. -> There are no possible next steps with the input of 30.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "12 - 8 = 4 (left: 5 6 4)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 - 4 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 - 4 =  -> 6 - 4 = 2",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 - 4 =  -> 6 - 4 = 2 -> 6 / 2 = 3 (left: 3 - 4 = -1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "8 30 12"
                }
            },
            "Step 4": {
                "Step": "5 * 6 = 30 (left: 8 30 12) -> 12 - 8 = 4 (left: 4 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 6 = 30 (left: 8 30 12) -> 12 - 8 = 4 (left: 4 12) -> 12 - 4 = 8 (left: 8 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 6 = 30 (left: 8 30 12) -> 12 - 8 = 4 (left: 4 12) -> 12 - 4 = 8 (left: 8 12) -> 8 / 12 = 0.6667 (left: 0.6667)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "There are no possible next steps with the input 0."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "8 160"
                }
            },
            "Step 7": {
                "Step": "5 * 6 = 30 (left: 8 30 12) -> 8 * 30 = 240 (left: 12 240) -> 240 / 12 = 20 (left: 20) -> 20 * 8 = 160 (left: 8 160) -> 160 / 8 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "3 - 4 = -1"
                }
            },
            "Step 8": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 - 4 =  -> 6 - 4 = 2 -> 6 / 2 = 3 (left: 3 - 4 = -1) -> 3 + 4 = 7 (left: 7 -1)",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "12 - 8 = 4 (left: 5 6 4)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24 12) -> 24 - 12 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24 12) -> 24 - 12 = 12 (left: 12) -> 12 * 8 = 96 (left: 8 96)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "8 30 12"
                }
            },
            "Step 4": {
                "Step": "5 * 6 = 30 (left: 8 30 12) -> 8 / 30 = 0.26667 (left: 0.26667 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 6 = 30 (left: 8 30 12) -> 8 / 30 = 0.26667 (left: 0.26667 12) -> 0.26667 * 12 = 3.2 (left: 3.2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 6 = 30 (left: 8 30 12) -> 8 / 30 = 0.26667 (left: 0.26667 12) -> 0.26667 * 12 = 3.2 (left: 3.2) -> There are no possible next steps with the input 3.2 as it is only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "8 160"
                }
            },
            "Step 7": {
                "Step": "5 * 6 = 30 (left: 8 30 12) -> 8 * 30 = 240 (left: 12 240) -> 240 / 12 = 20 (left: 20) -> 20 * 8 = 160 (left: 8 160) -> 160 / 8 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "8 96"
                }
            },
            "Step 8": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24 12) -> 24 - 12 = 12 (left: 12) -> 12 * 8 = 96 (left: 8 96) -> 8 - 4 = 4 (left: 2 4)",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "8 - 5 = 3 (left: 3 6 12)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 6 12"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 6 12) -> 3 * 6 = 18 (left: 18 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 6 12) -> 3 * 6 = 18 (left: 18 12) -> 18 + 12 = 30 (left: 30)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 6 12) -> 3 * 6 = 18 (left: 18 12) -> 18 + 12 = 30 (left: 30) -> There are no possible next steps with the input of 30.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "8 30 12"
                }
            },
            "Step 4": {
                "Step": "5 * 6 = 30 (left: 8 30 12) -> 12 - 8 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 6 = 30 (left: 8 30 12) -> 12 - 8 = 4 (left: 4) -> 4 + 2 = 6",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 6 = 30 (left: 8 30 12) -> 12 - 8 = 4 (left: 4) -> 4 + 2 = 6 -> 2 / 4 = 0.5 (left: 0.5)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "No possible next steps with just one number."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "8 160"
                }
            },
            "Step 7": {
                "Step": "5 * 6 = 30 (left: 8 30 12) -> 8 * 30 = 240 (left: 12 240) -> 240 / 12 = 20 (left: 20) -> 20 * 8 = 160 (left: 8 160) -> 8 ^ 2 = 64 (left: 64 160)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 * 6 = 30 (left: 8 30 12) -> 8 * 30 = 240 (left: 12 240) -> 240 / 12 = 20 (left: 20) -> 20 * 8 = 160 (left: 8 160) -> 8 ^ 2 = 64 (left: 64 160) -> 160 / 2 = 80 (left: 64 80)",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 8 11 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 12 - 4 = 8 (left: 8 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 12 - 4 = 8 (left: 8 6) -> 8 + 6 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 12 - 4 = 8 (left: 8 6) -> 8 + 6 = 14 (left: 14) -> No possible next steps as there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "8 30 12"
                }
            },
            "Step 4": {
                "Step": "5 * 6 = 30 (left: 8 30 12) -> 30 / 8 = 3.75 (left: 3.75 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 6 = 30 (left: 8 30 12) -> 30 / 8 = 3.75 (left: 3.75 12) -> 3.75 + 12 = 15.75 (left: 15.75)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 6 = 30 (left: 8 30 12) -> 30 / 8 = 3.75 (left: 3.75 12) -> 3.75 + 12 = 15.75 (left: 15.75) -> 15.75 - 2 = 13.75",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "8 160"
                }
            },
            "Step 7": {
                "Step": "5 * 6 = 30 (left: 8 30 12) -> 8 * 30 = 240 (left: 12 240) -> 240 / 12 = 20 (left: 20) -> 20 * 8 = 160 (left: 8 160) -> 8 + 152 = 160 (left: 152)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "8 96"
                }
            },
            "Step 8": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24 12) -> 24 - 12 = 12 (left: 12) -> 12 * 8 = 96 (left: 8 96) -> 8 * 96 = 768 (left: 768)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "15.75 - 2 = 13.75"
                }
            }
        },
        "Input": "5 6 8 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "930": {
        "puzzle": "2 4 6 7",
        "Agent 0": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 2 10 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 5"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 / 5 = 4.8 (left: 4.8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 / 5 = 4.8 (left: 4.8) -> 4.8 + 2 = 6.8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "2 4 "
                }
            },
            "Step 4": {
                "Step": "6 * 7 = 42 (left: 2 4  -> 2 * 4 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 * 7 = 42 (left: 2 4  -> 2 * 4 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 7 = 42 (left: 2 4  -> 2 * 4 = 8 (left: 8) -> 8 + 8 = 16 -> 8 - 8 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "There are no possible next steps with just one number provided."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "0 16"
                }
            },
            "Step 7": {
                "Step": "6 * 7 = 42 (left: 2 4  -> 2 * 4 = 8 (left: 8) -> 8 + 8 = 16 -> 8 - 8 = 0 (left: 0 16) -> 16 * 0 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "There are no possible next steps for the input 50 as it is a single number and not an expression."
                }
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 + 6 = 10 (left: 5 10) -> 5 * 10 = 50 (left: 50) -> There are no possible next steps for the input 50 as it is a single number and not an expression. -> None",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "0 16"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 2 10 7)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 6 7) -> 7 - 6 = 1 (left: 1 1)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 6 7) -> 7 - 6 = 1 (left: 1 1) -> 1 / 1 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 6 7) -> 7 - 6 = 1 (left: 1 1) -> 1 / 1 = 1 (left: 1) -> There are no possible next steps with just one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "2 4 "
                }
            },
            "Step 4": {
                "Step": "6 * 7 = 42 (left: 2 4  -> 4 - 2 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 * 7 = 42 (left: 2 4  -> 4 - 2 = 2 (left: 2) -> 2 + 2 = 4",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 7 = 42 (left: 2 4  -> 4 - 2 = 2 (left: 2) -> 2 + 2 = 4 -> 2 / 2 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "There are no possible next steps for the input 50 as it is a single number and not an expression."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "0 16"
                }
            },
            "Step 7": {
                "Step": "6 * 7 = 42 (left: 2 4  -> 2 * 4 = 8 (left: 8) -> 8 + 8 = 16 -> 8 - 8 = 0 (left: 0 16) -> 16 / 0 = undefined",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 * 7 = 42 (left: 2 4  -> 2 * 4 = 8 (left: 8) -> 8 + 8 = 16 -> 8 - 8 = 0 (left: 0 16) -> 16 / 0 = undefined -> Division by zero is undefined.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 4 6 5)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "8 6 7"
                }
            },
            "Step 1": {
                "Step": "2 * 4 = 8 (left: 8 6 7) -> 8 / 6 = 1.333 (left: 1.333 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 4 = 8 (left: 8 6 7) -> 8 / 6 = 1.333 (left: 1.333 7) -> 1.333 + 7 = 8.333 (left: 8.333)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 4 = 8 (left: 8 6 7) -> 8 / 6 = 1.333 (left: 1.333 7) -> 1.333 + 7 = 8.333 (left: 8.333) -> There is no clear next step as the input is not a valid expression or equation.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "2 4 "
                }
            },
            "Step 4": {
                "Step": "6 * 7 = 42 (left: 2 4  -> 4 - 2 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 * 7 = 42 (left: 2 4  -> 4 - 2 = 2 (left: 2) -> 2 / 2 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 7 = 42 (left: 2 4  -> 4 - 2 = 2 (left: 2) -> 2 / 2 = 1 (left: 1) -> There is only one number provided, so there are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "0 16"
                }
            },
            "Step 7": {
                "Step": "6 * 7 = 42 (left: 2 4  -> 2 * 4 = 8 (left: 8) -> 8 + 8 = 16 -> 8 - 8 = 0 (left: 0 16) -> 16 + 0 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "There are no possible next steps for the input 50 as it is a single number and not an expression."
                }
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 + 6 = 10 (left: 5 10) -> 5 * 10 = 50 (left: 50) -> There are no possible next steps for the input 50 as it is a single number and not an expression. -> There are no possible next steps for the input 50 as it is a single number and not an expression.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 * 4 = 8 (left: 8 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 5"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 + 6 = 10 (left: 5 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 + 6 = 10 (left: 5 10) -> 5 * 10 = 50 (left: 50)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 + 6 = 10 (left: 5 10) -> 5 * 10 = 50 (left: 50) -> There are no possible next steps for the input 50 as it is a single number and not an expression.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "2 4 "
                }
            },
            "Step 4": {
                "Step": "6 * 7 = 42 (left: 2 4  -> 2 * 4 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 * 7 = 42 (left: 2 4  -> 2 * 4 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 7 = 42 (left: 2 4  -> 2 * 4 = 8 (left: 8) -> 8 + 8 = 16 -> 8 - 8 = 0 (left: 0 16)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "0 16"
                }
            },
            "Step 7": {
                "Step": "6 * 7 = 42 (left: 2 4  -> 2 * 4 = 8 (left: 8) -> 8 + 8 = 16 -> 8 - 8 = 0 (left: 0 16) -> 0 * 16 = 0 (left: 16)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "There are no possible next steps for the input 50 as it is a single number and not an expression."
                }
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 + 6 = 10 (left: 5 10) -> 5 * 10 = 50 (left: 50) -> There are no possible next steps for the input 50 as it is a single number and not an expression. -> There are no possible next steps for the input 50 as it is a single number and not an expression.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 * 7 = 42 (left: 2 4 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 5"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 5 + 4 = 9 (left: 6 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 5 + 4 = 9 (left: 6 9) -> Possible next steps:",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 5 + 4 = 9 (left: 6 9) -> Possible next steps: -> There are no possible next steps for this input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "2 4 "
                }
            },
            "Step 4": {
                "Step": "6 * 7 = 42 (left: 2 4  -> 7 * 3 = 21 (left: ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 * 7 = 42 (left: 2 4  -> 7 * 3 = 21 (left:  -> It seems like you forgot to provide an input. Please enter 4 numbers separated by spaces so we can suggest possible next steps.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 7 = 42 (left: 2 4  -> 7 * 3 = 21 (left:  -> It seems like you forgot to provide an input. Please enter 4 numbers separated by spaces so we can suggest possible next steps. -> It seems like you forgot to provide an input. Please enter 4 numbers separated by spaces so we can suggest possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "0 16"
                }
            },
            "Step 7": {
                "Step": "6 * 7 = 42 (left: 2 4  -> 2 * 4 = 8 (left: 8) -> 8 + 8 = 16 -> 8 - 8 = 0 (left: 0 16) -> 16 + 0 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "2 + 2 = 4"
                }
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 + 6 = 10 (left: 5 10) -> 10 / 5 = 2 (left: 2) -> 2 + 2 = 4 -> 2 - 2 = 0 (left: 0 4)",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 5"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 + 6 = 10 (left: 5 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 + 6 = 10 (left: 5 10) -> 10 / 5 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 + 6 = 10 (left: 5 10) -> 10 / 5 = 2 (left: 2) -> 2 + 2 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "2 4 "
                }
            },
            "Step 4": {
                "Step": "6 * 7 = 42 (left: 2 4  -> 2 * 4 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 * 7 = 42 (left: 2 4  -> 2 * 4 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 7 = 42 (left: 2 4  -> 2 * 4 = 8 (left: 8) -> 8 + 8 = 16 -> 16 * 8 = 128 (left: 128)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "There are no possible next steps with just one number provided."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "0 16"
                }
            },
            "Step 7": {
                "Step": "6 * 7 = 42 (left: 2 4  -> 2 * 4 = 8 (left: 8) -> 8 + 8 = 16 -> 8 - 8 = 0 (left: 0 16) -> 16 - 0 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "6 12"
                }
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 6 - 4 = 2 (left: 2 5) -> 9 - 3 = 6 (left: 6 12) -> 12 - 6 = 6 (left: 6 12) -> 12 - 6 = 6 (left: 6 12)",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 * 7 = 42 (left: 2 4 ",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 10 7"
                }
            },
            "Step 1": {
                "Step": "4 + 6 = 10 (left: 2 10 7) -> 7 - 2 = 5 (left: 5 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 6 = 10 (left: 2 10 7) -> 7 - 2 = 5 (left: 5 5) -> 5 / 5 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 6 = 10 (left: 2 10 7) -> 7 - 2 = 5 (left: 5 5) -> 5 / 5 = 1 (left: 1) -> There are no possible next steps with only one number given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "2 4 "
                }
            },
            "Step 4": {
                "Step": "6 * 7 = 42 (left: 2 4  -> 4 / 2 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 * 7 = 42 (left: 2 4  -> 4 / 2 = 2 (left: 2) -> 2 + 2 = 4",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 7 = 42 (left: 2 4  -> 4 / 2 = 2 (left: 2) -> 2 + 2 = 4 -> 2 * 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "2 + 2 = 4"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "0 16"
                }
            },
            "Step 7": {
                "Step": "6 * 7 = 42 (left: 2 4  -> 2 * 4 = 8 (left: 8) -> 8 + 8 = 16 -> 8 - 8 = 0 (left: 0 16) -> 0 * 16 = 0 (left: 0 16)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 * 7 = 42 (left: 2 4  -> 2 * 4 = 8 (left: 8) -> 8 + 8 = 16 -> 8 - 8 = 0 (left: 0 16) -> 0 * 16 = 0 (left: 0 16) -> Input: 3 9 27",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 5"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 6 - 4 = 2 (left: 2 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 6 - 4 = 2 (left: 2 5) -> 9 - 3 = 6 (left: 6 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 6 - 4 = 2 (left: 2 5) -> 9 - 3 = 6 (left: 6 12) -> 12 - 6 = 6 (left: 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "2 4 "
                }
            },
            "Step 4": {
                "Step": "6 * 7 = 42 (left: 2 4  -> 2 * 4 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 * 7 = 42 (left: 2 4  -> 2 * 4 = 8 (left: 8) -> 8 + 8 = 16 (left: 16)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 7 = 42 (left: 2 4  -> 2 * 4 = 8 (left: 8) -> 8 + 8 = 16 (left: 16) -> There are no possible next steps with the input of 16.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "0 16"
                }
            },
            "Step 7": {
                "Step": "6 * 7 = 42 (left: 2 4  -> 2 * 4 = 8 (left: 8) -> 8 + 8 = 16 -> 8 - 8 = 0 (left: 0 16) -> 16 + 0 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "0 16"
                }
            },
            "Step 8": {
                "Step": "6 * 7 = 42 (left: 2 4  -> 2 * 4 = 8 (left: 8) -> 8 + 8 = 16 -> 8 - 8 = 0 (left: 0 16) -> 0 + 16 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "There is no clear next step as the input is not a valid expression or equation."
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 2 4 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "2 4 "
                }
            },
            "Step 1": {
                "Step": "6 * 7 = 42 (left: 2 4  -> Possible next steps:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 7 = 42 (left: 2 4  -> Possible next steps: -> There are no more possible next steps with the current input.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 7 = 42 (left: 2 4  -> Possible next steps: -> There are no more possible next steps with the current input. -> None",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "2 4 "
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "2 4 "
                }
            },
            "Step 4": {
                "Step": "6 * 7 = 42 (left: 2 4  -> 2 + 4 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 * 7 = 42 (left: 2 4  -> 2 + 4 = 6 (left: 6) -> 6 - 2 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 7 = 42 (left: 2 4  -> 2 + 4 = 6 (left: 6) -> 6 - 2 = 4 (left: 4) -> There is only one possible next step: 4.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "0 16"
                }
            },
            "Step 7": {
                "Step": "6 * 7 = 42 (left: 2 4  -> 2 * 4 = 8 (left: 8) -> 8 + 8 = 16 -> 8 - 8 = 0 (left: 0 16) -> 0 + 16 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "There is only one possible next step: 4."
                }
            },
            "Step 8": {
                "Step": "6 * 7 = 42 (left: 2 4  -> 2 + 4 = 6 (left: 6) -> 6 - 2 = 4 (left: 4) -> There is only one possible next step: 4. -> 4 + 4 = 8",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "6 * 7 = 42 (left: 2 4 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 5"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 5 + 24 = 29 (left: 29)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 5 + 24 = 29 (left: 29) -> There is only one possible step for this input: 29 - 2 = 27 (left: 27)",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "2 4 "
                },
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "2 4 "
                }
            },
            "Step 4": {
                "Step": "6 * 7 = 42 (left: 2 4  -> 2 + 4 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 * 7 = 42 (left: 2 4  -> 2 + 4 = 6 (left: 6) -> There are no possible next steps with the input of 6.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 7 = 42 (left: 2 4  -> 2 + 4 = 6 (left: 6) -> There are no possible next steps with the input of 6. -> 0.75 + 8 = 8.75 (left: 8.75)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "There is no clear next step as the input is not a valid expression or equation."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "0 16"
                }
            },
            "Step 7": {
                "Step": "6 * 7 = 42 (left: 2 4  -> 2 * 4 = 8 (left: 8) -> 8 + 8 = 16 -> 8 - 8 = 0 (left: 0 16) -> 16 - 0 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "There are no possible next steps with just one number provided."
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 6 6 7) -> 7 - 6 = 1 (left: 1 1) -> 1 / 1 = 1 (left: 1) -> There are no possible next steps with just one number provided. -> Provide at least two numbers to perform operations.",
                "Pruning": null
            }
        },
        "Input": "2 4 6 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "931": {
        "puzzle": "2 5 10 10",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 2 = 8 (left: 8 10 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 10 "
                }
            },
            "Step 1": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 2 * 10 = 20 (left: 20)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 2 * 10 = 20 (left: 20) -> 20 * 8 = 160 (left: 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 2 * 10 = 20 (left: 20) -> 20 * 8 = 160 (left: 8) -> 8 + 8 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "-5 10 15"
                }
            },
            "Step 4": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 10 / 2 = 5 (left: 5) -> There are no possible next steps with just the number 5 provided. -> 5 - 10 = -5 (left: -5 10 15) -> 10 + 15 = 25 (left: -5 25)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 10 / 2 = 5 (left: 5) -> There are no possible next steps with just the number 5 provided. -> 5 - 10 = -5 (left: -5 10 15) -> 10 + 15 = 25 (left: -5 25) -> 3 * 9 = 27 (left: 27 27)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 10 / 2 = 5 (left: 5) -> There are no possible next steps with just the number 5 provided. -> 5 - 10 = -5 (left: -5 10 15) -> 10 + 15 = 25 (left: -5 25) -> 3 * 9 = 27 (left: 27 27) -> 27 + 27 = 54 (left: 54)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "No possible next steps as there is only one number left."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "3 9 12"
                }
            },
            "Step 7": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 10 / 2 = 5 (left: 5) -> There are no possible next steps with just the number 5 provided. -> 5 - 10 = -5 (left: -5 10 15) -> Input:  -> It appears that you have not provided an input to work with. Please provide the numbers you would like to use for the next steps. -> 6 - 3 = 3 (left: 3 9 12) -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 10 / 2 = 5 (left: 5) -> There are no possible next steps with just the number 5 provided. -> 5 - 10 = -5 (left: -5 10 15) -> Input:  -> It appears that you have not provided an input to work with. Please provide the numbers you would like to use for the next steps. -> 6 - 3 = 3 (left: 3 9 12) -> 12 / 3 = 4 (left: 4 12) -> 12 / 4 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "16 64"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 / 2 = 5 (left: 5 10 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 10 "
                }
            },
            "Step 1": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 10 / 2 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 10 / 2 = 5 (left: 5) -> There are no possible next steps with just the number 5 provided.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 10 / 2 = 5 (left: 5) -> There are no possible next steps with just the number 5 provided. -> 5 - 10 = -5 (left: -5 10 15)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "-5 10 15"
                }
            },
            "Step 4": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 10 / 2 = 5 (left: 5) -> There are no possible next steps with just the number 5 provided. -> 5 - 10 = -5 (left: -5 10 15) -> 10 * ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 10 / 2 = 5 (left: 5) -> There are no possible next steps with just the number 5 provided. -> 5 - 10 = -5 (left: -5 10 15) -> 10 *  -> 4 + 14 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "5 10 10"
                }
            },
            "Step 6": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "16 64"
                }
            },
            "Step 7": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 2 * 10 = 20 (left: 20) -> 20 * 8 = 160 (left: 8) -> 8 + 8 = 16 -> 8 * 8 = 64 (left: 16 64) -> 64 / 4 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "8 14"
                }
            },
            "Step 8": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 2 + 10 = 12 (left: 12) -> 12 / 2 = 6 (left: 6) -> 6 + 8 = 14 (left: 8 14) -> 14 - 8 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "There are no possible next steps as there are no numbers provided in the input."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 2 = 8 (left: 8 10 10)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "5 10 10"
                }
            },
            "Step 1": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 5 + 10 = 15 (left: 10 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 5 + 10 = 15 (left: 10 15) -> 10 + 15 = 25 (left: 25)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 5 + 10 = 15 (left: 10 15) -> 10 + 15 = 25 (left: 25) -> 25 - 8 = 17 (left: 8)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "8 10 10"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "-5 10 15"
                }
            },
            "Step 4": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 10 / 2 = 5 (left: 5) -> There are no possible next steps with just the number 5 provided. -> 5 - 10 = -5 (left: -5 10 15) -> -5 + 10 = 5 (left: 5 15)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 10 / 2 = 5 (left: 5) -> There are no possible next steps with just the number 5 provided. -> 5 - 10 = -5 (left: -5 10 15) -> -5 + 10 = 5 (left: 5 15) -> 5 * 15 = 75 (left: 75)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "There are no possible next steps as there are no numbers provided in the input."
                }
            },
            "Step 6": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 10 - 2 = 8 (left: 8) -> 8 - 8 = 0 (left: 0)  -> There are no possible next steps as there are no numbers provided in the input. -> No numbers provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "16 64"
                }
            },
            "Step 7": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 2 * 10 = 20 (left: 20) -> 20 * 8 = 160 (left: 8) -> 8 + 8 = 16 -> 8 * 8 = 64 (left: 16 64) -> 16 * 4 = 64 (left: 64)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "6 - 5.09 = "
                }
            },
            "Step 8": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 2 + 10 = 12 (left: 12) -> 12 / 2 = 6 (left: 6) -> 6 + 8 = 14 (left: 8 14) -> Input: 22 112 6 1.75 -> 112 / 22 = 5.09 (left: 5.09 6 1.75) -> 6 - 5.09 =  -> 6 - 5.09 = 0.91",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 * 2 = 10 (left: 10 10 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 10 "
                }
            },
            "Step 1": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 2 + 10 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 2 + 10 = 12 (left: 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 2 + 10 = 12 (left: 12) -> 12 / 2 = 6 (left: 6) -> 8 - 6 = 2 (left: 2 8 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "-5 10 15"
                }
            },
            "Step 4": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 10 / 2 = 5 (left: 5) -> There are no possible next steps with just the number 5 provided. -> 5 - 10 = -5 (left: -5 10 15) -> Input: ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 10 / 2 = 5 (left: 5) -> There are no possible next steps with just the number 5 provided. -> 5 - 10 = -5 (left: -5 10 15) -> Input:  -> It appears that you have not provided an input to work with. Please provide the numbers you would like to use for the next steps.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 10 / 2 = 5 (left: 5) -> There are no possible next steps with just the number 5 provided. -> 5 - 10 = -5 (left: -5 10 15) -> Input:  -> It appears that you have not provided an input to work with. Please provide the numbers you would like to use for the next steps. -> 6 - 3 = 3 (left: 3 9 12)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "5 10 10"
                }
            },
            "Step 7": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 10 / 5 = 2 (left: 2 10 10)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 10 / 5 = 2 (left: 2 10 10) -> 10 * 2 = 20 (left: 10 20)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 5 = 7 (left: 7 10 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 10 "
                }
            },
            "Step 1": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 10 - 2 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 10 - 2 = 8 (left: 8) -> 8 - 8 = 0 (left: 0) ",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 10 - 2 = 8 (left: 8) -> 8 - 8 = 0 (left: 0)  -> There are no possible next steps as there are no numbers provided in the input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "-5 10 15"
                }
            },
            "Step 4": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 10 / 2 = 5 (left: 5) -> There are no possible next steps with just the number 5 provided. -> 5 - 10 = -5 (left: -5 10 15) -> 10 / 15 = 0.6666666666666666 (left: -",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "5 10 10"
                }
            },
            "Step 5": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 9 - 3 = 6 (left: 3",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 9 - 3 = 6 (left: 3 -> 8 / 3 = 2.67 (left: 2.67)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "5 10 10"
                }
            },
            "Step 7": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 10 * 5 = 50 (left: 10 50)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 10 * 5 = 50 (left: 10 50) -> 10 + 50 = 60 (left: 60)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "6 - 5.09 = "
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "10 / 2 = 5 (left: 5 10 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "5 10 10"
                }
            },
            "Step 1": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 10 * 5 = 50 (left: 10 10 50)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 10 * 5 = 50 (left: 10 10 50) -> 50 / 10 = 5 (left: 10 5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 10 * 5 = 50 (left: 10 10 50) -> 50 / 10 = 5 (left: 10 5) -> 10 / 5 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "10 10 10"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "-5 10 15"
                }
            },
            "Step 4": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 10 / 2 = 5 (left: 5) -> There are no possible next steps with just the number 5 provided. -> 5 - 10 = -5 (left: -5 10 15) -> 10 / -5 = -2 (left: -2 15)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 10 / 2 = 5 (left: 5) -> There are no possible next steps with just the number 5 provided. -> 5 - 10 = -5 (left: -5 10 15) -> 10 / -5 = -2 (left: -2 15) -> -2 * 15 = -30 (left: -30)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "8 + 8 = 16"
                }
            },
            "Step 6": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 2 * 10 = 20 (left: 20) -> 20 * 8 = 160 (left: 8) -> 8 + 8 = 16 -> 8 * 8 = 64 (left: 16 64)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "5 10"
                }
            },
            "Step 7": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10) -> Input: 3 3 9",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10) -> Input: 3 3 9 -> 3 * 3 = 9 (left: 9 9)",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "10 + 2 = 12 (left: 5 10 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 10 "
                }
            },
            "Step 1": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 2 + 10 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 2 + 10 = 12 (left: 12) -> 12 + 2 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 2 + 10 = 12 (left: 12) -> 12 + 2 = 14 (left: 14) -> No possible next steps as there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "-5 10 15"
                }
            },
            "Step 4": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 10 / 2 = 5 (left: 5) -> There are no possible next steps with just the number 5 provided. -> 5 - 10 = -5 (left: -5 10 15) -> -5 / 10 = -0.5 (left: -0.5 15)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 10 / 2 = 5 (left: 5) -> There are no possible next steps with just the number 5 provided. -> 5 - 10 = -5 (left: -5 10 15) -> -5 / 10 = -0.5 (left: -0.5 15) -> 15 - (-0.5) = 15.5 (left: 15.5)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "No possible next steps as there is only one number left."
                }
            },
            "Step 6": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 2 + 10 = 12 (left: 12) -> 12 + 2 = 14 (left: 14) -> No possible next steps as there is only one number left. -> No possible next steps as there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "5 10"
                }
            },
            "Step 7": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10) -> 10 / 5 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10) -> 10 / 5 = 2 (left: 2) -> 2 + 2 = 4",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "5 * 2 = 10 (left: 10 10 10)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 10 "
                }
            },
            "Step 1": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 10 / 2 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 10 / 2 = 5 (left: 5) -> There are no possible next steps with just the number 5.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 10 / 2 = 5 (left: 5) -> There are no possible next steps with just the number 5. -> 5 / 5 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "5 10 "
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "8 14"
                }
            },
            "Step 4": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 2 + 10 = 12 (left: 12) -> 12 / 2 = 6 (left: 6) -> 6 + 8 = 14 (left: 8 14) -> Input: 22 112 6 1.75",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 2 + 10 = 12 (left: 12) -> 12 / 2 = 6 (left: 6) -> 6 + 8 = 14 (left: 8 14) -> Input: 22 112 6 1.75 -> 112 / 22 = 5.09 (left: 5.09 6 1.75)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 2 + 10 = 12 (left: 12) -> 12 / 2 = 6 (left: 6) -> 6 + 8 = 14 (left: 8 14) -> Input: 22 112 6 1.75 -> 112 / 22 = 5.09 (left: 5.09 6 1.75) -> 6 - 5.09 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "5 10"
                }
            },
            "Step 7": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10) -> Possible next steps:",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10) -> Possible next steps: -> There are no more possible next steps.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "5 + 10 = 15 (left: 2 10 ",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 10 "
                }
            },
            "Step 1": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 2 * 10 = 20 (left: 20)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 2 * 10 = 20 (left: 20) -> 20 / 2 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 2 * 10 = 20 (left: 20) -> 20 / 2 = 10 (left: 10) -> 10 * 2 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "8 10 10"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "-5 10 15"
                }
            },
            "Step 4": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 10 / 2 = 5 (left: 5) -> There are no possible next steps with just the number 5 provided. -> 5 - 10 = -5 (left: -5 10 15) -> -5 + 10 = 5 (left: 5 15)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 10 / 2 = 5 (left: 5) -> There are no possible next steps with just the number 5 provided. -> 5 - 10 = -5 (left: -5 10 15) -> -5 + 10 = 5 (left: 5 15) -> 15 - 5 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "-5 10 15"
                }
            },
            "Step 6": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 10 / 2 = 5 (left: 5) -> There are no possible next steps with just the number 5 provided. -> 5 - 10 = -5 (left: -5 10 15) -> 10 - (-5) = 15 (left: 15 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "5 10 10"
                }
            },
            "Step 7": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 5 + 10 = 15 (left: 10 15)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 5 + 10 = 15 (left: 10 15) -> 15 - 10 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "8 14"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "5 * 2 = 10 (left: 10 10 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 10 "
                }
            },
            "Step 1": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 2 + 10 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 2 + 10 = 12 (left: 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 2 + 10 = 12 (left: 12) -> 12 / 2 = 6 (left: 6) -> 6 + 8 = 14 (left: 8 14)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "-5 10 15"
                }
            },
            "Step 4": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 10 / 2 = 5 (left: 5) -> There are no possible next steps with just the number 5 provided. -> 5 - 10 = -5 (left: -5 10 15) -> 15 - 10 = 5 (left: -5 5)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 10 / 2 = 5 (left: 5) -> There are no possible next steps with just the number 5 provided. -> 5 - 10 = -5 (left: -5 10 15) -> 15 - 10 = 5 (left: -5 5) -> -5 / 5 = -1 (left: -1)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "5 10 10"
                }
            },
            "Step 6": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "5 10"
                }
            },
            "Step 7": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10) -> 5 * 10 = 50 (left: 10)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10) -> 5 * 10 = 50 (left: 10) -> 10 + 10 = 20",
                "Pruning": null
            }
        },
        "Input": "2 5 10 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "932": {
        "puzzle": "6 6 7 12",
        "Agent 0": {
            "Step 0": {
                "Step": "6 / 6 = 1 (left: 7 1)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "42 6"
                }
            },
            "Step 1": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 6 - 42 = -36 (left: -36)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 6 - 42 = -36 (left: -36) -> -36 - 2 = -38",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 6 - 42 = -36 (left: -36) -> -36 - 2 = -38 -> -36 + 2 = -34 (left: -34)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "1 7 12"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "7 1"
                }
            },
            "Step 4": {
                "Step": "6 / 6 = 1 (left: 7 1) -> 7 / 1 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 / 6 = 1 (left: 7 1) -> 7 / 1 = 7 (left: 7) -> 7 - 8 = -1 (left: -1 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 6 = 1 (left: 7 1) -> 7 / 1 = 7 (left: 7) -> 7 - 8 = -1 (left: -1 8) -> 8 - (-1) = 9 (left: 9)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "38 * 2 = 76"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "1 8"
                }
            },
            "Step 7": {
                "Step": "6 / 6 = 1 (left: 7 1) -> 7 + 1 = 8 (left: 8) -> 8 + 8 = 16 -> 8 / 8 = 1 (left: 1 8) -> 8 / 1 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "There are no possible next steps with the input 44."
                }
            },
            "Step 8": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> 48 - 4 = 44 (left: 44) -> There are no possible next steps with the input 44. -> There are no possible next steps with the input 44.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 * 6 = 36 (left: 7 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "42 6"
                }
            },
            "Step 1": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> 36 / 2 = 18 -> 18 / 2 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "7 12"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "7 1"
                }
            },
            "Step 4": {
                "Step": "6 / 6 = 1 (left: 7 1) -> 7 + 1 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 / 6 = 1 (left: 7 1) -> 7 + 1 = 8 (left: 8) -> 8 * 8 = 64",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 6 = 1 (left: 7 1) -> 7 + 1 = 8 (left: 8) -> 8 * 8 = 64 -> 8 - 8 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "There are no possible next steps with the input 44."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "1 8"
                }
            },
            "Step 7": {
                "Step": "6 / 6 = 1 (left: 7 1) -> 7 + 1 = 8 (left: 8) -> 8 + 8 = 16 -> 8 / 8 = 1 (left: 1 8) -> 1 + 8 = 9",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 / 6 = 1 (left: 7 1) -> 7 + 1 = 8 (left: 8) -> 8 + 8 = 16 -> 8 / 8 = 1 (left: 1 8) -> 1 + 8 = 9 -> 1 * 8 = 8 (left: 8 9)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 * 7 = 42 (left: 42 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "42 6"
                }
            },
            "Step 1": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 * 6 = 252 (left: 252)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 * 6 = 252 (left: 252) -> 2 - 5 = -3 (left: -3)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 * 6 = 252 (left: 252) -> 2 - 5 = -3 (left: -3) -> There are no possible next steps with the input of -3.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "42 6"
                }
            },
            "Step 4": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 / 6 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 / 6 = 7 (left: 7) -> 7 + 8 = 15 (left: 8 15)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 / 6 = 7 (left: 7) -> 7 + 8 = 15 (left: 8 15) -> 8 / 15 = 0.533333 (left: 0.533333)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "38 * 2 = 76"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "1 8"
                }
            },
            "Step 7": {
                "Step": "6 / 6 = 1 (left: 7 1) -> 7 + 1 = 8 (left: 8) -> 8 + 8 = 16 -> 8 / 8 = 1 (left: 1 8) -> 1 + 8 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "There are no possible next steps for the input 36."
                }
            },
            "Step 8": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> There are no possible next steps for the input 36. -> There are no possible next steps for the input 36. -> There are no possible next steps for the input 36.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "12 / 6 = 2 (left: 6 7 2)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "42 6"
                }
            },
            "Step 1": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> 48 / 24 = 2 (left",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> 48 / 24 = 2 (left -> 24 / 48 =",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "7 1"
                }
            },
            "Step 4": {
                "Step": "6 / 6 = 1 (left: 7 1) -> 7 + 1 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 / 6 = 1 (left: 7 1) -> 7 + 1 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 6 = 1 (left: 7 1) -> 7 + 1 = 8 (left: 8) -> 8 + 8 = 16 -> 8 / 8 = 1 (left: 1 8)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "1 8"
                }
            },
            "Step 7": {
                "Step": "6 / 6 = 1 (left: 7 1) -> 7 + 1 = 8 (left: 8) -> 8 + 8 = 16 -> 8 / 8 = 1 (left: 1 8) -> 1 * 8 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "24 / 48 ="
                }
            },
            "Step 8": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> 48 / 24 = 2 (left -> 24 / 48 = -> 24 / 48 = 0.5",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 /",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "42 6"
                }
            },
            "Step 1": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> 48 - 4 = 44 (left: 44)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> 48 - 4 = 44 (left: 44) -> There are no possible next steps with the input 44.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "42 6"
                }
            },
            "Step 4": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 6 * 42 = 252 (left: 252)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 6 * 42 = 252 (left: 252) -> 2 + 5 = 7 (left: 7 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 6 * 42 = 252 (left: 252) -> 2 + 5 = 7 (left: 7 2) -> 7 * 2 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "There are no possible next steps for the input 36."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "1 8"
                }
            },
            "Step 7": {
                "Step": "6 / 6 = 1 (left: 7 1) -> 7 + 1 = 8 (left: 8) -> 8 + 8 = 16 -> 8 / 8 = 1 (left: 1 8) -> 8 - 1 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "There are no possible next steps for the number 36 as it is an integer value and cannot be further manipulated using the operations provided."
                }
            },
            "Step 8": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> There are no possible next steps for the number 36 as it is an integer value and cannot be further manipulated using the operations provided. -> There are no possible next steps for the number 36 as it is an integer value and cannot be further manipulated using the operations provided. -> No possible next steps.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "7 + 6 = 13 (left: 6 13 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "42 6"
                }
            },
            "Step 1": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> 36 * 2 = 72",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> 36 * 2 = 72 -> 2 + 36 = 38 (left: 38 * 2 = 76)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "42 6"
                }
            },
            "Step 4": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> 48 * 2 = 96 (left: 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> 48 * 2 = 96 (left: 2) -> 2 - 2 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "38 * 2 = 76"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "1 8"
                }
            },
            "Step 7": {
                "Step": "6 / 6 = 1 (left: 7 1) -> 7 + 1 = 8 (left: 8) -> 8 + 8 = 16 -> 8 / 8 = 1 (left: 1 8) -> 1 + 8 = 9 (left: 8 9)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 / 6 = 1 (left: 7 1) -> 7 + 1 = 8 (left: 8) -> 8 + 8 = 16 -> 8 / 8 = 1 (left: 1 8) -> 1 + 8 = 9 (left: 8 9) -> 8 - 9 = -1 (left: -1)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "24 / 48 ="
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 / 6 = 1 (left: 1 7 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "42 6"
                }
            },
            "Step 1": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 * 6 = 252 (left: 252)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 * 6 = 252 (left: 252) -> 2 * 5 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 * 6 = 252 (left: 252) -> 2 * 5 = 10 (left: 10) -> 10 / 8 = 1.25 (left: 8)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "7 1"
                },
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "42 6"
                }
            },
            "Step 4": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> There are no possible next steps with the number 36.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> There are no possible next steps with the number 36. -> There are no possible next steps with the number 36.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "1 8"
                }
            },
            "Step 7": {
                "Step": "6 / 6 = 1 (left: 7 1) -> 7 + 1 = 8 (left: 8) -> 8 + 8 = 16 -> 8 / 8 = 1 (left: 1 8) -> 1 * 8 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "38 * 2 = 76"
                }
            },
            "Step 8": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> 36 * 2 = 72 -> 2 + 36 = 38 (left: 38 * 2 = 76) -> 38 / 2 = 19 (left: 19 * 2 = 38)",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "42 6"
                }
            },
            "Step 1": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> There are no possible next steps for the input 36.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> There are no possible next steps for the input 36. -> There are no possible next steps for the input 36.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "7 1"
                }
            },
            "Step 4": {
                "Step": "6 / 6 = 1 (left: 7 1) -> 7 + 1 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 / 6 = 1 (left: 7 1) -> 7 + 1 = 8 (left: 8) -> 8 * 8 = 64",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 6 = 1 (left: 7 1) -> 7 + 1 = 8 (left: 8) -> 8 * 8 = 64 -> 8 * 8 = 64 (left: 64)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "There are no possible next steps with the input 44."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "1 8"
                }
            },
            "Step 7": {
                "Step": "6 / 6 = 1 (left: 7 1) -> 7 + 1 = 8 (left: 8) -> 8 + 8 = 16 -> 8 / 8 = 1 (left: 1 8) -> 8 - 1 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "There are no possible next steps with the input 44."
                }
            },
            "Step 8": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> 48 - 4 = 44 (left: 44) -> There are no possible next steps with the input 44. -> There are no possible next steps with the input 44.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "6 + 6 = 12 (left: 7 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "7 1"
                }
            },
            "Step 1": {
                "Step": "6 / 6 = 1 (left: 7 1) -> 7 / 1 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 6 = 1 (left: 7 1) -> 7 / 1 = 7 (left: 7) -> 7 + 2 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 / 6 = 1 (left: 7 1) -> 7 / 1 = 7 (left: 7) -> 7 + 2 = 9 (left: 9) -> 9 / 1 = 9 (left: 9) ",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "1 6 12"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "7 1"
                }
            },
            "Step 4": {
                "Step": "6 / 6 = 1 (left: 7 1) -> 7 - 1 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 / 6 = 1 (left: 7 1) -> 7 - 1 = 6 (left: 6) -> 6 + 8 = 14 (left: 8 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 6 = 1 (left: 7 1) -> 7 - 1 = 6 (left: 6) -> 6 + 8 = 14 (left: 8 14) -> 8 * 14 = 112 (left: 112)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "There are no possible next steps for the input 36."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "1 8"
                }
            },
            "Step 7": {
                "Step": "6 / 6 = 1 (left: 7 1) -> 7 + 1 = 8 (left: 8) -> 8 + 8 = 16 -> 8 / 8 = 1 (left: 1 8) -> 8 / 1 = 8 (left: 8 8)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 / 6 = 1 (left: 7 1) -> 7 + 1 = 8 (left: 8) -> 8 + 8 = 16 -> 8 / 8 = 1 (left: 1 8) -> 8 / 1 = 8 (left: 8 8) -> 8 + 8 = 16",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "7 - 6 = 1 (left: 1 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "42 6"
                }
            },
            "Step 1": {
                "Step": "6 * 7 = 42 (left: 42 6) -> Input: 10 2",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 7 = 42 (left: 42 6) -> Input: 10 2 -> 10 - 2 = 8 (left: 2 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 7 = 42 (left: 42 6) -> Input: 10 2 -> 10 - 2 = 8 (left: 2 8) -> 8 / 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "42 6"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "42 6"
                }
            },
            "Step 4": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> There are no possible next steps for the number 36 as it is an integer value and cannot be further manipulated using the operations provided.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> There are no possible next steps for the number 36 as it is an integer value and cannot be further manipulated using the operations provided. -> There are no possible next steps for the number 36 as it is an integer value and cannot be further manipulated using the operations provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "1 8"
                }
            },
            "Step 7": {
                "Step": "6 / 6 = 1 (left: 7 1) -> 7 + 1 = 8 (left: 8) -> 8 + 8 = 16 -> 8 / 8 = 1 (left: 1 8) -> 8 - 1 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "There are no possible next steps with the input 44."
                }
            },
            "Step 8": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> 48 - 4 = 44 (left: 44) -> There are no possible next steps with the input 44. -> There are no possible next steps with the input 44.",
                "Pruning": null
            }
        },
        "Input": "6 6 7 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "933": {
        "puzzle": "6 9 9 11",
        "Agent 0": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 6 9 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "6 9 2"
                }
            },
            "Step 1": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 6 * 9 = 54 (left: 54 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 6 * 9 = 54 (left: 54 2) -> 54 * 2 = 108 (left: 108)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 6 * 9 = 54 (left: 54 2) -> 54 * 2 = 108 (left: 108) -> 1 + 0 + 8 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "1.5 9 11"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "1.5 9 11"
                }
            },
            "Step 4": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11) -> 9 / 1.5 = 6 (left: 6 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11) -> 9 / 1.5 = 6 (left: 6 11) -> 6 * 11 = 66 (left: 66)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11) -> 9 / 1.5 = 6 (left: 6 11) -> 6 * 11 = 66 (left: 66) -> There is only one number provided, so there are no possible next steps to perform any operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "2 8 22"
                }
            },
            "Step 7": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11) -> 11 - 1.5 = 9.5 (left: 9.5 11) -> Possible next steps: -> - 14 + 8 = 22 (left: 2 8 22) -> 22 - 2 = 20 (left: 8 20)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11) -> 11 - 1.5 = 9.5 (left: 9.5 11) -> Possible next steps: -> - 14 + 8 = 22 (left: 2 8 22) -> 22 - 2 = 20 (left: 8 20) -> 8 * 20 = 160 (left: 160)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "There are no possible next steps for the input 1.83."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 9 9 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 9 11"
                }
            },
            "Step 1": {
                "Step": "9 - 6 = 3 (left: 3 9 11) -> 9 / 3 = 3 (left: 3 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 6 = 3 (left: 3 9 11) -> 9 / 3 = 3 (left: 3 11) -> 11 / 3 = 3.67 (left: 3.67)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 6 = 3 (left: 3 9 11) -> 9 / 3 = 3 (left: 3 11) -> 11 / 3 = 3.67 (left: 3.67) -> 3.67 - 2 = 1.67",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "1.5 9 11"
                }
            },
            "Step 4": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11) -> 1.5 * 9 = 13.5 (left: 11 13.5)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11) -> 1.5 * 9 = 13.5 (left: 11 13.5) -> 11 - 13.5 = -2.5 (left: -2.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11) -> 1.5 * 9 = 13.5 (left: 11 13.5) -> 11 - 13.5 = -2.5 (left: -2.5) -> There are no possible next steps with the input of -2.5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "1 + 1 = 2"
                }
            },
            "Step 7": {
                "Step": "11 - 9 = 2 (left: 6 2 11) -> 2 / 6 = 0.3333333333333333 (left: 0.333333333333333 -> 0.333333333333333 / 0.333333333333333 = 1 (left: 1) -> 1 + 1 = 2 -> 1 / 1 = 1 (left: 1 1 2)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 9 = 2 (left: 6 2 11) -> 2 / 6 = 0.3333333333333333 (left: 0.333333333333333 -> 0.333333333333333 / 0.333333333333333 = 1 (left: 1) -> 1 + 1 = 2 -> 1 / 1 = 1 (left: 1 1 2) -> 3 + 5 = 8 (left: 7 8)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: 3 9 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 9 2"
                }
            },
            "Step 1": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 6 - 2 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 6 - 2 =  -> 4",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 6 - 2 =  -> 4 -> 4 + 8 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "6 9 2"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "6 2 11"
                }
            },
            "Step 4": {
                "Step": "11 - 9 = 2 (left: 6 2 11) -> 11 - 6 = 5 (left:",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 9 = 2 (left: 6 2 11) -> 11 - 6 = 5 (left: -> Possible next steps:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 9 = 2 (left: 6 2 11) -> 11 - 6 = 5 (left: -> Possible next steps: -> None, the input is already fully processed.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "115.5 - 8 = 107.5"
                }
            },
            "Step 7": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11) -> 1.5 + 9 = 10.5 (left: 10.5 11) -> 10.5 * 11 = 115.5 (left: 115.5) -> 115.5 - 8 = 107.5 -> 8 + 115.5 = 123.5",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11) -> 1.5 + 9 = 10.5 (left: 10.5 11) -> 10.5 * 11 = 115.5 (left: 115.5) -> 115.5 - 8 = 107.5 -> 8 + 115.5 = 123.5 -> 8 - 115.5 = -107.5",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 9 2"
                }
            },
            "Step 1": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 9 - 6 = 3 (left: 3 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 9 - 6 = 3 (left: 3 2) -> 3 / 2 = 1.5 (left: 1.5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 9 - 6 = 3 (left: 3 2) -> 3 / 2 = 1.5 (left: 1.5) -> 1.5 * 8 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "9 9 11"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "1.5 9 11"
                }
            },
            "Step 4": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11) -> 11 - 1.5 = 9.5 (left: 9.5 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11) -> 11 - 1.5 = 9.5 (left: 9.5 11) -> Possible next steps:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11) -> 11 - 1.5 = 9.5 (left: 9.5 11) -> Possible next steps: -> - 14 + 8 = 22 (left: 2 8 22)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "17 / 6 = 2.83"
                }
            },
            "Step 7": {
                "Step": "11 - 9 = 2 (left: 6 2 11) -> 11 + 6 -> 11 + 6 = 17 -> 17 / 6 = 2.83 -> 17 - 6 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "There are no possible next steps with the input of 3.5."
                }
            },
            "Step 8": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11) -> 9 - 1.5 = 7.5 (left: 7.5 11) -> 11 - 7.5 = 3.5 (left: 3.5) -> There are no possible next steps with the input of 3.5. -> There are no possible next steps with the input of 3.5.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "11 - 9 = 2 (left: 6 9 2)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 9 11"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 6 9 11) -> 6 * 9 = 54 (left: 11 54)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 6 9 11) -> 6 * 9 = 54 (left: 11 54) -> 11 * 54 = 594 (left: 594)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 / 3 = 3 (left: 6 9 11) -> 6 * 9 = 54 (left: 11 54) -> 11 * 54 = 594 (left: 594) -> 5 + 9 + 4 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "1.5 9 11"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "1.5 9 11"
                }
            },
            "Step 4": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11) -> 9 - 1.5 = 7.5 (left: 7.5 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11) -> 9 - 1.5 = 7.5 (left: 7.5 11) -> 11 - 7.5 = 3.5 (left: 3.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11) -> 9 - 1.5 = 7.5 (left: 7.5 11) -> 11 - 7.5 = 3.5 (left: 3.5) -> There are no possible next steps with the input of 3.5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There is only one number provided, so there are no possible next steps to perform any operations."
                }
            },
            "Step 7": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11) -> 9 / 1.5 = 6 (left: 6 11) -> 6 * 11 = 66 (left: 66) -> There is only one number provided, so there are no possible next steps to perform any operations. -> There are no possible next steps as there is only one number provided.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11) -> 9 / 1.5 = 6 (left: 6 11) -> 6 * 11 = 66 (left: 66) -> There is only one number provided, so there are no possible next steps to perform any operations. -> There are no possible next steps as there is only one number provided. -> There are no possible next steps as there is only one number provided.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 6 3 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "6 9 2"
                }
            },
            "Step 1": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 9 + 2 = 11 (left: 6 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 9 + 2 = 11 (left: 6 11) -> 11 / 6 = 1.83 (left: 1.83)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 9 + 2 = 11 (left: 6 11) -> 11 / 6 = 1.83 (left: 1.83) -> There are no possible next steps for the input 1.83.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "6 2 11"
                }
            },
            "Step 4": {
                "Step": "11 - 9 = 2 (left: 6 2 11) -> 2 / 6 = 0.3333333333333333 (left: 0.333333333333333",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 9 = 2 (left: 6 2 11) -> 2 / 6 = 0.3333333333333333 (left: 0.333333333333333 -> 0.333333333333333 / 0.333333333333333 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 9 = 2 (left: 6 2 11) -> 2 / 6 = 0.3333333333333333 (left: 0.333333333333333 -> 0.333333333333333 / 0.333333333333333 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no possible next steps with the input of -2.5."
                }
            },
            "Step 7": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11) -> 1.5 * 9 = 13.5 (left: 11 13.5) -> 11 - 13.5 = -2.5 (left: -2.5) -> There are no possible next steps with the input of -2.5. -> There are no possible next steps with the input of -2.5.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11) -> 1.5 * 9 = 13.5 (left: 11 13.5) -> 11 - 13.5 = -2.5 (left: -2.5) -> There are no possible next steps with the input of -2.5. -> There are no possible next steps with the input of -2.5. -> There are no possible next steps with the input of -2.5.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "11 - 9 = 2 (left: 6 9 2)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "9 9 11"
                }
            },
            "Step 1": {
                "Step": "6 + 9 = 15 (left: 9 9 11) -> 9 + 9 = 18 (left: 11 18)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 9 = 15 (left: 9 9 11) -> 9 + 9 = 18 (left: 11 18) -> 11 + 18 = 29 (left: 29)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 9 = 15 (left: 9 9 11) -> 9 + 9 = 18 (left: 11 18) -> 11 + 18 = 29 (left: 29) -> There are no possible next steps with just the number 29.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "1.5 9 11"
                }
            },
            "Step 4": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11) -> 9 / 1.5 = 6 (left: 6 11",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11) -> 9 / 1.5 = 6 (left: 6 11 -> 11 * 6 = 66 (left: 66)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11) -> 9 / 1.5 = 6 (left: 6 11 -> 11 * 6 = 66 (left: 66) -> There are no possible next steps for the input 66.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "There are no possible next steps with the input of -0.5 as it is not a valid number for basic arithmetic operations."
                }
            },
            "Step 7": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 9 / 6 = 1.5 (left: 1.5 2) -> 1.5 - 2 = -0.5 (left: -0.5) -> There are no possible next steps with the input of -0.5 as it is not a valid number for basic arithmetic operations. -> Invalid input. Please enter valid numbers for basic arithmetic operations.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 9 / 6 = 1.5 (left: 1.5 2) -> 1.5 - 2 = -0.5 (left: -0.5) -> There are no possible next steps with the input of -0.5 as it is not a valid number for basic arithmetic operations. -> Invalid input. Please enter valid numbers for basic arithmetic operations. -> Please enter valid numbers for basic arithmetic operations.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: 3 9 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 9 11"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 6 9 11) -> Input: 3 5",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 6 9 11) -> Input: 3 5 -> 5 - 3 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 / 3 = 3 (left: 6 9 11) -> Input: 3 5 -> 5 - 3 = 2 (left: 2) -> 2 + 2 = 4 (left: 2 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "6 2 11"
                }
            },
            "Step 4": {
                "Step": "11 - 9 = 2 (left: 6 2 11) -> 11 + 6",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 9 = 2 (left: 6 2 11) -> 11 + 6 -> 11 + 6 = 17",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 9 = 2 (left: 6 2 11) -> 11 + 6 -> 11 + 6 = 17 -> 17 / 6 = 2.83",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "There are no possible next steps with the input of -0.5 as it is not a valid number for basic arithmetic operations."
                }
            },
            "Step 7": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 9 / 6 = 1.5 (left: 1.5 2) -> 1.5 - 2 = -0.5 (left: -0.5) -> There are no possible next steps with the input of -0.5 as it is not a valid number for basic arithmetic operations. -> There are no possible next steps with the input of -0.5 as it is not a valid number for basic arithmetic operations.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 9 / 6 = 1.5 (left: 1.5 2) -> 1.5 - 2 = -0.5 (left: -0.5) -> There are no possible next steps with the input of -0.5 as it is not a valid number for basic arithmetic operations. -> There are no possible next steps with the input of -0.5 as it is not a valid number for basic arithmetic operations. -> Invalid input: -0.5",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 9 9 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "6 9 2"
                }
            },
            "Step 1": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 9 / 6 = 1.5 (left: 1.5 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 9 / 6 = 1.5 (left: 1.5 2) -> 2 / 1.5 = 1.33333 (left: 1.33333)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 9 / 6 = 1.5 (left: 1.5 2) -> 2 / 1.5 = 1.33333 (left: 1.33333) -> There are no possible next steps with the input 1.33333.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "1.5 9 11"
                }
            },
            "Step 4": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11) -> 1.5 + 9 = 10.5 (left: 10.5 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11) -> 1.5 + 9 = 10.5 (left: 10.5 11) -> 10.5 * 11 = 115.5 (left: 115.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11) -> 1.5 + 9 = 10.5 (left: 10.5 11) -> 10.5 * 11 = 115.5 (left: 115.5) -> 115.5 - 8 = 107.5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "17 / 6 = 2.83"
                }
            },
            "Step 7": {
                "Step": "11 - 9 = 2 (left: 6 2 11) -> 11 + 6 -> 11 + 6 = 17 -> 17 / 6 = 2.83 -> 17 - 6 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "None, the input is already fully processed."
                }
            },
            "Step 8": {
                "Step": "11 - 9 = 2 (left: 6 2 11) -> 11 - 6 = 5 (left: -> Possible next steps: -> None, the input is already fully processed. -> No more possible next steps as the input is already fully processed.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "11 - 9 = 2 (left: 6 2 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "6 9 2"
                }
            },
            "Step 1": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 6 + 9 = 15 (left: 2 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 6 + 9 = 15 (left: 2 15) -> 2 * 15 = 30 (left: 30)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 6 + 9 = 15 (left: 2 15) -> 2 * 15 = 30 (left: 30) -> 30 - 2 = 28 (left: 28)",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "6 2 11"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "6 9 2"
                }
            },
            "Step 4": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 9 / 6 = 1.5 (left: 1.5 2)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 9 / 6 = 1.5 (left: 1.5 2) -> 1.5 - 2 = -0.5 (left: -0.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 9 / 6 = 1.5 (left: 1.5 2) -> 1.5 - 2 = -0.5 (left: -0.5) -> There are no possible next steps with the input of -0.5 as it is not a valid number for basic arithmetic operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no possible next steps with the input of -2.5."
                }
            },
            "Step 7": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11) -> 1.5 * 9 = 13.5 (left: 11 13.5) -> 11 - 13.5 = -2.5 (left: -2.5) -> There are no possible next steps with the input of -2.5. -> There are no possible next steps with the input of -2.5.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11) -> 1.5 * 9 = 13.5 (left: 11 13.5) -> 11 - 13.5 = -2.5 (left: -2.5) -> There are no possible next steps with the input of -2.5. -> There are no possible next steps with the input of -2.5. -> There are no possible next steps with the input of -2.5.",
                "Pruning": null
            }
        },
        "Input": "6 9 9 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "934": {
        "puzzle": "5 8 11 12",
        "Agent 0": {
            "Step 0": {
                "Step": "11 + 5 = 16 (left: 8 12 16)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10) -> 10 + 10 = 20",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "8 12 16"
                }
            },
            "Step 4": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 12 - 8 = 4 (left:",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 12 - 8 = 4 (left: -> 12 / 4 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 12 - 8 = 4 (left: -> 12 / 4 = 3 (left: 3) -> 3 + 2 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "14 / 2 = 7"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "0.04167 * 2 = 0.08334"
                }
            },
            "Step 7": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 12 * 16 = 192 (left: 8 192) -> 8 / 0.04167 = 192 (left: 0.04167) -> 0.04167 * 2 = 0.08334 -> 0.04167 / 0.08334 = 0.5",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 12 * 16 = 192 (left: 8 192) -> 8 / 0.04167 = 192 (left: 0.04167) -> 0.04167 * 2 = 0.08334 -> 0.04167 / 0.08334 = 0.5 -> 0.08334 / 0.5 = 0.16668",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 11 12 13)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 11 + 12 = 23 (left: 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 11 + 12 = 23 (left: 13) -> 13 + 2 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 11 + 12 = 23 (left: 13) -> 13 + 2 = 15 (left: 15) -> There are no possible next steps with the input of 15.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "8 12 16"
                }
            },
            "Step 4": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 16 - 12 = 4 (left: 8 4)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 16 - 12 = 4 (left: 8 4) -> 8 * 4 = 32 (left: 32)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 16 - 12 = 4 (left: 8 4) -> 8 * 4 = 32 (left: 32) -> There are no possible next steps with the input 32.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "There are no possible next steps with the input of -4."
                }
            },
            "Step 7": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 8 + 12 = 20 (left: 20 16) -> 16 - 20 = -4 (left: -4) -> There are no possible next steps with the input of -4. -> There are no possible next steps with the input of -4.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 8 + 12 = 20 (left: 20 16) -> 16 - 20 = -4 (left: -4) -> There are no possible next steps with the input of -4. -> There are no possible next steps with the input of -4. -> There are no possible next steps with the input of -4.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 5 = 7 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132) -> 13 + 132 = 145 (left: 145)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132) -> 13 + 132 = 145 (left: 145) -> 5 + 4 = 9 (left: 9 45)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "8 12 16"
                }
            },
            "Step 4": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 12 * 16 = 192 (left: 8 192)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 12 * 16 = 192 (left: 8 192) -> 8 * 2 = 16 (left: 16 192)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 12 * 16 = 192 (left: 8 192) -> 8 * 2 = 16 (left: 16 192) -> 16 + 192 = 208 (left: 208)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "There are no possible next steps with the input of 15."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "14 / 2 = 7"
                }
            },
            "Step 7": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 1 + 13 = 14 (left: 14) -> 14 / 2 = 7 -> 2 + 7 = 9 (left: 9 14)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 1 + 13 = 14 (left: 14) -> 14 / 2 = 7 -> 2 + 7 = 9 (left: 9 14) -> 9 + 14 = 23 (left: 23)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "14 / 2 = 7"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "11 + 5 = 16 (left: 8 12 16)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23) -> 13 - 23 = -10 (left: -10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23) -> 13 - 23 = -10 (left: -10) -> There are no possible next steps for the input of -10.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "8 12 16"
                }
            },
            "Step 4": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 8 * 12 = 96 (left: 96 16)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 8 * 12 = 96 (left: 96 16) -> 96 + 16 = 112 (left: 112)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 8 * 12 = 96 (left: 96 16) -> 96 + 16 = 112 (left: 112) -> 1 + 1 + 2 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "There are no possible next steps with the input of 36."
                }
            },
            "Step 7": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 12 + 16 = 28 (left: 8 28) -> 8 + 28 = 36 (left: 36) -> There are no possible next steps with the input of 36. -> There are no valid operations that can be performed with the numbers 36.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 12 + 16 = 28 (left: 8 28) -> 8 + 28 = 36 (left: 36) -> There are no possible next steps with the input of 36. -> There are no valid operations that can be performed with the numbers 36. -> There are no valid operations that can be performed with the numbers 36.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 - 8 = 4 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 12 * 13 = 156 (left: 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 12 * 13 = 156 (left: 11) -> There are no possible next steps with just the number 11.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 12 * 13 = 156 (left: 11) -> There are no possible next steps with just the number 11. -> - 11 / 2 = 5.5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "8 12 16"
                }
            },
            "Step 4": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 12 - 8 = 4",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 12 - 8 = 4 -> 8 / 4 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 12 - 8 = 4 -> 8 / 4 = 2 (left: 2) -> 2 * 2 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "There are no possible next steps with the input of 36."
                }
            },
            "Step 7": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 12 + 16 = 28 (left: 8 28) -> 8 + 28 = 36 (left: 36) -> There are no possible next steps with the input of 36. -> There are no possible next steps with the input of 36.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 12 + 16 = 28 (left: 8 28) -> 8 + 28 = 36 (left: 36) -> There are no possible next steps with the input of 36. -> There are no possible next steps with the input of 36. -> None",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "1 + 1 + 2 = 4"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 11 13 12)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 12 = 1 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 12 = 1 (left: -> 13 + 12 = 25 (left: 25)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 12 = 1 (left: -> 13 + 12 = 25 (left: 25) -> 25 / 2 = 12.5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "8 12 16"
                }
            },
            "Step 4": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 12 + 16 = 28 (left: 8 28)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 12 + 16 = 28 (left: 8 28) -> 8 + 28 = 36 (left: 36)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 12 + 16 = 28 (left: 8 28) -> 8 + 28 = 36 (left: 36) -> There are no possible next steps with the input of 36.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps with the input of 15."
                }
            },
            "Step 7": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 11 + 12 = 23 (left: 13) -> 13 + 2 = 15 (left: 15) -> There are no possible next steps with the input of 15. -> 15 + 2 = 17 (left: 2 17)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 11 + 12 = 23 (left: 13) -> 13 + 2 = 15 (left: 15) -> There are no possible next steps with the input of 15. -> 15 + 2 = 17 (left: 2 17) -> 2 + 17 = 19 (left: 19)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "There are no possible next steps with the input of -4."
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "5 * 8 = 40 (left: 11 12 40)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 1 + 13 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 1 + 13 = 14 (left: 14) -> 14 / 2 = 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "8 12 16"
                }
            },
            "Step 4": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 12 / 16 = 0.75 (left: 8 0.75)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 12 / 16 = 0.75 (left: 8 0.75) -> 8 / 0.75 = 10.67 (left: 10.67)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 12 / 16 = 0.75 (left: 8 0.75) -> 8 / 0.75 = 10.67 (left: 10.67) -> There is only one possible next step for the input 10.67, which is to round it to the nearest whole number:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "There is only one possible next step for the input 10.67, which is to round it to the nearest whole number:"
                }
            },
            "Step 7": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 12 / 16 = 0.75 (left: 8 0.75) -> 8 / 0.75 = 10.67 (left: 10.67) -> There is only one possible next step for the input 10.67, which is to round it to the nearest whole number: -> 10.67 rounded to the nearest whole number = 11",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 12 / 16 = 0.75 (left: 8 0.75) -> 8 / 0.75 = 10.67 (left: 10.67) -> There is only one possible next step for the input 10.67, which is to round it to the nearest whole number: -> 10.67 rounded to the nearest whole number = 11 -> There are no possible next steps as the number 11 is a whole number and cannot be divided or multiplied further.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 11 12 13)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "8 12 16"
                }
            },
            "Step 1": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 16 - 8 = 8 (left: 8 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 16 - 8 = 8 (left: 8 8) -> 8 * 8 = 64 (left: 64)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 16 - 8 = 8 (left: 8 8) -> 8 * 8 = 64 (left: 64) -> 64 - 2 = 62 (left: 62)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": ""
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "8 12 16"
                }
            },
            "Step 4": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 12 * 16 = 192 (left: 8 192)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 12 * 16 = 192 (left: 8 192) -> 8 / 0.04167 = 192 (left: 0.04167)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 12 * 16 = 192 (left: 8 192) -> 8 / 0.04167 = 192 (left: 0.04167) -> 0.04167 * 2 = 0.08334",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no possible next steps with the input 32."
                }
            },
            "Step 7": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 16 - 12 = 4 (left: 8 4) -> 8 * 4 = 32 (left: 32) -> There are no possible next steps with the input 32. -> There are no possible next steps with the input 32.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 16 - 12 = 4 (left: 8 4) -> 8 * 4 = 32 (left: 32) -> There are no possible next steps with the input 32. -> There are no possible next steps with the input 32. -> There are no possible next steps with the input 32.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "11 + 5 = 16 (left: 8 12 16)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "11 13 12"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 11 13 12) -> 11 - 13 = -2 (left: -2 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 11 13 12) -> 11 - 13 = -2 (left: -2 12) -> -2 + 12 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 11 13 12) -> 11 - 13 = -2 (left: -2 12) -> -2 + 12 = 10 (left: 10) -> 10 + 10 = 20",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "8 12 16"
                }
            },
            "Step 4": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 12 + 16 = 28 (left: 8 28)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 12 + 16 = 28 (left: 8 28) -> 28 - 8 = 20 (left: 20)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 12 + 16 = 28 (left: 8 28) -> 28 - 8 = 20 (left: 20) -> There are no possible next steps with the input of 20.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "1 + 1 + 2 = 4"
                }
            },
            "Step 7": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 8 * 12 = 96 (left: 96 16) -> 96 + 16 = 112 (left: 112) -> 1 + 1 + 2 = 4 -> 1 + 1 = 2 (left: 2 + 2 = 4)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 8 * 12 = 96 (left: 96 16) -> 96 + 16 = 112 (left: 112) -> 1 + 1 + 2 = 4 -> 1 + 1 = 2 (left: 2 + 2 = 4) -> 2 + 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "There are no possible next steps with the input of 15."
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "8 - 5 = 3 (left: 3 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 12 / 11 = 1.0909090909090908 (left: 1.0909090909090908 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 12 / 11 = 1.0909090909090908 (left: 1.0909090909090908 13) -> 1.0909090909090908 * 13 = 14.272727272727726 (left: 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 12 / 11 = 1.0909090909090908 (left: 1.0909090909090908 13) -> 1.0909090909090908 * 13 = 14.272727272727726 (left: 13) -> 13 * 8 = 104 (left: 8)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "8 12 16"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "8 12 16"
                }
            },
            "Step 4": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 8 + 12 = 20 (left: 20 16)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 8 + 12 = 20 (left: 20 16) -> 16 - 20 = -4 (left: -4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 8 + 12 = 20 (left: 20 16) -> 16 - 20 = -4 (left: -4) -> There are no possible next steps with the input of -4.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "2 * 2 = 4"
                }
            },
            "Step 7": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 12 - 8 = 4 -> 8 / 4 = 2 (left: 2) -> 2 * 2 = 4 -> 2 * 2 = 4 (left: 1 4)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 12 - 8 = 4 -> 8 / 4 = 2 (left: 2) -> 2 * 2 = 4 -> 2 * 2 = 4 (left: 1 4) -> 1 + 4 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "There are no possible next steps with the input of 36."
                }
            }
        },
        "Input": "5 8 11 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "935": {
        "puzzle": "5 6 8 10",
        "Agent 0": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 8 10 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 8 10"
                }
            },
            "Step 1": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 4 + 8 = 12 (left: 10 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 4 + 8 = 12 (left: 10 12) -> 10 * 12 = 120 (left: 120)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 4 + 8 = 12 (left: 10 12) -> 10 * 12 = 120 (left: 120) -> 120 / 12 = 10 (left",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "8 10 11"
                }
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 8 / 10 = 0.8 (left: 0.8 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 8 / 10 = 0.8 (left: 0.8 11) -> 11 - 0.8 = 10.2 (left: 10.2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 8 / 10 = 0.8 (left: 0.8 11) -> 11 - 0.8 = 10.2 (left: 10.2) -> 10.2 / 8 = 1.275 (left: 8 1.275)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "120 / 12 = 10 (left"
                }
            },
            "Step 7": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 4 + 8 = 12 (left: 10 12) -> 10 * 12 = 120 (left: 120) -> 120 / 12 = 10 (left -> 120 * 12 = 1440 (left: 1440)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "No possible next steps with the input of 29."
                }
            },
            "Step 8": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 8 + 10 = 18 (left: 18 11) -> 18 + 11 = 29 (left: 29) -> No possible next steps with the input of 29. -> There are no possible next steps with the input of 29.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 - 8 = 2 (left: 2 6 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 8 10"
                }
            },
            "Step 1": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 4 * 2 = 8 (left: 8 8 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 4 * 2 = 8 (left: 8 8 10) -> 10 - 8 = 2 (left: 2 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 4 * 2 = 8 (left: 8 8 10) -> 10 - 8 = 2 (left: 2 8) -> 2 * 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "5 2 10"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "8 10 11"
                }
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 11 + 8 = 19 (left: 8 19)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 11 + 8 = 19 (left: 8 19) -> 8 - 19 = -11 (left: -11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 11 + 8 = 19 (left: 8 19) -> 8 - 19 = -11 (left: -11) -> There are no valid operations that can be performed with the input -11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "120 / 12 = 10 (left"
                }
            },
            "Step 7": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 4 + 8 = 12 (left: 10 12) -> 10 * 12 = 120 (left: 120) -> 120 / 12 = 10 (left -> 12 * 120 = 1440 (left: 10)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "120 / 12 = 10 (left"
                }
            },
            "Step 8": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 4 + 8 = 12 (left: 10 12) -> 10 * 12 = 120 (left: 120) -> 120 / 12 = 10 (left -> 120 * 12 = 1440 (left: 10)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "2 + 2 = 4"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 8 = 2 (left: 5 2 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 8 10"
                }
            },
            "Step 1": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 8 / 4 = 2 (left: 2 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 8 / 4 = 2 (left: 2 10) -> 2 * 10 = 20 (left: 20)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 8 / 4 = 2 (left: 2 10) -> 2 * 10 = 20 (left: 20) -> 20 + 2 = 22",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "8 10 11"
                }
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 10 / 11 = 0.909 (left: 8 0.909)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 10 / 11 = 0.909 (left: 8 0.909) -> 8 + 0.909 = 8.909",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 10 / 11 = 0.909 (left: 8 0.909) -> 8 + 0.909 = 8.909 -> 8 + 0.909 = 8.909 (left: 8.909)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "2 + 2 = 4"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "120 / 12 = 10 (left"
                }
            },
            "Step 7": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 4 + 8 = 12 (left: 10 12) -> 10 * 12 = 120 (left: 120) -> 120 / 12 = 10 (left -> 12 / 120 = 0.1 (left: 0.1)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "5 + 7 = 12"
                }
            },
            "Step 8": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 8 - 4 = 4 (left: 4 10) -> 5 + 7 = -> 5 + 7 = 12 -> 5 - 7 = -2 (left: -2 12)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 8 10 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 8 10"
                }
            },
            "Step 1": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 8 + 2 = 10 (left: 4 10 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 8 + 2 = 10 (left: 4 10 10) -> 4 + 10 = 14 (left: 10 10 14)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 8 + 2 = 10 (left: 4 10 10) -> 4 + 10 = 14 (left: 10 10 14) -> 10 + 10 = 20 (left: 20 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "8 10 11"
                }
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 8 * 10 = 80 (left: 11 80)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 8 * 10 = 80 (left: 11 80) -> 11 * 80 = 880 (left: 880)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 8 * 10 = 80 (left: 11 80) -> 11 * 80 = 880 (left: 880) -> 88 / 8 = 11 (left: 11 0)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "120 / 12 = 10 (left"
                }
            },
            "Step 7": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 4 + 8 = 12 (left: 10 12) -> 10 * 12 = 120 (left: 120) -> 120 / 12 = 10 (left -> 12 / 120 = 0.1 (left: 10)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "120 / 12 = 10 (left"
                }
            },
            "Step 8": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 4 + 8 = 12 (left: 10 12) -> 10 * 12 = 120 (left: 120) -> 120 / 12 = 10 (left -> 12 - 12 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "1 + 168 = 169"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "10 - 8 = 2 (left: 2 6 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 8 10"
                }
            },
            "Step 1": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 4 * 2 = 8 (left: 8 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 4 * 2 = 8 (left: 8 10) -> 10 / 8 = 1.25 (left: 1.25)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 4 * 2 = 8 (left: 8 10) -> 10 / 8 = 1.25 (left: 1.25) -> 1.25 + 8 = 9.25",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "8 10 11"
                }
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 10 + 11 = 21 (left: 8 21)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 10 + 11 = 21 (left: 8 21) -> 8 * 21 = 168 (left: 168)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 10 + 11 = 21 (left: 8 21) -> 8 * 21 = 168 (left: 168) -> 1 + 168 = 169",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "120 / 12 = 10 (left"
                }
            },
            "Step 7": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 4 + 8 = 12 (left: 10 12) -> 10 * 12 = 120 (left: 120) -> 120 / 12 = 10 (left -> 120 + 12 = 132 (left: 132)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "I'm sorry, it seems like there was a mistake in the input. Can you please provide the numbers again?"
                }
            },
            "Step 8": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> Possible -> It seems like there was a mistake in the input, could you please provide the numbers again? -> I'm sorry, it seems like there was a mistake in the input. Can you please provide the numbers again? -> I'm sorry, it seems like there was a mistake in the input. Can you please provide the numbers again?",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 8 10 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 8 10"
                }
            },
            "Step 1": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 8 / 4 = 2 (left: 2 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 8 / 4 = 2 (left: 2 10) -> 10 / 2 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 8 / 4 = 2 (left: 2 10) -> 10 / 2 = 5 (left: 5) -> There are no possible next steps with the input of 5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "8 10 11"
                }
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 8 + 10 = 18 (left: 18 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 8 + 10 = 18 (left: 18 11) -> 18 + 11 = 29 (left: 29)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 8 + 10 = 18 (left: 18 11) -> 18 + 11 = 29 (left: 29) -> No possible next steps with the input of 29.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "120 / 12 = 10 (left"
                }
            },
            "Step 7": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 4 + 8 = 12 (left: 10 12) -> 10 * 12 = 120 (left: 120) -> 120 / 12 = 10 (left -> 12 - 120 = -108 (left: 10 -108)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 4 + 8 = 12 (left: 10 12) -> 10 * 12 = 120 (left: 120) -> 120 / 12 = 10 (left -> 12 - 120 = -108 (left: 10 -108) -> 10 - 108 = -98",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 8 10 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 8 10"
                }
            },
            "Step 1": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 8 / 4 = 2 (left: 2 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 8 / 4 = 2 (left: 2 10) -> 2 + 10 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 8 / 4 = 2 (left: 2 10) -> 2 + 10 = 12 (left: 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "8 10 11"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "5 2 10"
                }
            },
            "Step 4": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 5 + 2 = 7 (left: 7 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 5 + 2 = 7 (left: 7 10) -> 10 / 7 = 1.43 (left: 1.43 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 5 + 2 = 7 (left: 7 10) -> 10 / 7 = 1.43 (left: 1.43 10) -> 1.43 * 10 = 14.3 (left: 14.3)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "120 / 12 = 10 (left"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "120 / 12 = 10 (left"
                }
            },
            "Step 7": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 4 + 8 = 12 (left: 10 12) -> 10 * 12 = 120 (left: 120) -> 120 / 12 = 10 (left -> 120 - 12 = 108 (left: 108)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "1.25 + 8 = 9.25"
                }
            },
            "Step 8": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 4 * 2 = 8 (left: 8 10) -> 10 / 8 = 1.25 (left: 1.25) -> 1.25 + 8 = 9.25 -> 1.25 - 8 = -6.75 (left: -6.75 8)",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "10 - 6 = 4 (left: 4 8 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 8 10"
                }
            },
            "Step 1": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 8 - 4 = 4 (left: 4 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 8 - 4 = 4 (left: 4 10) -> 5 + 7 =",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 8 - 4 = 4 (left: 4 10) -> 5 + 7 = -> 5 + 7 = 12",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "5 2 10"
                }
            },
            "Step 4": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 10 / 2 = 5 (left: 5 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 10 / 2 = 5 (left: 5 10) -> 5 + 10 = 15 (left: 10 15)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 10 / 2 = 5 (left: 5 10) -> 5 + 10 = 15 (left: 10 15) -> 15 - 10 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "120 / 12 = 10 (left"
                },
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "120 / 12 = 10 (left"
                }
            },
            "Step 7": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 4 + 8 = 12 (left: 10 12) -> 10 * 12 = 120 (left: 120) -> 120 / 12 = 10 (left -> 120 / 12 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "20 + 2 = 22"
                }
            },
            "Step 8": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 8 / 4 = 2 (left: 2 10) -> 2 * 10 = 20 (left: 20) -> 20 + 2 = 22 -> 20 - 2 = 18 (left: 18 2 22)",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "8 + 10 = 18 (left: 5 18 ",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "8 10 11"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 10 + 11 = 21 (left: 8 21)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 10 + 11 = 21 (left: 8 21) -> 8 * 21 = 168 (left: 168)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 10 + 11 = 21 (left: 8 21) -> 8 * 21 = 168 (left: 168) -> 1 + 168 = 169",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "5 2 10"
                }
            },
            "Step 4": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 10 - 5 = 5 (left: 5 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 10 - 5 = 5 (left: 5 10) -> Input: 3 9",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 10 - 5 = 5 (left: 5 10) -> Input: 3 9 -> 3 - 9 = -6 (left: -6)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "1 + 168 = 169"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "120 / 12 = 10 (left"
                }
            },
            "Step 7": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 4 + 8 = 12 (left: 10 12) -> 10 * 12 = 120 (left: 120) -> 120 / 12 = 10 (left -> 120 - 12 = 108 (left: 12)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "I'm sorry, it seems like there was a mistake in the input. Can you please provide the numbers again?"
                }
            },
            "Step 8": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> Possible -> It seems like there was a mistake in the input, could you please provide the numbers again? -> I'm sorry, it seems like there was a mistake in the input. Can you please provide the numbers again? -> I'm sorry, it seems like there was a mistake in the input. Can you please provide the numbers again?",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "6 - 5 = 1 (left: 1 8 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 8 10"
                }
            },
            "Step 1": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 4 / 2 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 4 / 2 =  -> 2",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 4 / 2 =  -> 2 -> 2 + 2 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "5 2 10"
                }
            },
            "Step 4": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> Possible",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> Possible -> It seems like there was a mistake in the input, could you please provide the numbers again?",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> Possible -> It seems like there was a mistake in the input, could you please provide the numbers again? -> I'm sorry, it seems like there was a mistake in the input. Can you please provide the numbers again?",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "8 1.275"
                }
            },
            "Step 7": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 8 / 10 = 0.8 (left: 0.8 11) -> 11 - 0.8 = 10.2 (left: 10.2) -> 10.2 / 8 = 1.275 (left: 8 1.275) -> 8 - 1.275 = 6.725 (left: 6.725)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "2 + 2 = 4"
                }
            },
            "Step 8": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 4 / 2 =  -> 2 -> 2 + 2 = 4 -> 4 - 2 =",
                "Pruning": null
            }
        },
        "Input": "5 6 8 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "936": {
        "puzzle": "6 11 12 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 7 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "7 11 12"
                }
            },
            "Step 1": {
                "Step": "13 - 6 = 7 (left: 7 11 12) -> 7 * 11 = 77 (left: 77 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 6 = 7 (left: 7 11 12) -> 7 * 11 = 77 (left: 77 12) -> 77 + 12 = 89 (left: 89)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 6 = 7 (left: 7 11 12) -> 7 * 11 = 77 (left: 77 12) -> 77 + 12 = 89 (left: 89) -> 8 - 9 = -1 (left: -1)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "6 11 25"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "7 11 12"
                }
            },
            "Step 4": {
                "Step": "13 - 6 = 7 (left: 7 11 12) -> 7 * 11 = 77 (left: 12 77)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 6 = 7 (left: 7 11 12) -> 7 * 11 = 77 (left: 12 77) -> 12 / 77 = 0.155844 (left: 0.155844)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 6 = 7 (left: 7 11 12) -> 7 * 11 = 77 (left: 12 77) -> 12 / 77 = 0.155844 (left: 0.155844) -> There are no possible next steps for the input 0.155844.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "6 5"
                }
            },
            "Step 7": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 6 + 11 = 17 (left: 17 25) -> 17 * 25 = 425 (left: 425) -> 4 + 2 = 6 (left: 6 5) -> 6 - 5 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "30 / 6 = 5"
                }
            },
            "Step 8": {
                "Step": "13 - 6 = 7 (left: 7 11 12) -> 7 + 11 = 18 (left: 12 18) -> 30 / 6 -> 30 / 6 = 5 -> Input: -24 + 6 = -18",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "11 + 12 = 23 (left: 6 13 23)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 11 25"
                }
            },
            "Step 1": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 - 11 = 14 (left: 6 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 - 11 = 14 (left: 6 14) -> 14 - 6 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 - 11 = 14 (left: 6 14) -> 14 - 6 = 8 (left: 8) -> 8 / 8 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "6 11 13"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "6 11 25"
                }
            },
            "Step 4": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 6 + 11 = 17 (left: 17 25)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 6 + 11 = 17 (left: 17 25) -> 17 * 25 = 425 (left: 425)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 6 + 11 = 17 (left: 17 25) -> 17 * 25 = 425 (left: 425) -> 4 + 2 = 6 (left: 6 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps for the input 0.155844."
                }
            },
            "Step 7": {
                "Step": "13 - 6 = 7 (left: 7 11 12) -> 7 * 11 = 77 (left: 12 77) -> 12 / 77 = 0.155844 (left: 0.155844) -> There are no possible next steps for the input 0.155844. -> There are no possible next steps for the input 0.155844.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 6 = 7 (left: 7 11 12) -> 7 * 11 = 77 (left: 12 77) -> 12 / 77 = 0.155844 (left: 0.155844) -> There are no possible next steps for the input 0.155844. -> There are no possible next steps for the input 0.155844. -> There are no possible next steps for the input 0.155844 as it is already a single number and not a combination of numbers that can be operated on.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "11 + 12 = 23 (left: 6 13 23)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "0.545 12 13"
                }
            },
            "Step 1": {
                "Step": "6 / 11 = 0.545 (left: 0.545 12 13) -> 12 + 0.545 = 12.545 (left: 12.545 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 11 = 0.545 (left: 0.545 12 13) -> 12 + 0.545 = 12.545 (left: 12.545 13) -> 12.545 + 13 = 25.545 (left: 25.545)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 / 11 = 0.545 (left: 0.545 12 13) -> 12 + 0.545 = 12.545 (left: 12.545 13) -> 12.545 + 13 = 25.545 (left: 25.545) -> 25.545 / 2 = 12.7725",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "6 11 25"
                }
            },
            "Step 4": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 11 * 6 = 66 (left: 66 25)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 11 * 6 = 66 (left: 66 25) -> 66 + 25 = 91 (left: 91)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 11 * 6 = 66 (left: 66 25) -> 66 + 25 = 91 (left: 91) -> 9 * 1 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "8 96"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "No possible next steps as the input is already in simplified form."
                }
            },
            "Step 7": {
                "Step": "13 - 6 = 7 (left: 7 11 12) -> 12 / 7 =  -> 12 / 7 = 1.71428571429 -> No possible next steps as the input is already in simplified form. -> No possible next steps as the input is already in simplified form.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 6 = 7 (left: 7 11 12) -> 12 / 7 =  -> 12 / 7 = 1.71428571429 -> No possible next steps as the input is already in simplified form. -> No possible next steps as the input is already in simplified form. -> No possible next steps as the input is already in simplified form.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "12 + 13 = 25 (left: 6 11 25)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "0.545 12 13"
                }
            },
            "Step 1": {
                "Step": "6 / 11 = 0.545 (left: 0.545 12 13) -> 12 / 0.545 = 22.018 (left: 22.018 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 11 = 0.545 (left: 0.545 12 13) -> 12 / 0.545 = 22.018 (left: 22.018 13) -> 22.018 - 13 = 9.018 (left: 9.018)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 / 11 = 0.545 (left: 0.545 12 13) -> 12 / 0.545 = 22.018 (left: 22.018 13) -> 22.018 - 13 = 9.018 (left: 9.018) -> 9 + 0.018 = 9.018 (left: 0.018)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "7 11 12"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "6 11 25"
                }
            },
            "Step 4": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 11 - 6 = 5 (left: 5 11 25)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 11 - 6 = 5 (left: 5 11 25) -> 25 / 11 = 2.27 (left: 5 2.27)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 11 - 6 = 5 (left: 5 11 25) -> 25 / 11 = 2.27 (left: 5 2.27) -> 5 + 2.27 = 7.27 (left: 7.27)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "There are no possible next steps for the input 0.68."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps for the input 0.155844."
                }
            },
            "Step 7": {
                "Step": "13 - 6 = 7 (left: 7 11 12) -> 7 * 11 = 77 (left: 12 77) -> 12 / 77 = 0.155844 (left: 0.155844) -> There are no possible next steps for the input 0.155844. -> There are no possible next steps for the input 0.155844.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 6 = 7 (left: 7 11 12) -> 7 * 11 = 77 (left: 12 77) -> 12 / 77 = 0.155844 (left: 0.155844) -> There are no possible next steps for the input 0.155844. -> There are no possible next steps for the input 0.155844. -> There are no possible next steps for the input 0.155844.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 + 13 = 25 (left: 6 11 25)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "7 11 12"
                }
            },
            "Step 1": {
                "Step": "13 - 6 = 7 (left: 7 11 12) -> 12 -",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 6 = 7 (left: 7 11 12) -> 12 - -> 12 - 8 = 4",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 6 = 7 (left: 7 11 12) -> 12 - -> 12 - 8 = 4 -> 12 * 8 = 96 (left: 8 96)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "6 11 25"
                }
            },
            "Step 4": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 6 + 11 = 17 (left: 17 25)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 6 + 11 = 17 (left: 17 25) -> 17 * 25 = 425 (left: 425)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 6 + 11 = 17 (left: 17 25) -> 17 * 25 = 425 (left: 425) -> 4 + 2 = 6 (left: 6 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "No possible next steps as the input is already in simplified form."
                }
            },
            "Step 7": {
                "Step": "13 - 6 = 7 (left: 7 11 12) -> 12 / 7 =  -> 12 / 7 = 1.71428571429 -> No possible next steps as the input is already in simplified form. -> No possible next steps as the input is already in simplified form.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 6 = 7 (left: 7 11 12) -> 12 / 7 =  -> 12 / 7 = 1.71428571429 -> No possible next steps as the input is already in simplified form. -> No possible next steps as the input is already in simplified form. -> No possible next steps as the input is already in simplified form.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 6 11 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 11 25"
                }
            },
            "Step 1": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 6 + 11 = 17 (left: 17 25)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 6 + 11 = 17 (left: 17 25) -> 17 / 25 = 0.68 (left: 0.68)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 6 + 11 = 17 (left: 17 25) -> 17 / 25 = 0.68 (left: 0.68) -> There are no possible next steps for the input 0.68.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "6 11 25"
                }
            },
            "Step 4": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 - 11 = 14 (left: 6 14)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 - 11 = 14 (left: 6 14) -> 14 / 6 = 2.33333333333 (left: 2.33333333333)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 - 11 = 14 (left: 6 14) -> 14 / 6 = 2.33333333333 (left: 2.33333333333) -> 2.33333333333 * 2 = 4.66666666666",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "6 5"
                }
            },
            "Step 7": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 6 + 11 = 17 (left: 17 25) -> 17 * 25 = 425 (left: 425) -> 4 + 2 = 6 (left: 6 5) -> 6 / 5 = 1.2 (left: 1.2)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "6 5"
                }
            },
            "Step 8": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 6 + 11 = 17 (left: 17 25) -> 17 * 25 = 425 (left: 425) -> 4 + 2 = 6 (left: 6 5) -> 6 - 5 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "There are no possible next steps for the input 0.68."
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 / 11 = 0.545 (left: 0.545 12 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 13 23"
                }
            },
            "Step 1": {
                "Step": "11 + 12 = 23 (left: 6 13 23) -> 13 - 6 = 7 (left: 7 23)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 + 12 = 23 (left: 6 13 23) -> 13 - 6 = 7 (left: 7 23) -> 5 / 5 = ",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 + 12 = 23 (left: 6 13 23) -> 13 - 6 = 7 (left: 7 23) -> 5 / 5 =  -> 5 / 5 = 1",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "7 11 12"
                }
            },
            "Step 4": {
                "Step": "13 - 6 = 7 (left: 7 11 12) -> 11 - 7 = 4 (left: 4 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 6 = 7 (left: 7 11 12) -> 11 - 7 = 4 (left: 4 12) -> 4 * 12 = 48 (left: 48)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 6 = 7 (left: 7 11 12) -> 11 - 7 = 4 (left: 4 12) -> 4 * 12 = 48 (left: 48) -> 48 / 16 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "8 96"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "There are no further calculations that can be done with the input 150."
                }
            },
            "Step 7": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 - 6 = 19 (left -> 25 * 6 = 150 (left: 150) -> There are no further calculations that can be done with the input 150. -> There are no further calculations that can be done with the input 150.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 - 6 = 19 (left -> 25 * 6 = 150 (left: 150) -> There are no further calculations that can be done with the input 150. -> There are no further calculations that can be done with the input 150. -> There are no further calculations that can be done with the input 150.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 7 11 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 11 25"
                }
            },
            "Step 1": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 6 + 11 = 17 (left: 17 25)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 6 + 11 = 17 (left: 17 25) -> 25 + 17 = 42 (left: 42)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 6 + 11 = 17 (left: 17 25) -> 25 + 17 = 42 (left: 42) -> There are no possible next steps with the input of 42 as it is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "6 11 25"
                }
            },
            "Step 4": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 - 6 = 19 (left",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 - 6 = 19 (left -> 25 * 6 = 150 (left: 150)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 - 6 = 19 (left -> 25 * 6 = 150 (left: 150) -> There are no further calculations that can be done with the input 150.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "6 5"
                }
            },
            "Step 7": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 6 + 11 = 17 (left: 17 25) -> 17 * 25 = 425 (left: 425) -> 4 + 2 = 6 (left: 6 5) -> 9 / 3 = 3 (left: 3 3)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 6 + 11 = 17 (left: 17 25) -> 17 * 25 = 425 (left: 425) -> 4 + 2 = 6 (left: 6 5) -> 9 / 3 = 3 (left: 3 3) -> 3 - 3 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "6 5"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "12 * 13 = 156 (left: 6 11 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "7 11 12"
                }
            },
            "Step 1": {
                "Step": "13 - 6 = 7 (left: 7 11 12) -> 7 + 11 = 18 (left: 12 18)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 6 = 7 (left: 7 11 12) -> 7 + 11 = 18 (left: 12 18) -> 30 / 6",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 6 = 7 (left: 7 11 12) -> 7 + 11 = 18 (left: 12 18) -> 30 / 6 -> 30 / 6 = 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "7 11 12"
                }
            },
            "Step 4": {
                "Step": "13 - 6 = 7 (left: 7 11 12) -> 12 / 7 = ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 6 = 7 (left: 7 11 12) -> 12 / 7 =  -> 12 / 7 = 1.71428571429",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 6 = 7 (left: 7 11 12) -> 12 / 7 =  -> 12 / 7 = 1.71428571429 -> No possible next steps as the input is already in simplified form.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "No possible next steps as the input is already in simplified form."
                }
            },
            "Step 7": {
                "Step": "13 - 6 = 7 (left: 7 11 12) -> 12 / 7 =  -> 12 / 7 = 1.71428571429 -> No possible next steps as the input is already in simplified form. -> There are no possible next steps as the input is already in its simplified form.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 6 = 7 (left: 7 11 12) -> 12 / 7 =  -> 12 / 7 = 1.71428571429 -> No possible next steps as the input is already in simplified form. -> There are no possible next steps as the input is already in its simplified form. -> There are no possible next steps as the input is already in its simplified form.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 6 11 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "0.545 12 13"
                }
            },
            "Step 1": {
                "Step": "6 / 11 = 0.545 (left: 0.545 12 13) -> 12 + 0.545 = 12.545 (left: 12.545 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 11 = 0.545 (left: 0.545 12 13) -> 12 + 0.545 = 12.545 (left: 12.545 13) -> 12.545 * 13 = 163.185 (left: 163.185)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 / 11 = 0.545 (left: 0.545 12 13) -> 12 + 0.545 = 12.545 (left: 12.545 13) -> 12.545 * 13 = 163.185 (left: 163.185) -> 16 + 3 = 19 (left: 19 185)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "7 11 12"
                }
            },
            "Step 4": {
                "Step": "13 - 6 = 7 (left: 7 11 12) -> 7 + 11 = 18 (left: 18 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 6 = 7 (left: 7 11 12) -> 7 + 11 = 18 (left: 18 12) -> 18 / 12 = 1.5 (left: 1.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 6 = 7 (left: 7 11 12) -> 7 + 11 = 18 (left: 18 12) -> 18 / 12 = 1.5 (left: 1.5) -> There are no possible next steps for the input 1.5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps for the input 0.155844."
                }
            },
            "Step 7": {
                "Step": "13 - 6 = 7 (left: 7 11 12) -> 7 * 11 = 77 (left: 12 77) -> 12 / 77 = 0.155844 (left: 0.155844) -> There are no possible next steps for the input 0.155844. -> There are no possible next steps for the input 0.155844.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 6 = 7 (left: 7 11 12) -> 7 * 11 = 77 (left: 12 77) -> 12 / 77 = 0.155844 (left: 0.155844) -> There are no possible next steps for the input 0.155844. -> There are no possible next steps for the input 0.155844. -> There are no possible next steps for the input 0.155844.",
                "Pruning": null
            }
        },
        "Input": "6 11 12 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "937": {
        "puzzle": "2 2 8 8",
        "Agent 0": {
            "Step 0": {
                "Step": "8 / 2 = 4 (left: 2 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8) -> 8 + 2 = 10 (left: 10 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8) -> 8 + 2 = 10 (left: 10 8) -> 10 * 8 = 80 (left: 80)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "4 8 8"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12) -> 12 / 8 = 1.5 (left: 1.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12) -> 12 / 8 = 1.5 (left: 1.5) -> 1.5 * 8 = 12 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "8 12"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12) -> 12 / 8 = 1.5 (left: 1.5) -> 1.5 * 8 = 12 (left: 8 12) -> 8 / 12 = 0.6667 (left: 0.6667)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "There are no possible next steps with the input of 1.5."
                }
            },
            "Step 8": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12) -> 12 / 8 = 1.5 (left: 1.5) -> There are no possible next steps with the input of 1.5. -> There are no possible next steps with the input of 1.5.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 - 2 = 6 (left: 2 6 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12) -> 8 + 12 = 20 (left: 20)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12) -> 8 + 12 = 20 (left: 20) -> 20 - 8 = 12 (left: 12 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 4": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 9 / 3 = 3 (left: 3",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 9 / 3 = 3 (left: 3 -> 3 + 3 = 6 (left: 8 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 9 / 3 = 3 (left: 3 -> 3 + 3 = 6 (left: 8 6) -> 8 * 6 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "4 + 4 = 8"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "8 12"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12) -> 12 / 8 = 1.5 (left: 1.5) -> 1.5 * 8 = 12 (left: 8 12) -> 8 - 12 = -4 (left: -4) ",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "There are no possible next steps with only one number given."
                }
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8) -> 2 * 8 = 16 (left: 16) -> There are no possible next steps with only one number given. -> Please provide more numbers to continue the calculations.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 8 8)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8) -> 8 - 2 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8) -> 8 - 2 = 6 (left: 6) -> 6 * 8 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "4 8 8"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 4": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 * 4 = 32 (left: 8 32)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 * 4 = 32 (left: 8 32) -> Possible next steps:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 * 4 = 32 (left: 8 32) -> Possible next steps: -> - 8 - 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "8 * 4 = 32"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "12 8"
                }
            },
            "Step 7": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12) -> 8 + 12 = 20 (left: 20) -> 20 - 8 = 12 (left: 12 8) -> 12 * 8 = 96 (left: 96)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "There are no possible next steps with the input of 1.5."
                }
            },
            "Step 8": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12) -> 12 / 8 = 1.5 (left: 1.5) -> There are no possible next steps with the input of 1.5. -> 1.5 - 1 = 0.5 (left: 0.5)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "0.6666666666666666 * 2 = 1.3333333333333333"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 8 8)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8) -> 8 - 2 = 6 (left: 6 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8) -> 8 - 2 = 6 (left: 6 8) -> 6 + 8 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "2 4 8"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 4": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8) -> Input: 2 8",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8) -> Input: 2 8 -> 8 / 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "There are no possible next steps with the input of 1.5."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "8 12"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12) -> 12 / 8 = 1.5 (left: 1.5) -> 1.5 * 8 = 12 (left: 8 12) -> 8 * 12 = 96 (left: 96)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "4 + 4 = 8"
                }
            },
            "Step 8": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12) -> 12 - 8 = 4 (left: 4) -> 4 + 4 = 8 -> 4 / 4 = 1 (left: 1 4)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 8 8)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32) -> 32 - 8 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32) -> 32 - 8 = 24 (left: 24) -> Answer: (2 * 2) * (8 - 8) = 24",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "4 8 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8) -> 2 * 8 = 16 (left: 16)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8) -> 2 * 8 = 16 (left: 16) -> There are no possible next steps with only one number given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "8 12"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12) -> 12 / 8 = 1.5 (left: 1.5) -> 1.5 * 8 = 12 (left: 8 12) -> 8 - 12 = -4 (left: -4)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "8 12"
                }
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12) -> 12 / 8 = 1.5 (left: 1.5) -> 1.5 * 8 = 12 (left: 8 12) -> 8 / 12 = 0.6666666666666666 (left: 0.6666666666666666)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "4 + 4 = 8"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 8 8)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8) -> 8 - 2 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8) -> 8 - 2 = 6 (left: 6) -> 6 / 8 = 0.75 (left: 8)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "4 8 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 4": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12) -> 8 / 12 = 0.6666666666666666 (left: 0.6666666666666666)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12) -> 8 / 12 = 0.6666666666666666 (left: 0.6666666666666666) -> 0.6666666666666666 * 2 = 1.3333333333333333",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "8 12"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12) -> 12 / 8 = 1.5 (left: 1.5) -> 1.5 * 8 = 12 (left: 8 12) -> 8 - 12 = -4 (left: -4)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "12 8"
                }
            },
            "Step 8": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12) -> 8 + 12 = 20 (left: 20) -> 20 - 8 = 12 (left: 12 8) -> 12 * 8 = 96 (left: 96)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "8 * 4 = 32"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "8 / 2 = 4 (left: 2 4 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12) -> 12 / 8 = 1.5 (left: 1.5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12) -> 12 / 8 = 1.5 (left: 1.5) -> There are no possible next steps with the input of 1.5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 4": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12) -> 8 * 12 = 96 (left: 96)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12) -> 8 * 12 = 96 (left: 96) -> There are no possible next steps for the input 96.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "12 8"
                }
            },
            "Step 7": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12) -> 8 + 12 = 20 (left: 20) -> 20 - 8 = 12 (left: 12 8) -> 12 / 8 = 1.5 (left: 1.5 8)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12) -> 8 + 12 = 20 (left: 20) -> 20 - 8 = 12 (left: 12 8) -> 12 / 8 = 1.5 (left: 1.5 8) -> 8 - 1.5 = 6.5 (left: 6.5)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "There are no possible next steps with the input of 1.5."
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 8 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8) -> 4 * 8 = 32 (left: 8 32)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8) -> 4 * 8 = 32 (left: 8 32) -> 8 * 4 = 32",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 4": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12) -> 8 + 12 = 20 (left: 20)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12) -> 8 + 12 = 20 (left: 20) -> 20 + 2 = 22 (left: 22)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "There are no possible next steps with the input of 1.5."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "12 8"
                }
            },
            "Step 7": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12) -> 8 + 12 = 20 (left: 20) -> 20 - 8 = 12 (left: 12 8) -> 12 * 8 = 96 (left: 96)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "0.6666666666666666 * 2 = 1.3333333333333333"
                }
            },
            "Step 8": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12) -> 8 / 12 = 0.6666666666666666 (left: 0.6666666666666666) -> 0.6666666666666666 * 2 = 1.3333333333333333 -> 1.3333333333333333 + 2 = 3.333333333333333",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "8 / 2 = 4 (left: 2 4 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12) -> 12 - 8 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12) -> 12 - 8 = 4 (left: 4) -> 4 + 4 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "2 4 8"
                }
            },
            "Step 4": {
                "Step": "8 / 2 = 4 (left: 2 4 8) -> 2 + 4 = 6 (left: 6 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 / 2 = 4 (left: 2 4 8) -> 2 + 4 = 6 (left: 6 8) -> 8 / 6 = 1.333 (left: 1.333)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 / 2 = 4 (left: 2 4 8) -> 2 + 4 = 6 (left: 6 8) -> 8 / 6 = 1.333 (left: 1.333) -> 1.333 / 2 = 0.6665 (left: 0.6665)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "12 8"
                },
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "8 12"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12) -> 12 / 8 = 1.5 (left: 1.5) -> 1.5 * 8 = 12 (left: 8 12) -> 8 / 12 = 0.6666666666666666 (left: 0.6666666666666666)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "There are no possible next steps with the input of 1.5."
                }
            },
            "Step 8": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12) -> 12 / 8 = 1.5 (left: 1.5) -> There are no possible next steps with the input of 1.5. -> There are no possible next steps with the input of 1.5.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 8 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8) -> 4 + 8 = 12 (left: 8 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8) -> 4 + 8 = 12 (left: 8 12) -> 8 + 12 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "4 8 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 8 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 8 12) -> 8 / 8 = 1 (left: 1 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 8 12) -> 8 / 8 = 1 (left: 1 12) -> 1 + 12 = 13 (left: 13)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "4 + 4 = 8"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "12 8"
                }
            },
            "Step 7": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12) -> 8 + 12 = 20 (left: 20) -> 20 - 8 = 12 (left: 12 8) -> 12 + 8 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "12 8"
                }
            },
            "Step 8": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12) -> 8 + 12 = 20 (left: 20) -> 20 - 8 = 12 (left: 12 8) -> 12 * 8 = 96 (left: 96)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "4 + 4 = 8"
                }
            }
        },
        "Input": "2 2 8 8",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "938": {
        "puzzle": "2 7 12 13",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 7 = 9 (left: 9 12 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "5 12 13"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 5 12 13) -> 12 - 5 = 7 (left: 7 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 5 12 13) -> 12 - 5 = 7 (left: 7 13) -> 7 - 13 = -6 (left: -6 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 5 12 13) -> 12 - 5 = 7 (left: 7 13) -> 7 - 13 = -6 (left: -6 13) -> -6 / 13 (left: -0.46)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "3.5 12 13"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "14 12 13"
                }
            },
            "Step 4": {
                "Step": "2 * 7 = 14 (left: 14 12 13) -> 14 + 12 = 26 (left: 26 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 * 7 = 14 (left: 14 12 13) -> 14 + 12 = 26 (left: 26 13) -> 26 * 13 = 338 (left: 338)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 7 = 14 (left: 14 12 13) -> 14 + 12 = 26 (left: 26 13) -> 26 * 13 = 338 (left: 338) -> 6 + 0 = 6 (left: 6 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "2 30.5"
                }
            },
            "Step 7": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13) -> 3.5 + 12 = 15.5 (left: 15.5 13) -> 15.5 + 13 = 28.5 (left: 28.5) -> 28.5 + 2 = 30.5 (left: 2 30.5) -> 2 + 30.5 = 32.5 (left: 30.5 32.5)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13) -> 3.5 + 12 = 15.5 (left: 15.5 13) -> 15.5 + 13 = 28.5 (left: 28.5) -> 28.5 + 2 = 30.5 (left: 2 30.5) -> 2 + 30.5 = 32.5 (left: 30.5 32.5) -> 30.5 - 32.5 = -2 (left: -2)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "There are no possible next steps with the input 21.5."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 + 7 = 9 (left: 9 12 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "9 12 13"
                }
            },
            "Step 1": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 9 + 12 = 21 (left: 21 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 9 + 12 = 21 (left: 21 13) -> 21 * 13 = 273 (left: 273)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 9 + 12 = 21 (left: 21 13) -> 21 * 13 = 273 (left: 273) -> 27 + 3 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": ""
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "14 12 13"
                }
            },
            "Step 4": {
                "Step": "2 * 7 = 14 (left: 14 12 13) -> 14 / 12 = 1.1666666666666667 (left: 1.1666666666666667 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 * 7 = 14 (left: 14 12 13) -> 14 / 12 = 1.1666666666666667 (left: 1.1666666666666667 13) -> 1.1666666666666667 + 13 = 14.166666666666667 (left: 14.166666666666667)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 7 = 14 (left: 14 12 13) -> 14 / 12 = 1.1666666666666667 (left: 1.1666666666666667 13) -> 1.1666666666666667 + 13 = 14.166666666666667 (left: 14.166666666666667) -> There are no possible next steps with the input 14.166666666666667 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "2 30.5"
                }
            },
            "Step 7": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13) -> 3.5 + 12 = 15.5 (left: 15.5 13) -> 15.5 + 13 = 28.5 (left: 28.5) -> 28.5 + 2 = 30.5 (left: 2 30.5) -> 30.5 - 2 = 28.5 (left: 2 28.5)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13) -> 3.5 + 12 = 15.5 (left: 15.5 13) -> 15.5 + 13 = 28.5 (left: 28.5) -> 28.5 + 2 = 30.5 (left: 2 30.5) -> 30.5 - 2 = 28.5 (left: 2 28.5) -> 28.5 - 2 = 26.5 (left: 26.5)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "9 21"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 + 12 = 14 (left: 7 14 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3.5 12 13"
                }
            },
            "Step 1": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13) -> 12 - 3.5 = 8.5 (left: 8.5 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13) -> 12 - 3.5 = 8.5 (left: 8.5 13) -> 8.5 * 13 = 110.5 (left: 110.5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13) -> 12 - 3.5 = 8.5 (left: 8.5 13) -> 8.5 * 13 = 110.5 (left: 110.5) -> 110.5 * 2 = 221 (left: 221)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "14 12 13"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "14 12 13"
                }
            },
            "Step 4": {
                "Step": "2 * 7 = 14 (left: 14 12 13) -> 12 + 13 = 25 (left: 14 25)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 * 7 = 14 (left: 14 12 13) -> 12 + 13 = 25 (left: 14 25) -> 14 - 25 = -11 (left: -11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 7 = 14 (left: 14 12 13) -> 12 + 13 = 25 (left: 14 25) -> 14 - 25 = -11 (left: -11) -> There are no possible next steps with the input -11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "2 30.5"
                }
            },
            "Step 7": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13) -> 3.5 + 12 = 15.5 (left: 15.5 13) -> 15.5 + 13 = 28.5 (left: 28.5) -> 28.5 + 2 = 30.5 (left: 2 30.5) -> 2 + 30.5 = 32.5 (left: 30.5 32.5)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13) -> 3.5 + 12 = 15.5 (left: 15.5 13) -> 15.5 + 13 = 28.5 (left: 28.5) -> 28.5 + 2 = 30.5 (left: 2 30.5) -> 2 + 30.5 = 32.5 (left: 30.5 32.5) -> 30.5 * 32.5 = 992.25 (left: 992.25)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "6 8"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 + 12 = 19 (left: 2 19 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "14 12 13"
                }
            },
            "Step 1": {
                "Step": "2 * 7 = 14 (left: 14 12 13) -> 12 + 13 = 25 (left: ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 7 = 14 (left: 14 12 13) -> 12 + 13 = 25 (left:  -> There are no possible next steps with the given input.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 7 = 14 (left: 14 12 13) -> 12 + 13 = 25 (left:  -> There are no possible next steps with the given input. -> There are no possible next steps with the given input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "14 12 13"
                }
            },
            "Step 4": {
                "Step": "2 * 7 = 14 (left: 14 12 13) -> 12 + 13 = 25 (left: 14 25)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 * 7 = 14 (left: 14 12 13) -> 12 + 13 = 25 (left: 14 25) -> 14 * 25 = 350 (left: 350)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 7 = 14 (left: 14 12 13) -> 12 + 13 = 25 (left: 14 25) -> 14 * 25 = 350 (left: 350) -> 350 / 2 = 175",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "2 30.5"
                }
            },
            "Step 7": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13) -> 3.5 + 12 = 15.5 (left: 15.5 13) -> 15.5 + 13 = 28.5 (left: 28.5) -> 28.5 + 2 = 30.5 (left: 2 30.5) -> 2 + 30.5 = 32.5 (left: 32.5)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "9 21"
                }
            },
            "Step 8": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 12 + 9 =  -> 12 + 9 = 21 -> 21 - 12 = 9 (left: 9 21) -> 9 * 21 = 189 (left: 189)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "There are no possible next steps with the input 29."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 - 12 = 1 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "9 12 13"
                }
            },
            "Step 1": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 12 + 9 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 12 + 9 =  -> 12 + 9 = 21",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 12 + 9 =  -> 12 + 9 = 21 -> 21 - 12 = 9 (left: 9 21)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "14 12 13"
                }
            },
            "Step 4": {
                "Step": "2 * 7 = 14 (left: 14 12 13) -> 14 / 12 = 1.1666666666666667 (left: 1.1666666666666667 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 * 7 = 14 (left: 14 12 13) -> 14 / 12 = 1.1666666666666667 (left: 1.1666666666666667 13) -> 13 - 1.1666666666666667 = 11.8333333333333333 (left: 11.8333333333333333)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 7 = 14 (left: 14 12 13) -> 14 / 12 = 1.1666666666666667 (left: 1.1666666666666667 13) -> 13 - 1.1666666666666667 = 11.8333333333333333 (left: 11.8333333333333333) -> There is only one number, so there are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "2 30.5"
                }
            },
            "Step 7": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13) -> 3.5 + 12 = 15.5 (left: 15.5 13) -> 15.5 + 13 = 28.5 (left: 28.5) -> 28.5 + 2 = 30.5 (left: 2 30.5) -> 2 * 30.5 = 61 (left: 61)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "There are no possible next steps as all numbers are the same."
                }
            },
            "Step 8": {
                "Step": "2 * 7 = 14 (left: 14 12 13) -> 14 + 12 = 26 (left: 26 13) -> 5 * 5 = 25 (left:  -> There are no possible next steps as all numbers are the same. -> There are no possible next steps as all numbers are the same.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "2 + 7 = 9 (left: 9 12 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "9 12 13"
                }
            },
            "Step 1": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 9 / 12 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 9 / 12 =  -> 9 / 12 = 0.75",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 9 / 12 =  -> 9 / 12 = 0.75 -> 12 / 9 = 1.33 (left: 1.33)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "9 12 13"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "14 12 13"
                }
            },
            "Step 4": {
                "Step": "2 * 7 = 14 (left: 14 12 13) -> 14 + 12 = 26 (left: 26 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 * 7 = 14 (left: 14 12 13) -> 14 + 12 = 26 (left: 26 13) -> 5 * 5 = 25 (left: ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 7 = 14 (left: 14 12 13) -> 14 + 12 = 26 (left: 26 13) -> 5 * 5 = 25 (left:  -> There are no possible next steps as all numbers are the same.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "2 30.5"
                }
            },
            "Step 7": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13) -> 3.5 + 12 = 15.5 (left: 15.5 13) -> 15.5 + 13 = 28.5 (left: 28.5) -> 28.5 + 2 = 30.5 (left: 2 30.5) -> 2 + 30.5 = 32.5 (left: 30.5 32.5)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13) -> 3.5 + 12 = 15.5 (left: 15.5 13) -> 15.5 + 13 = 28.5 (left: 28.5) -> 28.5 + 2 = 30.5 (left: 2 30.5) -> 2 + 30.5 = 32.5 (left: 30.5 32.5) -> 30.5 - 32.5 = -2 (left: -2)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "110.5 * 2 = 221"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3.5 12 13"
                }
            },
            "Step 1": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13) -> 12 / 3.5 = 3.43 (left: 3.43 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13) -> 12 / 3.5 = 3.43 (left: 3.43 13) -> 5 + 2 = 7 (left: ",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13) -> 12 / 3.5 = 3.43 (left: 3.43 13) -> 5 + 2 = 7 (left:  -> There are no possible next steps with the given input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "3.5 12 13"
                }
            },
            "Step 4": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13) -> 13 - 3.5 = 9.5 (left: 9.5 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13) -> 13 - 3.5 = 9.5 (left: 9.5 12) -> 9.5 + 12 = 21.5 (left: 21.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13) -> 13 - 3.5 = 9.5 (left: 9.5 12) -> 9.5 + 12 = 21.5 (left: 21.5) -> There are no possible next steps with the input 21.5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "2 30.5"
                }
            },
            "Step 7": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13) -> 3.5 + 12 = 15.5 (left: 15.5 13) -> 15.5 + 13 = 28.5 (left: 28.5) -> 28.5 + 2 = 30.5 (left: 2 30.5) -> 2 / 30.5 = 15.25 (left: 15.25 30.5)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13) -> 3.5 + 12 = 15.5 (left: 15.5 13) -> 15.5 + 13 = 28.5 (left: 28.5) -> 28.5 + 2 = 30.5 (left: 2 30.5) -> 2 / 30.5 = 15.25 (left: 15.25 30.5) -> 15.25 + 30.5 = 45.75 (left: 45.75)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "There are no possible next steps with the input 14.166666666666667 as it is already a single number."
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "2 * 7 = 14 (left: 14 12 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3.5 12 13"
                }
            },
            "Step 1": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13) -> 3.5 + 12 = 15.5 (left: 15.5 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13) -> 3.5 + 12 = 15.5 (left: 15.5 13) -> 15.5 / 13 = 1.1923076923076923 (left: 1.1923076923076923)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13) -> 3.5 + 12 = 15.5 (left: 15.5 13) -> 15.5 / 13 = 1.1923076923076923 (left: 1.1923076923076923) -> 1.1923076923076923 + 1 = 2.1923076923076923 (left: 2.1923076923076923)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "14 12 13"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "3.5 12 13"
                }
            },
            "Step 4": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13) -> 12 - 3.5 = 8.5 (left: 8.5 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13) -> 12 - 3.5 = 8.5 (left: 8.5 13) -> 8.5 * 13 = 110.5 (left: 110.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13) -> 12 - 3.5 = 8.5 (left: 8.5 13) -> 8.5 * 13 = 110.5 (left: 110.5) -> 110.5 * 2 = 221",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "2 30.5"
                }
            },
            "Step 7": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13) -> 3.5 + 12 = 15.5 (left: 15.5 13) -> 15.5 + 13 = 28.5 (left: 28.5) -> 28.5 + 2 = 30.5 (left: 2 30.5) -> 30.5 / 2 = 15.25 (left: 15.25 30.5)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13) -> 3.5 + 12 = 15.5 (left: 15.5 13) -> 15.5 + 13 = 28.5 (left: 28.5) -> 28.5 + 2 = 30.5 (left: 2 30.5) -> 30.5 / 2 = 15.25 (left: 15.25 30.5) -> 15.25 * 30.5 = 465.125 (left: 465.125)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "There are no possible next steps as all numbers are the same."
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "12 + 1 = 13 (left: 2 7 13)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "9 12 13"
                }
            },
            "Step 1": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 9 * 12 = 108 (left: 13 108)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 9 * 12 = 108 (left: 13 108) -> 108 / 13 = 8.3076923076923077 (left: 8.3076923076923077)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 9 * 12 = 108 (left: 13 108) -> 108 / 13 = 8.3076923076923077 (left: 8.3076923076923077) -> 8 - 3 = 5.307692307692308",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "3.5 12 13"
                }
            },
            "Step 4": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13) -> 3.5 * 12 = 42 (left: 42 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13) -> 3.5 * 12 = 42 (left: 42 13) -> 42 - 13 = 29 (left: 29)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13) -> 3.5 * 12 = 42 (left: 42 13) -> 42 - 13 = 29 (left: 29) -> There are no possible next steps with the input 29.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "2 30.5"
                }
            },
            "Step 7": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13) -> 3.5 + 12 = 15.5 (left: 15.5 13) -> 15.5 + 13 = 28.5 (left: 28.5) -> 28.5 + 2 = 30.5 (left: 2 30.5) -> 30.5 / 2 = 15.25 (left: 15.25)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "350 / 2 = 175"
                }
            },
            "Step 8": {
                "Step": "2 * 7 = 14 (left: 14 12 13) -> 12 + 13 = 25 (left: 14 25) -> 14 * 25 = 350 (left: 350) -> 350 / 2 = 175 -> 350 - 2 = 348",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 5 12 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3.5 12 13"
                }
            },
            "Step 1": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13) -> 3.5 * 12 = 42 (left: 42 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13) -> 3.5 * 12 = 42 (left: 42 13) -> 42 - 13 = 29 (left: 29)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13) -> 3.5 * 12 = 42 (left: 42 13) -> 42 - 13 = 29 (left: 29) -> There are no possible next steps as there are no other numbers provided to perform operations with 29.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "3.5 12 13"
                }
            },
            "Step 4": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13) -> 3.5 + 12 = 15.5 (left: 15.5 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13) -> 3.5 + 12 = 15.5 (left: 15.5 13) -> 15.5 + 13 = 28.5 (left: 28.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13) -> 3.5 + 12 = 15.5 (left: 15.5 13) -> 15.5 + 13 = 28.5 (left: 28.5) -> 28.5 + 2 = 30.5 (left: 2 30.5)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "2 30.5"
                }
            },
            "Step 7": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13) -> 3.5 + 12 = 15.5 (left: 15.5 13) -> 15.5 + 13 = 28.5 (left: 28.5) -> 28.5 + 2 = 30.5 (left: 2 30.5) -> 2 + 30.5 = 32.5 (left: 30.5 32.5)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13) -> 3.5 + 12 = 15.5 (left: 15.5 13) -> 15.5 + 13 = 28.5 (left: 28.5) -> 28.5 + 2 = 30.5 (left: 2 30.5) -> 2 + 30.5 = 32.5 (left: 30.5 32.5) -> 30.5 / 32.5 = 0.9384615384615385 (left: 0.9384615384615385)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "9 21"
                }
            }
        },
        "Input": "2 7 12 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "939": {
        "puzzle": "2 6 8 12",
        "Agent 0": {
            "Step 0": {
                "Step": "2 * 6 = 12 (left: 8 12 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 8 12"
                }
            },
            "Step 1": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 12 - 6 = 6 (left: 6 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 12 - 6 = 6 (left: 6 12) -> 6 * 12 = 72 (left: 72)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 12 - 6 = 6 (left: 6 12) -> 6 * 12 = 72 (left: 72) -> There are no possible next steps for the number 72 as it is a single value and cannot be combined with any other numbers in this context.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 4": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 12 / 8 = 1.5 (left: 1.5 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 12 / 8 = 1.5 (left: 1.5 8) -> 8 - 1.5 = 6.5 (left: 6.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 12 / 8 = 1.5 (left: 1.5 8) -> 8 - 1.5 = 6.5 (left: 6.5) -> 6.5 * 2 = 13 (left: 13)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "There are no possible next steps with the input 10.67."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "1.5 1.5 20"
                }
            },
            "Step 7": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 12 / 8 =  -> 12 / 8 = 1.5 -> 12 / 8 = 1.5 (left: 1.5 1.5 20) -> 1.5 + 1.5 = 3 (left: 3 20)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 12 / 8 =  -> 12 / 8 = 1.5 -> 12 / 8 = 1.5 (left: 1.5 1.5 20) -> 1.5 + 1.5 = 3 (left: 3 20) -> 3 * 20 = 60 (left: 60)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There are no possible next steps for the number 72 as it is a single value and cannot be combined with any other numbers in this context."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 - 2 = 10 (left: 6 8 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 1": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12) -> 64 / 12 = 5.33 (left: 5.33)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12) -> 64 / 12 = 5.33 (left: 5.33) -> There are no possible next steps for the input 5.33 as it is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 4": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 + 8 = 16 (left: 16 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 + 8 = 16 (left: 16 12) -> 12 + 16 = 28 (left: 28)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 + 8 = 16 (left: 16 12) -> 12 + 16 = 28 (left: 28) -> 2 * 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "14 / 2 = 7"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "1.5 1.5 20"
                }
            },
            "Step 7": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 12 / 8 =  -> 12 / 8 = 1.5 -> 12 / 8 = 1.5 (left: 1.5 1.5 20) -> 1.5 + 1.5 = 3 (left: 3 20)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 12 / 8 =  -> 12 / 8 = 1.5 -> 12 / 8 = 1.5 (left: 1.5 1.5 20) -> 1.5 + 1.5 = 3 (left: 3 20) -> 3 + 20 = 23 (left: 23)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "There are no possible next steps for the number 72 as it is a single value and cannot be combined with any other numbers in this context."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 + 6 = 8 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 1": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 12 - 8 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 12 - 8 =  -> 12 - 8 = 4",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 12 - 8 =  -> 12 - 8 = 4 -> 12 + 8 = 20 (left",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 4": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 + 8 = 16 (left: 16 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 + 8 = 16 (left: 16 12) -> 16 - 12 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 + 8 = 16 (left: 16 12) -> 16 - 12 = 4 (left: 4) -> 4 * 4 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There are no possible next steps for the number 72 as it is a single value and cannot be combined with any other numbers in this context."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "1.5 1.5 20"
                }
            },
            "Step 7": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 12 / 8 =  -> 12 / 8 = 1.5 -> 12 / 8 = 1.5 (left: 1.5 1.5 20) -> 1.5 * 1.5 = 2.25 (left: 2.25 20)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 12 / 8 =  -> 12 / 8 = 1.5 -> 12 / 8 = 1.5 (left: 1.5 1.5 20) -> 1.5 * 1.5 = 2.25 (left: 2.25 20) -> 2.25 + 20 = 22.25 (left: 20 22.25)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 + 6 = 8 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 8 12"
                }
            },
            "Step 1": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 12 / 6 = 2 (left: 6 8 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 12 / 6 = 2 (left: 6 8 2) -> 6 + 8 = 14 (left: 2 14)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 12 / 6 = 2 (left: 6 8 2) -> 6 + 8 = 14 (left: 2 14) -> 14 - 2 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "8 8 12"
                },
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 4": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12) -> 64 - 12 = 52 (left: 52)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12) -> 64 - 12 = 52 (left: 52) -> 5 * 2 = 10 (left: 10) ",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There are no possible next steps for the number 72 as it is a single value and cannot be combined with any other numbers in this context."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "1.5 1.5 20"
                }
            },
            "Step 7": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 12 / 8 =  -> 12 / 8 = 1.5 -> 12 / 8 = 1.5 (left: 1.5 1.5 20) -> 20 / 1.5 = 13.333333333333334 (left: 1.5 13.333333333333334)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 12 / 8 =  -> 12 / 8 = 1.5 -> 12 / 8 = 1.5 (left: 1.5 1.5 20) -> 20 / 1.5 = 13.333333333333334 (left: 1.5 13.333333333333334) -> 13.333333333333334 / 1.5 = 8.88888888888889 (left: 8.88888888888889)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "14 / 2 = 7"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 * 2 = 12 (left: 12 8 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 8 12"
                }
            },
            "Step 1": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 8 / 6 = 1.33 (left: 1.33 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 8 / 6 = 1.33 (left: 1.33 12) -> 12 - 1.33 = 10.67 (left: 10.67)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 8 / 6 = 1.33 (left: 1.33 12) -> 12 - 1.33 = 10.67 (left: 10.67) -> There are no possible next steps with the input 10.67.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 4": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 + 8 = 16 (left: 16 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 + 8 = 16 (left: 16 12) -> 16 * 12 = 192 (left: 192)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 + 8 = 16 (left: 16 12) -> 16 * 12 = 192 (left: 192) -> 19 - 2 = 17 (left: 17)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "14 / 2 = 7"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "1.5 1.5 20"
                }
            },
            "Step 7": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 12 / 8 =  -> 12 / 8 = 1.5 -> 12 / 8 = 1.5 (left: 1.5 1.5 20) -> 1.5 * 1.5 = 2.25 (left: 2.25 20)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 12 / 8 =  -> 12 / 8 = 1.5 -> 12 / 8 = 1.5 (left: 1.5 1.5 20) -> 1.5 * 1.5 = 2.25 (left: 2.25 20) -> 20 - 2.25 = 17.75 (left: 17.75)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "14 / 2 = 7"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "2 * 6 = 12 (left: 8 12 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 8 12"
                }
            },
            "Step 1": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 6 + 8 = 14 (left: 14 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 6 + 8 = 14 (left: 14 12) -> 14 * 12 = 168 (left: 168)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 6 + 8 = 14 (left: 14 12) -> 14 * 12 = 168 (left: 168) -> 1 * 6 * 8 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "8 12 12"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 4": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 - 8 = ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 - 8 =  -> 0 (left: 0)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 - 8 =  -> 0 (left: 0) -> There are no possible next steps as there are no numbers provided in the input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "1.5 1.5 20"
                }
            },
            "Step 7": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 12 / 8 =  -> 12 / 8 = 1.5 -> 12 / 8 = 1.5 (left: 1.5 1.5 20) -> 20 / 1.5 = 13.3333 (left: ",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "There are no possible next steps with the input of -36."
                }
            },
            "Step 8": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 6 * 8 = 48 (left: 12 48) -> 12 - 48 = -36 (left: -36) -> There are no possible next steps with the input of -36. -> There are no possible next steps with the input of -36.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 * 8 = 48 (left: 12 48 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 8 12"
                }
            },
            "Step 1": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 8 - 6 = 2 (left: 2 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 8 - 6 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 8 - 6 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14) -> 14 / 2 = 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 4": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 12 / 8 = 1.5 (left: 1.5 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 12 / 8 = 1.5 (left: 1.5 8) -> 1.5 * 8 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 12 / 8 = 1.5 (left: 1.5 8) -> 1.5 * 8 = 12 (left: 12) -> 12 / 8 = 1.5 (left: 1.5 8)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "1.5 1.5 20"
                }
            },
            "Step 7": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 12 / 8 =  -> 12 / 8 = 1.5 -> 12 / 8 = 1.5 (left: 1.5 1.5 20) -> 1.5 * 20 = 30 (",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 12 / 8 =  -> 12 / 8 = 1.5 -> 12 / 8 = 1.5 (left: 1.5 1.5 20) -> 1.5 * 20 = 30 ( -> 1.5 * 20 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "There are no possible next steps for the number 72 as it is a single value and cannot be combined with any other numbers in this context."
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "2 + 6 = 8 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 8 12"
                }
            },
            "Step 1": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 8 / 6 = 1.33 (approximation) (left: 6 1.33 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 8 / 6 = 1.33 (approximation) (left: 6 1.33 12) -> 6 / 1.33 = 4.51 (left: 4.51 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 8 / 6 = 1.33 (approximation) (left: 6 1.33 12) -> 6 / 1.33 = 4.51 (left: 4.51 12) -> 4.51 / 12 = 0.3758333333333333 (left: 0.3758333333333333)",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "2 6 "
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 4": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 12 * 8 = 96 (left: 96)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 12 * 8 = 96 (left: 96) -> There are no possible next steps with the input 96.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 12 * 8 = 96 (left: 96) -> There are no possible next steps with the input 96. -> There are no possible next steps with the input 96.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "1.5 1.5 20"
                }
            },
            "Step 7": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 12 / 8 =  -> 12 / 8 = 1.5 -> 12 / 8 = 1.5 (left: 1.5 1.5 20) -> 1.5 + 1.5 = 3 (left: 3 20)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 12 / 8 =  -> 12 / 8 = 1.5 -> 12 / 8 = 1.5 (left: 1.5 1.5 20) -> 1.5 + 1.5 = 3 (left: 3 20) -> 20 / 3 = 6.67 (left: 6.67)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "14 / 2 = 7"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "8 - 2 = 6 (left: 6 8 12)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 8 12"
                }
            },
            "Step 1": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 12 / 6 = 2 (left: 2 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (8 - 2) * (12 / 6) = 24",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "8 8 12"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 4": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 - 8 = 0 (left: 0 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 - 8 = 0 (left: 0 12) -> 12 - 0 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 - 8 = 0 (left: 0 12) -> 12 - 0 = 12 (left: 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "There are no possible next steps with the input 10.67."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "1.5 1.5 20"
                }
            },
            "Step 7": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 12 / 8 =  -> 12 / 8 = 1.5 -> 12 / 8 = 1.5 (left: 1.5 1.5 20) -> 1.5 * 1.5 = 2.25 (left: 2.25 20)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 12 / 8 =  -> 12 / 8 = 1.5 -> 12 / 8 = 1.5 (left: 1.5 1.5 20) -> 1.5 * 1.5 = 2.25 (left: 2.25 20) -> 20 / 2.25 = 8.88888888889 (left: 2.25 8.88888888889)",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 2 6 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 8 12"
                }
            },
            "Step 1": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 6 * 8 = 48 (left: 12 48)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 6 * 8 = 48 (left: 12 48) -> 12 - 48 = -36 (left: -36)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 6 * 8 = 48 (left: 12 48) -> 12 - 48 = -36 (left: -36) -> There are no possible next steps with the input of -36.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 4": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 12 / 8 = ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 12 / 8 =  -> 12 / 8 = 1.5",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 12 / 8 =  -> 12 / 8 = 1.5 -> 12 / 8 = 1.5 (left: 1.5 1.5 20)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "1.5 1.5 20"
                }
            },
            "Step 7": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 12 / 8 =  -> 12 / 8 = 1.5 -> 12 / 8 = 1.5 (left: 1.5 1.5 20) -> 20 / 1.5 = 13.33 (left: 1.5 13.33)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 12 / 8 =  -> 12 / 8 = 1.5 -> 12 / 8 = 1.5 (left: 1.5 1.5 20) -> 20 / 1.5 = 13.33 (left: 1.5 13.33) -> 1.5 * 13.33 = 19.995 (left: 19.995)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "There are no possible next steps as there are no numbers provided in the input."
                }
            }
        },
        "Input": "2 6 8 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "940": {
        "puzzle": "3 4 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 3 4 4)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 4 4"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4) -> 12 / 4 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4) -> 12 / 4 = 3 (left: 3) -> 3 / 2 = 1.5 (left: 1.5)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "9 12 13"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "7 9 13"
                }
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 7 9 13) -> 9 + 13 = 22 (left: 7 22)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 + 4 = 7 (left: 7 9 13) -> 9 + 13 = 22 (left: 7 22) -> 7 - 22 = -15 (left: -15)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 4 = 7 (left: 7 9 13) -> 9 + 13 = 22 (left: 7 22) -> 7 - 22 = -15 (left: -15) -> -15 - 2 = -17 (left: -17)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "There are no possible next steps as the input provided does not have any operations to perform."
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps as the input provided does not have any operations to perform."
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> Possible next steps: -> There are no possible next steps as the input provided does not have any operations to perform. -> There are no possible next steps as the input provided does not have any operations to perform. -> There are no possible next steps as the input provided does not have any operations to perform.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> Possible next steps: -> There are no possible next steps as the input provided does not have any operations to perform. -> There are no possible next steps as the input provided does not have any operations to perform. -> There are no possible next steps as the input provided does not have any operations to perform. -> There are no possible next steps as the input provided does not have any operations to perform.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 9 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 4 4"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4) -> 12 / 4 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4) -> 12 / 4 = 3 (left: 3) -> 3 / 8 = 0.375 (left: 0.375 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "7 9 13"
                }
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 7 9 13) -> 9 + 13 = 22 (left: 7 22)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 + 4 = 7 (left: 7 9 13) -> 9 + 13 = 22 (left: 7 22) -> 22 / 7 = 3.142857142857143 (left: 3.142857142857143)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 4 = 7 (left: 7 9 13) -> 9 + 13 = 22 (left: 7 22) -> 22 / 7 = 3.142857142857143 (left: 3.142857142857143) -> 3.142857142857143 + 3.142857142857143 = 6.285714285714286",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps as the input provided does not have any operations to perform."
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> Possible next steps: -> There are no possible next steps as the input provided does not have any operations to perform. -> There are no possible next steps as the input provided does not have any operations to perform. -> There are no possible next steps as the input provided does not have any operations to perform.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> Possible next steps: -> There are no possible next steps as the input provided does not have any operations to perform. -> There are no possible next steps as the input provided does not have any operations to perform. -> There are no possible next steps as the input provided does not have any operations to perform. -> N/A",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "There are no possible next steps as there is only one number provided."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 9 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 4 4"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> Possible next steps:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> Possible next steps: -> There are no possible next steps as the input provided does not have any operations to perform.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> Possible next steps: -> There are no possible next steps as the input provided does not have any operations to perform. -> There are no possible next steps as the input provided does not have any operations to perform.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "7 9 13"
                }
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 7 9 13) -> 9 - 7 = 2 (left: 2 9 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 + 4 = 7 (left: 7 9 13) -> 9 - 7 = 2 (left: 2 9 13) -> 9 - 2 = 7 (left: 7 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 4 = 7 (left: 7 9 13) -> 9 - 7 = 2 (left: 2 9 13) -> 9 - 2 = 7 (left: 7 13) -> 7 + 13 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "There are no valid next steps for the input -6."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps as the input provided does not have any operations to perform."
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> Possible next steps: -> There are no possible next steps as the input provided does not have any operations to perform. -> There are no possible next steps as the input provided does not have any operations to perform. -> N/A",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "There are no valid next steps for the input -6."
                }
            },
            "Step 8": {
                "Step": "3 + 4 = 7 (left: 7 9 13) -> 13 / 7 = 1 (left: -> 7 - 13 = -6 (left: -6) -> There are no valid next steps for the input -6. -> There are no valid next steps for the input -6.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 9 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 4 4"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 / 3 = 1.33 (left: 1.33 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 / 3 = 1.33 (left: 1.33 4) -> 1.33 + 4 = 5.33 (left: 5.33)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 / 3 = 1.33 (left: 1.33 4) -> 1.33 + 4 = 5.33 (left: 5.33) -> There are no possible next steps for the input 5.33 as it is already a single number and cannot be combined with any other numbers.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "7 9 13"
                }
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 7 9 13) -> 9 - 7 = 2 (left: 2 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 + 4 = 7 (left: 7 9 13) -> 9 - 7 = 2 (left: 2 13) -> 2 + 13 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 4 = 7 (left: 7 9 13) -> 9 - 7 = 2 (left: 2 13) -> 2 + 13 = 15 (left: 15) -> There are no possible next steps with the input 15.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps as the input provided does not have any operations to perform."
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> Possible next steps: -> There are no possible next steps as the input provided does not have any operations to perform. -> There are no possible next steps as the input provided does not have any operations to perform. -> There are no possible next steps as the input provided does not have any operations to perform.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> Possible next steps: -> There are no possible next steps as the input provided does not have any operations to perform. -> There are no possible next steps as the input provided does not have any operations to perform. -> There are no possible next steps as the input provided does not have any operations to perform. -> There are no possible next steps as the input provided does not have any operations to perform.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 * 4 = 12 (left: 9 12 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 4 4"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> Input: 5 10 15",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> Input: 5 10 15 -> 10 * 15 = 150 (left: 10 150)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> Input: 5 10 15 -> 10 * 15 = 150 (left: 10 150) -> 150 / 10 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "7 9 13"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "7 9 13"
                }
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 7 9 13) -> 9 + 13 = 22 (left: 7 22)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 + 4 = 7 (left: 7 9 13) -> 9 + 13 = 22 (left: 7 22) -> 22 / 7 = 3.142857142857143 (left: 3.142857142857143)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 4 = 7 (left: 7 9 13) -> 9 + 13 = 22 (left: 7 22) -> 22 / 7 = 3.142857142857143 (left: 3.142857142857143) -> 3.142857142857143 * 2 = 6.285714285714286",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps as the input provided does not have any operations to perform."
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> Possible next steps: -> There are no possible next steps as the input provided does not have any operations to perform. -> There are no possible next steps as the input provided does not have any operations to perform. -> There are no possible next steps as the input provided does not have any operations to perform.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> Possible next steps: -> There are no possible next steps as the input provided does not have any operations to perform. -> There are no possible next steps as the input provided does not have any operations to perform. -> There are no possible next steps as the input provided does not have any operations to perform. -> There are no possible next steps as the input provided does not have any operations to perform.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "4 * 3 = 12 (left: 12 9 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "7 9 13"
                }
            },
            "Step 1": {
                "Step": "3 + 4 = 7 (left: 7 9 13) -> 9 - 7 = 2 (left: 2 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 4 = 7 (left: 7 9 13) -> 9 - 7 = 2 (left: 2 13) -> 13 - 2 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 + 4 = 7 (left: 7 9 13) -> 9 - 7 = 2 (left: 2 13) -> 13 - 2 = 11 (left: 11) -> There are no possible next steps with the input 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "7 9 13"
                }
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 7 9 13) -> 7 + 9 = 16 (left: 16 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 + 4 = 7 (left: 7 9 13) -> 7 + 9 = 16 (left: 16 13) -> 16 / 13 = 1.23 (left: 1.23)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 4 = 7 (left: 7 9 13) -> 7 + 9 = 16 (left: 16 13) -> 16 / 13 = 1.23 (left: 1.23) -> 1.23 / 2 = 0.615 (left: 0.615)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "0.375 8"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps as the input provided does not have any operations to perform."
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> Possible next steps: -> There are no possible next steps as the input provided does not have any operations to perform. -> There are no possible next steps as the input provided does not have any operations to perform. -> There are no possible next steps as the input provided does not have any operations to perform.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> Possible next steps: -> There are no possible next steps as the input provided does not have any operations to perform. -> There are no possible next steps as the input provided does not have any operations to perform. -> There are no possible next steps as the input provided does not have any operations to perform. -> There are no possible next steps as the input provided does not have any operations to perform.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "3 * 4 = 12 (left: 9 12 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 4 4"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 3 * 4 = 12 (left: 4 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 3 * 4 = 12 (left: 4 12) -> 4 * 3 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 3 * 4 = 12 (left: 4 12) -> 4 * 3 = 12 (left: 12) -> 12 + 8 = 20 (left: 8 20)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "7 9 13"
                }
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 7 9 13) -> 13 - 9 = 4 (left: 7 4)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 + 4 = 7 (left: 7 9 13) -> 13 - 9 = 4 (left: 7 4) -> 7 * 4 = 28 (left: 28)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 4 = 7 (left: 7 9 13) -> 13 - 9 = 4 (left: 7 4) -> 7 * 4 = 28 (left: 28) -> 2 + 8 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "0.375 8"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps as the input provided does not have any operations to perform."
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> Possible next steps: -> There are no possible next steps as the input provided does not have any operations to perform. -> There are no possible next steps as the input provided does not have any operations to perform. -> There are no possible next steps as the input provided does not have any operations to perform.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> Possible next steps: -> There are no possible next steps as the input provided does not have any operations to perform. -> There are no possible next steps as the input provided does not have any operations to perform. -> There are no possible next steps as the input provided does not have any operations to perform. -> There are no possible next steps as the input provided does not have any operations to perform.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 9 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "7 9 13"
                }
            },
            "Step 1": {
                "Step": "3 + 4 = 7 (left: 7 9 13) -> 7 * 9 = 63 (left: 63 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 4 = 7 (left: 7 9 13) -> 7 * 9 = 63 (left: 63 13) -> 63 + 13 = 76 (left: 76)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 + 4 = 7 (left: 7 9 13) -> 7 * 9 = 63 (left: 63 13) -> 63 + 13 = 76 (left: 76) -> There are no possible next steps as there is only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "There are no possible next steps as there is only one number provided."
                }
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 7 9 13) -> 7 * 9 = 63 (left: 63 13) -> 63 + 13 = 76 (left: 76) -> There are no possible next steps as there is only one number provided. -> N/A",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "9 12 13"
                }
            },
            "Step 5": {
                "Step": "3 * 4 = 12 (left: 9 12 13) -> 9 * 12 = 108 (left: 13 108)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 4 = 12 (left: 9 12 13) -> 9 * 12 = 108 (left: 13 108) -> 13 + 108 = 121 (left: 121)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps as the input provided does not have any operations to perform."
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> Possible next steps: -> There are no possible next steps as the input provided does not have any operations to perform. -> There are no possible next steps as the input provided does not have any operations to perform. -> There are no possible next steps as the input provided does not have any operations to perform.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> Possible next steps: -> There are no possible next steps as the input provided does not have any operations to perform. -> There are no possible next steps as the input provided does not have any operations to perform. -> There are no possible next steps as the input provided does not have any operations to perform. -> 3 + 2 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "There are no possible next steps for the input 5.33 as it is already a single number and cannot be combined with any other numbers."
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "3 * 4 = 12 (left: 12 9 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 4 4"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 + 3 = 7 (left: 4 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 + 3 = 7 (left: 4 7) -> 5 + 9 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 + 3 = 7 (left: 4 7) -> 5 + 9 = 14 (left: 14) -> 14 + 14 = 28",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "7 9 13"
                }
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 7 9 13) -> 13 / 7 = 1 (left: 1 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 + 4 = 7 (left: 7 9 13) -> 13 / 7 = 1 (left: 1 9) -> 1 * 9 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 4 = 7 (left: 7 9 13) -> 13 / 7 = 1 (left: 1 9) -> 1 * 9 = 9 (left: 9) -> 9 * 1 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "There are no possible next steps for the input 5.33 as it is already a single number and cannot be combined with any other numbers."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps as the input provided does not have any operations to perform."
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> Possible next steps: -> There are no possible next steps as the input provided does not have any operations to perform. -> There are no possible next steps as the input provided does not have any operations to perform. -> There are no possible next steps as the input provided does not have any operations to perform.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> Possible next steps: -> There are no possible next steps as the input provided does not have any operations to perform. -> There are no possible next steps as the input provided does not have any operations to perform. -> There are no possible next steps as the input provided does not have any operations to perform. -> There are no possible next steps as the input provided does not have any operations to perform.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 9 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "7 9 13"
                }
            },
            "Step 1": {
                "Step": "3 + 4 = 7 (left: 7 9 13) -> 13 / 7 = 1 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 4 = 7 (left: 7 9 13) -> 13 / 7 = 1 (left: -> 7 - 13 = -6 (left: -6)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 + 4 = 7 (left: 7 9 13) -> 13 / 7 = 1 (left: -> 7 - 13 = -6 (left: -6) -> There are no valid next steps for the input -6.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "7 9 13"
                }
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 7 9 13) -> 9 + 13 = 22 (left: 7 22)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 + 4 = 7 (left: 7 9 13) -> 9 + 13 = 22 (left: 7 22) -> 7 * 22 = 154 (left: 154)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 4 = 7 (left: 7 9 13) -> 9 + 13 = 22 (left: 7 22) -> 7 * 22 = 154 (left: 154) -> 15 + 4 = 19 (left: 19)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "There are no possible next steps for the input 5.33 as it is already a single number and cannot be combined with any other numbers."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps as the input provided does not have any operations to perform."
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> Possible next steps: -> There are no possible next steps as the input provided does not have any operations to perform. -> There are no possible next steps as the input provided does not have any operations to perform. -> There are no possible next steps as the input provided does not have any operations to perform.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> Possible next steps: -> There are no possible next steps as the input provided does not have any operations to perform. -> There are no possible next steps as the input provided does not have any operations to perform. -> There are no possible next steps as the input provided does not have any operations to perform. -> There are no possible next steps as the input provided does not have any operations to perform.",
                "Pruning": null
            }
        },
        "Input": "3 4 9 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "941": {
        "puzzle": "4 5 10 12",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 5 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "5 10 8"
                }
            },
            "Step 1": {
                "Step": "12 - 4 = 8 (left: 5 10 8) -> 5 + 10 = 15 (left: 8 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 4 = 8 (left: 5 10 8) -> 5 + 10 = 15 (left: 8 15) -> 8 + 15 = 23 (left: 23)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 4 = 8 (left: 5 10 8) -> 5 + 10 = 15 (left: 8 15) -> 8 + 15 = 23 (left: 23) -> 23 - 8 = 15 (left: 8)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "0.8 10 12"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "0.8 10 12"
                }
            },
            "Step 4": {
                "Step": "4 / 5 = 0.8 (left: 0.8 10 12) -> 10 / 0.8 =",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 / 5 = 0.8 (left: 0.8 10 12) -> 10 / 0.8 = -> 10 / 0.8 = 12.5",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 5 = 0.8 (left: 0.8 10 12) -> 10 / 0.8 = -> 10 / 0.8 = 12.5 -> There are no possible steps to take as division by zero is undefined.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "There are no possible next steps with just the number 10."
                }
            },
            "Step 7": {
                "Step": "4 / 5 = 0.8 (left: 0.8 10 12) -> 0.8 * 12 = 9.6 (left: 9.6 10) -> 9.6 + 10 = 19.6 (left: 10) -> There are no possible next steps with just the number 10. -> 3 + 5 = 8 (left: 2 8",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 / 5 = 0.8 (left: 0.8 10 12) -> 0.8 * 12 = 9.6 (left: 9.6 10) -> 9.6 + 10 = 19.6 (left: 10) -> There are no possible next steps with just the number 10. -> 3 + 5 = 8 (left: 2 8 -> Input: 2",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 * 4 = 20 (left: 20 10 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 5 12"
                }
            },
            "Step 1": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 6 / 5 = 1.2 (left: 1.2 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 6 / 5 = 1.2 (left: 1.2 12) -> 12 - 1.2 = 10.8 (left: 10.8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 6 / 5 = 1.2 (left: 1.2 12) -> 12 - 1.2 = 10.8 (left: 10.8) -> There are no possible next steps for the input 10.8 as it is a single number and not an equation.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "0.8 10 12"
                }
            },
            "Step 4": {
                "Step": "4 / 5 = 0.8 (left: 0.8 10 12) -> 12 - 0.8 = 11.2 (left: 11.2 12",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 / 5 = 0.8 (left: 0.8 10 12) -> 12 - 0.8 = 11.2 (left: 11.2 12 -> 11.2 * 12 = 134.4 (left: 134.4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 5 = 0.8 (left: 0.8 10 12) -> 12 - 0.8 = 11.2 (left: 11.2 12 -> 11.2 * 12 = 134.4 (left: 134.4) -> 134.4 * 2 = 268.8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "There are no possible next steps with the input 2.8 as it is not a valid mathematical expression."
                }
            },
            "Step 7": {
                "Step": "4 / 5 = 0.8 (left: 0.8 10 12) -> 12 - 10 = 2 (left: 0.8 2) -> 0.8 + 2 = 2.8 (left: 2.8) -> There are no possible next steps with the input 2.8 as it is not a valid mathematical expression. -> Please input a valid mathematical expression.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 / 5 = 0.8 (left: 0.8 10 12) -> 12 - 10 = 2 (left: 0.8 2) -> 0.8 + 2 = 2.8 (left: 2.8) -> There are no possible next steps with the input 2.8 as it is not a valid mathematical expression. -> Please input a valid mathematical expression. -> 2. Subtraction: -",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 10 = 2 (left: 4 5 2)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "5 10 8"
                }
            },
            "Step 1": {
                "Step": "12 - 4 = 8 (left: 5 10 8) -> 5 + 10 = 15 (left: 8 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 4 = 8 (left: 5 10 8) -> 5 + 10 = 15 (left: 8 15) -> 8 + 15 = 23 (left: 23)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 4 = 8 (left: 5 10 8) -> 5 + 10 = 15 (left: 8 15) -> 8 + 15 = 23 (left: 23) -> 23 + 2 = 25 (left: 2)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "0.8 10 12"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "0.8 10 12"
                }
            },
            "Step 4": {
                "Step": "4 / 5 = 0.8 (left: 0.8 10 12) -> 0.8 * 10 = 8 (left: 8 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 / 5 = 0.8 (left: 0.8 10 12) -> 0.8 * 10 = 8 (left: 8 12) -> 8 / 12 = 0.6666666666666666 (left: 0.6666666666666666)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 5 = 0.8 (left: 0.8 10 12) -> 0.8 * 10 = 8 (left: 8 12) -> 8 / 12 = 0.6666666666666666 (left: 0.6666666666666666) -> 0.6666666666666666 * 2 = 1.3333333333333332",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "There are no possible next steps for the input 10.8 as it is a single number and not an equation."
                }
            },
            "Step 7": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 6 / 5 = 1.2 (left: 1.2 12) -> 12 - 1.2 = 10.8 (left: 10.8) -> There are no possible next steps for the input 10.8 as it is a single number and not an equation. -> There are no possible next steps for the input 10.8 as it is a single number and not an equation.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 6 / 5 = 1.2 (left: 1.2 12) -> 12 - 1.2 = 10.8 (left: 10.8) -> There are no possible next steps for the input 10.8 as it is a single number and not an equation. -> There are no possible next steps for the input 10.8 as it is a single number and not an equation. -> There are no possible next steps for the input 10.8 as it is a single number and not an equation.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 / 5 = 0.8 (left: 0.8 10 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 2 12"
                }
            },
            "Step 1": {
                "Step": "10 / 5 = 2 (left: 4 2 12) -> 2 * 12 = 24 (left: 4 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 5 = 2 (left: 4 2 12) -> 2 * 12 = 24 (left: 4 24) -> 4 * 6 = 24 (left: 6)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 / 5 = 2 (left: 4 2 12) -> 2 * 12 = 24 (left: 4 24) -> 4 * 6 = 24 (left: 6) -> 8 - 6 = 2 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "0.8 10 12"
                }
            },
            "Step 4": {
                "Step": "4 / 5 = 0.8 (left: 0.8 10 12) -> 12 - 10 = 2 (left: 0.8 2)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 / 5 = 0.8 (left: 0.8 10 12) -> 12 - 10 = 2 (left: 0.8 2) -> 0.8 + 2 = 2.8 (left: 2.8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 5 = 0.8 (left: 0.8 10 12) -> 12 - 10 = 2 (left: 0.8 2) -> 0.8 + 2 = 2.8 (left: 2.8) -> There are no possible next steps with the input 2.8 as it is not a valid mathematical expression.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "There are no possible next steps for the input 10.8 as it is a single number and not an equation."
                }
            },
            "Step 7": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 6 / 5 = 1.2 (left: 1.2 12) -> 12 - 1.2 = 10.8 (left: 10.8) -> There are no possible next steps for the input 10.8 as it is a single number and not an equation. -> There are no possible next steps for the input 10.8 as it is a single number and not an equation.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 6 / 5 = 1.2 (left: 1.2 12) -> 12 - 1.2 = 10.8 (left: 10.8) -> There are no possible next steps for the input 10.8 as it is a single number and not an equation. -> There are no possible next steps for the input 10.8 as it is a single number and not an equation. -> None",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "There are no possible next steps with the input 2.8 as it is not a valid mathematical expression."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "10 / 5 = 2 (left: 4 2 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 2 12"
                }
            },
            "Step 1": {
                "Step": "10 / 5 = 2 (left: 4 2 12) -> 12 - 4 = 8 (left: 2 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 5 = 2 (left: 4 2 12) -> 12 - 4 = 8 (left: 2 8) -> 8 / 2 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 / 5 = 2 (left: 4 2 12) -> 12 - 4 = 8 (left: 2 8) -> 8 / 2 = 4 (left: 4) -> There are no possible next steps as there are no more numbers left to operate on.",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "5 10 8"
                }
            },
            "Step 4": {
                "Step": "12 - 4 = 8 (left: 5 10 8) -> 10 - 5 = 5 (left: 5 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 4 = 8 (left: 5 10 8) -> 10 - 5 = 5 (left: 5 8) -> 8 - 5 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 4 = 8 (left: 5 10 8) -> 10 - 5 = 5 (left: 5 8) -> 8 - 5 = 3 (left: 3) -> There is only one possible next step: 3 + 2 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "There are no possible next steps for the input 10.8 as it is a single number and not an equation."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "There are no possible next steps with the input 2.8 as it is not a valid mathematical expression."
                }
            },
            "Step 7": {
                "Step": "4 / 5 = 0.8 (left: 0.8 10 12) -> 12 - 10 = 2 (left: 0.8 2) -> 0.8 + 2 = 2.8 (left: 2.8) -> There are no possible next steps with the input 2.8 as it is not a valid mathematical expression. -> Possible next steps:",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 / 5 = 0.8 (left: 0.8 10 12) -> 12 - 10 = 2 (left: 0.8 2) -> 0.8 + 2 = 2.8 (left: 2.8) -> There are no possible next steps with the input 2.8 as it is not a valid mathematical expression. -> Possible next steps: -> There are no possible next steps as the input is already in its simplest form.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "10 + 12 = 22 (left: 4 5 22)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 5 2"
                }
            },
            "Step 1": {
                "Step": "12 - 10 = 2 (left: 4 5 2) -> 4 / 5 = 0.8 (left: 0.8 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 10 = 2 (left: 4 5 2) -> 4 / 5 = 0.8 (left: 0.8 5) -> 5 / 0.8 = 6.25 (left: 6.25)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 10 = 2 (left: 4 5 2) -> 4 / 5 = 0.8 (left: 0.8 5) -> 5 / 0.8 = 6.25 (left: 6.25) -> 6.25 - 8 = -1.75 (left: -1.75)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "5 10 8"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "0.8 10 12"
                }
            },
            "Step 4": {
                "Step": "4 / 5 = 0.8 (left: 0.8 10 12) -> 0.8 * 12 = 9.6 (left: 9.6 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 / 5 = 0.8 (left: 0.8 10 12) -> 0.8 * 12 = 9.6 (left: 9.6 10) -> 9.6 + 10 = 19.6 (left: 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 5 = 0.8 (left: 0.8 10 12) -> 0.8 * 12 = 9.6 (left: 9.6 10) -> 9.6 + 10 = 19.6 (left: 10) -> There are no possible next steps with just the number 10.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "There are no possible next steps with just the number 10."
                }
            },
            "Step 7": {
                "Step": "4 / 5 = 0.8 (left: 0.8 10 12) -> 0.8 * 12 = 9.6 (left: 9.6 10) -> 9.6 + 10 = 19.6 (left: 10) -> There are no possible next steps with just the number 10. -> 10 + 2 = 12 (left: 2 12)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 / 5 = 0.8 (left: 0.8 10 12) -> 0.8 * 12 = 9.6 (left: 9.6 10) -> 9.6 + 10 = 19.6 (left: 10) -> There are no possible next steps with just the number 10. -> 10 + 2 = 12 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "There are no possible next steps with the number 18."
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "4 + 5 = 9 (left: 9 10 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "20 10 12"
                }
            },
            "Step 1": {
                "Step": "5 * 4 = 20 (left: 20 10 12) -> 20 + 12 = 32 (left: 10 32)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 4 = 20 (left: 20 10 12) -> 20 + 12 = 32 (left: 10 32) -> 10 + 32 = 42 (left: 42)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 4 = 20 (left: 20 10 12) -> 20 + 12 = 32 (left: 10 32) -> 10 + 32 = 42 (left: 42) -> 42 / 2 = 21",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "5 10 8"
                }
            },
            "Step 4": {
                "Step": "12 - 4 = 8 (left: 5 10 8) -> 5 * 2 = 10 (left: 10 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 4 = 8 (left: 5 10 8) -> 5 * 2 = 10 (left: 10 8) -> 10 + 8 = 18 (left: 18)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 4 = 8 (left: 5 10 8) -> 5 * 2 = 10 (left: 10 8) -> 10 + 8 = 18 (left: 18) -> There are no possible next steps with the number 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "0.6666666666666666 * 2 = 1.3333333333333332"
                }
            },
            "Step 7": {
                "Step": "4 / 5 = 0.8 (left: 0.8 10 12) -> 0.8 * 10 = 8 (left: 8 12) -> 8 / 12 = 0.6666666666666666 (left: 0.6666666666666666) -> 0.6666666666666666 * 2 = 1.3333333333333332 -> 0.6666666666666666 - 2 =",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 / 5 = 0.8 (left: 0.8 10 12) -> 0.8 * 10 = 8 (left: 8 12) -> 8 / 12 = 0.6666666666666666 (left: 0.6666666666666666) -> 0.6666666666666666 * 2 = 1.3333333333333332 -> 0.6666666666666666 - 2 = -> 0.6666666666666666 - 2 = -1.3333333333333334",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "10 / 5 = 2 (left: 4 2 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 5 2"
                }
            },
            "Step 1": {
                "Step": "12 - 10 = 2 (left: 4 5 2) -> 2 - 4 = -2 (left: -2 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 10 = 2 (left: 4 5 2) -> 2 - 4 = -2 (left: -2 5) -> 10 - 2 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 10 = 2 (left: 4 5 2) -> 2 - 4 = -2 (left: -2 5) -> 10 - 2 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "0.8 10 12"
                }
            },
            "Step 4": {
                "Step": "4 / 5 = 0.8 (left: 0.8 10 12) -> 0.8 * 10 = 8 (left: 8 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 / 5 = 0.8 (left: 0.8 10 12) -> 0.8 * 10 = 8 (left: 8 12) -> 8 / 12 = 0.6666666666666666 (left: 0.6666666666666666)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 5 = 0.8 (left: 0.8 10 12) -> 0.8 * 10 = 8 (left: 8 12) -> 8 / 12 = 0.6666666666666666 (left: 0.6666666666666666) -> There are no possible next steps for the input 0.6666666666666666 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "There are no possible next steps with the number 18."
                }
            },
            "Step 7": {
                "Step": "12 - 4 = 8 (left: 5 10 8) -> 5 * 2 = 10 (left: 10 8) -> 10 + 8 = 18 (left: 18) -> There are no possible next steps with the number 18. -> None",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "42 / 2 = 21"
                }
            },
            "Step 8": {
                "Step": "5 * 4 = 20 (left: 20 10 12) -> 20 + 12 = 32 (left: 10 32) -> 10 + 32 = 42 (left: 42) -> 42 / 2 = 21 -> 42 / 2 = 21 (left: 21 21)",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "12 - 4 = 8 (left: 5 10 8)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "20 10 12"
                }
            },
            "Step 1": {
                "Step": "5 * 4 = 20 (left: 20 10 12) -> 20 + 10 = 30 (left: 12 30)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 4 = 20 (left: 20 10 12) -> 20 + 10 = 30 (left: 12 30) -> 12 * 30 = 360 (left: 360)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 4 = 20 (left: 20 10 12) -> 20 + 10 = 30 (left: 12 30) -> 12 * 30 = 360 (left: 360) -> 360 * 2 = 720",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "0.8 10 12"
                }
            },
            "Step 4": {
                "Step": "4 / 5 = 0.8 (left: 0.8 10 12) -> 12 - 0.8 = 11.2 (left: 10 11.2)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 / 5 = 0.8 (left: 0.8 10 12) -> 12 - 0.8 = 11.2 (left: 10 11.2) -> 10 + 11.2 = 21.2 (left: 21.2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 5 = 0.8 (left: 0.8 10 12) -> 12 - 0.8 = 11.2 (left: 10 11.2) -> 10 + 11.2 = 21.2 (left: 21.2) -> 21.2 * 8 = 169.6 (left: 8)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "2 8"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "There are no possible next steps with the number 18."
                }
            },
            "Step 7": {
                "Step": "12 - 4 = 8 (left: 5 10 8) -> 5 * 2 = 10 (left: 10 8) -> 10 + 8 = 18 (left: 18) -> There are no possible next steps with the number 18. -> None",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "42 / 2 = 21"
                }
            },
            "Step 8": {
                "Step": "5 * 4 = 20 (left: 20 10 12) -> 20 + 12 = 32 (left: 10 32) -> 10 + 32 = 42 (left: 42) -> 42 / 2 = 21 -> 21 + 2 = 23 (left: 2 23)",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "5 * 10 = 50 (left: 4 50 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 2 12"
                }
            },
            "Step 1": {
                "Step": "10 / 5 = 2 (left: 4 2 12) -> 12 / 2 = 6 (left: 4 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 5 = 2 (left: 4 2 12) -> 12 / 2 = 6 (left: 4 6) -> 6 - 4 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 / 5 = 2 (left: 4 2 12) -> 12 / 2 = 6 (left: 4 6) -> 6 - 4 = 2 (left: 2) -> 2 + 2 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "0.8 10 12"
                }
            },
            "Step 4": {
                "Step": "4 / 5 = 0.8 (left: 0.8 10 12) -> 12 + 0.8 = 12.8 (left: 10 12.8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 / 5 = 0.8 (left: 0.8 10 12) -> 12 + 0.8 = 12.8 (left: 10 12.8) -> 10 + 12.8 = 22.8 (left: 22.8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 5 = 0.8 (left: 0.8 10 12) -> 12 + 0.8 = 12.8 (left: 10 12.8) -> 10 + 12.8 = 22.8 (left: 22.8) -> There are no possible next steps with the input of 22.8.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "0.6666666666666666 * 2 = 1.3333333333333332"
                }
            },
            "Step 7": {
                "Step": "4 / 5 = 0.8 (left: 0.8 10 12) -> 0.8 * 10 = 8 (left: 8 12) -> 8 / 12 = 0.6666666666666666 (left: 0.6666666666666666) -> 0.6666666666666666 * 2 = 1.3333333333333332 -> 0.6666666666666666 / 2 = 0.3333333333333333 (left: 0.3333333333333333)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "0.6666666666666666 * 2 = 1.3333333333333332"
                }
            },
            "Step 8": {
                "Step": "4 / 5 = 0.8 (left: 0.8 10 12) -> 0.8 * 10 = 8 (left: 8 12) -> 8 / 12 = 0.6666666666666666 (left: 0.6666666666666666) -> 0.6666666666666666 * 2 = 1.3333333333333332 -> 0.6666666666666666 + 2 = 2.6666666666666665 (left: 2.6666666666666665)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "There are no possible steps to take as division by zero is undefined."
                }
            }
        },
        "Input": "4 5 10 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "942": {
        "puzzle": "1 2 7 11",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 7 = 9 (left: 1 9 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "3 7 11"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 3 + 7 = 10 (left: 10 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 3 + 7 = 10 (left: 10 11) -> 10 / 11 = 0.909 (left: 0.909)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 3 + 7 = 10 (left: 10 11) -> 10 / 11 = 0.909 (left: 0.909) -> There are no possible next steps for the input 0.909.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 14 11"
                }
            },
            "Step 4": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 1 * 14 = 14 (left: 14 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 1 * 14 = 14 (left: 14 11) -> 14 * 11 = 154 (left: 154)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 1 * 14 = 14 (left: 14 11) -> 14 * 11 = 154 (left: 154) -> 15 - 4 = 11 (left",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "3"
                }
            },
            "Step 7": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 14 / 1 = 14 (left: 14 11) -> 14 - 11 = 3 (left: 3) -> There are no possible next steps with just the number 3."
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 7 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "3 7 11"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 7 - 3 = 4 (left: 4 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 7 - 3 = 4 (left: 4 11) -> 11 - 4 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 7 - 3 = 4 (left: 4 11) -> 11 - 4 = 7 (left: 7) -> 7 * 7 = 49 (left: 7 49",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "7 49"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 7 - 3 = 4 (left: 4 11) -> 11 - 4 = 7 (left: 7) -> 7 * 7 = 49 (left: 7 49 -> 7 * 7 = 49 (left: 49)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "3 7 11"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 7 - 3 = 4 (left: 4 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 7 - 3 = 4 (left: 4 11) -> 4 * 11 = 44 (left: 44)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 14 - 1 = 13 (left: 13 11) -> 13 + 11 = 24 (left: 24) -> Answer: ((2 * 7) - 1) + 11 = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 * 7 = 14 (left: 1 14 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 14 11"
                }
            },
            "Step 1": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 11 - 1 = 10 (left: 10 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 11 - 1 = 10 (left: 10 14) -> 14 / 10 = 1.4 (left: 1.4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 11 - 1 = 10 (left: 10 14) -> 14 / 10 = 1.4 (left: 1.4) -> There are no possible next steps for the input 1.4 as it is already a single number and cannot be combined with any other numbers.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 14 11"
                }
            },
            "Step 4": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 14 / 1 = 14 (left: 14 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 14 / 1 = 14 (left: 14 11) -> 14 + 11 = 25 (left: 25)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 14 / 1 = 14 (left: 14 11) -> 14 + 11 = 25 (left: 25) -> 25 + 2 = 27 (left: 2)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "None, as there is only one number left."
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 14 - 1 = 13 (left: 13 11) -> 13 + 11 = 24 (left: 24) -> Answer: (2 * 7) + (1 - 11) = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "11 - 7 = 4 (left: 1 2 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 7 11"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 7 / 3 = 2 (left: 2 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 7 / 3 = 2 (left: 2 11) -> 11 * 2 = 22 (left: 2 22)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 7 / 3 = 2 (left: 2 11) -> 11 * 2 = 22 (left: 2 22) -> 22 / 2 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "1 14 11"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 14 11"
                }
            },
            "Step 4": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 11 * 1 = 11 (",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 11 * 1 = 11 ( -> 11 / 1 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 11 * 1 = 11 ( -> 11 / 1 = 11 (left: 11) -> 11 - 2 = 9 (left: 2 8 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "3"
                }
            },
            "Step 7": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 14 / 1 = 14 (left: 14 11) -> 14 - 11 = 3 (left: 3) -> 3 - 8 = -5 (left: -5)"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 * 7 = 14 (left: 1 14 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 14 11"
                }
            },
            "Step 1": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 14 / 1 = 14 (left: 14 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 14 / 1 = 14 (left: 14 11) -> 14 * 11 = 154",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 14 / 1 = 14 (left: 14 11) -> 14 * 11 = 154 -> 14 + 11 = 25 (left: 25)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "1 2 4"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "7 49"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 7 - 3 = 4 (left: 4 11) -> 11 - 4 = 7 (left: 7) -> 7 * 7 = 49 (left: 7 49 -> 7 * 7 = 49 (left: 49)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "3 7 11"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 11 - 3 = 8 (left: 8 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 11 - 3 = 8 (left: 8 11) -> 8 - 11 = -3 (left: -3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 14 - 1 = 13 (left: 13 11) -> 13 + 11 = 24 (left: 24) -> Answer: ((2 * 7) - 1) + 11 = 24"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "2 * 7 = 14 (left: 1 14 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 14 11"
                }
            },
            "Step 1": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 11 - 1 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 11 - 1 =  -> 10",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 11 - 1 =  -> 10 -> None, as there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "7 49"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 7 - 3 = 4 (left: 4 11) -> 11 - 4 = 7 (left: 7) -> 7 * 7 = 49 (left: 7 49 -> 7 * 7 = 49 (left: 49)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "1 14 11"
                }
            },
            "Step 5": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 14 - 1 = 13 (left: 13 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 14 - 1 = 13 (left: 13 11) -> 13 + 11 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 14 - 1 = 13 (left: 13 11) -> 13 + 11 = 24 (left: 24) -> Answer: (2 * 7) - (1 + 11) = 24"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 7 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 7 11"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 11 - 3 = 8 (left: 8 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 11 - 3 = 8 (left: 8 11) -> 8 * 11 = 88 (left: 88)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 11 - 3 = 8 (left: 8 11) -> 8 * 11 = 88 (left: 88) -> 8 + 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "1 14 11"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 14 11"
                }
            },
            "Step 4": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> Possible",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> Possible -> It seems like the input is missing. Please provide the numbers or operation to continue.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> Possible -> It seems like the input is missing. Please provide the numbers or operation to continue. -> It seems like the input is missing. Please provide the numbers or operation to continue.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 14 - 1 = 13 (left: 13 11) -> 13 + 11 = 24 (left: 24) -> Answer: (2 * 7 - 1) + 11 = 24"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 7 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 7 11"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 7 / 3 = 2.33 (left: 2.33 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 7 / 3 = 2.33 (left: 2.33 11) -> 11 - 2.33 = 8.67 (left: 2.33 8.67)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 7 / 3 = 2.33 (left: 2.33 11) -> 11 - 2.33 = 8.67 (left: 2.33 8.67) -> 2.33 * 8.67 \u2248 20.19 (left: 20.19)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "3 7 11"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 14 11"
                }
            },
            "Step 4": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 14 - 1 = 13 (left: 13 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 14 - 1 = 13 (left: 13 11) -> Input: 5 3",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 14 - 1 = 13 (left: 13 11) -> Input: 5 3 -> 5 - 3 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "8 14"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 14 - 1 = 13 (left: 13 11) -> 13 + 11 = 24 (left: 24) -> Answer: ((2 * 7) - 1) + 11 = 24"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 7 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 14 11"
                }
            },
            "Step 1": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 11 / 1 = 11 (",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 11 / 1 = 11 ( -> 11 + 1 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 11 / 1 = 11 ( -> 11 + 1 = 12 (left: 12) -> 12 + 2 = 14 (left: 8 14)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "7 49"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 7 - 3 = 4 (left: 4 11) -> 11 - 4 = 7 (left: 7) -> 7 * 7 = 49 (left: 7 49 -> 7 * 7 = 49 (left: 49)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "1 14 11"
                }
            },
            "Step 5": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 1 * 14 = 14 (left: 14 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 1 * 14 = 14 (left: 14 11) -> 14 / 11 = 1.27272727273 (left: 1.27272727273)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 14 - 1 = 13 (left: 13 11) -> 13 + 11 = 24 (left: 24) -> Answer: (2 * 7) - (1 + 11) = 24"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "2 * 7 = 14 (left: 1 14 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 7 11"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 11 - 3 = 8 (left: 3 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 11 - 3 = 8 (left: 3 8) -> 8 - 3 = 5 (left: 5 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 11 - 3 = 8 (left: 3 8) -> 8 - 3 = 5 (left: 5 8) -> 5 * 8 = 40 (left: 40)",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "1 14 11"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "7 49"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 7 - 3 = 4 (left: 4 11) -> 11 - 4 = 7 (left: 7) -> 7 * 7 = 49 (left: 7 49 -> 7 / 49 = 0.142857 (left: 0.142857)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "1 14 11"
                }
            },
            "Step 5": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 14 / 1 = 14 (left: 14 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 14 / 1 = 14 (left: 14 11) -> 14 - 11 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "3"
                }
            },
            "Step 7": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 14 / 1 = 14 (left: 14 11) -> 14 - 11 = 3 (left: 3) -> 3 / 8 = 0.375 (left: 0.375)"
            }
        },
        "Input": "1 2 7 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "943": {
        "puzzle": "4 5 6 8",
        "Agent 0": {
            "Step 0": {
                "Step": "5 * 6 = 30 (left: 4 8 30)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 8 30"
                }
            },
            "Step 1": {
                "Step": "5 * 6 = 30 (left: 4 8 30) -> 8 + 4 = 12 (left: 12 30)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 6 = 30 (left: 4 8 30) -> 8 + 4 = 12 (left: 12 30) -> 12 + 30 = 42 (left: 42)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 6 = 30 (left: 4 8 30) -> 8 + 4 = 12 (left: 12 30) -> 12 + 30 = 42 (left: 42) -> There are no possible next steps with the input 42.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "4 5 "
                }
            },
            "Step 4": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 10 + 3 = 13 (left: 3 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 10 + 3 = 13 (left: 3 13) -> 3 + 13 = 16 (left: 16)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 10 + 3 = 13 (left: 3 13) -> 3 + 13 = 16 (left: 16) -> There are no possible next steps as there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "28 / 2 = 14 (left:"
                }
            },
            "Step 7": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> 8 * 6 = 48 (left: 48 20) -> 48 - 20 = 28 (left: 28) -> 28 / 2 = 14 (left: -> 28 / 2 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "There are no possible next steps as there are no numbers provided in the input."
                }
            },
            "Step 8": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 5 - 4 = 1 (left: 1) -> 1 - 1 = 0 (left: 0) -> There are no possible next steps as there are no numbers provided in the input. -> No possible next steps.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 + 5 = 9 (left: 6 8 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 8 20"
                }
            },
            "Step 1": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> Input: 5 5",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> Input: 5 5 -> 5 * 5 = 25 (left: 25)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> Input: 5 5 -> 5 * 5 = 25 (left: 25) -> 25 / 8 = 3.125 (left: 8)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "6 8 20"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "6 8 20"
                }
            },
            "Step 4": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> 6 + 8 = 14 (left: 14 20)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> 6 + 8 = 14 (left: 14 20) -> 14 / 20 = 0.7 (left: 0.7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> 6 + 8 = 14 (left: 14 20) -> 14 / 20 = 0.7 (left: 0.7) -> There is only one possible next step: 0.7 * 2 = 1.4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "28 / 2 = 14 (left:"
                }
            },
            "Step 7": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> 8 * 6 = 48 (left: 48 20) -> 48 - 20 = 28 (left: 28) -> 28 / 2 = 14 (left: -> 28 * 2 = 56 (left: 56)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "There are no possible next steps with the input of 5.33."
                }
            },
            "Step 8": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 9 / 6 = 1.5 (left: 1.5 8) -> 8 / 1.5 = 5.33 (left: 5.33) -> There are no possible next steps with the input of 5.33. -> There are no possible next steps with the input of 5.33.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 5 = 9 (left: 6 8 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 8 30"
                }
            },
            "Step 1": {
                "Step": "5 * 6 = 30 (left: 4 8 30) -> 4 * 8 = 32 (left: 32 30)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 6 = 30 (left: 4 8 30) -> 4 * 8 = 32 (left: 32 30) -> 32 - 30 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 6 = 30 (left: 4 8 30) -> 4 * 8 = 32 (left: 32 30) -> 32 - 30 = 2 (left: 2) -> 2 + 2 = 4 (left: 2 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "4 8 30"
                }
            },
            "Step 4": {
                "Step": "5 * 6 = 30 (left: 4 8 30) -> 8 / 4 = 2 (left: 2 30)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 6 = 30 (left: 4 8 30) -> 8 / 4 = 2 (left: 2 30) -> 2 + 30 = 32 (left: 30)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 6 = 30 (left: 4 8 30) -> 8 / 4 = 2 (left: 2 30) -> 2 + 30 = 32 (left: 30) -> 30 / 3 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There are no possible next steps with the input 42."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "28 / 2 = 14 (left:"
                }
            },
            "Step 7": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> 8 * 6 = 48 (left: 48 20) -> 48 - 20 = 28 (left: 28) -> 28 / 2 = 14 (left: -> 28 * 2 = 56 (left: 56)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "2 4"
                }
            },
            "Step 8": {
                "Step": "5 * 6 = 30 (left: 4 8 30) -> 4 * 8 = 32 (left: 32 30) -> 32 - 30 = 2 (left: 2) -> 2 + 2 = 4 (left: 2 4) -> 4 / 2 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "There is only one number given, so there are no possible next steps to perform."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 * 8 = 48 (left: 4 5 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 1": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 8 / 6 = 1.33 (left: 1.33 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 8 / 6 = 1.33 (left: 1.33 9) -> 1.33 * 9 = 11.97 (left: 11.97)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 8 / 6 = 1.33 (left: 1.33 9) -> 1.33 * 9 = 11.97 (left: 11.97) -> There is only one number given, so there are no possible next steps to perform.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "6 8 20"
                }
            },
            "Step 4": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> 20 + 6 = 26 (left: 8 26)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> 20 + 6 = 26 (left: 8 26) -> 8 * 26 = 208 (left: 208)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> 20 + 6 = 26 (left: 8 26) -> 8 * 26 = 208 (left: 208) -> 8 / 2 = 4 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "28 / 2 = 14 (left:"
                }
            },
            "Step 7": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> 8 * 6 = 48 (left: 48 20) -> 48 - 20 = 28 (left: 28) -> 28 / 2 = 14 (left: -> 28 + 2 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "There are no possible next steps as there is only one number left."
                }
            },
            "Step 8": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 10 + 3 = 13 (left: 3 13) -> 3 + 13 = 16 (left: 16) -> There are no possible next steps as there is only one number left. -> There are no possible next steps as there is only one number left.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 * 5 = 20 (left: 6 8 20)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 5 14"
                }
            },
            "Step 1": {
                "Step": "6 + 8 = 14 (left: 4 5 14) -> 14 - 5 = 9 (left: 4 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 8 = 14 (left: 4 5 14) -> 14 - 5 = 9 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 8 = 14 (left: 4 5 14) -> 14 - 5 = 9 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> 2.25 + 9 = 11.25 (left: 11.25)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "4 5 "
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "4 5 "
                }
            },
            "Step 4": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 5 - 4 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 5 - 4 = 1 (left: 1) -> 1 - 1 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 5 - 4 = 1 (left: 1) -> 1 - 1 = 0 (left: 0) -> There are no possible next steps as there are no numbers provided in the input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "28 / 2 = 14 (left:"
                }
            },
            "Step 7": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> 8 * 6 = 48 (left: 48 20) -> 48 - 20 = 28 (left: 28) -> 28 / 2 = 14 (left: -> 28 - 2 = 26 (left: 26)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "28 / 2 = 14 (left:"
                }
            },
            "Step 8": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> 8 * 6 = 48 (left: 48 20) -> 48 - 20 = 28 (left: 28) -> 28 / 2 = 14 (left: -> 28 * 2 = 56 (left: 56)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There are no possible next steps with the input 42."
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "4 * 5 = 20 (left: 6 8 20)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 8 30"
                }
            },
            "Step 1": {
                "Step": "5 * 6 = 30 (left: 4 8 30) -> 30 / 4 = 7.5 (left: 7.5 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 6 = 30 (left: 4 8 30) -> 30 / 4 = 7.5 (left: 7.5 8) -> 7.5 / 8 = 0.9375 (left: 0.9375)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 6 = 30 (left: 4 8 30) -> 30 / 4 = 7.5 (left: 7.5 8) -> 7.5 / 8 = 0.9375 (left: 0.9375) -> 0.9375 / 2 = 0.46875 (left: 0.46875)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "4 5 "
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "6 8 20"
                }
            },
            "Step 4": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> 20 / 8 = ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> 20 / 8 =  -> 20 / 8 = 2.5",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> 20 / 8 =  -> 20 / 8 = 2.5 -> 20 - 8 = 12 (left: 12 8 2.5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "28 / 2 = 14 (left:"
                }
            },
            "Step 7": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> 8 * 6 = 48 (left: 48 20) -> 48 - 20 = 28 (left: 28) -> 28 / 2 = 14 (left: -> 28 / 2 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "There is only one possible next step: 0.7 * 2 = 1.4"
                }
            },
            "Step 8": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> 6 + 8 = 14 (left: 14 20) -> 14 / 20 = 0.7 (left: 0.7) -> There is only one possible next step: 0.7 * 2 = 1.4 -> 0.7 - 2 = -1.3 (left: -1.3)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "There is only one number given, so there are no possible next steps to perform."
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "5 * 6 = 30 (left: 4 8 30)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 8 30"
                }
            },
            "Step 1": {
                "Step": "5 * 6 = 30 (left: 4 8 30) -> 30 / 4 = 7.5 (left: 7.5 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 6 = 30 (left: 4 8 30) -> 30 / 4 = 7.5 (left: 7.5 8) -> 8 - 7.5 = 0.5 (left: 0.5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 6 = 30 (left: 4 8 30) -> 30 / 4 = 7.5 (left: 7.5 8) -> 8 - 7.5 = 0.5 (left: 0.5) -> 0.5 / 2 = 0.25 (left: 0.25)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "4 8 30"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "6 8 20"
                }
            },
            "Step 4": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> 6 * 8 = 48 (left: 8 20 48)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> 6 * 8 = 48 (left: 8 20 48) -> 20 * 2 = 40 (left: 8 40 48)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> 6 * 8 = 48 (left: 8 20 48) -> 20 * 2 = 40 (left: 8 40 48) -> 40 - 8 = 32 (left: 32 48)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "32 48"
                }
            },
            "Step 7": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> 6 * 8 = 48 (left: 8 20 48) -> 20 * 2 = 40 (left: 8 40 48) -> 40 - 8 = 32 (left: 32 48) -> 32 + 48 = 80 (left: 80)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "2 4"
                }
            },
            "Step 8": {
                "Step": "5 * 6 = 30 (left: 4 8 30) -> 4 * 8 = 32 (left: 32 30) -> 32 - 30 = 2 (left: 2) -> 2 + 2 = 4 (left: 2 4) -> 2 + 4 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "There are no possible next steps as there are no numbers provided in the input."
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "6 + 8 = 14 (left: 4 5 14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 8 30"
                }
            },
            "Step 1": {
                "Step": "5 * 6 = 30 (left: 4 8 30) -> 4 / 8 = 0.5 (left: 0.5 8 30)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 6 = 30 (left: 4 8 30) -> 4 / 8 = 0.5 (left: 0.5 8 30) -> 8 / 0.5 = 16 (left: 16 30)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 6 = 30 (left: 4 8 30) -> 4 / 8 = 0.5 (left: 0.5 8 30) -> 8 / 0.5 = 16 (left: 16 30) -> 30 / 16 = 1.875 (left: 1.875)",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "6 8 20"
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "6 8 20"
                }
            },
            "Step 4": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> 8 * 6 = 48 (left: 48 20)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> 8 * 6 = 48 (left: 48 20) -> 48 * 20 = 960 (left: 960)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> 8 * 6 = 48 (left: 48 20) -> 48 * 20 = 960 (left: 960) -> 96 + 0 = 96 (left: 96)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "There is only one number given, so there are no possible next steps to perform."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "28 / 2 = 14 (left:"
                }
            },
            "Step 7": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> 8 * 6 = 48 (left: 48 20) -> 48 - 20 = 28 (left: 28) -> 28 / 2 = 14 (left: -> There are no possible next steps as the equation has been solved.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> 8 * 6 = 48 (left: 48 20) -> 48 - 20 = 28 (left: 28) -> 28 / 2 = 14 (left: -> There are no possible next steps as the equation has been solved. -> No possible next steps. Equation has been solved.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "6 + 8 = 14 (left: 4 5 14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 1": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 8 - 6 = 2 (left: 2 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 8 - 6 = 2 (left: 2 9) -> 2 + 9 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 8 - 6 = 2 (left: 2 9) -> 2 + 9 = 11 (left: 11) -> 11 - 11 = 0 (left: 0",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "6 8 20"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "4 5 "
                }
            },
            "Step 4": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 5 - 4 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 5 - 4 = 1 (left: 1) -> 1 + 1 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 5 - 4 = 1 (left: 1) -> 1 + 1 = 2 (left: 2) -> 2 + 2 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "28 / 2 = 14 (left:"
                }
            },
            "Step 7": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> 8 * 6 = 48 (left: 48 20) -> 48 - 20 = 28 (left: 28) -> 28 / 2 = 14 (left: -> 28 - 2 = 26 (left: 26)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "28 / 2 = 14 (left:"
                }
            },
            "Step 8": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> 8 * 6 = 48 (left: 48 20) -> 48 - 20 = 28 (left: 28) -> 28 / 2 = 14 (left: -> 28 * 2 = 56 (left: 56)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "2 4"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "4 * 5 = 20 (left: 6 8 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 1": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 9 / 6 = 1.5 (left: 1.5 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 9 / 6 = 1.5 (left: 1.5 8) -> 8 / 1.5 = 5.33 (left: 5.33)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 9 / 6 = 1.5 (left: 1.5 8) -> 8 / 1.5 = 5.33 (left: 5.33) -> There are no possible next steps with the input of 5.33.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "6 8 20"
                }
            },
            "Step 4": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> 8 * 6 = 48 (left: 48 20)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> 8 * 6 = 48 (left: 48 20) -> 48 - 20 = 28 (left: 28)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> 8 * 6 = 48 (left: 48 20) -> 48 - 20 = 28 (left: 28) -> 28 / 2 = 14 (left:",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "28 / 2 = 14 (left:"
                }
            },
            "Step 7": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> 8 * 6 = 48 (left: 48 20) -> 48 - 20 = 28 (left: 28) -> 28 / 2 = 14 (left: -> 2 + 28 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "32 48"
                }
            },
            "Step 8": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> 6 * 8 = 48 (left: 8 20 48) -> 20 * 2 = 40 (left: 8 40 48) -> 40 - 8 = 32 (left: 32 48) -> 32 * 48 = 1536 (left: 1536)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "There are no possible next steps as there are no numbers provided in the input."
                }
            }
        },
        "Input": "4 5 6 8",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "944": {
        "puzzle": "6 10 12 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 6 10 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "7 10 12"
                }
            },
            "Step 1": {
                "Step": "13 - 6 = 7 (left: 7 10 12) -> 12 + 7 = 19 (left: 10 19)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 6 = 7 (left: 7 10 12) -> 12 + 7 = 19 (left: 10 19) -> 10 * 19 = 190 (left: 190)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 6 = 7 (left: 7 10 12) -> 12 + 7 = 19 (left: 10 19) -> 10 * 19 = 190 (left: 190) -> 19 / 1 = 19 (left: 19)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "6 13 22"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "4 12 "
                }
            },
            "Step 4": {
                "Step": "10 - 6 = 4 (left: 4 12  -> 4 * 12 = 48 (left: 48)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 6 = 4 (left: 4 12  -> 4 * 12 = 48 (left: 48) -> 48 * 2 = 96 (left: 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 6 = 4 (left: 4 12  -> 4 * 12 = 48 (left: 48) -> 48 * 2 = 96 (left: 2) -> No possible next steps with just one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "There are no possible next steps for the input 96 as it is a single number."
                }
            },
            "Step 7": {
                "Step": "10 + 12 = 22 (left: 6 13 22) -> 22 - 6 = 16 (left: 6 16) -> 6 * 16 = 96 (left: 96) -> There are no possible next steps for the input 96 as it is a single number. -> None",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "Input: 4 5"
                }
            },
            "Step 8": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 16 - 12 = 4 (left: 4 13) -> 13 + 4 = 17 (left: 17) -> Input: 4 5 -> 4 * 5 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "11.67 * 2 = 23.34"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 + 10 = 22 (left: 6 13 22)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "6 13 22"
                }
            },
            "Step 1": {
                "Step": "10 + 12 = 22 (left: 6 13 22) -> 22 - 6 = 16 (left: 6 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 12 = 22 (left: 6 13 22) -> 22 - 6 = 16 (left: 6 16) -> 6 * 16 = 96 (left: 96)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 + 12 = 22 (left: 6 13 22) -> 22 - 6 = 16 (left: 6 16) -> 6 * 16 = 96 (left: 96) -> There are no possible next steps for the input 96 as it is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "4 12 "
                }
            },
            "Step 4": {
                "Step": "10 - 6 = 4 (left: 4 12  -> 4 + 12 = 16 (left: 16)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 6 = 4 (left: 4 12  -> 4 + 12 = 16 (left: 16) -> 16 - 8 = 8 (left: 8) ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 6 = 4 (left: 4 12  -> 4 + 12 = 16 (left: 16) -> 16 - 8 = 8 (left: 8)  -> 8 / 8 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "-140 + 2 = -138"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "- 17.33 + 2 = 19.33"
                }
            },
            "Step 7": {
                "Step": "6 + 10 = 16 (left: 12 16 13) -> 12 / 16 = 0.75 (left: 0.75 13) -> 13 / 0.75 = 17.33 (left: 17.33) -> - 17.33 + 2 = 19.33 -> - 17.33 / 2 = -8.665",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 10 = 16 (left: 12 16 13) -> 12 / 16 = 0.75 (left: 0.75 13) -> 13 / 0.75 = 17.33 (left: 17.33) -> - 17.33 + 2 = 19.33 -> - 17.33 / 2 = -8.665 -> -17.33 - 2 = -19.33",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 10 = 16 (left: 12 13 16)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "12 13 16"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 * 13 = 156 (left: 16 156)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 * 13 = 156 (left: 16 156) -> 16 - 156 = -140 (left: -140)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 * 13 = 156 (left: 16 156) -> 16 - 156 = -140 (left: -140) -> -140 + 2 = -138",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "7 10 12"
                }
            },
            "Step 4": {
                "Step": "13 - 6 = 7 (left: 7 10 12) -> 7 + 10 = 17 (left: 10 12 17)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 6 = 7 (left: 7 10 12) -> 7 + 10 = 17 (left: 10 12 17) -> 10 + 12 = 22 (left: 17 22)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 6 = 7 (left: 7 10 12) -> 7 + 10 = 17 (left: 10 12 17) -> 10 + 12 = 22 (left: 17 22) -> 17 + 22 = 39 (left: 39)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "-140 + 2 = -138"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "Input: 4 5"
                }
            },
            "Step 7": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 16 - 12 = 4 (left: 4 13) -> 13 + 4 = 17 (left: 17) -> Input: 4 5 -> 5 / 4 = 1.25 (left: 1.25)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "There are no more possible next steps with the given input."
                }
            },
            "Step 8": {
                "Step": "12 + 10 = 22 (left: 6 13 22) -> 6 * 13 = 78 (left: 78 22) -> 78 * 22 = 1716 (left: ) -> There are no more possible next steps with the given input. -> There are no more possible next steps with the given input.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 * 12 = 120 (left: 6 120 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "7 10 12"
                }
            },
            "Step 1": {
                "Step": "13 - 6 = 7 (left: 7 10 12) -> 7 + 10 = 17 (left: 12 17)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 6 = 7 (left: 7 10 12) -> 7 + 10 = 17 (left: 12 17) -> 12 + 17 = 29 (left: 29)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 6 = 7 (left: 7 10 12) -> 7 + 10 = 17 (left: 12 17) -> 12 + 17 = 29 (left: 29) -> There are no possible next steps with the input 29.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "4 12 "
                }
            },
            "Step 4": {
                "Step": "10 - 6 = 4 (left: 4 12  -> 4 + 12 = 16 (left: 16)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 6 = 4 (left: 4 12  -> 4 + 12 = 16 (left: 16) -> 16 / 2 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 6 = 4 (left: 4 12  -> 4 + 12 = 16 (left: 16) -> 16 / 2 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "17 / 2 = 8.5"
                }
            },
            "Step 7": {
                "Step": "6 + 10 = 16 (left: 12 16 13) -> 13 - 12 = 1 (left: 16 1) -> 16 + 1 = 17 (left: 17) -> 17 / 2 = 8.5 -> 17 - 8.5 = 8.5 (left: 8.5 2 8.5)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 10 = 16 (left: 12 16 13) -> 13 - 12 = 1 (left: 16 1) -> 16 + 1 = 17 (left: 17) -> 17 / 2 = 8.5 -> 17 - 8.5 = 8.5 (left: 8.5 2 8.5) -> Possible next steps",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 10 = 16 (left: 12 16 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "12 13 16"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 + 13 = 25 (left: 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 + 13 = 25 (left: 16) -> 16 / 2 = 8",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 + 13 = 25 (left: 16) -> 16 / 2 = 8 -> 16 / 8 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "12 16 13"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "7 10 12"
                }
            },
            "Step 4": {
                "Step": "13 - 6 = 7 (left: 7 10 12) -> 7 * 10 = 70 (left: 70 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 6 = 7 (left: 7 10 12) -> 7 * 10 = 70 (left: 70 12) -> 70 - 12 = 58 (left: 58)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 6 = 7 (left: 7 10 12) -> 7 * 10 = 70 (left: 70 12) -> 70 - 12 = 58 (left: 58) -> 5 + 8 = 13 (left: 13)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "There are no possible next steps for the input 96 as it is a single number."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "There are no possible next steps with the input of -3."
                }
            },
            "Step 7": {
                "Step": "6 + 10 = 16 (left: 12 16 13) -> 13 - 16 -> 13 - 16 = -3 (left: -3) -> There are no possible next steps with the input of -3. -> There are no possible next steps with the input of -3.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 10 = 16 (left: 12 16 13) -> 13 - 16 -> 13 - 16 = -3 (left: -3) -> There are no possible next steps with the input of -3. -> There are no possible next steps with the input of -3. -> There are no possible next steps with the input of -3.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "10 + 12 = 22 (left: 6 13 22)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 13 22"
                }
            },
            "Step 1": {
                "Step": "12 + 10 = 22 (left: 6 13 22) -> 6 * 13 = 78 (left: 78 22)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 + 10 = 22 (left: 6 13 22) -> 6 * 13 = 78 (left: 78 22) -> 78 * 22 = 1716 (left: )",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 + 10 = 22 (left: 6 13 22) -> 6 * 13 = 78 (left: 78 22) -> 78 * 22 = 1716 (left: ) -> There are no more possible next steps with the given input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "12 16 13"
                }
            },
            "Step 4": {
                "Step": "6 + 10 = 16 (left: 12 16 13) -> 13 - 12 = 1 (left: 16 1)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 10 = 16 (left: 12 16 13) -> 13 - 12 = 1 (left: 16 1) -> 16 + 1 = 17 (left: 17)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 10 = 16 (left: 12 16 13) -> 13 - 12 = 1 (left: 16 1) -> 16 + 1 = 17 (left: 17) -> 17 / 2 = 8.5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "8 + 8 = 16"
                }
            },
            "Step 7": {
                "Step": "10 - 6 = 4 (left: 4 12  -> 4 + 12 = 16 (left: 16) -> 16 / 2 = 8 (left: 8) -> 8 + 8 = 16 -> 8 + 16 = 24 (left: 8 24)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 6 = 4 (left: 4 12  -> 4 + 12 = 16 (left: 16) -> 16 / 2 = 8 (left: 8) -> 8 + 8 = 16 -> 8 + 16 = 24 (left: 8 24) -> 24 - 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "There are no possible next steps for the input 96 as it is a single number."
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 7 10 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "12 13 16"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 16 - 12 = 4 (left: 4 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 16 - 12 = 4 (left: 4 13) -> 13 + 4 = 17 (left: 17)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 16 - 12 = 4 (left: 4 13) -> 13 + 4 = 17 (left: 17) -> Input: 4 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "12 16 13"
                }
            },
            "Step 4": {
                "Step": "6 + 10 = 16 (left: 12 16 13) -> 16 / 12 = 1.33 (left: 1.33 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 10 = 16 (left: 12 16 13) -> 16 / 12 = 1.33 (left: 1.33 13) -> 13 - 1.33 = 11.67 (left: 11.67)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 10 = 16 (left: 12 16 13) -> 16 / 12 = 1.33 (left: 1.33 13) -> 13 - 1.33 = 11.67 (left: 11.67) -> 11.67 * 2 = 23.34",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "There are no possible next steps for the input 96 as it is a single number."
                }
            },
            "Step 7": {
                "Step": "10 + 12 = 22 (left: 6 13 22) -> 22 - 6 = 16 (left: 6 16) -> 6 * 16 = 96 (left: 96) -> There are no possible next steps for the input 96 as it is a single number. -> There are no possible next steps for the input 96 as it is a single number.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 + 12 = 22 (left: 6 13 22) -> 22 - 6 = 16 (left: 6 16) -> 6 * 16 = 96 (left: 96) -> There are no possible next steps for the input 96 as it is a single number. -> There are no possible next steps for the input 96 as it is a single number. -> N/A",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "There are no more possible next steps with the given input."
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "10 * 12 = 120 (left: 6 13 120)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 13 22"
                }
            },
            "Step 1": {
                "Step": "12 + 10 = 22 (left: 6 13 22) -> 6 * 13 = 78 (left: 78 22)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 + 10 = 22 (left: 6 13 22) -> 6 * 13 = 78 (left: 78 22) -> 78 / 22 = 3.5454545454545454 (left: 3.5454545454545454)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 + 10 = 22 (left: 6 13 22) -> 6 * 13 = 78 (left: 78 22) -> 78 / 22 = 3.5454545454545454 (left: 3.5454545454545454) -> 3.5454545454545454 - 2 = 1.5454545454545454",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "4 12 "
                }
            },
            "Step 4": {
                "Step": "10 - 6 = 4 (left: 4 12  -> 4 + 12 = 16 (left: 16)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 6 = 4 (left: 4 12  -> 4 + 12 = 16 (left: 16) -> 16 + 16 = 32",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 6 = 4 (left: 4 12  -> 4 + 12 = 16 (left: 16) -> 16 + 16 = 32 -> 16 * 16 = 256 (left: 256)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "Input: 4 5"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "Input: 4 5"
                }
            },
            "Step 7": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 16 - 12 = 4 (left: 4 13) -> 13 + 4 = 17 (left: 17) -> Input: 4 5 -> 3 * 9 = 27",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 16 - 12 = 4 (left: 4 13) -> 13 + 4 = 17 (left: 17) -> Input: 4 5 -> 3 * 9 = 27 -> 9 - 3 = 6 (left: 6 = 27)",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "10 - 6 = 4 (left: 4 12 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "12 13 16"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 16 - 12 = 4 (left: 4 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 16 - 12 = 4 (left: 4 16) -> 16 - 4 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 16 - 12 = 4 (left: 4 16) -> 16 - 4 = 12 (left: 12) -> 12 - 8 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "7 10 12"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "12 16 13"
                }
            },
            "Step 4": {
                "Step": "6 + 10 = 16 (left: 12 16 13) -> 12 / 16 = 0.75 (left: 0.75 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 10 = 16 (left: 12 16 13) -> 12 / 16 = 0.75 (left: 0.75 13) -> 13 / 0.75 = 17.33 (left: 17.33)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 10 = 16 (left: 12 16 13) -> 12 / 16 = 0.75 (left: 0.75 13) -> 13 / 0.75 = 17.33 (left: 17.33) -> - 17.33 + 2 = 19.33",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "-140 + 2 = -138"
                }
            },
            "Step 7": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 * 13 = 156 (left: 16 156) -> 16 - 156 = -140 (left: -140) -> -140 + 2 = -138 -> -140 - 2 = -142 (left: -142)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "There are no more possible next steps with the given input."
                }
            },
            "Step 8": {
                "Step": "12 + 10 = 22 (left: 6 13 22) -> 6 * 13 = 78 (left: 78 22) -> 78 * 22 = 1716 (left: ) -> There are no more possible next steps with the given input. -> There are no more possible next steps with the given input.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "10 + 12 = 22 (left: 6 13 22)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "12 13 16"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 13 + 16 = 29 (left: 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 13 + 16 = 29 (left: 12) -> 12 + 8 = 20 (left: 8 20)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 13 + 16 = 29 (left: 12) -> 12 + 8 = 20 (left: 8 20) -> 8 * 20 = 160 (left: 160)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "4 12 "
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "12 16 13"
                }
            },
            "Step 4": {
                "Step": "6 + 10 = 16 (left: 12 16 13) -> 13 - 16",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 10 = 16 (left: 12 16 13) -> 13 - 16 -> 13 - 16 = -3 (left: -3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 10 = 16 (left: 12 16 13) -> 13 - 16 -> 13 - 16 = -3 (left: -3) -> There are no possible next steps with the input of -3.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "There are no possible next steps for the input 96 as it is a single number."
                }
            },
            "Step 7": {
                "Step": "10 + 12 = 22 (left: 6 13 22) -> 22 - 6 = 16 (left: 6 16) -> 6 * 16 = 96 (left: 96) -> There are no possible next steps for the input 96 as it is a single number. -> There are no possible next steps for the input 96 as it is a single number.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 + 12 = 22 (left: 6 13 22) -> 22 - 6 = 16 (left: 6 16) -> 6 * 16 = 96 (left: 96) -> There are no possible next steps for the input 96 as it is a single number. -> There are no possible next steps for the input 96 as it is a single number. -> 96 is a single number and cannot be broken down further using arithmetic operations.",
                "Pruning": null
            }
        },
        "Input": "6 10 12 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "945": {
        "puzzle": "1 3 9 9",
        "Agent 0": {
            "Step 0": {
                "Step": "9 + 1 = 10 (left: 10 9 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 3 9"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 - 1 = 8 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 - 1 = 8 (left: -> 9 / 1 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 - 1 = 8 (left: -> 9 / 1 = 9 (left: 9) -> 8 + 9 = 17 (left: 9)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "8 3 9"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "8 3 9"
                }
            },
            "Step 4": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> Input: 4",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> Input: 4 -> 4 + 4 = 8",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> Input: 4 -> 4 + 4 = 8 -> 1 + 8 = 9 (left: 8 9)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "8 9"
                }
            },
            "Step 7": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> Input: 4 -> 4 + 4 = 8 -> 1 + 8 = 9 (left: 8 9) -> 8 - 9 = -1 (left: -1)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "There are no possible next steps for the input 11.67 as it is a single number and not an expression with operators."
                }
            },
            "Step 8": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 2.67 + 9 = 11.67 (left: 11.67) -> There are no possible next steps for the input 11.67 as it is a single number and not an expression with operators. -> There are no possible next steps for the input 11.67 as it is a single number and not an expression with operators.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 4 9 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 9 9"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 1 9 9) -> 9 / 1 = 9 (left: 9 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 1 9 9) -> 9 / 1 = 9 (left: 9 9) -> 9 * 9 = 81 (left: 81)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 / 3 = 3 (left: 1 9 9) -> 9 / 1 = 9 (left: 9 9) -> 9 * 9 = 81 (left: 81) -> 8 + 1 = 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "8 3 9"
                }
            },
            "Step 4": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 + 3 = 11 (left: 11 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 + 3 = 11 (left: 11 9) -> 11 * 9 = 99 (left: 99)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 + 3 = 11 (left: 11 9) -> 11 * 9 = 99 (left: 99) -> There are no possible next steps for the input 99 as it is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "8 9"
                }
            },
            "Step 7": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> Input: 4 -> 4 + 4 = 8 -> 1 + 8 = 9 (left: 8 9) -> 8 + 9 = 17 (left: 17)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "1.2222 * 2 = 2.4444"
                }
            },
            "Step 8": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 + 3 = 11 (left: 11 9) -> 11 / 9 = 1.2222 (left: 1.2222) -> 1.2222 * 2 = 2.4444 -> 1.2222 / 2 = 0.6111 (left: 0.6111 2.4444)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 - 1 = 8 (left: 8 3 9)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 3 9"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 1 * 3 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 1 * 3 = 3 (left: 3) -> There are no possible next steps with only one number provided.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 1 * 3 = 3 (left: 3) -> There are no possible next steps with only one number provided. -> Please provide more numbers to continue the calculations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "8 3 9"
                }
            },
            "Step 4": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> Possible next steps:",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> Possible next steps: -> There are no possible next steps for the given input.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> Possible next steps: -> There are no possible next steps for the given input. -> There are no possible next steps for the given input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "8 9"
                }
            },
            "Step 7": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> Input: 4 -> 4 + 4 = 8 -> 1 + 8 = 9 (left: 8 9) -> 9 - 8 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "There are no possible next steps for 1.8 as it is a single number and not a mathematical expression."
                }
            },
            "Step 8": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 - 3 = 5 (left: 5 9) -> 9 / 5 = 1.8 (left: 1.8) -> There are no possible next steps for 1.8 as it is a single number and not a mathematical expression. -> There are no possible next steps for 1.8 as it is a single number and not a mathematical expression.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 4 9 9)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "8 3 9"
                }
            },
            "Step 1": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 - 3 = 5 (left: 5 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 - 3 = 5 (left: 5 9) -> 5 * 9 = 45 (left: 45)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 - 3 = 5 (left: 5 9) -> 5 * 9 = 45 (left: 45) -> No possible next steps with just one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "8 3 9"
                }
            },
            "Step 4": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 / 3 = 2.67 (left: 2.67 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 9 - 2.67 = 6.33 (left: 6.33)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 9 - 2.67 = 6.33 (left: 6.33) -> 6.33 * 2 = 12.66",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "8 9"
                }
            },
            "Step 7": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> Input: 4 -> 4 + 4 = 8 -> 1 + 8 = 9 (left: 8 9) -> 8 / 9 = 0.8888888888888888 (left: 0.8888888888888888)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "6.33 * 2 = 12.66"
                }
            },
            "Step 8": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 9 - 2.67 = 6.33 (left: 6.33) -> 6.33 * 2 = 12.66 -> ",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "8 9"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 1 3 9)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "8 3 9"
                }
            },
            "Step 1": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 / 3 = 2.67 (left: 2.67 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 2.67 + 9 = 11.67 (left: 11.67)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 2.67 + 9 = 11.67 (left: 11.67) -> There are no possible next steps for the input 11.67 as it is a single number and not an expression with operators.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "8 3 9"
                }
            },
            "Step 4": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 + 3 = 11 (left: 11 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 + 3 = 11 (left: 11 9) -> 11 + 9 = 20 (left: 20)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 + 3 = 11 (left: 11 9) -> 11 + 9 = 20 (left: 20) -> There are no possible next steps with the input of 20 as it is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "8 9"
                }
            },
            "Step 7": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> Input: 4 -> 4 + 4 = 8 -> 1 + 8 = 9 (left: 8 9) -> 8 / 9 = 0.8888888888888888 (left: 0.8888888888888888)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "6.33 * 2 = 12.66"
                }
            },
            "Step 8": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 9 - 2.67 = 6.33 (left: 6.33) -> 6.33 * 2 = 12.66 -> 2 * 6.33 = ",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "3 * 9 = 27 (left: 1 9 27)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "8 3 9"
                }
            },
            "Step 1": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 + 3 = 11 (left: 11 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 + 3 = 11 (left: 11 9) -> 11 / 9 = 1.2222 (left: 1.2222)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 + 3 = 11 (left: 11 9) -> 11 / 9 = 1.2222 (left: 1.2222) -> 1.2222 * 2 = 2.4444",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "8 3 9"
                }
            },
            "Step 4": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 * 3 = 24 (left: 24 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 * 3 = 24 (left: 24 9) -> 24 + 9 = 33 (left: 33)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 * 3 = 24 (left: 24 9) -> 24 + 9 = 33 (left: 33) -> 33 * 2 = 66",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "8 9"
                }
            },
            "Step 7": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> Input: 4 -> 4 + 4 = 8 -> 1 + 8 = 9 (left: 8 9) -> 8 * 9 = 72 (left: 72)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "33 * 2 = 66"
                }
            },
            "Step 8": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 * 3 = 24 (left: 24 9) -> 24 + 9 = 33 (left: 33) -> 33 * 2 = 66 -> 33 - 2 = 31 (left: 31 66)",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 1 9 9)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 3 9"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 1 / 3 = 0.3333333333333333",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 1 / 3 = 0.3333333333333333 -> 3 - 1 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 1 / 3 = 0.3333333333333333 -> 3 - 1 = 2 (left: 2) -> 2 / 2 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "8 3 9"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "8 3 9"
                }
            },
            "Step 4": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 3 + 9 = 12 (left: 8 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 3 + 9 = 12 (left: 8 12) -> 8 - 12 = -4 (left: -4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 3 + 9 = 12 (left: 8 12) -> 8 - 12 = -4 (left: -4) -> There are no possible next steps with the input -4.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "8 9"
                }
            },
            "Step 7": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> Input: 4 -> 4 + 4 = 8 -> 1 + 8 = 9 (left: 8 9) -> 8 + 9 = 17 (left: 17)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "There are no possible next steps for the given input."
                }
            },
            "Step 8": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> Possible next steps: -> There are no possible next steps for the given input. -> There are no possible next steps for the given input. -> None",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "There are no possible next steps for the input 11.67 as it is a single number and not an expression with operators."
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "9 - 1 = 8 (left: 8 3 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 3 9"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 3 - 1 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 3 - 1 = 2 (left: 2) -> There are no possible next steps with only one number provided.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 3 - 1 = 2 (left: 2) -> There are no possible next steps with only one number provided. -> Provide at least two numbers to perform operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "8 3 9"
                }
            },
            "Step 4": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 / 3 = 2.67 (left: 2.67 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 2.67 + 9 = 11.67 (left: 9 11.67)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 2.67 + 9 = 11.67 (left: 9 11.67) -> 9 / 11.67 = 0.77 (left: 0.77)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "There are no possible next steps for the input 11.67 as it is a single number and not an expression with operators."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "8 9"
                }
            },
            "Step 7": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> Input: 4 -> 4 + 4 = 8 -> 1 + 8 = 9 (left: 8 9) -> 8 + 9 = 17 (left: 17)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "Provide at least two numbers to perform operations."
                }
            },
            "Step 8": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 3 - 1 = 2 (left: 2) -> There are no possible next steps with only one number provided. -> Provide at least two numbers to perform operations. -> 10 - 3 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "There are no possible next steps for 1.8 as it is a single number and not a mathematical expression."
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "9 - 3 = 6 (left: 1 6 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 3 9"
                }
            },
            "Step 1": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 - 3 = 5 (left: 5 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 - 3 = 5 (left: 5 9) -> 9 / 5 = 1.8 (left: 1.8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 - 3 = 5 (left: 5 9) -> 9 / 5 = 1.8 (left: 1.8) -> There are no possible next steps for 1.8 as it is a single number and not a mathematical expression.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "8 3 9"
                }
            },
            "Step 4": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 - 3 = 5 (left: 5 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 - 3 = 5 (left: 5 9) -> 5 * 9 = 45 (left: 45)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 - 3 = 5 (left: 5 9) -> 5 * 9 = 45 (left: 45) -> 45 + 2 = 47",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "8 9"
                }
            },
            "Step 7": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> Input: 4 -> 4 + 4 = 8 -> 1 + 8 = 9 (left: 8 9) -> 8 + 9 = 17 (left: 17)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "There are no possible next steps with the input -4."
                }
            },
            "Step 8": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 3 + 9 = 12 (left: 8 12) -> 8 - 12 = -4 (left: -4) -> There are no possible next steps with the input -4. -> There are no possible next steps with the input -4.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "9 - 3 = 6 (left: 1 6 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 3 9"
                }
            },
            "Step 1": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 9 / 3 = 3 (left: 3 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 9 / 3 = 3 (left: 3 9) -> Input: 4 16",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 9 / 3 = 3 (left: 3 9) -> Input: 4 16 -> 4 + 16 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "1 6 9"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "8 3 9"
                }
            },
            "Step 4": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 9 + 8 = 17 (left: 8 17)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 9 + 8 = 17 (left: 8 17) -> 8 - 17 = -9 (left: -9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 9 + 8 = 17 (left: 8 17) -> 8 - 17 = -9 (left: -9) -> There are no valid operations that can be performed on the numbers given to result in -9.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "8 9"
                }
            },
            "Step 7": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> Input: 4 -> 4 + 4 = 8 -> 1 + 8 = 9 (left: 8 9) -> 8 / 9 = 0.8888888888888888 (left: 0.8888888888888888)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "6.33 * 2 = 12.66"
                }
            },
            "Step 8": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 9 - 2.67 = 6.33 (left: 6.33) -> 6.33 * 2 = 12.66 -> 6.33 / 2 = 3.165 (left: 3.165 12.66)",
                "Pruning": null
            }
        },
        "Input": "1 3 9 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "946": {
        "puzzle": "1 4 4 11",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 4 = 5 (left: 4 5 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 4 12"
                }
            },
            "Step 1": {
                "Step": "11 + 1 = 12 (left: 4 4 12) -> 12 / 4 = 3 (left: 3 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 + 1 = 12 (left: 4 4 12) -> 12 / 4 = 3 (left: 3 4) -> 3 * 4 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 + 1 = 12 (left: 4 4 12) -> 12 / 4 = 3 (left: 3 4) -> 3 * 4 = 12 (left: 12) -> 12 / 2 = 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "12 12"
                }
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 4 / 5 = 0.8 ( -> 3 + 9 = 12 (left: 5 7 12) -> 5 + 7 = 12 (left: 12 12) -> 12 - 12 = 0 (left: 0) ",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "4 5 11"
                }
            },
            "Step 5": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 4 + 5 = 9 (left: 9 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 4 + 5 = 9 (left: 9 11) -> 9 + 11 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "0.8 11"
                }
            },
            "Step 7": {
                "Step": "4 + 1 = 5 (left: 5 4 11) -> 4 / 5 = 0.8 (left: 0.8 11) -> 0.8 - 11 = -10.2 (left: -10.2)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 1 = 5 (left: 5 4 11) -> 4 / 5 = 0.8 (left: 0.8 11) -> 0.8 - 11 = -10.2 (left: -10.2) -> There are no possible next steps with the input of -10.2 as it is a single number and not a series of operations like the previous example.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 1 4 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 5 11"
                }
            },
            "Step 1": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 4 + 6 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 4 + 6 = 10 (left: 10) -> 10 * 2 = 20",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "5 4 11"
                }
            },
            "Step 4": {
                "Step": "4 + 1 = 5 (left: 5 4 11) -> Possible next steps",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 + 1 = 5 (left: 5 4 11) -> Possible next steps -> 8 / 2 = 4 (left: 4 8 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 1 = 5 (left: 5 4 11) -> Possible next steps -> 8 / 2 = 4 (left: 4 8 14) -> 8 / 4 = 2 (left: 2 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "0.8 11"
                }
            },
            "Step 7": {
                "Step": "4 + 1 = 5 (left: 5 4 11) -> 4 / 5 = 0.8 (left: 0.8 11) -> 11 / 0.8 = 13.75 (left: 13.75)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 1 = 5 (left: 5 4 11) -> 4 / 5 = 0.8 (left: 0.8 11) -> 11 / 0.8 = 13.75 (left: 13.75) -> There is only one number given, so there are no possible next steps in this case.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 + 4 = 5 (left: 4 5 11)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 5 11"
                }
            },
            "Step 1": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 4 / 5 = 0.8 (",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 4 / 5 = 0.8 ( -> 3 + 9 = 12 (left: 5 7 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 4 / 5 = 0.8 ( -> 3 + 9 = 12 (left: 5 7 12) -> 5 + 7 = 12 (left: 12 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "5 4 11"
                }
            },
            "Step 4": {
                "Step": "4 + 1 = 5 (left: 5 4 11) -> 5 * 11 = 55 (left: 55)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 + 1 = 5 (left: 5 4 11) -> 5 * 11 = 55 (left: 55) -> There are no possible next steps with just the number 55.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 1 = 5 (left: 5 4 11) -> 5 * 11 = 55 (left: 55) -> There are no possible next steps with just the number 55. -> There are no possible next steps with just the number 55.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "0.8 11"
                }
            },
            "Step 7": {
                "Step": "4 + 1 = 5 (left: 5 4 11) -> 4 / 5 = 0.8 (left: 0.8 11) -> 0.8 + 11 = 11.8 (left: 11.8)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 1 = 5 (left: 5 4 11) -> 4 / 5 = 0.8 (left: 0.8 11) -> 0.8 + 11 = 11.8 (left: 11.8) -> There are no possible next steps with the input 11.8.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 * 1 = 4 (left: 4 4 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 4 12"
                }
            },
            "Step 1": {
                "Step": "11 + 1 = 12 (left: 4 4 12) -> 12 - 4 = 8 (left: 4 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 + 1 = 12 (left: 4 4 12) -> 12 - 4 = 8 (left: 4 8) -> 4 + 8 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 + 1 = 12 (left: 4 4 12) -> 12 - 4 = 8 (left: 4 8) -> 4 + 8 = 12 (left: 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "5 4 11"
                },
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "12 12"
                }
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 4 / 5 = 0.8 ( -> 3 + 9 = 12 (left: 5 7 12) -> 5 + 7 = 12 (left: 12 12) -> 12 - 12 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": ""
                }
            },
            "Step 5": {
                "Step": " -> It seems like you did not provide an input to work with. Please provide a set of numbers to continue the calculation.",
                "Pruning": null
            },
            "Step 6": {
                "Step": " -> It seems like you did not provide an input to work with. Please provide a set of numbers to continue the calculation. -> 5 * 10 = 50 (left: 15 50 20)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "0.8 11"
                }
            },
            "Step 7": {
                "Step": "4 + 1 = 5 (left: 5 4 11) -> 4 / 5 = 0.8 (left: 0.8 11) -> 0.8 / 11 = 0.07272727272727272 (left: 0.07272727272727272)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 1 = 5 (left: 5 4 11) -> 4 / 5 = 0.8 (left: 0.8 11) -> 0.8 / 11 = 0.07272727272727272 (left: 0.07272727272727272) -> 0.07272727272727272 * 2 = 0.14545454545454544",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 + 4 = 5 (left: 4 5 11)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 5 11"
                }
            },
            "Step 1": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 5 + 11 = 16 (left: 4 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 5 + 11 = 16 (left: 4 16) -> 16 - ",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 5 + 11 = 16 (left: 4 16) -> 16 -  -> 16 - 2 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "4 4 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "5 4 11"
                }
            },
            "Step 4": {
                "Step": "4 + 1 = 5 (left: 5 4 11) -> 5 - 4 = 1 (left: 1 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 + 1 = 5 (left: 5 4 11) -> 5 - 4 = 1 (left: 1 11) -> 11 - 1 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 1 = 5 (left: 5 4 11) -> 5 - 4 = 1 (left: 1 11) -> 11 - 1 = 10 (left: 10) -> 10 * 10 = 100",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "0.8 11"
                }
            },
            "Step 7": {
                "Step": "4 + 1 = 5 (left: 5 4 11) -> 4 / 5 = 0.8 (left: 0.8 11) -> 11 - 0.8 = 10.2 (left: 10.2)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 1 = 5 (left: 5 4 11) -> 4 / 5 = 0.8 (left: 0.8 11) -> 11 - 0.8 = 10.2 (left: 10.2) -> 10 * 2 = 20.4 (left: 2 20.4)",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "4 + 1 = 5 (left: 5 4 11)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 4 11"
                }
            },
            "Step 1": {
                "Step": "4 + 1 = 5 (left: 5 4 11) -> 11 - 4 = 7 (left: 5 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 1 = 5 (left: 5 4 11) -> 11 - 4 = 7 (left: 5 7) -> 7 * 5 = 35 (",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 1 = 5 (left: 5 4 11) -> 11 - 4 = 7 (left: 5 7) -> 7 * 5 = 35 ( -> 5 + 7 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "5 4 11"
                },
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "12 12"
                }
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 4 / 5 = 0.8 ( -> 3 + 9 = 12 (left: 5 7 12) -> 5 + 7 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "8 * 4 = 32 (left:"
                }
            },
            "Step 5": {
                "Step": "11 + 1 = 12 (left: 4 4 12) -> Input: 8 3 4 8 -> 8 - 4 = 4 (left: 4 8 8) -> 8 * 4 = 32 (left: -> 8 + 4 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "5 4 11"
                }
            },
            "Step 6": {
                "Step": "4 + 1 = 5 (left: 5 4 11) -> 4 / 5 = 0.8 (left: 0.8 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "15 50 20"
                }
            },
            "Step 7": {
                "Step": " -> It seems like you did not provide an input to work with. Please provide a set of numbers to continue the calculation. -> 5 * 10 = 50 (left: 15 50 20) -> 20 + 15 = 35 (left: 50 35)",
                "Pruning": null
            },
            "Step 8": {
                "Step": " -> It seems like you did not provide an input to work with. Please provide a set of numbers to continue the calculation. -> 5 * 10 = 50 (left: 15 50 20) -> 20 + 15 = 35 (left: 50 35) -> 50 * 35 = 1750 (left: 1750)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "2 14"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "11 + 1 = 12 (left: 4 4 12)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 4 10"
                }
            },
            "Step 1": {
                "Step": "11 - 1 = 10 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 1 = 10 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 1 = 10 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - (11 - 1)) = 24",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "4 5 11"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "12 12"
                }
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 4 / 5 = 0.8 ( -> 3 + 9 = 12 (left: 5 7 12) -> 5 + 7 = 12 (left: 12 12) -> 12 / 12 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "4 5 11"
                }
            },
            "Step 5": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 / 4 = 2.75 (left: 2.75 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 / 4 = 2.75 (left: 2.75 11) -> 2.75 * 11 = 30.25 (left: 30.25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "15 50 20"
                }
            },
            "Step 7": {
                "Step": " -> It seems like you did not provide an input to work with. Please provide a set of numbers to continue the calculation. -> 5 * 10 = 50 (left: 15 50 20) -> 50 - 15 = 35 (left: 35 20)",
                "Pruning": null
            },
            "Step 8": {
                "Step": " -> It seems like you did not provide an input to work with. Please provide a set of numbers to continue the calculation. -> 5 * 10 = 50 (left: 15 50 20) -> 50 - 15 = 35 (left: 35 20) -> 35 + 20 = 55 (left: 55)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "12 / 2 = 6"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "11 - 1 = 10 (left: 4 4 10)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 5 11"
                }
            },
            "Step 1": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 4 / 5 = 0.8 (",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 4 / 5 = 0.8 ( -> 4 + 5 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 4 / 5 = 0.8 ( -> 4 + 5 = 9 (left: 9) -> 9 - 9 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "4 4 12"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "12 12"
                }
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 4 / 5 = 0.8 ( -> 3 + 9 = 12 (left: 5 7 12) -> 5 + 7 = 12 (left: 12 12) -> 12 + 12 = 24",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 4 / 5 = 0.8 ( -> 3 + 9 = 12 (left: 5 7 12) -> 5 + 7 = 12 (left: 12 12) -> 12 + 12 = 24 -> 12 * 12 = 144 (left: 144 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 4 / 5 = 0.8 ( -> 3 + 9 = 12 (left: 5 7 12) -> 5 + 7 = 12 (left: 12 12) -> 12 + 12 = 24 -> 12 * 12 = 144 (left: 144 24) -> 144 / 24 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "8 * 4 = 32 (left:"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "0.8 11"
                }
            },
            "Step 7": {
                "Step": "4 + 1 = 5 (left: 5 4 11) -> 4 / 5 = 0.8 (left: 0.8 11) -> 0.8 + 11 = 11.8 (left: 11.8)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 1 = 5 (left: 5 4 11) -> 4 / 5 = 0.8 (left: 0.8 11) -> 0.8 + 11 = 11.8 (left: 11.8) -> There are no mathematical operations that can be performed with the number 11.8 to get closer to the target number of 24.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "11 + 1 = 12 (left: 4 4 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 4 10"
                }
            },
            "Step 1": {
                "Step": "11 - 1 = 10 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 1 = 10 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 1 = 10 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - (11 - 1)) = 24",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "4 4 11"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "4 4 10"
                }
            },
            "Step 4": {
                "Step": "11 - 1 = 10 (left: 4 4 10) -> 4 + 4 = 8 (left: 8 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 1 = 10 (left: 4 4 10) -> 4 + 4 = 8 (left: 8 10) -> 8 / 10 = 0.8 (left: 0.8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 1 = 10 (left: 4 4 10) -> 4 + 4 = 8 (left: 8 10) -> 8 / 10 = 0.8 (left: 0.8) -> 0.8 + 2 = 2.8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "0.8 11"
                }
            },
            "Step 7": {
                "Step": "4 + 1 = 5 (left: 5 4 11) -> 4 / 5 = 0.8 (left: 0.8 11) -> 11 - 0.8 = 10.2 (left: 10.2)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 1 = 5 (left: 5 4 11) -> 4 / 5 = 0.8 (left: 0.8 11) -> 11 - 0.8 = 10.2 (left: 10.2) -> There are no possible next steps with the input 10.2 as it is already a single number.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 4 12"
                }
            },
            "Step 1": {
                "Step": "11 + 1 = 12 (left: 4 4 12) -> Input: 8 3 4 8",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 + 1 = 12 (left: 4 4 12) -> Input: 8 3 4 8 -> 8 - 4 = 4 (left: 4 8 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 + 1 = 12 (left: 4 4 12) -> Input: 8 3 4 8 -> 8 - 4 = 4 (left: 4 8 8) -> 8 * 4 = 32 (left:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "12 12"
                }
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 4 / 5 = 0.8 ( -> 3 + 9 = 12 (left: 5 7 12) -> 5 + 7 = 12 (left: 12 12) -> 12 / 12 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "4 4 12"
                }
            },
            "Step 5": {
                "Step": "11 + 1 = 12 (left: 4 4 12) -> 4 * 4 = 16 (left: 16 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 + 1 = 12 (left: 4 4 12) -> 4 * 4 = 16 (left: 16 12) -> 16 / 12 = 1.3333 (left: 1.3333)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "0.8 11"
                }
            },
            "Step 7": {
                "Step": "4 + 1 = 5 (left: 5 4 11) -> 4 / 5 = 0.8 (left: 0.8 11) -> 11 - 0.8 = 10.2 (left: 10.2)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 1 = 5 (left: 5 4 11) -> 4 / 5 = 0.8 (left: 0.8 11) -> 11 - 0.8 = 10.2 (left: 10.2) -> 10 / 2 = 5.1 (left: 5.1)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "There are no possible next steps with just the number 55."
                }
            }
        },
        "Input": "1 4 4 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "947": {
        "puzzle": "2 3 9 10",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 9 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "5 9 10"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 9 * 5 = 45 (left: 10 45)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 9 * 5 = 45 (left: 10 45) -> 10 * 45 = 450 (left: 450)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 9 * 5 = 45 (left: 10 45) -> 10 * 45 = 450 (left: 450) -> 450 / 5 = 90 (left: 90)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "5 9 10"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 4": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 3 + 8 = 11 (left: 8 9 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 3 + 8 = 11 (left: 8 9 11) -> 11 - 9 = 2 (",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 3 + 8 = 11 (left: 8 9 11) -> 11 - 9 = 2 ( -> 11 / 9 = 1.2222 (left: 1.2222)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "0.7272727272727273 * 2 = 1.4545454545454546"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "There are no possible next steps with the input 18."
                }
            },
            "Step 7": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> Input: 3 6 -> 3 * 6 = 18 (left: 18) -> There are no possible next steps with the input 18. -> None",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "There are no possible next steps with the input 18."
                }
            },
            "Step 8": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> Input: 3 6 -> 3 * 6 = 18 (left: 18) -> There are no possible next steps with the input 18. -> There are no possible next steps with the input 18.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 - 2 = 8 (left: 3 8 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 8 "
                }
            },
            "Step 1": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 3 - 8 = -5 (left: -5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 3 - 8 = -5 (left: -5) -> There are no possible next steps with the input of -5.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 3 - 8 = -5 (left: -5) -> There are no possible next steps with the input of -5. -> There are no possible next steps with the input of -5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "5 9 10"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 5 * 9 = 45 (left: 10 45)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 5 * 9 = 45 (left: 10 45) -> 10 - 45 = -35 (left: -35)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 5 * 9 = 45 (left: 10 45) -> 10 - 45 = -35 (left: -35) -> -35 * 2 = -70 (left: 2)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "There are no possible next steps with the input 18."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "15 / 5 = 3 (left:"
                }
            },
            "Step 7": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 9) -> Input: 5 10 15 -> 15 / 5 = 3 (left: -> 15 + 5 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "There are no possible next steps with the input of -5."
                }
            },
            "Step 8": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 3 - 8 = -5 (left: -5) -> There are no possible next steps with the input of -5. -> There are no possible next steps with the input of -5. -> There are no possible next steps with the input of -5.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 - 3 = 6 (left: 2 6 ",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 "
                }
            },
            "Step 1": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 3 + 8 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 3 + 8 = 11 (left: 11) -> There are no possible next steps.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 3 + 8 = 11 (left: 11) -> There are no possible next steps. -> There are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 4": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 9 / 3 = ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 9 / 3 =  -> 3 (left: 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 9 / 3 =  -> 3 (left: 3) -> 8 / 3 = 2.6666666666666665 (left: 2.6666666666666665)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "0.7272727272727273 * 2 = 1.4545454545454546"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no possible next steps with the input 18."
                }
            },
            "Step 7": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> Input: 3 6 -> 3 * 6 = 18 (left: 18) -> There are no possible next steps with the input 18. -> None",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "15 / 5 = 3 (left:"
                }
            },
            "Step 8": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 9) -> Input: 5 10 15 -> 15 / 5 = 3 (left: -> 15 - 3 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "There are no possible next steps with the given input of -5."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 3 = 6 (left: 2 6 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 1": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 8 / 3 = 2.67 (left: 2.67 8 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 8 / 3 = 2.67 (left: 2.67 8 9) -> 9 + 2.67 = 11.67 (left: 8 11.67)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 8 / 3 = 2.67 (left: 2.67 8 9) -> 9 + 2.67 = 11.67 (left: 8 11.67) -> 8 / 11.67 = 0.68 (left: 0.68)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "3 8 9"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "5 9 10"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 5 + 9 = 14 (left: 10 14)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 5 + 9 = 14 (left: 10 14) -> 14 / 10 = 1.4 (left: 1.4 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 5 + 9 = 14 (left: 10 14) -> 14 / 10 = 1.4 (left: 1.4 14) -> 1.4 + 14 = 15.4 (left: 15.4)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "-40 * 2 = -80"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "-40 * 2 = -80"
                }
            },
            "Step 7": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 5 - 9 = -4 (left: -4 10) -> -4 * 10 = -40 (left: -40) -> -40 * 2 = -80 -> 2 * -40 = -80 (left: -80 -80)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 5 - 9 = -4 (left: -4 10) -> -4 * 10 = -40 (left: -40) -> -40 * 2 = -80 -> 2 * -40 = -80 (left: -80 -80) -> -80 * -80 = 6400 (left: 6400)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "0.7272727272727273 * 2 = 1.4545454545454546"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "10 - 2 = 8 (left: 3 8 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 1": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 3 + 8 = 11 (left: 9 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 3 + 8 = 11 (left: 9 11) -> 11 - 9 = 2 (left: 2 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 3 + 8 = 11 (left: 9 11) -> 11 - 9 = 2 (left: 2 11) -> 11 - 2 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "3 9 8"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "5 9 10"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 9 + 10 = 19 (left: 5 19)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 9 + 10 = 19 (left: 5 19) -> 5 * 19 = 95 (left: 95)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 9 + 10 = 19 (left: 5 19) -> 5 * 19 = 95 (left: 95) -> There is only one number given as input, so there are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no possible next steps with the input 18."
                }
            },
            "Step 7": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> Input: 3 6 -> 3 * 6 = 18 (left: 18) -> There are no possible next steps with the input 18. -> There are no possible next steps with the input 18.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> Input: 3 6 -> 3 * 6 = 18 (left: 18) -> There are no possible next steps with the input 18. -> There are no possible next steps with the input 18. -> None",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "There are no possible next steps with the input 18."
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "9 + 2 = 11 (left: 3 11 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 "
                }
            },
            "Step 1": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 3 + 8 = 11 (left: 8 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 3 + 8 = 11 (left: 8 11) -> 8 / 11 = 0.7272727272727273 (left: 0.7272727272727273)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 3 + 8 = 11 (left: 8 11) -> 8 / 11 = 0.7272727272727273 (left: 0.7272727272727273) -> 0.7272727272727273 * 2 = 1.4545454545454546",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "3 8 "
                }
            },
            "Step 4": {
                "Step": "10 - 2 = 8 (left: 3 8  -> Input: 10 5",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 2 = 8 (left: 3 8  -> Input: 10 5 -> 5 - 10 = -5 (left: -5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 2 = 8 (left: 3 8  -> Input: 10 5 -> 5 - 10 = -5 (left: -5) -> There are no possible next steps with the given input of -5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "There is only one number given as input, so there are no possible next steps."
                }
            },
            "Step 7": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 9 + 10 = 19 (left: 5 19) -> 5 * 19 = 95 (left: 95) -> There is only one number given as input, so there are no possible next steps. -> No possible next steps as there is only one number given as input.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 9 + 10 = 19 (left: 5 19) -> 5 * 19 = 95 (left: 95) -> There is only one number given as input, so there are no possible next steps. -> No possible next steps as there is only one number given as input. -> No possible next steps as there is only one number given as input.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "9 + 2 = 11 (left: 3 11 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 9 10"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 9 - 5 = 4 (left: 4 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 9 - 5 = 4 (left: 4 10) -> 4 * 10 = 40 (left: 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 9 - 5 = 4 (left: 4 10) -> 4 * 10 = 40 (left: 10) -> 10 * 8 = 80 (left: 8)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "3 11 10"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 4": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 3 + 8 = 11 (left: 9 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 3 + 8 = 11 (left: 9 11) -> 9 * 11 = 99 (left: 99)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 3 + 8 = 11 (left: 9 11) -> 9 * 11 = 99 (left: 99) -> 99 + 2 = 101 (left: 101)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "There are no possible next steps with the input 18."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "There are no possible next steps with the given input of -5."
                }
            },
            "Step 7": {
                "Step": "10 - 2 = 8 (left: 3 8  -> Input: 10 5 -> 5 - 10 = -5 (left: -5) -> There are no possible next steps with the given input of -5. -> There are no possible next steps with the given input of -5.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 2 = 8 (left: 3 8  -> Input: 10 5 -> 5 - 10 = -5 (left: -5) -> There are no possible next steps with the given input of -5. -> There are no possible next steps with the given input of -5. -> There are no possible next steps with the given input of -5.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "10 - 2 = 8 (left: 3 9 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "5 9 10"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> Input: 3 6",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> Input: 3 6 -> 3 * 6 = 18 (left: 18)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> Input: 3 6 -> 3 * 6 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 4": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 9) -> Input: 5 10 15",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 9) -> Input: 5 10 15 -> 15 / 5 = 3 (left:",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "There are no possible next steps with the input of -5."
                }
            },
            "Step 7": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 3 - 8 = -5 (left: -5) -> There are no possible next steps with the input of -5. -> There are no possible next steps with the input of -5. -> There are no possible next steps with the input of -5.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 3 - 8 = -5 (left: -5) -> There are no possible next steps with the input of -5. -> There are no possible next steps with the input of -5. -> There are no possible next steps with the input of -5. -> There are no possible next steps with the input of -5.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "10 - 2 = 8 (left: 3 8 ",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 9 10"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 5 + 9 = 14 (left: 10 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 5 + 9 = 14 (left: 10 14) -> 10 * 14 = 140 (left: 140)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 5 + 9 = 14 (left: 10 14) -> 10 * 14 = 140 (left: 140) -> 40 / 1 = 40 (left: 40)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "3 8 "
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 4": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 9 - 8 = ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 9 - 8 =  -> 9 - 8 = 1",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 9 - 8 =  -> 9 - 8 = 1 -> 9 + 8 = 17 (left: 17)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "There are no possible next steps with the input 18."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "There are no possible next steps with the given input of -5."
                }
            },
            "Step 7": {
                "Step": "10 - 2 = 8 (left: 3 8  -> Input: 10 5 -> 5 - 10 = -5 (left: -5) -> There are no possible next steps with the given input of -5. -> There are no possible next steps with the given input of -5.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 2 = 8 (left: 3 8  -> Input: 10 5 -> 5 - 10 = -5 (left: -5) -> There are no possible next steps with the given input of -5. -> There are no possible next steps with the given input of -5. -> There are no possible next steps with the given input of -5.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 9 10)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 9 10"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 5 - 9 = -4 (left: -4 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 5 - 9 = -4 (left: -4 10) -> -4 * 10 = -40 (left: -40)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 5 - 9 = -4 (left: -4 10) -> -4 * 10 = -40 (left: -40) -> -40 * 2 = -80",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 4": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 9 + 3 = 12 (left: 8 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 9 + 3 = 12 (left: 8 12) -> 8 + 12 = 20 (left: 20)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 9 + 3 = 12 (left: 8 12) -> 8 + 12 = 20 (left: 20) -> 20 * 2 = 40 (left: 40)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "There are no possible next steps with the input of -5."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no possible next steps with the input 18."
                }
            },
            "Step 7": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> Input: 3 6 -> 3 * 6 = 18 (left: 18) -> There are no possible next steps with the input 18. -> There are no possible next steps with the input 18.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> Input: 3 6 -> 3 * 6 = 18 (left: 18) -> There are no possible next steps with the input 18. -> There are no possible next steps with the input 18. -> There are no possible next steps with the input 18.",
                "Pruning": null
            }
        },
        "Input": "2 3 9 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "948": {
        "puzzle": "1 2 3 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 3 = 10 (left: 1 2 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "2 3 12"
                }
            },
            "Step 1": {
                "Step": "13 - 1 = 12 (left: 2 3 12) -> 3 * 2 = 6 (left: 6 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 1 = 12 (left: 2 3 12) -> 3 * 2 = 6 (left: 6 12) -> 6 * 12 = 72 (left: 72)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 1 = 12 (left: 2 3 12) -> 3 * 2 = 6 (left: 6 12) -> 6 * 12 = 72 (left: 72) -> 72 / 8 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "3 3 13"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "3 3 13"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> Input: 4 5 10",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> Input: 4 5 10 -> 10 / 5 = 2 (left: 4 2 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> Input: 4 5 10 -> 10 / 5 = 2 (left: 4 2 10) -> 10 - 4 = 6 (left: 2 6)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "1 8"
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 3 + 3 = 6 (left: 6 13) -> 13 - 6 = 7 (left: 7) -> 8 - 7 = 1 (left: 1 8) -> 8 - 1 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "There is only one possible next step which is to subtract 8 from 17: 17 - 8 = 9."
                }
            },
            "Step 8": {
                "Step": "13 - 1 = 12 (left: 2 3 12) -> 3 + 12 = 15 (left: 2 15) -> 2 + 15 = 17 (left: 17) -> There is only one possible next step which is to subtract 8 from 17: 17 - 8 = 9. -> 17 - 8 = 9",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 + 13 = 16 (left: 1 2 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 3 13"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 / 3 = 4 (left: 4 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 / 3 = 4 (left: 4 3) -> 4 + 3 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 / 3 = 4 (left: 4 3) -> 4 + 3 = 7 (left: 7) -> 7 + 8 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "3 3 13"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "3 3 13"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 3 + 3 = 6 (left: 6 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 3 + 3 = 6 (left: 6 13) -> 6 + 13 = 19 (left: 19)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 3 + 3 = 6 (left: 6 13) -> 6 + 13 = 19 (left: 19) -> 19 + 2 = 21",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "1 8"
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 3 + 3 = 6 (left: 6 13) -> 13 - 6 = 7 (left: 7) -> 8 - 7 = 1 (left: 1 8) -> 1 * 8 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "There are no possible next steps as the input is a single number."
                }
            },
            "Step 8": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 6 * 1 = 6 (left: 6 13) -> 13 / 6 = 2.1667 (left: 2.1667) -> There are no possible next steps as the input is a single number. -> N/A",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "There is only one possible next step which is to subtract 8 from 17: 17 - 8 = 9."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 3 13)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "2 3 12"
                }
            },
            "Step 1": {
                "Step": "13 - 1 = 12 (left: 2 3 12) -> 3 + 12 = 15 (left: 2 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 1 = 12 (left: 2 3 12) -> 3 + 12 = 15 (left: 2 15) -> 2 + 15 = 17 (left: 17)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 1 = 12 (left: 2 3 12) -> 3 + 12 = 15 (left: 2 15) -> 2 + 15 = 17 (left: 17) -> There is only one possible next step which is to subtract 8 from 17: 17 - 8 = 9.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "3 3 13"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 3 * 3 = 9 (left: 9 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 3 * 3 = 9 (left: 9 13) -> 13 - 9 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 3 * 3 = 9 (left: 9 13) -> 13 - 9 = 4 (left: 4) -> There are no possible next steps with just the number 4.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "1 8"
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 3 + 3 = 6 (left: 6 13) -> 13 - 6 = 7 (left: 7) -> 8 - 7 = 1 (left: 1 8) -> 8 / 1 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "There are no possible next steps as the input is a single number."
                }
            },
            "Step 8": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 6 * 1 = 6 (left: 6 13) -> 13 / 6 = 2.1667 (left: 2.1667) -> There are no possible next steps as the input is a single number. -> There are no possible next steps as the input is a single number.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 2 3 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "2 3 12"
                }
            },
            "Step 1": {
                "Step": "13 - 1 = 12 (left: 2 3 12) -> 2 + 3 = 5 (left: 5 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 1 = 12 (left: 2 3 12) -> 2 + 3 = 5 (left: 5 12) -> 12 + 5 = 17 (left: 17)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 1 = 12 (left: 2 3 12) -> 2 + 3 = 5 (left: 5 12) -> 12 + 5 = 17 (left: 17) -> 17 / 2 = 8.5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "3 3 13"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 - 3 = 10 (left: 3 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 - 3 = 10 (left: 3 10) -> 3 - 10 = -7 (left: -7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 - 3 = 10 (left: 3 10) -> 3 - 10 = -7 (left: -7) -> -7 / 7 = -1 (left: -1)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "13 + 2 = 15"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "1 8"
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 3 + 3 = 6 (left: 6 13) -> 13 - 6 = 7 (left: 7) -> 8 - 7 = 1 (left: 1 8) -> 1 + 8 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "19 + 2 = 21"
                }
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 3 + 3 = 6 (left: 6 13) -> 6 + 13 = 19 (left: 19) -> 19 + 2 = 21 -> 19 + 8 = 27 (left: 2 27)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 * 2 = 6 (left: 1 6 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "1 3 11"
                }
            },
            "Step 1": {
                "Step": "13 - 2 = 11 (left: 1 3 11) -> 3 * 11 = 33 (left: 1 33)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 2 = 11 (left: 1 3 11) -> 3 * 11 = 33 (left: 1 33) -> 1 * 33 = 33 (left: 33)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 2 = 11 (left: 1 3 11) -> 3 * 11 = 33 (left: 1 33) -> 1 * 33 = 33 (left: 33) -> 33 + 2 = 35",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "1 2 10"
                }
            },
            "Step 4": {
                "Step": "13 - 3 = 10 (left: 1 2 10) -> 2 * 1 = 2 (left: 2 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 3 = 10 (left: 1 2 10) -> 2 * 1 = 2 (left: 2 10) -> 10 - 2 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 3 = 10 (left: 1 2 10) -> 2 * 1 = 2 (left: 2 10) -> 10 - 2 = 8 (left: 8) -> 8 * 8 = 64 (left: 64)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "There are no possible next steps as the input is a single number."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "1 8"
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 3 + 3 = 6 (left: 6 13) -> 13 - 6 = 7 (left: 7) -> 8 - 7 = 1 (left: 1 8) -> 1 + 8 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "2 6"
                }
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> Input: 4 5 10 -> 10 / 5 = 2 (left: 4 2 10) -> 10 - 4 = 6 (left: 2 6) -> 6 - 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "1 8"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 3 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 3 13"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 - 3 = 10 (left: 3 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 - 3 = 10 (left: 3 10) -> 3 + 10 = 13 (left: 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 - 3 = 10 (left: 3 10) -> 3 + 10 = 13 (left: 13) -> 13 + 2 = 15",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "3 3 13"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 3 + 3 = 6 (left: 6 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 3 + 3 = 6 (left: 6 13) -> 13 - 6 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 3 + 3 = 6 (left: 6 13) -> 13 - 6 = 7 (left: 7) -> 8 - 7 = 1 (left: 1 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "1 8"
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 3 + 3 = 6 (left: 6 13) -> 13 - 6 = 7 (left: 7) -> 8 - 7 = 1 (left: 1 8) -> 1 + 8 = 9 (left: 8 9)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 3 + 3 = 6 (left: 6 13) -> 13 - 6 = 7 (left: 7) -> 8 - 7 = 1 (left: 1 8) -> 1 + 8 = 9 (left: 8 9) -> 8 * 9 = 72 (left: 72)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "There are no possible next steps as the input is a single number."
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 3 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "2 3 12"
                }
            },
            "Step 1": {
                "Step": "13 - 1 = 12 (left: 2 3 12) -> 2 + 3 = 5 (left: 5 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 1 = 12 (left: 2 3 12) -> 2 + 3 = 5 (left: 5 12) -> 12 - 5 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 1 = 12 (left: 2 3 12) -> 2 + 3 = 5 (left: 5 12) -> 12 - 5 = 7 (left: 7) -> 7 + 8 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "3 3 13"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "3 3 13"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 - 3 = 10 (left: 3 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 - 3 = 10 (left: 3 10) -> 5",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 - 3 = 10 (left: 3 10) -> 5 -> 8 - 3 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "There are no possible next steps as the input is a single number."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "1 8"
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 3 + 3 = 6 (left: 6 13) -> 13 - 6 = 7 (left: 7) -> 8 - 7 = 1 (left: 1 8) -> 8 - 1 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "30 / 2 = 15"
                }
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 - 3 = 10 (left: 3 10) -> 3 * 10 = 30 (left: 30) -> 30 / 2 = 15 -> 2 * 30 = 60 (left: 60)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "19 + 2 = 21"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "13 - 2 = 11 (left: 1 3 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 3 13"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 - 3 = 10 (left: 3 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 - 3 = 10 (left: 3 10) -> 3 * 10 = 30 (left: 30)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 - 3 = 10 (left: 3 10) -> 3 * 10 = 30 (left: 30) -> 30 / 2 = 15",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "3 3 13"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 - 3 = 10 (left: 3 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 - 3 = 10 (left: 3 10) -> 3 + 10 = 13 (left: 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 - 3 = 10 (left: 3 10) -> 3 + 10 = 13 (left: 13) -> 13 / 8 = 1.625 (left: 1.625)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "There is only one possible next step which is to subtract 8 from 17: 17 - 8 = 9."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "1 8"
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 3 + 3 = 6 (left: 6 13) -> 13 - 6 = 7 (left: 7) -> 8 - 7 = 1 (left: 1 8) -> 8 / 1 = 8 (left: 1 8)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 3 + 3 = 6 (left: 6 13) -> 13 - 6 = 7 (left: 7) -> 8 - 7 = 1 (left: 1 8) -> 8 / 1 = 8 (left: 1 8) -> 8 - 1 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "There is only one possible next step which is to subtract 8 from 17: 17 - 8 = 9."
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "3 * 2 = 6 (left: 1 6 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "1 6 13"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 13 / 6 = 2.1666666666666665 (left: 1 2.1666666666666665)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 13 / 6 = 2.1666666666666665 (left: 1 2.1666666666666665) -> 1 + 2.1666666666666665 = 3.1666666666666665 (left: 2.1666666666666665 3.1666666666666665)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 13 / 6 = 2.1666666666666665 (left: 1 2.1666666666666665) -> 1 + 2.1666666666666665 = 3.1666666666666665 (left: 2.1666666666666665 3.1666666666666665) -> 2.1666666666666665 + 3.1666666666666665 = 5.333333333333333 (left: 5.333333333333333)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "1 2 10"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "3 3 13"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 3 + 3 = 6 (left: 6 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 3 + 3 = 6 (left: 6 13) -> 6 - 13 = -7 (left: -7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 3 + 3 = 6 (left: 6 13) -> 6 - 13 = -7 (left: -7) -> -7 * (-7) = 49 (left: 49)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "17 / 2 = 8.5"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "1 8"
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 3 + 3 = 6 (left: 6 13) -> 13 - 6 = 7 (left: 7) -> 8 - 7 = 1 (left: 1 8) -> 8 - 1 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "33 + 2 = 35"
                }
            },
            "Step 8": {
                "Step": "13 - 2 = 11 (left: 1 3 11) -> 3 * 11 = 33 (left: 1 33) -> 1 * 33 = 33 (left: 33) -> 33 + 2 = 35 -> 33 * 2 = 66 (left: 66 2 35)",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "3 * 2 = 6 (left: 1 6 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "1 6 13"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 6 * 1 = 6 (left: 6 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 6 * 1 = 6 (left: 6 13) -> 13 / 6 = 2.1667 (left: 2.1667)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 6 * 1 = 6 (left: 6 13) -> 13 / 6 = 2.1667 (left: 2.1667) -> There are no possible next steps as the input is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "1 2 10"
                }
            },
            "Step 4": {
                "Step": "13 - 3 = 10 (left: 1 2 10) -> 2 * 10 = 20 (left: 1 20)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 3 = 10 (left: 1 2 10) -> 2 * 10 = 20 (left: 1 20) -> 1 * 20 = 20 (left: 20 20)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 3 = 10 (left: 1 2 10) -> 2 * 10 = 20 (left: 1 20) -> 1 * 20 = 20 (left: 20 20) -> 20 / 20 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "There are no possible next steps as the input is a single number."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "1 8"
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 3 + 3 = 6 (left: 6 13) -> 13 - 6 = 7 (left: 7) -> 8 - 7 = 1 (left: 1 8) -> 8 / 1 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "There are no possible next steps with just the number 4."
                }
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 3 * 3 = 9 (left: 9 13) -> 13 - 9 = 4 (left: 4) -> There are no possible next steps with just the number 4. -> 4 + 4 = 8",
                "Pruning": null
            }
        },
        "Input": "1 2 3 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "949": {
        "puzzle": "1 6 6 6",
        "Agent 0": {
            "Step 0": {
                "Step": "6 - 1 = 5 (left: 5 6 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 1 = 5 (left: 5 6 6) -> Input: 3 4 9",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 1 = 5 (left: 5 6 6) -> Input: 3 4 9 -> 4 + 3 = 7 (left: 7 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 1 = 5 (left: 5 6 6) -> Input: 3 4 9 -> 4 + 3 = 7 (left: 7 9) -> 7 - 9 = -2 (left: -2)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "6 6 6"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 4": {
                "Step": "1 + 6 = 7 (left: 6 6 7) -> 6 + 6 = 12 (left: 7 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 + 6 = 7 (left: 6 6 7) -> 6 + 6 = 12 (left: 7 12) -> 7 - 12 = -5 (left: -5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 6 = 7 (left: 6 6 7) -> 6 + 6 = 12 (left: 7 12) -> 7 - 12 = -5 (left: -5) -> There are no possible next steps with the input of -5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "1.2 6 6"
                }
            },
            "Step 7": {
                "Step": "6 - 1 = 5 (left: 5 6 6) -> 6 / 5 = 1.2 (left: 1.2 6 6) -> 6 - 1.2 = 4.8 (left: 4.8 6)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 - 1 = 5 (left: 5 6 6) -> 6 / 5 = 1.2 (left: 1.2 6 6) -> 6 - 1.2 = 4.8 (left: 4.8 6) -> Input: -3 5",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 / 1 = 6 (left: 6 6 6)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 1": {
                "Step": "1 + 6 = 7 (left: 6 6 7) -> 7 + 6 = 13 (left: 6 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 6 = 7 (left: 6 6 7) -> 7 + 6 = 13 (left: 6 13) -> 6 - 13 = -7 (left: -7)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 6 = 7 (left: 6 6 7) -> 7 + 6 = 13 (left: 6 13) -> 6 - 13 = -7 (left: -7) -> There are no possible next steps with the input of -7.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "6 6 6"
                }
            },
            "Step 4": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0) -> There are no possible next steps as there is no input provided.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0) -> There are no possible next steps as there is no input provided. -> No input provided. Please provide numbers to calculate possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "1.2 6 6"
                }
            },
            "Step 7": {
                "Step": "6 - 1 = 5 (left: 5 6 6) -> 6 / 5 = 1.2 (left: 1.2 6 6) -> 1.2 + 6 = 7.2 (left: 6 7.2)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 - 1 = 5 (left: 5 6 6) -> 6 / 5 = 1.2 (left: 1.2 6 6) -> 1.2 + 6 = 7.2 (left: 6 7.2) -> 6 * 7.2 = 43.2 (left: 43.2)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "There are no possible next steps with the input of -7."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 + 6 = 7 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 6 6"
                }
            },
            "Step 1": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6) -> 0 * 6 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6) -> 0 * 6 = 0 (left: 0) -> There are no possible next steps with the input of 0.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "8 20"
                }
            },
            "Step 4": {
                "Step": "1 * 6 = 6 (left: 6 6 6) -> 6 * 6 = 36 (left: 6 36) -> 6 + 6 = 12 (left: 12) -> 12 + 8 = 20 (left: 8 20) -> 10 + 5 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "8 20"
                }
            },
            "Step 5": {
                "Step": "1 * 6 = 6 (left: 6 6 6) -> 6 * 6 = 36 (left: 6 36) -> 6 + 6 = 12 (left: 12) -> 12 + 8 = 20 (left: 8 20) -> 8 / 20 = 0.4 (left: 0.4)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "5 6 6"
                }
            },
            "Step 6": {
                "Step": "6 - 1 = 5 (left: 5 6 6) -> 6 / 5 = 1.2 (left: 1.2 6 6)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "1.2 6 6"
                }
            },
            "Step 7": {
                "Step": "6 - 1 = 5 (left: 5 6 6) -> 6 / 5 = 1.2 (left: 1.2 6 6) -> 1.2 * 6 = 7.2 (left: 7.2 6)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 - 1 = 5 (left: 5 6 6) -> 6 / 5 = 1.2 (left: 1.2 6 6) -> 1.2 * 6 = 7.2 (left: 7.2 6) -> 7.2 / 6 = 1.2 (left: 1.2 6)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "1 * 6 = 6 (left: 6 6 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 1 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 1 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 1 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7) -> 7 - 8 = -1 (left: -1 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "1 2"
                }
            },
            "Step 4": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 3 + 5 = 8 (left: 7 8) -> 8 - 7 = 1 (left: 1) -> 1 + 1 = 2 (left: 1 2) -> 1 * 2 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "6 6 6"
                }
            },
            "Step 5": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 + 6 = 12 (left: 6 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 + 6 = 12 (left: 6 12) -> 12 - 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "1.2 6 6"
                }
            },
            "Step 7": {
                "Step": "6 - 1 = 5 (left: 5 6 6) -> 6 / 5 = 1.2 (left: 1.2 6 6) -> 6 / 1.2 = 5 (left: 5 6)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 - 1 = 5 (left: 5 6 6) -> 6 / 5 = 1.2 (left: 1.2 6 6) -> 6 / 1.2 = 5 (left: 5 6) -> 5 + 6 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "0.5833 * 2 = 1.1666"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 1 = 7 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "6 6 6"
                }
            },
            "Step 1": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 / 6 = 1 (left: 1 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 / 6 = 1 (left: 1 6) -> 6 - 1 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 / 6 = 1 (left: 1 6) -> 6 - 1 = 5 (left: 5) -> There are no possible next steps with just one number input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 4": {
                "Step": "1 + 6 = 7 (left: 6 6 7) -> 6 + 6 = 12 (left: 7 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 + 6 = 7 (left: 6 6 7) -> 6 + 6 = 12 (left: 7 12) -> 7 / 12 = 0.5833 (left: 0.5833)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 6 = 7 (left: 6 6 7) -> 6 + 6 = 12 (left: 7 12) -> 7 / 12 = 0.5833 (left: 0.5833) -> 0.5833 * 2 = 1.1666",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "1.2 6 6"
                }
            },
            "Step 7": {
                "Step": "6 - 1 = 5 (left: 5 6 6) -> 6 / 5 = 1.2 (left: 1.2 6 6) -> 1.2 + 6 = 7.2 (left: 6 7.2)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 - 1 = 5 (left: 5 6 6) -> 6 / 5 = 1.2 (left: 1.2 6 6) -> 1.2 + 6 = 7.2 (left: 6 7.2) -> 6 / 7.2 = 0.8333333333333334 (left: 0.8333333333333334)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "There are no possible next steps with the input of -7."
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "6 / 1 = 6 (left: 6 6 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 6 6"
                }
            },
            "Step 1": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 3 + 5 = 8 (left: 7 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 3 + 5 = 8 (left: 7 8) -> 8 - 7 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 3 + 5 = 8 (left: 7 8) -> 8 - 7 = 1 (left: 1) -> 1 + 1 = 2 (left: 1 2)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "8 20"
                }
            },
            "Step 4": {
                "Step": "1 * 6 = 6 (left: 6 6 6) -> 6 * 6 = 36 (left: 6 36) -> 6 + 6 = 12 (left: 12) -> 12 + 8 = 20 (left: 8 20) -> 20 * 8 = 160 (left: 160)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "There are no possible next steps with the input of -7."
                }
            },
            "Step 5": {
                "Step": "1 + 6 = 7 (left: 6 6 7) -> 7 + 6 = 13 (left: 6 13) -> 6 - 13 = -7 (left: -7) -> There are no possible next steps with the input of -7. -> There are no possible next steps with the input of -7.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 6 = 7 (left: 6 6 7) -> 7 + 6 = 13 (left: 6 13) -> 6 - 13 = -7 (left: -7) -> There are no possible next steps with the input of -7. -> There are no possible next steps with the input of -7. -> There are no possible next steps with the input of -7.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "1.2 6 6"
                }
            },
            "Step 7": {
                "Step": "6 - 1 = 5 (left: 5 6 6) -> 6 / 5 = 1.2 (left: 1.2 6 6) -> 1.2 + 6 = 7.2 (left: 6 7.2)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 - 1 = 5 (left: 5 6 6) -> 6 / 5 = 1.2 (left: 1.2 6 6) -> 1.2 + 6 = 7.2 (left: 6 7.2) -> 6 + 7.2 = 13.2 (left: 13.2)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "8 14"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 / 1 = 6 (left: 6 6 6)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 6 6"
                }
            },
            "Step 1": {
                "Step": "1 * 6 = 6 (left: 6 6 6) -> 6 * 6 = 36 (left: 6 36)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 * 6 = 6 (left: 6 6 6) -> 6 * 6 = 36 (left: 6 36) -> 6 + 6 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 * 6 = 6 (left: 6 6 6) -> 6 * 6 = 36 (left: 6 36) -> 6 + 6 = 12 (left: 12) -> 12 + 8 = 20 (left: 8 20)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "6 6 6"
                }
            },
            "Step 4": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0) -> No possible next steps as there are no numbers provided.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0) -> No possible next steps as there are no numbers provided. -> No possible next steps as there are no numbers provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "1.2 6 6"
                }
            },
            "Step 7": {
                "Step": "6 - 1 = 5 (left: 5 6 6) -> 6 / 5 = 1.2 (left: 1.2 6 6) -> 6 - 1.2 = 4.8 (left: 4.8 6)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 - 1 = 5 (left: 5 6 6) -> 6 / 5 = 1.2 (left: 1.2 6 6) -> 6 - 1.2 = 4.8 (left: 4.8 6) -> 4.8 * 6 = 28.8 (left: 6 28.8)",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "1 + 6 = 7 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "6 6 6"
                }
            },
            "Step 1": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6) -> 0 + 6 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6) -> 0 + 6 = 6 (left: 6) -> 6 + 8 = 14 (left: 8 14)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "6 5 "
                }
            },
            "Step 4": {
                "Step": "6 - 1 = 5 (left: 6 5  -> 6 - 5 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 - 1 = 5 (left: 6 5  -> 6 - 5 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 1 = 5 (left: 6 5  -> 6 - 5 = 1 (left: 1) -> 1 + 1 = 2 -> 1 * 1 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "8 14"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "1.2 6 6"
                }
            },
            "Step 7": {
                "Step": "6 - 1 = 5 (left: 5 6 6) -> 6 / 5 = 1.2 (left: 1.2 6 6) -> 1.2 * 6 = 7.2 (left: 6 7.2)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 - 1 = 5 (left: 5 6 6) -> 6 / 5 = 1.2 (left: 1.2 6 6) -> 1.2 * 6 = 7.2 (left: 6 7.2) -> 6 + 7.2 = 13.2 (left: 13.2)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "8 14"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "6 - 1 = 5 (left: 6 5 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 1": {
                "Step": "1 + 6 = 7 (left: 6 6 7) -> 7 + 6 = 13 (left: 6 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 6 = 7 (left: 6 6 7) -> 7 + 6 = 13 (left: 6 13) -> 13 - 6 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 6 = 7 (left: 6 6 7) -> 7 + 6 = 13 (left: 6 13) -> 13 - 6 = 7 (left: 7) -> 7 + 8 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "6 6 7"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "1 2"
                }
            },
            "Step 4": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 3 + 5 = 8 (left: 7 8) -> 8 - 7 = 1 (left: 1) -> 1 + 1 = 2 (left: 1 2) -> 1 * 2 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "There are no possible next steps with the input of 0."
                }
            },
            "Step 5": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6) -> 0 * 6 = 0 (left: 0) -> There are no possible next steps with the input of 0. -> There are no possible next steps with the input of 0.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6) -> 0 * 6 = 0 (left: 0) -> There are no possible next steps with the input of 0. -> There are no possible next steps with the input of 0. -> There are no possible next steps with the input of 0.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "1.2 6 6"
                }
            },
            "Step 7": {
                "Step": "6 - 1 = 5 (left: 5 6 6) -> 6 / 5 = 1.2 (left: 1.2 6 6) -> 1.2 + 6 = 7.2 (left: 6 7.2)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 - 1 = 5 (left: 5 6 6) -> 6 / 5 = 1.2 (left: 1.2 6 6) -> 1.2 + 6 = 7.2 (left: 6 7.2) -> 6 + 7.2 = 13.2 (left: 13.2)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "8 20"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "6 - 1 = 5 (left: 6 5 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "6 6 6"
                }
            },
            "Step 1": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6) -> 0 * 6 = 0 (left: 6)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6) -> 0 * 6 = 0 (left: 6) -> 6 * 8 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "6 5 "
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "6 5 "
                }
            },
            "Step 4": {
                "Step": "6 - 1 = 5 (left: 6 5  -> 5 / 6 =",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 - 1 = 5 (left: 6 5  -> 5 / 6 = -> 5 / 6 = 0.8333333333333334",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 1 = 5 (left: 6 5  -> 5 / 6 = -> 5 / 6 = 0.8333333333333334 -> 5 - 6 = -1 (left: -1)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "-1 8"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "1.2 6 6"
                }
            },
            "Step 7": {
                "Step": "6 - 1 = 5 (left: 5 6 6) -> 6 / 5 = 1.2 (left: 1.2 6 6) -> 1.2 * 6 = 7.2 (left: 6 7.2",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 - 1 = 5 (left: 5 6 6) -> 6 / 5 = 1.2 (left: 1.2 6 6) -> 1.2 * 6 = 7.2 (left: 6 7.2 -> 6 * 7.2 = 43.2 (left: 43.2)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "There are no possible next steps with the input of -5."
                }
            }
        },
        "Input": "1 6 6 6",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "950": {
        "puzzle": "1 2 2 9",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 2 3 9)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 4 9"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 5 - 1 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 5 - 1 = 4 (left: 4) -> There are no possible next steps as the input is only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "4 9"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 9) -> 4 * 9 = 36 (left: 36)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 4 9) -> 4 * 9 = 36 (left: 36) -> There are no possible next steps with the number 36.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 4 9) -> 4 * 9 = 36 (left: 36) -> There are no possible next steps with the number 36. -> None",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "There are no possible next steps given the input provided."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps given the input provided."
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 4 + 1 = 5 (left: 5 9) -> Possible next steps: -> There are no possible next steps given the input provided. -> There are no possible next steps given the input provided.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 4 + 1 = 5 (left: 5 9) -> Possible next steps: -> There are no possible next steps given the input provided. -> There are no possible next steps given the input provided. -> There are no possible next steps given the input provided.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 1 4 9)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 4 9"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 + 4 = 5 (left: 5 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 + 4 = 5 (left: 5 9) -> 5 + 9 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 + 4 = 5 (left: 5 9) -> 5 + 9 = 14 (left: 14) -> No more possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "4 9"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 9) -> 4 + 9 = 13 (left: 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 4 9) -> 4 + 9 = 13 (left: 13) -> 13 / 2 = 6.5 (left: 6.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 4 9) -> 4 + 9 = 13 (left: 13) -> 13 / 2 = 6.5 (left: 6.5) -> 6.5 + 8 = 14.5 (left: 14.5)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "There are no possible next steps for the input 2.25 as it is already a single value."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "None, as there is only one number given."
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 4 9) -> 4 + 9 = 13 (left: 9 13) -> 9 + 13 = 22 (left: 22) -> None, as there is only one number given. -> There are no possible next steps as there is only one number given.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 4 9) -> 4 + 9 = 13 (left: 9 13) -> 9 + 13 = 22 (left: 22) -> None, as there is only one number given. -> There are no possible next steps as there is only one number given. -> There are no possible next steps as there is only one number given.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 2 3 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 4 9"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 / 1 = 9 (left: 4 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 / 1 = 9 (left: 4 9) -> 9 - 4 = 5 (left: 5 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 / 1 = 9 (left: 4 9) -> 9 - 4 = 5 (left: 5 9) -> Input: 3 7 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "4 9"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 9) -> 4 + 9 = 13 (left: 9 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 4 9) -> 4 + 9 = 13 (left: 9 13) -> 9 + 13 = 22 (left: 22)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 4 9) -> 4 + 9 = 13 (left: 9 13) -> 9 + 13 = 22 (left: 22) -> None, as there is only one number given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "There are no possible next steps as the input is only one number."
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 5 - 1 = 4 (left: 4) -> There are no possible next steps as the input is only one number. -> None",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "There are no possible next steps given the input provided."
                }
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 4 + 1 = 5 (left: 5 9) -> Possible next steps: -> There are no possible next steps given the input provided. -> There are no possible next steps given the input provided.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 2 = 7 (left: 1 2 7)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 4 9"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 + 4 = 5 (left: 5 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 + 4 = 5 (left: 5 9) -> 3 + 6 = 9 (left: 9 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 + 4 = 5 (left: 5 9) -> 3 + 6 = 9 (left: 9 9) -> 9 * 9 = 81 (left: 81)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "4 9"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "4 9"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 9) -> 9 - 4 = 5 (left: 5 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 4 9) -> 9 - 4 = 5 (left: 5 9) -> 9 / 5 = 1.8 (left: 1.8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 4 9) -> 9 - 4 = 5 (left: 5 9) -> 9 / 5 = 1.8 (left: 1.8) -> 8 - 1 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "6.75 9"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps given the input provided."
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 4 + 1 = 5 (left: 5 9) -> Possible next steps: -> There are no possible next steps given the input provided. -> There are no possible next steps given the input provided.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 4 + 1 = 5 (left: 5 9) -> Possible next steps: -> There are no possible next steps given the input provided. -> There are no possible next steps given the input provided. -> There are no possible next steps given the input provided.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 2 3 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 4 9"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 5 / 1 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 5 / 1 = 5 (left: 5) -> There are no possible next steps with only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "6.75 9"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 / 1 = 9 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> 9 - 2.25 = 6.75 (left: 6.75 9) -> 6.75 - 9 = -2.25 (left: -2.25)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "2 3 9"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 2 3 9) -> 9 - 3 = 6 (left: 2 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 2 3 9) -> 9 - 3 = 6 (left: 2 6) -> 2 + 6 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no possible next steps for the input 2.25 as it is already a single value."
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 * 4 = 4 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25) -> There are no possible next steps for the input 2.25 as it is already a single value. -> Input: 2.25",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 * 4 = 4 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25) -> There are no possible next steps for the input 2.25 as it is already a single value. -> Input: 2.25 -> 2.25 + 2.25 = 4.5 (left: 4.5)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "There are no possible next steps as the input is only one number."
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "9 - 1 = 8 (left: 2 2 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 4 9"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 / 1 = 9 (left: 4 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 / 1 = 9 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 / 1 = 9 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> 9 - 2.25 = 6.75 (left: 6.75 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "4 9"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25) -> 2.25 + 8 = 10.25 (left: 8 10.25)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25) -> 2.25 + 8 = 10.25 (left: 8 10.25) -> 8 / 10.25 = 0.78 (left: 0.78)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "Possible next steps:"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps given the input provided."
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 4 + 1 = 5 (left: 5 9) -> Possible next steps: -> There are no possible next steps given the input provided. -> There are no possible next steps given the input provided.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 4 + 1 = 5 (left: 5 9) -> Possible next steps: -> There are no possible next steps given the input provided. -> There are no possible next steps given the input provided. -> There are no possible next steps given the input provided.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 1 4 9)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 4 9"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 4 + 1 = 5 (left: 5 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 4 + 1 = 5 (left: 5 9) -> Possible next steps:",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 4 + 1 = 5 (left: 5 9) -> Possible next steps: -> There are no possible next steps given the input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "4 9"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 9) -> 9 - 4 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 4 9) -> 9 - 4 = 5 (left: 5) -> There is only one possible next step: 5 + 5 = 10",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 4 9) -> 9 - 4 = 5 (left: 5) -> There is only one possible next step: 5 + 5 = 10 -> 5 + 5 = 10",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "None, as there is only one number given."
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 4 9) -> 4 + 9 = 13 (left: 9 13) -> 9 + 13 = 22 (left: 22) -> None, as there is only one number given. -> No possible next steps as there is only one number given.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 4 9) -> 4 + 9 = 13 (left: 9 13) -> 9 + 13 = 22 (left: 22) -> None, as there is only one number given. -> No possible next steps as there is only one number given. -> No possible next steps as there is only one number given.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 1 4 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 4 9"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 * 4 = 4 (left: 4 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 * 4 = 4 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 * 4 = 4 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "4 9"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 9) -> 3 + 3 = 6 (left: 3 6)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 4 9) -> 3 + 3 = 6 (left: 3 6) -> 6 - 3 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 4 9) -> 3 + 3 = 6 (left: 3 6) -> 6 - 3 = 3 (left: 3) -> 3 - 8 = -5 (left: -5)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There are no possible next steps as the input is only one number."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "5 + 5 = 10"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 4 9) -> 9 - 4 = 5 (left: 5) -> There is only one possible next step: 5 + 5 = 10 -> 5 + 5 = 10 -> 5 - 5 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "None, as there is only one number given."
                }
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 4 9) -> 4 + 9 = 13 (left: 9 13) -> 9 + 13 = 22 (left: 22) -> None, as there is only one number given. -> There are no possible next steps as there is only one number given.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 9)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 4 9"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 * 4 = 4 (left: 4 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 * 4 = 4 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 * 4 = 4 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25) -> There are no possible next steps for the input 2.25 as it is already a single value.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "6.75 9"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 / 1 = 9 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> 9 - 2.25 = 6.75 (left: 6.75 9) -> 9 / 6.75 = 1.33 (left: 1.33)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "Input: 3 7 7"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 / 1 = 9 (left: 4 9) -> 9 - 4 = 5 (left: 5 9) -> Input: 3 7 7 -> 7 / 3 = 2 (left: 2 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 / 1 = 9 (left: 4 9) -> 9 - 4 = 5 (left: 5 9) -> Input: 3 7 7 -> 7 / 3 = 2 (left: 2 7) -> 2 + 7 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "There are no possible next steps given the input provided."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "None, as there is only one number given."
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 4 9) -> 4 + 9 = 13 (left: 9 13) -> 9 + 13 = 22 (left: 22) -> None, as there is only one number given. -> There are no possible next steps as there is only one number given.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 4 9) -> 4 + 9 = 13 (left: 9 13) -> 9 + 13 = 22 (left: 22) -> None, as there is only one number given. -> There are no possible next steps as there is only one number given. -> None",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "There are no possible next steps given the input provided."
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "9 - 1 = 8 (left: 2 2 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 4 9"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5 9) -> Input: 3 6",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5 9) -> Input: 3 6 -> 10 / 5 = 2 (left: 2 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "4 9"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 9) -> 9 - 4 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 4 9) -> 9 - 4 = 5 (left: 5) -> 5 + 5 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 4 9) -> 9 - 4 = 5 (left: 5) -> 5 + 5 = 10 (left: 10) -> 10 / 2 = 5 (left: 5 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "Possible next steps:"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 * 4 = 4 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> Possible next steps: -> There are no possible next steps given the input \"Possible next steps:\". Please provide a valid input for calculation.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 * 4 = 4 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> Possible next steps: -> There are no possible next steps given the input \"Possible next steps:\". Please provide a valid input for calculation. -> 3 * 9 = 27 (left: 5 7 27)",
                "Pruning": null
            }
        },
        "Input": "1 2 2 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "951": {
        "puzzle": "1 3 6 11",
        "Agent 0": {
            "Step 0": {
                "Step": "1 * 3 = 3 (left: 3 6 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11) -> 10 + 11 = 21 (left: 21)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11) -> 10 + 11 = 21 (left: 21) -> 21 / 2 = 10.5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 * 6 = 24 (left: 24 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 * 6 = 24 (left: 24 11) -> 24 - 11 = 13 (left: 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 * 6 = 24 (left: 24 11) -> 24 - 11 = 13 (left: 13) -> 13 + 2 = 15 (left: 2 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "21 / 2 = 10.5"
                }
            },
            "Step 7": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11) -> 10 + 11 = 21 (left: 21) -> 21 / 2 = 10.5 -> There are no possible next steps as the equation has been solved.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11) -> 10 + 11 = 21 (left: 21) -> 21 / 2 = 10.5 -> There are no possible next steps as the equation has been solved. -> None",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "There are no possible next steps as there is only one number left (16"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "1 * 6 = 6 (left: 3 6 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 / 4 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 / 4 =  -> 11 / 4 = 2.75",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 / 4 =  -> 11 / 4 = 2.75 -> 11 + 4 = 15 (left: 4 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11) -> 10 - 11 = -1 (left: -1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11) -> 10 - 11 = -1 (left: -1) -> There are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "20"
                }
            },
            "Step 7": {
                "Step": "1 * 3 = 3 (left: 3 6 11) -> 3 + 6 = 9 (left: 9 11) -> 9 + 11 = 20 (left: 20) -> There are no possible next steps with just the number 20.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 * 3 = 3 (left: 3 6 11) -> 3 + 6 = 9 (left: 9 11) -> 9 + 11 = 20 (left: 20) -> There are no possible next steps with just the number 20. -> 20 + 2 = 22 (left: 22)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "There are no possible next steps for the input provided."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 * 6 = 18 (left: 1 18 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 18 11"
                }
            },
            "Step 1": {
                "Step": "3 * 6 = 18 (left: 1 18 11) -> 18 / 1 = 18 (left: 11 18)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 6 = 18 (left: 1 18 11) -> 18 / 1 = 18 (left: 11 18) -> 11 - 18 = -7 (left: -7)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 6 = 18 (left: 1 18 11) -> 18 / 1 = 18 (left: 11 18) -> 11 - 18 = -7 (left: -7) -> 7 * (-7) = -49 (left: -49)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "4 6 11"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 6 - 4 = 2 (left: 2 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 6 - 4 = 2 (left: 2 11) -> 2 + 11 = 13 (left: 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 6 - 4 = 2 (left: 2 11) -> 2 + 11 = 13 (left: 13) -> 13 + 8 = 21 (left: 8)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "21 / 2 = 10.5"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "There are no possible next steps for the input provided."
                }
            },
            "Step 7": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> Possible next steps: -> There are no possible next steps for the input provided. -> There are no possible next steps for the input provided. -> There are no possible next steps for the input provided. -> There are no possible next steps for the input provided. -> None",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "There are no possible next steps for the input provided."
                }
            },
            "Step 8": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> Possible next steps: -> There are no possible next steps for the input provided. -> There are no possible next steps for the input provided.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 4 6 11)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 4 = 7 (left: 4 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 4 = 7 (left: 4 7) -> 4 + 7 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 4 = 7 (left: 4 7) -> 4 + 7 = 11 (left: 11) -> 11 - 8 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "3 6 11"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 6 / 4 = 1.5 (left: 1.5 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 6 / 4 = 1.5 (left: 1.5 11) -> 1.5 * 11 = 16.5 (left: 16.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 6 / 4 = 1.5 (left: 1.5 11) -> 1.5 * 11 = 16.5 (left: 16.5) -> There are no possible next steps with the input of 16.5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "21 / 2 = 10.5"
                }
            },
            "Step 7": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11) -> 10 + 11 = 21 (left: 21) -> 21 / 2 = 10.5 -> 21 / 2 = 10.5 (left: 2 10.5 21)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11) -> 10 + 11 = 21 (left: 21) -> 21 / 2 = 10.5 -> 21 / 2 = 10.5 (left: 2 10.5 21) -> 21 - 2 = 19 (left: 2 19 21)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "11 - 3 = 8 (left: 1 6 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> Possible next steps:",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> Possible next steps: -> There are no possible next steps for the input provided.",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "There are no possible next steps for the input provided."
                }
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> Possible next steps: -> There are no possible next steps for the input provided. -> N/A",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "3 6 11"
                }
            },
            "Step 5": {
                "Step": "1 * 3 = 3 (left: 3 6 11) -> 3 + 6 = 9 (left: 9 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 * 3 = 3 (left: 3 6 11) -> 3 + 6 = 9 (left: 9 11) -> 9 + 11 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "2 15"
                }
            },
            "Step 7": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 * 6 = 24 (left: 24 11) -> 24 - 11 = 13 (left: 13) -> 13 + 2 = 15 (left: 2 15) -> 15 * 2 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "There are no possible next steps for the input provided."
                }
            },
            "Step 8": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> Possible next steps: -> There are no possible next steps for the input provided. -> There are no possible next steps for the input provided.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "11 - 6 = 5 (left: 1 3 5)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1 3 5"
                }
            },
            "Step 1": {
                "Step": "11 - 6 = 5 (left: 1 3 5) -> 3 * 5 = 15 (left: 1 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 6 = 5 (left: 1 3 5) -> 3 * 5 = 15 (left: 1 15) -> 1 + 15 = 16 (left: 16)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 6 = 5 (left: 1 3 5) -> 3 * 5 = 15 (left: 1 15) -> 1 + 15 = 16 (left: 16) -> There are no possible next steps as there is only one number left (16).",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 6 - 4 = 2 (left: 2 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 6 - 4 = 2 (left: 2 11) -> 2 * 11 = 22 (left: 22)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 6 - 4 = 2 (left: 2 11) -> 2 * 11 = 22 (left: 22) -> 7 + 3 = 10 (left: 5 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "20"
                }
            },
            "Step 7": {
                "Step": "1 * 3 = 3 (left: 3 6 11) -> 3 + 6 = 9 (left: 9 11) -> 9 + 11 = 20 (left: 20) -> 20 - 8 = 12 (left: 8 12)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 * 3 = 3 (left: 3 6 11) -> 3 + 6 = 9 (left: 9 11) -> 9 + 11 = 20 (left: 20) -> 20 - 8 = 12 (left: 8 12) -> 8 - 12 = -4 (left: -4)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "21 / 2 = 10.5"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 4 6 11)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1 3 5"
                }
            },
            "Step 1": {
                "Step": "11 - 6 = 5 (left: 1 3 5) -> 5 - 1 = 4 (left: 3 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 6 = 5 (left: 1 3 5) -> 5 - 1 = 4 (left: 3 4) -> 3 + 4 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 6 = 5 (left: 1 3 5) -> 5 - 1 = 4 (left: 3 4) -> 3 + 4 = 7 (left: 7) -> 7 * 2 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "3 6 11"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "There are no possible next steps for the input provided."
                }
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> Possible next steps: -> There are no possible next steps for the input provided. -> There are no possible next steps for the input provided.",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> Possible next steps: -> There are no possible next steps for the input provided. -> There are no possible next steps for the input provided. -> There are no possible next steps for the input provided.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> Possible next steps: -> There are no possible next steps for the input provided. -> There are no possible next steps for the input provided. -> There are no possible next steps for the input provided. -> There are no possible next steps for the input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "2 15"
                }
            },
            "Step 7": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 * 6 = 24 (left: 24 11) -> 24 - 11 = 13 (left: 13) -> 13 + 2 = 15 (left: 2 15) -> 2 + 15 = 17 (left: 15 17)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 * 6 = 24 (left: 24 11) -> 24 - 11 = 13 (left: 13) -> 13 + 2 = 15 (left: 2 15) -> 2 + 15 = 17 (left: 15 17) -> 15 / 17 \u2248 0.882352941 (left: 0.882352941)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "There are no possible next steps for the input provided."
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 4 6 11)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 + 5 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 + 5 = 9 (left: 9) -> 8 - 9 = -1 (left: -1)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "1 18 11"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 * 6 = 24 (left: 24 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 * 6 = 24 (left: 24 11) -> 11 + 24 = 35 (left: 24 35)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 * 6 = 24 (left: 24 11) -> 11 + 24 = 35 (left: 24 35) -> 35 / 24 = 1.4583333333333333 (left: 1.4583333333333333)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "No possible next steps."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "20"
                }
            },
            "Step 7": {
                "Step": "1 * 3 = 3 (left: 3 6 11) -> 3 + 6 = 9 (left: 9 11) -> 9 + 11 = 20 (left: 20) -> 20 * 8 = 160 (left: 8)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "There are no possible next steps for the input provided."
                }
            },
            "Step 8": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> Possible next steps: -> There are no possible next steps for the input provided. -> There are no possible next steps for the input provided. -> There are no possible next steps for the input provided. -> There are no possible next steps for the input provided. -> There are no possible next steps for the input provided.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "11 - 1 = 10 (left: 3 6 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 4 = 7 (left: 4 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 4 = 7 (left: 4 7) -> 4 * 7 = 28 (left: 7 28)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 4 = 7 (left: 4 7) -> 4 * 7 = 28 (left: 7 28) -> 7 + 28 = 35 (left: 35)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "1 3 5"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> Input: 3 9",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> Input: 3 9 -> 3 * 9 = 27 (left: 27)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> Input: 3 9 -> 3 * 9 = 27 (left: 27) -> 27 * 2 = 54 (left: 54)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "21 / 2 = 10.5"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no possible next steps."
                }
            },
            "Step 7": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11) -> 10 - 11 = -1 (left: -1) -> There are no possible next steps. -> There are no possible next steps.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11) -> 10 - 11 = -1 (left: -1) -> There are no possible next steps. -> There are no possible next steps. -> There are no possible next steps.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "3 * 1 = 3 (left: 3 6 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 - 5 = -1 (left: -1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 - 5 = -1 (left: -1) -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "There are no possible next steps for the input provided."
                }
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> Possible next steps: -> There are no possible next steps for the input provided. -> There are no possible next steps for the input provided.",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> Possible next steps: -> There are no possible next steps for the input provided. -> There are no possible next steps for the input provided. -> There are no possible next steps for the input provided.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> Possible next steps: -> There are no possible next steps for the input provided. -> There are no possible next steps for the input provided. -> There are no possible next steps for the input provided. -> There are no possible next steps for the input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no possible next steps."
                }
            },
            "Step 7": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11) -> 10 - 11 = -1 (left: -1) -> There are no possible next steps. -> There are no possible next steps.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11) -> 10 - 11 = -1 (left: -1) -> There are no possible next steps. -> There are no possible next steps. -> There are no possible next steps.",
                "Pruning": null
            }
        },
        "Input": "1 3 6 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "952": {
        "puzzle": "5 10 12 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 + 5 = 18 (left: 10 12 18)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 12 13"
                }
            },
            "Step 1": {
                "Step": "13 - 10 = 3 (left: 3 12 13) -> 12 - 3 = 9 (left: 9 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 10 = 3 (left: 3 12 13) -> 12 - 3 = 9 (left: 9 13) -> 13 - 9 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 10 = 3 (left: 3 12 13) -> 12 - 3 = 9 (left: 9 13) -> 13 - 9 = 4 (left: 4) -> There is only one possible next step: 4 + 4 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "3 12 "
                }
            },
            "Step 4": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 3 + 12 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 3 + 12 = 15 (left: 15) -> 15 / 2 = 7.5 (left: 7.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 3 + 12 = 15 (left: 15) -> 15 / 2 = 7.5 (left: 7.5) -> 7.5 / 2 = 3.75 (left: 3.75 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "1. 108 + 2 = 110"
                }
            },
            "Step 7": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 - 3 = 9 (left: 9 12) -> 9 * 12 = 108 (left: 108) -> 1. 108 + 2 = 110 -> 2 * 108 = 216 (left: 216)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "There are no possible next steps with the input 0."
                }
            },
            "Step 8": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 / 3 = 4 (left: 4) -> 4 - 4 = 0 (left: 0) -> There are no possible next steps with the input 0. -> There are no possible next steps with the input 0.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 * 10 = 50 (left: 12 13 50)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 1": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 - 3 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 - 3 = 9 (left: 9) -> 9 + 8 = 17 (left: 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 - 3 = 9 (left: 9) -> 9 + 8 = 17 (left: 8) -> 8 + 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "12 13 15"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "3 12 "
                }
            },
            "Step 4": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 - 3 = 9 (left: 3 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 - 3 = 9 (left: 3 9) -> 9 - 3 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 - 3 = 9 (left: 3 9) -> 9 - 3 = 6 (left: 6) -> 6 * 8 = 48 (left: 8 48)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "There are no possible next steps as there are no valid operations that can be performed with the input of -3."
                }
            },
            "Step 7": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 - 3 = 9 (left: 9 12) -> 9 - 12 = -3 (left: -3) -> There are no possible next steps as there are no valid operations that can be performed with the input of -3. -> There are no valid operations that can be performed with the input of -3.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 - 3 = 9 (left: 9 12) -> 9 - 12 = -3 (left: -3) -> There are no possible next steps as there are no valid operations that can be performed with the input of -3. -> There are no valid operations that can be performed with the input of -3. -> There are no valid operations that can be performed with the input of -3.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 + 5 = 17 (left: 10 13 17)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 1": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 3 + 12 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 3 + 12 = 15 (left: 15) -> There is only one possible next step: 15 - 8 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 3 + 12 = 15 (left: 15) -> There is only one possible next step: 15 - 8 = 7 (left: 7) -> 7 * 8 = 56 (left: 56)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "3 12 "
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "3 12 "
                }
            },
            "Step 4": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 4 + 9 = 13 (left: 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 4 + 9 = 13 (left: 13) -> 13 * 2 = 26 (left: 26)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 4 + 9 = 13 (left: 13) -> 13 * 2 = 26 (left: 26) -> 26 / 2 = 13 (left: 13)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There is only one possible next step: 4 + 4 = 8"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "There are no possible next steps with the input 0."
                }
            },
            "Step 7": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 / 3 = 4 (left: 4) -> 4 - 4 = 0 (left: 0) -> There are no possible next steps with the input 0. -> There are no possible next steps with the input 0.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 / 3 = 4 (left: 4) -> 4 - 4 = 0 (left: 0) -> There are no possible next steps with the input 0. -> There are no possible next steps with the input 0. -> There are no possible next steps with the input 0.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 - 5 = 5 (left: 5 12 13)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 1": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 / 3 = 4 (left: 4 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 / 3 = 4 (left: 4 4) -> 4 / 4 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 / 3 = 4 (left: 4 4) -> 4 / 4 = 1 (left: 1) -> 1 - 1 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "3 12 "
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "3 12 "
                }
            },
            "Step 4": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 - 3 = 9 (left: 9 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 - 3 = 9 (left: 9 12) -> 9 - 12 = -3 (left: -3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 - 3 = 9 (left: 9 12) -> 9 - 12 = -3 (left: -3) -> There are no possible next steps as there are no valid operations that can be performed with the input of -3.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "3.75 8"
                }
            },
            "Step 7": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 3 + 12 = 15 (left: 15) -> 15 / 2 = 7.5 (left: 7.5) -> 7.5 / 2 = 3.75 (left: 3.75 8) -> 3.75 / 8 = 0.46875 (left: 0.46875)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "No possible next steps."
                }
            },
            "Step 8": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> No possible next steps. -> No possible next steps. -> There are no possible next steps for the given numbers.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 + 5 = 17 (left: 10 13 17)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 1": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 / 3 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 / 3 = 4 (left: 4) -> 4 + 4 = 8",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 / 3 = 4 (left: 4) -> 4 + 4 = 8 -> 4 * 4 = 16 (left: 4 8 16)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "3 12 "
                }
            },
            "Step 4": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 3 + 12 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 3 + 12 = 15 (left: 15) -> There are no possible next steps with the input 15.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 3 + 12 = 15 (left: 15) -> There are no possible next steps with the input 15. -> There are no possible next steps with the input 15.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "8 48"
                }
            },
            "Step 7": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 - 3 = 9 (left: 3 9) -> 9 - 3 = 6 (left: 6) -> 6 * 8 = 48 (left: 8 48) -> 48 / 8 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "No possible next steps."
                }
            },
            "Step 8": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> No possible next steps. -> No possible next steps. -> There are no more possible next steps.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "13 - 10 = 3 (left: 3 12 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 1": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 - 12 = 0 (left: 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 - 12 = 0 (left: 3) -> There are no possible next steps with only one number provided.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 - 12 = 0 (left: 3) -> There are no possible next steps with only one number provided. -> Provide at least two numbers to perform arithmetic operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "3 12 "
                }
            },
            "Step 4": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 3 + 12 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 3 + 12 = 15 (left: 15) -> 15 - 8 = 7 (left: 7 15)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 3 + 12 = 15 (left: 15) -> 15 - 8 = 7 (left: 7 15) -> 7 * 15 = 105 (left: 105)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "8 + 8 = 16"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "2 64"
                }
            },
            "Step 7": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 / 3 = 4 (left: 4) -> There is only one possible next step: -> 8 * 8 = 64 (left: 2 64) -> 64 - 2 = 62 (left: 62)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "8 + 8 = 16"
                }
            },
            "Step 8": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 / 3 = 4 (left: 4 12) -> 12 - 4 = 8 (left: 8) -> 8 + 8 = 16 -> 8 + 8 = 16 (left: 16 16)",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "13 - 10 = 3 (left: 3 12 ",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 1": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 / 3 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 / 3 = 4 (left: 4) -> 4 - 4 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 / 3 = 4 (left: 4) -> 4 - 4 = 0 (left: 0) -> There are no possible next steps with the input 0.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "3 12 "
                }
            },
            "Step 4": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 / 3 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 / 3 = 4 (left: 4) -> There is only one possible next step:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 / 3 = 4 (left: 4) -> There is only one possible next step: -> 8 * 8 = 64 (left: 2 64)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "8 + 8 = 16"
                }
            },
            "Step 7": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 / 3 = 4 (left: 4 12) -> 12 - 4 = 8 (left: 8) -> 8 + 8 = 16 -> 8 / 8 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "There are no possible next steps with the input 15."
                }
            },
            "Step 8": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 3 + 12 = 15 (left: 15) -> There are no possible next steps with the input 15. -> There are no possible next steps with the input 15. -> 3 + 5 = 8 (",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "5 + 10 = 15 (left: 12 13 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 1": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 3 * 12 = 36 (left: 36)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> No possible next steps.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> No possible next steps. -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "3 12 "
                }
            },
            "Step 4": {
                "Step": "13 - 10 = 3 (left: 3 12  -> Possible next steps: ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 10 = 3 (left: 3 12  -> Possible next steps:  -> 8 / 7 = 1.14285714286 (left: 1 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 10 = 3 (left: 3 12  -> Possible next steps:  -> 8 / 7 = 1.14285714286 (left: 1 8) -> 8 - 1 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "No possible next steps."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "There are no possible next steps with the input 15."
                }
            },
            "Step 7": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 3 + 12 = 15 (left: 15) -> There are no possible next steps with the input 15. -> There are no possible next steps with the input 15. -> There are no possible next steps with the input 15.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 3 + 12 = 15 (left: 15) -> There are no possible next steps with the input 15. -> There are no possible next steps with the input 15. -> There are no possible next steps with the input 15. -> 15 * 2 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "36 / 2 = 18"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "10 - 5 = 5 (left: 5 12 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 1": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 / 3 = 4 (left: 4 12) -> 12 - 4 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 / 3 = 4 (left: 4 12) -> 12 - 4 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "3 12 "
                }
            },
            "Step 4": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 3 * 12 = 36 (left: 12 36)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 3 * 12 = 36 (left: 12 36) -> 12 + 36 = 48 (left: 48)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 3 * 12 = 36 (left: 12 36) -> 12 + 36 = 48 (left: 48) -> 48 + 2 = 50 (left: 50)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "There are no possible next steps with the input 0."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "There are no possible next steps with the input 15."
                }
            },
            "Step 7": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 3 + 12 = 15 (left: 15) -> There are no possible next steps with the input 15. -> There are no possible next steps with the input 15. -> There are no possible next steps with the input 15.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 3 + 12 = 15 (left: 15) -> There are no possible next steps with the input 15. -> There are no possible next steps with the input 15. -> There are no possible next steps with the input 15. -> There are no possible next steps with the input 15.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "13 - 10 = 3 (left: 3 12 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 1": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 3 * 12 = 36 (left: 36)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> There are no possible next steps with the number 36.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> There are no possible next steps with the number 36. -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "3 12 "
                }
            },
            "Step 4": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 - 3 = 9 (left: 9 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 - 3 = 9 (left: 9 12) -> 9 * 12 = 108 (left: 108)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 - 3 = 9 (left: 9 12) -> 9 * 12 = 108 (left: 108) -> 1. 108 + 2 = 110",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "2 64"
                }
            },
            "Step 7": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 / 3 = 4 (left: 4) -> There is only one possible next step: -> 8 * 8 = 64 (left: 2 64) -> Possible next steps:",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 / 3 = 4 (left: 4) -> There is only one possible next step: -> 8 * 8 = 64 (left: 2 64) -> Possible next steps: -> - 8 / 8 = 1 (left: 2 1)",
                "Pruning": null
            }
        },
        "Input": "5 10 12 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "953": {
        "puzzle": "2 3 6 6",
        "Agent 0": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 3 4 6)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 6 6 12) -> 12 / 6 = 2 (left: 2 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 6 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 2 = 12 (left: 6 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (6 * 2) * (6 / 2) = 24",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "6 6 12"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6) -> 2 + 6 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6) -> 2 + 6 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "8 8 10"
                }
            },
            "Step 7": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6) -> 6 / 2 = 3 (left: 3) -> 3 + 7 = 10 (left: 8 8 10) -> 10 - 8 = 2 (left: 8 2)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6) -> 6 / 2 = 3 (left: 3) -> 3 + 7 = 10 (left: 8 8 10) -> 10 - 8 = 2 (left: 8 2) -> 8 + 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "There are no possible next steps with just the number 3."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 4 6 6)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> Input:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> Input: -> Please provide a set of numbers to find possible next steps.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> Input: -> Please provide a set of numbers to find possible next steps. -> - Please provide a valid set of numbers.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6 6)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6 6) -> 6",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6 6) -> 6 -> 6 + 8 = 14 (left: 8 14)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "5 13"
                }
            },
            "Step 7": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 + 6 = 10 (left: 6 10) -> 4 + 9 = 13 (left: -> 9 - 4 = 5 (left: 5 13) -> 13 / 5 = 2.6 (left: 2.6)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "There are no possible next steps with just the number 3."
                }
            },
            "Step 8": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6) -> 6 / 2 = 3 (left: 3) -> There are no possible next steps with just the number 3. -> There are no possible next steps with just the number 3.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 3 4 6)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 6 6"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 3 + 6 = 9 (left: 6 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 3 + 6 = 9 (left: 6 9) -> 9 / 6 = 1.5 (left: 1.5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 3 + 6 = 9 (left: 6 9) -> 9 / 6 = 1.5 (left: 1.5) -> There are no possible next steps with the input 1.5 as it is a single number and not an operation with other numbers.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 * 4 = 24 (left: 6 24)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 * 4 = 24 (left: 6 24) -> 6 * 4 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 * 4 = 24 (left: 6 24) -> 6 * 4 = 24 (left: 24) -> Answer: (6 * (6 - 2)) = 24",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "There are no possible next steps with the number 18."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "8 8 10"
                }
            },
            "Step 7": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6) -> 6 / 2 = 3 (left: 3) -> 3 + 7 = 10 (left: 8 8 10) -> 8 * 8 = 64 (left: 64 10)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6) -> 6 / 2 = 3 (left: 3) -> 3 + 7 = 10 (left: 8 8 10) -> 8 * 8 = 64 (left: 64 10) -> 64 - 10 = 54 (left: 10 54)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 4 6 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 * 12 = 432 (left: 432)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 2 = 12 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 * 12 = 432 (left: 432) -> 4 + 3 = 7 (left: 7 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 4": {
                "Step": "6 * 2 = 12 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 * 2 = 12 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 * 12 = 432 (left: 432)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 2 = 12 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 * 12 = 432 (left: 432) -> 43 + 2 = 45 (left: 5)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "There are no possible next steps with just the number 3."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "8 8 10"
                }
            },
            "Step 7": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6) -> 6 / 2 = 3 (left: 3) -> 3 + 7 = 10 (left: 8 8 10) -> 10 + 8 = 18 (left: 8 18)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6) -> 6 / 2 = 3 (left: 3) -> 3 + 7 = 10 (left: 8 8 10) -> 10 + 8 = 18 (left: 8 18) -> Input: 26 10 2.25 144",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 / 2 = 3 (left: 3 6 6)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 6 + 24 = 30 (left: 30)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 6 + 24 = 30 (left: 30) -> None, as there is only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6) -> 2 * 6 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6) -> 2 * 6 = 12 (left: 12) -> 12 / 2 = 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "8 8 10"
                }
            },
            "Step 7": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6) -> 6 / 2 = 3 (left: 3) -> 3 + 7 = 10 (left: 8 8 10) -> 10 / 8 = 1.25 (left: 1.25 8)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6) -> 6 / 2 = 3 (left: 3) -> 3 + 7 = 10 (left: 8 8 10) -> 10 / 8 = 1.25 (left: 1.25 8) -> 8 / 1.25 = 6.4 (left: 6.4)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "8 14"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 4 6 6)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 + 6 = 10 (",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 + 6 = 10 ( -> 6 * 10 = 60 (left: 4 60)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 + 6 = 10 ( -> 6 * 10 = 60 (left: 4 60) -> 60 - 4 = 56 (left: 56)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "4 6 6"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 4": {
                "Step": "6 * 2 = 12 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 * 2 = 12 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 / 12 = 1 (left: 1) ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 2 = 12 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 / 12 = 1 (left: 1)  -> There are no possible next steps with only one number given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "5 13"
                }
            },
            "Step 7": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 + 6 = 10 (left: 6 10) -> 4 + 9 = 13 (left: -> 9 - 4 = 5 (left: 5 13) -> 13 / 5 = 2.6 (left: 2.6)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "There are no possible next steps with just the number 3."
                }
            },
            "Step 8": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6) -> 6 / 2 = 3 (left: 3) -> There are no possible next steps with just the number 3. -> 3 + 3 = 6",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 / 2 = 3 (left: 3 6 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6) -> 6 / 2 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6) -> 6 / 2 = 3 (left: 3) -> There are no possible next steps with just the number 3.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6 6)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6 6) -> 6 - 2 = 4 (left: 4 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6 6) -> 6 - 2 = 4 (left: 4 6) -> 6 - 4 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "8 8 10"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "8 8 10"
                }
            },
            "Step 7": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6) -> 6 / 2 = 3 (left: 3) -> 3 + 7 = 10 (left: 8 8 10) -> 10 - 8 = 2 (left: 8 2)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6) -> 6 / 2 = 3 (left: 3) -> 3 + 7 = 10 (left: 8 8 10) -> 10 - 8 = 2 (left: 8 2) -> 8 * 2 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "There are no possible next steps with only one number given."
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "6 / 3 = 2 (left: 2 3 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 * 4 = 24 (left: 24 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 * 4 = 24 (left: 24 6) -> 24 - 6 = 18 (left: 18)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 * 4 = 24 (left: 24 6) -> 24 - 6 = 18 (left: 18) -> There are no possible next steps with the number 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 4": {
                "Step": "6 * 2 = 12 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 * 2 = 12 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12) -> 1 + 12 = 13 (left: 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 2 = 12 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12) -> 1 + 12 = 13 (left: 13) -> 13 - 2 = 11 (left: 2 8 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "8 8 10"
                }
            },
            "Step 7": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6) -> 6 / 2 = 3 (left: 3) -> 3 + 7 = 10 (left: 8 8 10) -> 8 / 8 = 1 (left: 1 10)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6) -> 6 / 2 = 3 (left: 3) -> 3 + 7 = 10 (left: 8 8 10) -> 8 / 8 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "There are no possible next steps with only one number given."
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "6 * 2 = 12 (left: 6 6 12)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 + 6 = 10 (left: 6 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 + 6 = 10 (left: 6 10) -> 3 + 9 = 12 (left: 12 5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 + 6 = 10 (left: 6 10) -> 3 + 9 = 12 (left: 12 5) -> 12 / 5 = 2.4 (left: 2.4)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "3 6 6"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6) -> Input: 10 3",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6) -> Input: 10 3 -> 10 / 3 = 3.33333333333 (left: 3.33333333333)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "8 8 10"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "8 8 10"
                }
            },
            "Step 7": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6) -> 6 / 2 = 3 (left: 3) -> 3 + 7 = 10 (left: 8 8 10) -> 8 + 8 = 16 (left: 16 10)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6) -> 6 / 2 = 3 (left: 3) -> 3 + 7 = 10 (left: 8 8 10) -> 8 + 8 = 16 (left: 16 10) -> 16 / 10 = 1.6 (left: 1.6)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "None, as there is only one number provided."
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "3 * 2 = 6 (left: 6 6 6)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6) -> 6 / 2 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6) -> 6 / 2 = 3 (left: 3) -> 3 + 7 = 10 (left: 8 8 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 + 6 = 10 (left: 6 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 + 6 = 10 (left: 6 10) -> 4 + 9 = 13 (left:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 + 6 = 10 (left: 6 10) -> 4 + 9 = 13 (left: -> 9 - 4 = 5 (left: 5 13)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "8 14"
                }
            },
            "Step 7": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6 6) -> 6 -> 6 + 8 = 14 (left: 8 14) -> 14 / 8 = 1.75 (left: 1.75)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "There are no possible next steps with the input 1.5 as it is a single number and not an operation with other numbers."
                }
            },
            "Step 8": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 3 + 6 = 9 (left: 6 9) -> 9 / 6 = 1.5 (left: 1.5) -> There are no possible next steps with the input 1.5 as it is a single number and not an operation with other numbers. -> N/A",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "None, as there is only one number provided."
                }
            }
        },
        "Input": "2 3 6 6",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "954": {
        "puzzle": "6 7 10 12",
        "Agent 0": {
            "Step 0": {
                "Step": "6 * 7 = 42 (left: 10 12 42)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "10 12 42"
                }
            },
            "Step 1": {
                "Step": "6 * 7 = 42 (left: 10 12 42) -> 10 + 12 = 22 (left: 22 42)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 7 = 42 (left: 10 12 42) -> 10 + 12 = 22 (left: 22 42) -> 5 *",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 7 = 42 (left: 10 12 42) -> 10 + 12 = 22 (left: 22 42) -> 5 * -> 5 * 8 = 40 (left: 40)",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": ""
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "6 12 17"
                }
            },
            "Step 4": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 17 - 6 = 11 (left: 6 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 17 - 6 = 11 (left: 6 11) -> 11 - 6 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 17 - 6 = 11 (left: 6 11) -> 11 - 6 = 5 (left: 5) -> There are no possible next steps with a single input of 5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "16 15"
                }
            },
            "Step 7": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> Input: 3 5 7 9 -> 3 * 5 = 15 (left: 7 9 15) -> 7 + 9 = 16 (left: 16 15) -> 16 * 15 = 240 (left: 15 240)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> Input: 3 5 7 9 -> 3 * 5 = 15 (left: 7 9 15) -> 7 + 9 = 16 (left: 16 15) -> 16 * 15 = 240 (left: 15 240) -> 15 * 240 = 3600 (left: 240 3600)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 + 10 = 17 (left: 6 12 17)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "10 12 13"
                }
            },
            "Step 1": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> 10 + 12 = 22 (left: 13 22)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> 10 + 12 = 22 (left: 13 22) -> 13 / 22 = 0.5909090909090909 (left: 0.5909090909090909)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> 10 + 12 = 22 (left: 13 22) -> 13 / 22 = 0.5909090909090909 (left: 0.5909090909090909) -> 0.5909090909090909 / 0.5 = 1.1818181818181818",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "8 2"
                }
            },
            "Step 4": {
                "Step": "7 * 10 = 70 (left: 6 12 70) -> 12 + 70 = 82 (left: 6 82) -> 6 * 82 = 492 (left: 492) -> 2 * 4 = 8 (left: 8 2) -> 8 * 2 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "6 12 70"
                }
            },
            "Step 5": {
                "Step": "7 * 10 = 70 (left: 6 12 70) -> 70 + 6 = 76 (left: 12 76)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 10 = 70 (left: 6 12 70) -> 70 + 6 = 76 (left: 12 76) -> 76 - 12 = 64 (left: 64)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "16 15"
                }
            },
            "Step 7": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> Input: 3 5 7 9 -> 3 * 5 = 15 (left: 7 9 15) -> 7 + 9 = 16 (left: 16 15) -> 16 - 15 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "0.5909090909090909 / 0.5 = 1.1818181818181818"
                }
            },
            "Step 8": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> 10 + 12 = 22 (left: 13 22) -> 13 / 22 = 0.5909090909090909 (left: 0.5909090909090909) -> 0.5909090909090909 / 0.5 = 1.1818181818181818 -> 0.5909090909090909 - 0.5 = 0.09090909090909094",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 + 10 = 17 (left: 6 12 17)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "10 12 13"
                }
            },
            "Step 1": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> 10 + 12 = 22 (left: 13 22)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> 10 + 12 = 22 (left: 13 22) -> 13 - 22 = -9 (left: -9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> 10 + 12 = 22 (left: 13 22) -> 13 - 22 = -9 (left: -9) -> There are no possible next steps with the input of -9.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "6 12 17"
                }
            },
            "Step 4": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 12 / 6 = 2 (left: 2 17)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 12 / 6 = 2 (left: 2 17) -> 17 / 2 = 8.5 (left: 8.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 12 / 6 = 2 (left: 2 17) -> 17 / 2 = 8.5 (left: 8.5) -> There are no possible next steps with the input 8.5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "16 15"
                }
            },
            "Step 7": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> Input: 3 5 7 9 -> 3 * 5 = 15 (left: 7 9 15) -> 7 + 9 = 16 (left: 16 15) -> 16 - 15 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "55 + 2 = 57"
                }
            },
            "Step 8": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 6 * 12 = 72 (left: 72 17) -> 72 - 17 = 55 (left: 55) -> 55 + 2 = 57 -> 55 / 2 = 27.5 (left: 27.5 57)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 * 7 = 42 (left: 10 12 42)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 12 17"
                }
            },
            "Step 1": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 6 * 12 = 72 (left: 72 17)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 6 * 12 = 72 (left: 72 17) -> 72 - 17 = 55 (left: 55)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 6 * 12 = 72 (left: 72 17) -> 72 - 17 = 55 (left: 55) -> 55 + 2 = 57",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "6 12 17"
                }
            },
            "Step 4": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 12 + 6 = 18 (left: 18 17)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 12 + 6 = 18 (left: 18 17) -> 18 * 17 = 306 (left: 306)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 12 + 6 = 18 (left: 18 17) -> 18 * 17 = 306 (left: 306) -> 3 + 0 + 6 = 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "16 15"
                }
            },
            "Step 7": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> Input: 3 5 7 9 -> 3 * 5 = 15 (left: 7 9 15) -> 7 + 9 = 16 (left: 16 15) -> 16 * 15 = 240 (left: 240)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "There are no possible next steps with the input of -9."
                }
            },
            "Step 8": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> 10 + 12 = 22 (left: 13 22) -> 13 - 22 = -9 (left: -9) -> There are no possible next steps with the input of -9. -> There are no possible next steps with the input of -9.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 10 12 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 12 17"
                }
            },
            "Step 1": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 12 - 6 = 6 (left: 6 17)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 12 - 6 = 6 (left: 6 17) -> 6 * 17 = 102 (left: 102)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 12 - 6 = 6 (left: 6 17) -> 6 * 17 = 102 (left: 102) -> 10 * 2 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "6 12 17"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "6 12 17"
                }
            },
            "Step 4": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 12 - 6 = 6 (left: 6 6 17)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 12 - 6 = 6 (left: 6 6 17) -> Input: 11 6",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 12 - 6 = 6 (left: 6 6 17) -> Input: 11 6 -> 11 * 6 = 66 (left: 66)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "16 15"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "16 15"
                }
            },
            "Step 7": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> Input: 3 5 7 9 -> 3 * 5 = 15 (left: 7 9 15) -> 7 + 9 = 16 (left: 16 15) -> 16 + 15 = 31 (left: 31)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "16 15"
                }
            },
            "Step 8": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> Input: 3 5 7 9 -> 3 * 5 = 15 (left: 7 9 15) -> 7 + 9 = 16 (left: 16 15) -> 16 + 15 = 31 (left: 31)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "There are no possible next steps for the input 140.04, as it is already a single number."
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "7 * 10 = 70 (left: 6 12 70)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "10 12 13"
                }
            },
            "Step 1": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> Input: 3 5 7 9",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> Input: 3 5 7 9 -> 3 * 5 = 15 (left: 7 9 15)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> Input: 3 5 7 9 -> 3 * 5 = 15 (left: 7 9 15) -> 7 + 9 = 16 (left: 16 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "10 12 42"
                }
            },
            "Step 4": {
                "Step": "6 * 7 = 42 (left: 10 12 42) -> 12 - 10 = 2 (left: 2 42)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 * 7 = 42 (left: 10 12 42) -> 12 - 10 = 2 (left: 2 42) -> 2 * 42 = 84 (left: 84)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 7 = 42 (left: 10 12 42) -> 12 - 10 = 2 (left: 2 42) -> 2 * 42 = 84 (left: 84) -> 84 - 2 = 82 (left: 82)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "16 15"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "16 15"
                }
            },
            "Step 7": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> Input: 3 5 7 9 -> 3 * 5 = 15 (left: 7 9 15) -> 7 + 9 = 16 (left: 16 15) -> 16 * 15 = 240 (left: 240)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "8 2"
                }
            },
            "Step 8": {
                "Step": "7 * 10 = 70 (left: 6 12 70) -> 12 + 70 = 82 (left: 6 82) -> 6 * 82 = 492 (left: 492) -> 2 * 4 = 8 (left: 8 2) -> 8 - 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "8 2"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 10 12 13)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "10 12 42"
                }
            },
            "Step 1": {
                "Step": "6 * 7 = 42 (left: 10 12 42) -> 12 * 10 = 120 (left: 120 42)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 7 = 42 (left: 10 12 42) -> 12 * 10 = 120 (left: 120 42) -> 120 * 42 = 5040 (left: 5040)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 7 = 42 (left: 10 12 42) -> 12 * 10 = 120 (left: 120 42) -> 120 * 42 = 5040 (left: 5040) -> 5040 / 3 = 1680 (left: 1680)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "10 12 42"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "8 2"
                }
            },
            "Step 4": {
                "Step": "7 * 10 = 70 (left: 6 12 70) -> 12 + 70 = 82 (left: 6 82) -> 6 * 82 = 492 (left: 492) -> 2 * 4 = 8 (left: 8 2) -> 8 * 2 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "6 12 70"
                }
            },
            "Step 5": {
                "Step": "7 * 10 = 70 (left: 6 12 70) -> 12 / 6 = 2 (left: 2 70)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 10 = 70 (left: 6 12 70) -> 12 / 6 = 2 (left: 2 70) -> 2 * 70 = 140 (left: 140)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "16 15"
                }
            },
            "Step 7": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> Input: 3 5 7 9 -> 3 * 5 = 15 (left: 7 9 15) -> 7 + 9 = 16 (left: 16 15) -> 16 + 15 = 31 (left: 15 31)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> Input: 3 5 7 9 -> 3 * 5 = 15 (left: 7 9 15) -> 7 + 9 = 16 (left: 16 15) -> 16 + 15 = 31 (left: 15 31) -> 15 + 31 = 46 (left: 46)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "3 + 0 + 6 = 9"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "7 * 10 = 70 (left: 6 12 70)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "10 12 42"
                }
            },
            "Step 1": {
                "Step": "6 * 7 = 42 (left: 10 12 42) -> 12 / 10 = 1.2 (left: 1.2 42)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 7 = 42 (left: 10 12 42) -> 12 / 10 = 1.2 (left: 1.2 42) -> 1.2 + 42 = 43.2 (left: 42 43.2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 7 = 42 (left: 10 12 42) -> 12 / 10 = 1.2 (left: 1.2 42) -> 1.2 + 42 = 43.2 (left: 42 43.2) -> 42 * 43.2 = 1814.4 (left: 1814.4)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "6 12 70"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "6 12 70"
                }
            },
            "Step 4": {
                "Step": "7 * 10 = 70 (left: 6 12 70) -> 70 / 12 = 5.83 (left: 6 5.83)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 * 10 = 70 (left: 6 12 70) -> 70 / 12 = 5.83 (left: 6 5.83) -> 6 * 5.83 = 34.98 (left: 5.83 34.98)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 10 = 70 (left: 6 12 70) -> 70 / 12 = 5.83 (left: 6 5.83) -> 6 * 5.83 = 34.98 (left: 5.83 34.98) -> 5.83 + 34.98 = 40.81 (left: 40.81)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "0.5909090909090909 / 0.5 = 1.1818181818181818"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "16 15"
                }
            },
            "Step 7": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> Input: 3 5 7 9 -> 3 * 5 = 15 (left: 7 9 15) -> 7 + 9 = 16 (left: 16 15) -> 16 + 15 = 31 (left: 31)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "0.375 * 2 = 0.75"
                }
            },
            "Step 8": {
                "Step": "6 * 7 = 42 (left: 10 12 42) -> 42 - 10 = 32 (left: 12 32) -> 12 / 32 = 0.375 (left: 0.375)   -> 0.375 * 2 = 0.75 -> 0.375 + 2 = 2.375",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "7 * 10 = 70 (left: 6 12 70)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 12 70"
                }
            },
            "Step 1": {
                "Step": "7 * 10 = 70 (left: 6 12 70) -> 12 + 70 = 82 (left: 6 82)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 * 10 = 70 (left: 6 12 70) -> 12 + 70 = 82 (left: 6 82) -> 6 * 82 = 492 (left: 492)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 * 10 = 70 (left: 6 12 70) -> 12 + 70 = 82 (left: 6 82) -> 6 * 82 = 492 (left: 492) -> 2 * 4 = 8 (left: 8 2)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "6 12 70"
                }
            },
            "Step 4": {
                "Step": "7 * 10 = 70 (left: 6 12 70) -> 70 / 6 = 11.67 (left: 11.67 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 * 10 = 70 (left: 6 12 70) -> 70 / 6 = 11.67 (left: 11.67 12) -> 11.67 * 12 = 140.04 (left: 140.04)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 10 = 70 (left: 6 12 70) -> 70 / 6 = 11.67 (left: 11.67 12) -> 11.67 * 12 = 140.04 (left: 140.04) -> There are no possible next steps for the input 140.04, as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "16 15"
                }
            },
            "Step 7": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> Input: 3 5 7 9 -> 3 * 5 = 15 (left: 7 9 15) -> 7 + 9 = 16 (left: 16 15) -> 16 * 15 = 240 (left: 240)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "0.5909090909090909 / 0.5 = 1.1818181818181818"
                }
            },
            "Step 8": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> 10 + 12 = 22 (left: 13 22) -> 13 / 22 = 0.5909090909090909 (left: 0.5909090909090909) -> 0.5909090909090909 / 0.5 = 1.1818181818181818 -> 0.590909",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "3 + 0 + 6 = 9"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "7 - 6 = 1 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "10 12 42"
                }
            },
            "Step 1": {
                "Step": "6 * 7 = 42 (left: 10 12 42) -> 42 - 10 = 32 (left: 12 32)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 7 = 42 (left: 10 12 42) -> 42 - 10 = 32 (left: 12 32) -> 12 / 32 = 0.375 (left: 0.375)  ",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 7 = 42 (left: 10 12 42) -> 42 - 10 = 32 (left: 12 32) -> 12 / 32 = 0.375 (left: 0.375)   -> 0.375 * 2 = 0.75",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "6 12 17"
                }
            },
            "Step 4": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 6 + 12 = 18 (left: 18 17)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 6 + 12 = 18 (left: 18 17) -> Possible next steps:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 6 + 12 = 18 (left: 18 17) -> Possible next steps: -> It seems like there was an error in the input. Can you please provide the correct input for me to generate the possible next steps?",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "16 15"
                }
            },
            "Step 7": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> Input: 3 5 7 9 -> 3 * 5 = 15 (left: 7 9 15) -> 7 + 9 = 16 (left: 16 15) -> 16 - 15 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "16 15"
                }
            },
            "Step 8": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> Input: 3 5 7 9 -> 3 * 5 = 15 (left: 7 9 15) -> 7 + 9 = 16 (left: 16 15) -> 31 *",
                "Pruning": null
            }
        },
        "Input": "6 7 10 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "955": {
        "puzzle": "7 8 8 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 7 = 5 (left: 5 8 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 1": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 - 8 = 4 (left: 8 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 - 8 = 4 (left: 8 4) -> 8 / 4 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 - 8 = 4 (left: 8 4) -> 8 / 4 = 2 (left: 2) -> There are no possible next steps as there is only one number given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "5 8 8"
                }
            },
            "Step 4": {
                "Step": "12 - 7 = 5 (left: 5 8 8) -> 4 + 6 = ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 7 = 5 (left: 5 8 8) -> 4 + 6 =  -> 4 + 6 = 10",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 7 = 5 (left: 5 8 8) -> 4 + 6 =  -> 4 + 6 = 10 -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "1.3333 * 2 = 2.6666"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1.3333 * 2 = 2.6666"
                }
            },
            "Step 7": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 8 + 8 = 16 (left: 16 12) -> 16 / 12 = 1.3333 (left: 1.3333) -> 1.3333 * 2 = 2.6666 -> 1.3333 + 2 = 3.3333 (left: 3.3333 2.6666)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 8 + 8 = 16 (left: 16 12) -> 16 / 12 = 1.3333 (left: 1.3333) -> 1.3333 * 2 = 2.6666 -> 1.3333 + 2 = 3.3333 (left: 3.3333 2.6666) -> 3.3333 / 2.6666 = 1.2499 (left: 1.2499)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "It seems like there was no input provided. Please provide the numbers to continue the calculations."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 / 7 = 1.14285714286 (left: 1.14285714286 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "5 8 12"
                }
            },
            "Step 1": {
                "Step": "12 - 7 = 5 (left: 5 8 12) -> 8 / 5 = 1.6 (left: 1.6 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 7 = 5 (left: 5 8 12) -> 8 / 5 = 1.6 (left: 1.6 12) -> 12 - 1.6 = 10.4 (left: 10.4 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 7 = 5 (left: 5 8 12) -> 8 / 5 = 1.6 (left: 1.6 12) -> 12 - 1.6 = 10.4 (left: 10.4 12) -> 10.4 - 12 = -1.6 (left: -1.6)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "8 12 56"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "5 8 8"
                }
            },
            "Step 4": {
                "Step": "12 - 7 = 5 (left: 5 8 8) -> 8 / 5 = 1.6 (left: 1.6 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 7 = 5 (left: 5 8 8) -> 8 / 5 = 1.6 (left: 1.6 8) -> 8 - 1.6 = 6.4 (left: 6.4 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 7 = 5 (left: 5 8 8) -> 8 / 5 = 1.6 (left: 1.6 8) -> 8 - 1.6 = 6.4 (left: 6.4 8) -> 6.4 * 8 = 51.2 (left: 51.2)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There are no possible next steps as there is only one number given."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no possible next steps as there is only one number given."
                }
            },
            "Step 7": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 - 8 = 4 (left: 8 4) -> 8 / 4 = 2 (left: 2) -> There are no possible next steps as there is only one number given. -> There are no possible next steps as there is only one number given.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 - 8 = 4 (left: 8 4) -> 8 / 4 = 2 (left: 2) -> There are no possible next steps as there is only one number given. -> There are no possible next steps as there is only one number given. -> There are no possible next steps as there is only one number given.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 * 8 = 56 (left: 56 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 1": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 8 + 8 = 16 (left: 16 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 8 + 8 = 16 (left: 16 12) -> 16 / 12 = 1.3333 (left: 1.3333)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 8 + 8 = 16 (left: 16 12) -> 16 / 12 = 1.3333 (left: 1.3333) -> 1.3333 * 2 = 2.6666",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "5 8 8"
                }
            },
            "Step 4": {
                "Step": "12 - 7 = 5 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 7 = 5 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 7 = 5 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11) -> 11 - 2 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There are no possible next steps as there is only one number given."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "1.3333 * 2 = 2.6666"
                }
            },
            "Step 7": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 8 + 8 = 16 (left: 16 12) -> 16 / 12 = 1.3333 (left: 1.3333) -> 1.3333 * 2 = 2.6666 -> 1.3333 / 2 = 0.6667",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 8 + 8 = 16 (left: 16 12) -> 16 / 12 = 1.3333 (left: 1.3333) -> 1.3333 * 2 = 2.6666 -> 1.3333 / 2 = 0.6667 -> 1.3333 + 2 = 3.3333 (left: 0.6667 3.3333)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 * 8 = 56 (left: 56 8 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 8 12"
                }
            },
            "Step 1": {
                "Step": "8 - 7 = 1 (left: 1 8 12) -> 8 * 1 = 8 (left: 8 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 7 = 1 (left: 1 8 12) -> 8 * 1 = 8 (left: 8 12) -> 12 / 8 = 1.5 (left: 1.5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 7 = 1 (left: 1 8 12) -> 8 * 1 = 8 (left: 8 12) -> 12 / 8 = 1.5 (left: 1.5) -> 1.5 * 8 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "5 8 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "5 8 8"
                }
            },
            "Step 4": {
                "Step": "12 - 7 = 5 (left: 5 8 8) -> 10 + 15 = 25 (left:",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 7 = 5 (left: 5 8 8) -> 10 + 15 = 25 (left: -> 10 - 15 = -5 (left: -5 15)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 7 = 5 (left: 5 8 8) -> 10 + 15 = 25 (left: -> 10 - 15 = -5 (left: -5 15) -> 15 - (-5) = 20 (left: 20)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "1.3333 * 2 = 2.6666"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "36 / 2 = 18"
                }
            },
            "Step 7": {
                "Step": "7 * 8 = 56 (left: 8 12 56) -> 56 - 8 = 48 (left: 12 48) -> 48 - 12 = 36 (left: 36) -> 36 / 2 = 18 -> 18 / 2 = 9 (left: 9 10)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 * 8 = 56 (left: 8 12 56) -> 56 - 8 = 48 (left: 12 48) -> 48 - 12 = 36 (left: 36) -> 36 / 2 = 18 -> 18 / 2 = 9 (left: 9 10) -> 9 + 10 = 19 (left: 19)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "-3 -0.625"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "7 + 8 = 15 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "5 8 12"
                }
            },
            "Step 1": {
                "Step": "12 - 7 = 5 (left: 5 8 12) -> 5 - 8 = -",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 7 = 5 (left: 5 8 12) -> 5 - 8 = - -> 5 - 8 = -3",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 7 = 5 (left: 5 8 12) -> 5 - 8 = - -> 5 - 8 = -3 -> 5 / -8 = -0.625 (left: -3 -0.625)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "5 8 8"
                }
            },
            "Step 4": {
                "Step": "12 - 7 = 5 (left: 5 8 8) -> 5 + 8 = 13 (left: 8 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 7 = 5 (left: 5 8 8) -> 5 + 8 = 13 (left: 8 13) -> 8 - 13 = -5 (left: -5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 7 = 5 (left: 5 8 8) -> 5 + 8 = 13 (left: 8 13) -> 8 - 13 = -5 (left: -5) -> There are no possible next steps with the input of -5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "There are no possible next steps with the input of -5."
                }
            },
            "Step 7": {
                "Step": "12 - 7 = 5 (left: 5 8 8) -> 5 + 8 = 13 (left: 8 13) -> 8 - 13 = -5 (left: -5) -> There are no possible next steps with the input of -5. -> There are no possible next steps with the input of -5.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 - 7 = 5 (left: 5 8 8) -> 5 + 8 = 13 (left: 8 13) -> 8 - 13 = -5 (left: -5) -> There are no possible next steps with the input of -5. -> There are no possible next steps with the input of -5. -> There are no possible next steps with the input of -5.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "7 * 8 = 56 (left: 8 12 56)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "5 8 12"
                }
            },
            "Step 1": {
                "Step": "12 - 7 = 5 (left: 5 8 12) -> 5 * 8 = 40 (left: 40 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 7 = 5 (left: 5 8 12) -> 5 * 8 = 40 (left: 40 12) -> 40 - 12 = 28 (left: 28)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 7 = 5 (left: 5 8 12) -> 5 * 8 = 40 (left: 40 12) -> 40 - 12 = 28 (left: 28) -> 2 * 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "5 8 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "5 8 8"
                }
            },
            "Step 4": {
                "Step": "12 - 7 = 5 (left: 5 8 8) -> 8 / 5 = 1.6 (left: 1.6 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 7 = 5 (left: 5 8 8) -> 8 / 5 = 1.6 (left: 1.6 8) -> 1.6 + 8 = 9.6 (left: 8 9.6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 7 = 5 (left: 5 8 8) -> 8 / 5 = 1.6 (left: 1.6 8) -> 1.6 + 8 = 9.6 (left: 8 9.6) -> 8 - 9.6 = -1.6 (left: -1.6)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "1.3333 * 2 = 2.6666"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no possible next steps as there is only one number given."
                }
            },
            "Step 7": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 - 8 = 4 (left: 8 4) -> 8 / 4 = 2 (left: 2) -> There are no possible next steps as there is only one number given. -> There are no possible next steps as there is only one number given.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 - 8 = 4 (left: 8 4) -> 8 / 4 = 2 (left: 2) -> There are no possible next steps as there is only one number given. -> There are no possible next steps as there is only one number given. -> There are no possible next steps as there is only one number given.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "8 - 7 = 1 (left: 1 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "5 8 12"
                }
            },
            "Step 1": {
                "Step": "12 - 7 = 5 (left: 5 8 12) -> 5 * 8 = 40 (left: 12 40)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 7 = 5 (left: 5 8 12) -> 5 * 8 = 40 (left: 12 40) -> Input: 28 31 12",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 7 = 5 (left: 5 8 12) -> 5 * 8 = 40 (left: 12 40) -> Input: 28 31 12 -> 28 - 12 = 16 (left: 16 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "8 12 56"
                }
            },
            "Step 4": {
                "Step": "7 * 8 = 56 (left: 8 12 56) -> 56 - 8 = 48 (left: 12 48)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 * 8 = 56 (left: 8 12 56) -> 56 - 8 = 48 (left: 12 48) -> 48 - 12 = 36 (left: 36)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 8 = 56 (left: 8 12 56) -> 56 - 8 = 48 (left: 12 48) -> 48 - 12 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1.3333 * 2 = 2.6666"
                }
            },
            "Step 7": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 8 + 8 = 16 (left: 16 12) -> 16 / 12 = 1.3333 (left: 1.3333) -> 1.3333 * 2 = 2.6666 -> 1.3333 * 2 = 2.6666 (already given)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 8 + 8 = 16 (left: 16 12) -> 16 / 12 = 1.3333 (left: 1.3333) -> 1.3333 * 2 = 2.6666 -> 1.3333 * 2 = 2.6666 (already given) -> 1.3333 - 2 = -0.6667",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "8 - 7 = 1 (left: 1 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 1": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 8 + 8 = 16 (left: 16 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 8 + 8 = 16 (left: 16 12) -> 16 - 12 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 8 + 8 = 16 (left: 16 12) -> 16 - 12 = 4 (left: 4) -> 4 + 4 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "5 8 8"
                }
            },
            "Step 4": {
                "Step": "12 - 7 = 5 (left: 5 8 8) -> Input: 3",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 7 = 5 (left: 5 8 8) -> Input: 3 -> There is only one number provided (3), so there are no possible next steps to perform any operations on.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 7 = 5 (left: 5 8 8) -> Input: 3 -> There is only one number provided (3), so there are no possible next steps to perform any operations on. -> There is only one number provided, so there are no possible operations to perform.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no possible next steps as there is only one number given."
                }
            },
            "Step 7": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 - 8 = 4 (left: 8 4) -> 8 / 4 = 2 (left: 2) -> There are no possible next steps as there is only one number given. -> None - as there is only one number given.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 - 8 = 4 (left: 8 4) -> 8 / 4 = 2 (left: 2) -> There are no possible next steps as there is only one number given. -> None - as there is only one number given. -> No possible next steps as there is only one number given.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "12",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 1": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 - 8 = 4 (left: 8 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 - 8 = 4 (left: 8 4) -> 8 / 4 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 - 8 = 4 (left: 8 4) -> 8 / 4 = 2 (left: 2) -> No further steps can be taken with just one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "5 8 8"
                }
            },
            "Step 4": {
                "Step": "12 - 7 = 5 (left: 5 8 8) -> 8 / 5 = 1.6 (left: 1.6 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 7 = 5 (left: 5 8 8) -> 8 / 5 = 1.6 (left: 1.6 8) -> 0.5 + 3 = 3.5 (left: ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 7 = 5 (left: 5 8 8) -> 8 / 5 = 1.6 (left: 1.6 8) -> 0.5 + 3 = 3.5 (left:  -> It seems like there was no input provided. Please provide the numbers to continue the calculations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "1.3333 * 2 = 2.6666"
                }
            },
            "Step 7": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 8 + 8 = 16 (left: 16 12) -> 16 / 12 = 1.3333 (left: 1.3333) -> 1.3333 * 2 = 2.6666 -> 3 + 5 = 8 (left: 7 8 9)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 8 + 8 = 16 (left: 16 12) -> 16 / 12 = 1.3333 (left: 1.3333) -> 1.3333 * 2 = 2.6666 -> 3 + 5 = 8 (left: 7 8 9) -> 7 + 8 = 15 (left: 9 15)",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "12 - 7 = 5 (left: 5 8 12)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 1": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 + 8 = 20 (left: 8 20)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 + 8 = 20 (left: 8 20) -> 20 - 8 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 + 8 = 20 (left: 8 20) -> 20 - 8 = 12 (left: 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "8 12 56"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "5 8 8"
                }
            },
            "Step 4": {
                "Step": "12 - 7 = 5 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 7 = 5 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8 8) -> 3 + 8 = 11 (left: 8 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 7 = 5 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8 8) -> 3 + 8 = 11 (left: 8 11) -> 8 * 11 = 88 (left: 88)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "4 + 4 = 8"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "1.3333 * 2 = 2.6666"
                }
            },
            "Step 7": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 8 + 8 = 16 (left: 16 12) -> 16 / 12 = 1.3333 (left: 1.3333) -> 1.3333 * 2 = 2.6666 -> 2 * 2 = 4",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 8 + 8 = 16 (left: 16 12) -> 16 / 12 = 1.3333 (left: 1.3333) -> 1.3333 * 2 = 2.6666 -> 2 * 2 = 4 -> 2 + 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "No further steps can be taken with just one number."
                }
            }
        },
        "Input": "7 8 8 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "956": {
        "puzzle": "3 4 6 8",
        "Agent 0": {
            "Step 0": {
                "Step": "4 * 6 = 24 (left: 3 8 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 24 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 24 24) -> 24 / 24 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 24 24) -> 24 / 24 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24) -> 24 / 3 = 8 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "1.33 6 8"
                }
            },
            "Step 5": {
                "Step": "4 / 3 = 1.33 (left: 1.33 6 8) -> 1.33 + 6 = 7.33 (left: 7.33 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 3 = 1.33 (left: 1.33 6 8) -> 1.33 + 6 = 7.33 (left: 7.33 8) -> 8 - 7.33 = 0.67 (left: 0.67)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "3 * 24 = 72"
                }
            },
            "Step 7": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 / 3 = 2.66667 (approximation) -> 8 * 3 = 24 (left: 3 24) -> 3 * 24 = 72 -> 3 + 24 = 27 (left: 27 = 72)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 / 3 = 2.66667 (approximation) -> 8 * 3 = 24 (left: 3 24) -> 3 * 24 = 72 -> 3 + 24 = 27 (left: 27 = 72) -> 27 + 72 = 99 (left: 99)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "16 * 2 = 32"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 6 = 24 (left: 3 8 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 - 3 = 21 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 - 3 = 21 (left: -> 21 / 3 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 - 3 = 21 (left: -> 21 / 3 = 7 (left: 7) -> 7 * 8 = 56 (left: 8 56)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 3 * 8 = 24 (left: 8 24)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 3 * 8 = 24 (left: 8 24) -> 8 / 24 = 0.3333333333333333 (left: 0.3333333333333333)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 3 * 8 = 24 (left: 8 24) -> 8 / 24 = 0.3333333333333333 (left: 0.3333333333333333) -> 0.3333333333333333 * 3 = 1.0",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "0.67"
                }
            },
            "Step 7": {
                "Step": "4 / 3 = 1.33 (left: 1.33 6 8) -> 1.33 + 6 = 7.33 (left: 7.33 8) -> 8 - 7.33 = 0.67 (left: 0.67) -> 0.67 * 2 = 1.34",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 / 3 = 1.33 (left: 1.33 6 8) -> 1.33 + 6 = 7.33 (left: 7.33 8) -> 8 - 7.33 = 0.67 (left: 0.67) -> 0.67 * 2 = 1.34 -> 0.67 - 2 = -1.33",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 / 3 = 1.33 (left: 1.33 6 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24) -> 24 / 3 = 8 (left: 8 24)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24) -> 24 / 3 = 8 (left: 8 24) -> 24 / 8 = 3 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24) -> 24 / 3 = 8 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 8 / 3 = 2.66667 (left: 2.66667)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "2.625 / 2 = 1.3125"
                }
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 - 3 = 21 (left: 8 21) -> 21 / 8 = 2.625 (left: 2.625) -> 2.625 / 2 = 1.3125 -> 2.625 + 2 = 4.625 (left: 4.625)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "0.4583 * 2 = 0.9166"
                }
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 + 3 = 11 (left: 11 24) -> 11 / 24 = 0.4583 (left: 0.4583) -> 0.4583 * 2 = 0.9166 -> 2 / 0.4583 = 4.3636",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "0.67"
                }
            },
            "Step 7": {
                "Step": "4 / 3 = 1.33 (left: 1.33 6 8) -> 1.33 + 6 = 7.33 (left: 7.33 8) -> 8 - 7.33 = 0.67 (left: 0.67) -> 0.67 + 2 = 2.67",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 / 3 = 1.33 (left: 1.33 6 8) -> 1.33 + 6 = 7.33 (left: 7.33 8) -> 8 - 7.33 = 0.67 (left: 0.67) -> 0.67 + 2 = 2.67 -> 2 / 0.67 = 2.985 (left: 2.985 2 2.67)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 / 3 = 2 (left: 2 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 24) -> 8 * 3 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 24) -> 8 * 3 = 24 (left: 24) -> Answer: ((3 * 4) / 6) * 8 = 24",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "3 8 24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24) -> 24 / 3 = 8 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "3 8"
                }
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24) -> 24 / 3 = 8 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "1 + 1 = 2"
                }
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 24 24) -> 24 / 24 = 1 (left: 1) -> 1 + 1 = 2 -> 1 + 2 = 3 (left: 1 3 =)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "3 24"
                }
            },
            "Step 7": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 8 = 3 (left: 3 24) -> 3 + 24 = 27 (left: 27)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 8 = 3 (left: 3 24) -> 3 + 24 = 27 (left: 27) -> 27 + 2 = 29",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 * 6 = 24 (left: 3 8 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 - 3 = 21 (left: 8 21)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 - 3 = 21 (left: 8 21) -> 21 / 8 = 2.625 (left: 2.625)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 - 3 = 21 (left: 8 21) -> 21 / 8 = 2.625 (left: 2.625) -> 2.625 / 2 = 1.3125",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24) -> 24 / 3 = 8 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 5 + 5 = 10 (left: 5 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24) -> 24 / 3 = 8 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 5 + 5 = 10 (left: 5 10) -> 5 + 10 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "0.4583 * 2 = 0.9166"
                }
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 + 3 = 11 (left: 11 24) -> 11 / 24 = 0.4583 (left: 0.4583) -> 0.4583 * 2 = 0.9166 -> 0.4583 - 2 = -1.5417",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "0.4583 * 2 = 0.9166"
                }
            },
            "Step 7": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 + 3 = 11 (left: 11 24) -> 11 / 24 = 0.4583 (left: 0.4583) -> 0.4583 * 2 = 0.9166 -> 0.4583 - 2 = -1.5417",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 + 3 = 11 (left: 11 24) -> 11 / 24 = 0.4583 (left: 0.4583) -> 0.4583 * 2 = 0.9166 -> 0.4583 - 2 = -1.5417 -> -1.5417 * 2 = -3.0834 (left: -3.0834)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "1 + 1 = 2"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "4 - 3 = 1 (left: 1 6 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 8 = 3 (left: 3 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 8 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 8 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5) -> There are no possible next steps since there is only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 / 3 = 2.66667 (approximation)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 / 3 = 2.66667 (approximation) -> 8 * 3 = 24 (left: 3 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 / 3 = 2.66667 (approximation) -> 8 * 3 = 24 (left: 3 24) -> 3 * 24 = 72",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "1 3 ="
                }
            },
            "Step 7": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 24 24) -> 24 / 24 = 1 (left: 1) -> 1 + 1 = 2 -> 1 + 2 = 3 (left: 1 3 =) -> 1 + 3 = 4",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 24 24) -> 24 / 24 = 1 (left: 1) -> 1 + 1 = 2 -> 1 + 2 = 3 (left: 1 3 =) -> 1 + 3 = 4 -> 3 + 1 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "1.3125 - 5.25 ="
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "8 - 6 = 2 (left: 2 4 2)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 8) -> 8 + 8 = 16 (left: 16)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 8) -> 8 + 8 = 16 (left: 16) -> 16 / 2 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24) -> 24 / 3 = 8 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 8 / 3 = 2.67 (left: 2.67)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "16 / 2 = 8"
                }
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 8) -> 8 + 8 = 16 (left: 16) -> 16 / 2 = 8 -> 8 * 2 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "2.625 / 2 = 1.3125"
                }
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 - 3 = 21 (left: 8 21) -> 21 / 8 = 2.625 (left: 2.625) -> 2.625 / 2 = 1.3125 -> 2.625 * 2 = 5.25 (left: 5.25)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "0.4583 * 2 = 0.9166"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2 / 0.4583 = 4.3636"
                }
            },
            "Step 7": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 + 3 = 11 (left: 11 24) -> 11 / 24 = 0.4583 (left: 0.4583) -> 0.4583 * 2 = 0.9166 -> 2 / 0.4583 = 4.3636 -> There is an error in the input. Division by zero is undefined.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 + 3 = 11 (left: 11 24) -> 11 / 24 = 0.4583 (left: 0.4583) -> 0.4583 * 2 = 0.9166 -> 2 / 0.4583 = 4.3636 -> There is an error in the input. Division by zero is undefined. -> Please input valid numbers to continue.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "6 - 4 = 2 (left: 2 3 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 8) -> 8 + 8 = 16 (left: 16)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 8) -> 8 + 8 = 16 (left: 16) -> 16 * 2 = 32",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24) -> 24 / 3 = 8 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 8 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24) -> 24 / 3 = 8 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 8 11) -> 8 - 11 = -3 (left: -3)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "3 8 24"
                }
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 8 = 3 (left: 3 24)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "3 * 24 = 72"
                }
            },
            "Step 7": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 / 3 = 2.66667 (approximation) -> 8 * 3 = 24 (left: 3 24) -> 3 * 24 = 72 -> 3 * 24 = 72 (left: 72 = 72)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 / 3 = 2.66667 (approximation) -> 8 * 3 = 24 (left: 3 24) -> 3 * 24 = 72 -> 3 * 24 = 72 (left: 72 = 72) -> 72 - 72 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "2.625 / 2 = 1.3125"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 6 7 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 8) -> 8 * 8 = 64 (left: 64)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 8) -> 8 * 8 = 64 (left: 64) -> No possible next steps as there is only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24) -> 24 / 3 = 8 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "2.625 / 2 = 1.3125"
                }
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 - 3 = 21 (left: 8 21) -> 21 / 8 = 2.625 (left: 2.625) -> 2.625 / 2 = 1.3125 -> 2.625 * 2 = 5.25 (left: 1.3125 5.25)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 - 3 = 21 (left: 8 21) -> 21 / 8 = 2.625 (left: 2.625) -> 2.625 / 2 = 1.3125 -> 2.625 * 2 = 5.25 (left: 1.3125 5.25) -> 1.3125 - 5.25 =",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "0.4583 * 2 = 0.9166"
                }
            },
            "Step 7": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 + 3 = 11 (left: 11 24) -> 11 / 24 = 0.4583 (left: 0.4583) -> 0.4583 * 2 = 0.9166 -> 2 - 0.4583 = 1.5417",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 + 3 = 11 (left: 11 24) -> 11 / 24 = 0.4583 (left: 0.4583) -> 0.4583 * 2 = 0.9166 -> 2 - 0.4583 = 1.5417 -> 2 / 0.4583 = 4.3634",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "6 - 4 = 2 (left: 2 3 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 + 3 = 11 (left: 11 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 + 3 = 11 (left: 11 24) -> 11 / 24 = 0.4583 (left: 0.4583)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 + 3 = 11 (left: 11 24) -> 11 / 24 = 0.4583 (left: 0.4583) -> 0.4583 * 2 = 0.9166",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 3 * 8 = 24 (left: 8 24)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 3 * 8 = 24 (left: 8 24) -> 24 - 16 = 8 (left: 8 16)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 3 * 8 = 24 (left: 8 24) -> 24 - 16 = 8 (left: 8 16) -> 8 * 16 = 128 (left: 128)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "There are no possible next steps since there is only one number provided."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "1.3125 - 5.25 ="
                }
            },
            "Step 7": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 - 3 = 21 (left: 8 21) -> 21 / 8 = 2.625 (left: 2.625) -> 2.625 / 2 = 1.3125 -> 2.625 * 2 = 5.25 (left: 1.3125 5.25) -> 1.3125 - 5.25 = -> 1.3125 - 5.25 = -3.9375",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 - 3 = 21 (left: 8 21) -> 21 / 8 = 2.625 (left: 2.625) -> 2.625 / 2 = 1.3125 -> 2.625 * 2 = 5.25 (left: 1.3125 5.25) -> 1.3125 - 5.25 = -> 1.3125 - 5.25 = -3.9375 -> 1.3125 * 5.25 = 6.890625",
                "Pruning": null
            }
        },
        "Input": "3 4 6 8",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "957": {
        "puzzle": "1 7 9 11",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 7 = 8 (left: 8 9 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "8 9 11"
                }
            },
            "Step 1": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 8 + 9 = 17 (left: 17 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 8 + 9 = 17 (left: 17 11) -> 17 - 11 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 8 + 9 = 17 (left: 17 11) -> 17 - 11 = 6 (left: 6) -> 6 + 8 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "1 7 2"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "6 9 11"
                }
            },
            "Step 4": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 9 * 11 = 99 (left: 6)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 9 * 11 = 99 (left: 6) -> 6 * 8 = 48 (left: 8 48)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 9 * 11 = 99 (left: 6) -> 6 * 8 = 48 (left: 8 48) -> 20 / 5 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "There are no possible next steps with just the number 59."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "2.5 1.5"
                }
            },
            "Step 7": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 9 / 6 = 1.5 -> 9 + 6 = 15 (left: 6 15 1.5) -> 15 / 6 = 2.5 (left: 2.5 1.5) -> 2.5 * 1.5 = 3.75 (left: 3.75)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "There are no possible next steps with just the number 59."
                }
            },
            "Step 8": {
                "Step": "9 + 1 = 10 (left: 7 10 11) -> 7 * 10 = 70 (left: 11 70) -> 70 - 11 = 59 (left: 59) -> There are no possible next steps with just the number 59. -> There are no possible next steps with just the number 59.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 - 1 = 6 (left: 6 9 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "7 10 11"
                }
            },
            "Step 1": {
                "Step": "9 + 1 = 10 (left: 7 10 11) -> 7 * 10 = 70 (left: 11 70)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 1 = 10 (left: 7 10 11) -> 7 * 10 = 70 (left: 11 70) -> 11 + 70 = 81 (left: 81)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 + 1 = 10 (left: 7 10 11) -> 7 * 10 = 70 (left: 11 70) -> 11 + 70 = 81 (left: 81) -> 81 + 2 = 83",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "6 9 11"
                }
            },
            "Step 4": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 9 - 6 = 3 (left: 3 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 9 - 6 = 3 (left: 3 11) -> 5 + 5 = 10 (left: 10 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 9 - 6 = 3 (left: 3 11) -> 5 + 5 = 10 (left: 10 10) -> 10 + 10 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "There are no possible next steps with just the number 59."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "2.5 1.5"
                }
            },
            "Step 7": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 9 / 6 = 1.5 -> 9 + 6 = 15 (left: 6 15 1.5) -> 15 / 6 = 2.5 (left: 2.5 1.5) -> 2.5 / 1.5 = 1.6666666666666667 (left: 1.6666666666666667)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "There are no possible next steps with just the number 59."
                }
            },
            "Step 8": {
                "Step": "9 + 1 = 10 (left: 7 10 11) -> 7 * 10 = 70 (left: 11 70) -> 70 - 11 = 59 (left: 59) -> There are no possible next steps with just the number 59. -> There are no possible next steps with just the number 59.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 - 1 = 6 (left: 6 9 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "1 7 2"
                }
            },
            "Step 1": {
                "Step": "11 - 9 = 2 (left: 1 7 2) -> 7 - 1 = 6 (left: 6 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 9 = 2 (left: 1 7 2) -> 7 - 1 = 6 (left: 6 2) -> Possible next steps:",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 9 = 2 (left: 1 7 2) -> 7 - 1 = 6 (left: 6 2) -> Possible next steps: -> It appears that the input is missing. Please provide the input for me to generate the possible next steps. Thank you.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "6 9 11"
                }
            },
            "Step 4": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 11 - 9 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 11 - 9 = 2 (left: 2) -> There are no possible next steps with just one number given.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 11 - 9 = 2 (left: 2) -> There are no possible next steps with just one number given. -> Provide more numbers to perform mathematical operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "2.5 1.5"
                }
            },
            "Step 7": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 9 / 6 = 1.5 -> 9 + 6 = 15 (left: 6 15 1.5) -> 15 / 6 = 2.5 (left: 2.5 1.5) -> 2.5 - 1.5 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "It appears that the input is missing. Please provide the input for me to generate the possible next steps. Thank you."
                }
            },
            "Step 8": {
                "Step": "11 - 9 = 2 (left: 1 7 2) -> 7 - 1 = 6 (left: 6 2) -> Possible next steps: -> It appears that the input is missing. Please provide the input for me to generate the possible next steps. Thank you. -> Without the input values, I am unable to generate the possible next steps. Please provide the input values so I can assist you further. Thank you.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "1 * 7 = 7 (left: 7 9 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "8 9 11"
                }
            },
            "Step 1": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 11 - 9 = 2 (left: 2 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 11 - 9 = 2 (left: 2 9) -> 9 - 2 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 11 - 9 = 2 (left: 2 9) -> 9 - 2 = 7 (left: 7) -> 7 - 2 = 5 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "6 9 11"
                }
            },
            "Step 4": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 9 + 11 = 20 (left: 6 20)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 9 + 11 = 20 (left: 6 20) -> 20 / 6 = 3.33 (left: 3.33)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 9 + 11 = 20 (left: 6 20) -> 20 / 6 = 3.33 (left: 3.33) -> There are no possible next steps for the input 3.33 as it is a single number and cannot be combined with any other numbers using the basic arithmetic operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "2.5 1.5"
                }
            },
            "Step 7": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 9 / 6 = 1.5 -> 9 + 6 = 15 (left: 6 15 1.5) -> 15 / 6 = 2.5 (left: 2.5 1.5) -> 2.5 - 1.5 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "Provide more numbers to perform mathematical operations."
                }
            },
            "Step 8": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 11 - 9 = 2 (left: 2) -> There are no possible next steps with just one number given. -> Provide more numbers to perform mathematical operations. -> 8 - 8 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "There is only one number provided, so there are no possible next steps to perform any operations."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 + 7 = 8 (left: 8 9 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "7 10 11"
                }
            },
            "Step 1": {
                "Step": "9 + 1 = 10 (left: 7 10 11) -> 10 - 7 = 3 (left: 3 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 1 = 10 (left: 7 10 11) -> 10 - 7 = 3 (left: 3 11) -> 3 * 11 = 33 (left: 33)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 + 1 = 10 (left: 7 10 11) -> 10 - 7 = 3 (left: 3 11) -> 3 * 11 = 33 (left: 33) -> 33 / 8 = 4.125 (left: 8)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "6 9 11"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "6 9 11"
                }
            },
            "Step 4": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 9 / 6 = 1.5",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 9 / 6 = 1.5 -> 9 + 6 = 15 (left: 6 15 1.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 9 / 6 = 1.5 -> 9 + 6 = 15 (left: 6 15 1.5) -> 15 / 6 = 2.5 (left: 2.5 1.5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "2.5 1.5"
                }
            },
            "Step 7": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 9 / 6 = 1.5 -> 9 + 6 = 15 (left: 6 15 1.5) -> 15 / 6 = 2.5 (left: 2.5 1.5) -> 2.5 - 1.5 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "Provide more numbers to perform mathematical operations."
                }
            },
            "Step 8": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 11 - 9 = 2 (left: 2) -> There are no possible next steps with just one number given. -> Provide more numbers to perform mathematical operations. -> 20 - 5 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "There are no possible next steps with just the number 59."
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "9 + 1 = 10 (left: 7 10 11)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "7 10 11"
                }
            },
            "Step 1": {
                "Step": "9 + 1 = 10 (left: 7 10 11) -> 7 * 10 = 70 (left: 11 70)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 1 = 10 (left: 7 10 11) -> 7 * 10 = 70 (left: 11 70) -> 70 - 11 = 59 (left: 59)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 + 1 = 10 (left: 7 10 11) -> 7 * 10 = 70 (left: 11 70) -> 70 - 11 = 59 (left: 59) -> There are no possible next steps with just the number 59.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "6 9 11"
                }
            },
            "Step 4": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 11 - 9 = 2 (left: 6)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 11 - 9 = 2 (left: 6) -> 6 * 8 = 48 (left: 8 48)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 11 - 9 = 2 (left: 6) -> 6 * 8 = 48 (left: 8 48) -> 8 * 6 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "There are no possible next steps with just the number 59."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "2.5 1.5"
                }
            },
            "Step 7": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 9 / 6 = 1.5 -> 9 + 6 = 15 (left: 6 15 1.5) -> 15 / 6 = 2.5 (left: 2.5 1.5) -> 2.5 * 1.5 = 3.75 (left: 3.75)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "6 8"
                }
            },
            "Step 8": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 9 + 11 = 20 (left: 8 20) -> 20 - 8 = 12 (left: 12) -> 12 / 2 = 6 (left: 6 8) -> 14 + 2 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "It appears that the input is missing. Please provide the input for me to generate the possible next steps. Thank you."
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "7 - 1 = 6 (left: 6 9 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "1 7 2"
                }
            },
            "Step 1": {
                "Step": "11 - 9 = 2 (left: 1 7 2) -> 7 - 1 = 6 (left: 6 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 9 = 2 (left: 1 7 2) -> 7 - 1 = 6 (left: 6 2) -> 6 + 2 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 9 = 2 (left: 1 7 2) -> 7 - 1 = 6 (left: 6 2) -> 6 + 2 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1 7 2"
                }
            },
            "Step 4": {
                "Step": "11 - 9 = 2 (left: 1 7 2) -> 7 / 1 = 7 (left: 7 2)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 9 = 2 (left: 1 7 2) -> 7 / 1 = 7 (left: 7 2) -> 7 * 2 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 9 = 2 (left: 1 7 2) -> 7 / 1 = 7 (left: 7 2) -> 7 * 2 = 14 (left: 14) -> 14 / 7 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "It appears that the input is missing. Please provide the input for me to generate the possible next steps. Thank you."
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "2.5 1.5"
                }
            },
            "Step 7": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 9 / 6 = 1.5 -> 9 + 6 = 15 (left: 6 15 1.5) -> 15 / 6 = 2.5 (left: 2.5 1.5) -> 2.5 - 1.5 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "There are no possible next steps with just the number 59."
                }
            },
            "Step 8": {
                "Step": "9 + 1 = 10 (left: 7 10 11) -> 7 * 10 = 70 (left: 11 70) -> 70 - 11 = 59 (left: 59) -> There are no possible next steps with just the number 59. -> There are no possible next steps with just the number 59.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "1 + 7 = 8 (left: 8 9 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "8 9 11"
                }
            },
            "Step 1": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 9 + 11 = 20 (left: 8 20)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 9 + 11 = 20 (left: 8 20) -> 20 - 8 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 9 + 11 = 20 (left: 8 20) -> 20 - 8 = 12 (left: 12) -> 12 / 2 = 6 (left: 6 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "6 9 11"
                }
            },
            "Step 4": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 9 * 11 = 99 (",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 9 * 11 = 99 ( -> 9 - 11 = -2 (left: -2 = 99)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 9 * 11 = 99 ( -> 9 - 11 = -2 (left: -2 = 99) -> -2 + 99 = 97 (left: 99 97)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "2.5 1.5"
                }
            },
            "Step 7": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 9 / 6 = 1.5 -> 9 + 6 = 15 (left: 6 15 1.5) -> 15 / 6 = 2.5 (left: 2.5 1.5) -> 2.5 * 1.5 = 3.75 (left: 3.75)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "6 8"
                }
            },
            "Step 8": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 9 + 11 = 20 (left: 8 20) -> 20 - 8 = 12 (left: 12) -> 12 / 2 = 6 (left: 6 8) -> 6 * 8 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "2.5 1.5"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "7 - 1 = 6 (left: 6 9 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "8 9 11"
                }
            },
            "Step 1": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 8 + 9 = 17 (left: 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 8 + 9 = 17 (left: 11) -> 11 * 2 = 22 (left: 2 22)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 8 + 9 = 17 (left: 11) -> 11 * 2 = 22 (left: 2 22) -> 22 / 2 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "6 9 11"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "6 9 11"
                }
            },
            "Step 4": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 9 / 11 = 0.8181818181818182 (left: 6 0.8181818181818182)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 9 / 11 = 0.8181818181818182 (left: 6 0.8181818181818182) -> 6 + 0.8181818181818182 = 6.818181818181818 (left: 6.818",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 9 / 11 = 0.8181818181818182 (left: 6 0.8181818181818182) -> 6 + 0.8181818181818182 = 6.818181818181818 (left: 6.818 -> 6.818 / 2 = 3.409 (left: 3.409)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "6 8"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "2.5 1.5"
                }
            },
            "Step 7": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 9 / 6 = 1.5 -> 9 + 6 = 15 (left: 6 15 1.5) -> 15 / 6 = 2.5 (left: 2.5 1.5) -> 2.5 / 1.5 = 1.6666666666666667 (left: 1.6666666666666667)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "2.5 1.5"
                }
            },
            "Step 8": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 9 / 6 = 1.5 -> 9 + 6 = 15 (left: 6 15 1.5) -> 15 / 6 = 2.5 (left: 2.5 1.5) -> 2.5 + 1.5 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "81 + 2 = 83"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "11 - 9 = 2 (left: 1 7 2)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "7 10 11"
                }
            },
            "Step 1": {
                "Step": "9 + 1 = 10 (left: 7 10 11) -> 10 - 7 = 3 (left: 3 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 1 = 10 (left: 7 10 11) -> 10 - 7 = 3 (left: 3 11) -> 11 / 3 = 3.67 (left: 3.67)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 + 1 = 10 (left: 7 10 11) -> 10 - 7 = 3 (left: 3 11) -> 11 / 3 = 3.67 (left: 3.67) -> There is only one number provided, so there are no possible next steps to perform any operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "6 8"
                }
            },
            "Step 4": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 9 + 11 = 20 (left: 8 20) -> 20 - 8 = 12 (left: 12) -> 12 / 2 = 6 (left: 6 8) -> 6 + 8 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "1 7 2"
                }
            },
            "Step 5": {
                "Step": "11 - 9 = 2 (left: 1 7 2) -> 7 - 1 = 6 (left: 6 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 9 = 2 (left: 1 7 2) -> 7 - 1 = 6 (left: 6 2) -> 6 - 2 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "2.5 1.5"
                }
            },
            "Step 7": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 9 / 6 = 1.5 -> 9 + 6 = 15 (left: 6 15 1.5) -> 15 / 6 = 2.5 (left: 2.5 1.5) -> 2.5 + 1.5 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "81 + 2 = 83"
                }
            },
            "Step 8": {
                "Step": "9 + 1 = 10 (left: 7 10 11) -> 7 * 10 = 70 (left: 11 70) -> 11 + 70 = 81 (left: 81) -> 81 + 2 = 83 -> 2 * 81 = 162 (left: 162)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "7 - 2 = 5 ("
                }
            }
        },
        "Input": "1 7 9 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "958": {
        "puzzle": "2 3 6 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 2 = 11 (left: 6 11 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 9 13"
                }
            },
            "Step 1": {
                "Step": "6 + 3 = 9 (left: 2 9 13) -> 13 / 2 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 3 = 9 (left: 2 9 13) -> 13 / 2 =  -> 13 / 2 = 6.5",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 3 = 9 (left: 2 9 13) -> 13 / 2 =  -> 13 / 2 = 6.5 -> There are no possible next steps for the equation 13 / 2 = 6.5 as it is already simplified to its final form.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "6 3 11"
                }
            },
            "Step 4": {
                "Step": "13 - 2 = 11 (left: 6 3 11) -> Input: 4 2",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 2 = 11 (left: 6 3 11) -> Input: 4 2 -> 4 * 2 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 2 = 11 (left: 6 3 11) -> Input: 4 2 -> 4 * 2 = 8 (left: 8) -> 8 - 8 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There are no possible next steps for the equation 13 / 2 = 6.5 as it is already simplified to its final form."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "3.33 62"
                }
            },
            "Step 7": {
                "Step": "13 - 2 = 11 (left: 6 3 11) -> 11 - 3 = 8 (left: 6 8) -> 14 + 48 = 62 (left: 1.33 2 62) -> 1.33 + 2 = 3.33 (left: 3.33 62) -> 62 - 3.33 = 58.67 (left: 58.67)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "8 + 8 = 16"
                }
            },
            "Step 8": {
                "Step": "6 + 3 = 9 (left: 2 9 13) -> 13 - 9 = 4 (left: 2 4) -> 2 * 4 = 8 (left: 8) -> 8 + 8 = 16 -> 8 * 8 = 64 (left: 16 64)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 2 9 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 - 3 = 9 (left: 9 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 - 3 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 - 3 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21) -> 21 * 2 = 42 (left: 42)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "6 11 "
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "2 9 13"
                }
            },
            "Step 4": {
                "Step": "6 + 3 = 9 (left: 2 9 13) -> 9 / 2 = 4.5 (left: 4.5 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 3 = 9 (left: 2 9 13) -> 9 / 2 = 4.5 (left: 4.5 13) -> 13 / 4.5 = 2.888888888888889 (left: 2.888888888888889)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 3 = 9 (left: 2 9 13) -> 9 / 2 = 4.5 (left: 4.5 13) -> 13 / 4.5 = 2.888888888888889 (left: 2.888888888888889) -> 2.888888888888889 + 2 = 4.888888888888889 (left: 4.888888888888889)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "16 / 2 = 8"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "3.33 62"
                }
            },
            "Step 7": {
                "Step": "13 - 2 = 11 (left: 6 3 11) -> 11 - 3 = 8 (left: 6 8) -> 14 + 48 = 62 (left: 1.33 2 62) -> 1.33 + 2 = 3.33 (left: 3.33 62) -> 62 - 3.33 = 58.67 (left: 58.67)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "2 64"
                }
            },
            "Step 8": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 3 + 12 = 15 (left: 15) -> There is only one possible next step: -> 8 * 8 = 64 (left: 2 64) -> 2 * 64 = 128 (left: 64)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "There are no possible next steps with just one number provided."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 2 = 11 (left: 6 3 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 - 3 = 9 (left: 3 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 - 3 = 9 (left: 3 9) -> 3 + 9 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 - 3 = 9 (left: 3 9) -> 3 + 9 = 12 (left: 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "2 9 13"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "2 9 13"
                }
            },
            "Step 4": {
                "Step": "6 + 3 = 9 (left: 2 9 13) -> 13 - 9 = 4 (left: 2 4)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 3 = 9 (left: 2 9 13) -> 13 - 9 = 4 (left: 2 4) -> 2 * 4 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 3 = 9 (left: 2 9 13) -> 13 - 9 = 4 (left: 2 4) -> 2 * 4 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "3.33 62"
                }
            },
            "Step 7": {
                "Step": "13 - 2 = 11 (left: 6 3 11) -> 11 - 3 = 8 (left: 6 8) -> 14 + 48 = 62 (left: 1.33 2 62) -> 1.33 + 2 = 3.33 (left: 3.33 62) -> 3.33 + 62 = 65.33 (left: 65.33)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "3.33 62"
                }
            },
            "Step 8": {
                "Step": "13 - 2 = 11 (left: 6 3 11) -> 11 - 3 = 8 (left: 6 8) -> 14 + 48 = 62 (left: 1.33 2 62) -> 1.33 + 2 = 3.33 (left: 3.33 62) -> 3.33 * 62 = 206.46 (left: 62 206.46)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 2 13 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 / 3 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 / 3 = 4 (left: 4) -> 4 + 4 = 8",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 / 3 = 4 (left: 4) -> 4 + 4 = 8 -> 4 / 4 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "6 3 11"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "6 3 11"
                }
            },
            "Step 4": {
                "Step": "13 - 2 = 11 (left: 6 3 11) -> 11 - 3 = 8 (left: 6 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 2 = 11 (left: 6 3 11) -> 11 - 3 = 8 (left: 6 8) -> 14 + 48 = 62 (left: 1.33 2 62)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 2 = 11 (left: 6 3 11) -> 11 - 3 = 8 (left: 6 8) -> 14 + 48 = 62 (left: 1.33 2 62) -> 1.33 + 2 = 3.33 (left: 3.33 62)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "3.33 62"
                }
            },
            "Step 7": {
                "Step": "13 - 2 = 11 (left: 6 3 11) -> 11 - 3 = 8 (left: 6 8) -> 14 + 48 = 62 (left: 1.33 2 62) -> 1.33 + 2 = 3.33 (left: 3.33 62) -> 62 - 3.33 = 58.67 (left: 3.33 58.67)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 2 = 11 (left: 6 3 11) -> 11 - 3 = 8 (left: 6 8) -> 14 + 48 = 62 (left: 1.33 2 62) -> 1.33 + 2 = 3.33 (left: 3.33 62) -> 62 - 3.33 = 58.67 (left: 3.33 58.67) -> 58.67 / 3.33 = 17.6 (left: 17.6)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "There are no possible next steps as the input is already in its final form."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 * 2 = 12 (left: 3 12 ",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 3 + 12 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 3 + 12 = 15 (left: 15) -> There is only one possible next step:",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 3 + 12 = 15 (left: 15) -> There is only one possible next step: -> 8 * 8 = 64 (left: 2 64)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "6 3 11"
                }
            },
            "Step 4": {
                "Step": "13 - 2 = 11 (left: 6 3 11) -> 3 * 11 = 33 (left: 6 33)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 2 = 11 (left: 6 3 11) -> 3 * 11 = 33 (left: 6 33) -> 6 * 33 = 198 (left: 198)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 2 = 11 (left: 6 3 11) -> 3 * 11 = 33 (left: 6 33) -> 6 * 33 = 198 (left: 198) -> 198 / 9 = 22 (left: 22)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "16 / 2 = 8"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "3.33 62"
                }
            },
            "Step 7": {
                "Step": "13 - 2 = 11 (left: 6 3 11) -> 11 - 3 = 8 (left: 6 8) -> 14 + 48 = 62 (left: 1.33 2 62) -> 1.33 + 2 = 3.33 (left: 3.33 62) -> 3.33 + 62 = 65.33 (left: 65.33)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "There are no possible next steps for the equation 13 / 2 = 6.5 as it is already simplified to its final form."
                }
            },
            "Step 8": {
                "Step": "6 + 3 = 9 (left: 2 9 13) -> 13 / 2 =  -> 13 / 2 = 6.5 -> There are no possible next steps for the equation 13 / 2 = 6.5 as it is already simplified to its final form. -> None",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "16 / 2 = 8"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 2 13 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 - 3 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 - 3 = 9 (left: 9) -> There are no possible next steps with the given input of 9.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 - 3 = 9 (left: 9) -> There are no possible next steps with the given input of 9. -> There are no possible next steps with the given input of 9.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "6 11 "
                }
            },
            "Step 4": {
                "Step": "13 - 2 = 11 (left: 6 11  -> 6 * 11 = 66 (left: 66)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 2 = 11 (left: 6 11  -> 6 * 11 = 66 (left: 66) -> 66 + 2 = 68 (left: 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 2 = 11 (left: 6 11  -> 6 * 11 = 66 (left: 66) -> 66 + 2 = 68 (left: 2) -> There are no possible next steps with just the number 2.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "3.33 62"
                }
            },
            "Step 7": {
                "Step": "13 - 2 = 11 (left: 6 3 11) -> 11 - 3 = 8 (left: 6 8) -> 14 + 48 = 62 (left: 1.33 2 62) -> 1.33 + 2 = 3.33 (left: 3.33 62) -> 62 / 3.33 = 18.62 (left: 18.62)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "There are no possible next steps with the given input of 9."
                }
            },
            "Step 8": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 - 3 = 9 (left: 9) -> There are no possible next steps with the given input of 9. -> There are no possible next steps with the given input of 9. -> There are no possible next steps with the given input of 9.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 6 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 3 * 4 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 3 * 4 = 12 (left: 12) -> 12 / 8 = 1.5 (left: 1.5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 3 * 4 = 12 (left: 12) -> 12 / 8 = 1.5 (left: 1.5) -> There are no possible next steps for the input 1.5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "6 3 11"
                }
            },
            "Step 4": {
                "Step": "13 - 2 = 11 (left: 6 3 11) -> 6 - 3 = 3 (left: 3 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 2 = 11 (left: 6 3 11) -> 6 - 3 = 3 (left: 3 11) -> Possible next steps:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 2 = 11 (left: 6 3 11) -> 6 - 3 = 3 (left: 3 11) -> Possible next steps: -> There are no possible next steps as the input is already in its final form.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "3.33 62"
                }
            },
            "Step 7": {
                "Step": "13 - 2 = 11 (left: 6 3 11) -> 11 - 3 = 8 (left: 6 8) -> 14 + 48 = 62 (left: 1.33 2 62) -> 1.33 + 2 = 3.33 (left: 3.33 62) -> 62 / 3.33 = 18.62 (left: 18.62)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "There are no possible next steps with the given input of 9."
                }
            },
            "Step 8": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 - 3 = 9 (left: 9) -> There are no possible next steps with the given input of 9. -> There are no possible next steps with the given input of 9. -> There are no possible next steps with the input of 9.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 2 6 7)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 3 + 12 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 3 + 12 = 15 (left: 15) -> There is no possible next step with the input of 15.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 3 + 12 = 15 (left: 15) -> There is no possible next step with the input of 15. -> 15 * 2 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "6 11 "
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "6 3 11"
                }
            },
            "Step 4": {
                "Step": "13 - 2 = 11 (left: 6 3 11) -> 11 - 3 = 8 (left: 6 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 2 = 11 (left: 6 3 11) -> 11 - 3 = 8 (left: 6 8) -> 8 - 6 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 2 = 11 (left: 6 3 11) -> 11 - 3 = 8 (left: 6 8) -> 8 - 6 = 2 (left: 2) -> There are no possible next steps with just one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "3.33 62"
                }
            },
            "Step 7": {
                "Step": "13 - 2 = 11 (left: 6 3 11) -> 11 - 3 = 8 (left: 6 8) -> 14 + 48 = 62 (left: 1.33 2 62) -> 1.33 + 2 = 3.33 (left: 3.33 62) -> 62 - 3.33 = 58.67 (left: 58.67)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "There are no possible next steps for the input 1.1538461538461537 as it is already a single number."
                }
            },
            "Step 8": {
                "Step": "6 + 7 = 13 (left: 2 13 13) -> 2 + 13 = 15 (left: 13 15) -> 15 / 13 = 1.1538461538461537 (left: 1.1538461538461537) -> There are no possible next steps for the input 1.1538461538461537 as it is already a single number. -> There are no possible next steps for the input 1.1538461538461537 as it is already a single number.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "6 * 2 = 12 (left: 3 12 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 / 3 = 4 (left: 4 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 / 3 = 4 (left: 4 4) -> 4 * 4 = 16 (left: 16)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 / 3 = 4 (left: 4 4) -> 4 * 4 = 16 (left: 16) -> 16 / 2 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "6 11 "
                }
            },
            "Step 4": {
                "Step": "13 - 2 = 11 (left: 6 11  -> 6 + 11 = 17 (left: 17)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 2 = 11 (left: 6 11  -> 6 + 11 = 17 (left: 17) -> 17 * 2 = 34 (left: 34)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 2 = 11 (left: 6 11  -> 6 + 11 = 17 (left: 17) -> 17 * 2 = 34 (left: 34) -> There are no possible next steps with the input 34 as it is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "3.33 62"
                }
            },
            "Step 7": {
                "Step": "13 - 2 = 11 (left: 6 3 11) -> 11 - 3 = 8 (left: 6 8) -> 14 + 48 = 62 (left: 1.33 2 62) -> 1.33 + 2 = 3.33 (left: 3.33 62) -> 3.33 + 62 = 65.33 (left: 65.33)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "There are no possible next steps for the input 1.1538461538461537 as it is already a single number."
                }
            },
            "Step 8": {
                "Step": "6 + 7 = 13 (left: 2 13 13) -> 2 + 13 = 15 (left: 13 15) -> 15 / 13 = 1.1538461538461537 (left: 1.1538461538461537) -> There are no possible next steps for the input 1.1538461538461537 as it is already a single number. -> There are no possible next steps for the input 1.1538461538461537 as it is already a single number.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "6 * 2 = 12 (left: 3 12 ",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 13 13"
                }
            },
            "Step 1": {
                "Step": "6 + 7 = 13 (left: 2 13 13) -> 2 + 13 = 15 (left: 13 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 7 = 13 (left: 2 13 13) -> 2 + 13 = 15 (left: 13 15) -> 15 / 13 = 1.1538461538461537 (left: 1.1538461538461537)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 7 = 13 (left: 2 13 13) -> 2 + 13 = 15 (left: 13 15) -> 15 / 13 = 1.1538461538461537 (left: 1.1538461538461537) -> There are no possible next steps for the input 1.1538461538461537 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "2 9 13"
                }
            },
            "Step 4": {
                "Step": "6 + 3 = 9 (left: 2 9 13) -> 13 - 2 = ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 3 = 9 (left: 2 9 13) -> 13 - 2 =  -> 13 - 2 = 11",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 3 = 9 (left: 2 9 13) -> 13 - 2 =  -> 13 - 2 = 11 -> 13 + 2 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "16 / 2 = 8"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "3.33 62"
                }
            },
            "Step 7": {
                "Step": "13 - 2 = 11 (left: 6 3 11) -> 11 - 3 = 8 (left: 6 8) -> 14 + 48 = 62 (left: 1.33 2 62) -> 1.33 + 2 = 3.33 (left: 3.33 62) -> 3.33 + 62 = 65.33 (left: 65.33)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "There are no possible next steps with just the number 2."
                }
            },
            "Step 8": {
                "Step": "13 - 2 = 11 (left: 6 11  -> 6 * 11 = 66 (left: 66) -> 66 + 2 = 68 (left: 2) -> There are no possible next steps with just the number 2. -> 2 + 2 = 4",
                "Pruning": null
            }
        },
        "Input": "2 3 6 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "959": {
        "puzzle": "2 2 5 12",
        "Agent 0": {
            "Step 0": {
                "Step": "2 * 5 = 10 (left: 2 10 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "10 2 "
                }
            },
            "Step 1": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 * 2 = 20 (left: 20)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 * 2 = 20 (left: 20) -> 20 * 2 = 40 (left: 40)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 * 2 = 20 (left: 20) -> 20 * 2 = 40 (left: 40) -> There are no possible next steps with the input of 40.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "4 5 12"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 12 - 5 = 7 (left: 4 7)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 12 - 5 = 7 (left: 4 7) -> 2 * 3 = 6 (left: 1 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 12 - 5 = 7 (left: 4 7) -> 2 * 3 = 6 (left: 1 6) -> 6 - 1 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "There is only one number given, so there are no possible next steps to perform any operations."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps for the input 2.4."
                }
            },
            "Step 7": {
                "Step": "2 - 2 = 0 (left: 0 5 12) -> 5 - 12 = -7 -> 12 / 5 = 2.4 (left: 2.4) -> There are no possible next steps for the input 2.4. -> There are no possible next steps for the input 2.4.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 - 2 = 0 (left: 0 5 12) -> 5 - 12 = -7 -> 12 / 5 = 2.4 (left: 2.4) -> There are no possible next steps for the input 2.4. -> There are no possible next steps for the input 2.4. -> There are no possible next steps for the input 2.4.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "10 2 "
                }
            },
            "Step 1": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 + 2 = 12 (left: 12) ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 + 2 = 12 (left: 12)  -> 12 * 8 = 96 (left: 8 96)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 + 2 = 12 (left: 12)  -> 12 * 8 = 96 (left: 8 96) -> 8 + 96 = 104 (left: 104)",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "0 5 12"
                },
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "0 5 12"
                }
            },
            "Step 4": {
                "Step": "2 - 2 = 0 (left: 0 5 12) -> 0 + 5 = 5 (left: 5 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 - 2 = 0 (left: 0 5 12) -> 0 + 5 = 5 (left: 5 12) -> 5 + 12 = 17 (left: 17)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 - 2 = 0 (left: 0 5 12) -> 0 + 5 = 5 (left: 5 12) -> 5 + 12 = 17 (left: 17) -> There is only one possible next step:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "There are no possible next steps for the input 54 as it is only one number and cannot be combined with any of the other numbers given."
                }
            },
            "Step 7": {
                "Step": "2 - 2 = 0 (left: 0 5 12) -> Input: 6 9 -> 6 * 9 = 54 (left: 54) -> There are no possible next steps for the input 54 as it is only one number and cannot be combined with any of the other numbers given. -> There are no possible next steps for the input 54 as it is only one number and cannot be combined with any of the other numbers given.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 - 2 = 0 (left: 0 5 12) -> Input: 6 9 -> 6 * 9 = 54 (left: 54) -> There are no possible next steps for the input 54 as it is only one number and cannot be combined with any of the other numbers given. -> There are no possible next steps for the input 54 as it is only one number and cannot be combined with any of the other numbers given. -> There are no possible next steps for the input 54 as it is only one number and cannot be combined with any of the other numbers given.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "10 2 "
                }
            },
            "Step 1": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 / 2 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 / 2 = 5 (left: 5) -> 5 - ",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 / 2 = 5 (left: 5) -> 5 -  -> 5 - 8 = -3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "0 5 12"
                }
            },
            "Step 4": {
                "Step": "2 - 2 = 0 (left: 0 5 12) -> 5 - 12 = -7",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 - 2 = 0 (left: 0 5 12) -> 5 - 12 = -7 -> 12 / 5 = 2.4 (left: 2.4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 - 2 = 0 (left: 0 5 12) -> 5 - 12 = -7 -> 12 / 5 = 2.4 (left: 2.4) -> There are no possible next steps for the input 2.4.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "0 + 12 = 12"
                }
            },
            "Step 7": {
                "Step": "2 - 2 = 0 (left: 0 5 12) -> 12 / 0 = undefined (left: 0 12) -> 12 / 0 = undefined (left: 0 12) -> 0 + 12 = 12 -> 12 - 2 = 10 (left: 10 12)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 - 2 = 0 (left: 0 5 12) -> 12 / 0 = undefined (left: 0 12) -> 12 / 0 = undefined (left: 0 12) -> 0 + 12 = 12 -> 12 - 2 = 10 (left: 10 12) -> 10 * 12 = 120 (left: 120)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "0 + 12 = 12"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "10 2 "
                }
            },
            "Step 1": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 / 2 = 5 (left: 5 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 / 2 = 5 (left: 5 2) -> 5 * 2 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 / 2 = 5 (left: 5 2) -> 5 * 2 = 10 (left: 10) -> 10 * 2 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "4 5 12"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "0 5 12"
                }
            },
            "Step 4": {
                "Step": "2 - 2 = 0 (left: 0 5 12) -> Input: 6 9",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 - 2 = 0 (left: 0 5 12) -> Input: 6 9 -> 6 * 9 = 54 (left: 54)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 - 2 = 0 (left: 0 5 12) -> Input: 6 9 -> 6 * 9 = 54 (left: 54) -> There are no possible next steps for the input 54 as it is only one number and cannot be combined with any of the other numbers given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "There are no possible next steps with the number 13."
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 5 - 4 = 1 (left: 1 12) -> 1 + 12 = 13 (left: 13) -> There are no possible next steps with the number 13. -> 13 - 2 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "5 - 8 = -3"
                }
            },
            "Step 8": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 / 2 = 5 (left: 5) -> 5 -  -> 5 - 8 = -3 -> 5 / -8 = -0.625 (left: -0.625)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "There are no possible next steps for the input 2.4."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "10 2 "
                }
            },
            "Step 1": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 * 2 = 20 (left: 20)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 * 2 = 20 (left: 20) -> 20 / 2 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 * 2 = 20 (left: 20) -> 20 / 2 = 10 (left: 10) -> 10 - 2 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "1 5 12"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "0 5 12"
                }
            },
            "Step 4": {
                "Step": "2 - 2 = 0 (left: 0 5 12) -> 12 / 0 = undefined (left: 0 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 - 2 = 0 (left: 0 5 12) -> 12 / 0 = undefined (left: 0 12) -> 12 / 0 = undefined (left: 0 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 - 2 = 0 (left: 0 5 12) -> 12 / 0 = undefined (left: 0 12) -> 12 / 0 = undefined (left: 0 12) -> 0 + 12 = 12",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "There are no possible next steps for the input 54 as it is only one number and cannot be combined with any of the other numbers given."
                }
            },
            "Step 7": {
                "Step": "2 - 2 = 0 (left: 0 5 12) -> Input: 6 9 -> 6 * 9 = 54 (left: 54) -> There are no possible next steps for the input 54 as it is only one number and cannot be combined with any of the other numbers given. -> There are no possible next steps for the input 54 as it is only one number and cannot be combined with any of the other numbers given.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 - 2 = 0 (left: 0 5 12) -> Input: 6 9 -> 6 * 9 = 54 (left: 54) -> There are no possible next steps for the input 54 as it is only one number and cannot be combined with any of the other numbers given. -> There are no possible next steps for the input 54 as it is only one number and cannot be combined with any of the other numbers given. -> None",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "0 - (-7"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "2 / 2 = 1 (left: 1 5 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "10 2 "
                }
            },
            "Step 1": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 * 2 = 20 (left: 20)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 * 2 = 20 (left: 20) -> 20 * 8 = 160 (left: 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 * 2 = 20 (left: 20) -> 20 * 8 = 160 (left: 8) -> 8 * 8 = 64",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "0 5 12"
                }
            },
            "Step 4": {
                "Step": "2 - 2 = 0 (left: 0 5 12) -> 5 - 12 = -7 (left: 0 -7)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 - 2 = 0 (left: 0 5 12) -> 5 - 12 = -7 (left: 0 -7) -> 0 - (-7) = 7",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 - 2 = 0 (left: 0 5 12) -> 5 - 12 = -7 (left: 0 -7) -> 0 - (-7) = 7 -> 0 - (-7) = 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There is only one number given, so there are no possible next steps to perform any operations."
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 4 / 5 = 0.8 (left: 0.8 12) -> 12 - 0.8 = 11.2 (left: 11.2) -> There is only one number given, so there are no possible next steps to perform any operations. -> There are no possible next steps as there is only one number given.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 4 / 5 = 0.8 (left: 0.8 12) -> 12 - 0.8 = 11.2 (left: 11.2) -> There is only one number given, so there are no possible next steps to perform any operations. -> There are no possible next steps as there is only one number given. -> There are no possible next steps as there is only one number given.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "2 * 5 = 10 (left: 10 2 ",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 5 12"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 4 / 5 = 0.8 (left: 0.8 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 4 / 5 = 0.8 (left: 0.8 12) -> 12 - 0.8 = 11.2 (left: 11.2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 4 / 5 = 0.8 (left: 0.8 12) -> 12 - 0.8 = 11.2 (left: 11.2) -> There is only one number given, so there are no possible next steps to perform any operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "0 5 12"
                }
            },
            "Step 4": {
                "Step": "2 - 2 = 0 (left: 0 5 12) -> 12 / 5 = 2.4 (left: 0 2.4)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 - 2 = 0 (left: 0 5 12) -> 12 / 5 = 2.4 (left: 0 2.4) -> 0 + 2.4 = 2.4 (left: 2.4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 - 2 = 0 (left: 0 5 12) -> 12 / 5 = 2.4 (left: 0 2.4) -> 0 + 2.4 = 2.4 (left: 2.4) -> There is only one number provided, so there are no possible next steps to perform any operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "0 + 12 = 12"
                }
            },
            "Step 7": {
                "Step": "2 - 2 = 0 (left: 0 5 12) -> 12 / 0 = undefined (left: 0 12) -> 12 / 0 = undefined (left: 0 12) -> 0 + 12 = 12 -> 12 * 0 = 0 (left: 0 12)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 - 2 = 0 (left: 0 5 12) -> 12 / 0 = undefined (left: 0 12) -> 12 / 0 = undefined (left: 0 12) -> 0 + 12 = 12 -> 12 * 0 = 0 (left: 0 12) -> 12 * 0 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "8 * 8 = 64"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "2 * 5 = 10 (left: 10 2 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "10 2 "
                }
            },
            "Step 1": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 + 2 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 + 2 = 12 (left: 12) -> 12 / 2 = 6",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 + 2 = 12 (left: 12) -> 12 / 2 = 6 -> 12 - 6 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "4 5 12"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "0 5 12"
                }
            },
            "Step 4": {
                "Step": "2 - 2 = 0 (left: 0 5 12) -> 5 * 12 = 60 (left: 0 60)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 - 2 = 0 (left: 0 5 12) -> 5 * 12 = 60 (left: 0 60) -> 60 / 0 = undefined",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 - 2 = 0 (left: 0 5 12) -> 5 * 12 = 60 (left: 0 60) -> 60 / 0 = undefined -> Division by zero is undefined in mathematics.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "Division by zero is undefined in mathematics."
                }
            },
            "Step 7": {
                "Step": "2 - 2 = 0 (left: 0 5 12) -> 5 * 12 = 60 (left: 0 60) -> 60 / 0 = undefined -> Division by zero is undefined in mathematics. -> Please input a valid mathematical operation.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 - 2 = 0 (left: 0 5 12) -> 5 * 12 = 60 (left: 0 60) -> 60 / 0 = undefined -> Division by zero is undefined in mathematics. -> Please input a valid mathematical operation. -> Division: 8 / 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "There is only one number provided, so there are no possible next steps to perform any operations."
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "5 + 2 = 7 (left: 2 7 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "10 2 "
                }
            },
            "Step 1": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 + 2 = 12 (left: 2 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 + 2 = 12 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 + 2 = 12 (left: 2 12) -> 2 + 12 = 14 (left: 14) -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "4 5 12"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 5 - 4 = 1 (left: 1 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 5 - 4 = 1 (left: 1 12) -> 1 + 12 = 13 (left: 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 5 - 4 = 1 (left: 1 12) -> 1 + 12 = 13 (left: 13) -> There are no possible next steps with the number 13.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "There is only one number provided, so there are no possible next steps to perform any operations."
                }
            },
            "Step 7": {
                "Step": "2 - 2 = 0 (left: 0 5 12) -> 12 / 5 = 2.4 (left: 0 2.4) -> 0 + 2.4 = 2.4 (left: 2.4) -> There is only one number provided, so there are no possible next steps to perform any operations. -> No possible next steps as there is only one number provided.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 - 2 = 0 (left: 0 5 12) -> 12 / 5 = 2.4 (left: 0 2.4) -> 0 + 2.4 = 2.4 (left: 2.4) -> There is only one number provided, so there are no possible next steps to perform any operations. -> No possible next steps as there is only one number provided. -> Enter more numbers to perform operations.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "2 - 2 = 0 (left: 0 5 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1 5 12"
                }
            },
            "Step 1": {
                "Step": "2 / 2 = 1 (left: 1 5 12) -> 12 - 5 = 7 (left: 1 7 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 / 2 = 1 (left: 1 5 12) -> 12 - 5 = 7 (left: 1 7 12) -> 1 + 7 = 8 (left: 8 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 / 2 = 1 (left: 1 5 12) -> 12 - 5 = 7 (left: 1 7 12) -> 1 + 7 = 8 (left: 8 12) -> 8 - 12 = -4 (left: -4)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "2 7 "
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "0 5 12"
                }
            },
            "Step 4": {
                "Step": "2 - 2 = 0 (left: 0 5 12) -> 12 / 5 = 2.4 (left: 0 2.4)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 - 2 = 0 (left: 0 5 12) -> 12 / 5 = 2.4 (left: 0 2.4) -> 0 - 2.4 = -2.4 (left: -2.4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 - 2 = 0 (left: 0 5 12) -> 12 / 5 = 2.4 (left: 0 2.4) -> 0 - 2.4 = -2.4 (left: -2.4) -> There are no possible next steps with the input of -2.4 as it is just a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "There are no possible next steps with the number 13."
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 5 - 4 = 1 (left: 1 12) -> 1 + 12 = 13 (left: 13) -> There are no possible next steps with the number 13. -> 13 + 2 = 15 (left: 2 15)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 5 - 4 = 1 (left: 1 12) -> 1 + 12 = 13 (left: 13) -> There are no possible next steps with the number 13. -> 13 + 2 = 15 (left: 2 15) -> 15 - 2 = 13 (left: 13)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "0 - (-7"
                }
            }
        },
        "Input": "2 2 5 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "960": {
        "puzzle": "2 6 8 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 2 = 11 (left: 6 8 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 - 13 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 - 13 = 11 (left: 11) -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "6 11 8"
                }
            },
            "Step 4": {
                "Step": "13 - 2 = 11 (left: 6 11 8) -> 8 - 6 = 2 (left: 2 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 2 = 11 (left: 6 11 8) -> 8 - 6 = 2 (left: 2 8) -> 2 * 8 = 16 (left: 16)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 2 = 11 (left: 6 11 8) -> 8 - 6 = 2 (left: 2 8) -> 2 * 8 = 16 (left: 16) -> 16 / 2 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "There are no possible next steps with the input 80."
                }
            },
            "Step 7": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10) -> 8 * 10 = 80 (left: 80) -> There are no possible next steps with the input 80. -> There are no possible next steps with the input 80.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10) -> 8 * 10 = 80 (left: 80) -> There are no possible next steps with the input 80. -> There are no possible next steps with the input 80. -> There are no possible next steps with the input 80.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 / 2 = 3 (left: 3 8 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5) -> 5 - 3 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5) -> 5 - 3 = 2 (left: 2) -> There are no possible next steps with only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "6 11 8"
                }
            },
            "Step 4": {
                "Step": "13 - 2 = 11 (left: 6 11 8) -> 6 + 11 = 17 (left: 8 17)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 2 = 11 (left: 6 11 8) -> 6 + 11 = 17 (left: 8 17) -> 8 * 17 = 136 (left: 136)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 2 = 11 (left: 6 11 8) -> 6 + 11 = 17 (left: 8 17) -> 8 * 17 = 136 (left: 136) -> There are no possible next steps for the input 136 as it is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no possible next steps for the input 136 as it is a single number."
                }
            },
            "Step 7": {
                "Step": "13 - 2 = 11 (left: 6 11 8) -> 6 + 11 = 17 (left: 8 17) -> 8 * 17 = 136 (left: 136) -> There are no possible next steps for the input 136 as it is a single number. -> 136 + 1 = 137",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 2 = 11 (left: 6 11 8) -> 6 + 11 = 17 (left: 8 17) -> 8 * 17 = 136 (left: 136) -> There are no possible next steps for the input 136 as it is a single number. -> 136 + 1 = 137 -> 136 - 1 = 135",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 + 6 = 8 (left: 8 8 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 / 13 = 0.846 (left: 0.846)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 / 13 = 0.846 (left: 0.846) -> There are no possible next steps for the input 0.846 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "6 11 8"
                }
            },
            "Step 4": {
                "Step": "13 - 2 = 11 (left: 6 11 8) -> 11 / 8 = 1.375 (left: 1.375)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 2 = 11 (left: 6 11 8) -> 11 / 8 = 1.375 (left: 1.375) -> 1.375 + 2 = 3.375",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 2 = 11 (left: 6 11 8) -> 11 / 8 = 1.375 (left: 1.375) -> 1.375 + 2 = 3.375 -> 2 * 1.375 = 2.75 (left: 2.75)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "0.846 / 2 = 0.423"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "0.846 / 2 = 0.423"
                }
            },
            "Step 7": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 / 13 \u2248 0.846 (left: 0.846) -> 0.846 / 2 = 0.423 -> 0.846 - 2 = -1.154 (left: -1.154)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "No possible next steps."
                }
            },
            "Step 8": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 - 13 = 11 (left: 11) -> No possible next steps. -> There are no possible next steps with the given numbers.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "8 - 2 = 6 (left: 6 6 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5) -> 5 - 3 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5) -> 5 - 3 = 2 (left: 2) -> 2 / 2 = 1 (left: 1 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "6 11 8"
                }
            },
            "Step 4": {
                "Step": "13 - 2 = 11 (left: 6 11 8) -> 6 + 11 = 17 (left: 17 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 2 = 11 (left: 6 11 8) -> 6 + 11 = 17 (left: 17 8) -> 17 / 8 \u2248 2.125 (left: 2.125 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 2 = 11 (left: 6 11 8) -> 6 + 11 = 17 (left: 17 8) -> 17 / 8 \u2248 2.125 (left: 2.125 8) -> 2.125 * 8 = 17 (left: 17)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "No possible next steps."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "There are no possible next steps for the number 136 as it is a single number and cannot be combined with any other numbers."
                }
            },
            "Step 7": {
                "Step": "13 - 2 = 11 (left: 6 11 8) -> 6 + 11 = 17 (left: 8 17) -> 8 * 17 = 136 (left: 136) -> There are no possible next steps for the number 136 as it is a single number and cannot be combined with any other numbers. -> There are no possible next steps for the number 136 as it is a single number and cannot be combined with any other numbers.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 2 = 11 (left: 6 11 8) -> 6 + 11 = 17 (left: 8 17) -> 8 * 17 = 136 (left: 136) -> There are no possible next steps for the number 136 as it is a single number and cannot be combined with any other numbers. -> There are no possible next steps for the number 136 as it is a single number and cannot be combined with any other numbers. -> No possible next steps. The number 136 is a single number and cannot be combined with any other numbers.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 - 2 = 11 (left: 6 8 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 8 * 3 = 24 (left: 13 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 8 * 3 = 24 (left: 13 24) -> 13 + 24 = 37 (left: 37)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 8 * 3 = 24 (left: 13 24) -> 13 + 24 = 37 (left: 37) -> There is only one number provided, so there are no possible next steps to perform any operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "6 11 8"
                }
            },
            "Step 4": {
                "Step": "13 - 2 = 11 (left: 6 11 8) -> 6 + 11 = 17 (left: 8 17)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 2 = 11 (left: 6 11 8) -> 6 + 11 = 17 (left: 8 17) -> 8 * 17 = 136 (left: 136)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 2 = 11 (left: 6 11 8) -> 6 + 11 = 17 (left: 8 17) -> 8 * 17 = 136 (left: 136) -> There are no possible next steps for the number 136 as it is a single number and cannot be combined with any other numbers.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no possible next steps for the input 136 as it is a single number."
                }
            },
            "Step 7": {
                "Step": "13 - 2 = 11 (left: 6 11 8) -> 6 + 11 = 17 (left: 8 17) -> 8 * 17 = 136 (left: 136) -> There are no possible next steps for the input 136 as it is a single number. -> 136 * 2 = 272 (left: 272)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "2 + 2 = 4"
                }
            },
            "Step 8": {
                "Step": "13 - 2 = 11 (left: 6 11 8) -> 6 * 8 = 48 (left: -> 8 - 6 = 2 (left: 2) -> 2 + 2 = 4 -> 2 * 4 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "0.846 / 2 = 0.423"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "6 / 2 = 3 (left: 3 8 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 / 13 \u2248 0.846 (left: 0.846)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 / 13 \u2248 0.846 (left: 0.846) -> 0.846 / 2 = 0.423",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "6 11 8"
                }
            },
            "Step 4": {
                "Step": "13 - 2 = 11 (left: 6 11 8) -> 11 / 6 = 1.83 (left: 1.83 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 2 = 11 (left: 6 11 8) -> 11 / 6 = 1.83 (left: 1.83 8) -> 1.83 * 8 = 14.64 (left: 14.64)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 2 = 11 (left: 6 11 8) -> 11 / 6 = 1.83 (left: 1.83 8) -> 1.83 * 8 = 14.64 (left: 14.64) -> There are no possible next steps for the input 14.64 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "There is only one number provided, so there are no possible next steps to perform any operations."
                }
            },
            "Step 7": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 8 * 3 = 24 (left: 13 24) -> 13 + 24 = 37 (left: 37) -> There is only one number provided, so there are no possible next steps to perform any operations. -> There are no possible next steps to perform any operations.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 8 * 3 = 24 (left: 13 24) -> 13 + 24 = 37 (left: 37) -> There is only one number provided, so there are no possible next steps to perform any operations. -> There are no possible next steps to perform any operations. -> There are no possible next steps to perform any operations.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 2 7 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10) -> 8 * 10 = 80 (left: 80)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10) -> 8 * 10 = 80 (left: 80) -> There are no possible next steps with the input 80.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "6 11 8"
                }
            },
            "Step 4": {
                "Step": "13 - 2 = 11 (left: 6 11 8) -> 11 + 8 = 19 (left: 19)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 2 = 11 (left: 6 11 8) -> 11 + 8 = 19 (left: 19) -> 19 + 8 = 27 (left: 8 27)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 2 = 11 (left: 6 11 8) -> 11 + 8 = 19 (left: 19) -> 19 + 8 = 27 (left: 8 27) -> 8 + 27 = 35 (left: 35)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "There is only one number provided, so there are no possible next steps to perform any operations."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "There are no possible next steps with the input 80."
                }
            },
            "Step 7": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10) -> 8 * 10 = 80 (left: 80) -> There are no possible next steps with the input 80. -> There are no possible next steps with the input 80.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10) -> 8 * 10 = 80 (left: 80) -> There are no possible next steps with the input 80. -> There are no possible next steps with the input 80. -> There are no possible next steps with the input 80.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "13 - 2 = 11 (left: 6 11 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 / 13 = 0.8461538461538461 (left: 0.8461538461538461)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 / 13 = 0.8461538461538461 (left: 0.8461538461538461) -> 0.8461538461538461 - 2 = -1.1538461538461539",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "6 11 8"
                }
            },
            "Step 4": {
                "Step": "13 - 2 = 11 (left: 6 11 8) -> 6 * 11 = 66 (left: 66 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 2 = 11 (left: 6 11 8) -> 6 * 11 = 66 (left: 66 8) -> 66 + 8 = 74 (left: 8 74)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 2 = 11 (left: 6 11 8) -> 6 * 11 = 66 (left: 66 8) -> 66 + 8 = 74 (left: 8 74) -> 8 + 74 = 82 (left: 82)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "There are no possible next steps with the input 80."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "There are no possible next steps as all combinations have been calculated."
                }
            },
            "Step 7": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 13 / 3 =  -> 13 + 3 = 16 (left: 16) -> No possible next steps. -> No possible next steps. -> No possible next steps. -> There are no possible next steps as all combinations have been calculated. -> No possible next steps.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 13 / 3 =  -> 13 + 3 = 16 (left: 16) -> No possible next steps. -> No possible next steps. -> No possible next steps. -> There are no possible next steps as all combinations have been calculated. -> No possible next steps. -> There are no possible next steps.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "13 - 8 = 5 (left: 2 6 5)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 * 13 = 312 (left: 312)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 * 13 = 312 (left: 312) -> 31 - 2 = 29 (left: 2)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "6 11 8"
                },
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "6 11 8"
                }
            },
            "Step 4": {
                "Step": "13 - 2 = 11 (left: 6 11 8) -> 6 * 8 = 48 (left:",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 2 = 11 (left: 6 11 8) -> 6 * 8 = 48 (left: -> 8 - 6 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 2 = 11 (left: 6 11 8) -> 6 * 8 = 48 (left: -> 8 - 6 = 2 (left: 2) -> 2 + 2 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "There are no possible next steps with the input 80."
                }
            },
            "Step 7": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10) -> 8 * 10 = 80 (left: 80) -> There are no possible next steps with the input 80. -> There are no possible next steps with the input 80.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10) -> 8 * 10 = 80 (left: 80) -> There are no possible next steps with the input 80. -> There are no possible next steps with the input 80. -> There are no possible next steps with the input 80.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "13 - 8 = 5 (left: 2 6 5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 13 / 3 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 13 / 3 =  -> 13 + 3 = 16 (left: 16)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 13 / 3 =  -> 13 + 3 = 16 (left: 16) -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "No possible next steps."
                }
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 13 / 3 =  -> 13 + 3 = 16 (left: 16) -> No possible next steps. -> No possible next steps.",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 13 / 3 =  -> 13 + 3 = 16 (left: 16) -> No possible next steps. -> No possible next steps. -> No possible next steps.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 13 / 3 =  -> 13 + 3 = 16 (left: 16) -> No possible next steps. -> No possible next steps. -> No possible next steps. -> There are no possible next steps as all combinations have been calculated.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "There are no possible next steps for the input 14.64 as it is already a single number."
                }
            },
            "Step 7": {
                "Step": "13 - 2 = 11 (left: 6 11 8) -> 11 / 6 = 1.83 (left: 1.83 8) -> 1.83 * 8 = 14.64 (left: 14.64) -> There are no possible next steps for the input 14.64 as it is already a single number. -> There are no possible next steps for the input 14.64 as it is already a single number.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 2 = 11 (left: 6 11 8) -> 11 / 6 = 1.83 (left: 1.83 8) -> 1.83 * 8 = 14.64 (left: 14.64) -> There are no possible next steps for the input 14.64 as it is already a single number. -> There are no possible next steps for the input 14.64 as it is already a single number. -> N/A",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "2 + 2 = 4"
                }
            }
        },
        "Input": "2 6 8 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "961": {
        "puzzle": "8 8 10 12",
        "Agent 0": {
            "Step 0": {
                "Step": "10 * 8 = 80 (left: 12 80)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "12 80"
                }
            },
            "Step 1": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.66666666667 (left: 6.66666666667)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.66666666667 (left: 6.66666666667) -> 6.66666666667 - 2 = 4.66666666667",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.66666666667 (left: 6.66666666667) -> 6.66666666667 - 2 = 4.66666666667 -> 6.66666666667 / 2 = 3.33333333334",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "12 80"
                }
            },
            "Step 4": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 * 80 = 960 (left: 960)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 * 80 = 960 (left: 960) -> 9 + 6 = 15 (left: 15 0)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 * 80 = 960 (left: 960) -> 9 + 6 = 15 (left: 15 0) -> 15 - 0 = 15 (left: 0 15)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "0 15"
                }
            },
            "Step 7": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 * 80 = 960 (left: 960) -> 9 + 6 = 15 (left: 15 0) -> 15 - 0 = 15 (left: 0 15) -> 15 / 0 = undefined (left: 0 15)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 * 80 = 960 (left: 960) -> 9 + 6 = 15 (left: 15 0) -> 15 - 0 = 15 (left: 0 15) -> 15 / 0 = undefined (left: 0 15) -> 15 - 0 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "7 11"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 + 8 = 18 (left: 8 12 18)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "12 80"
                }
            },
            "Step 1": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.6666666666667 (left: 6.6666666666667)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.6666666666667 (left: 6.6666666666667) -> 6.6666666666667 + 2 = 8.6666666666667",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.6666666666667 (left: 6.6666666666667) -> 6.6666666666667 + 2 = 8.6666666666667 -> 6.6666666666667 - 2 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "1 6.666666666666667"
                }
            },
            "Step 4": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.666666666666667 (left: 6.666666666666667) -> 6.666666666666667 + 6.666666666666667 = 13.333333333333334 -> 6.666666666666667 / 6.666666666666667 = 1 (left: 1 6.666666666666667) -> 1 / 6.666666666666667 = 0.14999999999999997 (left: 0.14999999999999997)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "12 80"
                }
            },
            "Step 5": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 + 80 = 92 (left: 92)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 + 80 = 92 (left: 92) -> 9 + 2 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "0 15"
                }
            },
            "Step 7": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 * 80 = 960 (left: 960) -> 9 + 6 = 15 (left: 15 0) -> 15 - 0 = 15 (left: 0 15) -> 0 - 15 = -15 (left: -15)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "0 15"
                }
            },
            "Step 8": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 * 80 = 960 (left: 960) -> 9 + 6 = 15 (left: 15 0) -> 15 - 0 = 15 (left: 0 15) -> 0 + 15 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "-7 11"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "8 - 8 = 0 (left: 10 0 12)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "8 12 18"
                }
            },
            "Step 1": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 18 / 12 = 1.5 (left: 8 1.5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 18 / 12 = 1.5 (left: 8 1.5) -> 8 + 1.5 = 9.5",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 18 / 12 = 1.5 (left: 8 1.5) -> 8 + 1.5 = 9.5 -> 8 - 1.5 = 6.5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "12 80"
                }
            },
            "Step 4": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 - 12 = 68 (left: 68)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 - 12 = 68 (left: 68) -> 6 + 8 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 - 12 = 68 (left: 68) -> 6 + 8 = 14 (left: 14) -> 14 + 14 = 28",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "0 15"
                }
            },
            "Step 7": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 * 80 = 960 (left: 960) -> 9 + 6 = 15 (left: 15 0) -> 15 - 0 = 15 (left: 0 15) -> 15 - 0 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "14 + 14 = 28"
                }
            },
            "Step 8": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 - 12 = 68 (left: 68) -> 6 + 8 = 14 (left: 14) -> 14 + 14 = 28 -> 14 * 14 = 196 (left: 28 196)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "8 * 8 = 64 (left: 10 12 64)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "12 80"
                }
            },
            "Step 1": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.66666666667 (left: 6.66666666667)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.66666666667 (left: 6.66666666667) -> There are no possible next steps as the input is already a single number.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.66666666667 (left: 6.66666666667) -> There are no possible next steps as the input is already a single number. -> Input is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "1 6.666666666666667"
                }
            },
            "Step 4": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.666666666666667 (left: 6.666666666666667) -> 6.666666666666667 + 6.666666666666667 = 13.333333333333334 -> 6.666666666666667 / 6.666666666666667 = 1 (left: 1 6.666666666666667) -> 1 + 6.666666666666667 = 7.666666666666667 (left: 7.666666666666667)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "-7 11"
                }
            },
            "Step 5": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 + 80 = 92 (left: 92) -> 9 + 2 = 11 -> 2 - 9 = -7 (left: -7 11) -> -7 / 11 = -0.63636 (left: -0.63636)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "8 - 1.5 = 6.5"
                }
            },
            "Step 6": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 18 / 12 = 1.5 (left: 8 1.5) -> 8 + 1.5 = 9.5 -> 8 - 1.5 = 6.5 -> 8 * 1.5 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "There seems to be a mistake in the input provided. The input should consist of integers and arithmetic operators. Please provide the correct input for further calculation."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "0 15"
                }
            },
            "Step 7": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 * 80 = 960 (left: 960) -> 9 + 6 = 15 (left: 15 0) -> 15 - 0 = 15 (left: 0 15) -> 15 - 0 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "14 "
                }
            },
            "Step 8": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 8 * 12 = 96 (left: 18 96) -> 18 + 96 = 114 (left: 114) -> 1 * 14 = 14 (left: 14  -> 14 * 2 = 28 (left: 28)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "-7 11"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "8 - 8 = 0 (left: 0 10 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "12 80"
                }
            },
            "Step 1": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 + 80 = 92 (left: 92)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 + 80 = 92 (left: 92) -> 9 + 2 = 11",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 + 80 = 92 (left: 92) -> 9 + 2 = 11 -> 9 / 2 = 4.5 (left: 4.5 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "12 80"
                }
            },
            "Step 4": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 + 80 = 92 (left: 92)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 + 80 = 92 (left: 92) -> 9 + 2 = 11",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 + 80 = 92 (left: 92) -> 9 + 2 = 11 -> 9 - 2 = 7 (left: 7 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "0 15"
                }
            },
            "Step 7": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 * 80 = 960 (left: 960) -> 9 + 6 = 15 (left: 15 0) -> 15 - 0 = 15 (left: 0 15) -> 0 + 15 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "4.5 11"
                }
            },
            "Step 8": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 + 80 = 92 (left: 92) -> 9 + 2 = 11 -> 9 / 2 = 4.5 (left: 4.5 11) -> 11 - 4.5 = 6.5 (left: 4.5 6.5)",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "12 - 8 = 4 (left: 10 8 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "8 12 18"
                }
            },
            "Step 1": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 8 * 12 = 96 (left: 18 96)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 8 * 12 = 96 (left: 18 96) -> 18 + 96 = 114 (left: 114)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 8 * 12 = 96 (left: 18 96) -> 18 + 96 = 114 (left: 114) -> 1 * 14 = 14 (left: 14 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "12 80"
                }
            },
            "Step 4": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 - 12 = 68 (left: 68)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 - 12 = 68 (left: 68) -> 6 + 8 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 - 12 = 68 (left: 68) -> 6 + 8 = 14 (left: 14) -> 14 / 2 = 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "0 15"
                }
            },
            "Step 7": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 * 80 = 960 (left: 960) -> 9 + 6 = 15 (left: 15 0) -> 15 - 0 = 15 (left: 0 15) -> 15 - 0 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "1 6.666666666666667"
                }
            },
            "Step 8": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.666666666666667 (left: 6.666666666666667) -> 6.666666666666667 + 6.666666666666667 = 13.333333333333334 -> 6.666666666666667 / 6.666666666666667 = 1 (left: 1 6.666666666666667) -> 1 * 6.666666666666667 = 6.666666666666667 (left: 6.666666666666667",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "14 "
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "8 + 8 = 16 (left: 10 12 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "12 80"
                }
            },
            "Step 1": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.666666666666667 (left: 6.666666666666667)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.666666666666667 (left: 6.666666666666667) -> 6.666666666666667 + 6.666666666666667 = 13.333333333333334",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.666666666666667 (left: 6.666666666666667) -> 6.666666666666667 + 6.666666666666667 = 13.333333333333334 -> 6.666666666666667 / 6.666666666666667 = 1 (left: 1 6.666666666666667)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "12 80"
                }
            },
            "Step 4": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 / 80 = 0.15 (left: 0.15)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 / 80 = 0.15 (left: 0.15) -> 0.15 * 2 = 0.3",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 / 80 = 0.15 (left: 0.15) -> 0.15 * 2 = 0.3 -> 0.15 * 0.2 = 0.03",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "0 15"
                }
            },
            "Step 7": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 * 80 = 960 (left: 960) -> 9 + 6 = 15 (left: 15 0) -> 15 - 0 = 15 (left: 0 15) -> 15 / 0 = undefined (left: 0 15)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 * 80 = 960 (left: 960) -> 9 + 6 = 15 (left: 15 0) -> 15 - 0 = 15 (left: 0 15) -> 15 / 0 = undefined (left: 0 15) -> 0 + 15 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "0.15 * 0.2 = 0.03"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "8 * 8 = 64 (left: 10 12 64)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "10 12 64"
                }
            },
            "Step 1": {
                "Step": "8 * 8 = 64 (left: 10 12 64) -> 64 + 10 = 74 (left: 12 74)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 * 8 = 64 (left: 10 12 64) -> 64 + 10 = 74 (left: 12 74) -> 74 / 12 = 6.166666666666667 (left: 6.166666666666667)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 * 8 = 64 (left: 10 12 64) -> 64 + 10 = 74 (left: 12 74) -> 74 / 12 = 6.166666666666667 (left: 6.166666666666667) -> There seems to be a mistake in the input provided. The input should consist of integers and arithmetic operators. Please provide the correct input for further calculation.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "12 80"
                }
            },
            "Step 4": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 - 12 = 68 (left: 68)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 - 12 = 68 (left: 68) -> 6 + 8 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 - 12 = 68 (left: 68) -> 6 + 8 = 14 (left: 14) -> No possible next steps, 14 is the final result.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "0 15"
                }
            },
            "Step 7": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 * 80 = 960 (left: 960) -> 9 + 6 = 15 (left: 15 0) -> 15 - 0 = 15 (left: 0 15) -> 15 - 0 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "There are no possible next steps with the input 15."
                }
            },
            "Step 8": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 * 80 = 960 (left: 960) -> 9 + 6 = 15 (left: 15) -> There are no possible next steps with the input 15. -> There are no possible next steps with the input 15.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "8 * 8 = 64 (left: 10 12 64)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "8 12 18"
                }
            },
            "Step 1": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 8 * 12 = 96 (left: 18 96)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 8 * 12 = 96 (left: 18 96) -> 18 + 96 = 114 (left: 114)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 8 * 12 = 96 (left: 18 96) -> 18 + 96 = 114 (left: 114) -> 114 / 1 = 114 (left: 114)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "12 80"
                },
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "12 80"
                }
            },
            "Step 4": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 * 80 = 960 (left: 960)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 * 80 = 960 (left: 960) -> 9 + 6 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 * 80 = 960 (left: 960) -> 9 + 6 = 15 (left: 15) -> There are no possible next steps with the input 15.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "0 15"
                }
            },
            "Step 7": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 * 80 = 960 (left: 960) -> 9 + 6 = 15 (left: 15 0) -> 15 - 0 = 15 (left: 0 15) -> 15 / 0 = undefined (left: 15)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "1 6.666666666666667"
                }
            },
            "Step 8": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.666666666666667 (left: 6.666666666666667) -> 6.666666666666667 + 6.666666666666667 = 13.333333333333334 -> 6.666666666666667 / 6.666666666666667 = 1 (left: 1 6.666666666666667) -> 1 * 6.666666666666667 = 6.666666666666667 (left: 6.666666666666667)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "6.66666666667 / 2 = 3.33333333334"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "10 + 8 = 18 (left: 8 12 18)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "12 80"
                }
            },
            "Step 1": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 + 80 = 92 (left: 92)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 + 80 = 92 (left: 92) -> 9 + 2 = 11",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 + 80 = 92 (left: 92) -> 9 + 2 = 11 -> 2 - 9 = -7 (left: -7 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "12 80"
                }
            },
            "Step 4": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 - 12 = 68 (left: 68)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 - 12 = 68 (left: 68) -> 68 / 2 = 34 (left: 34)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 - 12 = 68 (left: 68) -> 68 / 2 = 34 (left: 34) -> 3 + 4 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "There seems to be a mistake in the input provided. The input should consist of integers and arithmetic operators. Please provide the correct input for further calculation."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "7 11"
                }
            },
            "Step 7": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 + 80 = 92 (left: 92) -> 9 + 2 = 11 -> 9 - 2 = 7 (left: 7 11) -> 11 - 7 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "6.66666666667 / 2 = 3.33333333334"
                }
            },
            "Step 8": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.66666666667 (left: 6.66666666667) -> 6.66666666667 - 2 = 4.66666666667 -> 6.66666666667 / 2 = 3.33333333334 -> 6.66666666667 - 2 = 4.66666666667 (left: 4.66666666667 3.",
                "Pruning": null
            }
        },
        "Input": "8 8 10 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "962": {
        "puzzle": "1 3 8 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 3 8 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "1 * 3 = 3 (left: 3 8 13) -> 8 - 3 = 5 (left: 5 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 * 3 = 3 (left: 3 8 13) -> 8 - 3 = 5 (left: 5 13) -> 13 - 5 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 * 3 = 3 (left: 3 8 13) -> 8 - 3 = 5 (left: 5 13) -> 13 - 5 = 8 (left: 8) -> 8 / 8 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "1 5 13"
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 4": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 12 / 8 = 1.5 (left: 3 1.5)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 12 / 8 = 1.5 (left: 3 1.5) -> 3 * 1.5 = 4.5 (left: 1.5 4.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 12 / 8 = 1.5 (left: 3 1.5) -> 3 * 1.5 = 4.5 (left: 1.5 4.5) -> 1.5 * 4.5 = 6.75 (left: 6.75)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "2.99 9.01"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "2 16"
                }
            },
            "Step 7": {
                "Step": "13 / 1 = 13 (left: 3 8  -> 8 / 3 = 2.6666666666666665 (left: 2.6666666666666665) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16) -> 16 - 2 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "2 16"
                }
            },
            "Step 8": {
                "Step": "13 / 1 = 13 (left: 3 8  -> 8 / 3 = 2.6666666666666665 (left: 2.6666666666666665) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16) -> 2 + 16 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "8 + 1 = 9"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 4 8 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 1": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 - 3 = 5 (left: 5 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 - 3 = 5 (left: 5 12) -> 5 * 12 = 60 (left: 60)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 - 3 = 5 (left: 5 12) -> 5 * 12 = 60 (left: 60) -> 60 / 10 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "3 8 "
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 4": {
                "Step": "3 * 1 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 1 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 / 13 = 0.8461538461538461 (left: 0.8461538461538461)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 1 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 / 13 = 0.8461538461538461 (left: 0.8461538461538461) -> 0.8461538461538461 / 2 = 0.42307692307692305",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "0.8888888888888888 * 2 = 1.7777777777777776"
                }
            },
            "Step 7": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 12 - 3 = 9 (left: 8 9) -> 8 / 9 = 0.8888888888888888 (left: 0.8888888888888888) -> 0.8888888888888888 * 2 = 1.7777777777777776 -> 0.8888888888888888 - 2 = -1.1111111111111112",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 12 - 3 = 9 (left: 8 9) -> 8 / 9 = 0.8888888888888888 (left: 0.8888888888888888) -> 0.8888888888888888 * 2 = 1.7777777777777776 -> 0.8888888888888888 - 2 = -1.1111111111111112 -> 2 / 0.8888888888888888 = 2.25",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "8 - 3 = 5 (left: 1 5 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "3 * 1 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 1 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 + 13 = 37 (left: 37)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 1 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 + 13 = 37 (left: 37) -> 37 / 2 = 18.5 (left: 18.5)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "3 8 13"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "3 8 "
                }
            },
            "Step 4": {
                "Step": "13 / 1 = 13 (left: 3 8  -> 8 / 3 = 2.66666666667 (left: 2.66666666667)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 / 1 = 13 (left: 3 8  -> 8 / 3 = 2.66666666667 (left: 2.66666666667) -> There are no possible next steps for the input 2.66666666667.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 / 1 = 13 (left: 3 8  -> 8 / 3 = 2.66666666667 (left: 2.66666666667) -> There are no possible next steps for the input 2.66666666667. -> There are no possible next steps for the input 2.66666666667.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "2.99 9.01"
                }
            },
            "Step 7": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 / 3 = 2.67 (left: 2.67 8 12) -> 8 / 2.67 \u2248 2.99 (left: 12 2.99) -> 12 - 2.99 = 9.01 (left: 2.99 9.01) -> 2.99 / 9.01 = 0.332963 (left: 0.332963)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "There are no possible next steps for the input 2.66666666667."
                }
            },
            "Step 8": {
                "Step": "13 / 1 = 13 (left: 3 8  -> 8 / 3 = 2.66666666667 (left: 2.66666666667) -> There are no possible next steps for the input 2.66666666667. -> There are no possible next steps for the input 2.66666666667. -> There are no possible next steps for the input 2.66666666667.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 3 8 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 1": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 - 8",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 - 8 -> 3 - 8 = -5",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 - 8 -> 3 - 8 = -5 -> 3 + -8 = -5 (left: -5)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "1 5 13"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "3 8 "
                }
            },
            "Step 4": {
                "Step": "13 / 1 = 13 (left: 3 8  -> 3 + 8 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 / 1 = 13 (left: 3 8  -> 3 + 8 = 11 (left: 11) -> 11 / 2 = 5.5 (left: 5.5)  ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 / 1 = 13 (left: 3 8  -> 3 + 8 = 11 (left: 11) -> 11 / 2 = 5.5 (left: 5.5)   -> 5.5 / 2 = 2.75 (left: 2.75)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "0.8888888888888888 * 2 = 1.7777777777777776"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "2 16"
                }
            },
            "Step 7": {
                "Step": "13 / 1 = 13 (left: 3 8  -> 8 / 3 = 2.6666666666666665 (left: 2.6666666666666665) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16) -> 16 - 2 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "8 + 1 = 9"
                }
            },
            "Step 8": {
                "Step": "13 / 1 = 13 (left: 3 8  -> 4 + 5 = 9 (left: 9) -> 9 * 9 = 81 (left: 81) -> 8 + 1 = 9 -> 8 / 1 = 8 (left: 9 8)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 * 1 = 3 (left: 3 8 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "3 * 1 = 3 (left: 3 8 13) -> 8 - 3 = 5 (left: 5 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 1 = 3 (left: 3 8 13) -> 8 - 3 = 5 (left: 5 13) -> 13 + 5 = 18 (left: 18)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 1 = 3 (left: 3 8 13) -> 8 - 3 = 5 (left: 5 13) -> 13 + 5 = 18 (left: 18) -> There are no possible next steps with the number 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 4": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 / 3 = 2.67 (approximated) (left: 2.67 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 / 3 = 2.67 (approximated) (left: 2.67 12) -> 2.67 + 12 = 14.67 (left: 14.67)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 / 3 = 2.67 (approximated) (left: 2.67 12) -> 2.67 + 12 = 14.67 (left: 14.67) -> There is only one number given (14.67), so there are no possible next steps to perform any operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "There is only one number given (14.67"
                }
            },
            "Step 7": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 / 3 = 2.67 (approximated) (left: 2.67 12) -> 2.67 + 12 = 14.67 (left: 14.67) -> There is only one number given (14.67), so there are no possible next steps to perform any operations. -> The input seems to be incomplete or incorrect. Please provide a valid input with numbers separated by spaces.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 / 3 = 2.67 (approximated) (left: 2.67 12) -> 2.67 + 12 = 14.67 (left: 14.67) -> There is only one number given (14.67), so there are no possible next steps to perform any operations. -> The input seems to be incomplete or incorrect. Please provide a valid input with numbers separated by spaces. -> 8 / 8 = 1 (left: 1 14 16)",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "8 - 1 = 7 (left: 3 7 ",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 8 "
                }
            },
            "Step 1": {
                "Step": "13 / 1 = 13 (left: 3 8  -> 4 + 5 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 / 1 = 13 (left: 3 8  -> 4 + 5 = 9 (left: 9) -> 9 * 9 = 81 (left: 81)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 / 1 = 13 (left: 3 8  -> 4 + 5 = 9 (left: 9) -> 9 * 9 = 81 (left: 81) -> 8 + 1 = 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 4": {
                "Step": "3 * 1 = 3 (left: 3 8 13) -> 8 / 3 = 2.66666666667 (left: 2.66666666667 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 1 = 3 (left: 3 8 13) -> 8 / 3 = 2.66666666667 (left: 2.66666666667 13) -> 13 - 2.66666666667 = 10.333333333",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 1 = 3 (left: 3 8 13) -> 8 / 3 = 2.66666666667 (left: 2.66666666667 13) -> 13 - 2.66666666667 = 10.333333333 -> 13 * 2.66666666667 = 34.66666666629 (left: 34.66666666629)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "8 + 1 = 9"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "2 16"
                }
            },
            "Step 7": {
                "Step": "13 / 1 = 13 (left: 3 8  -> 8 / 3 = 2.6666666666666665 (left: 2.6666666666666665) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16) -> 16 / 2 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "There is only one number given (14.67"
                }
            },
            "Step 8": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 / 3 = 2.67 (approximated) (left: 2.67 12) -> 2.67 + 12 = 14.67 (left: 14.67) -> There is only one number given (14.67), so there are no possible next steps to perform any operations. -> There is only one number given, so no operations can be performed.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "3 * 1 = 3 (left: 3 8 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "3 * 1 = 3 (left: 3 8 13) -> 8 / 3 = 2.67 (left: 2.67 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 1 = 3 (left: 3 8 13) -> 8 / 3 = 2.67 (left: 2.67 13) -> 13 / 2.67 = 4.87 (left: 2.67 4.87)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 1 = 3 (left: 3 8 13) -> 8 / 3 = 2.67 (left: 2.67 13) -> 13 / 2.67 = 4.87 (left: 2.67 4.87) -> 2.67 + 4.87 = 7.54 (left: 7.54)",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "3 8 "
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "3 8 "
                }
            },
            "Step 4": {
                "Step": "13 / 1 = 13 (left: 3 8  -> 8 / 3 = 2.6666666666666665 (left: 2.6666666666666665)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 / 1 = 13 (left: 3 8  -> 8 / 3 = 2.6666666666666665 (left: 2.6666666666666665) -> There is only one possible next step:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 / 1 = 13 (left: 3 8  -> 8 / 3 = 2.6666666666666665 (left: 2.6666666666666665) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps for the input 2.66666666667."
                }
            },
            "Step 7": {
                "Step": "13 / 1 = 13 (left: 3 8  -> 8 / 3 = 2.66666666667 (left: 2.66666666667) -> There are no possible next steps for the input 2.66666666667. -> There are no possible next steps for the input 2.66666666667. -> There are no possible next steps for the input 2.66666666667.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 / 1 = 13 (left: 3 8  -> 8 / 3 = 2.66666666667 (left: 2.66666666667) -> There are no possible next steps for the input 2.66666666667. -> There are no possible next steps for the input 2.66666666667. -> There are no possible next steps for the input 2.66666666667. -> 2.66666666667 * 2 = 5.33333333334 (left: 5.33333333334)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "0.8888888888888888 * 2 = 1.7777777777777776"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "1 * 3 = 3 (left: 3 8 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 1": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 / 3 = 2.67 (left: 2.67 8 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 / 3 = 2.67 (left: 2.67 8 12) -> 8 / 2.67 \u2248 2.99 (left: 12 2.99)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 / 3 = 2.67 (left: 2.67 8 12) -> 8 / 2.67 \u2248 2.99 (left: 12 2.99) -> 12 - 2.99 = 9.01 (left: 2.99 9.01)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 4": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 * 8 = 24 (left: 8 12 24)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 * 8 = 24 (left: 8 12 24) -> 24 - 8 = 16 (left: 16 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 * 8 = 24 (left: 8 12 24) -> 24 - 8 = 16 (left: 16 24) -> 24 - 16 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "There are no possible next steps with the number 18."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "8 + 1 = 9"
                }
            },
            "Step 7": {
                "Step": "13 / 1 = 13 (left: 3 8  -> 4 + 5 = 9 (left: 9) -> 9 * 9 = 81 (left: 81) -> 8 + 1 = 9 -> 8 / 1 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "There are no possible next steps with the number 18."
                }
            },
            "Step 8": {
                "Step": "3 * 1 = 3 (left: 3 8 13) -> 8 - 3 = 5 (left: 5 13) -> 13 + 5 = 18 (left: 18) -> There are no possible next steps with the number 18. -> There are no possible next steps with the number 18.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 3 8 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 1": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 12 - 3 = 9 (left: 8 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 12 - 3 = 9 (left: 8 9) -> 8 / 9 = 0.8888888888888888 (left: 0.8888888888888888)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 12 - 3 = 9 (left: 8 9) -> 8 / 9 = 0.8888888888888888 (left: 0.8888888888888888) -> 0.8888888888888888 * 2 = 1.7777777777777776",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 4": {
                "Step": "3 * 1 = 3 (left: 3 8 13) -> 8 - 3 = 5 (left: 5 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 1 = 3 (left: 3 8 13) -> 8 - 3 = 5 (left: 5 13) -> 5 * 13 = 65 (left: 65)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 1 = 3 (left: 3 8 13) -> 8 - 3 = 5 (left: 5 13) -> 5 * 13 = 65 (left: 65) -> 65 - 2 = 63 (left: 2)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "There are no possible next steps with the number 18."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "0.8461538461538461 / 2 = 0.42307692307692305"
                }
            },
            "Step 7": {
                "Step": "3 * 1 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 / 13 = 0.8461538461538461 (left: 0.8461538461538461) -> 0.8461538461538461 / 2 = 0.42307692307692305 -> 0.8461538461538461 + 2 = 2.846153846153846 (left: 0.8461538461538461 0.42307692307692305 2.846153846153846)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 1 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 / 13 = 0.8461538461538461 (left: 0.8461538461538461) -> 0.8461538461538461 / 2 = 0.42307692307692305 -> 0.8461538461538461 + 2 = 2.846153846153846 (left: 0.8461538461538461 0.42307692307692305 2.846153846153846) -> 0.8461538461538461 + 0.42307692307692305 = 1.2692307692307691 (left: 1.2692307692307691 2.846153846153846)",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "13 / 1 = 13 (left: 3 8 ",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "1 * 3 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 * 3 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 / 13 = 1.846 (left: 1.846)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 * 3 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 / 13 = 1.846 (left: 1.846) -> 1.846 - 2 = -0.154 (left: -0.154)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "3 8 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 4": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 12 - 3 = 9 (left: 9 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 12 - 3 = 9 (left: 9 12) -> 9 / 12 = 0.75 (left: 0.75)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 12 - 3 = 9 (left: 9 12) -> 9 / 12 = 0.75 (left: 0.75) -> 0.75 * 2 = 1.5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "There is only one number given (14.67"
                }
            },
            "Step 7": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 / 3 = 2.67 (approximated) (left: 2.67 12) -> 2.67 + 12 = 14.67 (left: 14.67) -> There is only one number given (14.67), so there are no possible next steps to perform any operations. -> There are no possible next steps with only one number given.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 / 3 = 2.67 (approximated) (left: 2.67 12) -> 2.67 + 12 = 14.67 (left: 14.67) -> There is only one number given (14.67), so there are no possible next steps to perform any operations. -> There are no possible next steps with only one number given. -> Possible next steps: ",
                "Pruning": null
            }
        },
        "Input": "1 3 8 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "963": {
        "puzzle": "4 4 7 10",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 4 7 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 4 - 3 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 4 - 3 = 1 (left: 1) -> 1 - 1 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 4 - 3 = 1 (left: 1) -> 1 - 1 = 0 (left: 0) -> There are no possible next steps with the input 0 as there are no numbers provided for calculations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "3 4 10"
                }
            },
            "Step 4": {
                "Step": "7 - 4 = 3 (left: 3 4 10) -> 10 / 3 = 3.33 (left: 3.33 4)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 - 4 = 3 (left: 3 4 10) -> 10 / 3 = 3.33 (left: 3.33 4) -> 3.33 + 4 = 7.33 (left: 7.33)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 4 = 3 (left: 3 4 10) -> 10 / 3 = 3.33 (left: 3.33 4) -> 3.33 + 4 = 7.33 (left: 7.33) -> There are no possible next steps with the input 7.33 as it is a single number and not an equation.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "8 10"
                }
            },
            "Step 7": {
                "Step": "4 / 4 = 1 (left: 1 7 10) -> 1 + 7 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 / 4 = 1 (left: 1 7 10) -> 1 + 7 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> 18 - 2 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "There is only one possible next step: you can't perform any operation with just one number."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 7 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 4 / 3 = 1.33333 (left: 1.33333)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 4 / 3 = 1.33333 (left: 1.33333) -> 1.33333 - 2 = -0.66667",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 4 / 3 = 1.33333 (left: 1.33333) -> 1.33333 - 2 = -0.66667 -> 1.33333 / -2 = -0.666665 (left: -0.666665 -0.66667)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "3 4 10"
                }
            },
            "Step 4": {
                "Step": "7 - 4 = 3 (left: 3 4 10) -> 10 - 3 = 7 (left: 4 7)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 - 4 = 3 (left: 3 4 10) -> 10 - 3 = 7 (left: 4 7) -> 7 - 4 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 4 = 3 (left: 3 4 10) -> 10 - 3 = 7 (left: 4 7) -> 7 - 4 = 3 (left: 3) -> There are no possible next steps with the input of 3.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "8 10"
                }
            },
            "Step 7": {
                "Step": "4 / 4 = 1 (left: 1 7 10) -> 1 + 7 = 8 (left: 8 10) -> 10 / 8 = 1.25 (left: 1.25)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 / 4 = 1 (left: 1 7 10) -> 1 + 7 = 8 (left: 8 10) -> 10 / 8 = 1.25 (left: 1.25) -> 1.25 * 2 = 2.5",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 7 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 5 * 10 = 50 (left: 50)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 5 * 10 = 50 (left: 50) -> 50 + 2 = 52 (left: 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 5 * 10 = 50 (left: 50) -> 50 + 2 = 52 (left: 2) -> There is only one possible next step: you can't perform any operation with just one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 7 + 8 = 15 (left: 10 15)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 7 + 8 = 15 (left: 10 15) -> 10 - 15 = -5 (left: -5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 7 + 8 = 15 (left: 10 15) -> 10 - 15 = -5 (left: -5) -> There are no possible next steps with the input of -5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "8 10"
                }
            },
            "Step 7": {
                "Step": "4 / 4 = 1 (left: 1 7 10) -> 1 + 7 = 8 (left: 8 10) -> 8 / 10 = 0.8 (left: 0.8)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 / 4 = 1 (left: 1 7 10) -> 1 + 7 = 8 (left: 8 10) -> 8 / 10 = 0.8 (left: 0.8) -> There are no possible next steps with the input of 0.8.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 - 4 = 3 (left: 3 4 ",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 8 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 8 10) -> 10 - 1 = 9 (left: 8 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 8 10) -> 10 - 1 = 9 (left: 8 9) -> 8 + 9 = 17 (left: 17)",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "7 8 10"
                },
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "3 4 10"
                }
            },
            "Step 4": {
                "Step": "7 - 4 = 3 (left: 3 4 10) -> 4 * 3 = 12 (left: 12 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 - 4 = 3 (left: 3 4 10) -> 4 * 3 = 12 (left: 12 10) -> 12 * 10 = 120 (left: 120)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 4 = 3 (left: 3 4 10) -> 4 * 3 = 12 (left: 12 10) -> 12 * 10 = 120 (left: 120) -> 120 / 10 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "No possible next steps."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "8 10"
                }
            },
            "Step 7": {
                "Step": "4 / 4 = 1 (left: 1 7 10) -> 1 + 7 = 8 (left: 8 10) -> 10 / 8 = 1.25 (left: 1.25)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 / 4 = 1 (left: 1 7 10) -> 1 + 7 = 8 (left: 8 10) -> 10 / 8 = 1.25 (left: 1.25) -> 1.25 + 2 = 3.25",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 + 4 = 8 (left: 7 8 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 4 - 3 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 4 - 3 = 1 (left: 1) -> There are no possible next steps with just one number provided.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 4 - 3 = 1 (left: 1) -> There are no possible next steps with just one number provided. -> Provide at least two numbers to perform mathematical operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "3 4 10"
                }
            },
            "Step 4": {
                "Step": "7 - 4 = 3 (left: 3 4 10) -> 3 + 4 = 7 (left: 7 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 - 4 = 3 (left: 3 4 10) -> 3 + 4 = 7 (left: 7 10) -> 7 + 10 = 17 (left: 17)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 4 = 3 (left: 3 4 10) -> 3 + 4 = 7 (left: 7 10) -> 7 + 10 = 17 (left: 17) -> There are no possible next steps with the input of 17.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "8 10"
                }
            },
            "Step 7": {
                "Step": "4 / 4 = 1 (left: 1 7 10) -> 1 + 7 = 8 (left: 8 10) -> 10 - 8 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 / 4 = 1 (left: 1 7 10) -> 1 + 7 = 8 (left: 8 10) -> 10 - 8 = 2 (left: 2) -> 2 + 2 = 4",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "7 - 4 = 3 (left: 3 4 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 10 - 5 = 5",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 10 - 5 = 5 -> 10 + 5 = 15 (left: 5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 10 - 5 = 5 -> 10 + 5 = 15 (left: 5) -> There is only one possible next step: 5 + 5 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "3 4 10"
                },
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 7 / 8 = ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 7 / 8 =  -> 7 / 8 = 0.875",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 7 / 8 =  -> 7 / 8 = 0.875 -> 15 * 0.875 = 13.125 (left: 13.125)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "Provide at least two numbers to perform mathematical operations."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "8 10"
                }
            },
            "Step 7": {
                "Step": "4 / 4 = 1 (left: 1 7 10) -> 1 + 7 = 8 (left: 8 10) -> 10 + 8 = 18 (left: 18)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 / 4 = 1 (left: 1 7 10) -> 1 + 7 = 8 (left: 8 10) -> 10 + 8 = 18 (left: 18) -> There are no possible next steps with the input of 18.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "7 - 4 = 3 (left: 3 4 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 7 * 8 = 56 (left: 10 56)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 7 * 8 = 56 (left: 10 56) -> 10 + 56 = 66 (left: 66)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 7 * 8 = 56 (left: 10 56) -> 10 + 56 = 66 (left: 66) -> There are no possible next steps with the input 66 as it is a single number and not an operation with multiple numbers.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 7 * 8 = 56 (left: 10 56)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 7 * 8 = 56 (left: 10 56) -> 10 * 56 = 560 (left: 560)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 7 * 8 = 56 (left: 10 56) -> 10 * 56 = 560 (left: 560) -> 5 * 6 = 30 (left: 30 0)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "8 10"
                }
            },
            "Step 7": {
                "Step": "4 / 4 = 1 (left: 1 7 10) -> 1 + 7 = 8 (left: 8 10) -> 8 * 10 = 80 (left: 80)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 / 4 = 1 (left: 1 7 10) -> 1 + 7 = 8 (left: 8 10) -> 8 * 10 = 80 (left: 80) -> 80 * 2 = 160 (left: 2)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "-0.666665 -0.66667"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "7 - 4 = 3 (left: 3 4 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 3 + 4 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 3 + 4 = 7 (left: 7) -> 7 + 8 = 15 (left: 8 15)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 3 + 4 = 7 (left: 7) -> 7 + 8 = 15 (left: 8 15) -> 8 - 15 = -7 (left: -7)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "3 4 10"
                },
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "3 4 10"
                }
            },
            "Step 4": {
                "Step": "7 - 4 = 3 (left: 3 4 10) -> 3 * 10 = 30 (left:",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 - 4 = 3 (left: 3 4 10) -> 3 * 10 = 30 (left: -> 10 - 3 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 4 = 3 (left: 3 4 10) -> 3 * 10 = 30 (left: -> 10 - 3 = 7 (left: 7) -> 7 * 8 = 56 (left: 56)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "There is only one possible next step: you can't perform any operation with just one number."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "8 10"
                }
            },
            "Step 7": {
                "Step": "4 / 4 = 1 (left: 1 7 10) -> 1 + 7 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 / 4 = 1 (left: 1 7 10) -> 1 + 7 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> No possible next steps with the number 18.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 7 16 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10) -> 10 + 10 = 20",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "-0.666665 -0.66667"
                }
            },
            "Step 4": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 4 / 3 = 1.33333 (left: 1.33333) -> 1.33333 - 2 = -0.66667 -> 1.33333 / -2 = -0.666665 (left: -0.666665 -0.66667) -> -0.666665 - (-0.66667) = 0.000005 (left: -0.666665 0.000005)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 4 / 3 = 1.33333 (left: 1.33333) -> 1.33333 - 2 = -0.66667 -> 1.33333 / -2 = -0.666665 (left: -0.666665 -0.66667) -> -0.666665 - (-0.66667) = 0.000005 (left: -0.666665 0.000005) -> -0.666665 / 0.000005 = -133333 (left: -133333)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "1 7 10"
                }
            },
            "Step 6": {
                "Step": "4 / 4 = 1 (left: 1 7 10) -> 1 + 7 = 8 (left: 8 10)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "8 10"
                }
            },
            "Step 7": {
                "Step": "4 / 4 = 1 (left: 1 7 10) -> 1 + 7 = 8 (left: 8 10) -> 10 - 8 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 / 4 = 1 (left: 1 7 10) -> 1 + 7 = 8 (left: 8 10) -> 10 - 8 = 2 (left: 2) -> No possible next steps with only one number provided.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "4 + 4 = 8 (left: 7 8 10)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 4 / 3 = 1.33 (left: 1.33)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 4 / 3 = 1.33 (left: 1.33) -> There is only one number provided, so there are no possible next steps for calculations.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 4 / 3 = 1.33 (left: 1.33) -> There is only one number provided, so there are no possible next steps for calculations. -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 10) -> 3 * 10 = 30 (left: 30)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 10) -> 3 * 10 = 30 (left: 30) -> 30 / 2 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "There is only one possible next step: you can't perform any operation with just one number."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "8 10"
                }
            },
            "Step 7": {
                "Step": "4 / 4 = 1 (left: 1 7 10) -> 1 + 7 = 8 (left: 8 10) -> 10 / 8 = 1.25 (left: 1.25)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 / 4 = 1 (left: 1 7 10) -> 1 + 7 = 8 (left: 8 10) -> 10 / 8 = 1.25 (left: 1.25) -> 1.25 * 8 = 10 (left: 8 10)",
                "Pruning": null
            }
        },
        "Input": "4 4 7 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "964": {
        "puzzle": "1 7 10 13",
        "Agent 0": {
            "Step 0": {
                "Step": "7 - 1 = 6 (left: 6 10 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6) -> 6 + 8 = 14 (left: 8 14)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6) -> 6 + 8 = 14 (left: 8 14) -> 14 / 8 = 1.75 (left: 1.75)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "7 10 "
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "7 10 12"
                }
            },
            "Step 4": {
                "Step": "13 - 1 = 12 (left: 7 10 12) -> 10 / 7 = 1.42857 (left: 1.42857 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 1 = 12 (left: 7 10 12) -> 10 / 7 = 1.42857 (left: 1.42857 12) -> 12 / 1.42857 = 8.4 (left: 8.4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 1 = 12 (left: 7 10 12) -> 10 / 7 = 1.42857 (left: 1.42857 12) -> 12 / 1.42857 = 8.4 (left: 8.4) -> There are no possible next steps for the input 8.4 as it is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "0.18571428571428572 + 2 = 2.1857142857142856"
                }
            },
            "Step 7": {
                "Step": "1 * 7 = 7 (left: 7 10 13) -> 7 * 10 = 70 (left: 13 70) -> 13 / 70 = 0.18571428571428572 (left: 0.18571428571428572) -> 0.18571428571428572 + 2 = 2.1857142857142856 -> 2 - 0.18571428571428572 = 1.8142857142857143 (left: 0.18571428571428572 1.8142857142857143)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 * 7 = 7 (left: 7 10 13) -> 7 * 10 = 70 (left: 13 70) -> 13 / 70 = 0.18571428571428572 (left: 0.18571428571428572) -> 0.18571428571428572 + 2 = 2.1857142857142856 -> 2 - 0.18571428571428572 = 1.8142857142857143 (left: 0.18571428571428572 1.8142857142857143) -> 0.18571428571428572 + 1.8142857142857143 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "7 8"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 7 10 ",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5) -> There are no more possible next steps with the input 5.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5) -> There are no more possible next steps with the input 5. -> 5 * 5 = 25 (left: 25)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "6 10 13"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "6 10 13"
                }
            },
            "Step 4": {
                "Step": "7 - 1 = 6 (left: 6 10 13) -> 10 - 6 = 4 (left: 4 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 - 1 = 6 (left: 6 10 13) -> 10 - 6 = 4 (left: 4 13) -> 13 - 4 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 1 = 6 (left: 6 10 13) -> 10 - 6 = 4 (left: 4 13) -> 13 - 4 = 9 (left: 9) -> 8 + 9 = 17 (left: 17)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "- Provide more numbers to work with"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "There are no possible next steps for the input 14.67 as it is already a single number."
                }
            },
            "Step 7": {
                "Step": "7 - 1 = 6 (left: 6 10 13) -> 10 / 6 = 1.67 (left: 1.67 13) -> 1.67 + 13 = 14.67 (left: 14.67) -> There are no possible next steps for the input 14.67 as it is already a single number. -> There are no possible next steps for the input 14.67 as it is already a single number.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 - 1 = 6 (left: 6 10 13) -> 10 / 6 = 1.67 (left: 1.67 13) -> 1.67 + 13 = 14.67 (left: 14.67) -> There are no possible next steps for the input 14.67 as it is already a single number. -> There are no possible next steps for the input 14.67 as it is already a single number. -> There are no possible next steps for the input 14.67 as it is already a single number.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 + 1 = 11 (left: 7 11 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 - 1 = 5 (",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 - 1 = 5 ( -> 6 - 1 = 5",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 - 1 = 5 ( -> 6 - 1 = 5 -> 6 - 1 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "7 10 13"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "7 10 12"
                }
            },
            "Step 4": {
                "Step": "13 - 1 = 12 (left: 7 10 12) -> 7 + 10 = 17 (left: 12 17)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 1 = 12 (left: 7 10 12) -> 7 + 10 = 17 (left: 12 17) -> 17 - 12 = 5 (left: 5 17)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 1 = 12 (left: 7 10 12) -> 7 + 10 = 17 (left: 12 17) -> 17 - 12 = 5 (left: 5 17) -> 5 + 17 = 22 (left: 22)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "There are no possible next steps with just the number 4."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps with just the number 4."
                }
            },
            "Step 7": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6) -> 6 - 2 = 4 (left: 4) -> There are no possible next steps with just the number 4. -> There are no possible next steps with just the number 4.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6) -> 6 - 2 = 4 (left: 4) -> There are no possible next steps with just the number 4. -> There are no possible next steps with just the number 4. -> 4 + 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "There are no possible next steps with just the number 4."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 7 10 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6) -> 8 - 6 = 2 (left: 2 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6) -> 8 - 6 = 2 (left: 2 8) -> 2 * 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "6 10 13"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "7 10 12"
                }
            },
            "Step 4": {
                "Step": "13 - 1 = 12 (left: 7 10 12) -> 10 / 7 = 1.43 (left: 1.43 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 1 = 12 (left: 7 10 12) -> 10 / 7 = 1.43 (left: 1.43 12) -> 1.43 * 12 = 17.16 (left: 17.16)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 1 = 12 (left: 7 10 12) -> 10 / 7 = 1.43 (left: 1.43 12) -> 1.43 * 12 = 17.16 (left: 17.16) -> There are no possible next steps for the input 17.16 as it is a single number and not an operation on multiple numbers.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "0.18571428571428572 + 2 = 2.1857142857142856"
                }
            },
            "Step 7": {
                "Step": "1 * 7 = 7 (left: 7 10 13) -> 7 * 10 = 70 (left: 13 70) -> 13 / 70 = 0.18571428571428572 (left: 0.18571428571428572) -> 0.18571428571428572 + 2 = 2.1857142857142856 -> 2 - 0.18571428571428572 = 1.8142857142857144 (left: 1.814285714285714",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "7 8"
                }
            },
            "Step 8": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 1 + 6 = 7 (left: 7) -> 7 / 8 = 0.875 (left: 0.875 8) -> 0.875 * 8 = 7 (left: 7 8) -> 7 + 8 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "7 8"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 - 7 = 6 (left: 1 6 ",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 1 + 6 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 1 + 6 = 7 (left: 7) -> 7 / 2 = 3.5 (left: 3.5 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 1 + 6 = 7 (left: 7) -> 7 / 2 = 3.5 (left: 3.5 8) -> 3.5 + 8 = 11.5 (left: 11.5)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "6 10 13"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "6 10 13"
                }
            },
            "Step 4": {
                "Step": "7 - 1 = 6 (left: 6 10 13) -> 10 / 6 = 1.67 (left: 1.67 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 - 1 = 6 (left: 6 10 13) -> 10 / 6 = 1.67 (left: 1.67 13) -> 1.67 + 13 = 14.67 (left: 14.67)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 1 = 6 (left: 6 10 13) -> 10 / 6 = 1.67 (left: 1.67 13) -> 1.67 + 13 = 14.67 (left: 14.67) -> There are no possible next steps for the input 14.67 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "There are no possible next steps for the input 17.16 as it is a single number and not an operation on multiple numbers."
                }
            },
            "Step 7": {
                "Step": "13 - 1 = 12 (left: 7 10 12) -> 10 / 7 = 1.43 (left: 1.43 12) -> 1.43 * 12 = 17.16 (left: 17.16) -> There are no possible next steps for the input 17.16 as it is a single number and not an operation on multiple numbers. -> There are no possible next steps for the input 17.16 as it is a single number and not an operation on multiple numbers.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 1 = 12 (left: 7 10 12) -> 10 / 7 = 1.43 (left: 1.43 12) -> 1.43 * 12 = 17.16 (left: 17.16) -> There are no possible next steps for the input 17.16 as it is a single number and not an operation on multiple numbers. -> There are no possible next steps for the input 17.16 as it is a single number and not an operation on multiple numbers. -> None",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "There are no possible next steps for the input 8.4 as it is a single number."
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "1 * 7 = 7 (left: 7 10 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 1 + 6 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 1 + 6 = 7 (left: 7) -> 7 / 8 = 0.875 (left: 0.875 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 1 + 6 = 7 (left: 7) -> 7 / 8 = 0.875 (left: 0.875 8) -> 0.875 * 8 = 7 (left: 7 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "7 10 13"
                }
            },
            "Step 4": {
                "Step": "1 * 7 = 7 (left: 7 10 13) -> 7 * 10 = 70 (left: 13 70)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 * 7 = 7 (left: 7 10 13) -> 7 * 10 = 70 (left: 13 70) -> 13 / 70 = 0.18571428571428572 (left: 0.18571428571428572)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 * 7 = 7 (left: 7 10 13) -> 7 * 10 = 70 (left: 13 70) -> 13 / 70 = 0.18571428571428572 (left: 0.18571428571428572) -> 0.18571428571428572 + 2 = 2.1857142857142856",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "There are no possible next steps for the input 17.16 as it is a single number and not an operation on multiple numbers."
                }
            },
            "Step 7": {
                "Step": "13 - 1 = 12 (left: 7 10 12) -> 10 / 7 = 1.43 (left: 1.43 12) -> 1.43 * 12 = 17.16 (left: 17.16) -> There are no possible next steps for the input 17.16 as it is a single number and not an operation on multiple numbers. -> There are no possible next steps for the input 17.16 as it is a single number and not an operation on multiple numbers.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 1 = 12 (left: 7 10 12) -> 10 / 7 = 1.43 (left: 1.43 12) -> 1.43 * 12 = 17.16 (left: 17.16) -> There are no possible next steps for the input 17.16 as it is a single number and not an operation on multiple numbers. -> There are no possible next steps for the input 17.16 as it is a single number and not an operation on multiple numbers. -> There are no possible next steps for the input 17.16 as it is a single number and not an operation on multiple numbers.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "7 - 1 = 6 (left: 6 10 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6) -> 6 - 2 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6) -> 6 - 2 = 4 (left: 4) -> There are no possible next steps with just the number 4.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "7 10 12"
                }
            },
            "Step 4": {
                "Step": "13 - 1 = 12 (left: 7 10 12) -> 7 - 10",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 1 = 12 (left: 7 10 12) -> 7 - 10 -> 7 - 10 = -3",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 1 = 12 (left: 7 10 12) -> 7 - 10 -> 7 - 10 = -3 -> 7 * 10 = 70 (left: 70)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "7 8"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "7 8"
                }
            },
            "Step 7": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 1 + 6 = 7 (left: 7) -> 7 / 8 = 0.875 (left: 0.875 8) -> 0.875 * 8 = 7 (left: 7 8) -> 7 + 8 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "There are no possible next steps with just the number 4."
                }
            },
            "Step 8": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6) -> 6 - 2 = 4 (left: 4) -> There are no possible next steps with just the number 4. -> 4 + 4 = 8",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "7 / 1 = 7 (left: 7 10 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6) -> 6 - 8 = -2 (left: -2 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6) -> 6 - 8 = -2 (left: -2 8) -> -2 + 8 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "7 10 13"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "6 10 13"
                }
            },
            "Step 4": {
                "Step": "7 - 1 = 6 (left: 6 10 13) -> 6 * 10 = 60 (left: 60 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 - 1 = 6 (left: 6 10 13) -> 6 * 10 = 60 (left: 60 13) -> 60 * 13 = 780 (left: 780)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 1 = 6 (left: 6 10 13) -> 6 * 10 = 60 (left: 60 13) -> 60 * 13 = 780 (left: 780) -> 78 + 0 =",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps with just the number 4."
                }
            },
            "Step 7": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6) -> 6 - 2 = 4 (left: 4) -> There are no possible next steps with just the number 4. -> 4 * 2 = 8 (left: 2 8)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6) -> 6 - 2 = 4 (left: 4) -> There are no possible next steps with just the number 4. -> 4 * 2 = 8 (left: 2 8) -> 8 - 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "7 8"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "10 + 1 = 11 (left: 7 11 13)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5) -> No possible next steps with just one number provided.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5) -> No possible next steps with just one number provided. -> - Provide more numbers to work with",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "7 10 13"
                }
            },
            "Step 4": {
                "Step": "1 * 7 = 7 (left: 7 10 13) -> 13 / 7 = 1.86 (left: 1.86 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 * 7 = 7 (left: 7 10 13) -> 13 / 7 = 1.86 (left: 1.86 10) -> 10 - 1.86 = 8.14 (left: 8.14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 * 7 = 7 (left: 7 10 13) -> 13 / 7 = 1.86 (left: 1.86 10) -> 10 - 1.86 = 8.14 (left: 8.14) -> 8 / 14 = 0.57 (left: 0.57)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "- Provide more numbers to work with"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "0.18571428571428572 + 2 = 2.1857142857142856"
                }
            },
            "Step 7": {
                "Step": "1 * 7 = 7 (left: 7 10 13) -> 7 * 10 = 70 (left: 13 70) -> 13 / 70 = 0.18571428571428572 (left: 0.18571428571428572) -> 0.18571428571428572 + 2 = 2.1857142857142856 -> 0.18571428571428572 / 2 = 0.09285714285714286 (left: 0.092857142",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "- Provide more numbers to work with"
                }
            },
            "Step 8": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5) -> No possible next steps with just one number provided. -> - Provide more numbers to work with -> -3 * 8 =",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "1 + 7 = 8 (left: 8 10 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 1 * 6 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 1 * 6 = 6 (left: 6) -> 6 / 6 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 1 * 6 = 6 (left: 6) -> 6 / 6 = 1 (left: 1) -> 1 / 1 = 1 (left: 1) ",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "7 10 12"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "7 10 13"
                }
            },
            "Step 4": {
                "Step": "1 * 7 = 7 (left: 7 10 13) -> 10 / 7 = 1.43 (left: 1.43 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 * 7 = 7 (left: 7 10 13) -> 10 / 7 = 1.43 (left: 1.43 13) -> 13 / 1.43 = 9.09 (left: 9.09)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 * 7 = 7 (left: 7 10 13) -> 10 / 7 = 1.43 (left: 1.43 13) -> 13 / 1.43 = 9.09 (left: 9.09) -> There is only one number given, so there are no possible next steps to perform arithmetic operations on.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "7 8"
                }
            },
            "Step 7": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 1 + 6 = 7 (left: 7) -> 7 / 8 = 0.875 (left: 0.875 8) -> 0.875 * 8 = 7 (left: 7 8) -> 8 - 7 = 1 (left: 1 8)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 1 + 6 = 7 (left: 7) -> 7 / 8 = 0.875 (left: 0.875 8) -> 0.875 * 8 = 7 (left: 7 8) -> 8 - 7 = 1 (left: 1 8) -> 1 + 8 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "- Provide more numbers to work with"
                }
            }
        },
        "Input": "1 7 10 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "965": {
        "puzzle": "1 9 10 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 9 10 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "1 9 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 1 9  -> 9 / 1 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 1 9  -> 9 / 1 = 9 (left: 9) -> 8 - 9 = -1 (left: -1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 1 9  -> 9 / 1 = 9 (left: 9) -> 8 - 9 = -1 (left: -1) -> Invalid input. Please enter a valid set of numbers.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "1 4 "
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 4 - 1 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 4 - 1 = 3 (left: 3) -> 3 + 8 = 11 (left: 11 8 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 4 - 1 = 3 (left: 3) -> 3 + 8 = 11 (left: 11 8 14) -> 14 - 11 = 3 (left: 3 8 14)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "3 8 14"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 4 - 1 = 3 (left: 3) -> 3 + 8 = 11 (left: 11 8 14) -> 14 - 11 = 3 (left: 3 8 14) -> 3 * 8 = 24 (left: 8 14 24)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 4 - 1 = 3 (left: 3) -> 3 + 8 = 11 (left: 11 8 14) -> 14 - 11 = 3 (left: 3 8 14) -> 3 * 8 = 24 (left: 8 14 24) -> 24 - 8 = 16 (left: 14 16)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 1 4 ",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "1 9 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 1 9  -> 9 / 1 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 1 9  -> 9 / 1 = 9 (left: 9) -> 9 - 8 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 1 9  -> 9 / 1 = 9 (left: 9) -> 9 - 8 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "8 10 13"
                }
            },
            "Step 4": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 / 3 = 2.67 (left: 2.67)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 / 3 = 2.67 (left: 2.67) -> There are no possible next steps as the input is only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "3 8 14"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 4 - 1 = 3 (left: 3) -> 3 + 8 = 11 (left: 11 8 14) -> 14 - 11 = 3 (left: 3 8 14) -> 14 - 8 = 6 (left: ",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "1 + 1 = 2"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 1 9  -> 9 / 1 = 9 (left: 9) -> 9 - 8 = 1 (left: 1) -> 1 + 1 = 2 -> 1 - 1 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "4 + 0 = 4"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 / 1 = 9 (left: 10 9 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "1 9 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 1 9  -> 9 / 1 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 1 9  -> 9 / 1 = 9 (left: 9) -> There are no possible next steps with the input of \"9\" given the numbers 2, 8, 8, 14.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 1 9  -> 9 / 1 = 9 (left: 9) -> There are no possible next steps with the input of \"9\" given the numbers 2, 8, 8, 14. -> There are no possible next steps with the input of \"9\" given the numbers 2, 8, 8, 14.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "1 4 "
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 4 / 1 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 4 / 1 = 4 (left: 4) -> There is only one possible next step: 4 + 0 = 4",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 4 / 1 = 4 (left: 4) -> There is only one possible next step: 4 + 0 = 4 -> 4 + 0 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "3 8 14"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 4 - 1 = 3 (left: 3) -> 3 + 8 = 11 (left: 11 8 14) -> 14 - 11 = 3 (left: 3 8 14) -> 3 + 8 = 11 (left: 8 11 14)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 4 - 1 = 3 (left: 3) -> 3 + 8 = 11 (left: 11 8 14) -> 14 - 11 = 3 (left: 3 8 14) -> 3 + 8 = 11 (left: 8 11 14) -> Input: 6",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "1 + 9 = 10 (left: 10 10 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "9 9 13"
                }
            },
            "Step 1": {
                "Step": "10 - 1 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 1 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4) -> 9 + 4 = 13 (left: 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 1 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4) -> 9 + 4 = 13 (left: 13) -> 13 - 8 = 5 (left: 8)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "10 9 "
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "8 10 13"
                }
            },
            "Step 4": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 10 + 13 = 23 (left: 8 23)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 10 + 13 = 23 (left: 8 23) -> 8 * 23 = 184 (left: 184) ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 10 + 13 = 23 (left: 8 23) -> 8 * 23 = 184 (left: 184)  -> 1 + 84 = 85 (left: 85)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "There are no possible next steps with the input 9."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "0 8"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 1 * 4 = 4 (left: 4) -> 4 + 4 = 8 -> 4 - 4 = 0 (left: 0 8) -> 8 * 0 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "0 4 8"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 1 * 4 = 4 (left: 4) -> 4 + 4 = 8 -> 4 - 4 = 0 (left: 0 4 8) -> Possible",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "0 4 8"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 * 9 = 9 (left: 9 10 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "9 9 13"
                }
            },
            "Step 1": {
                "Step": "10 - 1 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 1 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4) -> 9 * 4 = 36 (left: 36)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 1 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4) -> 9 * 4 = 36 (left: 36) -> 36 - 8 = 28 (left: 8)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "9 10 13"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "8 10 13"
                }
            },
            "Step 4": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 10 *",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 10 * -> 10 * 10 = 100 (left: 100 *)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 10 * -> 10 * 10 = 100 (left: 100 *) -> 100 - 50 = 50 (left: 50 *)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "0 8"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 1 * 4 = 4 (left: 4) -> 4 + 4 = 8 -> 4 - 4 = 0 (left: 0 8) -> 8 - 0 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "50 *"
                }
            },
            "Step 8": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 10 * -> 10 * 10 = 100 (left: 100 *) -> 100 - 50 = 50 (left: 50 *) -> 50 * 2 = 100 (left: 100)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "0 8"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "9 + 1 = 10 (left: 10 10 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 1 * 4 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 1 * 4 = 4 (left: 4) -> 4 + 4 = 8",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 1 * 4 = 4 (left: 4) -> 4 + 4 = 8 -> 4 - 4 = 0 (left: 0 4 8)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "8 10 13"
                }
            },
            "Step 4": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 10 / 8 = 1.25 (left: 1.25 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 10 / 8 = 1.25 (left: 1.25 13) -> 13 - 1.25 = 11.75 (left: 11.75)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 10 / 8 = 1.25 (left: 1.25 13) -> 13 - 1.25 = 11.75 (left: 11.75) -> There are no possible next steps for the input 11.75.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "3 8 14"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 4 - 1 = 3 (left: 3) -> 3 + 8 = 11 (left: 11 8 14) -> 14 - 11 = 3 (left: 3 8 14) -> 8 - 3 = 5 (left: ",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "There are no possible next steps with just one number."
                }
            },
            "Step 8": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 8 + 10 = 18 (left: 18 13) -> 18 - 13 = 5 (left: 5) -> There are no possible next steps with just one number. -> Division: 8 / 14 = 0.571428571 (left: 8 0.571428571)",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "9 - 1 = 8 (left: 8 10 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "1 9 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 1 9  -> 1 * 9 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 1 9  -> 1 * 9 = 9 (left: 9) -> 8 + 9 = 17 (left: 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 1 9  -> 1 * 9 = 9 (left: 9) -> 8 + 9 = 17 (left: 9) -> There are no possible next steps with the input 9.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "1 4 "
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 1 * 4 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 1 * 4 = 4 (left: 4) -> 4 + 4 = 8",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 1 * 4 = 4 (left: 4) -> 4 + 4 = 8 -> 4 - 4 = 0 (left: 0 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "3 8 14"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 4 - 1 = 3 (left: 3) -> 3 + 8 = 11 (left: 11 8 14) -> 14 - 11 = 3 (left: 3 8 14) -> 8 / 3 = 2.67 (left: 2.67 8 14)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 4 - 1 = 3 (left: 3) -> 3 + 8 = 11 (left: 11 8 14) -> 14 - 11 = 3 (left: 3 8 14) -> 8 / 3 = 2.67 (left: 2.67 8 14) -> 2.67 + 8 = 10.67 (left: 10.67 14)",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "1 + 9 = 10 (left: 10 10 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "9 9 13"
                }
            },
            "Step 1": {
                "Step": "10 - 1 = 9 (left: 9 9 13) -> 9 / 9 = 1 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 1 = 9 (left: 9 9 13) -> 9 / 9 = 1 (left: -> 9 * 9 = 81 (left: 81)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 1 = 9 (left: 9 9 13) -> 9 / 9 = 1 (left: -> 9 * 9 = 81 (left: 81) -> 8 / 1 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "1 4 "
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "8 10 13"
                }
            },
            "Step 4": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 8 + 10 = 18 (left: 13 18)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 8 + 10 = 18 (left: 13 18) -> 13 - 18 = -5 (left: -5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 8 + 10 = 18 (left: 13 18) -> 13 - 18 = -5 (left: -5) -> There is only one possible next step:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "3 8 14"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 4 - 1 = 3 (left: 3) -> 3 + 8 = 11 (left: 11 8 14) -> 14 - 11 = 3 (left: 3 8 14) -> 14 / 3 = 4.67",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 4 - 1 = 3 (left: 3) -> 3 + 8 = 11 (left: 11 8 14) -> 14 - 11 = 3 (left: 3 8 14) -> 14 / 3 = 4.67 -> There are no possible next steps for the input \"14 / 3 = 4.67\" as it is already a completed equation with a result.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "10 - 1 = 9 (left: 9 9 13)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "1 9 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 1 9  -> 1 + 9 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 1 9  -> 1 + 9 = 10 (left: 10) -> 10 + 8 = 18 (left: 8 18)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 1 9  -> 1 + 9 = 10 (left: 10) -> 10 + 8 = 18 (left: 8 18) -> 8 / 18 = 0.4444 (left: 0.4444)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "8 10 13"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "1 4 "
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 4 / 1 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 4 / 1 = 4 (left: 4) -> There are no possible next steps with just the number 4.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 4 / 1 = 4 (left: 4) -> There are no possible next steps with just the number 4. -> There are no possible next steps with just the number 4.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "3 8 14"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 4 - 1 = 3 (left: 3) -> 3 + 8 = 11 (left: 11 8 14) -> 14 - 11 = 3 (left: 3 8 14) -> 3 * 8 = 24 (left: 24 14)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 4 - 1 = 3 (left: 3) -> 3 + 8 = 11 (left: 11 8 14) -> 14 - 11 = 3 (left: 3 8 14) -> 3 * 8 = 24 (left: 24 14) -> 24 + 14 = 38 (left: 38) ",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "0 4 8"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 1 9 ",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "8 10 13"
                }
            },
            "Step 1": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 8 + 10 = 18 (left: 18 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 8 + 10 = 18 (left: 18 13) -> 18 - 13 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 8 + 10 = 18 (left: 18 13) -> 18 - 13 = 5 (left: 5) -> There are no possible next steps with just one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "8 10 13"
                }
            },
            "Step 4": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 10 + 13 = 23 (left: 8 23)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 10 + 13 = 23 (left: 8 23) -> 8 - 23 = -15 (left: -15)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 10 + 13 = 23 (left: 8 23) -> 8 - 23 = -15 (left: -15) -> -15 + 2 = -13 (left: 2)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "0 4 8"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "3 8 14"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 4 - 1 = 3 (left: 3) -> 3 + 8 = 11 (left: 11 8 14) -> 14 - 11 = 3 (left: 3 8 14) -> 14 - 8 = 6 (left: 3 ",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 4 - 1 = 3 (left: 3) -> 3 + 8 = 11 (left: 11 8 14) -> 14 - 11 = 3 (left: 3 8 14) -> 14 - 8 = 6 (left: 3  -> 3 + 14 = 17 (left: 14 17)",
                "Pruning": null
            }
        },
        "Input": "1 9 10 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "966": {
        "puzzle": "3 3 4 11",
        "Agent 0": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 3 7 4)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 + 4 = 10 (left: 10 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 + 4 = 10 (left: 10 11) -> 10 * 11 = 110 (left: 110)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 + 4 = 10 (left: 10 11) -> 10 * 11 = 110 (left: 110) -> There are no possible next steps for the input 110 as it only contains one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "2 12"
                }
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> Input: 10 2 -> 10 + 2 = 12 (left: 2 12) -> 2 + 12 = 14",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> Input: 10 2 -> 10 + 2 = 12 (left: 2 12) -> 2 + 12 = 14 -> 12 / 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "3 12 "
                }
            },
            "Step 6": {
                "Step": "4 * 3 = 12 (left: 3 12  -> 3 * 12 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "4 * 3 = 12 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> 36 - 2 = 34 (left: 2 34)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 * 3 = 12 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> 36 - 2 = 34 (left: 2 34) -> 34 / 2 = 17 (left: 17)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There are no possible next steps for the input 110 as it only contains one number."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 3 7 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 3 4  -> 3 * 4 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 / 2 = 6",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 / 2 = 6 -> 12 + 2 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "4 6 11"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "2 12"
                }
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> Input: 10 2 -> 10 + 2 = 12 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "3 7 11"
                }
            },
            "Step 5": {
                "Step": "11 - 4 = 7 (left: 3 7 11) -> 11 - 3 = 8 (left: 8 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 4 = 7 (left: 3 7 11) -> 11 - 3 = 8 (left: 8 11) -> 8 + 11 = 19 (left: 19)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "There are no possible next steps with the input 1.33333."
                }
            },
            "Step 7": {
                "Step": "11 - 3 = 8 (left: 3 4  -> 4 / 3 = 1.33333 (left: 1.33333) -> There are no possible next steps with the input 1.33333. -> There are no possible next steps with the input 1.33333. -> There are no possible next steps with the input 1.33333.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 3 = 8 (left: 3 4  -> 4 / 3 = 1.33333 (left: 1.33333) -> There are no possible next steps with the input 1.33333. -> There are no possible next steps with the input 1.33333. -> There are no possible next steps with the input 1.33333. -> 1 - 1 = 0 (left: 0 1)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 4 6 11)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 + 11 = 17 (left: 4 17)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 + 11 = 17 (left: 4 17) -> 4 * 17 = 68 (left: 68)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 + 11 = 17 (left: 4 17) -> 4 * 17 = 68 (left: 68) -> 6 + 8 = 14",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11) -> 10 * 11 = 110 (left: 110)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11) -> 10 * 11 = 110 (left: 110) -> 110 / 2 = 55 (left: 2)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "28 196"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "4 * 3 = 12 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> 36 + 2 = 38",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 * 3 = 12 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> 36 + 2 = 38 -> 36 / 2 = 18 (left: 18 + 2 = 20)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 4 6 11)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> Input: 10 2",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> Input: 10 2 -> 10 + 2 = 12 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 4 * 6 = 24 (left: 11 24)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 4 * 6 = 24 (left: 11 24) -> 11 * 24 = 264 (left: 264)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 4 * 6 = 24 (left: 11 24) -> 11 * 24 = 264 (left: 264) -> 2 * 4 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "6 + 8 = 14"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "4 * 3 = 12 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> There are no possible next steps with the input 36 as it is a single number.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 * 3 = 12 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> There are no possible next steps with the input 36 as it is a single number. -> 36 cannot be split into two numbers to perform any basic arithmetic operations.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 3 7 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 7 11"
                }
            },
            "Step 1": {
                "Step": "11 - 4 = 7 (left: 3 7 11) -> 11 / 3",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 4 = 7 (left: 3 7 11) -> 11 / 3 -> 11 * 3 = 33 (left: 3 33)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 4 = 7 (left: 3 7 11) -> 11 / 3 -> 11 * 3 = 33 (left: 3 33) -> 3 * 33 = 99 (left: 99)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "3 4 "
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "3 4 "
                }
            },
            "Step 4": {
                "Step": "11 - 3 = 8 (left: 3 4  -> 3 + 4 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 3 = 8 (left: 3 4  -> 3 + 4 = 7 (left: 7) -> 7 - 8 = -1 (left: -1 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 3 = 8 (left: 3 4  -> 3 + 4 = 7 (left: 7) -> 7 - 8 = -1 (left: -1 8) -> -1 + 8 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "There are no possible next steps for the input 12.5."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "4 * 3 = 12 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> 36 is already a single number, so there are no possible next steps.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 * 3 = 12 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> 36 is already a single number, so there are no possible next steps. -> No possible next steps as 36 is already a single number.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "11 - 3 = 8 (left: 3 4 8)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 3 4  -> 3 * 4 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 - 8 = 4 (left: 8 4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 - 8 = 4 (left: 8 4) -> 8 - 4 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "3 7 11"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "3 4 "
                }
            },
            "Step 4": {
                "Step": "11 - 3 = 8 (left: 3 4  -> Possible next steps:",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 3 = 8 (left: 3 4  -> Possible next steps: -> There are no more possible next steps with the given numbers.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 3 = 8 (left: 3 4  -> Possible next steps: -> There are no more possible next steps with the given numbers. -> No more possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "4 * 3 = 12 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> There are no possible next steps for the number 36.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 * 3 = 12 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> There are no possible next steps for the number 36. -> 36 / 9 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "18 + 18 = 36"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "11 - 3 = 8 (left: 3 4 ",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 1": {
                "Step": "4 * 3 = 12 (left: 3 12  -> 3 * 12 = 36 (left: 36)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 3 = 12 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 3 = 12 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18 -> 18 + 18 = 36",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "2 12"
                }
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> Input: 10 2 -> 10 + 2 = 12 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "3 12 "
                }
            },
            "Step 5": {
                "Step": "4 * 3 = 12 (left: 3 12  -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 3 = 12 (left: 3 12  -> 12 / 3 = 4 (left: 4 12) -> 12 - 4 = 8 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "19"
                }
            },
            "Step 7": {
                "Step": "11 - 4 = 7 (left: 3 7 11) -> 11 - 3 = 8 (left: 8 11) -> 8 + 11 = 19 (left: 19) -> 19 * 2 = 38 (left: 2 19 38)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 4 = 7 (left: 3 7 11) -> 11 - 3 = 8 (left: 8 11) -> 8 + 11 = 19 (left: 19) -> 19 * 2 = 38 (left: 2 19 38) -> 38 / 2 = 19 (left: 19 19)",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "11 - 3 = 8 (left: 3 4 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 / 4 = 1.5 (left: 1.5 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 / 4 = 1.5 (left: 1.5 11) -> 1.5 + 11 = 12.5 (left: 12.5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 / 4 = 1.5 (left: 1.5 11) -> 1.5 + 11 = 12.5 (left: 12.5) -> There are no possible next steps for the input 12.5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "3 4 "
                }
            },
            "Step 4": {
                "Step": "11 - 3 = 8 (left: 3 4  -> 3 * 4 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 3 = 8 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> Input: 24",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 3 = 8 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> Input: 24 -> 24 * 2 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "There are no possible next steps for the input 12.5."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "4 * 3 = 12 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> There are no possible next steps as there are no other numbers provided to perform operations with.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 * 3 = 12 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> There are no possible next steps as there are no other numbers provided to perform operations with. -> There are no possible next steps as there are no other numbers provided to perform operations with.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "4 * 3 = 12 (left: 3 12 ",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 7 4"
                }
            },
            "Step 1": {
                "Step": "11 - 4 = 7 (left: 3 7 4) -> 7 + 4 = 11 (left: 3 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 4 = 7 (left: 3 7 4) -> 7 + 4 = 11 (left: 3 11) -> 11 - 3 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 4 = 7 (left: 3 7 4) -> 7 + 4 = 11 (left: 3 11) -> 11 - 3 = 8 (left: 8) -> 8 - 8 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "3 12 "
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "3 12 "
                }
            },
            "Step 4": {
                "Step": "4 * 3 = 12 (left: 3 12  -> 12 - 3 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 * 3 = 12 (left: 3 12  -> 12 - 3 = 9 (left: 9) -> There are no possible next steps as there are no other numbers provided to perform operations with.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 3 = 12 (left: 3 12  -> 12 - 3 = 9 (left: 9) -> There are no possible next steps as there are no other numbers provided to perform operations with. -> There are no possible next steps as there are no other numbers provided to perform operations with.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "19"
                }
            },
            "Step 7": {
                "Step": "11 - 4 = 7 (left: 3 7 11) -> 11 - 3 = 8 (left: 8 11) -> 8 + 11 = 19 (left: 19) -> 19 + 8 = 27 (left: 8 27)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 4 = 7 (left: 3 7 11) -> 11 - 3 = 8 (left: 8 11) -> 8 + 11 = 19 (left: 19) -> 19 + 8 = 27 (left: 8 27) -> Input: 6 12 3",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 3 7 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 3 4  -> 5 + 9 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 3 4  -> 5 + 9 = 14 (left: 14) -> 14 + 14 = 28",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 3 4  -> 5 + 9 = 14 (left: 14) -> 14 + 14 = 28 -> 14 * 14 = 196 (left: 28 196)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "3 4 "
                }
            },
            "Step 4": {
                "Step": "11 - 3 = 8 (left: 3 4  -> 4 / 3 = 1.33333 (left: 1.33333)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 3 = 8 (left: 3 4  -> 4 / 3 = 1.33333 (left: 1.33333) -> There are no possible next steps with the input 1.33333.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 3 = 8 (left: 3 4  -> 4 / 3 = 1.33333 (left: 1.33333) -> There are no possible next steps with the input 1.33333. -> There are no possible next steps with the input 1.33333.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "19"
                }
            },
            "Step 7": {
                "Step": "11 - 4 = 7 (left: 3 7 11) -> 11 - 3 = 8 (left: 8 11) -> 8 + 11 = 19 (left: 19) -> There are no valid operations that can be performed with the number 19.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 4 = 7 (left: 3 7 11) -> 11 - 3 = 8 (left: 8 11) -> 8 + 11 = 19 (left: 19) -> There are no valid operations that can be performed with the number 19. -> There are no valid operations that can be performed with the number 19.",
                "Pruning": null
            }
        },
        "Input": "3 3 4 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "967": {
        "puzzle": "2 5 7 7",
        "Agent 0": {
            "Step 0": {
                "Step": "5 + 7 = 12 (left: 2 7 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 7 10"
                }
            },
            "Step 1": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 10 + 7 = 17 (left: 7 17)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 10 + 7 = 17 (left: 7 17) -> 7 + 17 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 10 + 7 = 17 (left: 7 17) -> 7 + 17 = 24 (left: 24) -> Answer: (2 * 5) + (7 + 7) = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 - 5 = 2 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3.5 7 7"
                }
            },
            "Step 1": {
                "Step": "7 / 2 = 3.5 (left: 3.5 7 7) -> 7 - 3.5 = 3.5 (left: 3.5 7",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 / 2 = 3.5 (left: 3.5 7 7) -> 7 - 3.5 = 3.5 (left: 3.5 7 -> ",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 / 2 = 3.5 (left: 3.5 7 7) -> 7 - 3.5 = 3.5 (left: 3.5 7 ->  -> It appears that you did not provide an input for the calculation. Please enter a set of numbers to continue finding possible next steps."
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 5 7 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3.5 7 7"
                }
            },
            "Step 1": {
                "Step": "7 / 2 = 3.5 (left: 3.5 7 7) -> 7 / 3.5 = 2 (left: 2 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 / 2 = 3.5 (left: 3.5 7 7) -> 7 / 3.5 = 2 (left: 2 7) -> 7 - 2 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 / 2 = 3.5 (left: 3.5 7 7) -> 7 / 3.5 = 2 (left: 2 7) -> 7 - 2 = 5 (left: 5) -> 8 - 5 = 3 (left: 3)"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 / 2 = 3.5 (left: 2 5 7)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3.5 7 7"
                }
            },
            "Step 1": {
                "Step": "7 / 2 = 3.5 (left: 3.5 7 7) -> 7 / 3.5 = 2 (left: 2 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 / 2 = 3.5 (left: 3.5 7 7) -> 7 / 3.5 = 2 (left: 2 7) -> 2 * 7 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 / 2 = 3.5 (left: 3.5 7 7) -> 7 / 3.5 = 2 (left: 2 7) -> 2 * 7 = 14 (left: 14) -> 14 + 14 = 28"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 * 5 = 10 (left: 7 7 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3.5 7 7"
                }
            },
            "Step 1": {
                "Step": "7 / 2 = 3.5 (left: 3.5 7 7) -> 7 / 3.5 = 2 (left: 2 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 / 2 = 3.5 (left: 3.5 7 7) -> 7 / 3.5 = 2 (left: 2 7) -> 2 + 7 = 9 (left: 9) ",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 / 2 = 3.5 (left: 3.5 7 7) -> 7 / 3.5 = 2 (left: 2 7) -> 2 + 7 = 9 (left: 9)  -> 8 - 9 = -1 (left: -1)"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 5 7 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 7 10"
                }
            },
            "Step 1": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 10 + 7 = 17 (left: 7 17)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 10 + 7 = 17 (left: 7 17) -> 17 / 7 = 2.43 (left: 2.43)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 10 + 7 = 17 (left: 7 17) -> 17 / 7 = 2.43 (left: 2.43) -> There is only one number provided, so there are no possible next steps to perform any operations."
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "7 - 5 = 2 (left: 2 7 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3.5 7 7"
                }
            },
            "Step 1": {
                "Step": "7 / 2 = 3.5 (left: 3.5 7 7) -> 7 - ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 / 2 = 3.5 (left: 3.5 7 7) -> 7 -  -> 7 - 8 = -1",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 / 2 = 3.5 (left: 3.5 7 7) -> 7 -  -> 7 - 8 = -1 -> 7 / 8 = 0.875 (left: -1 0.875)"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "7 / 2 = 3.5 (left: 3.5 7 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3.5 7 7"
                }
            },
            "Step 1": {
                "Step": "7 / 2 = 3.5 (left: 3.5 7 7) -> 3.5 + 7 = 10.5 (left: 7 10.5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 / 2 = 3.5 (left: 3.5 7 7) -> 3.5 + 7 = 10.5 (left: 7 10.5) -> 10.5 + ",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 / 2 = 3.5 (left: 3.5 7 7) -> 3.5 + 7 = 10.5 (left: 7 10.5) -> 10.5 +  -> 10.5 + 8 = 18.5 (left: )"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "2 + 5 = 7 (left: 7 7 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3.5 7 7"
                }
            },
            "Step 1": {
                "Step": "7 / 2 = 3.5 (left: 3.5 7 7) -> 7 / 3.5 = 2 (left: 2 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 / 2 = 3.5 (left: 3.5 7 7) -> 7 / 3.5 = 2 (left: 2 7) -> 7 / 2 = 3.5 (left: 3.5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 / 2 = 3.5 (left: 3.5 7 7) -> 7 / 3.5 = 2 (left: 2 7) -> 7 / 2 = 3.5 (left: 3.5) -> There is only one number provided, so there are no possible next steps to perform any operations."
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "7 / 2 = 3.5 (left: 3.5 7 7)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 7 10"
                }
            },
            "Step 1": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 10 + 7 = 17 (left: 7 17)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 10 + 7 = 17 (left: 7 17) -> 24 * 36 = 864",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 10 + 7 = 17 (left: 7 17) -> 24 * 36 = 864 -> 24 / 36 = 0.6666666666666666 (left: 0.6666666666666666 * 864)"
            }
        },
        "Input": "2 5 7 7",
        "Verifications": [
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "968": {
        "puzzle": "3 9 10 13",
        "Agent 0": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 3 10 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 - 8 = 4 (left: 4 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 - 8 = 4 (left: 4 8) -> 5 + 10 = 15 (left: 10 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "9 10 10"
                }
            },
            "Step 4": {
                "Step": "13 - 3 = 10 (left: 9 10 10) -> 10 / 10 = 1 (left: 9 1 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 3 = 10 (left: 9 10 10) -> 10 / 10 = 1 (left: 9 1 10) -> 10 + 1 = 11 (left: 9 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 3 = 10 (left: 9 10 10) -> 10 / 10 = 1 (left: 9 1 10) -> 10 + 1 = 11 (left: 9 11) -> 11 / 9 = 1.22 (left: 1.22)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "No possible next steps as there is only one number left."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "0.3333333333333333 12"
                }
            },
            "Step 7": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 10 = 3 (left: 3 12) -> 12 / 3 = 4 (left: 4 12) -> 4 / 12 = 0.3333333333333333 (left: 0.3333333333333333 12) -> 0.3333333333333333 * 12 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "8 7"
                }
            },
            "Step 8": {
                "Step": "13 - 3 = 10 (left: 9 10 10) -> 10 * 9 = 90 (left: 10 10 90) -> 10 * 10 = 100 (left: 100 90) -> 5 + 3 = 8 (left: 8 7) -> 8 - 7 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "No possible next steps as there is only one number left."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 3 10 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 10 13"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 3 10 13) -> 13 - 10 = 3 (left: 3 3 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 3 10 13) -> 13 - 10 = 3 (left: 3 3 13) -> 3 * 3 = 9 (left: 9 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 / 3 = 3 (left: 3 10 13) -> 13 - 10 = 3 (left: 3 3 13) -> 3 * 3 = 9 (left: 9 13) -> 9 / 13 = 0.6923 (left: 0.6923)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "9 10 10"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "10 12 13"
                }
            },
            "Step 4": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> Input: 1.2 23",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> Input: 1.2 23 -> 1.2 * 23 = 27.6 (left: 27.6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> Input: 1.2 23 -> 1.2 * 23 = 27.6 (left: 27.6) -> 27.6 / 2 = 13.8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "10 10 88.9"
                }
            },
            "Step 7": {
                "Step": "13 - 3 = 10 (left: 9 10 10) -> 10 / 9 = 1.11 (left: 1.11 10 10) -> 10 - 1.11 = 8.89 (left: 8.89 10 10) -> 8.89 * 10 = 88.9 (left: 10 10 88.9) -> 10 - 10 = 0 (left: 0 88.9)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 3 = 10 (left: 9 10 10) -> 10 / 9 = 1.11 (left: 1.11 10 10) -> 10 - 1.11 = 8.89 (left: 8.89 10 10) -> 8.89 * 10 = 88.9 (left: 10 10 88.9) -> 10 - 10 = 0 (left: 0 88.9) -> 0 - 88.9 = -88.9 (left: -88.9)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "There are no possible next steps with the input of 11.8."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 + 3 = 13 (left: 9 13 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "10 12 13"
                }
            },
            "Step 1": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 12 - 10 = 2 (left: 2 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 12 - 10 = 2 (left: 2 13) -> 2 * 13 = 26 (left: 26)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 12 - 10 = 2 (left: 2 13) -> 2 * 13 = 26 (left: 26) -> 26 + 2 = 28",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "10 12 13"
                }
            },
            "Step 4": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 12 * 13 = 156 (left: 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 12 * 13 = 156 (left: 10) -> 10 + 8 = 18 (left: 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 12 * 13 = 156 (left: 10) -> 10 + 8 = 18 (left: 8) -> 8 + 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "No possible next steps as there is only one number left."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "0.3333333333333333 12"
                }
            },
            "Step 7": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 10 = 3 (left: 3 12) -> 12 / 3 = 4 (left: 4 12) -> 4 / 12 = 0.3333333333333333 (left: 0.3333333333333333 12) -> 12 * 0.3333333333333333 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "10 15"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 - 8 = 4 (left: 4 8) -> 5 + 10 = 15 (left: 10 15) -> 10 + 15 = 25 (left: 25)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "There are no possible next steps with the input of 11.8."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 + 3 = 13 (left: 9 13 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 / 8 = 1.5 (left: 1.5 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 / 8 = 1.5 (left: 1.5 8) -> 1.5 * 8 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "10 12 13"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "10 12 13"
                }
            },
            "Step 4": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 12 - 10 = 2 (left: 2 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 12 - 10 = 2 (left: 2 13) -> 2 + 13 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 12 - 10 = 2 (left: 2 13) -> 2 + 13 = 15 (left: 15) -> 15 + 2 = 17 (left: 2)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "There are no possible next steps with the input of 11.8."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "0.3333333333333333 12"
                }
            },
            "Step 7": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 10 = 3 (left: 3 12) -> 12 / 3 = 4 (left: 4 12) -> 4 / 12 = 0.3333333333333333 (left: 0.3333333333333333 12) -> 12 - 0.3333333333333333 = 11.666666666666668 (left: 11.666666666666668)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "No possible next steps as there is only one number left."
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 + 2 = 14 (left: 14) -> No possible next steps as there is only one number left. -> No possible next steps as there is only one number left.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 3 4 ",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 + 4 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 + 4 = 7 (left: 7) -> 7 - 8 = -1 (left: -1 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 + 4 = 7 (left: 7) -> 7 - 8 = -1 (left: -1 8) -> -1 - 8 = -9 (left: -9)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "9 13 13"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "9 10 10"
                }
            },
            "Step 4": {
                "Step": "13 - 3 = 10 (left: 9 10 10) -> 10 * 9 = 90 (left: 10 10 90)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 3 = 10 (left: 9 10 10) -> 10 * 9 = 90 (left: 10 10 90) -> 10 * 10 = 100 (left: 100 90)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 3 = 10 (left: 9 10 10) -> 10 * 9 = 90 (left: 10 10 90) -> 10 * 10 = 100 (left: 100 90) -> 5 + 3 = 8 (left: 8 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "10 10 88.9"
                }
            },
            "Step 7": {
                "Step": "13 - 3 = 10 (left: 9 10 10) -> 10 / 9 = 1.11 (left: 1.11 10 10) -> 10 - 1.11 = 8.89 (left: 8.89 10 10) -> 8.89 * 10 = 88.9 (left: 10 10 88.9) -> 10 / 10 = 1 (left",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 3 = 10 (left: 9 10 10) -> 10 / 9 = 1.11 (left: 1.11 10 10) -> 10 - 1.11 = 8.89 (left: 8.89 10 10) -> 8.89 * 10 = 88.9 (left: 10 10 88.9) -> 10 / 10 = 1 (left -> 10 - 10 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "No possible next steps as there is only one number left."
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "3 + 9 = 12 (left: 10 12 13)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 + 4 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 + 4 = 7 (left: 7) -> 7 - 2 = 5 (left: 5 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 + 4 = 7 (left: 7) -> 7 - 2 = 5 (left: 5 8) -> 5 / 8 = 0.625 (left: 0.625)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "9 13 13"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "10 12 13"
                }
            },
            "Step 4": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 12 / 10 = 1.2 (left: 1.2 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 12 / 10 = 1.2 (left: 1.2 13) -> 1.2 * 13 = 15.6 (left: 15.6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 12 / 10 = 1.2 (left: 1.2 13) -> 1.2 * 13 = 15.6 (left: 15.6) -> There are no possible next steps as the input is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "10 10 88.9"
                }
            },
            "Step 7": {
                "Step": "13 - 3 = 10 (left: 9 10 10) -> 10 / 9 = 1.11 (left: 1.11 10 10) -> 10 - 1.11 = 8.89 (left: 8.89 10 10) -> 8.89 * 10 = 88.9 (left: 10 10 88.9) -> 10 + 10 = 20 (left: 20 88.9)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 3 = 10 (left: 9 10 10) -> 10 / 9 = 1.11 (left: 1.11 10 10) -> 10 - 1.11 = 8.89 (left: 8.89 10 10) -> 8.89 * 10 = 88.9 (left: 10 10 88.9) -> 10 + 10 = 20 (left: 20 88.9) -> 20 / 88.9 \u2248 0.225 (left: 88.9 0.225)",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "10 + 3 = 13 (left: 9 13 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 + 2 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 + 2 = 14 (left: 14) -> No possible next steps as there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "10 12 13"
                }
            },
            "Step 4": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 10 * 12 = 120 (left: 13 120)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 10 * 12 = 120 (left: 13 120) -> 13 * 8 = 104 (left: 104 120)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 10 * 12 = 120 (left: 13 120) -> 13 * 8 = 104 (left: 104 120) -> 104 / 120 = 0.8666666666666667 (left: 0.8666666666666667)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "There are no possible next steps with the input of 11.8."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "0.3333333333333333 12"
                }
            },
            "Step 7": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 10 = 3 (left: 3 12) -> 12 / 3 = 4 (left: 4 12) -> 4 / 12 = 0.3333333333333333 (left: 0.3333333333333333 12) -> 0.3333333333333333 * 12 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "8 7"
                }
            },
            "Step 8": {
                "Step": "13 - 3 = 10 (left: 9 10 10) -> 10 * 9 = 90 (left: 10 10 90) -> 10 * 10 = 100 (left: 100 90) -> 5 + 3 = 8 (left: 8 7) -> 8 + 7 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "There are no possible next steps with the input of 11.8."
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "13 - 3 = 10 (left: 9 10 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 10 13"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 3 10 13) -> 3 * 10 = 30 (left: 30 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 3 10 13) -> 3 * 10 = 30 (left: 30 13) -> 30 * 13 = 390 (left: 390)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 / 3 = 3 (left: 3 10 13) -> 3 * 10 = 30 (left: 30 13) -> 30 * 13 = 390 (left: 390) -> 3 * 9 = 27 (left: 27 0)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "10 12 13"
                }
            },
            "Step 4": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 10 = 3 (left: 3 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 10 = 3 (left: 3 12) -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 10 = 3 (left: 3 12) -> 12 / 3 = 4 (left: 4 12) -> 4 / 12 = 0.3333333333333333 (left: 0.3333333333333333 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "0.3333333333333333 12"
                }
            },
            "Step 7": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 10 = 3 (left: 3 12) -> 12 / 3 = 4 (left: 4 12) -> 4 / 12 = 0.3333333333333333 (left: 0.3333333333333333 12) -> 0.3333333333333333 * 12 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "There are no possible next steps as the input is a single number."
                }
            },
            "Step 8": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 12 / 10 = 1.2 (left: 1.2 13) -> 1.2 * 13 = 15.6 (left: 15.6) -> There are no possible next steps as the input is a single number. -> There are no possible next steps as the input is a single number.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "3 + 9 = 12 (left: 10 12 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "10 12 13"
                }
            },
            "Step 1": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 12 / 10 = 1.2 (left: 13 1.2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 12 / 10 = 1.2 (left: 13 1.2) -> 13 - 1.2 = 11.8 (left: 11.8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 12 / 10 = 1.2 (left: 13 1.2) -> 13 - 1.2 = 11.8 (left: 11.8) -> There are no possible next steps with the input of 11.8.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "9 10 10"
                }
            },
            "Step 4": {
                "Step": "13 - 3 = 10 (left: 9 10 10) -> 10 / 9 = 1.11 (left: 1.11 10 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 3 = 10 (left: 9 10 10) -> 10 / 9 = 1.11 (left: 1.11 10 10) -> 10 - 1.11 = 8.89 (left: 8.89 10 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 3 = 10 (left: 9 10 10) -> 10 / 9 = 1.11 (left: 1.11 10 10) -> 10 - 1.11 = 8.89 (left: 8.89 10 10) -> 8.89 * 10 = 88.9 (left: 10 10 88.9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "10 10 88.9"
                }
            },
            "Step 7": {
                "Step": "13 - 3 = 10 (left: 9 10 10) -> 10 / 9 = 1.11 (left: 1.11 10 10) -> 10 - 1.11 = 8.89 (left: 8.89 10 10) -> 8.89 * 10 = 88.9 (left: 10 10 88.9) -> 10 / 10 = 1 (left: 1 88.9)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 3 = 10 (left: 9 10 10) -> 10 / 9 = 1.11 (left: 1.11 10 10) -> 10 - 1.11 = 8.89 (left: 8.89 10 10) -> 8.89 * 10 = 88.9 (left: 10 10 88.9) -> 10 / 10 = 1 (left: 1 88.9) -> 1 * 88.9 = 88.9 (left: 88.9)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "There are no possible next steps with the input of 11.8."
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 3 10 13)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 4 / 3 = 1.33 (left: 1.33)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 4 / 3 = 1.33 (left: 1.33) -> There is only one number provided (1.33), so there are no possible next steps to calculate.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 4 / 3 = 1.33 (left: 1.33) -> There is only one number provided (1.33), so there are no possible next steps to calculate. -> 1.33 * 1 = 1.33 (left: 1.33)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "9 13 "
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "9 10 10"
                }
            },
            "Step 4": {
                "Step": "13 - 3 = 10 (left: 9 10 10) -> 10 * 10 = 100 (left: 9 100)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 3 = 10 (left: 9 10 10) -> 10 * 10 = 100 (left: 9 100) -> 9 / 100 = 0.09 (left: 0.09)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 3 = 10 (left: 9 10 10) -> 10 * 10 = 100 (left: 9 100) -> 9 / 100 = 0.09 (left: 0.09) -> 0.09 * 2 = 0.18 (left: 0.18)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "10 15"
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "0.3333333333333333 12"
                }
            },
            "Step 7": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 10 = 3 (left: 3 12) -> 12 / 3 = 4 (left: 4 12) -> 4 / 12 = 0.3333333333333333 (left: 0.3333333333333333 12) -> 0.3333333333333333 + 12 = 12.333333333333333 (left: 12.333333333333333)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "26 + 2 = 28"
                }
            },
            "Step 8": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 12 - 10 = 2 (left: 2 13) -> 2 * 13 = 26 (left: 26) -> 26 + 2 = 28 -> 2 * 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "There are no possible next steps as the input is a single number."
                }
            }
        },
        "Input": "3 9 10 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "969": {
        "puzzle": "2 3 4 7",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 4 5 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> Input:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> Input: -> Please provide a set of numbers to determine the possible next steps.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> Input: -> Please provide a set of numbers to determine the possible next steps. -> It seems you haven't provided a set of numbers. Please input a set of numbers to determine the possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "3 4 5"
                }
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 3 4 5) -> 5 + 3 = 8 (left: 4 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 3 4 5) -> 5 + 3 = 8 (left: 4 8) -> 8 - 4 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 3 4 5) -> 5 + 3 = 8 (left: 4 8) -> 8 - 4 = 4 (left: 4) -> There are no possible next steps with only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "1.4 + 5.4 = 6.8"
                }
            },
            "Step 7": {
                "Step": "2 + 3 = 5 (left: 4 5 7) -> 7 / 5 = 1.4 (left: 4 1.4) -> 4 + 1.4 = 5.4 (left: 1.4 5.4) -> 1.4 + 5.4 = 6.8 -> 1.4 * 5.4 = 7.56 (left: 7.56 = 6.8)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 3 = 5 (left: 4 5 7) -> 7 / 5 = 1.4 (left: 4 1.4) -> 4 + 1.4 = 5.4 (left: 1.4 5.4) -> 1.4 + 5.4 = 6.8 -> 1.4 * 5.4 = 7.56 (left: 7.56 = 6.8) -> 7.56 + 6.8 = 14.36 (left: 6.8 14.36)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 - 3 = 1 (left: 1 3 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> 6 + 7 = 13 (left: 4 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> 6 + 7 = 13 (left: 4 13) -> 4 * 13 = 52 (left: 52)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> 6 + 7 = 13 (left: 4 13) -> 4 * 13 = 52 (left: 52) -> There are no possible next steps with the input 52.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "3 4 5"
                }
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 3 4 5) -> 5 + 3 = 8 (left: 4 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 3 4 5) -> 5 + 3 = 8 (left: 4 8) -> 8 - 4 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 3 4 5) -> 5 + 3 = 8 (left: 4 8) -> 8 - 4 = 4 (left: 4) -> 4 / 2 = 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "There are no possible next steps with the input 52."
                }
            },
            "Step 7": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> 6 + 7 = 13 (left: 4 13) -> 4 * 13 = 52 (left: 52) -> There are no possible next steps with the input 52. -> There are no possible next steps with the input 52.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> 6 + 7 = 13 (left: 4 13) -> 4 * 13 = 52 (left: 52) -> There are no possible next steps with the input 52. -> There are no possible next steps with the input 52. -> There are no possible next steps with the input 52.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 - 4 = 3 (left: 2 3 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> 4 + 6 = 10 (left: 7 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> 4 + 6 = 10 (left: 7 10) -> 10 / 7 = 1.42857142857 (left: 1.42857142857)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> 4 + 6 = 10 (left: 7 10) -> 10 / 7 = 1.42857142857 (left: 1.42857142857) -> There are no possible next steps for the number 1.42857142857.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "4 5 7"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 4 5 7) -> 7 / 5 = 1.4 (left: 4 1.4)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 4 5 7) -> 7 / 5 = 1.4 (left: 4 1.4) -> 4 + 1.4 = 5.4 (left: 1.4 5.4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 4 5 7) -> 7 / 5 = 1.4 (left: 4 1.4) -> 4 + 1.4 = 5.4 (left: 1.4 5.4) -> 1.4 + 5.4 = 6.8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "4 / 2 = 2"
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 3 4 5) -> 5 + 3 = 8 (left: 4 8) -> 8 - 4 = 4 (left: 4) -> 4 / 2 = 2 -> 2 * 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "1.4 + 5.4 = 6.8"
                }
            },
            "Step 8": {
                "Step": "2 + 3 = 5 (left: 4 5 7) -> 7 / 5 = 1.4 (left: 4 1.4) -> 4 + 1.4 = 5.4 (left: 1.4 5.4) -> 1.4 + 5.4 = 6.8 -> 1.4 * 5.4 = 7.56 (left: 7.56 = 6.8)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 + 3 = 7 (left: 2 7 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 1": {
                "Step": "2 * 3 = 6 (left: 4 6 7) -> 6 / 4 = 1.5 (left: 1.5 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 3 = 6 (left: 4 6 7) -> 6 / 4 = 1.5 (left: 1.5 7) -> 7 - 1.5 = 5.5 (left: 5.5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 3 = 6 (left: 4 6 7) -> 6 / 4 = 1.5 (left: 1.5 7) -> 7 - 1.5 = 5.5 (left: 5.5) -> 8 / 5.5 = 1.45454545455 (left: 1.45454545455)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "4 5 7"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "3 4 5"
                }
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 3 4 5) -> 3 * 4 = 12 (left: 5 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 3 4 5) -> 3 * 4 = 12 (left: 5 12) -> 12 - 5 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 3 4 5) -> 3 * 4 = 12 (left: 5 12) -> 12 - 5 = 7 (left: 7) -> 7 + 8 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "There are no possible next steps with the input 52."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "8 14"
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 3 4 5) -> 3 + 4 = 7 (left: 5 7) -> 5 + 7 = 12 (left: 12)  -> 12 + 2 = 14 (left: 8 14) -> 8 + 14 = 22 (left: 22)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "There are no possible next steps with the input 52."
                }
            },
            "Step 8": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> 6 + 7 = 13 (left: 4 13) -> 4 * 13 = 52 (left: 52) -> There are no possible next steps with the input 52. -> There are no possible next steps with the input 52.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 * 2 = 6 (left: 4 6 7)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> 4 / 6 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> 4 / 6 =  -> 0.6666666666666666",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> 4 / 6 =  -> 0.6666666666666666 -> There are no possible next steps for the input 0.6666666666666666 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "4 5 7"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 4 5 7) -> 4 / 5 = 0.8 (left: 0.8 7)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 4 5 7) -> 4 / 5 = 0.8 (left: 0.8 7) -> 7 - 0.8 = 6.2 (left: 6.2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 4 5 7) -> 4 / 5 = 0.8 (left: 0.8 7) -> 7 - 0.8 = 6.2 (left: 6.2) -> 6.2 / 8 = 0.775 (left: 0.775)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "There are no possible next steps for the input 0.6666666666666666 as it is already a single number."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "There are no possible next steps with the input 52."
                }
            },
            "Step 7": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> 6 + 7 = 13 (left: 4 13) -> 4 * 13 = 52 (left: 52) -> There are no possible next steps with the input 52. -> There are no possible next steps with the input 52.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> 6 + 7 = 13 (left: 4 13) -> 4 * 13 = 52 (left: 52) -> There are no possible next steps with the input 52. -> There are no possible next steps with the input 52. -> There are no possible next steps with the input 52.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 4 5 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 5 7"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 4 5 7) -> 4 / 5 = 0.8 (",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 4 5 7) -> 4 / 5 = 0.8 ( -> 4 + 5 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 4 5 7) -> 4 / 5 = 0.8 ( -> 4 + 5 = 9 (left: 9) -> 8 + 9 = 17 (left: 17)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "3 4 5"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "4 5 7"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 4 5 7) -> 4 + 5 = 9 (left: 7 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 4 5 7) -> 4 + 5 = 9 (left: 7 9) -> Possible next steps:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 4 5 7) -> 4 + 5 = 9 (left: 7 9) -> Possible next steps: -> There are no possible next steps with the given input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "1.4 + 5.4 = 6.8"
                }
            },
            "Step 7": {
                "Step": "2 + 3 = 5 (left: 4 5 7) -> 7 / 5 = 1.4 (left: 4 1.4) -> 4 + 1.4 = 5.4 (left: 1.4 5.4) -> 1.4 + 5.4 = 6.8 -> 1.4 / 5.4 = 0.25925925925925924 (left: 0.25925925925925924 5.4 6.8)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 3 = 5 (left: 4 5 7) -> 7 / 5 = 1.4 (left: 4 1.4) -> 4 + 1.4 = 5.4 (left: 1.4 5.4) -> 1.4 + 5.4 = 6.8 -> 1.4 / 5.4 = 0.25925925925925924 (left: 0.25925925925925924 5.4 6.8) -> 0.25925925925925924 + ",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 4 5 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 1": {
                "Step": "2 * 3 = 6 (left: 4 6 7) -> 4 * 6 = 24 (left: 7 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 3 = 6 (left: 4 6 7) -> 4 * 6 = 24 (left: 7 24) -> 24 - 7 = 17 (left: 7 17)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 3 = 6 (left: 4 6 7) -> 4 * 6 = 24 (left: 7 24) -> 24 - 7 = 17 (left: 7 17) -> 7 + 17 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "3 4 5"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "3 4 5"
                }
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 3 4 5) -> 3 + 4 = 7 (left: 5 7)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 3 4 5) -> 3 + 4 = 7 (left: 5 7) -> 5 + 7 = 12 (left: 12) ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 3 4 5) -> 3 + 4 = 7 (left: 5 7) -> 5 + 7 = 12 (left: 12)  -> 12 + 2 = 14 (left: 8 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "6 8"
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 3 4 5) -> 3 + 4 = 7 (left: 5 7) -> 7 + 5 = 12 (left: 12) -> 12 / 2 = 6 (left: 6 8) -> 6 + 8 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "There are no possible next steps with the given input."
                }
            },
            "Step 8": {
                "Step": "2 + 3 = 5 (left: 4 5 7) -> 4 + 5 = 9 (left: 7 9) -> Possible next steps: -> There are no possible next steps with the given input. -> There are no possible next steps with the given input.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 3 4 5)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 1": {
                "Step": "2 * 3 = 6 (left: 4 6 7) -> 6 / 4 = 1.5 (left: 1.5 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 3 = 6 (left: 4 6 7) -> 6 / 4 = 1.5 (left: 1.5 7) -> 7 - 1.5 = 5.5 (left: 5.5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 3 = 6 (left: 4 6 7) -> 6 / 4 = 1.5 (left: 1.5 7) -> 7 - 1.5 = 5.5 (left: 5.5) -> 5.5 + 2 = 7.5 (left: 7.5)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "4 5 7"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "3 4 5"
                }
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 3 4 5) -> 5 - 4 = 1 (left: 3 1)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 3 4 5) -> 5 - 4 = 1 (left: 3 1) -> 3 - 1 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 3 4 5) -> 5 - 4 = 1 (left: 3 1) -> 3 - 1 = 2 (left: 2) -> 2 + 2 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "No possible next steps for a single number input."
                }
            },
            "Step 7": {
                "Step": "2 + 3 = 5 (left: 4 5 7) -> 7 - 5 = 2 (left: 4 2) -> 4 * 2 = 8 (left: 8) -> No possible next steps for a single number input. -> No possible next steps for a single number input.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 3 = 5 (left: 4 5 7) -> 7 - 5 = 2 (left: 4 2) -> 4 * 2 = 8 (left: 8) -> No possible next steps for a single number input. -> No possible next steps for a single number input. -> No possible next steps for a single number input.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "2 * 3 = 6 (left: 4 6 7)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 1": {
                "Step": "2 * 3 = 6 (left: 4 6 7) -> 4 + 6 = 10 (left: 7 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 3 = 6 (left: 4 6 7) -> 4 + 6 = 10 (left: 7 10) -> 10 - 7 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 3 = 6 (left: 4 6 7) -> 4 + 6 = 10 (left: 7 10) -> 10 - 7 = 3 (left: 3) -> There are no possible next steps with the input of 3.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "4 5 7"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 4 5 7) -> 7 - 5 = 2 (left: 4 2)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 4 5 7) -> 7 - 5 = 2 (left: 4 2) -> 4 * 2 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 4 5 7) -> 7 - 5 = 2 (left: 4 2) -> 4 * 2 = 8 (left: 8) -> No possible next steps for a single number input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "4 / 2 = 2"
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 3 4 5) -> 5 + 3 = 8 (left: 4 8) -> 8 - 4 = 4 (left: 4) -> 4 / 2 = 2 -> 2 * 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "1.4 + 5.4 = 6.8"
                }
            },
            "Step 8": {
                "Step": "2 + 3 = 5 (left: 4 5 7) -> 7 / 5 = 1.4 (left: 4 1.4) -> 4 + 1.4 = 5.4 (left: 1.4 5.4) -> 1.4 + 5.4 = 6.8 -> 1.4 - 5.4 = -4.0",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "7 - 3 = 4 (left: 2 4 4)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "4 5 7"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 4 5 7) -> 7 - 4 = 3 (left: 3 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 4 5 7) -> 7 - 4 = 3 (left: 3 5) -> 3 + 5 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 4 5 7) -> 7 - 4 = 3 (left: 3 5) -> 3 + 5 = 8 (left: 8) -> 8 / 8 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "2 4 4"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "3 4 5"
                }
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 3 4 5) -> 3 + 4 = 7 (left: 5 7)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 3 4 5) -> 3 + 4 = 7 (left: 5 7) -> 7 + 5 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 3 4 5) -> 3 + 4 = 7 (left: 5 7) -> 7 + 5 = 12 (left: 12) -> 12 / 2 = 6 (left: 6 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "No possible next steps for a single number input."
                }
            },
            "Step 7": {
                "Step": "2 + 3 = 5 (left: 4 5 7) -> 7 - 5 = 2 (left: 4 2) -> 4 * 2 = 8 (left: 8) -> No possible next steps for a single number input. -> No possible next steps for a single number input.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 3 = 5 (left: 4 5 7) -> 7 - 5 = 2 (left: 4 2) -> 4 * 2 = 8 (left: 8) -> No possible next steps for a single number input. -> No possible next steps for a single number input. -> No possible next steps for a single number input.",
                "Pruning": null
            }
        },
        "Input": "2 3 4 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "970": {
        "puzzle": "4 4 8 12",
        "Agent 0": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 8 3"
                }
            },
            "Step 1": {
                "Step": "12 / 4 = 3 (left: 4 8 3) -> 8 - 4 = 4 (left: 4 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 4 = 3 (left: 4 8 3) -> 8 - 4 = 4 (left: 4 3) -> 4 * 3 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 / 4 = 3 (left: 4 8 3) -> 8 - 4 = 4 (left: 4 3) -> 4 * 3 = 12 (left: 12) -> There are no possible next steps with the input of 12.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "16 8 12"
                }
            },
            "Step 4": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 12 - 8 = 4 (left: 4 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 12 - 8 = 4 (left: 4 8) -> 8 / 4 = 2 (left: 2 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 12 - 8 = 4 (left: 4 8) -> 8 / 4 = 2 (left: 2 8) -> 2 + 8 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "There are no possible next steps for the input 13.5."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "80 / 2 = 40"
                }
            },
            "Step 7": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 8 * 12 = 96 (left: 16 96) -> 96 - 16 = 80 (left: 80) -> 80 / 2 = 40 -> 80 + 2 = 82 (left: 82)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "There is only one number given (5.33"
                }
            },
            "Step 8": {
                "Step": "4 + 4 = 8 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12) -> 64 / 12 = 5.33 (left: 5.33) -> There is only one number given (5.33), so there are no possible next steps to perform any operations. -> There is only one number given, so there are no possible next steps to perform any operations.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 16 8 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "16 8 12"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 8 * 12 = 96 (left: 16 96)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 8 * 12 = 96 (left: 16 96) -> 96 - 16 = 80 (left: 80)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 8 * 12 = 96 (left: 16 96) -> 96 - 16 = 80 (left: 80) -> 80 / 2 = 40",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "16 8 12"
                }
            },
            "Step 4": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 16 + 8 = 24 (left: 12 24)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 16 + 8 = 24 (left: 12 24) -> 12 / 24 = 0.5 (left: 0.5 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 16 + 8 = 24 (left: 12 24) -> 12 / 24 = 0.5 (left: 0.5 24) -> 24 - 0.5 = 23.5 (left: 23.5)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "There is only one number given (5.33"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "There are no possible next steps for the input 13.5."
                }
            },
            "Step 7": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 12 / 8 = 1.5 (left: 1.5 12) -> 1.5 + 12 = 13.5 (left: 13.5) -> There are no possible next steps for the input 13.5. -> None. 13.5 is not an integer and cannot be used in basic arithmetic operations with the given integers.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 12 / 8 = 1.5 (left: 1.5 12) -> 1.5 + 12 = 13.5 (left: 13.5) -> There are no possible next steps for the input 13.5. -> None. 13.5 is not an integer and cannot be used in basic arithmetic operations with the given integers. -> None",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "There are no possible next steps for the input 13.5."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 4 = 8 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 8 3"
                }
            },
            "Step 1": {
                "Step": "12 / 4 = 3 (left: 4 8 3) -> 3 + 4 = 7 (left: 8 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 4 = 3 (left: 4 8 3) -> 3 + 4 = 7 (left: 8 7) -> 8 / 7 = 1.14 (left: 1.14)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 / 4 = 3 (left: 4 8 3) -> 3 + 4 = 7 (left: 8 7) -> 8 / 7 = 1.14 (left: 1.14) -> 14 + 1 = 15 (left: 1 15)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "16 8 12"
                }
            },
            "Step 4": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 16 + 8 = 24 (left: 12 24)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 16 + 8 = 24 (left: 12 24) -> 12 * 24 = 288 (left: 288)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 16 + 8 = 24 (left: 12 24) -> 12 * 24 = 288 (left: 288) -> 2 + 8 * 8 = 66 (left: 66)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "80 / 2 = 40"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "No possible next steps as there is only one number."
                }
            },
            "Step 7": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 16 + 8 = 24 (left: 12 24) -> 12 + 24 = 36 (left: 36) -> No possible next steps as there is only one number. -> There are no possible next steps as there is only one number.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 16 + 8 = 24 (left: 12 24) -> 12 + 24 = 36 (left: 36) -> No possible next steps as there is only one number. -> There are no possible next steps as there is only one number. -> There are no possible next steps as there is only one number.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "12 - 8 = 4 (left: 4 8 4)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12) -> 64 / 12 = 5.33 (left: 5.33)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12) -> 64 / 12 = 5.33 (left: 5.33) -> There is only one number given (5.33), so there are no possible next steps to perform any operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "16 8 12"
                }
            },
            "Step 4": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 16 - 8 = 8 (left: 8 8 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 16 - 8 = 8 (left: 8 8 12) -> 12 / 8 = 1.5 (left: 1.5 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 16 - 8 = 8 (left: 8 8 12) -> 12 / 8 = 1.5 (left: 1.5 8) -> 8 - 1.5 = 6.5 (left: 6.5)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "There is only one number given (5.33"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "No possible next steps as there is only one number."
                }
            },
            "Step 7": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 16 + 8 = 24 (left: 12 24) -> 12 + 24 = 36 (left: 36) -> No possible next steps as there is only one number. -> No possible next steps as there is only one number.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 16 + 8 = 24 (left: 12 24) -> 12 + 24 = 36 (left: 36) -> No possible next steps as there is only one number. -> No possible next steps as there is only one number. -> There are no possible next steps as there is only one number.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "8 / 4 = 2 (left: 2 8 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 8 12"
                }
            },
            "Step 1": {
                "Step": "4 / 4 = 1 (left: 1 8 12) -> 1 + 8 = 9 (left: 9 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 4 = 1 (left: 1 8 12) -> 1 + 8 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 / 4 = 1 (left: 1 8 12) -> 1 + 8 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21) -> 21 + 2 = 23",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "16 8 12"
                }
            },
            "Step 4": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 16 + 8 = 24 (left: 12 24)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 16 + 8 = 24 (left: 12 24) -> 24 - 12 = 12 (left: 12 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 16 + 8 = 24 (left: 12 24) -> 24 - 12 = 12 (left: 12 24) -> 12 + 24 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "1 15"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "There are no possible next steps with the input of 12."
                }
            },
            "Step 7": {
                "Step": "12 / 4 = 3 (left: 4 8 3) -> 8 - 4 = 4 (left: 4 3) -> 4 * 3 = 12 (left: 12) -> There are no possible next steps with the input of 12. -> 12 + 2 = 14 (left: 12 14)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 / 4 = 3 (left: 4 8 3) -> 8 - 4 = 4 (left: 4 3) -> 4 * 3 = 12 (left: 12) -> There are no possible next steps with the input of 12. -> 12 + 2 = 14 (left: 12 14) -> 12 * 14 = 168 (left: 14 168)",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "8 - 4 = 4 (left: 4 4 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "16 8 12"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 12 / 8 = 1.5 (left: 1.5 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 12 / 8 = 1.5 (left: 1.5 12) -> 1.5 + 12 = 13.5 (left: 13.5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 12 / 8 = 1.5 (left: 1.5 12) -> 1.5 + 12 = 13.5 (left: 13.5) -> There are no possible next steps for the input 13.5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "4 8 3"
                }
            },
            "Step 4": {
                "Step": "12 / 4 = 3 (left: 4 8 3) -> 8 / 4 = 2 (left: 2 3)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 / 4 = 3 (left: 4 8 3) -> 8 / 4 = 2 (left: 2 3) -> Input: 6 12",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 4 = 3 (left: 4 8 3) -> 8 / 4 = 2 (left: 2 3) -> Input: 6 12 -> 12 / 6 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "There are no possible next steps for the input 13.5."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There is only one number given (5.33"
                }
            },
            "Step 7": {
                "Step": "4 + 4 = 8 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12) -> 64 / 12 = 5.33 (left: 5.33) -> There is only one number given (5.33), so there are no possible next steps to perform any operations. -> There is only one number given, so there are no possible next steps.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 4 = 8 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12) -> 64 / 12 = 5.33 (left: 5.33) -> There is only one number given (5.33), so there are no possible next steps to perform any operations. -> There is only one number given, so there are no possible next steps. -> No possible next steps.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 8 16 12)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "8 16 12"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 8 16 12) -> 16 - 8 = 8 (left: 8 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 8 16 12) -> 16 - 8 = 8 (left: 8 12) -> 8 * 12 = 96 (left: 96)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 4 = 16 (left: 8 16 12) -> 16 - 8 = 8 (left: 8 12) -> 8 * 12 = 96 (left: 96) -> No possible next steps with input 96.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "16 8 12"
                }
            },
            "Step 4": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 16 + 8 = 24 (left: 12 24)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 16 + 8 = 24 (left: 12 24) -> 12 + 24 = 36 (left: 36)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 16 + 8 = 24 (left: 12 24) -> 12 + 24 = 36 (left: 36) -> 36 / 4 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "There are no possible next steps for the input 13.5."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "80 / 2 = 40"
                }
            },
            "Step 7": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 8 * 12 = 96 (left: 16 96) -> 96 - 16 = 80 (left: 80) -> 80 / 2 = 40 -> 80 / 2 = 40 (left: 40)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "80 / 2 = 40"
                }
            },
            "Step 8": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 8 * 12 = 96 (left: 16 96) -> 96 - 16 = 80 (left: 80) -> 80 / 2 = 40 -> 40 / 2 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "There are no possible next steps for the input 13.5."
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "12 / 4 = 3 (left: 4 8 3)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 8 3"
                }
            },
            "Step 1": {
                "Step": "12 / 4 = 3 (left: 4 8 3) -> 3 * 8 = 24 (left: 4 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 4 = 3 (left: 4 8 3) -> 3 * 8 = 24 (left: 4 24) -> 24 - 4 = 20 (left: 20)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 / 4 = 3 (left: 4 8 3) -> 3 * 8 = 24 (left: 4 24) -> 24 - 4 = 20 (left: 20) -> None - there are no other numbers to operate with.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "16 8 12"
                }
            },
            "Step 4": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 16 + 8 = 24 (left: 12 24)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 16 + 8 = 24 (left: 12 24) -> 12 + 24 = 36 (left: 36)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 16 + 8 = 24 (left: 12 24) -> 12 + 24 = 36 (left: 36) -> No possible next steps as there is only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "There are no possible next steps for the input 13.5."
                }
            },
            "Step 7": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 12 / 8 = 1.5 (left: 1.5 12) -> 1.5 + 12 = 13.5 (left: 13.5) -> There are no possible next steps for the input 13.5. -> There are no possible next steps for the input 13.5.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 12 / 8 = 1.5 (left: 1.5 12) -> 1.5 + 12 = 13.5 (left: 13.5) -> There are no possible next steps for the input 13.5. -> There are no possible next steps for the input 13.5. -> There are no possible next steps for the input 13.5.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "4 + 4 = 8 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "16 8 12"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 12 - 8 = 4 (left: 4 8 20)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 12 - 8 = 4 (left: 4 8 20) -> 8 * 4 = 32 (left: 32 20)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 12 - 8 = 4 (left: 4 8 20) -> 8 * 4 = 32 (left: 32 20) -> 32 - 20 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "4 8 3"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "16 8 12"
                }
            },
            "Step 4": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 12 / 8 = 1.5 (left: 1.5 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 12 / 8 = 1.5 (left: 1.5 12) -> 12 - 1.5 = 10.5 (left: 10.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 12 / 8 = 1.5 (left: 1.5 12) -> 12 - 1.5 = 10.5 (left: 10.5) -> 10.5 + 2 = 12.5 (left: 12.5)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There are no possible next steps with the input of 12."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "No possible next steps as there is only one number."
                }
            },
            "Step 7": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 16 + 8 = 24 (left: 12 24) -> 12 + 24 = 36 (left: 36) -> No possible next steps as there is only one number. -> No possible next steps as there is only one number.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 16 + 8 = 24 (left: 12 24) -> 12 + 24 = 36 (left: 36) -> No possible next steps as there is only one number. -> No possible next steps as there is only one number. -> There are no possible next steps as there is only one number.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "12 - 8 = 4 (left: 4 8 4)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "16 8 12"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 12 / 4 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 12 / 4 =  -> 12 / 4 = 3",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 12 / 4 =  -> 12 / 4 = 3 -> 12 + 4 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "16 8 12"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "16 8 12"
                }
            },
            "Step 4": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 16 - 12 = 4 (left: 4 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 16 - 12 = 4 (left: 4 8) -> 4 + 8 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 16 - 12 = 4 (left: 4 8) -> 4 + 8 = 12 (left: 12) -> 12 - 8 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "80 / 2 = 40"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There is only one number given (5.33"
                }
            },
            "Step 7": {
                "Step": "4 + 4 = 8 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12) -> 64 / 12 = 5.33 (left: 5.33) -> There is only one number given (5.33), so there are no possible next steps to perform any operations. -> There is no possible next step with only one number given.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 4 = 8 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12) -> 64 / 12 = 5.33 (left: 5.33) -> There is only one number given (5.33), so there are no possible next steps to perform any operations. -> There is no possible next step with only one number given. -> There is no possible next step with only one number given.",
                "Pruning": null
            }
        },
        "Input": "4 4 8 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "971": {
        "puzzle": "1 2 6 10",
        "Agent 0": {
            "Step 0": {
                "Step": "6 + 2 = 8 (left: 1 8 ",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 8 "
                }
            },
            "Step 1": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8) -> 8 + 8 = 16 (left: 16)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8) -> 8 + 8 = 16 (left: 16) -> 16 + 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1 8"
                }
            },
            "Step 4": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8) -> 8 + 8 = 16 -> 8 / 8 = 1 (left: 1 8) -> 1 * 8 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "None, the result is already 1."
                }
            },
            "Step 5": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8) -> 8 / 8 = 1 -> None, the result is already 1. -> No possible next steps.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8) -> 8 / 8 = 1 -> None, the result is already 1. -> No possible next steps. -> There are no possible next steps given the current numbers.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "10 12"
                }
            },
            "Step 7": {
                "Step": "6 * 2 = 12 (left: 1 12 10) -> 1 * 12 = 12 (left: 10 12) -> 10 * 12 = 120 (left: 120)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 * 2 = 12 (left: 1 12 10) -> 1 * 12 = 12 (left: 10 12) -> 10 * 12 = 120 (left: 120) -> There are no possible next steps for the number 120 as it is already a single number.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 8 "
                }
            },
            "Step 1": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8) -> 8 + 8 = 16 -> 8 / 8 = 1 (left: 1 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1 8"
                }
            },
            "Step 4": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8) -> 8 + 8 = 16 -> 8 / 8 = 1 (left: 1 8) -> 1 + 8 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "2 6 10"
                }
            },
            "Step 5": {
                "Step": "1 * 2 = 2 (left: 2 6 10) -> 10 - 2 = 8 (left: 2 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 * 2 = 2 (left: 2 6 10) -> 10 - 2 = 8 (left: 2 8) -> 8 - 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "10 12"
                }
            },
            "Step 7": {
                "Step": "6 * 2 = 12 (left: 1 12 10) -> 1 * 12 = 12 (left: 10 12) -> 10 * 12 = 120 (left: 120)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 * 2 = 12 (left: 1 12 10) -> 1 * 12 = 12 (left: 10 12) -> 10 * 12 = 120 (left: 120) -> There are no possible next steps as there is only one number provided.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 6 = 4 (left: 1 2 4)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 8 "
                }
            },
            "Step 1": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8) -> 8 - 8 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8) -> 8 - 8 = 0 (left: 0) -> No possible next steps as there is no input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1 8"
                }
            },
            "Step 4": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8) -> 8 + 8 = 16 -> 8 / 8 = 1 (left: 1 8) -> 8 / 1 = 8 (left: 8 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8) -> 8 + 8 = 16 -> 8 / 8 = 1 (left: 1 8) -> 8 / 1 = 8 (left: 8 8) -> 8 * 8 = 64 (left: 64)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "There are no possible next steps with the input 9."
                }
            },
            "Step 6": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 + 8 = 9 (left: 9) -> 8 + 1 = 9 (left: 9) -> There are no possible next steps with the input 9. -> There are no possible next steps with the input 9.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "10 12"
                }
            },
            "Step 7": {
                "Step": "6 * 2 = 12 (left: 1 12 10) -> 1 * 12 = 12 (left: 10 12) -> 10 - 12 = -2 (left: -2)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 * 2 = 12 (left: 1 12 10) -> 1 * 12 = 12 (left: 10 12) -> 10 - 12 = -2 (left: -2) -> -2 + 8 = 6 (left: 6 8)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 / 2 = 3 (left: 1 3 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 8 "
                }
            },
            "Step 1": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 - 1 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 - 1 = 7 (left: 7) -> 7 - 8 = -1 (left: -1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 - 1 = 7 (left: 7) -> 7 - 8 = -1 (left: -1) -> -1 + 2 = 1",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1 8"
                }
            },
            "Step 4": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8) -> 8 + 8 = 16 -> 8 / 8 = 1 (left: 1 8) -> 8 - 1 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "There are no possible next steps with the input 9."
                }
            },
            "Step 5": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 + 8 = 9 (left: 9) -> 9 -> There are no possible next steps with the input 9. -> There are no possible next steps with the input 9.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 + 8 = 9 (left: 9) -> 9 -> There are no possible next steps with the input 9. -> There are no possible next steps with the input 9. -> 9 + 9 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "10 12"
                }
            },
            "Step 7": {
                "Step": "6 * 2 = 12 (left: 1 12 10) -> 1 * 12 = 12 (left: 10 12) -> Input: 22 2 120 1.2",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 * 2 = 12 (left: 1 12 10) -> 1 * 12 = 12 (left: 10 12) -> Input: 22 2 120 1.2 -> 1.2 * ",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 * 2 = 2 (left: 2 6 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 8 "
                }
            },
            "Step 1": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8) -> 8 / 8 = 1",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8) -> 8 / 8 = 1 -> None, the result is already 1.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1 8"
                }
            },
            "Step 4": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8) -> 8 + 8 = 16 -> 8 / 8 = 1 (left: 1 8) -> 1 * 8 = 8 (left: 8 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8) -> 8 + 8 = 16 -> 8 / 8 = 1 (left: 1 8) -> 1 * 8 = 8 (left: 8 8) -> 8 + 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "The possible next steps would depend on the previous result and the remaining numbers. Without additional context, it is not possible to provide specific next steps."
                }
            },
            "Step 6": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 + 8 = 9 (left: 9) -> 9 + 3 = 12 (left: 3) -> The possible next steps would depend on the previous result and the remaining numbers. Without additional context, it is not possible to provide specific next steps. -> - Dividing two numbers",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "10 12"
                }
            },
            "Step 7": {
                "Step": "6 * 2 = 12 (left: 1 12 10) -> 1 * 12 = 12 (left: 10 12) -> 10 + 12 = 22 (left: 22)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 * 2 = 12 (left: 1 12 10) -> 1 * 12 = 12 (left: 10 12) -> 10 + 12 = 22 (left: 22) -> There are no possible next steps with the input 22.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "6 * 2 = 12 (left: 1 12 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 8 "
                }
            },
            "Step 1": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 + 8 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 + 8 = 9 (left: 9) -> 9 + 3 = 12 (left: 3)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 + 8 = 9 (left: 9) -> 9 + 3 = 12 (left: 3) -> The possible next steps would depend on the previous result and the remaining numbers. Without additional context, it is not possible to provide specific next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1 8"
                }
            },
            "Step 4": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8) -> 8 + 8 = 16 -> 8 / 8 = 1 (left: 1 8) -> 8 - 1 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "1 3 10"
                }
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 1 3 10) -> 1 * 3 = 3 (left: 3 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 1 3 10) -> 1 * 3 = 3 (left: 3 10) -> 3 * 10 = 30 (left: 30)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "10 12"
                }
            },
            "Step 7": {
                "Step": "6 * 2 = 12 (left: 1 12 10) -> 1 * 12 = 12 (left: 10 12) -> 10 * 12 = 120 (left: 120)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 * 2 = 12 (left: 1 12 10) -> 1 * 12 = 12 (left: 10 12) -> 10 * 12 = 120 (left: 120) -> There is only 1 possible next step with the input of 120:",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "1 * 2 = 2 (left: 2 6 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 8 "
                }
            },
            "Step 1": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 + 8 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 + 8 = 9 (left: 9) -> 9",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 + 8 = 9 (left: 9) -> 9 -> There are no possible next steps with the input 9.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1 8"
                }
            },
            "Step 4": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8) -> 8 + 8 = 16 -> 8 / 8 = 1 (left: 1 8) -> 8 - 1 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "1 3 10"
                }
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 1 3 10) -> 3 * 10 = 30 (left: 1 30)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 1 3 10) -> 3 * 10 = 30 (left: 1 30) -> 1 - 30 = -29 (left: -29)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "10 12"
                }
            },
            "Step 7": {
                "Step": "6 * 2 = 12 (left: 1 12 10) -> 1 * 12 = 12 (left: 10 12) -> 12 - 10 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 * 2 = 12 (left: 1 12 10) -> 1 * 12 = 12 (left: 10 12) -> 12 - 10 = 2 (left: 2) -> No possible next steps with just one number.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "10 - 2 = 8 (left: 1 8 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 8 "
                }
            },
            "Step 1": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 + 8 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 + 8 = 9 (left: 9) -> 9 - 8 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 + 8 = 9 (left: 9) -> 9 - 8 = 1 (left: 1) -> There is only one number provided, so there are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1 8"
                }
            },
            "Step 4": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8) -> 8 + 8 = 16 -> 8 / 8 = 1 (left: 1 8) -> 8 / 1 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "3 6 10"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 6 10) -> 3 + 6 = 9 (left: 9 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 6 10) -> 3 + 6 = 9 (left: 9 10) -> 9 * 10 = 90 (left: 90)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "10 12"
                }
            },
            "Step 7": {
                "Step": "6 * 2 = 12 (left: 1 12 10) -> 1 * 12 = 12 (left: 10 12) -> 12 / 10 = 1.2 (left: 1.2 10)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 * 2 = 12 (left: 1 12 10) -> 1 * 12 = 12 (left: 10 12) -> 12 / 10 = 1.2 (left: 1.2 10) -> 10 - 1.2 = 8.8 (left: 8.8)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "No possible next steps as there is no input provided."
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "6 + 10 = 16 (left: 1 2 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 8 "
                }
            },
            "Step 1": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 + 8 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 + 8 = 9 (left: 9) -> 8 + 1 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 + 8 = 9 (left: 9) -> 8 + 1 = 9 (left: 9) -> There are no possible next steps with the input 9.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1 8"
                }
            },
            "Step 4": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8) -> 8 + 8 = 16 -> 8 / 8 = 1 (left: 1 8) -> 1 * 8 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "1 2 4"
                }
            },
            "Step 5": {
                "Step": "10 - 6 = 4 (left: 1 2 4) -> 1 * 2 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 6 = 4 (left: 1 2 4) -> 1 * 2 = 2 (left: 2) -> There are no possible next steps with only one number given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "10 12"
                }
            },
            "Step 7": {
                "Step": "6 * 2 = 12 (left: 1 12 10) -> 1 * 12 = 12 (left: 10 12) -> 10 * 12 = 120 (left: 120)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 * 2 = 12 (left: 1 12 10) -> 1 * 12 = 12 (left: 10 12) -> 10 * 12 = 120 (left: 120) -> 120 / 10 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "No possible next steps as there is no input provided."
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 6 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 3 10"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 1 3 10) -> 10 - 1 = 9 (left: 1 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 1 3 10) -> 10 - 1 = 9 (left: 1 9) -> 9 - 9 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 1 3 10) -> 10 - 1 = 9 (left: 1 9) -> 9 - 9 = 0 (left: 0) -> There are no possible next steps with the input of 0.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1 8"
                }
            },
            "Step 4": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8) -> 8 + 8 = 16 -> 8 / 8 = 1 (left: 1 8) -> 8 / 1 = 8 (left: 8 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8) -> 8 + 8 = 16 -> 8 / 8 = 1 (left: 1 8) -> 8 / 1 = 8 (left: 8 8) -> 8 / 8 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "1 12 10"
                }
            },
            "Step 6": {
                "Step": "6 * 2 = 12 (left: 1 12 10) -> 1 * 12 = 12 (left: 10 12)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "10 12"
                }
            },
            "Step 7": {
                "Step": "6 * 2 = 12 (left: 1 12 10) -> 1 * 12 = 12 (left: 10 12) -> 10 - 12 = -2 (left: -2)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 * 2 = 12 (left: 1 12 10) -> 1 * 12 = 12 (left: 10 12) -> 10 - 12 = -2 (left: -2) -> There are no possible next steps with the given input of -2.",
                "Pruning": null
            }
        },
        "Input": "1 2 6 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "972": {
        "puzzle": "1 5 12 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 1 = 11 (left: 5 11 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "1 60 12"
                }
            },
            "Step 1": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 / 1 = 60 (left: 60 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 / 1 = 60 (left: 60 12) -> 60 + 12 = 72 (left: 72)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 / 1 = 60 (left: 60 12) -> 60 + 12 = 72 (left: 72) -> None, since there is only one number given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "9 15"
                }
            },
            "Step 4": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 - 1 = 59 (left: 12 59) -> 6 * 9 -> 6 + 9 = 15 (left: 9 15) -> 9 + 15 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "1 60 12"
                }
            },
            "Step 5": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 1 * 60 = 60 (left: 12 60)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 1 * 60 = 60 (left: 12 60) -> 60 / 12 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "3 4"
                }
            },
            "Step 7": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 - 12 = 48 (left: 48) -> 48 / 4 = 12  -> 48 / 12 = 4 (left: 4 4 12) -> 12 / 4 = 3 (left: 3 4) -> 3 * 4 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "7 5"
                }
            },
            "Step 8": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 1 + 60 = 61 (left: 12 61) -> 12 * 61 = 732 (left: 732) -> 3 + 2 = 5 (left: 7 5) -> 7 - 5 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "3 4"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 - 5 = 7 (left: 1 7 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "1 60 12"
                }
            },
            "Step 1": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 1 + 60 = 61 (left: 12 61)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 1 + 60 = 61 (left: 12 61) -> 12 * 61 = 732 (left: 732)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 1 + 60 = 61 (left: 12 61) -> 12 * 61 = 732 (left: 732) -> 3 + 2 = 5 (left: 7 5)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "9 15"
                }
            },
            "Step 4": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 - 1 = 59 (left: 12 59) -> 6 * 9 -> 6 + 9 = 15 (left: 9 15) -> 15 + 9 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "5 12 12"
                }
            },
            "Step 5": {
                "Step": "12 / 1 = 12 (left: 5 12 12) -> 5 + 12 = 17 (left: 12 17)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 1 = 12 (left: 5 12 12) -> 5 + 12 = 17 (left: 12 17) -> 12 * 17 = 204 (left: 204)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "3 4"
                }
            },
            "Step 7": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 - 12 = 48 (left: 48) -> 48 / 4 = 12  -> 48 / 12 = 4 (left: 4 4 12) -> 12 / 4 = 3 (left: 3 4) -> 4 / 3 = 1.33 (left: 1.33)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "4 4 12"
                }
            },
            "Step 8": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 - 12 = 48 (left: 48) -> 48 / 4 = 12  -> 48 / 12 = 4 (left: 4 4 12) -> 12 - 4 = 8 (left: 4 8)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 / 1 = 12 (left: 5 12 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 60 12"
                }
            },
            "Step 1": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 - 1 = 59 (left: 12 59)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 - 1 = 59 (left: 12 59) -> 6 * 9",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 - 1 = 59 (left: 12 59) -> 6 * 9 -> 6 + 9 = 15 (left: 9 15)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "9 15"
                }
            },
            "Step 4": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 - 1 = 59 (left: 12 59) -> 6 * 9 -> 6 + 9 = 15 (left: 9 15) -> 15 - 9 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "1 2 "
                }
            },
            "Step 5": {
                "Step": "12 / 5 = 2 (left: 1 2  -> 2 - 1 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 5 = 2 (left: 1 2  -> 2 - 1 = 1 (left: 1) -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "3 4"
                }
            },
            "Step 7": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 - 12 = 48 (left: 48) -> 48 / 4 = 12  -> 48 / 12 = 4 (left: 4 4 12) -> 12 / 4 = 3 (left: 3 4) -> 3 - 4 = -1 (left: -1)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "None, since there is only one number given."
                }
            },
            "Step 8": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 / 1 = 60 (left: 60 12) -> 60 + 12 = 72 (left: 72) -> None, since there is only one number given. -> There are no possible next steps as there is only one number given.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 * 12 = 60 (left: 1 60 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 60 12"
                }
            },
            "Step 1": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 / 12 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 / 12 = 5 (left: 5) -> There is only one possible next step: 5 + 7 = 12 (left: 8 8 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 / 12 = 5 (left: 5) -> There is only one possible next step: 5 + 7 = 12 (left: 8 8 12) -> 8 / 8 = 1 (left: 1 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "9 15"
                }
            },
            "Step 4": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 - 1 = 59 (left: 12 59) -> 6 * 9 -> 6 + 9 = 15 (left: 9 15) -> 15 - 9 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "7 5"
                }
            },
            "Step 5": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 1 + 60 = 61 (left: 12 61) -> 12 * 61 = 732 (left: 732) -> 3 + 2 = 5 (left: 7 5) -> 7 - 5 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "1 60 12"
                }
            },
            "Step 6": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 / 12 = 5 (left: 5 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "3 4"
                }
            },
            "Step 7": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 - 12 = 48 (left: 48) -> 48 / 4 = 12  -> 48 / 12 = 4 (left: 4 4 12) -> 12 / 4 = 3 (left: 3 4) -> 3 + 4 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "Input: 18 -6"
                }
            },
            "Step 8": {
                "Step": "12 - 5 = 7 (left: 1 7 12) -> 7 - 1 = 6 (left: 6 12) -> Input: 18 -6 -> -6 + 18 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "3 4"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 / 5 = 2 (left: 1 2 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 60 12"
                }
            },
            "Step 1": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 * 1 = 12 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 * 1 = 12 (left: -> 12 * 1 = 12 (left: 1 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 * 1 = 12 (left: -> 12 * 1 = 12 (left: 1 12) -> 12 / 1 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "1 60 12"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "9 15"
                }
            },
            "Step 4": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 - 1 = 59 (left: 12 59) -> 6 * 9 -> 6 + 9 = 15 (left: 9 15) -> 9 - 15 = -6 (left: -6)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "9 15"
                }
            },
            "Step 5": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 - 1 = 59 (left: 12 59) -> 6 * 9 -> 6 + 9 = 15 (left: 9 15) -> 9 * 15 = 135 (left: 135)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "-47 + 2 = -45"
                }
            },
            "Step 6": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 - 1 = 59 (left: 12 59) -> 12 - 59 = -47 (left: -47) -> -47 + 2 = -45 -> -45 / 2 = -22.5 (left: 2 -22.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "3 4"
                }
            },
            "Step 7": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 - 12 = 48 (left: 48) -> 48 / 4 = 12  -> 48 / 12 = 4 (left: 4 4 12) -> 12 / 4 = 3 (left: 3 4) -> 3 + 4 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "None, since there is only one number given."
                }
            },
            "Step 8": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 / 1 = 60 (left: 60 12) -> 60 + 12 = 72 (left: 72) -> None, since there is only one number given. -> No further calculations can be made without additional numbers.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "12 - 5 = 7 (left: 1 7 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1 7 12"
                }
            },
            "Step 1": {
                "Step": "12 - 5 = 7 (left: 1 7 12) -> 7 - 1 = 6 (left: 6 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 5 = 7 (left: 1 7 12) -> 7 - 1 = 6 (left: 6 12) -> 6 * 12 = 72 (left: 72)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 5 = 7 (left: 1 7 12) -> 7 - 1 = 6 (left: 6 12) -> 6 * 12 = 72 (left: 72) -> 72 / 7 = 10.285714285714286 (left: 10.285714285714286)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "1 60 12"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "9 15"
                }
            },
            "Step 4": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 - 1 = 59 (left: 12 59) -> 6 * 9 -> 6 + 9 = 15 (left: 9 15) -> 15 - 9 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "1 12"
                }
            },
            "Step 5": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 / 12 = 5 (left: 5) -> There is only one possible next step: 5 + 7 = 12 (left: 8 8 12) -> 8 / 8 = 1 (left: 1 12) -> 1 + 12 = 13 (left: 13)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "5 11 12"
                }
            },
            "Step 6": {
                "Step": "12 - 1 = 11 (left: 5 11 12) -> 5 + 11 = 16 (left: 12 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "3 4"
                }
            },
            "Step 7": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 - 12 = 48 (left: 48) -> 48 / 4 = 12  -> 48 / 12 = 4 (left: 4 4 12) -> 12 / 4 = 3 (left: 3 4) -> 4 / 3 = 1.33 (left: 1.33)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "5"
                }
            },
            "Step 8": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 1 * 60 = 60 (left: 12 60) -> 60 / 12 = 5 (left: 5) -> There are no possible next steps with just the number 5.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "1 + 5 = 6 (left: 6 12 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 11 12"
                }
            },
            "Step 1": {
                "Step": "12 - 1 = 11 (left: 5 11 12) -> Input: 3 9 5 7",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 1 = 11 (left: 5 11 12) -> Input: 3 9 5 7 -> 9 / 3 = 3 (left: 3 5 7)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 1 = 11 (left: 5 11 12) -> Input: 3 9 5 7 -> 9 / 3 = 3 (left: 3 5 7) -> 3 + 5 = 8 (left: 7 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "9 15"
                }
            },
            "Step 4": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 - 1 = 59 (left: 12 59) -> 6 * 9 -> 6 + 9 = 15 (left: 9 15) -> 9 + 15 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "9 15"
                }
            },
            "Step 5": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 - 1 = 59 (left: 12 59) -> 6 * 9 -> 6 + 9 = 15 (left: 9 15) -> 9 + 15 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "4 4 12"
                }
            },
            "Step 6": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 - 12 = 48 (left: 48) -> 48 / 4 = 12  -> 48 / 12 = 4 (left: 4 4 12) -> 12 / 4 = 3 (left: 3 4)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "3 4"
                }
            },
            "Step 7": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 - 12 = 48 (left: 48) -> 48 / 4 = 12  -> 48 / 12 = 4 (left: 4 4 12) -> 12 / 4 = 3 (left: 3 4) -> 4 - 3 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "7 5"
                }
            },
            "Step 8": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 1 + 60 = 61 (left: 12 61) -> 12 * 61 = 732 (left: 732) -> 3 + 2 = 5 (left: 7 5) -> 7 - 5 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "-47 + 2 = -45"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "5 * 12 = 60 (left: 1 60 12)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1 7 12"
                }
            },
            "Step 1": {
                "Step": "12 - 5 = 7 (left: 1 7 12) -> 1 + 7 = 8 (left: 8 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 5 = 7 (left: 1 7 12) -> 1 + 7 = 8 (left: 8 12) -> 8 * 12 = 96 (left: 96)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 5 = 7 (left: 1 7 12) -> 1 + 7 = 8 (left: 8 12) -> 8 * 12 = 96 (left: 96) -> There are no possible next steps with the input 96.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "9 15"
                }
            },
            "Step 4": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 - 1 = 59 (left: 12 59) -> 6 * 9 -> 6 + 9 = 15 (left: 9 15) -> 15 - 9 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "1 7 12"
                }
            },
            "Step 5": {
                "Step": "12 - 5 = 7 (left: 1 7 12) -> 7 - 1 = 6 (left: 6 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 5 = 7 (left: 1 7 12) -> 7 - 1 = 6 (left: 6 12) -> Input: 18 -6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "3 4"
                }
            },
            "Step 7": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 - 12 = 48 (left: 48) -> 48 / 4 = 12  -> 48 / 12 = 4 (left: 4 4 12) -> 12 / 4 = 3 (left: 3 4) -> 3 * 4 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "There are no possible next steps with the input 96."
                }
            },
            "Step 8": {
                "Step": "12 - 5 = 7 (left: 1 7 12) -> 1 + 7 = 8 (left: 8 12) -> 8 * 12 = 96 (left: 96) -> There are no possible next steps with the input 96. -> There are no possible next steps with the input 96.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "5 * 12 = 60 (left: 1 60 12)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 60 12"
                }
            },
            "Step 1": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 - 1 = 59 (left: 12 59)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 - 1 = 59 (left: 12 59) -> 12 - 59 = -47 (left: -47)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 - 1 = 59 (left: 12 59) -> 12 - 59 = -47 (left: -47) -> -47 + 2 = -45",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "9 15"
                }
            },
            "Step 4": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 - 1 = 59 (left: 12 59) -> 6 * 9 -> 6 + 9 = 15 (left: 9 15) -> 9 / 15 = 0.6 (left: 0.6)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "1 60 12"
                }
            },
            "Step 5": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 * 1 = 12 (left: 12 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 * 1 = 12 (left: 12 12) -> 12 / 12 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "3 4"
                }
            },
            "Step 7": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 - 12 = 48 (left: 48) -> 48 / 4 = 12  -> 48 / 12 = 4 (left: 4 4 12) -> 12 / 4 = 3 (left: 3 4) -> Input: 6 9",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 - 12 = 48 (left: 48) -> 48 / 4 = 12  -> 48 / 12 = 4 (left: 4 4 12) -> 12 / 4 = 3 (left: 3 4) -> Input: 6 9 -> 9 - 6 = 3 (left: 3 9)",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "5 * 12 = 60 (left: 1 60 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "1 60 12"
                }
            },
            "Step 1": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 - 12 = 48 (left: 48)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 - 12 = 48 (left: 48) -> 48 / 4 = 12 ",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 - 12 = 48 (left: 48) -> 48 / 4 = 12  -> 48 / 12 = 4 (left: 4 4 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "9 15"
                }
            },
            "Step 4": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 - 1 = 59 (left: 12 59) -> 6 * 9 -> 6 + 9 = 15 (left: 9 15) -> 15 / 9 = 1.6667 (left: 1.6667)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "5 11 12"
                }
            },
            "Step 5": {
                "Step": "12 - 1 = 11 (left: 5 11 12) -> 11 / 5 = 2.2 (left: 2.2 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 1 = 11 (left: 5 11 12) -> 11 / 5 = 2.2 (left: 2.2 12) -> 12 - 2.2 = 9.8 (left: 9.8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "3 4"
                }
            },
            "Step 7": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 - 12 = 48 (left: 48) -> 48 / 4 = 12  -> 48 / 12 = 4 (left: 4 4 12) -> 12 / 4 = 3 (left: 3 4) -> 4 - 3 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "5"
                }
            },
            "Step 8": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 1 * 60 = 60 (left: 12 60) -> 60 / 12 = 5 (left: 5) -> 5 + 2 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "1 12"
                }
            }
        },
        "Input": "1 5 12 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "973": {
        "puzzle": "5 6 6 8",
        "Agent 0": {
            "Step 0": {
                "Step": "8 - 6 = 2 (left: 5 6 2)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "1.2 6 8"
                }
            },
            "Step 1": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 8 - 1.2 = 6.8 (left: 6.8 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 8 - 1.2 = 6.8 (left: 6.8 8) -> 6.8 + 8 = 14.8 (left: 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 8 - 1.2 = 6.8 (left: 6.8 8) -> 6.8 + 8 = 14.8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "6.5 13"
                }
            },
            "Step 4": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 8 - 1 = 7 (left: 6 7) -> 6 + 7 = 13 (left: 13) -> 13 / 2 = 6.5 (left: 6.5 13) -> 6.5 + 13 = 19.5 (left: 19.5)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "1 6 8"
                }
            },
            "Step 5": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 1 + 6 = 7 (left: 7 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 1 + 6 = 7 (left: 7 8) -> 7 / 8 = 0.875 (left: 0.875)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "6.5 13"
                }
            },
            "Step 7": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 8 - 1 = 7 (left: 6 7) -> 6 + 7 = 13 (left: 13) -> 13 / 2 = 6.5 (left: 6.5 13) -> 13 - 6.5 = 6.5 (left: 6.5)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "6 9"
                }
            },
            "Step 8": {
                "Step": "5 + 6 = 11 (left: 6 8 11) -> 11 - 6 = 5 (left: 6 5) -> Input: 3 9 -> 9 - 3 = 6 (left: 6 9) -> 6 + 9 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "6.5 13"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 8 11"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 6 8 11) -> 11 - 6 = 5 (left: 6 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 6 8 11) -> 11 - 6 = 5 (left: 6 5) -> Input: 3 9",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 6 8 11) -> 11 - 6 = 5 (left: 6 5) -> Input: 3 9 -> 9 - 3 = 6 (left: 6 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "6.5 13"
                }
            },
            "Step 4": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 8 - 1 = 7 (left: 6 7) -> 6 + 7 = 13 (left: 13) -> 13 / 2 = 6.5 (left: 6.5 13) -> 13 - 6.5 = 6.5 (left: 6.5 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 8 - 1 = 7 (left: 6 7) -> 6 + 7 = 13 (left: 13) -> 13 / 2 = 6.5 (left: 6.5 13) -> 13 - 6.5 = 6.5 (left: 6.5 13) -> 13 - 6.5 = 6.5 (left: 6.5)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "1 6 8"
                }
            },
            "Step 6": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 8 / 1 = 8 (left: 6 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "6.5 13"
                }
            },
            "Step 7": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 8 - 1 = 7 (left: 6 7) -> 6 + 7 = 13 (left: 13) -> 13 / 2 = 6.5 (left: 6.5 13) -> 13 - 6.5 = 6.5 (left: 6.5)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "0.875"
                }
            },
            "Step 8": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 1 + 6 = 7 (left: 7 8) -> 7 / 8 = 0.875 (left: 0.875) -> There are no possible next steps for the input 0.875.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 - 5 = 1 (left: 1 6 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 8 11"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 6 8 11) -> 8 - 6 = 2 (left: 2 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 6 8 11) -> 8 - 6 = 2 (left: 2 11) -> 2 + 11 = 13 (left: 11 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 6 8 11) -> 8 - 6 = 2 (left: 2 11) -> 2 + 11 = 13 (left: 11 13) -> 11 * 13 = 143 (left: 143)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "1 6 8"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "6.5 13"
                }
            },
            "Step 4": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 8 - 1 = 7 (left: 6 7) -> 6 + 7 = 13 (left: 13) -> 13 / 2 = 6.5 (left: 6.5 13) -> 6.5 * 2 = 13 (left: 13)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "1 6 8"
                }
            },
            "Step 5": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 6 - 1 = 5 (left: 5 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 6 - 1 = 5 (left: 5 8) -> 5 + 8 = 13 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "6.5 13"
                }
            },
            "Step 7": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 8 - 1 = 7 (left: 6 7) -> 6 + 7 = 13 (left: 13) -> 13 / 2 = 6.5 (left: 6.5 13) -> 6.5 + 13 = 19.5 (left: 19.5)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "0.875 + 2 = 2.875"
                }
            },
            "Step 8": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 1 + 6 = 7 (left: 7 8) -> 7 / 8 = 0.875 (left: 0.875) -> 0.875 + 2 = 2.875 -> 2.875 - 0.875 = 2",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 - 5 = 1 (left: 1 6 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 6 8"
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 8 + 1 = 9 (left: 6 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 8 + 1 = 9 (left: 6 9) -> 9 - 6 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 8 + 1 = 9 (left: 6 9) -> 9 - 6 = 3 (left: 3) -> 3 * 3 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "1.2 6 8"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "6.5 13"
                }
            },
            "Step 4": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 8 - 1 = 7 (left: 6 7) -> 6 + 7 = 13 (left: 13) -> 13 / 2 = 6.5 (left: 6.5 13) -> Input: 3 9 27",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 8 - 1 = 7 (left: 6 7) -> 6 + 7 = 13 (left: 13) -> 13 / 2 = 6.5 (left: 6.5 13) -> Input: 3 9 27 -> 27 / 3 = 9 (left: 9 27)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 8 - 1 = 7 (left: 6 7) -> 6 + 7 = 13 (left: 13) -> 13 / 2 = 6.5 (left: 6.5 13) -> Input: 3 9 27 -> 27 / 3 = 9 (left: 9 27) -> 27 - 9 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "6.5 13"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "6.5 13"
                }
            },
            "Step 7": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 8 - 1 = 7 (left: 6 7) -> 6 + 7 = 13 (left: 13) -> 13 / 2 = 6.5 (left: 6.5 13) -> 13 / 6.5 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "6.5 13"
                }
            },
            "Step 8": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 8 - 1 = 7 (left: 6 7) -> 6 + 7 = 13 (left: 13) -> 13 / 2 = 6.5 (left: 6.5 13) -> 13 * 0.5 = 6.5 (left: 6.5 6.5)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 6 8 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "1.2 6 8"
                }
            },
            "Step 1": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 8 - 1.2 = 6.8 (left: 6.8 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 8 - 1.2 = 6.8 (left: 6.8 8) -> 6.8 + 8 = 14.8 (left: 14.8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 8 - 1.2 = 6.8 (left: 6.8 8) -> 6.8 + 8 = 14.8 (left: 14.8) -> There are no possible next steps for the input 14.8 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "6.5 13"
                }
            },
            "Step 4": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 8 - 1 = 7 (left: 6 7) -> 6 + 7 = 13 (left: 13) -> 13 / 2 = 6.5 (left: 6.5 13) -> 13 * 2 = 26 (left: 6.5 26)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 8 - 1 = 7 (left: 6 7) -> 6 + 7 = 13 (left: 13) -> 13 / 2 = 6.5 (left: 6.5 13) -> 13 * 2 = 26 (left: 6.5 26) -> 26 - 6.5 = 19.5 (left: 19.5 26)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 8 - 1 = 7 (left: 6 7) -> 6 + 7 = 13 (left: 13) -> 13 / 2 = 6.5 (left: 6.5 13) -> 13 * 2 = 26 (left: 6.5 26) -> 26 - 6.5 = 19.5 (left: 19.5 26) -> 19.5 + 26 = 45.5 (left: 45.5)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "There are no possible next steps for the input 5.5."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "6.5 13"
                }
            },
            "Step 7": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 8 - 1 = 7 (left: 6 7) -> 6 + 7 = 13 (left: 13) -> 13 / 2 = 6.5 (left: 6.5 13) -> 6.5 * 2 = 13 (left: 13)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "0.875 + 2 = 2.875"
                }
            },
            "Step 8": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 1 + 6 = 7 (left: 7 8) -> 7 / 8 = 0.875 (left: 0.875) -> 0.875 + 2 = 2.875 -> 2 / 0.875 = 2.2857 (left: 2.2857)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "There are no possible next steps for the input 5.5."
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "5 * 6 = 30 (left: 30 6 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "1 6 8"
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 8 / 1 = 8 (left: 6 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 8 / 1 = 8 (left: 6 8) -> 6 * 8 = 48 (left: 48)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 8 / 1 = 8 (left: 6 8) -> 6 * 8 = 48 (left: 48) -> 48 / 4 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "1 6 8"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "6.5 13"
                }
            },
            "Step 4": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 8 - 1 = 7 (left: 6 7) -> 6 + 7 = 13 (left: 13) -> 13 / 2 = 6.5 (left: 6.5 13) -> 13 - 6.5 = 6.5 (left: 6.5 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 8 - 1 = 7 (left: 6 7) -> 6 + 7 = 13 (left: 13) -> 13 / 2 = 6.5 (left: 6.5 13) -> 13 - 6.5 = 6.5 (left: 6.5 13) -> 6.5 * 2 = 13 (left: 13)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "5 14 "
                }
            },
            "Step 6": {
                "Step": "6 + 8 = 14 (left: 5 14  -> 5 - 14 = -9 (left: -9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "6.5 13"
                }
            },
            "Step 7": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 8 - 1 = 7 (left: 6 7) -> 6 + 7 = 13 (left: 13) -> 13 / 2 = 6.5 (left: 6.5 13) -> ",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "8"
                }
            },
            "Step 8": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 6 - 1 = 5 (left: 5 8) -> 5 + 8 = 13 (left: 8) -> 8 - 8 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "6.5 13"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 + 8 = 14 (left: 5 14 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 6 2"
                }
            },
            "Step 1": {
                "Step": "8 - 6 = 2 (left: 5 6 2) -> 5 + 6 = 11 (left: 2 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 6 = 2 (left: 5 6 2) -> 5 + 6 = 11 (left: 2 11) -> 11 / 2 = 5.5 (left: 5.5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 6 = 2 (left: 5 6 2) -> 5 + 6 = 11 (left: 2 11) -> 11 / 2 = 5.5 (left: 5.5) -> 5.5 / 2 = 2.75 (left: 2.75)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "5 6 2"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "1 6 8"
                }
            },
            "Step 4": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 1 + 6 = 7 (left: 7 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 1 + 6 = 7 (left: 7 8) -> 7 / 8 = 0.875 (left: 0.875)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 1 + 6 = 7 (left: 7 8) -> 7 / 8 = 0.875 (left: 0.875) -> 0.875 + 2 = 2.875",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "6.5 13"
                }
            },
            "Step 7": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 8 - 1 = 7 (left: 6 7) -> 6 + 7 = 13 (left: 13) -> 13 / 2 = 6.5 (left: 6.5 13) -> 3 + 4 = 7 (left: 5 7)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 8 - 1 = 7 (left: 6 7) -> 6 + 7 = 13 (left: 13) -> 13 / 2 = 6.5 (left: 6.5 13) -> 3 + 4 = 7 (left: 5 7) -> 5 - 7 = -2 (left: -2)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "8 + 8 = 16"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 6 2"
                }
            },
            "Step 1": {
                "Step": "8 - 6 = 2 (left: 5 6 2) -> 5 + 6 = 11 (left: 2 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 6 = 2 (left: 5 6 2) -> 5 + 6 = 11 (left: 2 11) -> 11 / 2 = 5.5 (left: 5.5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 6 = 2 (left: 5 6 2) -> 5 + 6 = 11 (left: 2 11) -> 11 / 2 = 5.5 (left: 5.5) -> There are no possible next steps for the input 5.5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "6.5 13"
                }
            },
            "Step 4": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 8 - 1 = 7 (left: 6 7) -> 6 + 7 = 13 (left: 13) -> 13 / 2 = 6.5 (left: 6.5 13) -> 6.5 x 2 = 13 (left: 13)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "6.5 13"
                }
            },
            "Step 5": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 8 - 1 = 7 (left: 6 7) -> 6 + 7 = 13 (left: 13) -> 13 / 2 = 6.5 (left: 6.5 13) -> 13 - 6.5 = 6.5 (left: 6.5 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 8 - 1 = 7 (left: 6 7) -> 6 + 7 = 13 (left: 13) -> 13 / 2 = 6.5 (left: 6.5 13) -> 13 - 6.5 = 6.5 (left: 6.5 13) -> 6.5 + 13 = 19.5 (left: 19.5)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "There are no possible next steps for the input 5.5."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "7.2 8"
                }
            },
            "Step 7": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 1.2 * 6 = 7.2 (left: 7.2 8) -> 7.2 / 8 = 0.9 (left: 0.9)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 1.2 * 6 = 7.2 (left: 7.2 8) -> 7.2 / 8 = 0.9 (left: 0.9) -> 0.9 + 0.9 = 1.8",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "6 - 5 = 1 (left: 1 6 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "30 6 8"
                }
            },
            "Step 1": {
                "Step": "5 * 6 = 30 (left: 30 6 8) -> 6 * 8 = 48 (left: 48)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 6 = 30 (left: 30 6 8) -> 6 * 8 = 48 (left: 48) -> 48 + 2 = 50 (left: 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 6 = 30 (left: 30 6 8) -> 6 * 8 = 48 (left: 48) -> 48 + 2 = 50 (left: 2) -> 2 + 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "1 6 8"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "1 6 8"
                }
            },
            "Step 4": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 8 - 6 = 2 (left: 1 2)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 8 - 6 = 2 (left: 1 2) -> 1 + 2 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 8 - 6 = 2 (left: 1 2) -> 1 + 2 = 3 (left: 3) -> There are no possible next steps with just one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "6.5 13"
                }
            },
            "Step 7": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 8 - 1 = 7 (left: 6 7) -> 6 + 7 = 13 (left: 13) -> 13 / 2 = 6.5 (left: 6.5 13) -> 6.5 * 2 = 13 (left: 13)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "6.5 13"
                }
            },
            "Step 8": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 8 - 1 = 7 (left: 6 7) -> 6 + 7 = 13 (left: 13) -> 13 / 2 = 6.5 (left: 6.5 13) -> 13 / 6.5 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "There are no possible next steps with just one number."
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "1 6 8"
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 8 - 1 = 7 (left: 6 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 8 - 1 = 7 (left: 6 7) -> 6 + 7 = 13 (left: 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 8 - 1 = 7 (left: 6 7) -> 6 + 7 = 13 (left: 13) -> 13 / 2 = 6.5 (left: 6.5 13)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "6.5 13"
                }
            },
            "Step 4": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 8 - 1 = 7 (left: 6 7) -> 6 + 7 = 13 (left: 13) -> 13 / 2 = 6.5 (left: 6.5 13) -> 13 - 6.5 = 6.5 (left: 6.5 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 8 - 1 = 7 (left: 6 7) -> 6 + 7 = 13 (left: 13) -> 13 / 2 = 6.5 (left: 6.5 13) -> 13 - 6.5 = 6.5 (left: 6.5 13) -> 13 / 6.5 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "1.2 6 8"
                }
            },
            "Step 6": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 1.2 * 6 = 7.2 (left: 7.2 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "6.5 13"
                }
            },
            "Step 7": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 8 - 1 = 7 (left: 6 7) -> 6 + 7 = 13 (left: 13) -> 13 / 2 = 6.5 (left: 6.5 13) -> 6.5 * 2 = 13 (left: 13)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "8"
                }
            },
            "Step 8": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 6 - 1 = 5 (left: 5 8) -> 5 + 8 = 13 (left: 8) -> 8 + 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "There are no possible next steps for the input 5.5."
                }
            }
        },
        "Input": "5 6 6 8",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "974": {
        "puzzle": "7 7 8 11",
        "Agent 0": {
            "Step 0": {
                "Step": "7 * 7 = 49 (left: 8 11 49)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "8 14 11"
                }
            },
            "Step 1": {
                "Step": "7 + 7 = 14 (left: 8 14 11) -> 8 + 14 = 22 (left: 11 22)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 7 = 14 (left: 8 14 11) -> 8 + 14 = 22 (left: 11 22) -> 11 + 22 = 33 (left: 33)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 + 7 = 14 (left: 8 14 11) -> 8 + 14 = 22 (left: 11 22) -> 11 + 22 = 33 (left: 33) -> 33 + 2 = 35",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "4 7 8"
                }
            },
            "Step 4": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 7 / 4 = 1.75 (left: 1.75 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 7 / 4 = 1.75 (left: 1.75 8) -> 1.75 + 8 = 9.75 (left: 9.75)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 7 / 4 = 1.75 (left: 1.75 8) -> 1.75 + 8 = 9.75 (left: 9.75) -> 9.75 * 2 = 19.5 (left: 19.5)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "There are no possible next steps for the input 0.159."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps for the input 0.159."
                }
            },
            "Step 7": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 8 * 11 = 88 (left: 14 88) -> 14 / 88 = 0.159 (left: 0.159) -> There are no possible next steps for the input 0.159. -> There are no possible next steps for the input 0.159.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 8 * 11 = 88 (left: 14 88) -> 14 / 88 = 0.159 (left: 0.159) -> There are no possible next steps for the input 0.159. -> There are no possible next steps for the input 0.159. -> There are no valid operations that can be performed on the input 0.159.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 * 7 = 49 (left: 8 11 49)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "8 14 11"
                }
            },
            "Step 1": {
                "Step": "7 + 7 = 14 (left: 8 14 11) -> 8 + 14 = 22 (left: 11 22)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 7 = 14 (left: 8 14 11) -> 8 + 14 = 22 (left: 11 22) -> 11 / 22 = 0.5 (left: 0.5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 + 7 = 14 (left: 8 14 11) -> 8 + 14 = 22 (left: 11 22) -> 11 / 22 = 0.5 (left: 0.5) -> There is only one possible next step:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "8 11 49"
                }
            },
            "Step 4": {
                "Step": "7 * 7 = 49 (left: 8 11 49) -> 49 - 8 = 41 (left: 11 41)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 * 7 = 49 (left: 8 11 49) -> 49 - 8 = 41 (left: 11 41) -> 11 / 41 \u2248 0.2683 (left: 0.2683)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 7 = 49 (left: 8 11 49) -> 49 - 8 = 41 (left: 11 41) -> 11 / 41 \u2248 0.2683 (left: 0.2683) -> 0.2683 / 2 = 0.13415",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "30 + 2 = 32"
                }
            },
            "Step 7": {
                "Step": "7 * 7 = 49 (left: 8 11 49) -> 49 - 8 = 41 (left: 11 41) -> 41 - 11 = 30 (left: 30) -> 30 + 2 = 32 -> 32 / 2 = 16 (left: 16 2 32)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 * 7 = 49 (left: 8 11 49) -> 49 - 8 = 41 (left: 11 41) -> 41 - 11 = 30 (left: 30) -> 30 + 2 = 32 -> 32 / 2 = 16 (left: 16 2 32) -> 32 - 16 = 16 (left: 16 2)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 / 7 = 1 (left: 1 8 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "8 14 11"
                }
            },
            "Step 1": {
                "Step": "7 + 7 = 14 (left: 8 14 11) -> 8 + 14 = 22 (left: 22 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 7 = 14 (left: 8 14 11) -> 8 + 14 = 22 (left: 22 11) -> 5 + 3 = 8 (left: 8 4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 + 7 = 14 (left: 8 14 11) -> 8 + 14 = 22 (left: 22 11) -> 5 + 3 = 8 (left: 8 4) -> 8 * 4 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "8 11 14"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "4 7 8"
                }
            },
            "Step 4": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 7 + 4 = 11 (left: 8 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 7 + 4 = 11 (left: 8 11) -> 8 - 11 = -3 (left: -3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 7 + 4 = 11 (left: 8 11) -> 8 - 11 = -3 (left: -3) -> There are no possible next steps with the input -3.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "33 + 2 = 35"
                }
            },
            "Step 7": {
                "Step": "7 + 7 = 14 (left: 8 14 11) -> 8 + 14 = 22 (left: 11 22) -> 11 + 22 = 33 (left: 33) -> 33 + 2 = 35 -> 2 + 33 = 35 (left: 35 35)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 + 7 = 14 (left: 8 14 11) -> 8 + 14 = 22 (left: 11 22) -> 11 + 22 = 33 (left: 33) -> 33 + 2 = 35 -> 2 + 33 = 35 (left: 35 35) -> 35 + 35 = 70",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 + 7 = 14 (left: 8 14 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "8 11 14"
                }
            },
            "Step 1": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 8 * 11 = 88 (left: 14 88)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 8 * 11 = 88 (left: 14 88) -> 14 / 88 = 0.159 (left: 0.159)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 8 * 11 = 88 (left: 14 88) -> 14 / 88 = 0.159 (left: 0.159) -> There are no possible next steps for the input 0.159.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "8 11 49"
                }
            },
            "Step 4": {
                "Step": "7 * 7 = 49 (left: 8 11 49) -> 49 - 8 = 41 (left: 11 41)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 * 7 = 49 (left: 8 11 49) -> 49 - 8 = 41 (left: 11 41) -> 41 - 11 = 30 (left: 30)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 7 = 49 (left: 8 11 49) -> 49 - 8 = 41 (left: 11 41) -> 41 - 11 = 30 (left: 30) -> 30 + 2 = 32",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "There are no possible next steps for the input 0.159."
                }
            },
            "Step 7": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 8 * 11 = 88 (left: 14 88) -> 14 / 88 = 0.159 (left: 0.159) -> There are no possible next steps for the input 0.159. -> There are no possible next steps for the input 0.159.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 8 * 11 = 88 (left: 14 88) -> 14 / 88 = 0.159 (left: 0.159) -> There are no possible next steps for the input 0.159. -> There are no possible next steps for the input 0.159. -> There are no possible next steps for the input 0.159 as it is a decimal number and not an integer.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "7 + 8 = 15 (left: 7 11 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "1 7 11"
                }
            },
            "Step 1": {
                "Step": "8 - 7 = 1 (left: 1 7 11) -> 11 - 7 = 4 (left: 1 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 7 = 1 (left: 1 7 11) -> 11 - 7 = 4 (left: 1 4) -> 4 / 1 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 7 = 1 (left: 1 7 11) -> 11 - 7 = 4 (left: 1 4) -> 4 / 1 = 4 (left: 4) -> There are no possible next steps with the input of 4.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "4 7 8"
                }
            },
            "Step 4": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> Input: 3 6",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> Input: 3 6 -> 3 / 6 = 0.5 (left: 0.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> Input: 3 6 -> 3 / 6 = 0.5 (left: 0.5) -> There is only one possible next step: 0.5 * 2 = 1",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "There are no possible next steps with the input of -8."
                }
            },
            "Step 7": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 14 - 8 = 6 (left: 6 14) -> 6 - 14 = -8 (left: -8) -> There are no possible next steps with the input of -8. -> There are no possible next steps with the input of -8.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 14 - 8 = 6 (left: 6 14) -> 6 - 14 = -8 (left: -8) -> There are no possible next steps with the input of -8. -> There are no possible next steps with the input of -8. -> There are no possible next steps with the input of -8.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "11 - 7 = 4 (left: 4 7 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 11 15"
                }
            },
            "Step 1": {
                "Step": "7 + 8 = 15 (left: 7 11 15) -> Input: 3",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 7 11 15) -> Input: 3 -> 3 * 3 = 9",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 + 8 = 15 (left: 7 11 15) -> Input: 3 -> 3 * 3 = 9 -> 3 + 3 = 6 (left: 6 3 9)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "8 11 49"
                }
            },
            "Step 4": {
                "Step": "7 * 7 = 49 (left: 8 11 49) -> 8 * 11 = 88 (left: 88 49)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 * 7 = 49 (left: 8 11 49) -> 8 * 11 = 88 (left: 88 49) -> 88 / 49 = 1.7959183673469388 (left: 1.7959183673469388)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 7 = 49 (left: 8 11 49) -> 8 * 11 = 88 (left: 88 49) -> 88 / 49 = 1.7959183673469388 (left: 1.7959183673469388) -> 1.7959183673469388 * 2 = 3.5918367346938776",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "33 + 2 = 35"
                }
            },
            "Step 7": {
                "Step": "7 + 7 = 14 (left: 8 14 11) -> 8 + 14 = 22 (left: 11 22) -> 11 + 22 = 33 (left: 33) -> 33 + 2 = 35 -> 33 * 2 = 66 (left: 66)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "There are no possible next steps with the input of -8."
                }
            },
            "Step 8": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 14 - 8 = 6 (left: 6 14) -> 6 - 14 = -8 (left: -8) -> There are no possible next steps with the input of -8. -> There are no possible next steps with the input of -8.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "7 + 7 = 14 (left: 8 11 14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "8 14 11"
                }
            },
            "Step 1": {
                "Step": "7 + 7 = 14 (left: 8 14 11) -> 8 * 14 = 112 (left: 11 112)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 7 = 14 (left: 8 14 11) -> 8 * 14 = 112 (left: 11 112) -> 112 - 11 = 101 (left: 11 101)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 + 7 = 14 (left: 8 14 11) -> 8 * 14 = 112 (left: 11 112) -> 112 - 11 = 101 (left: 11 101) -> 101 / 11 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "11 56"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "6 3 9"
                }
            },
            "Step 4": {
                "Step": "7 + 8 = 15 (left: 7 11 15) -> Input: 3 -> 3 * 3 = 9 -> 3 + 3 = 6 (left: 6 3 9) -> Input: 5 2 7",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 + 8 = 15 (left: 7 11 15) -> Input: 3 -> 3 * 3 = 9 -> 3 + 3 = 6 (left: 6 3 9) -> Input: 5 2 7 -> 5 * 2 = 10 (left: 10 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 8 = 15 (left: 7 11 15) -> Input: 3 -> 3 * 3 = 9 -> 3 + 3 = 6 (left: 6 3 9) -> Input: 5 2 7 -> 5 * 2 = 10 (left: 10 7) -> 10 / 7 = 1.42857142857 (left: 1.42857142857) ",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "There are no possible next steps with the input of -8."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "30 + 2 = 32"
                }
            },
            "Step 7": {
                "Step": "7 * 7 = 49 (left: 8 11 49) -> 49 - 8 = 41 (left: 11 41) -> 41 - 11 = 30 (left: 30) -> 30 + 2 = 32 -> 2 * 8 = 16 (left: 30 16 32)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 * 7 = 49 (left: 8 11 49) -> 49 - 8 = 41 (left: 11 41) -> 41 - 11 = 30 (left: 30) -> 30 + 2 = 32 -> 2 * 8 = 16 (left: 30 16 32) -> 16 * 32 = ",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "7 * 8 = 56 (left: 11 56)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "8 14 11"
                }
            },
            "Step 1": {
                "Step": "7 + 7 = 14 (left: 8 14 11) -> 14 - 8 = 6 (left: 6 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 7 = 14 (left: 8 14 11) -> 14 - 8 = 6 (left: 6 11) -> 11 - 6 = 5 (left: 5 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 + 7 = 14 (left: 8 14 11) -> 14 - 8 = 6 (left: 6 11) -> 11 - 6 = 5 (left: 5 11) -> 5 + 11 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "8 11 49"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "8 11 49"
                }
            },
            "Step 4": {
                "Step": "7 * 7 = 49 (left: 8 11 49) -> 8 + 11 = 19 (left: 19 49)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 * 7 = 49 (left: 8 11 49) -> 8 + 11 = 19 (left: 19 49) -> 19 * 49 = 931 (left: 931)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 7 = 49 (left: 8 11 49) -> 8 + 11 = 19 (left: 19 49) -> 19 * 49 = 931 (left: 931) -> 9 / 1 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "33 + 2 = 35"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "There are no possible next steps for the input 0.159."
                }
            },
            "Step 7": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 8 * 11 = 88 (left: 14 88) -> 14 / 88 = 0.159 (left: 0.159) -> There are no possible next steps for the input 0.159. -> There are no possible next steps for the input 0.159.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 8 * 11 = 88 (left: 14 88) -> 14 / 88 = 0.159 (left: 0.159) -> There are no possible next steps for the input 0.159. -> There are no possible next steps for the input 0.159. -> There are no possible next steps for the input 0.159 as it is already in its simplest form.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "7 + 7 = 14 (left: 8 11 14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "8 11 14"
                }
            },
            "Step 1": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 14 - 8 = 6 (left: 6 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 14 - 8 = 6 (left: 6 14) -> 6 - 14 = -8 (left: -8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 14 - 8 = 6 (left: 6 14) -> 6 - 14 = -8 (left: -8) -> There are no possible next steps with the input of -8.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "4 7 8"
                }
            },
            "Step 4": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 4 + 7 = 11 (left: 8 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 4 + 7 = 11 (left: 8 11) -> 8 / 11 = 0.7272727272727273 (left: 0.7272727272727273)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 4 + 7 = 11 (left: 8 11) -> 8 / 11 = 0.7272727272727273 (left: 0.7272727272727273) -> 0.7272727272727273 + 2 = 2.7272727272727275 (left: 2.7272727272727275)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "There are no possible next steps with the input of -8."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "There are no possible next steps with the input of -8."
                }
            },
            "Step 7": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 14 - 8 = 6 (left: 6 14) -> 6 - 14 = -8 (left: -8) -> There are no possible next steps with the input of -8. -> There are no possible next steps with the input of -8.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 14 - 8 = 6 (left: 6 14) -> 6 - 14 = -8 (left: -8) -> There are no possible next steps with the input of -8. -> There are no possible next steps with the input of -8. -> There are no possible next steps with the input of -8.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "8 - 7 = 1 (left: 1 7 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "8 11 14"
                }
            },
            "Step 1": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 11 + 14 = 25 (left: 8 25)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 11 + 14 = 25 (left: 8 25) -> 8 * 25 = 200 (left: 200)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 11 + 14 = 25 (left: 8 25) -> 8 * 25 = 200 (left: 200) -> 200 + 8 = 208 (left: 8)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "4 7 8"
                },
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "8 11 49"
                }
            },
            "Step 4": {
                "Step": "7 * 7 = 49 (left: 8 11 49) -> 3 + 5",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 * 7 = 49 (left: 8 11 49) -> 3 + 5 -> 5 + 3 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 7 = 49 (left: 8 11 49) -> 3 + 5 -> 5 + 3 = 8 (left: 8) -> 8 * 8 = 64 (left: 64)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "There are no possible next steps for the input 0.159."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "There are no possible next steps for the input 0.159."
                }
            },
            "Step 7": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 8 * 11 = 88 (left: 14 88) -> 14 / 88 = 0.159 (left: 0.159) -> There are no possible next steps for the input 0.159. -> There are no possible next steps for the input 0.159.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 8 * 11 = 88 (left: 14 88) -> 14 / 88 = 0.159 (left: 0.159) -> There are no possible next steps for the input 0.159. -> There are no possible next steps for the input 0.159. -> There are no possible next steps for the input 0.159 as it is not a valid input for arithmetic operations.",
                "Pruning": null
            }
        },
        "Input": "7 7 8 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "975": {
        "puzzle": "1 3 7 10",
        "Agent 0": {
            "Step 0": {
                "Step": "7 - 3 = 4 (left: 1 4 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 7 10"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 4 7 10) -> 7 / 4 = 1.75 (left: 1.75 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 3 = 4 (left: 4 7 10) -> 7 / 4 = 1.75 (left: 1.75 10) -> 10 / 1.75 = 5.71428571429 (left: 5.71428571429 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 4 7 10) -> 7 / 4 = 1.75 (left: 1.75 10) -> 10 / 1.75 = 5.71428571429 (left: 5.71428571429 10) -> 10 / 5.71428571429 = 1.75 (left: 1.75)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "1 3 10"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 4 "
                }
            },
            "Step 4": {
                "Step": "7 - 3 = 4 (left: 1 4  -> 4 - 1 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 - 3 = 4 (left: 1 4  -> 4 - 1 = 3 (left: 3) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 3 = 4 (left: 1 4  -> 4 - 1 = 3 (left: 3) -> 8 - 3 = 5 (left: 5) -> There are no more possible next steps with the input of 5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 7": {
                "Step": "7 - 3 = 4 (left: 1 4  -> 1 + 4 = 5 (left: 5) -> There are no possible next steps with only one number. -> 5 + 3 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 - 3 = 4 (left: 1 4  -> 1 + 4 = 5 (left: 5) -> There are no possible next steps with only one number. -> 5 + 3 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> 17 - 7 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "There is no possible next step, 4 is the only option."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 - 7 = 3 (left: 1 3 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 3 10"
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 10 - 1 = 9 (left: 9 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 10 - 1 = 9 (left: 9 3) -> 9 + 3 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 10 - 1 = 9 (left: 9 3) -> 9 + 3 = 12 (left: 12) -> 12 - 6 = 6 (left: 6) ",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "4 7 10"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 4 "
                }
            },
            "Step 4": {
                "Step": "7 - 3 = 4 (left: 1 4  -> 1 * 4 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 - 3 = 4 (left: 1 4  -> 1 * 4 = 4 (left: 4) -> 4 + 4 = 8",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 3 = 4 (left: 1 4  -> 1 * 4 = 4 (left: 4) -> 4 + 4 = 8 -> 4 / 4 = 1 (left: 1 4 4)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 7": {
                "Step": "7 - 3 = 4 (left: 1 4  -> 1 + 4 = 5 (left: 5) -> There are no possible next steps with only one number. -> 5 + 3 = 8 (left: 7 8 9) -> 7 * 9 = 63 (left:",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 - 3 = 4 (left: 1 4  -> 1 + 4 = 5 (left: 5) -> There are no possible next steps with only one number. -> 5 + 3 = 8 (left: 7 8 9) -> 7 * 9 = 63 (left: -> 7 / 9 = 0.7778 (left: 0.7778)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "3 9"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 7 = 3 (left: 1 3 10)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 3 10"
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 3 - 1 = 2 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 3 - 1 = 2 (left: -> 3 + 1 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 3 - 1 = 2 (left: -> 3 + 1 = 4 (left: 4) -> There are no possible next steps with just the number 4.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 4 "
                }
            },
            "Step 4": {
                "Step": "7 - 3 = 4 (left: 1 4  -> 4 / 1 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 - 3 = 4 (left: 1 4  -> 4 / 1 = 4 (left: 4) -> There is only one possible next step: 4.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 3 = 4 (left: 1 4  -> 4 / 1 = 4 (left: 4) -> There is only one possible next step: 4. -> There is no possible next step, 4 is the only option.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 7": {
                "Step": "7 - 3 = 4 (left: 1 4  -> 1 + 4 = 5 (left: 5) -> There are no possible next steps with only one number. -> 5 + 3 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 - 3 = 4 (left: 1 4  -> 1 + 4 = 5 (left: 5) -> There are no possible next steps with only one number. -> 5 + 3 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> 7 * 17 = 119 (left: 119)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "4 4"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 - 3 = 4 (left: 1 4 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 3 10"
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 3 + 1 = 4 (left: 4 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 3 + 1 = 4 (left: 4 10) -> 10 - 4 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 3 + 1 = 4 (left: 4 10) -> 10 - 4 = 6 (left: 6) -> 6 * 8 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "1 4 "
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 4 "
                }
            },
            "Step 4": {
                "Step": "7 - 3 = 4 (left: 1 4  -> 4 - 1 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 - 3 = 4 (left: 1 4  -> 4 - 1 = 3 (left: 3) -> 8 * 3 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 3 = 4 (left: 1 4  -> 4 - 1 = 3 (left: 3) -> 8 * 3 = 24 (left: 24) -> Answer: (7 - 3) * (10 - 1) = 24",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "3 9"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 7": {
                "Step": "7 - 3 = 4 (left: 1 4  -> 1 + 4 = 5 (left: 5) -> There are no possible next steps with only one number. -> 5 + 3 = 8 (left: 7 8 9) -> 7 * 8 = 56 (left: 9 56)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 - 3 = 4 (left: 1 4  -> 1 + 4 = 5 (left: 5) -> There are no possible next steps with only one number. -> 5 + 3 = 8 (left: 7 8 9) -> 7 * 8 = 56 (left: 9 56) -> 9 + 56 = 65 (left: 65)  ",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "7 8 9"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 + 7 = 10 (left: 1 10 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 3 10"
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 + 3 = 4 (left: 4 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 + 3 = 4 (left: 4 10) -> Input: 3 9",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 + 3 = 4 (left: 4 10) -> Input: 3 9 -> 9 / 3 = 3 (left: 3 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 4 "
                }
            },
            "Step 4": {
                "Step": "7 - 3 = 4 (left: 1 4  -> 4 / 1 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 - 3 = 4 (left: 1 4  -> 4 / 1 = 4 (left: 4) -> There are no possible next steps with the input of 4.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 3 = 4 (left: 1 4  -> 4 / 1 = 4 (left: 4) -> There are no possible next steps with the input of 4. -> 4 + 4 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "3 9"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 7": {
                "Step": "7 - 3 = 4 (left: 1 4  -> 1 + 4 = 5 (left: 5) -> There are no possible next steps with only one number. -> 5 + 3 = 8 (left: 7 8 9) -> 8 - 7 = 1 (left: 1 9)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 - 3 = 4 (left: 1 4  -> 1 + 4 = 5 (left: 5) -> There are no possible next steps with only one number. -> 5 + 3 = 8 (left: 7 8 9) -> 8 - 7 = 1 (left: 1 9) -> 9 - 1 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "3 9"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "10 - 7 = 3 (left: 1 3 3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 3 10"
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 3 / 1 = 3 (left: 3 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 3 / 1 = 3 (left: 3 10) -> 10 / 3 = 3.33 (left: 3.33)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 3 / 1 = 3 (left: 3 10) -> 10 / 3 = 3.33 (left: 3.33) -> 3.33 / 2 = 1.665",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 4 "
                }
            },
            "Step 4": {
                "Step": "7 - 3 = 4 (left: 1 4  -> 1 + 4 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 - 3 = 4 (left: 1 4  -> 1 + 4 = 5 (left: 5) -> 8 - 5 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 3 = 4 (left: 1 4  -> 1 + 4 = 5 (left: 5) -> 8 - 5 = 3 (left: 3) -> 3 / 8 = 0.375 (left: 0.375)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "There are no possible next steps for the input 2.5."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 7": {
                "Step": "7 - 3 = 4 (left: 1 4  -> 1 + 4 = 5 (left: 5) -> There are no possible next steps with only one number. -> 5 + 3 = 8 (left: 7 8 9) -> 8 - 7 = 1 (left: 1 9)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 - 3 = 4 (left: 1 4  -> 1 + 4 = 5 (left: 5) -> There are no possible next steps with only one number. -> 5 + 3 = 8 (left: 7 8 9) -> 8 - 7 = 1 (left: 1 9) -> 9 / 1 = 9 (left: 9 9)",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 4 7 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 3 10"
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 10 - 3 = 7 (left: 1 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 10 - 3 = 7 (left: 1 7) -> 1 + 7 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 10 - 3 = 7 (left: 1 7) -> 1 + 7 = 8 (left: 8) -> 8 - 8 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "4 7 10"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 4 "
                }
            },
            "Step 4": {
                "Step": "7 - 3 = 4 (left: 1 4  -> 4 - 1 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 - 3 = 4 (left: 1 4  -> 4 - 1 = 3 (left: 3) -> 3 * 3 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 3 = 4 (left: 1 4  -> 4 - 1 = 3 (left: 3) -> 3 * 3 = 9 (left: 9) -> 9 / 8 = 1.125 (left: 1.125)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "There are no possible next steps for the input 2.5."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 7": {
                "Step": "7 - 3 = 4 (left: 1 4  -> 1 + 4 = 5 (left: 5) -> There are no possible next steps with only one number. -> 5 + 3 = 8 (left: 7 8 9) -> 7 * 8 = 56 (left: 9 56)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 - 3 = 4 (left: 1 4  -> 1 + 4 = 5 (left: 5) -> There are no possible next steps with only one number. -> 5 + 3 = 8 (left: 7 8 9) -> 7 * 8 = 56 (left: 9 56) -> 9 + 56 = 65 (left: 65)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "There is no possible next step, 4 is the only option."
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "1 * 3 = 3 (left: 3 7 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 3 10"
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 10 / 3 = 3.3333333333333335 (left: 1 3.333333333",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 10 / 3 = 3.3333333333333335 (left: 1 3.333333333 -> 3.333333333 - 1 = 2",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 10 / 3 = 3.3333333333333335 (left: 1 3.333333333 -> 3.333333333 - 1 = 2 -> 3.333333333 + 1 = 4.333333333 (left: 1 4.333333333)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 4 "
                }
            },
            "Step 4": {
                "Step": "7 - 3 = 4 (left: 1 4  -> 1 * 4 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 - 3 = 4 (left: 1 4  -> 1 * 4 = 4 (left: 4) -> 4 + 4 = 8",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 3 = 4 (left: 1 4  -> 1 * 4 = 4 (left: 4) -> 4 + 4 = 8 -> 8 - 4 = 4 (left: 4 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 7": {
                "Step": "7 - 3 = 4 (left: 1 4  -> 1 + 4 = 5 (left: 5) -> There are no possible next steps with only one number. -> 5 + 3 = 8 (left: 7 8 9) -> 7 * 8 = 56 (left: 9 56)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 - 3 = 4 (left: 1 4  -> 1 + 4 = 5 (left: 5) -> There are no possible next steps with only one number. -> 5 + 3 = 8 (left: 7 8 9) -> 7 * 8 = 56 (left: 9 56) -> 9 + 56 = 65 (left: 65)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "There are no possible next steps for the input 2.5."
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "3 + 7 = 10 (left: 1 10 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 3 10"
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 + 3 = 4 (left: 4 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 + 3 = 4 (left: 4 10) -> 10 / 4 = 2.5 (left: 2.5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 + 3 = 4 (left: 4 10) -> 10 / 4 = 2.5 (left: 2.5) -> There are no possible next steps for the input 2.5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 4 "
                }
            },
            "Step 4": {
                "Step": "7 - 3 = 4 (left: 1 4  -> 1 + 4 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 - 3 = 4 (left: 1 4  -> 1 + 4 = 5 (left: 5) -> There are no possible next steps with only one number.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 3 = 4 (left: 1 4  -> 1 + 4 = 5 (left: 5) -> There are no possible next steps with only one number. -> 5 + 3 = 8 (left: 7 8 9)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 7": {
                "Step": "7 - 3 = 4 (left: 1 4  -> 1 + 4 = 5 (left: 5) -> There are no possible next steps with only one number. -> 5 + 3 = 8 (left: 7 8 9) -> 7 - 8 = -1 (left: -1 9)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 - 3 = 4 (left: 1 4  -> 1 + 4 = 5 (left: 5) -> There are no possible next steps with only one number. -> 5 + 3 = 8 (left: 7 8 9) -> 7 - 8 = -1 (left: -1 9) -> Possible next steps:",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "10 - 7 = 3 (left: 1 3 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 3 10"
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 3 - 1 = 2 (left: 2 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 3 - 1 = 2 (left: 2 10) -> 10 - 2 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 3 - 1 = 2 (left: 2 10) -> 10 - 2 = 8 (left: 8) -> 8 + 8 = 16 (left: 16) ",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "1 3 3"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 4 "
                }
            },
            "Step 4": {
                "Step": "7 - 3 = 4 (left: 1 4  -> 1 + 4 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 - 3 = 4 (left: 1 4  -> 1 + 4 = 5 (left: 5) -> There are no possible next steps with just the number 5.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 3 = 4 (left: 1 4  -> 1 + 4 = 5 (left: 5) -> There are no possible next steps with just the number 5. -> There are no possible next steps with just the number 5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 7": {
                "Step": "7 - 3 = 4 (left: 1 4  -> 1 + 4 = 5 (left: 5) -> There are no possible next steps with only one number. -> 5 + 3 = 8 (left: 7 8 9) -> 9 - 7 = 2 (left: 2 8)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 - 3 = 4 (left: 1 4  -> 1 + 4 = 5 (left: 5) -> There are no possible next steps with only one number. -> 5 + 3 = 8 (left: 7 8 9) -> 9 - 7 = 2 (left: 2 8) -> 8 - 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "3 9"
                }
            }
        },
        "Input": "1 3 7 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "976": {
        "puzzle": "3 3 9 12",
        "Agent 0": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 9 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 1": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12) -> 12 - 4 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12) -> 12 - 4 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "4 * 3 = 12 (left:"
                }
            },
            "Step 4": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 3 * 12 = 36 (left: 12 36) -> 12 * 36 = 432 (left: 432) -> 4 * 3 = 12 (left: -> 4 / 3 = 1.3333 (left: 1.3333)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "9 9 12"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 * 9 = 81 (left: 81 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 * 9 = 81 (left: 81 12) -> 81 - 12 = 69 (left: 69)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "9 3"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 12 - 9 = 3 (left: 9 3) -> 9 + 3 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 12 - 9 = 3 (left: 9 3) -> 9 + 3 = 12 (left: 12) -> 12 - 8 = 4 (left: 4 8)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 + 3 = 12 (left: 3 12 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 1": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 - 3 = 9 (left: 3 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 - 3 = 9 (left: 3 9) -> 9 / 3 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 - 3 = 9 (left: 3 9) -> 9 / 3 = 3 (left: 3) -> 3 / 2 is not a valid operation.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "4 * 3 = 12 (left:"
                }
            },
            "Step 4": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 3 * 12 = 36 (left: 12 36) -> 12 * 36 = 432 (left: 432) -> 4 * 3 = 12 (left: -> Possible next steps:",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 3 * 12 = 36 (left: 12 36) -> 12 * 36 = 432 (left: 432) -> 4 * 3 = 12 (left: -> Possible next steps: -> There are no possible next steps given the input.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 3 * 12 = 36 (left: 12 36) -> 12 * 36 = 432 (left: 432) -> 4 * 3 = 12 (left: -> Possible next steps: -> There are no possible next steps given the input. -> There are no possible next steps given the input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "9 3"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 12 - 9 = 3 (left: 9 3) -> 9 * 3 = 27 (left: 27)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 12 - 9 = 3 (left: 9 3) -> 9 * 3 = 27 (left: 27) -> There are no possible next steps for the number 27 as it is a single number and cannot be combined with any of the other numbers given.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 9 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 1": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 3 + 12 = 15 (left: 12 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 3 + 12 = 15 (left: 12 15) -> 12 - 15 = -3 (left: -3)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 3 + 12 = 15 (left: 12 15) -> 12 - 15 = -3 (left: -3) -> There are no possible next steps with the input of -3.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "4 * 3 = 12 (left:"
                }
            },
            "Step 4": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 3 * 12 = 36 (left: 12 36) -> 12 * 36 = 432 (left: 432) -> 4 * 3 = 12 (left: -> Input: 5 6 7 8",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 3 * 12 = 36 (left: 12 36) -> 12 * 36 = 432 (left: 432) -> 4 * 3 = 12 (left: -> Input: 5 6 7 8 -> 7 + 8 = 15 (left: ",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "9 9 12"
                }
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 12 - 9 = 3 (left: 9 3)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "9 3"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 12 - 9 = 3 (left: 9 3) -> 9 - 3 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 12 - 9 = 3 (left: 9 3) -> 9 - 3 = 6 (left: 6) -> 8 - 6 = 2 (left: 2 8)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 3 = 6 (left: 3 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 1": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12) -> 4 * 12 = 48 (left: 48)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12) -> 4 * 12 = 48 (left: 48) -> There are no possible next steps with the input 48.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "4 * 3 = 12 (left:"
                }
            },
            "Step 4": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 3 * 12 = 36 (left: 12 36) -> 12 * 36 = 432 (left: 432) -> 4 * 3 = 12 (left: -> 4 - 3 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "9 9 12"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 12 - 9 = 3 (left: 9 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 12 - 9 = 3 (left: 9 3) -> 9 + 3 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "9 3"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 12 - 9 = 3 (left: 9 3) -> 9 * 3 = 27 (left: 27)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 12 - 9 = 3 (left: 9 3) -> 9 * 3 = 27 (left: 27) -> 27 + 8 = 35 (left: 8 35)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "9 + 3 = 12 (left: 3 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 1": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 - 3 = 9 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 - 3 = 9 (left: -> 12 - 3 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 - 3 = 9 (left: -> 12 - 3 = 9 (left: 9) -> There are no possible next steps with the input of 9.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "4 * 3 = 12 (left:"
                }
            },
            "Step 4": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 3 * 12 = 36 (left: 12 36) -> 12 * 36 = 432 (left: 432) -> 4 * 3 = 12 (left: -> 4 / 3 = 1.33 (left: 1.33)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "9 9 12"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 + 9 = 18 (left: 18 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 + 9 = 18 (left: 18 12) -> 18 / 12 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "9 3"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 12 - 9 = 3 (left: 9 3) -> 9 + 3 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 12 - 9 = 3 (left: 9 3) -> 9 + 3 = 12 (left: 12) -> 12 - 8 = 4 (left: 4 8)",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 3 9 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 1": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 3 * 12 = 36 (left: 12 36)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 3 * 12 = 36 (left: 12 36) -> 12 - 36 = -24 (left: -24)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 3 * 12 = 36 (left: 12 36) -> 12 - 36 = -24 (left: -24) -> There are no possible next steps with the input of -24.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "4 * 3 = 12 (left:"
                }
            },
            "Step 4": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 3 * 12 = 36 (left: 12 36) -> 12 * 36 = 432 (left: 432) -> 4 * 3 = 12 (left: -> 5 + 2 = 7 (left: 3 7)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 3 * 12 = 36 (left: 12 36) -> 12 * 36 = 432 (left: 432) -> 4 * 3 = 12 (left: -> 5 + 2 = 7 (left: 3 7) -> 7 - 3 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "3 / 2 is not a valid operation."
                }
            },
            "Step 6": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 - 3 = 9 (left: 3 9) -> 9 / 3 = 3 (left: 3) -> 3 / 2 is not a valid operation. -> 3 + 2 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "4 * 3 = 12 (left:"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "9 3"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 12 - 9 = 3 (left: 9 3) -> 9 * 3 = 27 (left: 27)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 12 - 9 = 3 (left: 9 3) -> 9 * 3 = 27 (left: 27) -> There is only one possible operation to be done with the number 27:",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 9 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 1": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 3 * 12 = 36 (left: 12 36)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 3 * 12 = 36 (left: 12 36) -> 12 * 36 = 432 (left: 432)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 3 * 12 = 36 (left: 12 36) -> 12 * 36 = 432 (left: 432) -> 4 * 3 = 12 (left:",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "4 * 3 = 12 (left:"
                }
            },
            "Step 4": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 3 * 12 = 36 (left: 12 36) -> 12 * 36 = 432 (left: 432) -> 4 * 3 = 12 (left: -> 4 + 3 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "3 / 2 is not a valid operation."
                }
            },
            "Step 5": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 - 3 = 9 (left: 3 9) -> 9 / 3 = 3 (left: 3) -> 3 / 2 is not a valid operation. -> 3 / 2 is not a valid operation.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 - 3 = 9 (left: 3 9) -> 9 / 3 = 3 (left: 3) -> 3 / 2 is not a valid operation. -> 3 / 2 is not a valid operation. -> 3 / 2 is not a valid operation.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "9 3"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 12 - 9 = 3 (left: 9 3) -> 9 / 3 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 12 - 9 = 3 (left: 9 3) -> 9 / 3 = 3 (left: 3) -> There are no possible next steps as there is only one number.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 1": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 3 + 12 = 15 (left: 12 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 3 + 12 = 15 (left: 12 15) -> 12 - 15 = -3 (left: -3)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 3 + 12 = 15 (left: 12 15) -> 12 - 15 = -3 (left: -3) -> There are no possible next steps with the input of -3.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "4 * 3 = 12 (left:"
                }
            },
            "Step 4": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 3 * 12 = 36 (left: 12 36) -> 12 * 36 = 432 (left: 432) -> 4 * 3 = 12 (left: -> 4 - 3 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "4 * 3 = 12 (left:"
                }
            },
            "Step 5": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 3 * 12 = 36 (left: 12 36) -> 12 * 36 = 432 (left: 432) -> 4 * 3 = 12 (left: -> 3 / 4 = 0.75 (left: 0.75)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "There are no possible next steps with the input of -3."
                }
            },
            "Step 6": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 - 3 = 9 (left: 9 12) -> 9 - 12 = -3 (left: -3) -> There are no possible next steps with the input of -3. -> Invalid input. Please enter a valid list of numbers.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "9 3"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 12 - 9 = 3 (left: 9 3) -> 9 - 3 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 12 - 9 = 3 (left: 9 3) -> 9 - 3 = 6 (left: 6) -> 6 + 8 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "4 * 3 = 12 (left:"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "9 * 3 = 27 (left: 3 12 27)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 1": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 - 3 = 9 (left: 9 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 - 3 = 9 (left: 9 12) -> 9 - 12 = -3 (left: -3)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 - 3 = 9 (left: 9 12) -> 9 - 12 = -3 (left: -3) -> There are no possible next steps with the input of -3.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "4 * 3 = 12 (left:"
                }
            },
            "Step 4": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 3 * 12 = 36 (left: 12 36) -> 12 * 36 = 432 (left: 432) -> 4 * 3 = 12 (left: -> 4 / 3 = 1.33 (left: 1.33)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "3 12 27"
                }
            },
            "Step 5": {
                "Step": "9 * 3 = 27 (left: 3 12 27) -> 12 / 3 = 4 (left: 4 27)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 * 3 = 27 (left: 3 12 27) -> 12 / 3 = 4 (left: 4 27) -> 27 - 4 = 23 (left: 23)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "9 3"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 12 - 9 = 3 (left: 9 3) -> 9 * 3 = 27 (left: 27)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 12 - 9 = 3 (left: 9 3) -> 9 * 3 = 27 (left: 27) -> There are no possible next steps with only one number provided.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "9 + 3 = 12 (left: 3 12 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 1": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 - 3 = 9 (left: 9 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 - 3 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 - 3 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21) -> 21 + 8 = 29 (left: 8)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "9 9 12"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "4 * 3 = 12 (left:"
                }
            },
            "Step 4": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 3 * 12 = 36 (left: 12 36) -> 12 * 36 = 432 (left: 432) -> 4 * 3 = 12 (left: -> 3 + 4 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "9 9 12"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 * 9 = 81 (left: 12 81)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 * 9 = 81 (left: 12 81) -> 81 / 12 = 6.75 (left: 6.75)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "9 3"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 12 - 9 = 3 (left: 9 3) -> Possible next steps:",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 12 - 9 = 3 (left: 9 3) -> Possible next steps: -> There are no possible next steps as the expression has already been fully evaluated.",
                "Pruning": null
            }
        },
        "Input": "3 3 9 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "977": {
        "puzzle": "3 5 7 10",
        "Agent 0": {
            "Step 0": {
                "Step": "5 * 7 = 35 (left: 3 10 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 1": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 / 7 = 1.1428571428571428 (left: 1.1428571428571428 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 / 7 = 1.1428571428571428 (left: 1.1428571428571428 10) -> 10 - 1.1428571428571428 = 8.857142857142857 (left: 8.857142857142857)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 / 7 = 1.1428571428571428 (left: 1.1428571428571428 10) -> 10 - 1.1428571428571428 = 8.857142857142857 (left: 8.857142857142857) -> 8.857142857142857 / 8 = 1.107142857142857",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 4": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 8 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 8 10) -> 1 + 8 = 9 (left: 9 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 8 10) -> 1 + 8 = 9 (left: 9 10) -> 9 * 10 = 90 (left: 90)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "There is only one possible next step:"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "There is only one possible next step:"
                }
            },
            "Step 7": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 8 = 2 (left: 2 8) -> 8 / 2 = 4 (left: 4) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 8 = 2 (left: 2 8) -> 8 / 2 = 4 (left: 4) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16) -> 2 * 16 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "66 + 2 = 68"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 - 3 = 4 (left: 4 5 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 1": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 7 * 8 = 56 (left: 10 56)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 7 * 8 = 56 (left: 10 56) -> 10 + 56 = 66 (left: 66)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 7 * 8 = 56 (left: 10 56) -> 10 + 56 = 66 (left: 66) -> 66 + 2 = 68",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "4 5 10"
                }
            },
            "Step 4": {
                "Step": "7 - 3 = 4 (left: 4 5 10) -> 4 + 5 = 9 (left: 9 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 - 3 = 4 (left: 4 5 10) -> 4 + 5 = 9 (left: 9 10) -> 9 + 10 = 19 (left: 19)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 3 = 4 (left: 4 5 10) -> 4 + 5 = 9 (left: 9 10) -> 9 + 10 = 19 (left: 19) -> 19 - 2 = 17 (left: 17)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "8.857142857142857 / 8 = 1.107142857142857"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps with the input of -46."
                }
            },
            "Step 7": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 7 * 8 = 56 (left: 10 56) -> 10 - 56 = -46 (left: -46) -> There are no possible next steps with the input of -46. -> There are no possible next steps with the input of -46.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 7 * 8 = 56 (left: 10 56) -> 10 - 56 = -46 (left: -46) -> There are no possible next steps with the input of -46. -> There are no possible next steps with the input of -46. -> There are no possible next steps with the input of -46.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 * 7 = 35 (left: 3 10 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 1": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 / 7 = 1.14 (left: 1.14 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 / 7 = 1.14 (left: 1.14 10) -> 10 - 1.14 = 8.86 (left: 8.86)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 / 7 = 1.14 (left: 1.14 10) -> 10 - 1.14 = 8.86 (left: 8.86) -> There are no possible next steps as the input is not in the correct format for mathematical operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 4": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 7 * 8 = 56 (left: 10 56)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 7 * 8 = 56 (left: 10 56) -> 10 - 56 = -46 (left: -46)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 7 * 8 = 56 (left: 10 56) -> 10 - 56 = -46 (left: -46) -> There are no possible next steps with the input of -46.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "There are no possible next steps with the input \"11.44\" as it is a single number and not a set of numbers with operations."
                }
            },
            "Step 7": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 / 7 = 1.43 (left: 8 1.43) -> 8 * 1.43 = 11.44 (left: 11.44) -> There are no possible next steps with the input \"11.44\" as it is a single number and not a set of numbers with operations. -> There are no possible next steps with the input \"11.44\" as it is a single number and not a set of numbers with operations.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 / 7 = 1.43 (left: 8 1.43) -> 8 * 1.43 = 11.44 (left: 11.44) -> There are no possible next steps with the input \"11.44\" as it is a single number and not a set of numbers with operations. -> There are no possible next steps with the input \"11.44\" as it is a single number and not a set of numbers with operations. -> There are no possible next steps with the input \"11.44\" as it is a single number and not a set of numbers with operations.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "3 + 5 = 8 (left: 7 8 10)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 1": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 7 + 8 = 15 (left: 10 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 7 + 8 = 15 (left: 10 15) -> Input: 25 30 ",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 7 + 8 = 15 (left: 10 15) -> Input: 25 30  -> 25 - 30 = -5 (left: -5 30)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 4": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10) -> 10 - 8 = 2 (left: 8)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "There is only one possible next step:"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There is only one possible next step:"
                }
            },
            "Step 7": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 8 = 2 (left: 2 8) -> 8 / 2 = 4 (left: 4) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 8 = 2 (left: 2 8) -> 8 / 2 = 4 (left: 4) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16) -> Input: 8 8",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 + 5 = 8 (left: 7 8 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 1": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 8 = 2 (left: 2 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 8 = 2 (left: 2 8) -> 8 / 2 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 8 = 2 (left: 2 8) -> 8 / 2 = 4 (left: 4) -> There is only one possible next step:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 4": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5) -> There are no possible next steps with just the number 5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "8.857142857142857 / 8 = 1.107142857142857"
                }
            },
            "Step 7": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 / 7 = 1.1428571428571428 (left: 1.1428571428571428 10) -> 10 - 1.1428571428571428 = 8.857142857142857 (left: 8.857142857142857) -> 8.857142857142857 / 8 = 1.107142857142857 -> 8.857142857142857 - 8 = 0.857142857142857 (left: 0.857142857142857 8 1.107142857142857)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 / 7 = 1.1428571428571428 (left: 1.1428571428571428 10) -> 10 - 1.1428571428571428 = 8.857142857142857 (left: 8.857142857142857) -> 8.857142857142857 / 8 = 1.107142857142857 -> 8.857142857142857 - 8 = 0.857142857142857 (left: 0.857142857142857 8 1.107142857142857) -> 8 - ",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "3 + 5 = 8 (left: 7 8 10)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 1": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 / 7 = 1.14 (left: 1.14 8 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 / 7 = 1.14 (left: 1.14 8 10) -> 1.14 + 8 = 9.14 (left: 9.14 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 / 7 = 1.14 (left: 1.14 8 10) -> 1.14 + 8 = 9.14 (left: 9.14 10) -> 9.14 / 10 = 0.914 (left: 0.914)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "4 5 10"
                },
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "4 5 10"
                }
            },
            "Step 4": {
                "Step": "7 - 3 = 4 (left: 4 5 10) -> 4 + 5 = 9 (left: 9 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 - 3 = 4 (left: 4 5 10) -> 4 + 5 = 9 (left: 9 10) -> 9 + 10 = 19 (left: 19)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 3 = 4 (left: 4 5 10) -> 4 + 5 = 9 (left: 9 10) -> 9 + 10 = 19 (left: 19) -> 19 - 2 = 17",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps with the input of -46."
                }
            },
            "Step 7": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 7 * 8 = 56 (left: 10 56) -> 10 - 56 = -46 (left: -46) -> There are no possible next steps with the input of -46. -> There are no possible next steps with the input of -46.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 7 * 8 = 56 (left: 10 56) -> 10 - 56 = -46 (left: -46) -> There are no possible next steps with the input of -46. -> There are no possible next steps with the input of -46. -> There are no possible next steps with the input of -46.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "3 * 5 = 15 (left: 7 10 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 1": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11) -> There are no possible next steps with the input 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "4 5 10"
                }
            },
            "Step 4": {
                "Step": "7 - 3 = 4 (left: 4 5 10) -> 5 - 4 = 1 (left: 1 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 - 3 = 4 (left: 4 5 10) -> 5 - 4 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 3 = 4 (left: 4 5 10) -> 5 - 4 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11) -> There are no possible next steps with the input 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "There are no possible next steps with the input 11."
                }
            },
            "Step 7": {
                "Step": "7 - 3 = 4 (left: 4 5 10) -> 5 - 4 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11) -> There are no possible next steps with the input 11. -> There are no possible next steps with the input 11.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 - 3 = 4 (left: 4 5 10) -> 5 - 4 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11) -> There are no possible next steps with the input 11. -> There are no possible next steps with the input 11. -> There are no possible next steps with the input 11.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "7 + 5 = 12 (left: 3 10 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 1": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 / 7 = 1.1428571428571428 (left: 1.1428571428571428 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 / 7 = 1.1428571428571428 (left: 1.1428571428571428 10) -> 1.1428571428571428 + 10 = 11.142857142857142 (left: 11.142857142857142)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 / 7 = 1.1428571428571428 (left: 1.1428571428571428 10) -> 1.1428571428571428 + 10 = 11.142857142857142 (left: 11.142857142857142) -> 11.142857142857142 + 2 = 13.142857142857142 (left: 13.142857142857142)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "3 10 12"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 4": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 / 7 = 1.43 (left: 8 1.43)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 / 7 = 1.43 (left: 8 1.43) -> 8 * 1.43 = 11.44 (left: 11.44)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 / 7 = 1.43 (left: 8 1.43) -> 8 * 1.43 = 11.44 (left: 11.44) -> There are no possible next steps with the input \"11.44\" as it is a single number and not a set of numbers with operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There is only one possible next step:"
                }
            },
            "Step 7": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 8 = 2 (left: 2 8) -> 8 / 2 = 4 (left: 4) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 8 = 2 (left: 2 8) -> 8 / 2 = 4 (left: 4) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16) -> Input: 18 8 14 32 14",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "3 + 5 = 8 (left: 7 8 10)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 1": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 7 * 8 = 56 (left: 10 56)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 7 * 8 = 56 (left: 10 56) -> 56 / 10 = 5.6 (left: 5.6)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 7 * 8 = 56 (left: 10 56) -> 56 / 10 = 5.6 (left: 5.6) -> 5.6 + 2 = 7.6 (left: 7.6)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "7 10 15"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "4 5 10"
                }
            },
            "Step 4": {
                "Step": "7 - 3 = 4 (left: 4 5 10) -> Input: 3 6",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 - 3 = 4 (left: 4 5 10) -> Input: 3 6 -> 6 / 3 = 2 (left: 2 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 3 = 4 (left: 4 5 10) -> Input: 3 6 -> 6 / 3 = 2 (left: 2 6) -> 8 * 12 = 96",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "There are no possible next steps with just the number 5."
                }
            },
            "Step 7": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5) -> There are no possible next steps with just the number 5. -> There are no possible next steps with just the number 5.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5) -> There are no possible next steps with just the number 5. -> There are no possible next steps with just the number 5. -> 5 + 5 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "8.857142857142857 / 8 = 1.107142857142857"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "3 + 5 = 8 (left: 7 8 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 1": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 8) -> 8 / 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "7 8 10"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "4 5 10"
                }
            },
            "Step 4": {
                "Step": "7 - 3 = 4 (left: 4 5 10) -> 4 * 5 = 20 (left: 20 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 - 3 = 4 (left: 4 5 10) -> 4 * 5 = 20 (left: 20 10) -> 20 + 10 = 30 (left: 30)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 3 = 4 (left: 4 5 10) -> 4 * 5 = 20 (left: 20 10) -> 20 + 10 = 30 (left: 30) -> 30 / 8 = 3.75 (left: 8)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "8.857142857142857 / 8 = 1.107142857142857"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "8.857142857142857 / 8 = 1.107142857142857"
                }
            },
            "Step 7": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 / 7 = 1.1428571428571428 (left: 1.1428571428571428 10) -> 10 - 1.1428571428571428 = 8.857142857142857 (left: 8.857142857142857) -> 8.857142857142857 / 8 = 1.107142857142857 -> 8.857142857142857 - 8 = 0.8571428571428571",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 / 7 = 1.1428571428571428 (left: 1.1428571428571428 10) -> 10 - 1.1428571428571428 = 8.857142857142857 (left: 8.857142857142857) -> 8.857142857142857 / 8 = 1.107142857142857 -> 8.857142857142857 - 8 = 0.8571428571428571 -> 8.857142857142857 * 8 = 70.85714285714285 (left: 0.8571428571428571 70.85714285714285)",
                "Pruning": null
            }
        },
        "Input": "3 5 7 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "978": {
        "puzzle": "4 10 12 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 12 = 1 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "10 12 9"
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left: 10 12 9) -> 12 + 9 = 21 (left: 10 21)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 10 12 9) -> 12 + 9 = 21 (left: 10 21) -> 10 - 21 = -11 (left: -11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 10 12 9) -> 12 + 9 = 21 (left: 10 21) -> 10 - 21 = -11 (left: -11) -> -11 / 2 = -5.5 (left: -5.5)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "6 12 13"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "9.5 19"
                }
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 12 - 6 = 6 (left: 6 13) -> 6 + 13 = 19 (left: 19) -> 19 / 2 = 9.5 (left: 9.5 19) -> 19 - 9.5 = 9.5 (left: 9.5 9.5)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 12 - 6 = 6 (left: 6 13) -> 6 + 13 = 19 (left: 19) -> 19 / 2 = 9.5 (left: 9.5 19) -> 19 - 9.5 = 9.5 (left: 9.5 9.5) -> 9.5 / 9.5 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "1.36842105263 * 2 = 2.73684210526"
                }
            },
            "Step 6": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 12 - 2.5 = 9.5 (left: 9.5 13) -> 13 / 9.5 = 1.36842105263 (left: 1.36842105263) -> 1.36842105263 * 2 = 2.73684210526 -> 2.73684210526 + 2 = 4.73684210526 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "3 12"
                }
            },
            "Step 7": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 12 - 6 = 6 (left: 6 13) -> 6 + 13 = 19 (left: 19) -> 19 / 2 = 9.5 (left: 9.5 19) -> 19 - 9.5 = 9.5 (left: 9.5 19) -> Input: 3 5 7 -> 5 + 7 = 12 (left: 3 12) -> 12 / 3 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "6240"
                }
            },
            "Step 8": {
                "Step": "4 * 10 = 40 (left: 12 13 40) -> 12 * 13 = 156 (left: 156 40) -> 156 * 40 = 6240 (left: 6240) -> 6 * 2 = 12 (left: 12 4 0)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 10 = 40 (left: 12 13 40)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "10 16 13"
                }
            },
            "Step 1": {
                "Step": "12 + 4 = 16 (left: 10 16 13) -> 16 / 10 = 1.6 (left: 1.6 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 + 4 = 16 (left: 10 16 13) -> 16 / 10 = 1.6 (left: 1.6 13) -> 1.6 + 13 = 14.6 (left: 14.6)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 + 4 = 16 (left: 10 16 13) -> 16 / 10 = 1.6 (left: 1.6 13) -> 1.6 + 13 = 14.6 (left: 14.6) -> There are no possible next steps as there is only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "9.5 19"
                }
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 12 - 6 = 6 (left: 6 13) -> 6 + 13 = 19 (left: 19) -> 19 / 2 = 9.5 (left: 9.5 19) -> 9.5 / 19 = 0.5 (left: 0.5)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "12 13 40"
                }
            },
            "Step 5": {
                "Step": "4 * 10 = 40 (left: 12 13 40) -> 12 * 13 = 156 (left: 156 40)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 10 = 40 (left: 12 13 40) -> 12 * 13 = 156 (left: 156 40) -> 156 * 40 = 6240 (left: 6240)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "3 12"
                }
            },
            "Step 7": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 12 - 6 = 6 (left: 6 13) -> 6 + 13 = 19 (left: 19) -> 19 / 2 = 9.5 (left: 9.5 19) -> 19 - 9.5 = 9.5 (left: 9.5 19) -> Input: 3 5 7 -> 5 + 7 = 12 (left: 3 12) -> 3 * 12 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "It seems like you haven't entered any numbers for me to generate possible next steps. Please enter a set of numbers for me to work with."
                }
            },
            "Step 8": {
                "Step": "13 - 4 = 9 (left: 10 12 9) ->  -> It seems like you did not provide an input for me to work with. Please enter a set of numbers for me to generate possible next steps. -> Please enter a set of numbers for me to generate possible next steps. -> It seems like you haven't entered any numbers for me to generate possible next steps. Please enter a set of numbers for me to work with. -> It seems like you haven't entered any numbers for me to generate possible next steps. Please enter a set of numbers for me to work with. -> It seems like you haven't entered any numbers for me to generate possible next steps. Please enter a set of numbers for me to work with.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "2.5 12 13"
                }
            },
            "Step 1": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 12 - 2.5 = 9.5 (left: 9.5 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 12 - 2.5 = 9.5 (left: 9.5 13) -> 13 / 9.5 = 1.36842105263 (left: 1.36842105263)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 12 - 2.5 = 9.5 (left: 9.5 13) -> 13 / 9.5 = 1.36842105263 (left: 1.36842105263) -> 1.36842105263 * 2 = 2.73684210526",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "9.5 19"
                }
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 12 - 6 = 6 (left: 6 13) -> 6 + 13 = 19 (left: 19) -> 19 / 2 = 9.5 (left: 9.5 19) -> 19 / 9.5 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "10 12 9"
                }
            },
            "Step 5": {
                "Step": "13 - 4 = 9 (left: 10 12 9) -> 12 - 10 = 2 (left: 2 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 4 = 9 (left: 10 12 9) -> 12 - 10 = 2 (left: 2 9) -> 2 + 9 = 11 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "3 12"
                }
            },
            "Step 7": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 12 - 6 = 6 (left: 6 13) -> 6 + 13 = 19 (left: 19) -> 19 / 2 = 9.5 (left: 9.5 19) -> 19 - 9.5 = 9.5 (left: 9.5 19) -> Input: 3 5 7 -> 5 + 7 = 12 (left: 3 12) -> 3 / 12 = 0.25 (left: 0.25 12)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 12 - 6 = 6 (left: 6 13) -> 6 + 13 = 19 (left: 19) -> 19 / 2 = 9.5 (left: 9.5 19) -> 19 - 9.5 = 9.5 (left: 9.5 19) -> Input: 3 5 7 -> 5 + 7 = 12 (left: 3 12) -> 3 / 12 = 0.25 (left: 0.25 12) -> 12 / 0.25 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "9.5 19"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 12 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 12 13"
                }
            },
            "Step 1": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 13 - 6 = 7 (left: 6 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 13 - 6 = 7 (left: 6 7) -> 7 / 6 = 1.1666666666666667 (left: 1.1666666666666667)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 13 - 6 = 7 (left: 6 7) -> 7 / 6 = 1.1666666666666667 (left: 1.1666666666666667) -> There are no possible next steps for the input 1.1666666666666667.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "9.5 19"
                }
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 12 - 6 = 6 (left: 6 13) -> 6 + 13 = 19 (left: 19) -> 19 / 2 = 9.5 (left: 9.5 19) -> 9.5 + 19 = 28.5 (left: 28.5)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "12 13 40"
                }
            },
            "Step 5": {
                "Step": "4 * 10 = 40 (left: 12 13 40) -> 12 * 13 = 156 (left: 156 40)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 10 = 40 (left: 12 13 40) -> 12 * 13 = 156 (left: 156 40) -> 10 * 5 =",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "3 12"
                }
            },
            "Step 7": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 12 - 6 = 6 (left: 6 13) -> 6 + 13 = 19 (left: 19) -> 19 / 2 = 9.5 (left: 9.5 19) -> 19 - 9.5 = 9.5 (left: 9.5 19) -> Input: 3 5 7 -> 5 + 7 = 12 (left: 3 12) -> 3 + 12 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "Please enter a set of numbers for me to generate possible next steps."
                }
            },
            "Step 8": {
                "Step": "13 - 4 = 9 (left: 10 12 9) ->  -> It seems like you did not provide an input for me to work with. Please enter a set of numbers for me to generate possible next steps. -> Please enter a set of numbers for me to generate possible next steps. -> I'm sorry, I cannot generate possible next steps without a set of numbers. Please enter a set of numbers for me to work with.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 12 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "2.5 12 13"
                }
            },
            "Step 1": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 13 - 2.5 = 10.5 (left: 10.5 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 13 - 2.5 = 10.5 (left: 10.5 12) -> 10.5 * 12 = 126 (left: 126)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 13 - 2.5 = 10.5 (left: 10.5 12) -> 10.5 * 12 = 126 (left: 126) -> 1 + 2 + 6 = 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "9.5 19"
                }
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 12 - 6 = 6 (left: 6 13) -> 6 + 13 = 19 (left: 19) -> 19 / 2 = 9.5 (left: 9.5 19) -> 9.5 * 19 = 180.5 (left: 180.5)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "Please enter a set of numbers for me to generate possible next steps."
                }
            },
            "Step 5": {
                "Step": "13 - 4 = 9 (left: 10 12 9) ->  -> It seems like you did not provide an input for me to work with. Please enter a set of numbers for me to generate possible next steps. -> Please enter a set of numbers for me to generate possible next steps. -> It seems like you haven't entered any numbers for me to generate possible next steps. Please enter a set of numbers for me to work with.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 4 = 9 (left: 10 12 9) ->  -> It seems like you did not provide an input for me to work with. Please enter a set of numbers for me to generate possible next steps. -> Please enter a set of numbers for me to generate possible next steps. -> It seems like you haven't entered any numbers for me to generate possible next steps. Please enter a set of numbers for me to work with. -> It seems like you haven't entered any numbers for me to generate possible next steps. Please enter a set of numbers for me to work with.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "3 12"
                }
            },
            "Step 7": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 12 - 6 = 6 (left: 6 13) -> 6 + 13 = 19 (left: 19) -> 19 / 2 = 9.5 (left: 9.5 19) -> 19 - 9.5 = 9.5 (left: 9.5 19) -> Input: 3 5 7 -> 5 + 7 = 12 (left: 3 12) -> 3 * 12 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "10 * 5 ="
                }
            },
            "Step 8": {
                "Step": "4 * 10 = 40 (left: 12 13 40) -> 12 * 13 = 156 (left: 156 40) -> 10 * 5 = -> 10 * 5 = 50",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "4 + 10 = 14 (left: 12 14 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "10 12 9"
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left: 10 12 9) -> 10 + 12 = 22 (left: 9 22)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 10 12 9) -> 10 + 12 = 22 (left: 9 22) -> 9 * 22 = 198 (left: 198)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 10 12 9) -> 10 + 12 = 22 (left: 9 22) -> 9 * 22 = 198 (left: 198) -> 1 + 9 + 8 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "6 12 13"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "9.5 19"
                }
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 12 - 6 = 6 (left: 6 13) -> 6 + 13 = 19 (left: 19) -> 19 / 2 = 9.5 (left: 9.5 19) -> 19 - 9.5 = 9.5 (left: 9.5)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "6 12 13"
                }
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 6 + 12 = 18 (left: 18 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 6 + 12 = 18 (left: 18 13) -> 18 + 13 = 31 (left: 31)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "3 12"
                }
            },
            "Step 7": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 12 - 6 = 6 (left: 6 13) -> 6 + 13 = 19 (left: 19) -> 19 / 2 = 9.5 (left: 9.5 19) -> 19 - 9.5 = 9.5 (left: 9.5 19) -> Input: 3 5 7 -> 5 + 7 = 12 (left: 3 12) -> 3 / 12 = 0.25 (left: 0.25)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "3 12"
                }
            },
            "Step 8": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 12 - 6 = 6 (left: 6 13) -> 6 + 13 = 19 (left: 19) -> 19 / 2 = 9.5 (left: 9.5 19) -> 19 - 9.5 = 9.5 (left: 9.5 19) -> Input: 3 5 7 -> 5 + 7 = 12 (left: 3 12) -> 12 - 3 = 9 (left: 3 9)",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "4 + 10 = 14 (left: 12 13 14)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "10 12 9"
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left: 10 12 9) -> ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 10 12 9) ->  -> It seems like you did not provide an input for me to work with. Please enter a set of numbers for me to generate possible next steps.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 10 12 9) ->  -> It seems like you did not provide an input for me to work with. Please enter a set of numbers for me to generate possible next steps. -> Please enter a set of numbers for me to generate possible next steps.",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "9.5 19"
                }
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 12 - 6 = 6 (left: 6 13) -> 6 + 13 = 19 (left: 19) -> 19 / 2 = 9.5 (left: 9.5 19) -> 19 - 9.5 = 9.5 (left: 9.5)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "12 13 40"
                }
            },
            "Step 5": {
                "Step": "4 * 10 = 40 (left: 12 13 40) -> 13 * 40 = 520 (left: 12 520)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 10 = 40 (left: 12 13 40) -> 13 * 40 = 520 (left: 12 520) -> 12 + 520 = 532 (left: 520 532)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "3 12"
                }
            },
            "Step 7": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 12 - 6 = 6 (left: 6 13) -> 6 + 13 = 19 (left: 19) -> 19 / 2 = 9.5 (left: 9.5 19) -> 19 - 9.5 = 9.5 (left: 9.5 19) -> Input: 3 5 7 -> 5 + 7 = 12 (left: 3 12) -> 12 / 3 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "10 * 5 ="
                }
            },
            "Step 8": {
                "Step": "4 * 10 = 40 (left: 12 13 40) -> 12 * 13 = 156 (left: 156 40) -> 10 * 5 = -> 10 * 5 = 50",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "13 - 4 = 9 (left: 10 12 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "10 16 13"
                }
            },
            "Step 1": {
                "Step": "12 + 4 = 16 (left: 10 16 13) -> 10 + 16 = 26 (left: 13 26)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 + 4 = 16 (left: 10 16 13) -> 10 + 16 = 26 (left: 13 26) -> Possible next steps:",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 + 4 = 16 (left: 10 16 13) -> 10 + 16 = 26 (left: 13 26) -> Possible next steps: -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "9.5 19"
                }
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 12 - 6 = 6 (left: 6 13) -> 6 + 13 = 19 (left: 19) -> 19 / 2 = 9.5 (left: 9.5 19) -> 19 - 9.5 = 9.5 (left: 9.5 19)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 12 - 6 = 6 (left: 6 13) -> 6 + 13 = 19 (left: 19) -> 19 / 2 = 9.5 (left: 9.5 19) -> 19 - 9.5 = 9.5 (left: 9.5 19) -> Input: 3 5 7",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 12 - 6 = 6 (left: 6 13) -> 6 + 13 = 19 (left: 19) -> 19 / 2 = 9.5 (left: 9.5 19) -> 19 - 9.5 = 9.5 (left: 9.5 19) -> Input: 3 5 7 -> 5 + 7 = 12 (left: 3 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "3 12"
                }
            },
            "Step 7": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 12 - 6 = 6 (left: 6 13) -> 6 + 13 = 19 (left: 19) -> 19 / 2 = 9.5 (left: 9.5 19) -> 19 - 9.5 = 9.5 (left: 9.5 19) -> Input: 3 5 7 -> 5 + 7 = 12 (left: 3 12) -> 12 / 3 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "1 + 2 + 6 = 9"
                }
            },
            "Step 8": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 13 - 2.5 = 10.5 (left: 10.5 12) -> 10.5 * 12 = 126 (left: 126) -> 1 + 2 + 6 = 9 -> 1 + 8 = 9",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "4 * 10 = 40 (left: 12 13 40)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 12 13"
                }
            },
            "Step 1": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 12 - 6 = 6 (left: 6 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 12 - 6 = 6 (left: 6 13) -> 6 + 13 = 19 (left: 19)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 12 - 6 = 6 (left: 6 13) -> 6 + 13 = 19 (left: 19) -> 19 / 2 = 9.5 (left: 9.5 19)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "9.5 19"
                }
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 12 - 6 = 6 (left: 6 13) -> 6 + 13 = 19 (left: 19) -> 19 / 2 = 9.5 (left: 9.5 19) -> 19 - 9.5 = 9.5 (left: 9.5 19)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 12 - 6 = 6 (left: 6 13) -> 6 + 13 = 19 (left: 19) -> 19 / 2 = 9.5 (left: 9.5 19) -> 19 - 9.5 = 9.5 (left: 9.5 19) -> 19 / 9.5 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "6 12 13"
                }
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 6 * 12 = 72 (left: 72 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "3 12"
                }
            },
            "Step 7": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 12 - 6 = 6 (left: 6 13) -> 6 + 13 = 19 (left: 19) -> 19 / 2 = 9.5 (left: 9.5 19) -> 19 - 9.5 = 9.5 (left: 9.5 19) -> Input: 3 5 7 -> 5 + 7 = 12 (left: 3 12) -> 12 - 3 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "No possible next steps."
                }
            },
            "Step 8": {
                "Step": "12 + 4 = 16 (left: 10 16 13) -> 10 + 16 = 26 (left: 13 26) -> Possible next steps: -> No possible next steps. -> There are no possible next steps with the current numbers provided.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "12 + 4 = 16 (left: 10 16 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "10 12 9"
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left: 10 12 9) -> 12 / 10 = 1.2 (left: 1.2 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 10 12 9) -> 12 / 10 = 1.2 (left: 1.2 9) -> 9 / 1.2 = 7.5 (left: 7.5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 10 12 9) -> 12 / 10 = 1.2 (left: 1.2 9) -> 9 / 1.2 = 7.5 (left: 7.5) -> 7.5 + 8 = 15.5 (left: 15.5)",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "10 16 13"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "9.5 19"
                }
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 12 - 6 = 6 (left: 6 13) -> 6 + 13 = 19 (left: 19) -> 19 / 2 = 9.5 (left: 9.5 19) -> 9.5 + 19 = 28.5 (left: 28.5)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "Please enter a set of numbers for me to generate possible next steps."
                }
            },
            "Step 5": {
                "Step": "13 - 4 = 9 (left: 10 12 9) ->  -> It seems like you did not provide an input for me to work with. Please enter a set of numbers for me to generate possible next steps. -> Please enter a set of numbers for me to generate possible next steps. -> 6 - 3 = 3 (left: 3 6 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 4 = 9 (left: 10 12 9) ->  -> It seems like you did not provide an input for me to work with. Please enter a set of numbers for me to generate possible next steps. -> Please enter a set of numbers for me to generate possible next steps. -> 6 - 3 = 3 (left: 3 6 9) -> 9 / 3 = 3 (left: 3 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "3 12"
                }
            },
            "Step 7": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 12 - 6 = 6 (left: 6 13) -> 6 + 13 = 19 (left: 19) -> 19 / 2 = 9.5 (left: 9.5 19) -> 19 - 9.5 = 9.5 (left: 9.5 19) -> Input: 3 5 7 -> 5 + 7 = 12 (left: 3 12) -> 3 * 12 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "Please enter a set of numbers for me to generate possible next steps."
                }
            },
            "Step 8": {
                "Step": "13 - 4 = 9 (left: 10 12 9) ->  -> It seems like you did not provide an input for me to work with. Please enter a set of numbers for me to generate possible next steps. -> Please enter a set of numbers for me to generate possible next steps. -> I'm sorry, but without a set of numbers to work with, I am unable to generate possible next steps. Please provide a set of numbers for me to analyze.",
                "Pruning": null
            }
        },
        "Input": "4 10 12 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "979": {
        "puzzle": "2 3 10 12",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 10 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 10 12"
                }
            },
            "Step 1": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 12 - 6 = 6 (left: 6 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 12 - 6 = 6 (left: 6 10) -> 6 + 10 = 16 (left: 16)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 12 - 6 = 6 (left: 6 10) -> 6 + 10 = 16 (left: 16) -> 16 + 16 = 32",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "2 4 "
                }
            },
            "Step 4": {
                "Step": "12 / 3 = 4 (left: 2 4  -> 2 + 4 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 / 3 = 4 (left: 2 4  -> 2 + 4 = 6 (left: 6) -> 6 / 2 = 3 (left: 3 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 3 = 4 (left: 2 4  -> 2 + 4 = 6 (left: 6) -> 6 / 2 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "There are no possible next steps with the input 17."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "There are no possible next steps with the input 17."
                }
            },
            "Step 7": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 - 5 = 5 (left: 5 12) -> 5 + 12 = 17 (left: 17) -> There are no possible next steps with the input 17. -> There are no possible next steps with the input 17.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 - 5 = 5 (left: 5 12) -> 5 + 12 = 17 (left: 17) -> There are no possible next steps with the input 17. -> There are no possible next steps with the input 17. -> None",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "There is only one possible next step:"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 10 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 10 12"
                }
            },
            "Step 1": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 12 - 6 = 6 (left: 6 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 12 - 6 = 6 (left: 6 12) -> 12 - 6 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 12 - 6 = 6 (left: 6 12) -> 12 - 6 = 6 (left: 6) -> There is only one possible next step:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "5 10 12"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 5 + 10 = 15 (left: 10 12 15)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 5 + 10 = 15 (left: 10 12 15) -> 12 / 10 = 1.2 (left: 1.2 15)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 5 + 10 = 15 (left: 10 12 15) -> 12 / 10 = 1.2 (left: 1.2 15) -> 1.2 * 15 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "There is only one possible next step:"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "There are no possible next steps with the input 17."
                }
            },
            "Step 7": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 - 5 = 5 (left: 5 12) -> 5 + 12 = 17 (left: 17) -> There are no possible next steps with the input 17. -> There are no possible next steps with the input 17.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 - 5 = 5 (left: 5 12) -> 5 + 12 = 17 (left: 17) -> There are no possible next steps with the input 17. -> There are no possible next steps with the input 17. -> There are no possible next steps with the input 17.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 / 3 = 4 (left: 2 4 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 10 12"
                }
            },
            "Step 1": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 12 / 6 = 2 (left: 2 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 12 / 6 = 2 (left: 2 10) -> 10 / 2 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 12 / 6 = 2 (left: 2 10) -> 10 / 2 = 5 (left: 5) -> 8 + 5 = 13 (left: 13)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "5 10 12"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "5 10 12"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 12 - 5 = 7 (left: 7 10 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 12 - 5 = 7 (left: 7 10 12) -> 12 - 7 = 5 (left: 5 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 12 - 5 = 7 (left: 7 10 12) -> 12 - 7 = 5 (left: 5 10) -> Input: 3 9 27",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "2 + 2 = 4"
                }
            },
            "Step 7": {
                "Step": "12 / 3 = 4 (left: 2 4  -> 4 - 2 = 2 (left: 2) -> There are no possible next steps with just the number 2. -> 2 + 2 = 4 -> 2 * 4",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 / 3 = 4 (left: 2 4  -> 4 - 2 = 2 (left: 2) -> There are no possible next steps with just the number 2. -> 2 + 2 = 4 -> 2 * 4 -> 2 * 4 = 8",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 10 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 10 12"
                }
            },
            "Step 1": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 10 + 12 = 22 (left: 6 22)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 10 + 12 = 22 (left: 6 22) -> 6 * 22 = 132 (left: 132)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 10 + 12 = 22 (left: 6 22) -> 6 * 22 = 132 (left: 132) -> 132 / 1 = 132 (left: 132",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "5 10 12"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "5 10 12"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 12 - 5 = 7 (left: 10 7)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 12 - 5 = 7 (left: 10 7) -> 10 / 7 \u2248 1.43 (left: 1.43)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 12 - 5 = 7 (left: 10 7) -> 10 / 7 \u2248 1.43 (left: 1.43) -> There is only one number given, so there are no arithmetic operations that can be performed.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "There is only one number given, so there are no arithmetic operations that can be performed."
                }
            },
            "Step 7": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 12 - 5 = 7 (left: 10 7) -> 10 / 7 \u2248 1.43 (left: 1.43) -> There is only one number given, so there are no arithmetic operations that can be performed. -> No arithmetic operations can be performed with just one number given.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 12 - 5 = 7 (left: 10 7) -> 10 / 7 \u2248 1.43 (left: 1.43) -> There is only one number given, so there are no arithmetic operations that can be performed. -> No arithmetic operations can be performed with just one number given. -> Input: 2 8 14",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 10 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 10 12"
                }
            },
            "Step 1": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 10 + 6 = 16 (left: 16 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 10 + 6 = 16 (left: 16 12) -> 16 * 12 = 192 (left: 192)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 10 + 6 = 16 (left: 16 12) -> 16 * 12 = 192 (left: 192) -> 1 + 9 + 2 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "2 4 "
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "2 4 "
                }
            },
            "Step 4": {
                "Step": "12 / 3 = 4 (left: 2 4  -> 2 + 4 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 / 3 = 4 (left: 2 4  -> 2 + 4 = 6 (left: 6) -> 8 / 6 = 1.33 (left: 1.33)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 3 = 4 (left: 2 4  -> 2 + 4 = 6 (left: 6) -> 8 / 6 = 1.33 (left: 1.33) -> There are no possible next steps for the input 1.33.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "There are no possible next steps for the input 1.33."
                }
            },
            "Step 7": {
                "Step": "12 / 3 = 4 (left: 2 4  -> 2 + 4 = 6 (left: 6) -> 8 / 6 = 1.33 (left: 1.33) -> There are no possible next steps for the input 1.33. -> 1.33 + 2 = 3.33",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 / 3 = 4 (left: 2 4  -> 2 + 4 = 6 (left: 6) -> 8 / 6 = 1.33 (left: 1.33) -> There are no possible next steps for the input 1.33. -> 1.33 + 2 = 3.33 -> 1.33 * 2 = 2.66 (left: 2.66)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "Input: 3 9 27"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 10 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 10 12"
                }
            },
            "Step 1": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 10 - 6 = 4 (left: 4 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 10 - 6 = 4 (left: 4 12) -> 4 * 12 = 48 (left: 48)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 10 - 6 = 4 (left: 4 12) -> 4 * 12 = 48 (left: 48) -> None. The input is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "2 4 "
                }
            },
            "Step 4": {
                "Step": "12 / 3 = 4 (left: 2 4  -> 4 * 2 = 8 (left: 2 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 / 3 = 4 (left: 2 4  -> 4 * 2 = 8 (left: 2 8) -> 2 + 8 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 3 = 4 (left: 2 4  -> 4 * 2 = 8 (left: 2 8) -> 2 + 8 = 10 (left: 10) -> 10 + 2 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "There are no possible next steps with the input 17."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "There are no possible next steps for the input 1.33."
                }
            },
            "Step 7": {
                "Step": "12 / 3 = 4 (left: 2 4  -> 2 + 4 = 6 (left: 6) -> 8 / 6 = 1.33 (left: 1.33) -> There are no possible next steps for the input 1.33. -> There are no possible next steps for the input 1.33 since it is not a whole number and does not have any integers to perform arithmetic operations with.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 / 3 = 4 (left: 2 4  -> 2 + 4 = 6 (left: 6) -> 8 / 6 = 1.33 (left: 1.33) -> There are no possible next steps for the input 1.33. -> There are no possible next steps for the input 1.33 since it is not a whole number and does not have any integers to perform arithmetic operations with. -> None.",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "Input: 3 9 27"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 10 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 10 12"
                }
            },
            "Step 1": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 12 - 6 = 6 (left: 6 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 12 - 6 = 6 (left: 6 10) -> 6 + 10 = 16 (left: 16)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 12 - 6 = 6 (left: 6 10) -> 6 + 10 = 16 (left: 16) -> There are no possible next steps as there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "5 10 12"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 / 5 = 2 (left: 2 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 / 5 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 / 5 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6) -> 8 - 6 = 2 (left: 2 6)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "27 + 2 = 29"
                }
            },
            "Step 7": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 12 + 5 = 17 (left: 10 17) -> 10 + 17 = 27 (left: 27) -> 27 + 2 = 29 -> 27 / 2 = 13.5 (left: 13.5 29)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 12 + 5 = 17 (left: 10 17) -> 10 + 17 = 27 (left: 27) -> 27 + 2 = 29 -> 27 / 2 = 13.5 (left: 13.5 29) -> 13.5 * 29 = 391.5 (left: 391.5)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "27 + 2 = 29"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "3 * 2 = 6 (left: 6 10 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 10 12"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 - 5 = 5 (left: 5 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 - 5 = 5 (left: 5 12) -> 5 + 12 = 17 (left: 17)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 - 5 = 5 (left: 5 12) -> 5 + 12 = 17 (left: 17) -> There are no possible next steps with the input 17.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "5 10 12"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 12 + 5 = 17 (left: 10 17)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 12 + 5 = 17 (left: 10 17) -> 10 + 17 = 27 (left: 27)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 12 + 5 = 17 (left: 10 17) -> 10 + 17 = 27 (left: 27) -> 27 + 2 = 29",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "27 + 2 = 29"
                }
            },
            "Step 7": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 12 + 5 = 17 (left: 10 17) -> 10 + 17 = 27 (left: 27) -> 27 + 2 = 29 -> 2 * 27 = 54 (left: 54)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "2 + 2 = 4"
                }
            },
            "Step 8": {
                "Step": "12 / 3 = 4 (left: 2 4  -> 4 - 2 = 2 (left: 2) -> There are no possible next steps with just the number 2. -> 2 + 2 = 4 -> 2 + 2 = 4",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "2 * 3 = 6 (left: 6 10 12)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 10 12"
                }
            },
            "Step 1": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 12 - 6 = 6 (left: 6 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 12 - 6 = 6 (left: 6 10) -> 4 - 16 = -12 (left: -12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 12 - 6 = 6 (left: 6 10) -> 4 - 16 = -12 (left: -12) -> -12 - 8 = -20 (left: -20)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "5 10 12"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "2 4 "
                }
            },
            "Step 4": {
                "Step": "12 / 3 = 4 (left: 2 4  -> 4 - 2 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 / 3 = 4 (left: 2 4  -> 4 - 2 = 2 (left: 2) -> There are no possible next steps with just the number 2.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 3 = 4 (left: 2 4  -> 4 - 2 = 2 (left: 2) -> There are no possible next steps with just the number 2. -> 2 + 2 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There is only one possible next step:"
                }
            },
            "Step 7": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 12 - 6 = 6 (left: 6 12) -> 12 - 6 = 6 (left: 6) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 12 - 6 = 6 (left: 6 12) -> 12 - 6 = 6 (left: 6) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16) -> 2 * 16 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "There is only one possible next step:"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "12 - 10 = 2 (left: 2 3 12)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 10 12"
                }
            },
            "Step 1": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 12 / 6 = 2 (left: 2 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (2 * 3) * (10 + 12) = 24",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "2 3 12"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "5 10 12"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 12 / 5 = 2.4 (",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 12 / 5 = 2.4 ( -> 12 + 5 = 17 (left: 17)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 12 / 5 = 2.4 ( -> 12 + 5 = 17 (left: 17) -> There are no possible next steps with the input 17.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "2 + 2 = 4"
                }
            },
            "Step 7": {
                "Step": "12 / 3 = 4 (left: 2 4  -> 4 - 2 = 2 (left: 2) -> There are no possible next steps with just the number 2. -> 2 + 2 = 4 -> 2 - 2 = 0 (left: 0 = 4)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 / 3 = 4 (left: 2 4  -> 4 - 2 = 2 (left: 2) -> There are no possible next steps with just the number 2. -> 2 + 2 = 4 -> 2 - 2 = 0 (left: 0 = 4) -> There seems to be a mistake in the input. It should be corrected to have an equation to solve.",
                "Pruning": null
            }
        },
        "Input": "2 3 10 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "980": {
        "puzzle": "3 4 6 6",
        "Agent 0": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 3 6 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 6 6"
                }
            },
            "Step 1": {
                "Step": "6 / 3 = 2 (left: 2 6 6) -> 6 / 2 = 3 (left: 3 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 3 = 2 (left: 2 6 6) -> 6 / 2 = 3 (left: 3 6) -> 3 + 6 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 / 3 = 2 (left: 2 6 6) -> 6 / 2 = 3 (left: 3 6) -> 3 + 6 = 9 (left: 9) -> 9 * 8 = 72 (left: 72)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "4 6 3"
                },
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "4 6 3"
                }
            },
            "Step 4": {
                "Step": "6 - 3 = 3 (left: 4 6 3) -> 4 + 6 = 10 (left: 3 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 - 3 = 3 (left: 4 6 3) -> 4 + 6 = 10 (left: 3 10) -> 3 * 10 = 30 (left: 30)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 3 = 3 (left: 4 6 3) -> 4 + 6 = 10 (left: 3 10) -> 3 * 10 = 30 (left: 30) -> 30 / 3 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "There are no possible next steps with the input of 4.5."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "1.5 + 2 = 3.5"
                }
            },
            "Step 7": {
                "Step": "6 - 3 = 3 (left: 4 6 3) -> 6 - 4 = 2 (left: 2 3) -> 3 / 2 = 1.5 (left: 1.5) -> 1.5 + 2 = 3.5 -> 2 / 1.5 = 1.33333 (left: 1.33333 2)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 - 3 = 3 (left: 4 6 3) -> 6 - 4 = 2 (left: 2 3) -> 3 / 2 = 1.5 (left: 1.5) -> 1.5 + 2 = 3.5 -> 2 / 1.5 = 1.33333 (left: 1.33333 2) -> 2 / 1.33333 = 1.5 (left: 1.5)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "There are no possible next steps for the input 7.5."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 6 6"
                }
            },
            "Step 1": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> Possible next steps",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> Possible next steps -> None, the input provided already covers all possible operations with the given numbers.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> Possible next steps -> None, the input provided already covers all possible operations with the given numbers. -> There are no more possible next steps as all combinations of the given numbers have been considered.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "4 6 3"
                }
            },
            "Step 4": {
                "Step": "6 - 3 = 3 (left: 4 6 3) -> 4 + 6 = 10 (left: 3 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 - 3 = 3 (left: 4 6 3) -> 4 + 6 = 10 (left: 3 10) -> 3 + 10 = 13 (left: 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 3 = 3 (left: 4 6 3) -> 4 + 6 = 10 (left: 3 10) -> 3 + 10 = 13 (left: 13) -> 13 is a prime number, so there are no possible next steps for this input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "No possible next steps."
                }
            },
            "Step 7": {
                "Step": "6 - 3 = 3 (left: 4 6 3) -> 3 + 4 = 7 (left: 6 7) -> 6 - 7 = -1 (left: -1)  -> No possible next steps. -> No possible next steps.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 - 3 = 3 (left: 4 6 3) -> 3 + 4 = 7 (left: 6 7) -> 6 - 7 = -1 (left: -1)  -> No possible next steps. -> No possible next steps. -> None.",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "There are no possible next steps with the input of 5."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 4 9 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 3"
                }
            },
            "Step 1": {
                "Step": "6 - 3 = 3 (left: 4 6 3) -> 6 / 3 = 2 (left: 4 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 3 = 3 (left: 4 6 3) -> 6 / 3 = 2 (left: 4 2) -> 4 + 2 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 3 = 3 (left: 4 6 3) -> 6 / 3 = 2 (left: 4 2) -> 4 + 2 = 6 (left: 6) -> 6 - 8 = -2 (left: -2)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "6 6 7"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "4 6 3"
                }
            },
            "Step 4": {
                "Step": "6 - 3 = 3 (left: 4 6 3) -> 4 * 6 = 24 (left: 24 3)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 - 3 = 3 (left: 4 6 3) -> 4 * 6 = 24 (left: 24 3) -> 24 + 3 = 27 (left: 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 3 = 3 (left: 4 6 3) -> 4 * 6 = 24 (left: 24 3) -> 24 + 3 = 27 (left: 3) -> There are no possible next steps with just the input of 3.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps with the input of 4.5."
                }
            },
            "Step 7": {
                "Step": "6 / 3 = 2 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6) -> 6 - 1.5 = 4.5 (left: 4.5) -> There are no possible next steps with the input of 4.5. -> There are no possible next steps with the input of 4.5.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 / 3 = 2 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6) -> 6 - 1.5 = 4.5 (left: 4.5) -> There are no possible next steps with the input of 4.5. -> There are no possible next steps with the input of 4.5. -> There are no possible next steps with the input of 4.5.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 - 3 = 1 (left: 1 6 6)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 1": {
                "Step": "6 / 3 = 2 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 3 = 2 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6) -> 6 - 1.5 = 4.5 (left: 4.5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 / 3 = 2 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6) -> 6 - 1.5 = 4.5 (left: 4.5) -> There are no possible next steps with the input of 4.5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "4 6 3"
                }
            },
            "Step 4": {
                "Step": "6 - 3 = 3 (left: 4 6 3) -> 6 / 4 = 1.5 (left: 1.5 3)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 - 3 = 3 (left: 4 6 3) -> 6 / 4 = 1.5 (left: 1.5 3) -> 1.5 * 3 = 4.5 (left: 4.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 3 = 3 (left: 4 6 3) -> 6 / 4 = 1.5 (left: 1.5 3) -> 1.5 * 3 = 4.5 (left: 4.5) -> There are no possible next steps for the input 4.5 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "13 is a prime number, so there are no possible next steps for this input."
                }
            },
            "Step 7": {
                "Step": "6 - 3 = 3 (left: 4 6 3) -> 4 + 6 = 10 (left: 3 10) -> 3 + 10 = 13 (left: 13) -> 13 is a prime number, so there are no possible next steps for this input. -> None",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "There are no possible next steps with the input of 4.5."
                }
            },
            "Step 8": {
                "Step": "6 / 3 = 2 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6) -> 6 - 1.5 = 4.5 (left: 4.5) -> There are no possible next steps with the input of 4.5. -> There are no possible next steps with the input of 4.5.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 / 3 = 2 (left: 4 6 6)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 1": {
                "Step": "6 / 3 = 2 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 3 = 2 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6) -> 1.5 + 6 = 7.5 (left: 7.5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 / 3 = 2 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6) -> 1.5 + 6 = 7.5 (left: 7.5) -> There are no possible next steps for the input 7.5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "4 6 3"
                }
            },
            "Step 4": {
                "Step": "6 - 3 = 3 (left: 4 6 3) -> 6 - 4 = 2 (left: 2 3)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 - 3 = 3 (left: 4 6 3) -> 6 - 4 = 2 (left: 2 3) -> 3 - 2 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 3 = 3 (left: 4 6 3) -> 6 - 4 = 2 (left: 2 3) -> 3 - 2 = 1 (left: 1) -> 1 * 1 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "There are no possible next steps for the input 7.5."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "Please provide at least two numbers for mathematical operations."
                }
            },
            "Step 7": {
                "Step": "6 / 3 = 2 (left: 2 6 6) -> 3 + 5 = 8 (left: 7 8) -> 7 * 8 = 56 (left: 56) -> There is only one number given (56), so there are no possible next steps as there are no operations or other numbers to work with. -> Not enough numbers provided for any mathematical operations. -> Please provide at least two numbers for mathematical operations. -> 2 / 2 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "There is only one number given (56"
                }
            },
            "Step 8": {
                "Step": "6 / 3 = 2 (left: 2 6 6) -> 3 + 5 = 8 (left: 7 8) -> 7 * 8 = 56 (left: 56) -> There is only one number given (56), so there are no possible next steps as there are no operations or other numbers to work with. -> There is only one number given, so there are no possible next steps.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "6 / 3 = 2 (left: 2 6 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 3"
                }
            },
            "Step 1": {
                "Step": "6 - 3 = 3 (left: 4 6 3) -> 6 / 3 = 2 (left: 2 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 3 = 3 (left: 4 6 3) -> 6 / 3 = 2 (left: 2 3) -> 2 + 3 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 3 = 3 (left: 4 6 3) -> 6 / 3 = 2 (left: 2 3) -> 2 + 3 = 5 (left: 5) -> There are no possible next steps with the input of 5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "8 10"
                }
            },
            "Step 4": {
                "Step": "6 / 3 = 2 (left: 2 6 6) -> 6 / 2 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> 18 - 8 = 10 (left: 8 10) -> 8 + 10 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": ""
                }
            },
            "Step 5": {
                "Step": "6 - 3 = 3 (left:  -> It looks like you did not provide an input. Could you please provide the numbers you would like to work with?",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 3 = 3 (left:  -> It looks like you did not provide an input. Could you please provide the numbers you would like to work with? -> I'm sorry, but you did not provide any input numbers to work with. Please provide the numbers you would like to use in the calculations.",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "There are no possible next steps for the input 4.5 as it is already a single number."
                }
            },
            "Step 7": {
                "Step": "6 - 3 = 3 (left: 4 6 3) -> 6 / 4 = 1.5 (left: 1.5 3) -> 1.5 * 3 = 4.5 (left: 4.5) -> There are no possible next steps for the input 4.5 as it is already a single number. -> N/A",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "Please provide at least two numbers for mathematical operations."
                }
            },
            "Step 8": {
                "Step": "6 / 3 = 2 (left: 2 6 6) -> 3 + 5 = 8 (left: 7 8) -> 7 * 8 = 56 (left: 56) -> There is only one number given (56), so there are no possible next steps as there are no operations or other numbers to work with. -> Not enough numbers provided for any mathematical operations. -> Please provide at least two numbers for mathematical operations. -> There are multiple possible next steps depending on the numbers provided. Could you please provide the numbers you would like to use for mathematical operations?",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 - 3 = 3 (left: 4 6 3)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 6 6"
                }
            },
            "Step 1": {
                "Step": "6 / 3 = 2 (left: 2 6 6) -> 6 / 2 = 3 (left: 3 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 3 = 2 (left: 2 6 6) -> 6 / 2 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 / 3 = 2 (left: 2 6 6) -> 6 / 2 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> 18 - 8 = 10 (left: 8 10)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "4 6 3"
                }
            },
            "Step 4": {
                "Step": "6 - 3 = 3 (left: 4 6 3) -> 3 + 4 = 7 (left: 6 7)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 - 3 = 3 (left: 4 6 3) -> 3 + 4 = 7 (left: 6 7) -> 6 - 7 = -1 (left: -1) ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 3 = 3 (left: 4 6 3) -> 3 + 4 = 7 (left: 6 7) -> 6 - 7 = -1 (left: -1)  -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "No possible next steps."
                }
            },
            "Step 7": {
                "Step": "6 - 3 = 3 (left: 4 6 3) -> 3 + 4 = 7 (left: 6 7) -> 6 - 7 = -1 (left: -1)  -> No possible next steps. -> There are no possible next steps for the input provided.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 - 3 = 3 (left: 4 6 3) -> 3 + 4 = 7 (left: 6 7) -> 6 - 7 = -1 (left: -1)  -> No possible next steps. -> There are no possible next steps for the input provided. -> None",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "There are no possible next steps with the input of 4.5."
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "6 - 3 = 3 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 3"
                }
            },
            "Step 1": {
                "Step": "6 - 3 = 3 (left: 4 6 3) -> 6 / 4 = 1.5 (left: 1.5 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 3 = 3 (left: 4 6 3) -> 6 / 4 = 1.5 (left: 1.5 3) -> 1.5 * 3 = 4.5 (left: 3 4.5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 3 = 3 (left: 4 6 3) -> 6 / 4 = 1.5 (left: 1.5 3) -> 1.5 * 3 = 4.5 (left: 3 4.5) -> 4.5 - 3 = 1.5 (left: 1.5)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "4 6 3"
                },
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "8 10"
                }
            },
            "Step 4": {
                "Step": "6 / 3 = 2 (left: 2 6 6) -> 6 / 2 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> 18 - 8 = 10 (left: 8 10) -> 8 + 10 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "There is only one number given (56"
                }
            },
            "Step 5": {
                "Step": "6 / 3 = 2 (left: 2 6 6) -> 3 + 5 = 8 (left: 7 8) -> 7 * 8 = 56 (left: 56) -> There is only one number given (56), so there are no possible next steps as there are no operations or other numbers to work with. -> Not enough numbers provided for any mathematical operations.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 3 = 2 (left: 2 6 6) -> 3 + 5 = 8 (left: 7 8) -> 7 * 8 = 56 (left: 56) -> There is only one number given (56), so there are no possible next steps as there are no operations or other numbers to work with. -> Not enough numbers provided for any mathematical operations. -> Please provide at least two numbers for mathematical operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps with just the input of 3."
                }
            },
            "Step 7": {
                "Step": "6 - 3 = 3 (left: 4 6 3) -> 4 * 6 = 24 (left: 24 3) -> 24 + 3 = 27 (left: 3) -> There are no possible next steps with just the input of 3. -> 3 + 3 = 6",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 - 3 = 3 (left: 4 6 3) -> 4 * 6 = 24 (left: 24 3) -> 24 + 3 = 27 (left: 3) -> There are no possible next steps with just the input of 3. -> 3 + 3 = 6 -> 3 * 3 = 9 (left: 3 9 6)",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "6 / 3 = 2 (left: 2 6 6)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 6 6"
                }
            },
            "Step 1": {
                "Step": "6 / 3 = 2 (left: 2 6 6) -> 3 + 5 = 8 (left: 7 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 3 = 2 (left: 2 6 6) -> 3 + 5 = 8 (left: 7 8) -> 7 * 8 = 56 (left: 56)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 / 3 = 2 (left: 2 6 6) -> 3 + 5 = 8 (left: 7 8) -> 7 * 8 = 56 (left: 56) -> There is only one number given (56), so there are no possible next steps as there are no operations or other numbers to work with.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "4 6 3"
                }
            },
            "Step 4": {
                "Step": "6 - 3 = 3 (left: 4 6 3) -> 6 - 4 = 2 (left: 2 3)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 - 3 = 3 (left: 4 6 3) -> 6 - 4 = 2 (left: 2 3) -> 3 / 2 = 1.5 (left: 1.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 3 = 3 (left: 4 6 3) -> 6 - 4 = 2 (left: 2 3) -> 3 / 2 = 1.5 (left: 1.5) -> 1.5 + 2 = 3.5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "I'm sorry, but you did not provide any input numbers to work with. Please provide the numbers you would like to use in the calculations."
                }
            },
            "Step 7": {
                "Step": "6 - 3 = 3 (left:  -> It looks like you did not provide an input. Could you please provide the numbers you would like to work with? -> I'm sorry, but you did not provide any input numbers to work with. Please provide the numbers you would like to use in the calculations. -> Please provide the numbers you would like to use in the calculations.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 - 3 = 3 (left:  -> It looks like you did not provide an input. Could you please provide the numbers you would like to work with? -> I'm sorry, but you did not provide any input numbers to work with. Please provide the numbers you would like to use in the calculations. -> Please provide the numbers you would like to use in the calculations. -> Once you provide the numbers you would like to use in the calculations, I can offer you possible next steps. Just let me know the numbers you want to work with.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "6 - 3 = 3 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 6 6"
                }
            },
            "Step 1": {
                "Step": "6 / 3 = 2 (left: 2 6 6) -> 6 / 2 = 3 (left: 3 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 3 = 2 (left: 2 6 6) -> 6 / 2 = 3 (left: 3 6) -> 6 - 3 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 / 3 = 2 (left: 2 6 6) -> 6 / 2 = 3 (left: 3 6) -> 6 - 3 = 3 (left: 3) -> There are no possible next steps with just the number 3.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "4 6 3"
                }
            },
            "Step 4": {
                "Step": "6 - 3 = 3 (left: 4 6 3) -> 6 - 3 = 3 (left: 4 3)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 - 3 = 3 (left: 4 6 3) -> 6 - 3 = 3 (left: 4 3) -> 4 - 3 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 3 = 3 (left: 4 6 3) -> 6 - 3 = 3 (left: 4 3) -> 4 - 3 = 1 (left: 1) -> There is only one number given, so there are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "Please provide at least two numbers for mathematical operations."
                }
            },
            "Step 7": {
                "Step": "6 / 3 = 2 (left: 2 6 6) -> 3 + 5 = 8 (left: 7 8) -> 7 * 8 = 56 (left: 56) -> There is only one number given (56), so there are no possible next steps as there are no operations or other numbers to work with. -> Not enough numbers provided for any mathematical operations. -> Please provide at least two numbers for mathematical operations. -> 3. Multiply two numbers",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 / 3 = 2 (left: 2 6 6) -> 3 + 5 = 8 (left: 7 8) -> 7 * 8 = 56 (left: 56) -> There is only one number given (56), so there are no possible next steps as there are no operations or other numbers to work with. -> Not enough numbers provided for any mathematical operations. -> Please provide at least two numbers for mathematical operations. -> 3. Multiply two numbers -> 8 * 8 = 64 (left: 2 64 14)",
                "Pruning": null
            }
        },
        "Input": "3 4 6 6",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "981": {
        "puzzle": "5 8 8 8",
        "Agent 0": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 8 8 13)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.66667 (left: 2.66667 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.66667 (left: 2.66667 8) -> 8 - 2.66667 = 5.33333 (left: 5.33333 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.66667 (left: 2.66667 8) -> 8 - 2.66667 = 5.33333 (left: 5.33333 8) -> 5.33333 + 8 = 13.33333 (left: 13.33333)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "1.6 8 8"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 4": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 + 8 = 11 (left: 8 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 + 8 = 11 (left: 8 11) -> 8 + 11 = 19 (left: 19)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 + 8 = 11 (left: 8 11) -> 8 + 11 = 19 (left: 19) -> There are no possible next steps for the number 19.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "There are no possible next steps with the input 0.3333 as it is already a single number."
                }
            },
            "Step 7": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 * 8 = 24 (left: 8 24) -> 8 / 24 = 0.3333 (left: 0.3333) -> There are no possible next steps with the input 0.3333 as it is already a single number. -> There are no possible next steps with the input 0.3333 as it is already a single number.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 * 8 = 24 (left: 8 24) -> 8 / 24 = 0.3333 (left: 0.3333) -> There are no possible next steps with the input 0.3333 as it is already a single number. -> There are no possible next steps with the input 0.3333 as it is already a single number. -> There are no possible next steps with the input 0.3333 as it is already a single number.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 - 5 = 3 (left: 3 8 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.6667 (left: 2.6667 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.6667 (left: 2.6667  -> There are no possible next steps for 2.6667 as it is already a single number.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.6667 (left: 2.6667  -> There are no possible next steps for 2.6667 as it is already a single number. -> There are no possible next steps for 2.6667 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 4": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 * 8 = 24 (left: 8 24)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 * 8 = 24 (left: 8 24) -> 24 - 8 = 16 (left: 16)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 * 8 = 24 (left: 8 24) -> 24 - 8 = 16 (left: 16) -> 16 / 2 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "6 9"
                }
            },
            "Step 7": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.67 (left: 2.67 8) -> Input: 3 9 27 -> 9 - 3 = 6 (left: 6 9) -> 9 - 6 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "0.7272727272727273 / 2 = 0.36363636363636365"
                }
            },
            "Step 8": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 + 8 = 11 (left: 8 11) -> 8 / 11 = 0.7272727272727273 (left: 0.7272727272727273) -> 0.7272727272727273 / 2 = 0.36363636363636365 -> 0.7272727272727273 - 2 = -1.2727272727272727 (left: -1.2727272727272727)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "There is only one possible next step: 3 + 3 = 6"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 8 8 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 + 8 = 11 (left: 8 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 + 8 = 11 (left: 8 11) -> 8 / 11 = 0.7272727272727273 (left: 0.7272727272727273)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 + 8 = 11 (left: 8 11) -> 8 / 11 = 0.7272727272727273 (left: 0.7272727272727273) -> 0.7272727272727273 / 2 = 0.36363636363636365",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "8 8 13"
                }
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 8 8 13) -> 13 - 8 = 5 (left: 5",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 8 = 13 (left: 8 8 13) -> 13 - 8 = 5 (left: 5 -> There are no possible next steps with just one number.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 8 = 13 (left: 8 8 13) -> 13 - 8 = 5 (left: 5 -> There are no possible next steps with just one number. -> Input: There are no possible next steps with just one number",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "6 9"
                }
            },
            "Step 7": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.67 (left: 2.67 8) -> Input: 3 9 27 -> 9 - 3 = 6 (left: 6 9) -> 9 / 6 = 1.5 (left: 1.5)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "6 9"
                }
            },
            "Step 8": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.67 (left: 2.67 8) -> Input: 3 9 27 -> 9 - 3 = 6 (left: 6 9) -> 9 - 6 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "There are no possible next steps for the input 2.99 as it is already a single number and cannot be further manipulated using basic arithmetic operations."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "8 / 5 = 1.6 (left: 1.6 8 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 - 3 = 5 (left: 5 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 - 3 = 5 (left: 5 8) -> 3 + 9 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 - 3 = 5 (left: 5 8) -> 3 + 9 = 12 (left: 12) -> 12 + 2 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "8 8 13"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 4": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> Input:",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> Input: -> Please provide the numbers for the input.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> Input: -> Please provide the numbers for the input. -> It seems like you didn't provide any numbers for the input. Could you please provide the numbers you would like to use?",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "There is no possible next step with the input of -3, as there are no valid operations that can be performed with the current numbers."
                }
            },
            "Step 7": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 + 8 = 11 (left: 8 11) -> 8 - 11 = -3 (left: -3) -> There is no possible next step with the input of -3, as there are no valid operations that can be performed with the current numbers. -> None",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "0.7272727272727273 / 2 = 0.36363636363636365"
                }
            },
            "Step 8": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 + 8 = 11 (left: 8 11) -> 8 / 11 = 0.7272727272727273 (left: 0.7272727272727273) -> 0.7272727272727273 / 2 = 0.36363636363636365 -> 0.727272727272",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "6 9"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "8 / 5 = 1.6 (left",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 * 8 = 24 (left: 8 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 * 8 = 24 (left: 8 24) -> 32 / 5 = 6.4 (left: 6.4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 * 8 = 24 (left: 8 24) -> 32 / 5 = 6.4 (left: 6.4) -> 6 * 4 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "3 8 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 4": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 + 8 = 11 (left: 8 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 + 8 = 11 (left: 8 11) -> 8 / 11 = 0.7272727272727273 (left: 0.7272727272727273)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 + 8 = 11 (left: 8 11) -> 8 / 11 = 0.7272727272727273 (left: 0.7272727272727273) -> 0.7272727272727273 / 2 = 0.36363636363636365",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps for the number 19."
                }
            },
            "Step 7": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 + 8 = 11 (left: 8 11) -> 8 + 11 = 19 (left: 19) -> There are no possible next steps for the number 19. -> There are no possible next steps for the number 19.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 + 8 = 11 (left: 8 11) -> 8 + 11 = 19 (left: 19) -> There are no possible next steps for the number 19. -> There are no possible next steps for the number 19. -> There are no possible next steps for the number 19.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 8 8 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.67 (left: 2.67 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.67 (left: 2.67 8) -> 8 / 2.67 = 2.99 (left: 2.99)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.67 (left: 2.67 8) -> 8 / 2.67 = 2.99 (left: 2.99) -> There are no possible next steps for the input 2.99 as it is already a single number and cannot be further manipulated using basic arithmetic operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 4": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.67 (left: 2.67 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.67 (left: 2.67 8) -> 8 + 4 = 12 (",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.67 (left: 2.67 8) -> 8 + 4 = 12 ( -> 4 * 8 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "0.7272727272727273 / 2 = 0.36363636363636365"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "It seems like you didn't provide any numbers for the input. Could you please provide the numbers you would like to use?"
                }
            },
            "Step 7": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> Input: -> Please provide the numbers for the input. -> It seems like you didn't provide any numbers for the input. Could you please provide the numbers you would like to use? -> Without numbers provided, it's difficult to determine possible next steps. Please provide the numbers you would like to use in order to generate possible calculations.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> Input: -> Please provide the numbers for the input. -> It seems like you didn't provide any numbers for the input. Could you please provide the numbers you would like to use? -> Without numbers provided, it's difficult to determine possible next steps. Please provide the numbers you would like to use in order to generate possible calculations. -> Please provide the numbers you would like to use in order to generate possible calculations.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 8 8 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1.6 8 8"
                }
            },
            "Step 1": {
                "Step": "8 / 5 = 1.6 (left: 1.6 8 8) -> 8 - 1.6 = 6.4 (left: 1.6 6",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 / 5 = 1.6 (left: 1.6 8 8) -> 8 - 1.6 = 6.4 (left: 1.6 6 -> 1.6 * 6 = 9.6 (left: 9.6)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 / 5 = 1.6 (left: 1.6 8 8) -> 8 - 1.6 = 6.4 (left: 1.6 6 -> 1.6 * 6 = 9.6 (left: 9.6) -> 9.6 / 2 = 4.8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 4": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 * 8 = 24 (left: 8 24)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 * 8 = 24 (left: 8 24) -> 8 / 24 = 0.3333 (left: 0.3333)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 * 8 = 24 (left: 8 24) -> 8 / 24 = 0.3333 (left: 0.3333) -> There are no possible next steps with the input 0.3333 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "There is no possible next step with the input of -3, as there are no valid operations that can be performed with the current numbers."
                }
            },
            "Step 7": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 + 8 = 11 (left: 8 11) -> 8 - 11 = -3 (left: -3) -> There is no possible next step with the input of -3, as there are no valid operations that can be performed with the current numbers. -> No valid operations can be performed with the input of -3.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 + 8 = 11 (left: 8 11) -> 8 - 11 = -3 (left: -3) -> There is no possible next step with the input of -3, as there are no valid operations that can be performed with the current numbers. -> No valid operations can be performed with the input of -3. -> No valid operations can be performed with the input of -3.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "8 / 5 = 1.6 (left",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 - 3 = 5 (left: 5 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 - 3 = 5 (left: 5 8) -> 8 - 5 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 - 3 = 5 (left: 5 8) -> 8 - 5 = 3 (left: 3) -> There is only one possible next step: 3 + 3 = 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 4": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.67 (left: 2.67 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.67 (left: 2.67 8) -> Input: 3 9 27",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.67 (left: 2.67 8) -> Input: 3 9 27 -> 9 - 3 = 6 (left: 6 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "It seems like you didn't provide any numbers for the input. Could you please provide the numbers you would like to use?"
                }
            },
            "Step 7": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> Input: -> Please provide the numbers for the input. -> It seems like you didn't provide any numbers for the input. Could you please provide the numbers you would like to use? -> Without numbers provided, I can't generate possible next steps. Please provide the numbers you would like to use.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> Input: -> Please provide the numbers for the input. -> It seems like you didn't provide any numbers for the input. Could you please provide the numbers you would like to use? -> Without numbers provided, I can't generate possible next steps. Please provide the numbers you would like to use. -> Without numbers provided, I can't generate possible next steps. Please provide the numbers you would like to use.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "8 / 5 = 1.6 (left: 1.6 8 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 - 3 = 5 (left: 5 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 - 3 = 5 (left: 5 8) -> 5 * 8 = 40 (left: 40)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 - 3 = 5 (left: 5 8) -> 5 * 8 = 40 (left: 40) -> 40 / 2 = 20 (left: 2)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "8 8 13"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 4": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 + 8 = 11 (left: 8 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 + 8 = 11 (left: 8 11) -> 8 - 11 = -3 (left: -3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 + 8 = 11 (left: 8 11) -> 8 - 11 = -3 (left: -3) -> There is no possible next step with the input of -3, as there are no valid operations that can be performed with the current numbers.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "6 9"
                }
            },
            "Step 7": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.67 (left: 2.67 8) -> Input: 3 9 27 -> 9 - 3 = 6 (left: 6 9) -> 6 * 9 = 54 (left: 54)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "There are no possible next steps for the input 2.99 as it is already a single number and cannot be further manipulated using basic arithmetic operations."
                }
            },
            "Step 8": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.67 (left: 2.67 8) -> 8 / 2.67 = 2.99 (left: 2.99) -> There are no possible next steps for the input 2.99 as it is already a single number and cannot be further manipulated using basic arithmetic operations. -> There are no possible next steps for the input 2.99 as it is already a single number and cannot be further manipulated using basic arithmetic operations.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 8 8 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> Input:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> Input: -> Please provide a set of numbers to determine the possible next steps.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> Input: -> Please provide a set of numbers to determine the possible next steps. -> It appears that you did not provide a set of numbers to determine the possible next steps. Please provide a set of numbers so that I can generate the possible next steps for you.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 4": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.66667 (left: 2.66667 ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.66667 (left: 2.66667  -> 2.66667 - 2 = 0.66667 (left: 0.66667)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.66667 (left: 2.66667  -> 2.66667 - 2 = 0.66667 (left: 0.66667) -> There are no possible next steps with the input 0.66667 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "It seems like you didn't provide any numbers for the input. Could you please provide the numbers you would like to use?"
                }
            },
            "Step 7": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> Input: -> Please provide the numbers for the input. -> It seems like you didn't provide any numbers for the input. Could you please provide the numbers you would like to use? -> It looks like you didn't provide any numbers for the input. Could you please provide the numbers you would like to use?",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> Input: -> Please provide the numbers for the input. -> It seems like you didn't provide any numbers for the input. Could you please provide the numbers you would like to use? -> It looks like you didn't provide any numbers for the input. Could you please provide the numbers you would like to use? -> I'm sorry, but I can't provide possible next steps without any input numbers. Please provide the numbers you would like to use.",
                "Pruning": null
            }
        },
        "Input": "5 8 8 8",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "982": {
        "puzzle": "6 8 8 12",
        "Agent 0": {
            "Step 0": {
                "Step": "8 / 6 = 1.3333 (left: 1.3333 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "8 12 48"
                }
            },
            "Step 1": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 48 / 12 = 4 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 48 / 12 = 4 (left: -> 12 - 48 = -36 (left: -36)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 48 / 12 = 4 (left: -> 12 - 48 = -36 (left: -36) -> -36 / 2 = -18 (left: 2)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "2 8 12"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "8 12 48"
                }
            },
            "Step 4": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 * 4 = 48 (left: 48 48)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 * 4 = 48 (left: 48 48) -> 48 + 48 = 96",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 * 4 = 48 (left: 48 48) -> 48 + 48 = 96 -> 96 / 48 = 2 (left: 2 48)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "2 48"
                }
            },
            "Step 7": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 * 4 = 48 (left: 48 48) -> 48 + 48 = 96 -> 96 / 48 = 2 (left: 2 48) -> 48 - 2 = 46 (left: 46)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "There are no possible next steps for the input 3.33333 as it is a single number and not a mathematical expression."
                }
            },
            "Step 8": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 48 - 8 = 40 (left: 12 40) -> 40 / 12 = 3.33333 (left: 3.33333) -> There are no possible next steps for the input 3.33333 as it is a single number and not a mathematical expression. -> There are no possible next steps for the input 3.33333 as it is a single number and not a mathematical expression.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 - 6 = 2 (left: 2 8 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 1": {
                "Step": "6 + 8 = 14 (left: 8 8 12) -> 12 / 8 = 1.5 (left: 1.5 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 8 = 14 (left: 8 8 12) -> 12 / 8 = 1.5 (left: 1.5 8) -> 1.5 * 8 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 8 = 14 (left: 8 8 12) -> 12 / 8 = 1.5 (left: 1.5 8) -> 1.5 * 8 = 12 (left: 12) -> 12 * 2 = 24 (left: 8 24)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "8 12 48"
                }
            },
            "Step 4": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 48 - 8 = 40 (left: 12 40)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 48 - 8 = 40 (left: 12 40) -> 40 / 12 = 3.33333 (left: 3.33333)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 48 - 8 = 40 (left: 12 40) -> 40 / 12 = 3.33333 (left: 3.33333) -> There are no possible next steps for the input 3.33333 as it is a single number and not a mathematical expression.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "2 48"
                }
            },
            "Step 7": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 * 4 = 48 (left: 48 48) -> 48 + 48 = 96 -> 96 / 48 = 2 (left: 2 48) -> Input: 3 9 27",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 * 4 = 48 (left: 48 48) -> 48 + 48 = 96 -> 96 / 48 = 2 (left: 2 48) -> Input: 3 9 27 -> 27 - 9 = 18 (left: 9 18)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 8 = 14 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 1": {
                "Step": "6 + 8 = 14 (left: 8 8 12) -> 12 / 8 = 1.5 (left: 1.5 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 8 = 14 (left: 8 8 12) -> 12 / 8 = 1.5 (left: 1.5 8) -> 8 / 1.5 = 5.33333 (left: 5.33333)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 8 = 14 (left: 8 8 12) -> 12 / 8 = 1.5 (left: 1.5 8) -> 8 / 1.5 = 5.33333 (left: 5.33333) -> There are no possible next steps for the input 5.33333 as it is a single number and not an equation with operators.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "8 12 48"
                }
            },
            "Step 4": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 8 * 12 = 96 (left: 48 96)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 8 * 12 = 96 (left: 48 96) -> 48 - 96 = -48 (left: -48)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 8 * 12 = 96 (left: 48 96) -> 48 - 96 = -48 (left: -48) -> -48 / 2 = -24 (left: -24)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "There are no possible next steps with just the number 9.5."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "No possible next steps for the input \"2\"."
                }
            },
            "Step 7": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 * 8 = 96 (left: 96 48) -> 96 / 48 = 2 (left: 2) -> No possible next steps for the input \"2\". -> No possible next steps for the input \"2\".",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 * 8 = 96 (left: 96 48) -> 96 / 48 = 2 (left: 2) -> No possible next steps for the input \"2\". -> No possible next steps for the input \"2\". -> No possible next steps for the input \"2\".",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 + 8 = 14 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1.3333 8 12"
                }
            },
            "Step 1": {
                "Step": "8 / 6 = 1.3333 (left: 1.3333 8 12) -> 8 * 12 = 96 (left: 1.3333 96)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 / 6 = 1.3333 (left: 1.3333 8 12) -> 8 * 12 = 96 (left: 1.3333 96) -> 96 / 1.3333 = 71.9962 (left: 71.9962)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 / 6 = 1.3333 (left: 1.3333 8 12) -> 8 * 12 = 96 (left: 1.3333 96) -> 96 / 1.3333 = 71.9962 (left: 71.9962) -> There are no possible next steps with the given input of 71.9962.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "8 12 48"
                }
            },
            "Step 4": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 48 / 12 = 4 (left: 8 4)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 48 / 12 = 4 (left: 8 4) -> 8 / 4 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 48 / 12 = 4 (left: 8 4) -> 8 / 4 = 2 (left: 2) -> There is only one number, so no operations can be performed.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "There is only one number, so no operations can be performed."
                }
            },
            "Step 7": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 48 / 12 = 4 (left: 8 4) -> 8 / 4 = 2 (left: 2) -> There is only one number, so no operations can be performed. -> No possible next steps.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 48 / 12 = 4 (left: 8 4) -> 8 / 4 = 2 (left: 2) -> There is only one number, so no operations can be performed. -> No possible next steps. -> No possible next steps.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 * 8 = 48 (left: 8 12 48)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 1": {
                "Step": "6 + 8 = 14 (left: 8 8 12) -> 8 / 8 = 1 (left: 1 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 8 = 14 (left: 8 8 12) -> 8 / 8 = 1 (left: 1 12) -> 1 - 12 = -11 (left: -11 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 8 = 14 (left: 8 8 12) -> 8 / 8 = 1 (left: 1 12) -> 1 - 12 = -11 (left: -11 12) -> -11 - 12 = -23 (left: -23)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "8 12 48"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "8 12 48"
                }
            },
            "Step 4": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 8 * 12 = 96 (left: 48 96)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 8 * 12 = 96 (left: 48 96) -> 48 + 96 = 144 (left: 144)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 8 * 12 = 96 (left: 48 96) -> 48 + 96 = 144 (left: 144) -> There are no possible next steps as there are no other numbers provided to perform operations with.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps with just the number 9.5."
                }
            },
            "Step 7": {
                "Step": "6 + 8 = 14 (left: 8 8 12) -> 12 / 8 = 1.5 (left: 1.5 8) -> 1.5 + 8 = 9.5 (left: 9.5) -> There are no possible next steps with just the number 9.5. -> 9.5 / 2 = 4.75",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 8 = 14 (left: 8 8 12) -> 12 / 8 = 1.5 (left: 1.5 8) -> 1.5 + 8 = 9.5 (left: 9.5) -> There are no possible next steps with just the number 9.5. -> 9.5 / 2 = 4.75 -> 9.5 - 2 = 7.5 (left: 7.5 4.75)",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "6 * 8 = 48 (left: 8 12 48)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 1": {
                "Step": "6 + 8 = 14 (left: 8 8 12) -> 12 / 8 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 8 = 14 (left: 8 8 12) -> 12 / 8 =  -> 12 / 8 = 1.5",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 8 = 14 (left: 8 8 12) -> 12 / 8 =  -> 12 / 8 = 1.5 -> 12 - 8 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "8 12 48"
                },
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "8 24"
                }
            },
            "Step 4": {
                "Step": "6 + 8 = 14 (left: 8 8 12) -> 12 / 8 = 1.5 (left: 1.5 8) -> 1.5 * 8 = 12 (left: 12) -> 12 * 2 = 24 (left: 8 24) -> 8 * 3 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "8 8 12"
                }
            },
            "Step 5": {
                "Step": "6 + 8 = 14 (left: 8 8 12) -> 12 / 8 = 1.5 (left: 1.5 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 8 = 14 (left: 8 8 12) -> 12 / 8 = 1.5 (left: 1.5 12) -> 12 / 1.5 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no possible next steps for the input 3.33333 as it is a single number and not a mathematical expression."
                }
            },
            "Step 7": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 48 - 8 = 40 (left: 12 40) -> 40 / 12 = 3.33333 (left: 3.33333) -> There are no possible next steps for the input 3.33333 as it is a single number and not a mathematical expression. -> N/A",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "6 8"
                }
            },
            "Step 8": {
                "Step": "6 + 8 = 14 (left: 8 8 12) -> 8 / 8 = 1 (left: 1 12) -> 1 * 12 = 12 (left: 12) -> 12 / 2 = 6 (left: 6 8) -> 6 + 8 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "There are no possible next steps with just the number 4."
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "8 - 6 = 2 (left: 2 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 1": {
                "Step": "6 + 8 = 14 (left: 8 8 12) -> 12 / 8 = 1.5 (left: 1.5 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 8 = 14 (left: 8 8 12) -> 12 / 8 = 1.5 (left: 1.5 8) -> 1.5 + 8 = 9.5 (left: 9.5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 8 = 14 (left: 8 8 12) -> 12 / 8 = 1.5 (left: 1.5 8) -> 1.5 + 8 = 9.5 (left: 9.5) -> There are no possible next steps with just the number 9.5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "8 12 48"
                }
            },
            "Step 4": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 48 / 12 = 4 (left: 8 4)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 48 / 12 = 4 (left: 8 4) -> 8 - 4 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 48 / 12 = 4 (left: 8 4) -> 8 - 4 = 4 (left: 4) -> There are no possible next steps with just the number 4.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "8"
                }
            },
            "Step 7": {
                "Step": "6 + 8 = 14 (left: 8 8 12) -> 12 / 8 = 1.5 (left: 1.5 12) -> 12 / 1.5 = 8 (left: 8) -> 8 - 8 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "There is only one number, so no operations can be performed."
                }
            },
            "Step 8": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 48 / 12 = 4 (left: 8 4) -> 8 / 4 = 2 (left: 2) -> There is only one number, so no operations can be performed. -> No possible next steps.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "12 + 6 = 18 (left: 8 8 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "8 12 48"
                }
            },
            "Step 1": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 - 8 = 4 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 - 8 = 4 (left: -> 12 * 8 = 96 (left: 8 96)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 - 8 = 4 (left: -> 12 * 8 = 96 (left: 8 96) -> 8 + 96 = 104 (left: 104)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "1.33 8 12"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "8 12 48"
                }
            },
            "Step 4": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 * 8 = 96 (left: 96 48)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 * 8 = 96 (left: 96 48) -> 96 / 48 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 * 8 = 96 (left: 96 48) -> 96 / 48 = 2 (left: 2) -> No possible next steps for the input \"2\".",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "There are no possible next steps with just the number 4."
                }
            },
            "Step 7": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 48 / 12 = 4 (left: 8 4) -> 8 - 4 = 4 (left: 4) -> There are no possible next steps with just the number 4. -> There are no possible next steps with just the number 4.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 48 / 12 = 4 (left: 8 4) -> 8 - 4 = 4 (left: 4) -> There are no possible next steps with just the number 4. -> There are no possible next steps with just the number 4. -> There are no possible next steps with just the number 4.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "8 / 6 = 1.33 (left: 1.33 8 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 1": {
                "Step": "6 + 8 = 14 (left: 8 8 12) -> 8 / 8 = 1 (left: 1 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 8 = 14 (left: 8 8 12) -> 8 / 8 = 1 (left: 1 12) -> 1 * 12 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 8 = 14 (left: 8 8 12) -> 8 / 8 = 1 (left: 1 12) -> 1 * 12 = 12 (left: 12) -> 12 / 2 = 6 (left: 6 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "8 12 48"
                }
            },
            "Step 4": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 - 8 = 4 (left: 4 8 48)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 - 8 = 4 (left: 4 8 48) -> 48 / 4 = 12 (left: 8 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 - 8 = 4 (left: 4 8 48) -> 48 / 4 = 12 (left: 8 12) -> 8 - 12 = -4 (left: -4)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "There are no possible next steps for the input 5.33333 as it is a single number and not an equation with operators."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "There are no possible next steps as there are no other numbers provided to perform operations with."
                }
            },
            "Step 7": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 8 * 12 = 96 (left: 48 96) -> 48 + 96 = 144 (left: 144) -> There are no possible next steps as there are no other numbers provided to perform operations with. -> None",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "There are no possible next steps with the given input of 71.9962."
                }
            },
            "Step 8": {
                "Step": "8 / 6 = 1.3333 (left: 1.3333 8 12) -> 8 * 12 = 96 (left: 1.3333 96) -> 96 / 1.3333 = 71.9962 (left: 71.9962) -> There are no possible next steps with the given input of 71.9962. -> There are no possible next steps with the given input of 71.9962.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "6 + 8 = 14 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1.3333 8 12"
                }
            },
            "Step 1": {
                "Step": "8 / 6 = 1.3333 (left: 1.3333 8 12) -> 1.3333 * 12 = 16 (left: 8 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 / 6 = 1.3333 (left: 1.3333 8 12) -> 1.3333 * 12 = 16 (left: 8 16) -> 16 / 8 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 / 6 = 1.3333 (left: 1.3333 8 12) -> 1.3333 * 12 = 16 (left: 8 16) -> 16 / 8 = 2 (left: 2) -> 2 + 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "2 8 12"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "8 24"
                }
            },
            "Step 4": {
                "Step": "6 + 8 = 14 (left: 8 8 12) -> 12 / 8 = 1.5 (left: 1.5 8) -> 1.5 * 8 = 12 (left: 12) -> 12 * 2 = 24 (left: 8 24) -> 24 - 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "1.33 8 12"
                }
            },
            "Step 5": {
                "Step": "8 / 6 = 1.33 (left: 1.33 8 12) -> 12 - 1.33 = 10.67 (left: 8 10.67)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 / 6 = 1.33 (left: 1.33 8 12) -> 12 - 1.33 = 10.67 (left: 8 10.67) -> 8 / 10.67 = 0.75 (left: 0.75)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "There are no possible next steps as there are no other numbers provided to perform operations with."
                }
            },
            "Step 7": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 8 * 12 = 96 (left: 48 96) -> 48 + 96 = 144 (left: 144) -> There are no possible next steps as there are no other numbers provided to perform operations with. -> No possible next steps.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 8 * 12 = 96 (left: 48 96) -> 48 + 96 = 144 (left: 144) -> There are no possible next steps as there are no other numbers provided to perform operations with. -> No possible next steps. -> There are no possible next steps with the numbers provided.",
                "Pruning": null
            }
        },
        "Input": "6 8 8 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "983": {
        "puzzle": "2 3 4 9",
        "Agent 0": {
            "Step 0": {
                "Step": "4 * 2 = 8 (left: 3 8 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 1": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 * 2) * (9 / 3) = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 * 3 = 6 (left: 4 6 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 1": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 9 - 4 = 5 (left: 5 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 9 - 4 = 5 (left: 5 6) -> 5 / 6 = 0.8333333333333334 (left: 0.8333333333333334)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 9 - 4 = 5 (left: 5 6) -> 5 / 6 = 0.8333333333333334 (left: 0.8333333333333334) -> There are no possible next steps with the input of 0.8333333333333334."
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 4 5 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 1": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 6 - 4 = 2 (left: 2 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 6 - 4 = 2 (left: 2 9) -> 9 / 2 = 4.5 (left: 2 4.5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 6 - 4 = 2 (left: 2 9) -> 9 / 2 = 4.5 (left: 2 4.5) -> 2 + 4.5 = 6.5 (left: 6.5)"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 2 3 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 1": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 3 + 8 = 11 (left: 8 9 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 3 + 8 = 11 (left: 8 9 11) -> 8 + 9 = 17 (left: 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 3 + 8 = 11 (left: 8 9 11) -> 8 + 9 = 17 (left: 11) -> There are no possible next steps with the input \"11\"."
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 2 3 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 1": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 4 + 6 = 10 (left: 9 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 4 + 6 = 10 (left: 9 10) -> 10 / 9 = 1.1111 (left: 1.1111)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 4 + 6 = 10 (left: 9 10) -> 10 / 9 = 1.1111 (left: 1.1111) -> 1.1111 + 1 = 2.1111"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 2 3 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 1": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 9 / 4 = 2.25 (left: 2.25 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 9 / 4 = 2.25 (left: 2.25 6) -> 6 - 2.25 = 3.75 (left: 3.75)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 9 / 4 = 2.25 (left: 2.25 6) -> 6 - 2.25 = 3.75 (left: 3.75) -> There are no possible next steps for the input 3.75."
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 4 5 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 1": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> Input: 5 10",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> Input: 5 10 -> 5 + 10 = 15 (left: 10 15)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> Input: 5 10 -> 5 + 10 = 15 (left: 10 15) -> 10 - 15 = -5 (left: -5)"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 4 5 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 1": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 8 - 3 = 5 (left: 5 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 8 - 3 = 5 (left: 5 9) -> Input: 3 7 2",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 8 - 3 = 5 (left: 5 9) -> Input: 3 7 2 -> 7 - 3 = 4 (left: 4 2)"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 4 5 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 1": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 9 - 4 = 5 (left: 5 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 9 - 4 = 5 (left: 5 6) -> 5 * 6 = 30 (left: 30)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 9 - 4 = 5 (left: 5 6) -> 5 * 6 = 30 (left: 30) -> 30 / 2 = 15"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "9 - 2 = 7 (left: 3 4 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 1": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 4 + 6 = 10 (left: 9 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 4 + 6 = 10 (left: 9 10) -> 10 / 9 = 1.1111111111111112 (left: 1.1111111111111112)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 4 + 6 = 10 (left: 9 10) -> 10 / 9 = 1.1111111111111112 (left: 1.1111111111111112) -> 1.1111111111111112 + 1 = 2.1111111111111112"
            }
        },
        "Input": "2 3 4 9",
        "Verifications": [
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "984": {
        "puzzle": "2 6 7 11",
        "Agent 0": {
            "Step 0": {
                "Step": "2 * 6 = 12 (left: 7 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "2 6 18"
                }
            },
            "Step 1": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 6 * 2 = 12 (left: 12 18)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 6 * 2 = 12 (left: 12 18) -> 12 + 18 = 30 (left: 30)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 6 * 2 = 12 (left: 12 18) -> 12 + 18 = 30 (left: 30) -> There are no possible next steps with the input 30.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "7 11 12"
                }
            },
            "Step 4": {
                "Step": "2 * 6 = 12 (left: 7 11 12) -> ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 * 6 = 12 (left: 7 11 12) ->  -> Please provide a set of numbers to continue the calculation.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 6 = 12 (left: 7 11 12) ->  -> Please provide a set of numbers to continue the calculation. -> 10 - 8 = 2 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "6 * 4 = 24.66668"
                }
            },
            "Step 7": {
                "Step": "2 * 6 = 12 (left: 7 11 12) -> 7 * 11 = 77 (left: 77 12) -> 77 / 12 = 6.41667 (left: 6.41667) -> 6 * 4 = 24.66668 -> 6 - 4 = 2 (left: 2 24.66668)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 6 = 12 (left: 7 11 12) -> 7 * 11 = 77 (left: 77 12) -> 77 / 12 = 6.41667 (left: 6.41667) -> 6 * 4 = 24.66668 -> 6 - 4 = 2 (left: 2 24.66668) -> 2 + 24.66668 = 26.66668",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 * 7 = 42 (left: 2 42 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 5 "
                }
            },
            "Step 1": {
                "Step": "11 - 6 = 5 (left: 2 5  -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 6 = 5 (left: 2 5  -> 5 / 2 = 2.5 (left: 2.5) -> There are no possible next steps with the input 2.5.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 6 = 5 (left: 2 5  -> 5 / 2 = 2.5 (left: 2.5) -> There are no possible next steps with the input 2.5. -> There are no possible next steps with the input 2.5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "7 11 12"
                }
            },
            "Step 4": {
                "Step": "2 * 6 = 12 (left: 7 11 12) -> 12 / 7 = 1.71 (left: 1.71 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 * 6 = 12 (left: 7 11 12) -> 12 / 7 = 1.71 (left: 1.71 12) -> 1.71 + 12 = 13.71 (left: 13.71)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 6 = 12 (left: 7 11 12) -> 12 / 7 = 1.71 (left: 1.71 12) -> 1.71 + 12 = 13.71 (left: 13.71) -> None - 13.71 is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "There are no possible next steps with the input 17."
                }
            },
            "Step 7": {
                "Step": "7 * 2 = 14 (left: 6 11 14) -> 14 - 11 = 3 (left: 3 14) -> 3 + 14 = 17 (left: 17) -> There are no possible next steps with the input 17. -> None",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "Please provide more than one number to continue with the calculations."
                }
            },
            "Step 8": {
                "Step": "11 - 6 = 5 (left: 2 5  -> 9 - 4 = 5 (left: 5) -> There are no possible next steps with just one number. -> Please provide more than one number to continue with the calculations. -> 5 * 7 = 35 (left: 3 35 9)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 2 8 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "2 6 18"
                }
            },
            "Step 1": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 6 * 18 = 108 (left: 2 108)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 6 * 18 = 108 (left: 2 108) -> 108 - 2 = 106 (left: 2 106)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 6 * 18 = 108 (left: 2 108) -> 108 - 2 = 106 (left: 2 106) -> 106 - 2 = 104 (left: 104)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "7 11 12"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "7 11 12"
                }
            },
            "Step 4": {
                "Step": "2 * 6 = 12 (left: 7 11 12) -> 7 + 11 = 18 (left: 12 18)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 * 6 = 12 (left: 7 11 12) -> 7 + 11 = 18 (left: 12 18) -> 12 - 18 = -6 (left: -6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 6 = 12 (left: 7 11 12) -> 7 + 11 = 18 (left: 12 18) -> 12 - 18 = -6 (left: -6) -> -6 * 8 = -48 (left: -48)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There are no possible next steps with the input 30."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "None - 13.71 is already a single number."
                }
            },
            "Step 7": {
                "Step": "2 * 6 = 12 (left: 7 11 12) -> 12 / 7 = 1.71 (left: 1.71 12) -> 1.71 + 12 = 13.71 (left: 13.71) -> None - 13.71 is already a single number. -> None - 13.71 is already a single number.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 6 = 12 (left: 7 11 12) -> 12 / 7 = 1.71 (left: 1.71 12) -> 1.71 + 12 = 13.71 (left: 13.71) -> None - 13.71 is already a single number. -> None - 13.71 is already a single number. -> None - 13.71 is already a single number.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 - 6 = 1 (left: 1 6 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "2 6 18"
                }
            },
            "Step 1": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 6 * 2 = 12 (left: 12 18)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 6 * 2 = 12 (left: 12 18) -> 18 - 12 = 6 (left: 6 18)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 6 * 2 = 12 (left: 12 18) -> 18 - 12 = 6 (left: 6 18) -> 10 - 4 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "2 42 11"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "6 11 14"
                }
            },
            "Step 4": {
                "Step": "7 * 2 = 14 (left: 6 11 14) -> 14 / 6 = ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 * 2 = 14 (left: 6 11 14) -> 14 / 6 =  -> 14 / 6 = 2.33",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 2 = 14 (left: 6 11 14) -> 14 / 6 =  -> 14 / 6 = 2.33 -> Input: 14 * 6 = 84",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps with the input 30."
                }
            },
            "Step 7": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 6 * 2 = 12 (left: 12 18) -> 12 + 18 = 30 (left: 30) -> There are no possible next steps with the input 30. -> There are no possible next steps with the input 30.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 6 * 2 = 12 (left: 12 18) -> 12 + 18 = 30 (left: 30) -> There are no possible next steps with the input 30. -> There are no possible next steps with the input 30. -> There are no possible next steps with the input 30.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 6 = 8 (left: 7 8 11)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 5 "
                }
            },
            "Step 1": {
                "Step": "11 - 6 = 5 (left: 2 5  -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 6 = 5 (left: 2 5  -> 5 / 2 = 2.5 (left: 2.5) -> There are no possible next steps with the input 2.5.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 6 = 5 (left: 2 5  -> 5 / 2 = 2.5 (left: 2.5) -> There are no possible next steps with the input 2.5. -> There are no possible next steps with the input 2.5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "6 11 14"
                }
            },
            "Step 4": {
                "Step": "7 * 2 = 14 (left: 6 11 14) -> 11 - 6 = 5 (left: 5 14)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 * 2 = 14 (left: 6 11 14) -> 11 - 6 = 5 (left: 5 14) -> 14 - 5 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 2 = 14 (left: 6 11 14) -> 11 - 6 = 5 (left: 5 14) -> 14 - 5 = 9 (left: 9) -> 8 + 9 = 17 (left: 9)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There are no possible next steps with the input 30."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "It seems like there might have been a mistake in the input. Can you please provide the correct input?"
                }
            },
            "Step 7": {
                "Step": "2 * 6 = 12 (left: 7 11 12) -> 11 + 12 = 23 (left: 7 23) -> Possible -> It seems like there might have been a mistake in the input. Can you please provide the correct input? -> I'm sorry, I can't provide possible next steps without a valid input. Please enter a valid set of numbers for me to calculate possible next steps.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 6 = 12 (left: 7 11 12) -> 11 + 12 = 23 (left: 7 23) -> Possible -> It seems like there might have been a mistake in the input. Can you please provide the correct input? -> I'm sorry, I can't provide possible next steps without a valid input. Please enter a valid set of numbers for me to calculate possible next steps. -> I'm sorry, I can't provide possible next steps without a valid input. Please enter a valid set of numbers for me to calculate possible next steps.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "11 - 2 = 9 (left: 2 6 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "2 6 18"
                }
            },
            "Step 1": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 6 - 2 = 4 (left: 4 18)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 6 - 2 = 4 (left: 4 18) -> 5 + 10 = 15 (left: 15 20)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 6 - 2 = 4 (left: 4 18) -> 5 + 10 = 15 (left: 15 20) -> 20 + 15 = 35 (left: 35)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "7 11 12"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "7 11 12"
                }
            },
            "Step 4": {
                "Step": "2 * 6 = 12 (left: 7 11 12) -> 11 / 7 = 1.57 (left: 1.57 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 * 6 = 12 (left: 7 11 12) -> 11 / 7 = 1.57 (left: 1.57 12) -> 12 / 1.57 = 7.6433 (left: 7.6433)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 6 = 12 (left: 7 11 12) -> 11 / 7 = 1.57 (left: 1.57 12) -> 12 / 1.57 = 7.6433 (left: 7.6433) -> 7.6433 + 2 = 9.6433",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "There are no possible next steps with the input 30."
                }
            },
            "Step 7": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 6 * 2 = 12 (left: 12 18) -> 12 + 18 = 30 (left: 30) -> There are no possible next steps with the input 30. -> There are no possible next steps with the input 30.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 6 * 2 = 12 (left: 12 18) -> 12 + 18 = 30 (left: 30) -> There are no possible next steps with the input 30. -> There are no possible next steps with the input 30. -> There are no possible next steps with the input 30.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "7 + 11 = 18 (left: 2 6 18)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 5 "
                }
            },
            "Step 1": {
                "Step": "11 - 6 = 5 (left: 2 5  -> 2 * 5 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 6 = 5 (left: 2 5  -> 2 * 5 = 10 (left: 10) -> 10 * 2 = 20 (left: 20)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 6 = 5 (left: 2 5  -> 2 * 5 = 10 (left: 10) -> 10 * 2 = 20 (left: 20) -> 20 + 8 = 28 (left: 8)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "6 11 14"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "7 11 12"
                }
            },
            "Step 4": {
                "Step": "2 * 6 = 12 (left: 7 11 12) -> 12 - 7 = 5 (left: 5 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 * 6 = 12 (left: 7 11 12) -> 12 - 7 = 5 (left: 5 12) -> 5 - 12 = -7 (left: -7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 6 = 12 (left: 7 11 12) -> 12 - 7 = 5 (left: 5 12) -> 5 - 12 = -7 (left: -7) -> -7",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There are no possible next steps with the input 30."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "There are no possible next steps with the input 30."
                }
            },
            "Step 7": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 6 * 2 = 12 (left: 12 18) -> 12 + 18 = 30 (left: 30) -> There are no possible next steps with the input 30. -> There are no possible next steps with the input 30.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 6 * 2 = 12 (left: 12 18) -> 12 + 18 = 30 (left: 30) -> There are no possible next steps with the input 30. -> There are no possible next steps with the input 30. -> There are no possible next steps with the input 30.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "7 * 2 = 14 (left: 6 11 14)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 5 "
                }
            },
            "Step 1": {
                "Step": "11 - 6 = 5 (left: 2 5  -> 9 - 4 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 6 = 5 (left: 2 5  -> 9 - 4 = 5 (left: 5) -> There are no possible next steps with just one number.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 6 = 5 (left: 2 5  -> 9 - 4 = 5 (left: 5) -> There are no possible next steps with just one number. -> Please provide more than one number to continue with the calculations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "7 11 12"
                }
            },
            "Step 4": {
                "Step": "2 * 6 = 12 (left: 7 11 12) -> 11 + 12 = 23 (left: 7 23)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 * 6 = 12 (left: 7 11 12) -> 11 + 12 = 23 (left: 7 23) -> Possible",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 6 = 12 (left: 7 11 12) -> 11 + 12 = 23 (left: 7 23) -> Possible -> It seems like there might have been a mistake in the input. Can you please provide the correct input?",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "It seems like there might have been a mistake in the input. Can you please provide the correct input?"
                }
            },
            "Step 7": {
                "Step": "2 * 6 = 12 (left: 7 11 12) -> 11 + 12 = 23 (left: 7 23) -> Possible -> It seems like there might have been a mistake in the input. Can you please provide the correct input? -> I'm sorry, it looks like there was a mistake in the input. Please provide the correct numbers to continue.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 6 = 12 (left: 7 11 12) -> 11 + 12 = 23 (left: 7 23) -> Possible -> It seems like there might have been a mistake in the input. Can you please provide the correct input? -> I'm sorry, it looks like there was a mistake in the input. Please provide the correct numbers to continue. -> I'm sorry, it looks like there was a mistake in the input. Please provide the correct numbers to continue.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "2 + 6 = 8 (left: 7 8 11)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "2 6 18"
                }
            },
            "Step 1": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 18 - 6 = 12 (left: 2 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 18 - 6 = 12 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 18 - 6 = 12 (left: 2 12) -> 12 / 2 = 6 (left: 6) -> 6 - 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "7 11 12"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "7 11 12"
                }
            },
            "Step 4": {
                "Step": "2 * 6 = 12 (left: 7 11 12) -> 7 * 11 = 77 (left: 77 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 * 6 = 12 (left: 7 11 12) -> 7 * 11 = 77 (left: 77 12) -> 77 / 12 = 6.41667 (left: 6.41667)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 6 = 12 (left: 7 11 12) -> 7 * 11 = 77 (left: 77 12) -> 77 / 12 = 6.41667 (left: 6.41667) -> 6 * 4 = 24.66668",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "6 * 4 = 24.66668"
                }
            },
            "Step 7": {
                "Step": "2 * 6 = 12 (left: 7 11 12) -> 7 * 11 = 77 (left: 77 12) -> 77 / 12 = 6.41667 (left: 6.41667) -> 6 * 4 = 24.66668 -> 6 / 4 = 1.5 (left: 1.5 24.66668)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 6 = 12 (left: 7 11 12) -> 7 * 11 = 77 (left: 77 12) -> 77 / 12 = 6.41667 (left: 6.41667) -> 6 * 4 = 24.66668 -> 6 / 4 = 1.5 (left: 1.5 24.66668) -> 24.66668 - 1.5 = 23.16668 (left: 23.16668)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "It seems like there might have been a mistake in the input. Can you please provide the correct input?"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "11 - 6 = 5 (left: 2 5 ",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "2 6 18"
                }
            },
            "Step 1": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 2 + 6 = 8 (left: 8 18)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 2 + 6 = 8 (left: 8 18) -> 8 + 18 = 26 (left: 26)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 2 + 6 = 8 (left: 8 18) -> 8 + 18 = 26 (left: 26) -> There is only one possible step:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "6 11 14"
                }
            },
            "Step 4": {
                "Step": "7 * 2 = 14 (left: 6 11 14) -> 14 - 11 = 3 (left: 3 14)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 * 2 = 14 (left: 6 11 14) -> 14 - 11 = 3 (left: 3 14) -> 3 + 14 = 17 (left: 17)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 2 = 14 (left: 6 11 14) -> 14 - 11 = 3 (left: 3 14) -> 3 + 14 = 17 (left: 17) -> There are no possible next steps with the input 17.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "7.6433 + 2 = 9.6433"
                }
            },
            "Step 7": {
                "Step": "2 * 6 = 12 (left: 7 11 12) -> 11 / 7 = 1.57 (left: 1.57 12) -> 12 / 1.57 = 7.6433 (left: 7.6433) -> 7.6433 + 2 = 9.6433 -> 7.6433 / 2 = 3.82165",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 6 = 12 (left: 7 11 12) -> 11 / 7 = 1.57 (left: 1.57 12) -> 12 / 1.57 = 7.6433 (left: 7.6433) -> 7.6433 + 2 = 9.6433 -> 7.6433 / 2 = 3.82165 -> 2 / 7.6433 = 0.261754",
                "Pruning": null
            }
        },
        "Input": "2 6 7 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "985": {
        "puzzle": "5 9 12 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 5 = 7 (left: 7 9 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9 12"
                }
            },
            "Step 1": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12) -> 12 / 5 = 2.4 (left: 2.4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12) -> 12 / 5 = 2.4 (left: 2.4) -> 8 / 2.4 = 3.3333333333333335 (left: 3.3333333333333335, 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "4 9 12"
                }
            },
            "Step 4": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 * 12 = 108 (left: 4 108)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 * 12 = 108 (left: 4 108) -> 4 * 108 = 432 (left: 108 432)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 * 12 = 108 (left: 4 108) -> 4 * 108 = 432 (left: 108 432) -> 108 * 432 = 46656 (left: 46656)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "There are no possible next steps with the input of 60."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "3.3333333333333335, 8"
                }
            },
            "Step 7": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12) -> 12 / 5 = 2.4 (left: 2.4) -> 8 / 2.4 = 3.3333333333333335 (left: 3.3333333333333335, 8) -> 3.3333333333333335 * 8 = 26.666666666666668 (left: 8 26.666666666666668)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12) -> 12 / 5 = 2.4 (left: 2.4) -> 8 / 2.4 = 3.3333333333333335 (left: 3.3333333333333335, 8) -> 3.3333333333333335 * 8 = 26.666666666666668 (left: 8 26.666666666666668) -> 26",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "None. The input sequence is complete with only one number."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 - 5 = 4 (left: 4 12 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9 12"
                }
            },
            "Step 1": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 4 + 9 = 13 (left: 13 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 4 + 9 = 13 (left: 13 12) -> 13 * 12 = 156 (left: 156)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 4 + 9 = 13 (left: 13 12) -> 13 * 12 = 156 (left: 156) -> 1 + 56 = 57 (left: 57)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "12 12 45"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "3.3333333333333335, 8"
                }
            },
            "Step 4": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12) -> 12 / 5 = 2.4 (left: 2.4) -> 8 / 2.4 = 3.3333333333333335 (left: 3.3333333333333335, 8) -> 3.3333333333333335 * 8 = 26.666666666666668 (left: 8 26.666666666666668)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12) -> 12 / 5 = 2.4 (left: 2.4) -> 8 / 2.4 = 3.3333333333333335 (left: 3.3333333333333335, 8) -> 3.3333333333333335 * 8 = 26.666666666666668 (left: 8 26.666666666666668) -> 8 / 26.666666666666668 = 0.3 (left: 26.666",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "7 12 12"
                }
            },
            "Step 6": {
                "Step": "12 - 5 = 7 (left: 7 12 12) -> 12 - 7 = 5 (left: 5 12)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "3.3333333333333335, 8"
                }
            },
            "Step 7": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12) -> 12 / 5 = 2.4 (left: 2.4) -> 8 / 2.4 = 3.3333333333333335 (left: 3.3333333333333335, 8) -> 8 - 3.333333333",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12) -> 12 / 5 = 2.4 (left: 2.4) -> 8 / 2.4 = 3.3333333333333335 (left: 3.3333333333333335, 8) -> 8 - 3.333333333 -> 8 - 3.333333333 = 4.666666667",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 9 = 3 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "12 12 14"
                }
            },
            "Step 1": {
                "Step": "5 + 9 = 14 (left: 12 12 14) -> 14 - 12 = 2 (left: 2 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 9 = 14 (left: 12 12 14) -> 14 - 12 = 2 (left: 2 14) -> 2 + 14 = 16 (left: 16)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 9 = 14 (left: 12 12 14) -> 14 - 12 = 2 (left: 2 14) -> 2 + 14 = 16 (left: 16) -> None. The input sequence is complete with only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "4 9 12"
                }
            },
            "Step 4": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 12 - 4 = 8 (left: 8 9 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 12 - 4 = 8 (left: 8 9 12) -> 12 - 9 = 3 (left: 8 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 12 - 4 = 8 (left: 8 9 12) -> 12 - 9 = 3 (left: 8 3) -> 8 / 3 = 2.66667 (left: 2.66667)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "None. The input sequence is complete with only one number."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "27 = 12"
                }
            },
            "Step 7": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 12 / 4 = 3 (left: 9 3) -> 9 + 3 = 12 -> 9 * 3 = 27 (left: 27 = 12) -> 27 * 12 = 324 (left: 324 12)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 12 / 4 = 3 (left: 9 3) -> 9 + 3 = 12 -> 9 * 3 = 27 (left: 27 = 12) -> 27 * 12 = 324 (left: 324 12) -> 324 - 12 = 312 (left: 312)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "There are no possible next steps with the input of 60."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 5 = 4 (left: 4 9 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9 12"
                }
            },
            "Step 1": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12) -> 5 * 12 = 60 (left: 60)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12) -> 5 * 12 = 60 (left: 60) -> There are no possible next steps with the input of 60.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "4 9 12"
                }
            },
            "Step 4": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12) -> 5 + 12 = 17 (left: 17)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12) -> 5 + 12 = 17 (left: 17) -> 17 / 8 = 2.125 (left: 2.125 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "3.3333333333333335, 8"
                }
            },
            "Step 7": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12) -> 12 / 5 = 2.4 (left: 2.4) -> 8 / 2.4 = 3.3333333333333335 (left: 3.3333333333333335, 8) -> 8 / 3.3333333333333335 = 2.4 (left: 2.4 8)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12) -> 12 / 5 = 2.4 (left: 2.4) -> 8 / 2.4 = 3.3333333333333335 (left: 3.3333333333333335, 8) -> 8 / 3.3333333333333335 = 2.4 (left: 2.4 8) -> 8 - 2.4 = 5.6 (left: 5.6)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "There are no possible next steps with the input 27."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 * 9 = 45 (left: 12 12 45)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9 12"
                }
            },
            "Step 1": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 12 - 4 = 8 (left: 9 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 12 - 4 = 8 (left: 9 8) -> 9 - 8 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 12 - 4 = 8 (left: 9 8) -> 9 - 8 = 1 (left: 1) -> There are no possible next steps with just one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "4 9 12"
                }
            },
            "Step 4": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 / 4 = 2.25 (left: 2.25 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 / 4 = 2.25 (left: 2.25 12) -> 2.25 * 12 = 27 (left: 27)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 / 4 = 2.25 (left: 2.25 12) -> 2.25 * 12 = 27 (left: 27) -> There are no possible next steps with the input 27.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "3.3333333333333335, 8"
                }
            },
            "Step 7": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12) -> 12 / 5 = 2.4 (left: 2.4) -> 8 / 2.4 = 3.3333333333333335 (left: 3.3333333333333335, 8) -> 8 / 3.3333333333333335 = 2.4",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12) -> 12 / 5 = 2.4 (left: 2.4) -> 8 / 2.4 = 3.3333333333333335 (left: 3.3333333333333335, 8) -> 8 / 3.3333333333333335 = 2.4 -> 8 + 3.3333333333333335 = 11.333333333333334 (left: 11.333333",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "There are no possible next steps with the input of 60."
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "9 / 5 = 1.8 (left: 1.8 12 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "12 12 14"
                }
            },
            "Step 1": {
                "Step": "5 + 9 = 14 (left: 12 12 14) -> 12 - 12 = 0 (left: 0 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 9 = 14 (left: 12 12 14) -> 12 - 12 = 0 (left: 0 14) -> 5 * 7 = 35 (left: 3 35)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 9 = 14 (left: 12 12 14) -> 12 - 12 = 0 (left: 0 14) -> 5 * 7 = 35 (left: 3 35) -> 3 + 35 = 38 (left: 38)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": ""
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "4 9 12"
                }
            },
            "Step 4": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 12 / 4 = 3 (left: 9 3)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 12 / 4 = 3 (left: 9 3) -> 9 + 3 = 12",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 12 / 4 = 3 (left: 9 3) -> 9 + 3 = 12 -> 9 * 3 = 27 (left: 27 = 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "3.3333333333333335, 8"
                }
            },
            "Step 7": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12) -> 12 / 5 = 2.4 (left: 2.4) -> 8 / 2.4 = 3.3333333333333335 (left: 3.3333333333333335, 8) -> 3.3333333333333335 + 8 = 11.333333333333334 (left: 8, 11.333333333333334)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12) -> 12 / 5 = 2.4 (left: 2.4) -> 8 / 2.4 = 3.3333333333333335 (left: 3.3333333333333335, 8) -> 3.3333333333333335 + 8 = 11.333333333333334 (left: 8, 11.333333333333334) -> 8 * 11.333333333333334 = 90.66666666666667 (",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "5 + 9 = 14 (left: 12 12 14)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "7 12 12"
                }
            },
            "Step 1": {
                "Step": "12 - 5 = 7 (left: 7 12 12) -> 12 - 7 = 5 (left: 5 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 5 = 7 (left: 7 12 12) -> 12 - 7 = 5 (left: 5 12) -> 5 - 12 = -7 (left: -7)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 5 = 7 (left: 7 12 12) -> 12 - 7 = 5 (left: 5 12) -> 5 - 12 = -7 (left: -7) -> There are no possible next steps with the input of -7.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "4 9 12"
                }
            },
            "Step 4": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12) -> 5 - 12 = -7 (left: -7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12) -> 5 - 12 = -7 (left: -7) -> There are no possible next steps with the input -7.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "27 = 12"
                }
            },
            "Step 7": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 12 / 4 = 3 (left: 9 3) -> 9 + 3 = 12 -> 9 * 3 = 27 (left: 27 = 12) -> 27 + 12 = 39 (left: 39 = 12)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 12 / 4 = 3 (left: 9 3) -> 9 + 3 = 12 -> 9 * 3 = 27 (left: 27 = 12) -> 27 + 12 = 39 (left: 39 = 12) -> 39 / 12 = 3.25 (left: 3.25)  ",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "3.3333333333333335, 8"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "5 + 9 = 14 (left: 12 14 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "7 12 12"
                }
            },
            "Step 1": {
                "Step": "12 - 5 = 7 (left: 7 12 12) -> 7 * 12 = 84 (left: 12 84)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 5 = 7 (left: 7 12 12) -> 7 * 12 = 84 (left: 12 84) -> 12 * 7 = 84 (left: 84)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 5 = 7 (left: 7 12 12) -> 7 * 12 = 84 (left: 12 84) -> 12 * 7 = 84 (left: 84) -> 8 + 4 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "4 9 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "4 9 12"
                }
            },
            "Step 4": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 4 + 9 = 13 (left: 9 12 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 4 + 9 = 13 (left: 9 12 13) -> 12 / 9 = 1.33 (left: 1.33 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 4 + 9 = 13 (left: 9 12 13) -> 12 / 9 = 1.33 (left: 1.33 13) -> 1.33 + 13 = 14.33 (left: 14.33)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "There are no possible next steps with the input of -7."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "3.3333333333333335, 8"
                }
            },
            "Step 7": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12) -> 12 / 5 = 2.4 (left: 2.4) -> 8 / 2.4 = 3.3333333333333335 (left: 3.3333333333333335, 8) -> 3.3333333333333335 * 8 = 26.666666666666668 (left: 8 26.666666666666668)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12) -> 12 / 5 = 2.4 (left: 2.4) -> 8 / 2.4 = 3.3333333333333335 (left: 3.3333333333333335, 8) -> 3.3333333333333335 * 8 = 26.666666666666668 (left: 8 26.666666666666668) -> 8 * 3.333333333333333 = 26.666666666666668 (left: 8 26.666666666666668)",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "12 - 5 = 7 (left: 7 12 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9 12"
                }
            },
            "Step 1": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 / 4 = 2.25 (left: 2.25 9 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 / 4 = 2.25 (left: 2.25 9 12) -> 9 - 2.25 = 6.75 (left: 6.75 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 / 4 = 2.25 (left: 2.25 9 12) -> 9 - 2.25 = 6.75 (left: 6.75 12) -> 12 - 6.75 = 5.25 (left: 5.25)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": ""
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "4 9 12"
                }
            },
            "Step 4": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12) -> 5 - 12 = -7 (left: -7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12) -> 5 - 12 = -7 (left: -7) -> -7 * 8 = -56 (left: -56)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "3.3333333333333335, 8"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "3.3333333333333335, 8"
                }
            },
            "Step 7": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12) -> 12 / 5 = 2.4 (left: 2.4) -> 8 / 2.4 = 3.3333333333333335 (left: 3.3333333333333335, 8) -> 3.3333333333333335 + 8 = 11.333333333333334 (left: 8 11.333333333333334)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12) -> 12 / 5 = 2.4 (left: 2.4) -> 8 / 2.4 = 3.3333333333333335 (left: 3.3333333333333335, 8) -> 3.3333333333333335 + 8 = 11.333333333333334 (left: 8 11.333333333333334) -> 8 * 11.333333333333334 = 90.66666666666667 (left: 11.333333333333334 90.66666666666667)",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "12 - 5 = 7 (left: 7 12 12)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9 12"
                }
            },
            "Step 1": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 / 4 = 2.25 (left: 2.25 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 / 4 = 2.25 (left: 2.25 12) -> 2.25 * 12 = 27 (left: 27)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 / 4 = 2.25 (left: 2.25 12) -> 2.25 * 12 = 27 (left: 27) -> 27 / 2 = 13.5 (left: 13.5)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": ""
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "4 9 12"
                }
            },
            "Step 4": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 12 / 4 = ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 12 / 4 =  -> 12 / 4 = 3",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 12 / 4 =  -> 12 / 4 = 3 -> 4 * 3 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "There are no possible next steps with just one number."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "27 = 12"
                }
            },
            "Step 7": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 12 / 4 = 3 (left: 9 3) -> 9 + 3 = 12 -> 9 * 3 = 27 (left: 27 = 12) -> 27 + 12 = 39 (left: 12 39)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 12 / 4 = 3 (left: 9 3) -> 9 + 3 = 12 -> 9 * 3 = 27 (left: 27 = 12) -> 27 + 12 = 39 (left: 12 39) -> 12 - 39 = -27 (left: -27)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "There are no possible next steps with the input -7."
                }
            }
        },
        "Input": "5 9 12 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "986": {
        "puzzle": "1 2 7 12",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 7 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 7 12"
                }
            },
            "Step 1": {
                "Step": "1 * 2 = 2 (left: 2 7 12) -> 12 - 2 = 10 (left: 10 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 * 2 = 2 (left: 2 7 12) -> 12 - 2 = 10 (left: 10 7) -> 10 - 7 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 * 2 = 2 (left: 2 7 12) -> 12 - 2 = 10 (left: 10 7) -> 10 - 7 = 3 (left: 3) -> 3 + 8 = 11 (left: 8 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "There are no possible next steps for the input 4."
                }
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 1 5  -> 5 - 1 = 4 (left: 4) -> There are no possible next steps for the input 4. -> There are no possible next steps for the input 4. -> There are no possible next steps for the input 4.",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 1 5  -> 5 - 1 = 4 (left: 4) -> There are no possible next steps for the input 4. -> There are no possible next steps for the input 4. -> There are no possible next steps for the input 4. -> There are no possible next steps for the input 4.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 1 5  -> 5 - 1 = 4 (left: 4) -> There are no possible next steps for the input 4. -> There are no possible next steps for the input 4. -> There are no possible next steps for the input 4. -> There are no possible next steps for the input 4. -> There are no possible next steps for the input 4.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "10 12"
                }
            },
            "Step 7": {
                "Step": "2 + 7 = 9 (left: 1 9 12) -> 1 + 9 = 10 (left: 10 12) -> 10 + 12 = 22 (left: 22) -> 22 + 2 = 24 -> 22 - 2 = 20 (left: 20 2 24) -> 20 / 2 = 10 (left: 10 2 24) -> 24 / 2 = 12 (left: 10 12) -> 10 * 12 = 120 (left: 120)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "3 * 4 = "
                }
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 12 / 3 = 4 (left: -> 3 * 4 =  -> 3 * 4 = 12",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 - 7 = 5 (left: 1 2 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "1 5 "
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 1 5  -> 5 - 1 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 1 5  -> 5 - 1 = 4 (left: 4) -> There are no possible next steps for the input 4.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 1 5  -> 5 - 1 = 4 (left: 4) -> There are no possible next steps for the input 4. -> There are no possible next steps for the input 4.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "There are no possible next steps for the input 4."
                }
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 1 5  -> 5 - 1 = 4 (left: 4) -> There are no possible next steps for the input 4. -> There are no possible next steps for the input 4. -> There are no possible next steps for the input 4.",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 1 5  -> 5 - 1 = 4 (left: 4) -> There are no possible next steps for the input 4. -> There are no possible next steps for the input 4. -> There are no possible next steps for the input 4. -> There are no possible next steps for the input 4.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 1 5  -> 5 - 1 = 4 (left: 4) -> There are no possible next steps for the input 4. -> There are no possible next steps for the input 4. -> There are no possible next steps for the input 4. -> There are no possible next steps for the input 4. -> There are no possible next steps for the input 4.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "10 12"
                }
            },
            "Step 7": {
                "Step": "2 + 7 = 9 (left: 1 9 12) -> 1 + 9 = 10 (left: 10 12) -> 10 + 12 = 22 (left: 22) -> 22 + 2 = 24 -> 22 - 2 = 20 (left: 20 2 24) -> 20 / 2 = 10 (left: 10 2 24) -> 24 / 2 = 12 (left: 10 12) -> 12 / 10 = 1.2 (left: 1.2)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "3 * 4 = "
                }
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 12 / 3 = 4 (left: -> 3 * 4 =  -> 3 * 4 = 12",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 * 7 = 14 (left: 1 14 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 7 12"
                }
            },
            "Step 1": {
                "Step": "1 * 2 = 2 (left: 2 7 12) -> 12 / 2 = 6 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 * 2 = 2 (left: 2 7 12) -> 12 / 2 = 6 (left: -> 6 + 2 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 * 2 = 2 (left: 2 7 12) -> 12 / 2 = 6 (left: -> 6 + 2 = 8 (left: 8) -> 8 - 8 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "3 7 12"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "22 + 2 = 24"
                }
            },
            "Step 4": {
                "Step": "2 + 7 = 9 (left: 1 9 12) -> 1 + 9 = 10 (left: 10 12) -> 10 + 12 = 22 (left: 22) -> 22 + 2 = 24 -> 22 - 2 = 20 (left: 20 2 24)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 7 = 9 (left: 1 9 12) -> 1 + 9 = 10 (left: 10 12) -> 10 + 12 = 22 (left: 22) -> 22 + 2 = 24 -> 22 - 2 = 20 (left: 20 2 24) -> 20 / 2 = 10 (left: 10 2 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 7 = 9 (left: 1 9 12) -> 1 + 9 = 10 (left: 10 12) -> 10 + 12 = 22 (left: 22) -> 22 + 2 = 24 -> 22 - 2 = 20 (left: 20 2 24) -> 20 / 2 = 10 (left: 10 2 24) -> 24 / 2 = 12 (left: 10 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "10 12"
                }
            },
            "Step 7": {
                "Step": "2 + 7 = 9 (left: 1 9 12) -> 1 + 9 = 10 (left: 10 12) -> 10 + 12 = 22 (left: 22) -> 22 + 2 = 24 -> 22 - 2 = 20 (left: 20 2 24) -> 20 / 2 = 10 (left: 10 2 24) -> 24 / 2 = 12 (left: 10 12) -> 10 - 12 = -2 (left: -2)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "10 12"
                }
            },
            "Step 8": {
                "Step": "2 + 7 = 9 (left: 1 9 12) -> 1 + 9 = 10 (left: 10 12) -> 10 + 12 = 22 (left: 22) -> 22 + 2 = 24 -> 22 - 2 = 20 (left: 20 2 24) -> 20 / 2 = 10 (left: 10 2 24) -> 24 / 2 = 12 (left: 10 12) -> 10 / 12 = 0.83333 (left: 0.83333)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "22 + 2 = 24"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 7 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "1 9 12"
                }
            },
            "Step 1": {
                "Step": "2 + 7 = 9 (left: 1 9 12) -> 1 + 9 = 10 (left: 10 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 7 = 9 (left: 1 9 12) -> 1 + 9 = 10 (left: 10 12) -> 10 + 12 = 22 (left: 22)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 7 = 9 (left: 1 9 12) -> 1 + 9 = 10 (left: 10 12) -> 10 + 12 = 22 (left: 22) -> 22 + 2 = 24",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "3 7 12"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 12 - 3 = 9 (left: 7 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 12 - 3 = 9 (left: 7 9) -> 7 - 9 = -2 (left: -2 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 12 - 3 = 9 (left: 7 9) -> 7 - 9 = -2 (left: -2 9) -> -2 * 9 = -18 (left: -18)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "There are no possible next steps for the input 4."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "10 12"
                }
            },
            "Step 7": {
                "Step": "2 + 7 = 9 (left: 1 9 12) -> 1 + 9 = 10 (left: 10 12) -> 10 + 12 = 22 (left: 22) -> 22 + 2 = 24 -> 22 - 2 = 20 (left: 20 2 24) -> 20 / 2 = 10 (left: 10 2 24) -> 24 / 2 = 12 (left: 10 12) -> 10 - 12 = -2 (left: -2)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "There are no possible next steps for the input 4."
                }
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 1 5  -> 5 - 1 = 4 (left: 4) -> There are no possible next steps for the input 4. -> There are no possible next steps for the input 4. -> There are no possible next steps for the input 4. -> There are no possible next steps for the input 4. -> There are no possible next steps for the input 4. -> There are no possible next steps for the input 4.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "7 * 2 = 14 (left: 1 12 14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "1 5 "
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 1 5  -> 1 * 5 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 1 5  -> 1 * 5 = 5 (left: 5) -> There are no possible next steps with just the number 5.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 1 5  -> 1 * 5 = 5 (left: 5) -> There are no possible next steps with just the number 5. -> 5 / 5 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "1 5 "
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "22 + 2 = 24"
                }
            },
            "Step 4": {
                "Step": "2 + 7 = 9 (left: 1 9 12) -> 1 + 9 = 10 (left: 10 12) -> 10 + 12 = 22 (left: 22) -> 22 + 2 = 24 -> 22 / 2 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "3 7 12"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 12 - 3 = 9 (left: 7 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 12 - 3 = 9 (left: 7 9) -> 9 - 7 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "10 12"
                }
            },
            "Step 7": {
                "Step": "2 + 7 = 9 (left: 1 9 12) -> 1 + 9 = 10 (left: 10 12) -> 10 + 12 = 22 (left: 22) -> 22 + 2 = 24 -> 22 - 2 = 20 (left: 20 2 24) -> 20 / 2 = 10 (left: 10 2 24) -> 24 / 2 = 12 (left: 10 12) -> 10 * 12 = 120 (left: 120)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "4 + 4 = 8"
                }
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 1 5  -> 5 - 1 = 4 (left: 4) -> 4 + 4 = 8 -> 4 * 4 = 16 (left: 4 8 16)",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "12 - 7 = 5 (left: 1 2 5)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 7 12"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 3 + 7 = 10 (left: 10 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 3 + 7 = 10 (left: 10 12) -> 10 * 12 = 120 (left: 120)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 3 + 7 = 10 (left: 10 12) -> 10 * 12 = 120 (left: 120) -> 120 + 2 = 122",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "There are no possible next steps with the input of -7."
                }
            },
            "Step 4": {
                "Step": "1 * 2 = 2 (left: 2 7 12) -> 7 - 2 = 5 (left: 5 12) -> 5 - 12 = -7 (left: -7) -> There are no possible next steps with the input of -7. -> There are no possible next steps with the input of -7.",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 * 2 = 2 (left: 2 7 12) -> 7 - 2 = 5 (left: 5 12) -> 5 - 12 = -7 (left: -7) -> There are no possible next steps with the input of -7. -> There are no possible next steps with the input of -7. -> There are no possible next steps with the input of -7.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 * 2 = 2 (left: 2 7 12) -> 7 - 2 = 5 (left: 5 12) -> 5 - 12 = -7 (left: -7) -> There are no possible next steps with the input of -7. -> There are no possible next steps with the input of -7. -> There are no possible next steps with the input of -7. -> There are no possible next steps with the input of -7.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "10 12"
                }
            },
            "Step 7": {
                "Step": "2 + 7 = 9 (left: 1 9 12) -> 1 + 9 = 10 (left: 10 12) -> 10 + 12 = 22 (left: 22) -> 22 + 2 = 24 -> 22 - 2 = 20 (left: 20 2 24) -> 20 / 2 = 10 (left: 10 2 24) -> 24 / 2 = 12 (left: 10 12) -> Possible next steps:",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 7 = 9 (left: 1 9 12) -> 1 + 9 = 10 (left: 10 12) -> 10 + 12 = 22 (left: 22) -> 22 + 2 = 24 -> 22 - 2 = 20 (left: 20 2 24) -> 20 / 2 = 10 (left: 10 2 24) -> 24 / 2 = 12 (left: 10 12) -> Possible next steps: -> There are no possible next steps with the given input.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 7 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 7 12"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 3 * 7 = 21 (left: 21 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 3 * 7 = 21 (left: 21 12) -> 21 + 12 = 33 (left: 33)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 3 * 7 = 21 (left: 21 12) -> 21 + 12 = 33 (left: 33) -> 33 / 2 = 16.5 (left: 16.5)",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "1 9 12"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "22 + 2 = 24"
                }
            },
            "Step 4": {
                "Step": "2 + 7 = 9 (left: 1 9 12) -> 1 + 9 = 10 (left: 10 12) -> 10 + 12 = 22 (left: 22) -> 22 + 2 = 24 -> 22 + 2 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "1 5 "
                }
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 1 5  -> 5 - 1 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 1 5  -> 5 - 1 = 4 (left: 4) -> 4 + 4 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "10 12"
                }
            },
            "Step 7": {
                "Step": "2 + 7 = 9 (left: 1 9 12) -> 1 + 9 = 10 (left: 10 12) -> 10 + 12 = 22 (left: 22) -> 22 + 2 = 24 -> 22 - 2 = 20 (left: 20 2 24) -> 20 / 2 = 10 (left: 10 2 24) -> 24 / 2 = 12 (left: 10 12) -> 10 - 12 = -2 (left: -2)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "120 + 2 = 122"
                }
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 3 + 7 = 10 (left: 10 12) -> 10 * 12 = 120 (left: 120) -> 120 + 2 = 122 -> 122 - 8 = 114 (left: 8 114)",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 1 5 ",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 7 12"
                }
            },
            "Step 1": {
                "Step": "1 * 2 = 2 (left: 2 7 12) -> 7 - 2 = 5 (left: 5 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 * 2 = 2 (left: 2 7 12) -> 7 - 2 = 5 (left: 5 12) -> 5 - 12 = -7 (left: -7)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 * 2 = 2 (left: 2 7 12) -> 7 - 2 = 5 (left: 5 12) -> 5 - 12 = -7 (left: -7) -> There are no possible next steps with the input of -7.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "Please provide additional numbers to perform operations."
                }
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 1 5  -> 1 * 5 = 5 (left: 5) -> There are no possible next steps with only one number provided. Additional numbers are needed to perform operations. -> Please provide additional numbers to perform operations. -> - 8 / 8 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "3 7 12"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 12 / 3 = 4 (left:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 12 / 3 = 4 (left: -> 3 * 4 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "10 12"
                }
            },
            "Step 7": {
                "Step": "2 + 7 = 9 (left: 1 9 12) -> 1 + 9 = 10 (left: 10 12) -> 10 + 12 = 22 (left: 22) -> 22 + 2 = 24 -> 22 - 2 = 20 (left: 20 2 24) -> 20 / 2 = 10 (left: 10 2 24) -> 24 / 2 = 12 (left: 10 12) -> 10 / 12 = 0.8333 (left: 0.8333)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "There are no possible next steps with the input of -7."
                }
            },
            "Step 8": {
                "Step": "1 * 2 = 2 (left: 2 7 12) -> 7 - 2 = 5 (left: 5 12) -> 5 - 12 = -7 (left: -7) -> There are no possible next steps with the input of -7. -> There are no possible next steps with the input of -7. -> There are no possible next steps with the input of -7. -> There are no possible next steps with the input of -7. -> There are no possible next steps with the input of -7.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "1 * 2 = 2 (left: 2 7 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 7 12"
                }
            },
            "Step 1": {
                "Step": "1 * 2 = 2 (left: 2 7 12) -> 2 * 7 = 14 (left: 14 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 * 2 = 2 (left: 2 7 12) -> 2 * 7 = 14 (left: 14 12) -> 14 / 12 = 1.1666666666666667 (left: 1.1666666666666667)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 * 2 = 2 (left: 2 7 12) -> 2 * 7 = 14 (left: 14 12) -> 14 / 12 = 1.1666666666666667 (left: 1.1666666666666667) -> 1.1666666666666667 / 2 = 0.5833333333333334 (left: 0.583333333333333",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "3 7 12"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "Please provide additional numbers to perform operations."
                }
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 1 5  -> 1 * 5 = 5 (left: 5) -> There are no possible next steps with only one number provided. Additional numbers are needed to perform operations. -> Please provide additional numbers to perform operations. -> 20 - 8 = 12 (left: 14 10 ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 1 5  -> 1 * 5 = 5 (left: 5) -> There are no possible next steps with only one number provided. Additional numbers are needed to perform operations. -> Please provide additional numbers to perform operations. -> 20 - 8 = 12 (left: 14 10  -> 14 * 10 = 140 (left: 140)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "2 7 12"
                }
            },
            "Step 6": {
                "Step": "1 * 2 = 2 (left: 2 7 12) -> 2 + 7 = 9 (left: 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "10 12"
                }
            },
            "Step 7": {
                "Step": "2 + 7 = 9 (left: 1 9 12) -> 1 + 9 = 10 (left: 10 12) -> 10 + 12 = 22 (left: 22) -> 22 + 2 = 24 -> 22 - 2 = 20 (left: 20 2 24) -> 20 / 2 = 10 (left: 10 2 24) -> 24 / 2 = 12 (left: 10 12) -> 10 * 12 = 120 (left: 12 120)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 7 = 9 (left: 1 9 12) -> 1 + 9 = 10 (left: 10 12) -> 10 + 12 = 22 (left: 22) -> 22 + 2 = 24 -> 22 - 2 = 20 (left: 20 2 24) -> 20 / 2 = 10 (left: 10 2 24) -> 24 / 2 = 12 (left: 10 12) -> 10 * 12 = 120 (left: 12 120) -> 120 / 12 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "There are no possible next steps with the input of -7."
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "2 + 7 = 9 (left: 1 9 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "1 5 "
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 1 5  -> 1 * 5 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 1 5  -> 1 * 5 = 5 (left: 5) -> There are no possible next steps with only one number provided. Additional numbers are needed to perform operations.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 1 5  -> 1 * 5 = 5 (left: 5) -> There are no possible next steps with only one number provided. Additional numbers are needed to perform operations. -> Please provide additional numbers to perform operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "There are no possible next steps for the input 4."
                }
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 1 5  -> 5 - 1 = 4 (left: 4) -> There are no possible next steps for the input 4. -> There are no possible next steps for the input 4. -> There are no possible next steps for the input 4.",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 1 5  -> 5 - 1 = 4 (left: 4) -> There are no possible next steps for the input 4. -> There are no possible next steps for the input 4. -> There are no possible next steps for the input 4. -> There are no possible next steps for the input 4.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 1 5  -> 5 - 1 = 4 (left: 4) -> There are no possible next steps for the input 4. -> There are no possible next steps for the input 4. -> There are no possible next steps for the input 4. -> There are no possible next steps for the input 4. -> There are no possible next steps for the input 4.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "10 12"
                }
            },
            "Step 7": {
                "Step": "2 + 7 = 9 (left: 1 9 12) -> 1 + 9 = 10 (left: 10 12) -> 10 + 12 = 22 (left: 22) -> 22 + 2 = 24 -> 22 - 2 = 20 (left: 20 2 24) -> 20 / 2 = 10 (left: 10 2 24) -> 24 / 2 = 12 (left: 10 12) -> 10 / 12 = 0.8333 (left: 0.8333)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "8 11"
                }
            },
            "Step 8": {
                "Step": "1 * 2 = 2 (left: 2 7 12) -> 12 - 2 = 10 (left: 10 7) -> 10 - 7 = 3 (left: 3) -> 3 + 8 = 11 (left: 8 11) -> 8 + 11 = 19 (left: 19)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "There are no possible next steps for the input 4."
                }
            }
        },
        "Input": "1 2 7 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "987": {
        "puzzle": "2 4 5 6",
        "Agent 0": {
            "Step 0": {
                "Step": "4 + 5 = 9 (left: 2 6 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 5 + 6 = 11 (left: 6 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 5 + 6 = 11 (left: 6 11) -> 6 + 11 = 17 (left: 17)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 5 + 6 = 11 (left: 6 11) -> 6 + 11 = 17 (left: 17) -> There are no possible next steps with the number 17.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "2 6 9"
                }
            },
            "Step 4": {
                "Step": "4 + 5 = 9 (left: 2 6 9) -> 6 + 9 = 15 (left: 2 15)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 + 5 = 9 (left: 2 6 9) -> 6 + 9 = 15 (left: 2 15) -> 2 + 15 = 17 (left: 15 17)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 5 = 9 (left: 2 6 9) -> 6 + 9 = 15 (left: 2 15) -> 2 + 15 = 17 (left: 15 17) -> 15 + 17 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "2 8"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "3.33 23.33"
                }
            },
            "Step 7": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 4 * 5 = 20 (left: 6 20) -> 20 / 6 = 3.33 (left: 3.33 20) -> 20 + 3.33 = 23.33 (left: 3.33 23.33) -> 3.33 * 23.33 = 77.555 (left: 77.555)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "No possible next steps with the input 160."
                }
            },
            "Step 8": {
                "Step": "4 * 5 = 20 (left: 2 6 20) -> 6 + 2 = 8 (left: 8 20) -> 8 * 20 = 160 (left: 160) -> No possible next steps with the input 160. -> There are no possible next steps with the input 160.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 4 5 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6) -> 8 - 6 = 2 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "4 5 6"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 4 + 5 = 9 (left: 6 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 4 + 5 = 9 (left: 6 9) -> 9 / 6 = 1.5 (left: 1.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 4 + 5 = 9 (left: 6 9) -> 9 / 6 = 1.5 (left: 1.5) -> There are no possible next steps with the input of 1.5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "3.33 23.33"
                }
            },
            "Step 7": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 4 * 5 = 20 (left: 6 20) -> 20 / 6 = 3.33 (left: 3.33 20) -> 20 + 3.33 = 23.33 (left: 3.33 23.33) -> 3.33 + 23.33 = 26.66 (left: 26.66)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "There are no possible next steps with just the number 3."
                }
            },
            "Step 8": {
                "Step": "2 * 4 = 8 (left: 5 6 8) -> Input: 3 9 -> 9 / 3 = 3 (left: 3) -> There are no possible next steps with just the number 3. -> There are no possible next steps with just the number 3.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 4 5 6)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 5 * 6 = 30 (left: 30)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 5 * 6 = 30 (left: 30) -> 30 / 2 = 15",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 5 * 6 = 30 (left: 30) -> 30 / 2 = 15 -> 30 - 2 = 28 (left: 28)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "4 5 6"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "5 6 8"
                }
            },
            "Step 4": {
                "Step": "2 * 4 = 8 (left: 5 6 8) -> 8 - 5 = 3 (left: 3 6 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 * 4 = 8 (left: 5 6 8) -> 8 - 5 = 3 (left: 3 6 8) -> 3 * 6 = 18 (left: 8 18)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 4 = 8 (left: 5 6 8) -> 8 - 5 = 3 (left: 3 6 8) -> 3 * 6 = 18 (left: 8 18) -> 8 + 18 = 26 (left: 26)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "There are no possible next steps with the input of 5."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "3.33 23.33"
                }
            },
            "Step 7": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 4 * 5 = 20 (left: 6 20) -> 20 / 6 = 3.33 (left: 3.33 20) -> 20 + 3.33 = 23.33 (left: 3.33 23.33) -> 3.33 * 23.33 = 77.7789 (left: 77.7789)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "There are no possible next steps with the input of 5."
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 / 5 = 1.2 (left: 1.2 6) -> 6 / 1.2 = 5 (left: 5) -> There are no possible next steps with the input of 5. -> There are no possible next steps with the input of 5.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 * 4 = 8 (left: 5 6 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 5 - 6 = -1 (left: -1 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 5 - 6 = -1 (left: -1 6) -> -1 - 6 = -7 (left: -7)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 5 - 6 = -1 (left: -1 6) -> -1 - 6 = -7 (left: -7) -> 7 + (-7) = 0 (left: -7)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "2 6 20"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "2 6 20"
                }
            },
            "Step 4": {
                "Step": "4 * 5 = 20 (left: 2 6 20) -> 6 + 2 = 8 (left: 8 20)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 * 5 = 20 (left: 2 6 20) -> 6 + 2 = 8 (left: 8 20) -> 8 * 20 = 160 (left: 160)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 5 = 20 (left: 2 6 20) -> 6 + 2 = 8 (left: 8 20) -> 8 * 20 = 160 (left: 160) -> No possible next steps with the input 160.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "None, as there is only one number left."
                }
            },
            "Step 7": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 6 - 4 = 2 (left: 2 5) -> 2 * 5 = 10 (left: 10) -> None, as there is only one number left. -> There are no possible next steps as there is only one number left.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 6 - 4 = 2 (left: 2 5) -> 2 * 5 = 10 (left: 10) -> None, as there is only one number left. -> There are no possible next steps as there is only one number left. -> There are no possible next steps as there is only one number left.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 * 4 = 8 (left: 5 6 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6) -> 6 / 2 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "5 6 8"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "5 6 8"
                }
            },
            "Step 4": {
                "Step": "2 * 4 = 8 (left: 5 6 8) -> Input: 3 9",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 * 4 = 8 (left: 5 6 8) -> Input: 3 9 -> 9 / 3 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 4 = 8 (left: 5 6 8) -> Input: 3 9 -> 9 / 3 = 3 (left: 3) -> There are no possible next steps with just the number 3.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "3.33 23.33"
                }
            },
            "Step 7": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 4 * 5 = 20 (left: 6 20) -> 20 / 6 = 3.33 (left: 3.33 20) -> 20 + 3.33 = 23.33 (left: 3.33 23.33) -> 3.33 + 23.33 = 26.66 (left: 26.66)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "2 8"
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6) -> 8 - 6 = 2 (left: 2 8) -> 8 - 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "2 8"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 5 6 6)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 / 5 = 1.2 (left: 1.2 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 / 5 = 1.2 (left: 1.2 6) -> 6 / 1.2 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 / 5 = 1.2 (left: 1.2 6) -> 6 / 1.2 = 5 (left: 5) -> There are no possible next steps with the input of 5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "4 5 6"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 6 + 4 = 10 (left: 5 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 6 + 4 = 10 (left: 5 10) -> 5 + 10 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 6 + 4 = 10 (left: 5 10) -> 5 + 10 = 15 (left: 15) -> There are no possible next steps with the number 15.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "3.33 23.33"
                }
            },
            "Step 7": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 4 * 5 = 20 (left: 6 20) -> 20 / 6 = 3.33 (left: 3.33 20) -> 20 + 3.33 = 23.33 (left: 3.33 23.33) -> 5",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "There are no possible next steps with just the number 3."
                }
            },
            "Step 8": {
                "Step": "2 * 4 = 8 (left: 5 6 8) -> Input: 3 9 -> 9 / 3 = 3 (left: 3) -> There are no possible next steps with just the number 3. -> 5 + 6 = 11 (left: 4 7 11)",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 5 6 6)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 + 6 = 7",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 + 6 = 7 -> 1 / 6 = 0.16666666666666666 (left: 0.16666666666666666)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "2 6 20"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "2 8"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6) -> 8 - 6 = 2 (left: 2 8) -> 2 * 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "2 6 20"
                }
            },
            "Step 5": {
                "Step": "4 * 5 = 20 (left: 2 6 20) -> 20 - 6 = 14 (left: 2 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 5 = 20 (left: 2 6 20) -> 20 - 6 = 14 (left: 2 14) -> 14 / 2 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "3.33 23.33"
                }
            },
            "Step 7": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 4 * 5 = 20 (left: 6 20) -> 20 / 6 = 3.33 (left: 3.33 20) -> 20 + 3.33 = 23.33 (left: 3.33 23.33) -> 23.33 + 3.33 = 26.66 (left: 3.33 26.66)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 4 * 5 = 20 (left: 6 20) -> 20 / 6 = 3.33 (left: 3.33 20) -> 20 + 3.33 = 23.33 (left: 3.33 23.33) -> 23.33 + 3.33 = 26.66 (left: 3.33 26.66) -> 26.66 / 3.33 = 8 (left: 8 26.66)",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "4 * 5 = 20 (left: 2 6 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "5 6 8"
                }
            },
            "Step 1": {
                "Step": "2 * 4 = 8 (left: 5 6 8) -> 5 + 6 = 11 (left: 8 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 4 = 8 (left: 5 6 8) -> 5 + 6 = 11 (left: 8 11) -> 8 * 11 = 88 (left: 88)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 4 = 8 (left: 5 6 8) -> 5 + 6 = 11 (left: 8 11) -> 8 * 11 = 88 (left: 88) -> 8 - 8 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "4 5 6"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "4 5 6"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 4 + 5 = 9 (left: 6 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 4 + 5 = 9 (left: 6 9) -> 6 / 9 = 0.6666666666666666 (left: 0.6666666666666666)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 4 + 5 = 9 (left: 6 9) -> 6 / 9 = 0.6666666666666666 (left: 0.6666666666666666) -> There are no possible next steps with the input of 0.6666666666666666.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "3.33 23.33"
                }
            },
            "Step 7": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 4 * 5 = 20 (left: 6 20) -> 20 / 6 = 3.33 (left: 3.33 20) -> 20 + 3.33 = 23.33 (left: 3.33 23.33) -> 3.33 * 23.33 = 77.5889 (left: 77.5889)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "There is only one number provided, so there are no possible next steps."
                }
            },
            "Step 8": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 6 - 4 = 2 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5) -> There is only one number provided, so there are no possible next steps. -> There are no possible next steps as there is only one number provided.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "2 * 4 = 8 (left: 5 6 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 5 6"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 5 + 6 = 11 (left: 4 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 5 + 6 = 11 (left: 4 11) -> 4 * 11 = 44 (left: 11 44)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 5 + 6 = 11 (left: 4 11) -> 4 * 11 = 44 (left: 11 44) -> 44 / 11 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "2 6 9"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "4 5 6"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 6 - 4 = 2 (left: 2 5)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 6 - 4 = 2 (left: 2 5) -> 2 * 5 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 6 - 4 = 2 (left: 2 5) -> 2 * 5 = 10 (left: 10) -> None, as there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "3.33 23.33"
                }
            },
            "Step 7": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 4 * 5 = 20 (left: 6 20) -> 20 / 6 = 3.33 (left: 3.33 20) -> 20 + 3.33 = 23.33 (left: 3.33 23.33) -> 3.33 + 23.33 = 26.66 (left: 26.66)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "There is only one number provided, so there are no possible next steps."
                }
            },
            "Step 8": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 6 - 4 = 2 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5) -> There is only one number provided, so there are no possible next steps. -> No possible next steps.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "4 * 5 = 20 (left: 2 6 20)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 5 6"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 6 - 4 = 2 (left: 2 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 6 - 4 = 2 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 6 - 4 = 2 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5) -> There is only one number provided, so there are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "4 5 6"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 4 * 5 = 20 (left: 6 20)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 4 * 5 = 20 (left: 6 20) -> 20 / 6 = 3.33 (left: 3.33 20)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 4 * 5 = 20 (left: 6 20) -> 20 / 6 = 3.33 (left: 3.33 20) -> 20 + 3.33 = 23.33 (left: 3.33 23.33)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "3.33 23.33"
                }
            },
            "Step 7": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 4 * 5 = 20 (left: 6 20) -> 20 / 6 = 3.33 (left: 3.33 20) -> 20 + 3.33 = 23.33 (left: 3.33 23.33) -> 3.33 + 23.33 = 26.66 (left: 26.66)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "3.33 23.33"
                }
            },
            "Step 8": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 4 * 5 = 20 (left: 6 20) -> 20 / 6 = 3.33 (left: 3.33 20) -> 20 + 3.33 = 23.33 (left: 3.33 23.33) -> 3.33 + 23.33 = 26.66 (left: 26.66)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "None, as there is only one number left."
                }
            }
        },
        "Input": "2 4 5 6",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "988": {
        "puzzle": "5 5 8 13",
        "Agent 0": {
            "Step 0": {
                "Step": "8 - 5 = 3 (left: 3 5 13)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 8 8"
                }
            },
            "Step 1": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> Input: 3",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> Input: 3 -> There is only one number provided, so there are no possible next steps to perform any operations.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> Input: 3 -> There is only one number provided, so there are no possible next steps to perform any operations. -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "5 8 8"
                }
            },
            "Step 4": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 5 * 8 = 40 (left: 8 40)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 5 * 8 = 40 (left: 8 40) -> 8 * 5 = 40 (left: 40)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 5 * 8 = 40 (left: 8 40) -> 8 * 5 = 40 (left: 40) -> There are no possible next steps as there are no more numbers to operate on. The result is 40.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "There are no possible next steps for the input -6.4."
                }
            },
            "Step 7": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 / 5 = 1.6 (left: 1.6 8) -> 1.6 - 8 = -6.4 (left: -6.4) -> There are no possible next steps for the input -6.4. -> There are no possible next steps for the input -6.4.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 / 5 = 1.6 (left: 1.6 8) -> 1.6 - 8 = -6.4 (left: -6.4) -> There are no possible next steps for the input -6.4. -> There are no possible next steps for the input -6.4. -> There are no possible operations that can be performed on the input -6.4.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 + 5 = 10 (left: 8 10 13)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "0 8 13"
                }
            },
            "Step 1": {
                "Step": "5 - 5 = 0 (left: 0 8 13) -> 13 - 8 = 5 (left: 0 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 - 5 = 0 (left: 0 8 13) -> 13 - 8 = 5 (left: 0 5) -> 5 / 0 = undefined (cannot divide by zero)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 - 5 = 0 (left: 0 8 13) -> 13 - 8 = 5 (left: 0 5) -> 5 / 0 = undefined (cannot divide by zero) -> 0 + 5 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "5 8 8"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "5 8 8"
                }
            },
            "Step 4": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8) -> 8 / 3 \u2248 2.67 (left: 2.67)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8) -> 8 / 3 \u2248 2.67 (left: 2.67) -> There are no possible next steps for the input 2.67 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "There are no possible next steps with the input 0."
                }
            },
            "Step 7": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 8 = 0 (left: 0) -> There are no possible next steps with the input 0. -> There are no possible next steps with the input 0. -> There are no possible next steps with the input 0.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 8 = 0 (left: 0) -> There are no possible next steps with the input 0. -> There are no possible next steps with the input 0. -> There are no possible next steps with the input 0. -> There are no possible next steps with the input 0.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 5 = 8 (left: 5 8 8)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 8 8"
                }
            },
            "Step 1": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11) -> 11 - 2 = 9 (left: 2 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "5 8 8"
                }
            },
            "Step 4": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 5 * 8 = 40 (left: 8 8 40)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 5 * 8 = 40 (left: 8 8 40) -> 8 - 8 = 0 (left: 0 8 40)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 5 * 8 = 40 (left: 8 8 40) -> 8 - 8 = 0 (left: 0 8 40) -> 0 + 8 = 8 (left: 8 40)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no possible next steps for the input 2.67 as it is already a single number."
                }
            },
            "Step 7": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8) -> 8 / 3 \u2248 2.67 (left: 2.67) -> There are no possible next steps for the input 2.67 as it is already a single number. -> There are no possible next steps for the input 2.67 as it is already a single number.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8) -> 8 / 3 \u2248 2.67 (left: 2.67) -> There are no possible next steps for the input 2.67 as it is already a single number. -> There are no possible next steps for the input 2.67 as it is already a single number. -> There are no possible next steps for the input 2.67 as it is already a single number.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "13 / 5 = 2 (left: 2 5 ",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 5 13"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 5 13) -> 13 - 5 = 8 (left: 3 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 5 13) -> 13 - 5 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 8 24)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 5 13) -> 13 - 5 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 8 24) -> 8 * 24 = 192 (left: 192)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "1 8 13"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "5 8 8"
                }
            },
            "Step 4": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 8 = 0 (left: 5 0 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 8 = 0 (left: 5 0 8) -> 5 + 0 = 5 (left: 5 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 8 = 0 (left: 5 0 8) -> 5 + 0 = 5 (left: 5 8) -> 5 + 8 = 13 (left: 13)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "Please provide the complete input so I can suggest possible next steps."
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "There is only one number given, so there are no possible next steps to perform."
                }
            },
            "Step 7": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 / 5 = 1.6 (left: 1.6 8) -> 1.6 + 8 = 9.6 (left: 9.6) -> There is only one number given, so there are no possible next steps to perform. -> No possible next steps as there is only one number given.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 / 5 = 1.6 (left: 1.6 8) -> 1.6 + 8 = 9.6 (left: 9.6) -> There is only one number given, so there are no possible next steps to perform. -> No possible next steps as there is only one number given. -> None",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "There are no possible next steps with only one number."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 / 5 = 1 (left: 1 8 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 8 8"
                }
            },
            "Step 1": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 / 5 = 1.6 (left: 1.6 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 / 5 = 1.6 (left: 1.6 8) -> Possible next steps:",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 / 5 = 1.6 (left: 1.6 8) -> Possible next steps: -> There are no possible next steps with the input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "5 8 8"
                }
            },
            "Step 4": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 / 5 = 1.6 (left: 1.6 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 / 5 = 1.6 (left: 1.6 8) -> 1.6 + 8 = 9.6 (left: 9.6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 / 5 = 1.6 (left: 1.6 8) -> 1.6 + 8 = 9.6 (left: 9.6) -> There is only one number given, so there are no possible next steps to perform.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "There are no possible next steps with the input 0."
                }
            },
            "Step 7": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 8 = 0 (left: 0) -> There are no possible next steps with the input 0. -> There are no possible next steps with the input 0. -> There are no possible next steps with the input 0.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 8 = 0 (left: 0) -> There are no possible next steps with the input 0. -> There are no possible next steps with the input 0. -> There are no possible next steps with the input 0. -> There are no possible next steps with the input 0.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "5 - 5 = 0 (left: 0 8 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 5 13"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 5 13) -> 5 * 3 = 15 (left: 15 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 5 13) -> 5 * 3 = 15 (left: 15 13) -> 15 - 13 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 5 13) -> 5 * 3 = 15 (left: 15 13) -> 15 - 13 = 2 (left: 2) -> 2 / 2 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "0 8 13"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "5 8 8"
                }
            },
            "Step 4": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5) -> There are no possible next steps with only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "2.66666666667 * 2 = 5.33333333334"
                }
            },
            "Step 7": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 / 5 = 1.6 (left -> 8 / 3 = 2.66666666667 (left: 2.66666666667) -> 2.66666666667 * 2 = 5.33333333334 -> 5.33333333334 / 2.66666666667 = 2.000000",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 / 5 = 1.6 (left -> 8 / 3 = 2.66666666667 (left: 2.66666666667) -> 2.66666666667 * 2 = 5.33333333334 -> 5.33333333334 / 2.66666666667 = 2.000000 -> 5.33333333334 / 2.666",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "5 / 5 = 1 (left: 1 8 13)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 8 8"
                }
            },
            "Step 1": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8 8) -> 3 * 8 = 24 (left: 8 24)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8 8) -> 3 * 8 = 24 (left: 8 24) -> 8 + 24 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "5 8 "
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "5 8 8"
                }
            },
            "Step 4": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 / 5 = 1.6 (left: 1.6 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 / 5 = 1.6 (left: 1.6 8) -> 1.6 - 8 = -6.4 (left: -6.4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 / 5 = 1.6 (left: 1.6 8) -> 1.6 - 8 = -6.4 (left: -6.4) -> There are no possible next steps for the input -6.4.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps as there are no more numbers to operate on. The result is 40."
                }
            },
            "Step 7": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 5 * 8 = 40 (left: 8 40) -> 8 * 5 = 40 (left: 40) -> There are no possible next steps as there are no more numbers to operate on. The result is 40. -> There are no possible next steps as the calculation is complete. The final result is 40.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 5 * 8 = 40 (left: 8 40) -> 8 * 5 = 40 (left: 40) -> There are no possible next steps as there are no more numbers to operate on. The result is 40. -> There are no possible next steps as the calculation is complete. The final result is 40. -> Calculation is complete. No further steps can be taken.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "8 + 5 = 13 (left: 5 13 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "8 10 13"
                }
            },
            "Step 1": {
                "Step": "5 + 5 = 10 (left: 8 10 13) -> 8 / 10 = 0.8 (",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 5 = 10 (left: 8 10 13) -> 8 / 10 = 0.8 ( -> There seems to be a mistake in the input provided. It appears to be incomplete. Could you please provide the complete input so that I can suggest the possible next steps?",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 5 = 10 (left: 8 10 13) -> 8 / 10 = 0.8 ( -> There seems to be a mistake in the input provided. It appears to be incomplete. Could you please provide the complete input so that I can suggest the possible next steps? -> Please provide the complete input so I can suggest possible next steps.",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "5 8 8"
                }
            },
            "Step 4": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 / 5 = 1.6 (left",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 / 5 = 1.6 (left -> 8 / 3 = 2.66666666667 (left: 2.66666666667)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 / 5 = 1.6 (left -> 8 / 3 = 2.66666666667 (left: 2.66666666667) -> 2.66666666667 * 2 = 5.33333333334",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps as there are no more numbers to operate on. The result is 40."
                }
            },
            "Step 7": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 5 * 8 = 40 (left: 8 40) -> 8 * 5 = 40 (left: 40) -> There are no possible next steps as there are no more numbers to operate on. The result is 40. -> There are no possible next steps as there are no more numbers to operate on. The result is 40.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 5 * 8 = 40 (left: 8 40) -> 8 * 5 = 40 (left: 40) -> There are no possible next steps as there are no more numbers to operate on. The result is 40. -> There are no possible next steps as there are no more numbers to operate on. The result is 40. -> There are no possible next steps as there are no more numbers to operate on. The result is 40.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "5 / 5 = 1 (left: 1 8 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 5 13"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 5 13) -> 5 * 3 = 15 (left: 15 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 5 13) -> 5 * 3 = 15 (left: 15 13) -> Input: 5 2 3",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 5 13) -> 5 * 3 = 15 (left: 15 13) -> Input: 5 2 3 -> 2 * 3 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "5 8 "
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "5 8 8"
                }
            },
            "Step 4": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 8 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 8 = 0 (left: 0) -> There are no possible next steps with the input 0.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 8 = 0 (left: 0) -> There are no possible next steps with the input 0. -> There are no possible next steps with the input 0.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "There are no possible next steps for the input -6.4."
                }
            },
            "Step 7": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 / 5 = 1.6 (left: 1.6 8) -> 1.6 - 8 = -6.4 (left: -6.4) -> There are no possible next steps for the input -6.4. -> There are no possible next steps for the input -6.4.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 / 5 = 1.6 (left: 1.6 8) -> 1.6 - 8 = -6.4 (left: -6.4) -> There are no possible next steps for the input -6.4. -> There are no possible next steps for the input -6.4. -> There are no possible next steps for the input -6.4.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "13 - 5 = 8 (left: 5 8 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "2 5 "
                }
            },
            "Step 1": {
                "Step": "13 / 5 = 2 (left: 2 5  -> 2 * 5 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 / 5 = 2 (left: 2 5  -> 2 * 5 = 10 (left: 10) -> 10 - 2 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 / 5 = 2 (left: 2 5  -> 2 * 5 = 10 (left: 10) -> 10 - 2 = 8 (left: 8) -> 8 * 8 = 64 (left: 64)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "1 8 13"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "0 8 13"
                }
            },
            "Step 4": {
                "Step": "5 - 5 = 0 (left: 0 8 13) -> 13 / 8 = 1.625 (left: 0 1.625)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 - 5 = 0 (left: 0 8 13) -> 13 / 8 = 1.625 (left: 0 1.625) -> 0 + 1.625 = 1.625 (left: 1.625)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 - 5 = 0 (left: 0 8 13) -> 13 / 8 = 1.625 (left: 0 1.625) -> 0 + 1.625 = 1.625 (left: 1.625) -> 1.625 + 1 = 2.625 (left: 1 2.625)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "There are no possible next steps with the input 0."
                }
            },
            "Step 7": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 8 = 0 (left: 0) -> There are no possible next steps with the input 0. -> There are no possible next steps with the input 0. -> There are no possible next steps with the input 0.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 8 = 0 (left: 0) -> There are no possible next steps with the input 0. -> There are no possible next steps with the input 0. -> There are no possible next steps with the input 0. -> There are no possible next steps with the input 0.",
                "Pruning": null
            }
        },
        "Input": "5 5 8 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "989": {
        "puzzle": "2 3 3 10",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 3 = 7 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 7 10"
                }
            },
            "Step 1": {
                "Step": "10 - 3 = 7 (left: 3 7 10) -> 10 - 3 = 7 (left: 7 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 3 = 7 (left: 3 7 10) -> 10 - 3 = 7 (left: 7 10) -> 10 / 7 = 1.4285714285714286 (left: 1.4285714285714286)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 3 = 7 (left: 3 7 10) -> 10 - 3 = 7 (left: 7 10) -> 10 / 7 = 1.4285714285714286 (left: 1.4285714285714286) -> 1.4285714285714286 / 2 = 0.7142857142857143",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "9 27"
                }
            },
            "Step 4": {
                "Step": "10 - 3 = 7 (left: 2 3 7) -> 3 * 7 = 21 (left: 2 21) -> Input: 3 9 27 -> 9 * 3 = 27 (left: 9 27) -> 27 - 9 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "2 9 10"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 10 / 2 = 5 (left: 5 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 10 / 2 = 5 (left: 5 10) -> 3 + 9 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "9 27"
                }
            },
            "Step 7": {
                "Step": "10 - 3 = 7 (left: 2 3 7) -> 3 * 7 = 21 (left: 2 21) -> Input: 3 9 27 -> 9 * 3 = 27 (left: 9 27) -> 9 * 3 = 27 (left: 27)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "18 40"
                }
            },
            "Step 8": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> Possible -> There are many possible next steps depending on the specific context or problem you are referring to. Can you provide more information or clarify the situation so I can give you more relevant suggestions? -> - Add the numbers together -> 2 + 8 + 8 + 14 = 32 -> 18 + 14 = 32 (left: 18 8 32) -> 8 + 32 = 40 (left: 18 40) -> 18 * 40 = 720 (left: 720)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "- Add the numbers together"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 - 3 = 7 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 3 7"
                }
            },
            "Step 1": {
                "Step": "10 - 3 = 7 (left: 2 3 7) -> 3 * 7 = 21 (left: 2 21)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 3 = 7 (left: 2 3 7) -> 3 * 7 = 21 (left: 2 21) -> Input: 3 9 27",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 3 = 7 (left: 2 3 7) -> 3 * 7 = 21 (left: 2 21) -> Input: 3 9 27 -> 9 * 3 = 27 (left: 9 27)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "9 27"
                }
            },
            "Step 4": {
                "Step": "10 - 3 = 7 (left: 2 3 7) -> 3 * 7 = 21 (left: 2 21) -> Input: 3 9 27 -> 9 * 3 = 27 (left: 9 27) -> 27 / 9 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "2 3 7"
                }
            },
            "Step 5": {
                "Step": "10 - 3 = 7 (left: 2 3 7) -> 7 - 3 = 4 (left: 2 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 3 = 7 (left: 2 3 7) -> 7 - 3 = 4 (left: 2 4) -> 2 * 4 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "9 27"
                }
            },
            "Step 7": {
                "Step": "10 - 3 = 7 (left: 2 3 7) -> 3 * 7 = 21 (left: 2 21) -> Input: 3 9 27 -> 9 * 3 = 27 (left: 9 27) -> 9 * 27 = 243 (left: 243)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "9 27"
                }
            },
            "Step 8": {
                "Step": "10 - 3 = 7 (left: 2 3 7) -> 3 * 7 = 21 (left: 2 21) -> Input: 3 9 27 -> 9 * 3 = 27 (left: 9 27) -> 27 - 9 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "8 * 0.8 = 6.4"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 2 9 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "2 6 10"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> 2 + 6 = 8 (left: 8 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> 2 + 6 = 8 (left: 8 10) -> 8 / 10 = 0.8 (left: 0.8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> 2 + 6 = 8 (left: 8 10) -> 8 / 10 = 0.8 (left: 0.8) -> 8 * 0.8 = 6.4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "- Add the numbers together"
                }
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> Possible -> There are many possible next steps depending on the specific context or problem you are referring to. Can you provide more information or clarify the situation so I can give you more relevant suggestions? -> - Add the numbers together -> 2 + 8 + 8 + 14 = 32",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> Possible -> There are many possible next steps depending on the specific context or problem you are referring to. Can you provide more information or clarify the situation so I can give you more relevant suggestions? -> - Add the numbers together -> 2 + 8 + 8 + 14 = 32 -> 8 + 14 = 22 (left: 2 22 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> Possible -> There are many possible next steps depending on the specific context or problem you are referring to. Can you provide more information or clarify the situation so I can give you more relevant suggestions? -> - Add the numbers together -> 2 + 8 + 8 + 14 = 32 -> 8 + 14 = 22 (left: 2 22 8) -> 8 * 2 = 16 (left:",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "9 27"
                }
            },
            "Step 7": {
                "Step": "10 - 3 = 7 (left: 2 3 7) -> 3 * 7 = 21 (left: 2 21) -> Input: 3 9 27 -> 9 * 3 = 27 (left: 9 27) -> 5 + 15 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "1.4285714285714286 / 2 = 0.7142857142857143"
                }
            },
            "Step 8": {
                "Step": "10 - 3 = 7 (left: 3 7 10) -> 10 - 3 = 7 (left: 7 10) -> 10 / 7 = 1.4285714285714286 (left: 1.4285714285714286) -> 1.4285714285714286 / 2 = 0.7142857142857143 -> 1.4285714285714286 * 2 = 2.857142857142857 (left: 2.857142857142857 / 2 = 1.4285714285714286)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 2 6 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 3 7"
                }
            },
            "Step 1": {
                "Step": "10 - 3 = 7 (left: 2 3 7) -> 7 / 3 = 2 (left: 2 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 3 = 7 (left: 2 3 7) -> 7 / 3 = 2 (left: 2 2) -> 2 * 2 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 3 = 7 (left: 2 3 7) -> 7 / 3 = 2 (left: 2 2) -> 2 * 2 = 4 (left: 4) -> 4 * 2 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "2 9 10"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "9 27"
                }
            },
            "Step 4": {
                "Step": "10 - 3 = 7 (left: 2 3 7) -> 3 * 7 = 21 (left: 2 21) -> Input: 3 9 27 -> 9 * 3 = 27 (left: 9 27) -> 27 / 9 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "2 6 10"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> 6 / 2 = 3 (left: 3 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> 6 / 2 = 3 (left: 3 10) -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "9 27"
                }
            },
            "Step 7": {
                "Step": "10 - 3 = 7 (left: 2 3 7) -> 3 * 7 = 21 (left: 2 21) -> Input: 3 9 27 -> 9 * 3 = 27 (left: 9 27) -> 9 * 3 = 27 (left: 27)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "8 * 2 = 16 (left:"
                }
            },
            "Step 8": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> Possible -> There are many possible next steps depending on the specific context or problem you are referring to. Can you provide more information or clarify the situation so I can give you more relevant suggestions? -> - Add the numbers together -> 2 + 8 + 8 + 14 = 32 -> 8 + 14 = 22 (left: 2 22 8) -> 8 * 2 = 16 (left: -> 8 * 2 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "8 18"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 2 9 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 9 10"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 10 - 9 = 1 (left: 1 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 10 - 9 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 10 - 9 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 10) -> 10 + 8 = 18 (left: 8 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "9 27"
                }
            },
            "Step 4": {
                "Step": "10 - 3 = 7 (left: 2 3 7) -> 3 * 7 = 21 (left: 2 21) -> Input: 3 9 27 -> 9 * 3 = 27 (left: 9 27) -> 27 / 9 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "8 * 0.8 = 6.4"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> 2 + 6 = 8 (left: 8 10) -> 8 / 10 = 0.8 (left: 0.8) -> 8 * 0.8 = 6.4 -> 8 + 0.8 = 8.8",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> 2 + 6 = 8 (left: 8 10) -> 8 / 10 = 0.8 (left: 0.8) -> 8 * 0.8 = 6.4 -> 8 + 0.8 = 8.8 -> 8 / 0.8 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "9 27"
                },
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "18"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> Input: 3 6 -> 3 * 6 = 18 (left: 18) -> There are no possible next steps with input 18.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> Input: 3 6 -> 3 * 6 = 18 (left: 18) -> There are no possible next steps with input 18. -> There are no possible next steps with input 18.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "3 * 2 = 6 (left: 6 3 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 7 10"
                }
            },
            "Step 1": {
                "Step": "10 - 3 = 7 (left: 3 7 10) -> 10 / 3 = 3.33 (left: 3.33 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 3 = 7 (left: 3 7 10) -> 10 / 3 = 3.33 (left: 3.33 10) -> 3.33 * 10 = 33.3 (left: 10 33.3)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 3 = 7 (left: 3 7 10) -> 10 / 3 = 3.33 (left: 3.33 10) -> 3.33 * 10 = 33.3 (left: 10 33.3) -> 33.3 - 10 = 23.3 (left: 23.3)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "2 9 10"
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "9 27"
                }
            },
            "Step 4": {
                "Step": "10 - 3 = 7 (left: 2 3 7) -> 3 * 7 = 21 (left: 2 21) -> Input: 3 9 27 -> 9 * 3 = 27 (left: 9 27) -> 27 / 9 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "2 9 10"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 2 * 9 = 18 (left: 10 18)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 2 * 9 = 18 (left: 10 18) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "18"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> Input: 3 6 -> 3 * 6 = 18 (left: 18) -> 18 / 2 = 9",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> Input: 3 6 -> 3 * 6 = 18 (left: 18) -> 18 / 2 = 9 -> 18 + 2 = 20 (left: 20 9)",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "10 - 3 = 7 (left: 3 7 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 3 7"
                }
            },
            "Step 1": {
                "Step": "10 - 3 = 7 (left: 2 3 7) -> 3 - 2 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 3 = 7 (left: 2 3 7) -> 3 - 2 =  -> 3 - 2 = 1",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 3 = 7 (left: 2 3 7) -> 3 - 2 =  -> 3 - 2 = 1 -> 3 + 2 = 5 (left: 5 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "- Add the numbers together"
                }
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> Possible -> There are many possible next steps depending on the specific context or problem you are referring to. Can you provide more information or clarify the situation so I can give you more relevant suggestions? -> - Add the numbers together -> 2 + 8 + 8 + 14 = 32",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> Possible -> There are many possible next steps depending on the specific context or problem you are referring to. Can you provide more information or clarify the situation so I can give you more relevant suggestions? -> - Add the numbers together -> 2 + 8 + 8 + 14 = 32 -> 18 + 14 = 32 (left: 18 8 32)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> Possible -> There are many possible next steps depending on the specific context or problem you are referring to. Can you provide more information or clarify the situation so I can give you more relevant suggestions? -> - Add the numbers together -> 2 + 8 + 8 + 14 = 32 -> 18 + 14 = 32 (left: 18 8 32) -> 8 + 32 = 40 (left: 18 40)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "9 27"
                }
            },
            "Step 7": {
                "Step": "10 - 3 = 7 (left: 2 3 7) -> 3 * 7 = 21 (left: 2 21) -> Input: 3 9 27 -> 9 * 3 = 27 (left: 9 27) -> 5 + 10 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "9 27"
                }
            },
            "Step 8": {
                "Step": "10 - 3 = 7 (left: 2 3 7) -> 3 * 7 = 21 (left: 2 21) -> Input: 3 9 27 -> 9 * 3 = 27 (left: 9 27) -> 9 + 27 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "9 27"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 2 9 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "2 6 10"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> Possible",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> Possible -> There are many possible next steps depending on the specific context or problem you are referring to. Can you provide more information or clarify the situation so I can give you more relevant suggestions?",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> Possible -> There are many possible next steps depending on the specific context or problem you are referring to. Can you provide more information or clarify the situation so I can give you more relevant suggestions? -> - Add the numbers together",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "- Add the numbers together"
                }
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> Possible -> There are many possible next steps depending on the specific context or problem you are referring to. Can you provide more information or clarify the situation so I can give you more relevant suggestions? -> - Add the numbers together -> 10 + 16 = 26 (left: 26)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "2 9 10"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> Input: 3 6",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> Input: 3 6 -> 3 * 6 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "18"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> Input: 3 6 -> 3 * 6 = 18 (left: 18) -> 18 / 2 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "9 27"
                }
            },
            "Step 8": {
                "Step": "10 - 3 = 7 (left: 2 3 7) -> 3 * 7 = 21 (left: 2 21) -> Input: 3 9 27 -> 9 * 3 = 27 (left: 9 27) -> 5 * 10 = 50",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "10 - 3 = 7 (left: 2 3 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "2 9 10"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 10 - 2 = 8 (left: 8 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 10 - 2 = 8 (left: 8 9) -> 8 + 9 = 17 (left: 17)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 10 - 2 = 8 (left: 8 9) -> 8 + 9 = 17 (left: 17) -> 17 - 8 = 9 (left: 8 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "9 27"
                }
            },
            "Step 4": {
                "Step": "10 - 3 = 7 (left: 2 3 7) -> 3 * 7 = 21 (left: 2 21) -> Input: 3 9 27 -> 9 * 3 = 27 (left: 9 27) -> 9 - 3 = 6 (left: 6 27)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 3 = 7 (left: 2 3 7) -> 3 * 7 = 21 (left: 2 21) -> Input: 3 9 27 -> 9 * 3 = 27 (left: 9 27) -> 9 - 3 = 6 (left: 6 27) -> 9 - 4 = 5 (left: 5 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 3 = 7 (left: 2 3 7) -> 3 * 7 = 21 (left: 2 21) -> Input: 3 9 27 -> 9 * 3 = 27 (left: 9 27) -> 9 - 3 = 6 (left: 6 27) -> 9 - 4 = 5 (left: 5 5) -> 5 / 5 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "9 27"
                },
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "9 27"
                }
            },
            "Step 7": {
                "Step": "10 - 3 = 7 (left: 2 3 7) -> 3 * 7 = 21 (left: 2 21) -> Input: 3 9 27 -> 9 * 3 = 27 (left: 9 27) -> 27 / 9 = 3 (left: 3 27)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 3 = 7 (left: 2 3 7) -> 3 * 7 = 21 (left: 2 21) -> Input: 3 9 27 -> 9 * 3 = 27 (left: 9 27) -> 27 / 9 = 3 (left: 3 27) -> 27 - 3 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "8 * 2 = 16 (left:"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 2 9 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 3 7"
                }
            },
            "Step 1": {
                "Step": "10 - 3 = 7 (left: 2 3 7) -> 7 / 2 = 3.5 (left: 3.5 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 3 = 7 (left: 2 3 7) -> 7 / 2 = 3.5 (left: 3.5 7) -> 7 / 3.5 = 2 (left: 2 7)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 3 = 7 (left: 2 3 7) -> 7 / 2 = 3.5 (left: 3.5 7) -> 7 / 3.5 = 2 (left: 2 7) -> 2 + 7 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "3 7 10"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "- Add the numbers together"
                }
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> Possible -> There are many possible next steps depending on the specific context or problem you are referring to. Can you provide more information or clarify the situation so I can give you more relevant suggestions? -> - Add the numbers together -> 2 + 8 + 8 + 14 = 32",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> Possible -> There are many possible next steps depending on the specific context or problem you are referring to. Can you provide more information or clarify the situation so I can give you more relevant suggestions? -> - Add the numbers together -> 2 + 8 + 8 + 14 = 32 -> 16 + 14 = 30 (left: 2 8 30)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> Possible -> There are many possible next steps depending on the specific context or problem you are referring to. Can you provide more information or clarify the situation so I can give you more relevant suggestions? -> - Add the numbers together -> 2 + 8 + 8 + 14 = 32 -> 16 + 14 = 30 (left: 2 8 30) -> 8 * 2 = 16 (left: 16 30)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "18"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> Input: 3 6 -> 3 * 6 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> Input: 3 6 -> 3 * 6 = 18 (left: 18) -> There are no possible next steps with the input 18. -> There are no possible next steps with the input 18.",
                "Pruning": null
            }
        },
        "Input": "2 3 3 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "990": {
        "puzzle": "3 4 8 12",
        "Agent 0": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 8 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 8 12"
                }
            },
            "Step 1": {
                "Step": "12 / 3 = 4 (left: 4 8 12) -> 8 / 4 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 3 = 4 (left: 4 8 12) -> 8 / 4 = 2 (left: 2) -> There is only one possible next step with only one number given.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 / 3 = 4 (left: 4 8 12) -> 8 / 4 = 2 (left: 2) -> There is only one possible next step with only one number given. -> None",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "3 8 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 4": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4) -> 3 / 4 = 0.75 (left: 0.75)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4) -> 3 / 4 = 0.75 (left: 0.75) -> There are no possible next steps with the input 0.75 as it is already a single value.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "16 64"
                }
            },
            "Step 7": {
                "Step": "12 / 3 = 4 (left: 4 8 12) -> 12 - 4 = 8 (left: 8 8) -> 8 + 8 = 16 -> 8 * 8 = 64 (left: 16 64) -> 80 / 5 = 16 (left",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 / 3 = 4 (left: 4 8 12) -> 12 - 4 = 8 (left: 8 8) -> 8 + 8 = 16 -> 8 * 8 = 64 (left: 16 64) -> 80 / 5 = 16 (left -> 80 / 5 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "There are no possible next steps with just the number 4."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 * 4 = 12 (left: 8 12 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 8 "
                }
            },
            "Step 1": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> Input: 2 3 6 8\nSteps:\n3 * 8 = 24 (left: 2 6 24)\n2 * 6 = 12 (left: 12 24)\nAnswer: (2 * 6) * (3 * 8) = 24",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "3 4 4"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 4": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 12 - 8 = ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 12 - 8 =  -> 12 - 8 = 4",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 12 - 8 =  -> 12 - 8 = 4 -> 12 - 4 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "2 64"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "16 64"
                }
            },
            "Step 7": {
                "Step": "12 / 3 = 4 (left: 4 8 12) -> 12 - 4 = 8 (left: 8 8) -> 8 + 8 = 16 -> 8 * 8 = 64 (left: 16 64) -> 16 * 4 = 64 (left: 64)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "There are no possible next steps with only one number provided."
                }
            },
            "Step 8": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12) -> 24 / 12 = 2 (left: 2) -> There are no possible next steps with only one number provided. -> Please provide at least two numbers to generate possible next steps.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 / 4 = 3 (left: 3 8 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 8 "
                }
            },
            "Step 1": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 + 8 = 11 (left: 8 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 + 8 = 11 (left: 8 11) -> 8 / 11 \u2248 0.7273 (left: 0.7273)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 + 8 = 11 (left: 8 11) -> 8 / 11 \u2248 0.7273 (left: 0.7273) -> There are no possible next steps with the input 0.7273 as it is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "4 8 12"
                }
            },
            "Step 4": {
                "Step": "12 / 3 = 4 (left: 4 8 12) -> 12 / 4 = 3 (left: 3 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 / 3 = 4 (left: 4 8 12) -> 12 / 4 = 3 (left: 3 12) -> 12 / 3 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 3 = 4 (left: 4 8 12) -> 12 / 4 = 3 (left: 3 12) -> 12 / 3 = 4 (left: 4) -> There are no possible next steps with just the number 4.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "16 64"
                }
            },
            "Step 7": {
                "Step": "12 / 3 = 4 (left: 4 8 12) -> 12 - 4 = 8 (left: 8 8) -> 8 + 8 = 16 -> 8 * 8 = 64 (left: 16 64) -> 15 - 5 = 10",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 / 3 = 4 (left: 4 8 12) -> 12 - 4 = 8 (left: 8 8) -> 8 + 8 = 16 -> 8 * 8 = 64 (left: 16 64) -> 15 - 5 = 10 -> 15 * 5 = 75",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "12 - 4 = 8 (left: 3 8 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 1": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4 12) -> 4 + 3 = 7 (left: 7 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4 12) -> 4 + 3 = 7 (left: 7 12) -> 7 / 12 = 0.58333 (left: 0.58333)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "4 8 12"
                },
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "4 8 12"
                }
            },
            "Step 4": {
                "Step": "12 / 3 = 4 (left: 4 8 12) -> 12 - 4 = 8 (left: 8 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 / 3 = 4 (left: 4 8 12) -> 12 - 4 = 8 (left: 8 8) -> 8 + 8 = 16",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 3 = 4 (left: 4 8 12) -> 12 - 4 = 8 (left: 8 8) -> 8 + 8 = 16 -> 8 * 8 = 64 (left: 16 64)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "16 64"
                }
            },
            "Step 7": {
                "Step": "12 / 3 = 4 (left: 4 8 12) -> 12 - 4 = 8 (left: 8 8) -> 8 + 8 = 16 -> 8 * 8 = 64 (left: 16 64) -> 16 / 64 = 0.25 (left: 0.25)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "4 + 4 = 8"
                }
            },
            "Step 8": {
                "Step": "12 / 3 = 4 (left: 4 8 12) -> 8 * 4 = 32 (left: -> 8 - 4 = 4 (left: 4) -> 4 + 4 = 8 -> 8 / 4 = 2 (left: 2 4)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 8 "
                }
            },
            "Step 1": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 8 - 3 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 8 - 3 = 5 (left: 5) -> There are no possible next steps with just the number 5.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 8 - 3 = 5 (left: 5) -> There are no possible next steps with just the number 5. -> There are no possible next steps with just the number 5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 4": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 12 - 3 = 9 (left: 3 8 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 12 - 3 = 9 (left: 3 8 9) -> 3 * 8 = 24 (left: 24 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 12 - 3 = 9 (left: 3 8 9) -> 3 * 8 = 24 (left: 24 9) -> 24 * 9 = 216 (left: 216)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "There is only one number provided, so there are no possible next steps to perform any operations."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "16 64"
                }
            },
            "Step 7": {
                "Step": "12 / 3 = 4 (left: 4 8 12) -> 12 - 4 = 8 (left: 8 8) -> 8 + 8 = 16 -> 8 * 8 = 64 (left: 16 64) -> 27 - ",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 / 3 = 4 (left: 4 8 12) -> 12 - 4 = 8 (left: 8 8) -> 8 + 8 = 16 -> 8 * 8 = 64 (left: 16 64) -> 27 -  -> 27 - 8 = 19 (left: 19)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "There are no possible next steps with just the number 5."
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "12 - 8 = 4 (left: 3 4 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 1": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 12 / 8 = 1.5 (left: 3 1.5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 12 / 8 = 1.5 (left: 3 1.5) -> 3 / 1.5 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 12 / 8 = 1.5 (left: 3 1.5) -> 3 / 1.5 = 2 (left: 2) -> No possible next steps with just one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 4": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 3 + 8 = 11 (left: 11 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 3 + 8 = 11 (left: 11 12) -> 11 * 12 = 132 (left: 132)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 3 + 8 = 11 (left: 11 12) -> 11 * 12 = 132 (left: 132) -> 13 + 2 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "There are no possible next steps with the input 0.7273 as it is a single number."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "16 64"
                }
            },
            "Step 7": {
                "Step": "12 / 3 = 4 (left: 4 8 12) -> 12 - 4 = 8 (left: 8 8) -> 8 + 8 = 16 -> 8 * 8 = 64 (left: 16 64) -> 16 * 4 = 64 (left: 64)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "No possible next steps as there is only one number left."
                }
            },
            "Step 8": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 8 / 3 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14) -> No possible next steps as there is only one number left. -> No possible next steps as there is only one number left.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "12 - 4 = 8 (left: 3 8 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 1": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 8 / 3 = 2.67 (left: 2.67 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 8 / 3 = 2.67 (left: 2.67 12) -> 12 - 2.67 = 9.33 (left: 9.33)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 8 / 3 = 2.67 (left: 2.67 12) -> 12 - 2.67 = 9.33 (left: 9.33) -> There is only one number provided, so there are no possible next steps to perform any operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 4": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 3 + 8 = 11 (left: 11 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 3 + 8 = 11 (left: 11 12) -> 11 + 12 = 23 (left: 23)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 3 + 8 = 11 (left: 11 12) -> 11 + 12 = 23 (left: 23) -> 23 + 2 = 25 (left: 2)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "There are no possible next steps with just the number 5."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "16 64"
                }
            },
            "Step 7": {
                "Step": "12 / 3 = 4 (left: 4 8 12) -> 12 - 4 = 8 (left: 8 8) -> 8 + 8 = 16 -> 8 * 8 = 64 (left: 16 64) -> 64 / 16 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "No possible next steps as there is only one number left."
                }
            },
            "Step 8": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 8 / 3 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14) -> No possible next steps as there is only one number left. -> No possible next steps as there is only one number left.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "3 * 4 = 12 (left: 8 12 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 1": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12) -> 24 * 12 = 288 (left: 288)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12) -> 24 * 12 = 288 (left: 288) -> 8 * 8 * 2 = 128 (left: 128)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "4 8 12"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 4": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 8 / 3 = 2 (left: 2 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 8 / 3 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 8 / 3 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14) -> No possible next steps as there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "16 64"
                }
            },
            "Step 7": {
                "Step": "12 / 3 = 4 (left: 4 8 12) -> 12 - 4 = 8 (left: 8 8) -> 8 + 8 = 16 -> 8 * 8 = 64 (left: 16 64) -> 80 * 5 = 400 (left",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 / 3 = 4 (left: 4 8 12) -> 12 - 4 = 8 (left: 8 8) -> 8 + 8 = 16 -> 8 * 8 = 64 (left: 16 64) -> 80 * 5 = 400 (left -> 80 / 5 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "4 + 4 = 8"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "12 / 3 = 4 (left: 4 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 8 "
                }
            },
            "Step 1": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 8 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "8 12 12"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 4": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12) -> 24 / 12 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12) -> 24 / 12 = 2 (left: 2) -> There are no possible next steps with only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "16 64"
                }
            },
            "Step 7": {
                "Step": "12 / 3 = 4 (left: 4 8 12) -> 12 - 4 = 8 (left: 8 8) -> 8 + 8 = 16 -> 8 * 8 = 64 (left: 16 64) -> 64 - 16 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "There are no possible next steps with only one number provided."
                }
            },
            "Step 8": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12) -> 24 / 12 = 2 (left: 2) -> There are no possible next steps with only one number provided. -> Please provide at least two numbers to find possible next steps.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 8 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 1": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 8 / 3 = 2.66666666667 (left: 2.67 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 8 / 3 = 2.66666666667 (left: 2.67 12) -> Possible next steps:",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 8 / 3 = 2.66666666667 (left: 2.67 12) -> Possible next steps: -> - 8 * 8 = 64 (left: 2 64)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "4 8 12"
                }
            },
            "Step 4": {
                "Step": "12 / 3 = 4 (left: 4 8 12) -> 8 * 4 = 32 (left:",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 / 3 = 4 (left: 4 8 12) -> 8 * 4 = 32 (left: -> 8 - 4 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 3 = 4 (left: 4 8 12) -> 8 * 4 = 32 (left: -> 8 - 4 = 4 (left: 4) -> 4 + 4 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "16 64"
                }
            },
            "Step 7": {
                "Step": "12 / 3 = 4 (left: 4 8 12) -> 12 - 4 = 8 (left: 8 8) -> 8 + 8 = 16 -> 8 * 8 = 64 (left: 16 64) -> 16 + 64 = 80 (left: 80)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "No possible next steps as there is only one number left."
                }
            },
            "Step 8": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 8 / 3 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14) -> No possible next steps as there is only one number left. -> No possible next steps as there is only one number left.",
                "Pruning": null
            }
        },
        "Input": "3 4 8 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "991": {
        "puzzle": "2 4 6 11",
        "Agent 0": {
            "Step 0": {
                "Step": "6 * 11 = 66 (left: 2 4 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 4 "
                }
            },
            "Step 1": {
                "Step": "6 * 11 = 66 (left: 2 4  -> 5 + 10 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 11 = 66 (left: 2 4  -> 5 + 10 = 15 (left: 15) -> 15 / 2 = 7.5 ",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 11 = 66 (left: 2 4  -> 5 + 10 = 15 (left: 15) -> 15 / 2 = 7.5  -> 15 / 2 = 7.5 (left: 7.5)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "3 4 "
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "3 4 "
                }
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 4  -> 4 / 3 = 1.3333 (left: 1.3333)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 4  -> 4 / 3 = 1.3333 (left: 1.3333) -> There are no possible next steps for the input \"1.3333\" as it is already a single number and not a mathematical expression with multiple numbers.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 3 4  -> 4 / 3 = 1.3333 (left: 1.3333) -> There are no possible next steps for the input \"1.3333\" as it is already a single number and not a mathematical expression with multiple numbers. -> There are no possible next steps for the input \"1.3333\" as it is already a single number and not a mathematical expression with multiple numbers.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps with the input of 15."
                }
            },
            "Step 7": {
                "Step": "6 / 2 = 3 (left: 3 4  -> 3 + 4 = 7 (left: 7) -> 7 + 8 = 15 (left: 15) -> There are no possible next steps with the input of 15. -> There are no possible next steps with the input of 15.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 / 2 = 3 (left: 3 4  -> 3 + 4 = 7 (left: 7) -> 7 + 8 = 15 (left: 15) -> There are no possible next steps with the input of 15. -> There are no possible next steps with the input of 15. -> There are no possible next steps with the input of 15.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 11 = 17 (left: 2 4 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 6 11"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 6 * 6 = 36 (left: 11 36)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 6 * 6 = 36 (left: 11 36) -> 11 + 36 = 47 (left: 47)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 6 * 6 = 36 (left: 11 36) -> 11 + 36 = 47 (left: 47) -> 47 + 2 = 49",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "3 4 "
                }
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 4  -> 4 / 3 = 1.3333333333333333 (left: 1.3333333333333333)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 4  -> 4 / 3 = 1.3333333333333333 (left: 1.3333333333333333) -> 1.3333333333333333 - 1 = 0.33333333333333326",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 3 4  -> 4 / 3 = 1.3333333333333333 (left: 1.3333333333333333) -> 1.3333333333333333 - 1 = 0.33333333333333326 -> 1.3333333333333333 + 1 = 2.333333333333333",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "None, as there is only one number left."
                }
            },
            "Step 7": {
                "Step": "6 / 2 = 3 (left: 3 4  -> 3 + 4 = 7 (left: 7) -> 7 + 8 = 15 (left: 15) -> None, as there is only one number left. -> There are no possible next steps as there is only one number left.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 / 2 = 3 (left: 3 4  -> 3 + 4 = 7 (left: 7) -> 7 + 8 = 15 (left: 15) -> None, as there is only one number left. -> There are no possible next steps as there is only one number left. -> No possible next steps.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 2 10 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 6 7"
                }
            },
            "Step 1": {
                "Step": "11 - 4 = 7 (left: 2 6 7) -> 2 + 6 = 8 (left: 7 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 4 = 7 (left: 2 6 7) -> 2 + 6 = 8 (left: 7 8) -> 7 - 8 = -1 (left: -1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 4 = 7 (left: 2 6 7) -> 2 + 6 = 8 (left: 7 8) -> 7 - 8 = -1 (left: -1) -> No valid next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "3 4 "
                }
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 4  -> 3 + 4 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 4  -> 3 + 4 = 7 (left: 7) -> 7 + 8 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 3 4  -> 3 + 4 = 7 (left: 7) -> 7 + 8 = 15 (left: 15) -> There are no possible next steps with the input of 15.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "None, as there is only one number left."
                }
            },
            "Step 7": {
                "Step": "6 / 2 = 3 (left: 3 4  -> 3 + 4 = 7 (left: 7) -> 7 + 8 = 15 (left: 15) -> None, as there is only one number left. -> There are no possible next steps as there is only one number left.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 / 2 = 3 (left: 3 4  -> 3 + 4 = 7 (left: 7) -> 7 + 8 = 15 (left: 15) -> None, as there is only one number left. -> There are no possible next steps as there is only one number left. -> None",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "There are no possible next steps with just the number 2."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 6 6 11)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 4  -> 4 - 3 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 4  -> 4 - 3 = 1 (left: 1) -> 1 + 1 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 4  -> 4 - 3 = 1 (left: 1) -> 1 + 1 = 2 (left: 2) -> 2 / 2 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "3 4 "
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "3 4 "
                }
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 4  -> 4 / 3 = 1.33 (left: 1.33)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 4  -> 4 / 3 = 1.33 (left: 1.33) -> There is only one number input, so there are no possible next steps for calculation.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 3 4  -> 4 / 3 = 1.33 (left: 1.33) -> There is only one number input, so there are no possible next steps for calculation. -> There are no possible next steps for calculation.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "1.3333333333333333 + 1 = 2.333333333333333"
                }
            },
            "Step 7": {
                "Step": "6 / 2 = 3 (left: 3 4  -> 4 / 3 = 1.3333333333333333 (left: 1.3333333333333333) -> 1.3333333333333333 - 1 = 0.33333333333333326 -> 1.3333333333333333 + 1 = 2.333333333333333 -> 1 * 1.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 / 2 = 3 (left: 3 4  -> 4 / 3 = 1.3333333333333333 (left: 1.3333333333333333) -> 1.3333333333333333 - 1 = 0.33333333333333326 -> 1.3333333333333333 + 1 = 2.333333333333333 -> 1 * 1. -> 1 * 1 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "0.75 / 2 = 0.375"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 2 10 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 6 7"
                }
            },
            "Step 1": {
                "Step": "11 - 4 = 7 (left: 2 6 7) -> 7 - 2 = 5 (left: 5 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 4 = 7 (left: 2 6 7) -> 7 - 2 = 5 (left: 5 7) -> 7 / 5 = 1.4 (left: 1.4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 4 = 7 (left: 2 6 7) -> 7 - 2 = 5 (left: 5 7) -> 7 / 5 = 1.4 (left: 1.4) -> It seems like there was an error in the input provided. Please provide a valid set of numbers for calculation.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "3 4 "
                }
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 4  -> 3 + 4 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 4  -> 3 + 4 = 7 (left: 7) -> 7 + 8 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 3 4  -> 3 + 4 = 7 (left: 7) -> 7 + 8 = 15 (left: 15) -> None, as there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "No possible next steps with just one number."
                }
            },
            "Step 7": {
                "Step": "6 / 2 = 3 (left: 3 4  -> 4 - 3 = 1 (left: 1) -> No possible next steps with just one number. -> No possible next steps with just one number. -> Input more numbers to perform operations.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 / 2 = 3 (left: 3 4  -> 4 - 3 = 1 (left: 1) -> No possible next steps with just one number. -> No possible next steps with just one number. -> Input more numbers to perform operations. -> - Add two numbers",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "11 - 2 = 9 (left: 2 4 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 4 9"
                }
            },
            "Step 1": {
                "Step": "11 - 2 = 9 (left: 2 4 9) -> Input: 1 5",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 2 = 9 (left: 2 4 9) -> Input: 1 5 -> 1 + 5 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 2 = 9 (left: 2 4 9) -> Input: 1 5 -> 1 + 5 = 6 (left: 6) -> 6 + 14 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "2 6 7"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "3 4 "
                }
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 4  -> 3 + 4 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 4  -> 3 + 4 = 7 (left: 7) -> 7 * 8 = 56 (left: 56)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 3 4  -> 3 + 4 = 7 (left: 7) -> 7 * 8 = 56 (left: 56) -> 56 / 2 = 28",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "There are no possible next steps with just the number 2."
                }
            },
            "Step 7": {
                "Step": "6 / 2 = 3 (left: 3 4  -> Input: 5 10 -> 10 / 5 = 2 (left: 2) -> There are no possible next steps with just the number 2. -> 2 + 2 = 4",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 / 2 = 3 (left: 3 4  -> Input: 5 10 -> 10 / 5 = 2 (left: 2) -> There are no possible next steps with just the number 2. -> 2 + 2 = 4 -> 2 * 2 = 4 (left: 4 = 4)",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 / 2 = 3 (left: 3 4 ",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 6 7"
                }
            },
            "Step 1": {
                "Step": "11 - 4 = 7 (left: 2 6 7) -> 2 * 6 = 12 (left: 7 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 4 = 7 (left: 2 6 7) -> 2 * 6 = 12 (left: 7 12) -> 12 / 7 = 1.71 (left: 1.71)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 4 = 7 (left: 2 6 7) -> 2 * 6 = 12 (left: 7 12) -> 12 / 7 = 1.71 (left: 1.71) -> There are no possible next steps for the input 1.71.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "3 4 "
                }
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 4  -> Input: 5 10",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 4  -> Input: 5 10 -> 10 / 5 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 3 4  -> Input: 5 10 -> 10 / 5 = 2 (left: 2) -> There are no possible next steps with just the number 2.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "None, as there is only one number left."
                }
            },
            "Step 7": {
                "Step": "6 / 2 = 3 (left: 3 4  -> 3 + 4 = 7 (left: 7) -> 7 + 8 = 15 (left: 15) -> None, as there is only one number left. -> There are no possible next steps as there is only one number left.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 / 2 = 3 (left: 3 4  -> 3 + 4 = 7 (left: 7) -> 7 + 8 = 15 (left: 15) -> None, as there is only one number left. -> There are no possible next steps as there is only one number left. -> None",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "There are no possible next steps for the input 11."
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 2 10 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 4 9"
                }
            },
            "Step 1": {
                "Step": "11 - 2 = 9 (left: 2 4 9) -> 9 - 2 = 7 (left: 4 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 2 = 9 (left: 2 4 9) -> 9 - 2 = 7 (left: 4 7) -> 4 + 7 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 2 = 9 (left: 2 4 9) -> 9 - 2 = 7 (left: 4 7) -> 4 + 7 = 11 (left: 11) -> There are no possible next steps for the input 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "3 4 "
                }
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 4  -> 5 + 10 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 4  -> 5 + 10 = 15 (left: 15) -> None - the input is a single number and there are no other numbers to perform operations with.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 3 4  -> 5 + 10 = 15 (left: 15) -> None - the input is a single number and there are no other numbers to perform operations with. -> There are no possible next steps since there are no other numbers to perform operations with.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "There are no possible next steps with just the number 2."
                }
            },
            "Step 7": {
                "Step": "6 / 2 = 3 (left: 3 4  -> Input: 5 10 -> 10 / 5 = 2 (left: 2) -> There are no possible next steps with just the number 2. -> 2 + 2 = 4",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 / 2 = 3 (left: 3 4  -> Input: 5 10 -> 10 / 5 = 2 (left: 2) -> There are no possible next steps with just the number 2. -> 2 + 2 = 4 -> 2 + 1 = 3 (left: 1 3)",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 2 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 6 7"
                }
            },
            "Step 1": {
                "Step": "11 - 4 = 7 (left: 2 6 7) -> 6 / 2 = 3 (left: 3 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 4 = 7 (left: 2 6 7) -> 6 / 2 = 3 (left: 3 7) -> 9 - 5 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 4 = 7 (left: 2 6 7) -> 6 / 2 = 3 (left: 3 7) -> 9 - 5 = 4 (left: 4) -> 4 + 4 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "3 4 "
                }
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 4  -> 4 - 3 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 4  -> 4 - 3 = 1 (left: 1) -> No possible next steps with just one number.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 3 4  -> 4 - 3 = 1 (left: 1) -> No possible next steps with just one number. -> No possible next steps with just one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps for the input \"1.3333\" as it is already a single number and not a mathematical expression with multiple numbers."
                }
            },
            "Step 7": {
                "Step": "6 / 2 = 3 (left: 3 4  -> 4 / 3 = 1.3333 (left: 1.3333) -> There are no possible next steps for the input \"1.3333\" as it is already a single number and not a mathematical expression with multiple numbers. -> There are no possible next steps for the input \"1.3333\" as it is already a single number and not a mathematical expression with multiple numbers. -> There are no possible next steps for the input \"1.3333\" as it is already a single number and not a mathematical expression with multiple numbers.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 / 2 = 3 (left: 3 4  -> 4 / 3 = 1.3333 (left: 1.3333) -> There are no possible next steps for the input \"1.3333\" as it is already a single number and not a mathematical expression with multiple numbers. -> There are no possible next steps for the input \"1.3333\" as it is already a single number and not a mathematical expression with multiple numbers. -> There are no possible next steps for the input \"1.3333\" as it is already a single number and not a mathematical expression with multiple numbers. -> 1.3333 + 1 = 2.3333 (left: 2.3333)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "There are no possible next steps with the input of 15."
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "6 + 11 = 17 (left: 2 4 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 6 7"
                }
            },
            "Step 1": {
                "Step": "11 - 4 = 7 (left: 2 6 7) -> 2 + 6 = 8 (left: 7 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 4 = 7 (left: 2 6 7) -> 2 + 6 = 8 (left: 7 8) -> 7 + 8 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 4 = 7 (left: 2 6 7) -> 2 + 6 = 8 (left: 7 8) -> 7 + 8 = 15 (left: 15) -> 15 / 2 = 7.5 (left: 7.5)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "2 10 11"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "3 4 "
                }
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 4  -> 3 / 4 = 0.75 (left: 0.75)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 4  -> 3 / 4 = 0.75 (left: 0.75) -> 0.75 * 2 = 1.5",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 3 4  -> 3 / 4 = 0.75 (left: 0.75) -> 0.75 * 2 = 1.5 -> 0.75 / 2 = 0.375",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "0.75 / 2 = 0.375"
                }
            },
            "Step 7": {
                "Step": "6 / 2 = 3 (left: 3 4  -> 3 / 4 = 0.75 (left: 0.75) -> 0.75 * 2 = 1.5 -> 0.75 / 2 = 0.375 -> 0.75 - 2 = -1.25 (left: -1.25)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "No valid next steps."
                }
            },
            "Step 8": {
                "Step": "11 - 4 = 7 (left: 2 6 7) -> 2 + 6 = 8 (left: 7 8) -> 7 - 8 = -1 (left: -1) -> No valid next steps. -> There are no valid next steps for the input provided.",
                "Pruning": null
            }
        },
        "Input": "2 4 6 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "992": {
        "puzzle": "2 2 8 9",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 8 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 8 9"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 8 9) -> 8 / 4 = 2 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 8 9) -> 8 / 4 = 2 (left: -> No possible next steps as the equation has been solved.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 8 9) -> 8 / 4 = 2 (left: -> No possible next steps as the equation has been solved. -> Equation has been solved.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "0."
                }
            },
            "Step 4": {
                "Step": "2 / 8 = 0.25 (left: 0. -> There are no possible next steps as there are no numbers provided after the input.",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 / 8 = 0.25 (left: 0. -> There are no possible next steps as there are no numbers provided after the input. -> There are no possible next steps as there are no numbers provided after the input.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 / 8 = 0.25 (left: 0. -> There are no possible next steps as there are no numbers provided after the input. -> There are no possible next steps as there are no numbers provided after the input. -> There are no possible next steps as there are no numbers provided after the input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "8 10"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 9 / 4 = 2.25 (left: 2.25 8) -> Input: 5 3 10 -> 5 + 3 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "There are no possible next steps with the input 0 as there are no other numbers to perform operations with."
                }
            },
            "Step 8": {
                "Step": "2 / 8 = 0.25 (left: 0. -> There are no possible next steps with the input 0 as there are no other numbers to perform operations with. -> There are no possible next steps with the input 0 as there are no other numbers to perform operations with. -> There are no possible next steps with the input 0 as there are no other numbers to perform operations with. -> None",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "33 / 3 = 11"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 / 2 = 1 (left: 1 8 9)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "16 8 9"
                }
            },
            "Step 1": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 8 * 9 = 72 (left: 16 72)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 8 * 9 = 72 (left: 16 72) -> 16 + 72 = 88 (left: 88)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 8 * 9 = 72 (left: 16 72) -> 16 + 72 = 88 (left: 88) -> 8 / 8 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "0."
                },
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "0."
                }
            },
            "Step 4": {
                "Step": "2 / 8 = 0.25 (left: 0. -> There are no possible next steps with the input of 0.",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 / 8 = 0.25 (left: 0. -> There are no possible next steps with the input of 0. -> No possible next steps with the input of 0.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 / 8 = 0.25 (left: 0. -> There are no possible next steps with the input of 0. -> No possible next steps with the input of 0. -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "8 10"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 9 / 4 = 2.25 (left: 2.25 8) -> Input: 5 3 10 -> 5 + 3 = 8 (left: 8 10) -> 8 - 10 = -2 (left: -2)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "There are no possible next steps with the input 0 as there are no other numbers to perform operations with."
                }
            },
            "Step 8": {
                "Step": "2 / 8 = 0.25 (left: 0. -> There are no possible next steps with the input 0 as there are no other numbers to perform operations with. -> There are no possible next steps with the input 0 as there are no other numbers to perform operations with. -> There are no possible next steps with the input 0 as there are no other numbers to perform operations with. -> There are no possible next steps with the input 0.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 8 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "16 8 9"
                }
            },
            "Step 1": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 8 + 9 = 17 (left: 16 17)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 8 + 9 = 17 (left: 16 17) -> 16 + 17 = 33 (left: 33)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 8 + 9 = 17 (left: 16 17) -> 16 + 17 = 33 (left: 33) -> 33 / 3 = 11",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "4 8 9"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 4 * 8 = 32 (left: 32 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 4 * 8 = 32 (left: 32 9) -> 32 - 9 = 23 (left: 9 23)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 4 * 8 = 32 (left: 32 9) -> 32 - 9 = 23 (left: 9 23) -> 9 + 23 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "There are no possible next steps with the input of 0."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "8 10"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 9 / 4 = 2.25 (left: 2.25 8) -> Input: 5 3 10 -> 5 + 3 = 8 (left: 8 10) -> 8 * 10 = 80 (left: 80)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "There are no possible next steps with the input of 0."
                }
            },
            "Step 8": {
                "Step": "2 / 8 = 0.25 (left: 0. -> There are no possible next steps with the input of 0. -> There are no possible next steps with the input of 0. -> There are no possible next steps with the input of 0. -> There are no possible next steps with the input of 0.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 8 9)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 8 9"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 4 * 8 = 32 (left: 9 32)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 4 * 8 = 32 (left: 9 32) -> 9 * 32 = 288 (left: 288)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 4 * 8 = 32 (left: 9 32) -> 9 * 32 = 288 (left: 288) -> 8 * 8 * 2 = 128",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "4 8 9"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 9 - 8 = 1 (left: 4 1)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 9 - 8 = 1 (left: 4 1) -> 4 - 1 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 9 - 8 = 1 (left: 4 1) -> 4 - 1 = 3 (left: 3) -> 3 * 3 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "8 * 8 * 2 = 128"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "8 10"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 9 / 4 = 2.25 (left: 2.25 8) -> Input: 5 3 10 -> 5 + 3 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "8 10"
                }
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 9 / 4 = 2.25 (left: 2.25 8) -> Input: 5 3 10 -> 5 + 3 = 8 (left: 8 10) -> 8 * 10 = 80 (left: 80) ",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "8 10"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 8 = 10 (left: 2 10 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "0."
                }
            },
            "Step 1": {
                "Step": "2 / 8 = 0.25 (left: 0. -> 0 + 0 = 0",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 / 8 = 0.25 (left: 0. -> 0 + 0 = 0 -> 0 / 0 = undefined",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 / 8 = 0.25 (left: 0. -> 0 + 0 = 0 -> 0 / 0 = undefined -> There are no possible next steps for the input 0 / 0 as division by zero is undefined in mathematics.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "0."
                }
            },
            "Step 4": {
                "Step": "2 / 8 = 0.25 (left: 0. -> There are no possible next steps as there are no numbers provided after the input.",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 / 8 = 0.25 (left: 0. -> There are no possible next steps as there are no numbers provided after the input. -> There are no possible next steps as there are no numbers provided after the input.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 / 8 = 0.25 (left: 0. -> There are no possible next steps as there are no numbers provided after the input. -> There are no possible next steps as there are no numbers provided after the input. -> None.",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "8 * 8 * 2 = 128"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "8 10"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 9 / 4 = 2.25 (left: 2.25 8) -> Input: 5 3 10 -> 5 + 3 = 8 (left: 8 10) -> 8 * 10 = 80 (left: 80)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "There are no possible next steps with the input of 0."
                }
            },
            "Step 8": {
                "Step": "2 / 8 = 0.25 (left: 0. -> There are no possible next steps with the input of 0. -> There are no possible next steps with the input of 0. -> There are no possible next steps with the input of 0. -> There are no possible next steps with the input of 0.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "2 / 2 = 1 (left: 1 8 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "0."
                }
            },
            "Step 1": {
                "Step": "2 / 8 = 0.25 (left: 0. -> There are no possible next steps with the input of 0.",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 / 8 = 0.25 (left: 0. -> There are no possible next steps with the input of 0. -> There are no possible next steps with the input of 0.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 / 8 = 0.25 (left: 0. -> There are no possible next steps with the input of 0. -> There are no possible next steps with the input of 0. -> There are no possible next steps with the input of 0.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "4 8 9"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 8 / 4 = 2 (left: 2 8 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 8 / 4 = 2 (left: 2 8 9) -> 2 * 8 = 16 (left: 9 16)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 8 / 4 = 2 (left: 2 8 9) -> 2 * 8 = 16 (left: 9 16) -> 9 + 16 = 25 (left: 25)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "There are no possible next steps with the input 0 as there are no other numbers to perform operations with."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "8 10"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 9 / 4 = 2.25 (left: 2.25 8) -> Input: 5 3 10 -> 5 + 3 = 8 (left: 8 10) -> 8 - 10 = -2 (left: -2)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "There are no possible next steps for the input 0 / 0 as division by zero is undefined in mathematics."
                }
            },
            "Step 8": {
                "Step": "2 / 8 = 0.25 (left: 0. -> 0 + 0 = 0 -> 0 / 0 = undefined -> There are no possible next steps for the input 0 / 0 as division by zero is undefined in mathematics. -> Error: Division by zero is undefined in mathematics.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "2 * 8 = 16 (left: 16 8 9)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "16 8 9"
                }
            },
            "Step 1": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 16 + 8 = 24 (left: 9 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 16 + 8 = 24 (left: 9 24) -> 9 * 24 = 216 (left: 216)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 16 + 8 = 24 (left: 9 24) -> 9 * 24 = 216 (left: 216) -> 2 + 1 * 6 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "4 8 9"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "4 8 9"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 9 / 4 = 2.25 (left: 2.25 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 9 / 4 = 2.25 (left: 2.25 8) -> Input: 5 3 10",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 9 / 4 = 2.25 (left: 2.25 8) -> Input: 5 3 10 -> 5 + 3 = 8 (left: 8 10)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "8 10"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 9 / 4 = 2.25 (left: 2.25 8) -> Input: 5 3 10 -> 5 + 3 = 8 (left: 8 10) -> 8 / 4 = 2 (left: 2 14)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 9 / 4 = 2.25 (left: 2.25 8) -> Input: 5 3 10 -> 5 + 3 = 8 (left: 8 10) -> 8 / 4 = 2 (left: 2 14) -> 14 - 2 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "Equation has been solved."
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "2 * 8 = 16 (left: 16 8 9)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "16 8 9"
                }
            },
            "Step 1": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 16 - 8 = 8 (left: 8 9 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 16 - 8 = 8 (left: 8 9 8) -> 8 * 9 = 72 (left: ",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 16 - 8 = 8 (left: 8 9 8) -> 8 * 9 = 72 (left:  -> There are no more possible next steps with the given input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "0."
                }
            },
            "Step 4": {
                "Step": "2 / 8 = 0.25 (left: 0. -> There are no possible next steps with the input of 0.",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 / 8 = 0.25 (left: 0. -> There are no possible next steps with the input of 0. -> There are no possible next steps with the input of 0.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 / 8 = 0.25 (left: 0. -> There are no possible next steps with the input of 0. -> There are no possible next steps with the input of 0. -> There are no possible next steps with the input of 0.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "8 10"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 9 / 4 = 2.25 (left: 2.25 8) -> Input: 5 3 10 -> 5 + 3 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "33 / 3 = 11"
                }
            },
            "Step 8": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 8 + 9 = 17 (left: 16 17) -> 16 + 17 = 33 (left: 33) -> 33 / 3 = 11 -> 33 + 3 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "There are no possible next steps with the input of 0."
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 8 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "0."
                }
            },
            "Step 1": {
                "Step": "2 / 8 = 0.25 (left: 0. -> There are no possible next steps with the input 0 as there are no other numbers to perform operations with.",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 / 8 = 0.25 (left: 0. -> There are no possible next steps with the input 0 as there are no other numbers to perform operations with. -> There are no possible next steps with the input 0 as there are no other numbers to perform operations with.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 / 8 = 0.25 (left: 0. -> There are no possible next steps with the input 0 as there are no other numbers to perform operations with. -> There are no possible next steps with the input 0 as there are no other numbers to perform operations with. -> There are no possible next steps with the input 0 as there are no other numbers to perform operations with.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "0."
                }
            },
            "Step 4": {
                "Step": "2 / 8 = 0.25 (left: 0. -> There are no possible next steps with the input 0.",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 / 8 = 0.25 (left: 0. -> There are no possible next steps with the input 0. -> There are no possible next steps with the input 0.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 / 8 = 0.25 (left: 0. -> There are no possible next steps with the input 0. -> There are no possible next steps with the input 0. -> No possible next steps with the input 0.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "8 10"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 9 / 4 = 2.25 (left: 2.25 8) -> Input: 5 3 10 -> 5 + 3 = 8 (left: 8 10) -> 8 * 10 = 80 (left: 80)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "There are no possible next steps for the input 0 / 0 as division by zero is undefined in mathematics."
                }
            },
            "Step 8": {
                "Step": "2 / 8 = 0.25 (left: 0. -> 0 + 0 = 0 -> 0 / 0 = undefined -> There are no possible next steps for the input 0 / 0 as division by zero is undefined in mathematics. -> Undefined - Division by zero is not allowed in mathematics.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "2 / 8 = 0.25 (left: 0.",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "16 8 9"
                }
            },
            "Step 1": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 8 - 16 = -8 (left: -8 8 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 8 - 16 = -8 (left: -8 8 9) -> 8 * 9 = 72 (left: -8 72)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 8 - 16 = -8 (left: -8 8 9) -> 8 * 9 = 72 (left: -8 72) -> -8 + 72 = 64 (left: 64)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "4 8 9"
                },
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "4 8 9"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 9 - 8 = 1 (left: 4 1)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 9 - 8 = 1 (left: 4 1) -> 4 - 1 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 9 - 8 = 1 (left: 4 1) -> 4 - 1 = 3 (left: 3) -> 8 * 3 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "There are no possible next steps with the input of 0."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "8 10"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 9 / 4 = 2.25 (left: 2.25 8) -> Input: 5 3 10 -> 5 + 3 = 8 (left: 8 10) -> 8 * 10 = 80 (left: 80)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "8 10"
                }
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 9 / 4 = 2.25 (left: 2.25 8) -> Input: 5 3 10 -> 5 + 3 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "No possible next steps with the input 0."
                }
            }
        },
        "Input": "2 2 8 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "993": {
        "puzzle": "1 5 6 7",
        "Agent 0": {
            "Step 0": {
                "Step": "7 - 6 = 1 (left: 1 5 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 1": {
                "Step": "5 + 1 = 6 (left: 6 6 7) -> 6 * 6 = 36 (left: 7 36)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 1 = 6 (left: 6 6 7) -> 6 * 6 = 36 (left: 7 36) -> 36 / 7 = 5.14285714286 (left: 5.14285714286)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 1 = 6 (left: 6 6 7) -> 6 * 6 = 36 (left: 7 36) -> 36 / 7 = 5.14285714286 (left: 5.14285714286) -> There are no possible next steps for the input 5.14285714286.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "5 6 "
                }
            },
            "Step 4": {
                "Step": "7 / 1 = 7 (left: 5 6  -> 5 + 6 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 / 1 = 7 (left: 5 6  -> 5 + 6 = 11 (left: 11) -> 11 - 8 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 / 1 = 7 (left: 5 6  -> 5 + 6 = 11 (left: 11) -> 11 - 8 = 3 (left: 3) -> There are no possible next steps with the number 3.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "2 5.5"
                }
            },
            "Step 7": {
                "Step": "7 / 1 = 7 (left: 5 6  -> 5 + 6 = 11 (left: 11) -> There are no possible next steps with the input 11. -> 11 / 2 = 5.5 (left: 2 5.5) -> 3 + 9 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "There are no possible next steps with the number 3."
                }
            },
            "Step 8": {
                "Step": "7 / 1 = 7 (left: 5 6  -> 5 + 6 = 11 (left: 11) -> 11 - 8 = 3 (left: 3) -> There are no possible next steps with the number 3. -> 3 / 3 = 1",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 / 1 = 7 (left: 5 6 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 1": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 7 + 6 = 13 (left: 6 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 7 + 6 = 13 (left: 6 13) -> Possible next steps:",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 7 + 6 = 13 (left: 6 13) -> Possible next steps: -> This input is incomplete. Please provide a set of numbers to continue finding possible next steps.",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 4": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 7 + 6 = 13 (left: 6 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 7 + 6 = 13 (left: 6 13) -> 6 + 13 = 19 (left: 19)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 7 + 6 = 13 (left: 6 13) -> 6 + 13 = 19 (left: 19) -> 19 / 2 = 9.5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "2 5.5"
                }
            },
            "Step 7": {
                "Step": "7 / 1 = 7 (left: 5 6  -> 5 + 6 = 11 (left: 11) -> There are no possible next steps with the input 11. -> 11 / 2 = 5.5 (left: 2 5.5) -> 2 * 5.5 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "2 5.5"
                }
            },
            "Step 8": {
                "Step": "7 / 1 = 7 (left: 5 6  -> 5 + 6 = 11 (left: 11) -> There are no possible next steps with the input 11. -> 11 / 2 = 5.5 (left: 2 5.5) -> 5.5 / 2 = 2.75 (left: 2.75)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "This input is incomplete. Please provide a set of numbers to continue finding possible next steps."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 + 5 = 6 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 6 7"
                }
            },
            "Step 1": {
                "Step": "6 - 1 = 5 (left: 5 6 7) -> 6 + 7 = 13 (left: 5 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 1 = 5 (left: 5 6 7) -> 6 + 7 = 13 (left: 5 13) -> 13 - 5 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 1 = 5 (left: 5 6 7) -> 6 + 7 = 13 (left: 5 13) -> 13 - 5 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 4": {
                "Step": "5 + 1 = 6 (left: 6 6 7) -> 6 * 6 = 36 (left: 7 36)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 1 = 6 (left: 6 6 7) -> 6 * 6 = 36 (left: 7 36) -> 7 * 36 = 252 (left: 252)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 1 = 6 (left: 6 6 7) -> 6 * 6 = 36 (left: 7 36) -> 7 * 36 = 252 (left: 252) -> 25 + 2 = 27 (left: 27)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "2 5.5"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2 5.5"
                }
            },
            "Step 7": {
                "Step": "7 / 1 = 7 (left: 5 6  -> 5 + 6 = 11 (left: 11) -> There are no possible next steps with the input 11. -> 11 / 2 = 5.5 (left: 2 5.5) -> 5.5 - 2 = 3.5 (left: 3.5)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "2 5.5"
                }
            },
            "Step 8": {
                "Step": "7 / 1 = 7 (left: 5 6  -> 5 + 6 = 11 (left: 11) -> There are no possible next steps with the input 11. -> 11 / 2 = 5.5 (left: 2 5.5) -> 2 / 5.5 = 0.3636 (left: 0.3636)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "8 + 8 = 16"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 + 1 = 6 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 1": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 7 * 1 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 7 * 1 = 7 (left: 7) -> 7 * 8 = 56 (left: 56)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "6 6 7"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 4": {
                "Step": "5 + 1 = 6 (left: 6 6 7) -> 7 / 6 = 1.1666666666666667 (left: 1.1666666666666667)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 1 = 6 (left: 6 6 7) -> 7 / 6 = 1.1666666666666667 (left: 1.1666666666666667) -> 1.1666666666666667 * 2 = 2.3333333333333335 (left: 2.3333333333333335)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 1 = 6 (left: 6 6 7) -> 7 / 6 = 1.1666666666666667 (left: 1.1666666666666667) -> 1.1666666666666667 * 2 = 2.3333333333333335 (left: 2.3333333333333335) -> None, since there is only one number given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "2 5.5"
                }
            },
            "Step 7": {
                "Step": "7 / 1 = 7 (left: 5 6  -> 5 + 6 = 11 (left: 11) -> There are no possible next steps with the input 11. -> 11 / 2 = 5.5 (left: 2 5.5) -> 5.5 / 2 = 2.75 (left: 2.75)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "There are no possible next steps because the result of 5 / 6 is 0.83 recurring, which is not an integer."
                }
            },
            "Step 8": {
                "Step": "6 - 1 = 5 (left: 5 6 7) -> 5 / 6 = 0. -> There are no possible next steps because the result of 5 / 6 is 0.83 recurring, which is not an integer. -> There are no possible next steps because the result of 5 / 6 is 0.83 recurring, which is not an integer. -> Possible next steps:",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 + 5 = 6 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 1": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 7 / 6 = 1.17 (left: 1.17)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 7 / 6 = 1.17 (left: 1.17) -> 1 + 17 = 18",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 7 / 6 = 1.17 (left: 1.17) -> 1 + 17 = 18 -> 17 - 1 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "5 6 "
                },
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 4": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 7 - 6 = 1 (left: 1 1)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 7 - 6 = 1 (left: 1 1) -> 1 * 1 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 7 - 6 = 1 (left: 1 1) -> 1 * 1 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2 5.5"
                }
            },
            "Step 7": {
                "Step": "7 / 1 = 7 (left: 5 6  -> 5 + 6 = 11 (left: 11) -> There are no possible next steps with the input 11. -> 11 / 2 = 5.5 (left: 2 5.5) -> 2 / 5.5 = 0.36363636363636365 (left: 0.36363636363636365)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "19 / 2 = 9.5"
                }
            },
            "Step 8": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 7 + 6 = 13 (left: 6 13) -> 6 + 13 = 19 (left: 19) -> 19 / 2 = 9.5 -> None, this is the final result.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "6 - 1 = 5 (left: 5 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 1": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 * 6 = 36 (left: 7 36)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 * 6 = 36 (left: 7 36) -> 7 + 36 = 43 (left: 43)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 * 6 = 36 (left: 7 36) -> 7 + 36 = 43 (left: 43) -> 43 is a single number, so there are no possible next steps to take.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 4": {
                "Step": "5 + 1 = 6 (left: 6 6 7) -> 6 + 6 = 12 (left: 7 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 1 = 6 (left: 6 6 7) -> 6 + 6 = 12 (left: 7 12) -> 7 * 12 = 84 (left: 84)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 1 = 6 (left: 6 6 7) -> 6 + 6 = 12 (left: 7 12) -> 7 * 12 = 84 (left: 84) -> 84 / 4 = 21 (left: 21)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "2 5.5"
                },
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "2 5.5"
                }
            },
            "Step 7": {
                "Step": "7 / 1 = 7 (left: 5 6  -> 5 + 6 = 11 (left: 11) -> There are no possible next steps with the input 11. -> 11 / 2 = 5.5 (left: 2 5.5) -> 2 / 5.5 = 0.3636 (left: 0.3636)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "None, since there is only one number given."
                }
            },
            "Step 8": {
                "Step": "5 + 1 = 6 (left: 6 6 7) -> 7 / 6 = 1.1666666666666667 (left: 1.1666666666666667) -> 1.1666666666666667 * 2 = 2.3333333333333335 (left: 2.3333333333333335) -> None, since there is only one number given. -> There are no possible next steps as there is only one number given.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "5 + 1 = 6 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 1": {
                "Step": "5 + 1 = 6 (left: 6 6 7) -> 7 - 6 = 1 (left: 6 1)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 1 = 6 (left: 6 6 7) -> 7 - 6 = 1 (left: 6 1) -> 6 - 1 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 1 = 6 (left: 6 6 7) -> 7 - 6 = 1 (left: 6 1) -> 6 - 1 = 5 (left: 5) -> 5 / 5 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "6 6 7"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 4": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 * 6 = 36 (left: 7 36)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 * 6 = 36 (left: 7 36) -> 36 / 7 = 5.14 (left: 5.14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 * 6 = 36 (left: 7 36) -> 36 / 7 = 5.14 (left: 5.14) -> There are no possible next steps for the input 5.14 as it is a single number and not an equation.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "2 5.5"
                }
            },
            "Step 7": {
                "Step": "7 / 1 = 7 (left: 5 6  -> 5 + 6 = 11 (left: 11) -> There are no possible next steps with the input 11. -> 11 / 2 = 5.5 (left: 2 5.5) -> 2 - 5.5 = -3.5 (left: -3.5)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "1 + 1 = 2"
                }
            },
            "Step 8": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 7 - 6 = 1 (left: 1 1) -> 1 * 1 = 1 (left: 1) -> 1 + 1 = 2 -> 1 / 1 = 1 (left: 1 2 1)",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "7 - 1 = 6 (left: 5 6 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "5 6 "
                }
            },
            "Step 1": {
                "Step": "7 / 1 = 7 (left: 5 6  -> 5 + 6 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 / 1 = 7 (left: 5 6  -> 5 + 6 = 11 (left: 11) -> There are no possible next steps with the input 11.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 / 1 = 7 (left: 5 6  -> 5 + 6 = 11 (left: 11) -> There are no possible next steps with the input 11. -> 11 / 2 = 5.5 (left: 2 5.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 4": {
                "Step": "5 + 1 = 6 (left: 6 6 7) -> 6 - 6 = 0 (left: 0 7)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 1 = 6 (left: 6 6 7) -> 6 - 6 = 0 (left: 0 7) -> 7 - 0 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 1 = 6 (left: 6 6 7) -> 6 - 6 = 0 (left: 0 7) -> 7 - 0 = 7 (left: 7) -> 7 + 8 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There are no possible next steps for the input 5.14285714286."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "2 5.5"
                }
            },
            "Step 7": {
                "Step": "7 / 1 = 7 (left: 5 6  -> 5 + 6 = 11 (left: 11) -> There are no possible next steps with the input 11. -> 11 / 2 = 5.5 (left: 2 5.5) -> 2 / 5.5 = 0.3636 (left: 0.3636)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "This input is incomplete. Please provide a set of numbers to continue finding possible next steps."
                }
            },
            "Step 8": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 7 + 6 = 13 (left: 6 13) -> Possible next steps: -> This input is incomplete. Please provide a set of numbers to continue finding possible next steps. -> It seems that the input is incomplete. Please provide a set of numbers to continue finding possible next steps.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "6 + 1 = 7 (left: 5 7 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 6 7"
                }
            },
            "Step 1": {
                "Step": "6 - 1 = 5 (left: 5 6 7) -> 5 / 6 = 0.",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 1 = 5 (left: 5 6 7) -> 5 / 6 = 0. -> There are no possible next steps because the result of 5 / 6 is 0.83 recurring, which is not an integer.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 1 = 5 (left: 5 6 7) -> 5 / 6 = 0. -> There are no possible next steps because the result of 5 / 6 is 0.83 recurring, which is not an integer. -> There are no possible next steps because the result of 5 / 6 is 0.83 recurring, which is not an integer.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 4": {
                "Step": "5 + 1 = 6 (left: 6 6 7) -> 6 - 6 = 0 (left: 0 7)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 1 = 6 (left: 6 6 7) -> 6 - 6 = 0 (left: 0 7) -> 7 * 0 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 1 = 6 (left: 6 6 7) -> 6 - 6 = 0 (left: 0 7) -> 7 * 0 = 0 (left: 0) -> Please provide a list of numbers to continue the sequence.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "2 5.5"
                }
            },
            "Step 7": {
                "Step": "7 / 1 = 7 (left: 5 6  -> 5 + 6 = 11 (left: 11) -> There are no possible next steps with the input 11. -> 11 / 2 = 5.5 (left: 2 5.5) -> 2 + 5.5 = 7.5 (left: 7.5)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "8 + 8 = 16"
                }
            },
            "Step 8": {
                "Step": "6 - 1 = 5 (left: 5 6 7) -> 6 + 7 = 13 (left: 5 13) -> 13 - 5 = 8 (left: 8) -> 8 + 8 = 16 -> 8 - 8 = 0 (left: 0 16)",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "7 / 1 = 7 (left: 5 6 ",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "5 6 "
                }
            },
            "Step 1": {
                "Step": "7 / 1 = 7 (left: 5 6  -> 5 + 6 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 / 1 = 7 (left: 5 6  -> 5 + 6 = 11 (left: 11) -> 11 * 2 = 22 (left: 2 22)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 / 1 = 7 (left: 5 6  -> 5 + 6 = 11 (left: 11) -> 11 * 2 = 22 (left: 2 22) -> 2 * 22 = 44 (left: 44)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "5 6 "
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "5 6 "
                }
            },
            "Step 4": {
                "Step": "7 / 1 = 7 (left: 5 6  -> 5 + 6 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 / 1 = 7 (left: 5 6  -> 5 + 6 = 11 (left: 11) -> 11 / 2 = 5.5 (left: 5.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 / 1 = 7 (left: 5 6  -> 5 + 6 = 11 (left: 11) -> 11 / 2 = 5.5 (left: 5.5) -> 5.5 - 2 = 3.5 (left: 3.5)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "8 + 8 = 16"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "2 5.5"
                }
            },
            "Step 7": {
                "Step": "7 / 1 = 7 (left: 5 6  -> 5 + 6 = 11 (left: 11) -> There are no possible next steps with the input 11. -> 11 / 2 = 5.5 (left: 2 5.5) -> 2 - 5.5 = -3.5 (left: -3.5)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "There are no possible next steps for the input 5.14285714286."
                }
            },
            "Step 8": {
                "Step": "5 + 1 = 6 (left: 6 6 7) -> 6 * 6 = 36 (left: 7 36) -> 36 / 7 = 5.14285714286 (left: 5.14285714286) -> There are no possible next steps for the input 5.14285714286. -> There are no possible next steps for the input 5.14285714286.",
                "Pruning": null
            }
        },
        "Input": "1 5 6 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "994": {
        "puzzle": "5 8 10 11",
        "Agent 0": {
            "Step 0": {
                "Step": "8 - 5 = 3 (left: 3 10 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "10 11 13"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 - 11 = 2 (left: 10 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 - 11 = 2 (left: 10 2) -> 10 - 2 = 8 (left: 8 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 - 11 = 2 (left: 10 2) -> 10 - 2 = 8 (left: 8 2) -> 8 * 2 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "3 10 11"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "10 11 13"
                }
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 - 10 = 3 (left: 3 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 - 10 = 3 (left: 3 13) -> 13 - 3 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 - 10 = 3 (left: 3 13) -> 13 - 3 = 10 (left: 10) -> 10 / 8 = 1.25 (left: 8)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "8 + 8 = 16"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "1 2 0"
                }
            },
            "Step 7": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143) -> 10 * 143 = 1430 (left: 1430) -> 4 * 3 = 12 (left: 1 2 0) -> 1 + 2 = 3 (left: 0 3)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143) -> 10 * 143 = 1430 (left: 1430) -> 4 * 3 = 12 (left: 1 2 0) -> 1 + 2 = 3 (left: 0 3) -> 0 + 3 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "1 2 0"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 10 11 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "10 11 13"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 10 * 11 = 110 (left: 13 110)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 10 * 11 = 110 (left: 13 110) -> 25 - 5 = 20 (",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 10 * 11 = 110 (left: 13 110) -> 25 - 5 = 20 ( -> 25 - 5 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "3 10 11"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 2 0"
                }
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143) -> 10 * 143 = 1430 (left: 1430) -> 4 * 3 = 12 (left: 1 2 0) -> Input: 2 3",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143) -> 10 * 143 = 1430 (left: 1430) -> 4 * 3 = 12 (left: 1 2 0) -> Input: 2 3 -> 3 / 2 = 1.5 (left: 1.5 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143) -> 10 * 143 = 1430 (left: 1430) -> 4 * 3 = 12 (left: 1 2 0) -> Input: 2 3 -> 3 / 2 = 1.5 (left: 1.5 3) -> 3 - 1.5 = 1.5 (left: 1.5)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "1 2 0"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "1 2 0"
                }
            },
            "Step 7": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143) -> 10 * 143 = 1430 (left: 1430) -> 4 * 3 = 12 (left: 1 2 0) -> 2 / 1 = 2 (left: 2 0)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143) -> 10 * 143 = 1430 (left: 1430) -> 4 * 3 = 12 (left: 1 2 0) -> 2 / 1 = 2 (left: 2 0) -> 2 - 0 = 2 (left: 0)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "1 2 0"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 * 8 = 40 (left: 10 11 40)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "10 11 13"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 - 10 = 3 (left: 3 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 - 10 = 3 (left: 3 11) -> 11 / 3 = 3.6666666666666665 (left: 3 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 - 10 = 3 (left: 3 11) -> 11 / 3 = 3.6666666666666665 (left: 3 11) -> 6 + 6 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "10 11 13"
                },
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "10 11 13"
                }
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 - 10 = 3 (left: 3 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 - 10 = 3 (left: 3 13) -> 3 + 13 = 16 (left: 16)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 - 10 = 3 (left: 3 13) -> 3 + 13 = 16 (left: 16) -> 16 + 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "1 2 0"
                }
            },
            "Step 7": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143) -> 10 * 143 = 1430 (left: 1430) -> 4 * 3 = 12 (left: 1 2 0) -> Input: 5 3",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143) -> 10 * 143 = 1430 (left: 1430) -> 4 * 3 = 12 (left: 1 2 0) -> Input: 5 3 -> 5 + 3 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "There are no possible next steps with only one number provided."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 * 8 = 40 (left: 10 11 40)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "10 11 13"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143) -> 10 * 143 = 1430 (left: 1430)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143) -> 10 * 143 = 1430 (left: 1430) -> 4 * 3 = 12 (left: 1 2 0)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "10 11 13"
                }
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 + 13 = 24 (left: 10 24)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 + 13 = 24 (left: 10 24) -> 24 / 10 = 2.4 (left: 2.4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 + 13 = 24 (left: 10 24) -> 24 / 10 = 2.4 (left: 2.4) -> There are no possible next steps with the input 2.4 as it is a single number and not an operation with multiple numbers.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "1 2 0"
                }
            },
            "Step 7": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143) -> 10 * 143 = 1430 (left: 1430) -> 4 * 3 = 12 (left: 1 2 0) -> 0 * 1 = 0 (left:",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143) -> 10 * 143 = 1430 (left: 1430) -> 4 * 3 = 12 (left: 1 2 0) -> 0 * 1 = 0 (left: -> 1 - 0 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "There are no possible next steps for the division by 0 operation as it is undefined."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "11 - 5 = 6 (left: 6 8 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "10 11 13"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 + 13 = 24 (left: 10 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 + 13 = 24 (left: 10 24) -> 10 * 2 = 20 (left: 20 24)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 + 13 = 24 (left: 10 24) -> 10 * 2 = 20 (left: 20 24) -> 20 / 24 = 0.8333 (left: 0.8333)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "10 11 13"
                },
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "10 11 13"
                }
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143) -> 10 - 143 = -133 (left: -133)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143) -> 10 - 143 = -133 (left: -133) -> -133 / 2 = -66.5 (left: -66.5)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "1 2 0"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "1 2 0"
                }
            },
            "Step 7": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143) -> 10 * 143 = 1430 (left: 1430) -> 4 * 3 = 12 (left: 1 2 0) -> 1 + 2 = 3 (left: 0 3)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143) -> 10 * 143 = 1430 (left: 1430) -> 4 * 3 = 12 (left: 1 2 0) -> 1 + 2 = 3 (left: 0 3) -> Input: 5 9",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "11 - 8 = 3 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "10 11 13"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> Input: 20 5 15",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> Input: 20 5 15 -> 20 * 5 = 100 (left: 15 100)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> Input: 20 5 15 -> 20 * 5 = 100 (left: 15 100) -> 15 - 100 = -85 (left: -85)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "11 18"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "10 11 13"
                }
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 / 11 = ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 / 11 =  -> 13 / 11 = 1.1818181818181819",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 / 11 =  -> 13 / 11 = 1.1818181818181819 -> 13 - 11 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "1 2 0"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "1 2 0"
                }
            },
            "Step 7": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143) -> 10 * 143 = 1430 (left: 1430) -> 4 * 3 = 12 (left: 1 2 0) -> 1 / 2 = 0.5 (left: 0.5 0)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143) -> 10 * 143 = 1430 (left: 1430) -> 4 * 3 = 12 (left: 1 2 0) -> 1 / 2 = 0.5 (left: 0.5 0) -> 0.5 + 0 = 0.5 (left: 0.5)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "1 2 0"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "10 + 8 = 18 (left: 11 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "10 11 13"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143) -> 10 + 143 = 153 (left: 143)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143) -> 10 + 143 = 153 (left: 143) -> 1 * 4 * 3 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": ""
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "10 11 13"
                }
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 + 13 = 24 (left: 10 24)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 + 13 = 24 (left: 10 24) -> 10 + 24 = 34 (left: 34)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 + 13 = 24 (left: 10 24) -> 10 + 24 = 34 (left: 34) -> There are no possible next steps with only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "1 2 0"
                }
            },
            "Step 7": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143) -> 10 * 143 = 1430 (left: 1430) -> 4 * 3 = 12 (left: 1 2 0) -> 2 / 1 = 2 (left: 2 0)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143) -> 10 * 143 = 1430 (left: 1430) -> 4 * 3 = 12 (left: 1 2 0) -> 2 / 1 = 2 (left: 2 0) -> 2 / 0 = undefined (cannot divide by zero)",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 10 11 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "10 11 13"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 - 11 = 2 (left: 10 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 - 11 = 2 (left: 10 2) -> 10 * 2 = 20 (left: 20)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 - 11 = 2 (left: 10 2) -> 10 * 2 = 20 (left: 20) -> 20 - 8 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "6 8 10"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "6 8 10"
                }
            },
            "Step 4": {
                "Step": "11 - 5 = 6 (left: 6 8 10) -> 8 / 6 = 1.33 (left: 1.33 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 5 = 6 (left: 6 8 10) -> 8 / 6 = 1.33 (left: 1.33 10) -> 1.33 * 10 = 13.3 (left: 10 13.3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 5 = 6 (left: 6 8 10) -> 8 / 6 = 1.33 (left: 1.33 10) -> 1.33 * 10 = 13.3 (left: 10 13.3) -> 10 + 13.3 = 23.3 (left: 23.3)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "1 2 0"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "1 2 0"
                }
            },
            "Step 7": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143) -> 10 * 143 = 1430 (left: 1430) -> 4 * 3 = 12 (left: 1 2 0) -> 2 - 1 = 1 (left: 1 0)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143) -> 10 * 143 = 1430 (left: 1430) -> 4 * 3 = 12 (left: 1 2 0) -> 2 - 1 = 1 (left: 1 0) -> 1 / 0 = undefined (left: 1)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "1 2 0"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "10 + 11 = 21 (left: 5 8 21)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "10 11 13"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 - 10 = 3 (left: 3 11 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 - 10 = 3 (left: 3 11 13) -> 11 + 3 = 14 (left: 14 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 - 10 = 3 (left: 3 11 13) -> 11 + 3 = 14 (left: 14 13) -> 14 + 13 = 27 (left: 27)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "10 11 13"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 2 0"
                }
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143) -> 10 * 143 = 1430 (left: 1430) -> 4 * 3 = 12 (left: 1 2 0) -> 2 * 0 = 0 (left: 1 0)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143) -> 10 * 143 = 1430 (left: 1430) -> 4 * 3 = 12 (left: 1 2 0) -> 2 * 0 = 0 (left: 1 0) -> 1 / 0 = undefined",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143) -> 10 * 143 = 1430 (left: 1430) -> 4 * 3 = 12 (left: 1 2 0) -> 2 * 0 = 0 (left: 1 0) -> 1 / 0 = undefined -> There are no possible next steps for the division by 0 operation as it is undefined.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "1 2 0"
                }
            },
            "Step 7": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143) -> 10 * 143 = 1430 (left: 1430) -> 4 * 3 = 12 (left: 1 2 0) -> 1 + 2 = 3 (left: 0 3)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143) -> 10 * 143 = 1430 (left: 1430) -> 4 * 3 = 12 (left: 1 2 0) -> 1 + 2 = 3 (left: 0 3) -> 3 - 0 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "1 2 0"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 10 11 13)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "10 11 13"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 - 10 = 3 (left: 3 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 - 10 = 3 (left: 3 11) -> 11 - 3 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 - 10 = 3 (left: 3 11) -> 11 - 3 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "10 11 13"
                }
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 10 / 11 = 0.909 (",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 10 / 11 = 0.909 ( -> 10 * 11 = 110 (left: 110)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 10 / 11 = 0.909 ( -> 10 * 11 = 110 (left: 110) -> 110 + 2 = 112",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "1 2 0"
                }
            },
            "Step 7": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143) -> 10 * 143 = 1430 (left: 1430) -> 4 * 3 = 12 (left: 1 2 0) -> 1 / 2 = 0.5 (left: 0.5)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "8 + 8 = 16"
                }
            },
            "Step 8": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 - 10 = 3 (left: 3 11) -> 11 - 3 = 8 (left: 8) -> 8 + 8 = 16 -> 8 / 8 = 1 (left: 1 16)",
                "Pruning": null
            }
        },
        "Input": "5 8 10 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "995": {
        "puzzle": "4 4 9 12",
        "Agent 0": {
            "Step 0": {
                "Step": "9 - 4 = 5 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "36 4 12"
                }
            },
            "Step 1": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 4 * 12 = 48 (left: 36 48)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 4 * 12 = 48 (left: 36 48) -> 36 + 48 = 84 (left: 84)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 4 * 12 = 48 (left: 36 48) -> 36 + 48 = 84 (left: 84) -> 8 + 4 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "16 9 12"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1 8"
                }
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 8 9 12) -> 12 - 8 =  -> 12 - 8 = 4 -> 4 / 4 = 1 (left: 1 8) -> 8 / 1 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "4 9 8"
                }
            },
            "Step 5": {
                "Step": "12 - 4 = 8 (left: 4 9 8) -> 9 / 8 = 1.125 (left: 1.125)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 4 = 8 (left: 4 9 8) -> 9 / 8 = 1.125 (left: 1.125) -> 1.125 / 1 = 1.125",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "1728"
                }
            },
            "Step 7": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 4 * 12 = 48 (left: 36 48) -> 36 * 48 = 1728 (left: 1728) -> 1 * 7 * 2 * 8 = 112 (left: 112)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "20"
                }
            },
            "Step 8": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 4 = 32 (left: 32 12) -> 32 - 12 = 20 (left: 20) -> 20 - 8 = 12 (left: 8 12)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 16 9 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 9 8"
                }
            },
            "Step 1": {
                "Step": "12 - 4 = 8 (left: 4 9 8) -> 9 - 4 = 5 (left: 5 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 4 = 8 (left: 4 9 8) -> 9 - 4 = 5 (left: 5 8) -> 5 - 8 = -3 (left: -3)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 4 = 8 (left: 4 9 8) -> 9 - 4 = 5 (left: 5 8) -> 5 - 8 = -3 (left: -3) -> There are no possible next steps with the input of -3.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1 8"
                }
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 8 9 12) -> 12 - 8 =  -> 12 - 8 = 4 -> 4 / 4 = 1 (left: 1 8) -> 8 / 1 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "36 4 12"
                }
            },
            "Step 5": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 4 = 32 (left: 32 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 4 = 32 (left: 32 12) -> 32 - 12 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "1728"
                }
            },
            "Step 7": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 4 * 12 = 48 (left: 36 48) -> 36 * 48 = 1728 (left: 1728) -> 1 * 72 * 8 = 576 (",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 4 * 12 = 48 (left: 36 48) -> 36 * 48 = 1728 (left: 1728) -> 1 * 72 * 8 = 576 ( -> 1 * 72 = 72 (left: 72 * 8 = 576)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 9 = 13 (left: 4 13 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "8 9 12"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 8 9 12) -> 12 - 8 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 8 9 12) -> 12 - 8 =  -> 12 - 8 = 4",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 8 9 12) -> 12 - 8 =  -> 12 - 8 = 4 -> 4 / 4 = 1 (left: 1 8)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1 8"
                }
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 8 9 12) -> 12 - 8 =  -> 12 - 8 = 4 -> 4 / 4 = 1 (left: 1 8) -> 8 / 1 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "1 8"
                }
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 8 9 12) -> 12 - 8 =  -> 12 - 8 = 4 -> 4 / 4 = 1 (left: 1 8) -> 1 * 8 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "16 9 12"
                }
            },
            "Step 6": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 16 / 9 = 1.7777777777777777 (left: 1.7777777777777777 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "1728"
                }
            },
            "Step 7": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 4 * 12 = 48 (left: 36 48) -> 36 * 48 = 1728 (left: 1728) -> 2 * 8 = 16 (left: 17 16)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 4 * 12 = 48 (left: 36 48) -> 36 * 48 = 1728 (left: 1728) -> 2 * 8 = 16 (left: 17 16) -> 17 * 16 = 272 (left: 272)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "There are no possible next steps for the input 21.33333333336 as it is a single number and not an equation with operators."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 16 9 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "16 9 12"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 16 / 9 = 1.77777777778 (left: 1.77777777778 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 16 / 9 = 1.77777777778 (left: 1.77777777778 12) -> 1.77777777778 * 12 = 21.33333333336 (left: 21.33333333336)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 16 / 9 = 1.77777777778 (left: 1.77777777778 12) -> 1.77777777778 * 12 = 21.33333333336 (left: 21.33333333336) -> There are no possible next steps for the input 21.33333333336 as it is a single number and not an equation with operators.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "36 4 12"
                }
            },
            "Step 4": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 * 4 = 144 (left:",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 * 4 = 144 (left: -> 36 / 4 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 * 4 = 144 (left: -> 36 / 4 = 9 (left: 9) -> 9 - 8 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "There are no possible next steps for the input 21.33333333336 as it is a single number and not an equation with operators."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "1.7777777777777777 12"
                }
            },
            "Step 7": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 16 / 9 = 1.7777777777777777 (left: 1.7777777777777777 12) -> 1.7777777777777777 * 12 = 21.333333333333332 (left: 12 21.333333333333332)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 16 / 9 = 1.7777777777777777 (left: 1.7777777777777777 12) -> 1.7777777777777777 * 12 = 21.333333333333332 (left: 12 21.333333333333332) -> 12 * 21.333333333333332 = 256 (left: 21.333333333",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "There are no possible next steps for the input 21.33333333336 as it is a single number and not an equation with operators."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 36 4 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "36 4 12"
                }
            },
            "Step 1": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 / 4 = 9 (left: 9 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 / 4 = 9 (left: 9 12) -> 12 / 9 = 1.33 (left: 1.33 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 / 4 = 9 (left: 9 12) -> 12 / 9 = 1.33 (left: 1.33 12) -> 1.33 + 12 = 13.33 (left: 13.33)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "4 9 8"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1 8"
                }
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 8 9 12) -> 12 - 8 =  -> 12 - 8 = 4 -> 4 / 4 = 1 (left: 1 8) -> 1 * 8 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "8 9 12"
                }
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 8 9 12) -> 8 + 9 = 17 (left: 17 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 4 = 8 (left: 8 9 12) -> 8 + 9 = 17 (left: 17 12) -> 17 / 12 = 1.41666666667 (left: 1.41666666667)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "1728"
                }
            },
            "Step 7": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 4 * 12 = 48 (left: 36 48) -> 36 * 48 = 1728 (left: 1728) -> 1 * 7 * 2 * 8 = 112 (left: 112)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "There are no possible next steps with the input of -3."
                }
            },
            "Step 8": {
                "Step": "12 - 4 = 8 (left: 4 9 8) -> 9 - 4 = 5 (left: 5 8) -> 5 - 8 = -3 (left: -3) -> There are no possible next steps with the input of -3. -> There are no possible next steps with the input of -3.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 36 4 12)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "36 4 12"
                }
            },
            "Step 1": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 12 = 24 (left: 4 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 12 = 24 (left: 4 24) -> 4 * 6 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 12 = 24 (left: 4 24) -> 4 * 6 = 24 (left: 24) -> Answer: (4 * 9) - 12 = 24",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "4 9 8"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1 8"
                }
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 8 9 12) -> 12 - 8 =  -> 12 - 8 = 4 -> 4 / 4 = 1 (left: 1 8) -> 1 + 8 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "4 5 12"
                }
            },
            "Step 5": {
                "Step": "9 - 4 = 5 (left: 4 5 12) -> 12 - 4 = 8 (left: 8 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 4 = 5 (left: 4 5 12) -> 12 - 4 = 8 (left: 8 5) -> 8 * 5 = 40 (left: 40)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "1728"
                }
            },
            "Step 7": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 4 * 12 = 48 (left: 36 48) -> 36 * 48 = 1728 (left: 1728) -> 7 * 2 = 14 (left: 14 8)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 4 * 12 = 48 (left: 36 48) -> 36 * 48 = 1728 (left: 1728) -> 7 * 2 = 14 (left: 14 8) -> 14 * 8 = 112 (left: 112)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "1.33333 2"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "9 - 4 = 5 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "16 9 12"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 16 * 9 = 144 (left: 144 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 16 * 9 = 144 (left: 144 12) -> 144 / 12 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 16 * 9 = 144 (left: 144 12) -> 144 / 12 = 12 (left: 12) -> 12 + 2 = 14",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1 8"
                }
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 8 9 12) -> 12 - 8 =  -> 12 - 8 = 4 -> 4 / 4 = 1 (left: 1 8) -> 1 + 8 = 9 (left: 8 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 8 9 12) -> 12 - 8 =  -> 12 - 8 = 4 -> 4 / 4 = 1 (left: 1 8) -> 1 + 8 = 9 (left: 8 9) -> 9 - 8 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "4 9 8"
                }
            },
            "Step 6": {
                "Step": "12 - 4 = 8 (left: 4 9 8) -> 4 + 9 = 13 (left: 8 13)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "1728"
                }
            },
            "Step 7": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 4 * 12 = 48 (left: 36 48) -> 36 * 48 = 1728 (left: 1728) -> 1 + 7 + 2 + 8 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "1728"
                }
            },
            "Step 8": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 4 * 12 = 48 (left: 36 48) -> 36 * 48 = 1728 (left: 1728) -> 2 * 8 = 16 (left: 17 16)",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "12 - 4 = 8 (left: 4 9 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "36 4 12"
                }
            },
            "Step 1": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 + 12 = 48 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 + 12 = 48 (left: -> 12 * 36 = 432 (left: 432)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 + 12 = 48 (left: -> 12 * 36 = 432 (left: 432) -> 4 / 3 = 1.33333 (left: 1.33333 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1 8"
                }
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 8 9 12) -> 12 - 8 =  -> 12 - 8 = 4 -> 4 / 4 = 1 (left: 1 8) -> 8 - 1 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "4 9 8"
                }
            },
            "Step 5": {
                "Step": "12 - 4 = 8 (left: 4 9 8) -> 9 / 4 = 2.25 (left: 2.25 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 4 = 8 (left: 4 9 8) -> 9 / 4 = 2.25 (left: 2.25 8) -> 8 / 2.25 = 3.5555555555555556 (left: 3.5555555555555556)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "1728"
                }
            },
            "Step 7": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 4 * 12 = 48 (left: 36 48) -> 36 * 48 = 1728 (left: 1728) -> 72 - 8 = 64 (left:",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 4 * 12 = 48 (left: 36 48) -> 36 * 48 = 1728 (left: 1728) -> 72 - 8 = 64 (left: -> 8 - 72 = -64 (left: -64)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "There are no possible next steps for the input 21.33333333336 as it is a single number and not an equation with operators."
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "4 + 4 = 8 (left: 8 9 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "36 4 12"
                }
            },
            "Step 1": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 12 = 24 (left: 24 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 12 = 24 (left: 24 4) -> 24 / 4 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 12 = 24 (left: 24 4) -> 24 / 4 = 6 (left: 6) -> 6 - 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "36 4 12"
                },
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1 8"
                }
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 8 9 12) -> 12 - 8 =  -> 12 - 8 = 4 -> 4 / 4 = 1 (left: 1 8) -> 8 - 1 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "36 4 12"
                }
            },
            "Step 5": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 4 * 12 = 48 (left: 36 48)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 4 * 12 = 48 (left: 36 48) -> 36 * 48 = 1728 (left: 1728)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "1728"
                }
            },
            "Step 7": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 4 * 12 = 48 (left: 36 48) -> 36 * 48 = 1728 (left: 1728) -> 1 + 7 + 2 + 8 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "12 + 2 = 14"
                }
            },
            "Step 8": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 16 * 9 = 144 (left: 144 12) -> 144 / 12 = 12 (left: 12) -> 12 + 2 = 14 -> 12 + 2 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "12 + 2 = 14"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "12 - 4 = 8 (left: 4 9 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "36 4 12"
                }
            },
            "Step 1": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 12 = 24 (left: 4 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 12 = 24 (left: 4 24) -> 24 - 4 = 20 (left: 20)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 12 = 24 (left: 4 24) -> 24 - 4 = 20 (left: 20) -> 20 + 8 = 28 (left: 8)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "16 9 12"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "4 9 8"
                }
            },
            "Step 4": {
                "Step": "12 - 4 = 8 (left: 4 9 8) -> 4 + 9 = 13 (left: 8 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 4 = 8 (left: 4 9 8) -> 4 + 9 = 13 (left: 8 13) -> 8 - 13 = -5 (left: -5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 4 = 8 (left: 4 9 8) -> 4 + 9 = 13 (left: 8 13) -> 8 - 13 = -5 (left: -5) -> There are no possible next steps with the input of -5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "1728"
                }
            },
            "Step 7": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 4 * 12 = 48 (left: 36 48) -> 36 * 48 = 1728 (left: 1728) -> 1 * 7 * 2 * 8 = 112 (left: 112)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "20"
                }
            },
            "Step 8": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 4 = 32 (left: 32 12) -> 32 - 12 = 20 (left: 20) -> 20 / 8 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "1 8"
                }
            }
        },
        "Input": "4 4 9 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "996": {
        "puzzle": "2 5 6 6",
        "Agent 0": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 4 6 6)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 * 6 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 * 6 = 6 (left: 6) -> 6 + 8 = 14 (left: 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 * 6 = 6 (left: 6) -> 6 + 8 = 14 (left: 8) -> 8 * 8 = 64 (left: 64)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "6 11 6"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 6 24)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 6 24) -> 6 / 6 = 1 (left: 1 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 6 24) -> 6 / 6 = 1 (left: 1 24) -> 1 + 24 = 25 (left: 24)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "4 + 4 = 8"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "7.5 1.06666666667"
                }
            },
            "Step 7": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6) -> 1.5 + 6 = 7.5 (left: 7.5) -> 8 / 7.5 = 1.06666666667 (left: 7.5 1.06666666667) -> 7.5 + 1.06666666667 = 8.56666666667 (left: 8.56666666667)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "7.5 1.06666666667"
                }
            },
            "Step 8": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6) -> 1.5 + 6 = 7.5 (left: 7.5) -> 8 / 7.5 = 1.06666666667 (left: 7.5 1.06666666667) -> 7.5 - 1.06666666667 = 6.43333333333 (left: 6.43333333333)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "7.5 1.06666666667"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 - 5 = 1 (left: 1 6 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 + 6 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 + 6 = 7 (left: 7) -> 7 / 8 = 0.875 (left: 0.875)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 + 6 = 7 (left: 7) -> 7 / 8 = 0.875 (left: 0.875) -> There are no possible next steps with the input 0.875.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "1 6 "
                }
            },
            "Step 4": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 + 6 = 7 (left: 7) ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 + 6 = 7 (left: 7)  -> 7 + 8 = 15 (left: 8 15)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 + 6 = 7 (left: 7)  -> 7 + 8 = 15 (left: 8 15) -> 8 - 15 = -7 (left: -7)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "7.5 1.06666666667"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "7.5 1.06666666667"
                }
            },
            "Step 7": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6) -> 1.5 + 6 = 7.5 (left: 7.5) -> 8 / 7.5 = 1.06666666667 (left: 7.5 1.06666666667) -> 7.5 - 1.06666666667 = 6.43333333333 (left: 6.43333333333)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "There are no possible next steps with the input 18."
                }
            },
            "Step 8": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> There are no possible next steps with the input 18. -> There are no possible next steps with the input 18.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 / 2 = 3 (left: 3 6 6)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "6 6 "
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 6 6  -> 6 / 6 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 6 6  -> 6 / 6 = 1 (left: 1) -> There is only one number, so there are no possible next steps.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 2 = 12 (left: 6 6  -> 6 / 6 = 1 (left: 1) -> There is only one number, so there are no possible next steps. -> None",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "4 6 6"
                },
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "1 6 "
                }
            },
            "Step 4": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 + 6 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 + 6 = 7 (left: 7) -> 7 - 2 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 + 6 = 7 (left: 7) -> 7 - 2 = 5 (left: 5) -> There are no possible next steps with the input of 5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "7.5 1.06666666667"
                }
            },
            "Step 7": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6) -> 1.5 + 6 = 7.5 (left: 7.5) -> 8 / 7.5 = 1.06666666667 (left: 7.5 1.06666666667) -> 7.5 * 1.06666666667 = 8.03333333333 (left: 8.03333333333)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "No more possible next steps with the input 14."
                }
            },
            "Step 8": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 * 6 = 6 (left: 6) -> 6 + 14 = 20 (left: 14) -> No more possible next steps with the input 14. -> 8 * 8 = 64 (left: 64)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "7.5 1.06666666667"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 - 6 = 0 (left: 2 6 ",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 6 - 1 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 6 - 1 = 5 (left: 5) -> 5 + 5 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 6 - 1 = 5 (left: 5) -> 5 + 5 = 10 (left: 10) -> 10 + 8 = 18 (left: 8)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "4 6 6"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "1 6 "
                }
            },
            "Step 4": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 * 6 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 * 6 = 6 (left: 6) -> 6 + 14 = 20 (left: 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 * 6 = 6 (left: 6) -> 6 + 14 = 20 (left: 14) -> No more possible next steps with the input 14.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "7.5 1.06666666667"
                }
            },
            "Step 7": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6) -> 1.5 + 6 = 7.5 (left: 7.5) -> 8 / 7.5 = 1.06666666667 (left: 7.5 1.06666666667) -> 7.5 / 1.06666666667 = 7.02857142857 (left: 7.02857142857)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "There are no possible calculations that can be done with just the number 7.5."
                }
            },
            "Step 8": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6) -> 1.5 + 6 = 7.5 (left: 7.5) -> There are no possible calculations that can be done with just the number 7.5. -> There are no possible calculations that can be done with just the number 7.5.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 6 11 6)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 6 - 1 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 6 - 1 = 5 (left: 5) -> There are no possible next steps with just the number 5.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 6 - 1 = 5 (left: 5) -> There are no possible next steps with just the number 5. -> 5 + 5 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "1 6 "
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "1 6 "
                }
            },
            "Step 4": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 * 6 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 * 6 = 6 (left: 6) -> 6 + 14 = 20 (left: 14 20)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 * 6 = 6 (left: 6) -> 6 + 14 = 20 (left: 14 20) -> 14 + 20 = 34 (left: 34)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "None, as there is only one number left."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "7.5 1.06666666667"
                }
            },
            "Step 7": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6) -> 1.5 + 6 = 7.5 (left: 7.5) -> 8 / 7.5 = 1.06666666667 (left: 7.5 1.06666666667) -> 7.5 / 1.066666666",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6) -> 1.5 + 6 = 7.5 (left: 7.5) -> 8 / 7.5 = 1.06666666667 (left: 7.5 1.06666666667) -> 7.5 / 1.066666666 -> 7.5 / 1.066666666 = 7",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 6 11 6)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 6"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6) -> 1.5 + 6 = 7.5 (left: 7.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6) -> 1.5 + 6 = 7.5 (left: 7.5) -> There are no possible calculations that can be done with just the number 7.5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "7.5 1.06666666667"
                }
            },
            "Step 7": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6) -> 1.5 + 6 = 7.5 (left: 7.5) -> 8 / 7.5 = 1.06666666667 (left: 7.5 1.06666666667) -> 7.5 - 1.066666666",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6) -> 1.5 + 6 = 7.5 (left: 7.5) -> 8 / 7.5 = 1.06666666667 (left: 7.5 1.06666666667) -> 7.5 - 1.066666666 -> 7.5 - 1.066666666 = 6.433333334 (left: 6.433333334)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "None, as there is only one number left."
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 4 6 6)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6 6) -> 6 * 2 = 12 (left: 6 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6 6) -> 6 * 2 = 12 (left: 6 12) -> 6 * 12 = 72 (left: 72)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "2 6 "
                },
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6) -> 2 * 6 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6) -> 2 * 6 = 12 (left: 12) -> 12 + 8 = 20 (left: 8 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "7.5 1.06666666667"
                }
            },
            "Step 7": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6) -> 1.5 + 6 = 7.5 (left: 7.5) -> 8 / 7.5 = 1.06666666667 (left: 7.5 1.06666666667) -> 7.5 - 1.06666666667 = 6.43333333333 (left: 6.43333333333)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "No more possible next steps with the input 14."
                }
            },
            "Step 8": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 * 6 = 6 (left: 6) -> 6 + 14 = 20 (left: 14) -> No more possible next steps with the input 14. -> 14 * 8 = 112 (left: 8 112)",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 4 6 6)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 + 6 = 10 (left: 6 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 + 6 = 10 (left: 6 10) -> 10 - 6 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 + 6 = 10 (left: 6 10) -> 10 - 6 = 4 (left: 4) -> 4 + 4 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 24 / 6 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 24 / 6 = 4 (left: 4) -> 4 + 4 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "7.5 1.06666666667"
                }
            },
            "Step 7": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6) -> 1.5 + 6 = 7.5 (left: 7.5) -> 8 / 7.5 = 1.06666666667 (left: 7.5 1.06666666667) -> 7.5 / 1.066666666",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6) -> 1.5 + 6 = 7.5 (left: 7.5) -> 8 / 7.5 = 1.06666666667 (left: 7.5 1.06666666667) -> 7.5 / 1.066666666 -> 7.5 + 1.066666666 = 8.566666666 (left: 8.566666666)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "There are no possible next steps with the input 0.875."
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "6 - 5 = 1 (left: 1 6 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6) -> 1.5 + 6 = 7.5 (left: 7.5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6) -> 1.5 + 6 = 7.5 (left: 7.5) -> 8 / 7.5 = 1.06666666667 (left: 7.5 1.06666666667)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> Possible next steps:",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> Possible next steps: -> There are no possible next steps as the input is already in its simplest form.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> Possible next steps: -> There are no possible next steps as the input is already in its simplest form. -> N/A",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "There are no possible next steps with the input 18."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "7.5 1.06666666667"
                }
            },
            "Step 7": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6) -> 1.5 + 6 = 7.5 (left: 7.5) -> 8 / 7.5 = 1.06666666667 (left: 7.5 1.06666666667) -> 7.5 + 1.06666666667 = 8.56666666667 (left: 8.56666666667)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "There are no possible next steps for the input 1.6666666666666667."
                }
            },
            "Step 8": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 + 4 = 10 (left: 6 10) -> 10 / 6 = 1.6666666666666667 (left: 1.6666666666666667) -> There are no possible next steps for the input 1.6666666666666667. -> There are no possible next steps for the input 1.6666666666666667.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "6 * 2 = 12 (left: 6 6 ",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 6 / 1 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 6 / 1 = 6 (left: 6) -> 6 + 2 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 6 / 1 = 6 (left: 6) -> 6 + 2 = 8 (left: 8) -> None, as there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 + 4 = 10 (left: 6 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 + 4 = 10 (left: 6 10) -> 10 / 6 = 1.6666666666666667 (left: 1.6666666666666667)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 + 4 = 10 (left: 6 10) -> 10 / 6 = 1.6666666666666667 (left: 1.6666666666666667) -> There are no possible next steps for the input 1.6666666666666667.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "7.5 1.06666666667"
                }
            },
            "Step 7": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6) -> 1.5 + 6 = 7.5 (left: 7.5) -> 8 / 7.5 = 1.06666666667 (left: 7.5 1.06666666667) -> 7.5 / 1.066666666",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6) -> 1.5 + 6 = 7.5 (left: 7.5) -> 8 / 7.5 = 1.06666666667 (left: 7.5 1.06666666667) -> 7.5 / 1.066666666 -> 7.5 + 1.066666666 = 8.566666666",
                "Pruning": null
            }
        },
        "Input": "2 5 6 6",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "997": {
        "puzzle": "2 4 9 12",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 6 9 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 4 3"
                }
            },
            "Step 1": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 3 + 2 = 5 (left: 4 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 3 + 2 = 5 (left: 4 5) -> 5 / 4 = 1.25 (left: 1.25)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 3 + 2 = 5 (left: 4 5) -> 5 / 4 = 1.25 (left: 1.25) -> There are no possible next steps for 1.25 as it is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "2 5 "
                }
            },
            "Step 4": {
                "Step": "9 - 4 = 5 (left: 2 5  -> 2 * 5 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 4 = 5 (left: 2 5  -> 2 * 5 = 10 (left: 10) -> 10 / 2 = 5",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 4 = 5 (left: 2 5  -> 2 * 5 = 10 (left: 10) -> 10 / 2 = 5 -> 10 - 2 = 8 (left: 8 8 14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "8 8 14"
                }
            },
            "Step 7": {
                "Step": "9 - 4 = 5 (left: 2 5  -> 2 * 5 = 10 (left: 10) -> 10 / 2 = 5 -> 10 - 2 = 8 (left: 8 8 14) -> 8 - 8 = 0 (left: 0 14)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 4 = 5 (left: 2 5  -> 2 * 5 = 10 (left: 10) -> 10 / 2 = 5 -> 10 - 2 = 8 (left: 8 8 14) -> 8 - 8 = 0 (left: 0 14) -> 14 / 0 = undefined",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 - 4 = 5 (left: 2 5 ",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 4 3"
                }
            },
            "Step 1": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 4 = 8 (left: 3 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 4 = 8 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 4 = 8 (left: 3 8) -> 8 - 3 = 5 (left: 5) -> There are no possible next steps with just the number 5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "2 4 3"
                }
            },
            "Step 4": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 4 = 8 (left: 3 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 4 = 8 (left: 3 8) -> 10 / 5 = 2 (left: 2 20)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 4 = 8 (left: 3 8) -> 10 / 5 = 2 (left: 2 20) -> 2 * 20 = 40 (left: 40)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "There are no possible next steps with the input of just \"5\" as there are no other numbers to perform operations with."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "8 8 14"
                }
            },
            "Step 7": {
                "Step": "9 - 4 = 5 (left: 2 5  -> 2 * 5 = 10 (left: 10) -> 10 / 2 = 5 -> 10 - 2 = 8 (left: 8 8 14) -> 8 - 8 = 0 (left: 0 14)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 4 = 5 (left: 2 5  -> 2 * 5 = 10 (left: 10) -> 10 / 2 = 5 -> 10 - 2 = 8 (left: 8 8 14) -> 8 - 8 = 0 (left: 0 14) -> 1 + 7",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 9 = 3 (left: 2 4 3)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 5 "
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 2 5  -> 2 * 5 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 2 5  -> 2 * 5 = 10 (left: 10) -> 10 + 10 = 20",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 2 5  -> 2 * 5 = 10 (left: 10) -> 10 + 10 = 20 -> 10 / 10 = 1 (left: 1 10 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "2 5 "
                }
            },
            "Step 4": {
                "Step": "9 - 4 = 5 (left: 2 5  -> 5 - 2 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 4 = 5 (left: 2 5  -> 5 - 2 = 3 (left: 3) -> 3 + 8 = 11 (left: 8 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 4 = 5 (left: 2 5  -> 5 - 2 = 3 (left: 3) -> 3 + 8 = 11 (left: 8 11) -> 8 - 11 = -3 (left: -3)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There are no possible next steps for 1.25 as it is a single number."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "8 8 14"
                }
            },
            "Step 7": {
                "Step": "9 - 4 = 5 (left: 2 5  -> 2 * 5 = 10 (left: 10) -> 10 / 2 = 5 -> 10 - 2 = 8 (left: 8 8 14) -> 14 + 8 = 22 (left: 8 22)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 4 = 5 (left: 2 5  -> 2 * 5 = 10 (left: 10) -> 10 / 2 = 5 -> 10 - 2 = 8 (left: 8 8 14) -> 14 + 8 = 22 (left: 8 22) -> 8 * 22 = 176 (left: 176)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "There are no possible next steps for 1.25 as it is a single number."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 * 4 = 8 (left: 8 9 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 4 3"
                }
            },
            "Step 1": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 3 + 2 = 5 (left: 4 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 3 + 2 = 5 (left: 4 5) -> 4 - 5 = -1 (left: -1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 3 + 2 = 5 (left: 4 5) -> 4 - 5 = -1 (left: -1) -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "2 4 3"
                }
            },
            "Step 4": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 4 / 2 = 2 (left: 2 2)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 4 / 2 = 2 (left: 2 2) -> 2 + 2 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 4 / 2 = 2 (left: 2 2) -> 2 + 2 = 4 (left: 4) -> There is only 1 number, so there are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "8 8 14"
                }
            },
            "Step 7": {
                "Step": "9 - 4 = 5 (left: 2 5  -> 2 * 5 = 10 (left: 10) -> 10 / 2 = 5 -> 10 - 2 = 8 (left: 8 8 14) -> 8 - 8 = 0 (left: 0 14)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 4 = 5 (left: 2 5  -> 2 * 5 = 10 (left: 10) -> 10 / 2 = 5 -> 10 - 2 = 8 (left: 8 8 14) -> 8 - 8 = 0 (left: 0 14) -> 14 - 0 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "9 12"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 - 9 = 3 (left: 2 4 3)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 4 3"
                }
            },
            "Step 1": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 4 / 2 = 2 (left: 2 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 4 / 2 = 2 (left: 2 3) -> 2 + 3 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 4 / 2 = 2 (left: 2 3) -> 2 + 3 = 5 (left: 5) -> 5 + 5 = 10",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "2 4 3"
                }
            },
            "Step 4": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 4 - 2 = 2 (left: 2 3)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 4 - 2 = 2 (left: 2 3) -> 2 + 3 = 5",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 4 - 2 = 2 (left: 2 3) -> 2 + 3 = 5 -> 3 + 5 = 8 (left: 5 = 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "8 8 14"
                }
            },
            "Step 7": {
                "Step": "9 - 4 = 5 (left: 2 5  -> 2 * 5 = 10 (left: 10) -> 10 / 2 = 5 -> 10 - 2 = 8 (left: 8 8 14) -> 8 * 8 = 64 (left: 64 14)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 4 = 5 (left: 2 5  -> 2 * 5 = 10 (left: 10) -> 10 / 2 = 5 -> 10 - 2 = 8 (left: 8 8 14) -> 8 * 8 = 64 (left: 64 14) -> 64 - 14 = 50 (left: 50)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "There are no possible next steps with the input 5."
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "9 - 4 = 5 (left: 2 5 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 4 3"
                }
            },
            "Step 1": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 3 = 6 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 3 = 6 (left: -> 6 / 2 = 3 (left: 3 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 3 = 6 (left: -> 6 / 2 = 3 (left: 3 9) -> 3 + 9 = 12 (left: 9 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "2 5 "
                }
            },
            "Step 4": {
                "Step": "9 - 4 = 5 (left: 2 5  -> 27",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 4 = 5 (left: 2 5  -> 27 -> 27 / 8 = 3.375 (left: 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 4 = 5 (left: 2 5  -> 27 -> 27 / 8 = 3.375 (left: 8) -> There are no possible next steps with just the number 8.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "8 8 14"
                }
            },
            "Step 7": {
                "Step": "9 - 4 = 5 (left: 2 5  -> 2 * 5 = 10 (left: 10) -> 10 / 2 = 5 -> 10 - 2 = 8 (left: 8 8 14) -> 8 / 8 = 1 (left: 1 14)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 4 = 5 (left: 2 5  -> 2 * 5 = 10 (left: 10) -> 10 / 2 = 5 -> 10 - 2 = 8 (left: 8 8 14) -> 8 / 8 = 1 (left: 1 14) -> 14 * 1 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "10 10"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 6 9 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 5 "
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 2 5  -> 5 / 2 = 2.5 (left: 2.5 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 2 5  -> 5 / 2 = 2.5 (left: 2.5 5) -> 2.5 + 5 = 7.5 (left: 7.5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 2 5  -> 5 / 2 = 2.5 (left: 2.5 5) -> 2.5 + 5 = 7.5 (left: 7.5) -> 7.5 + 8 = 15.5 (left: 15.5)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "2 4 3"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "2 4 3"
                }
            },
            "Step 4": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 4 - 2 = 2 (left: 2 3)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 4 - 2 = 2 (left: 2 3) -> 2 - 3 = -1 (left: -1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 4 - 2 = 2 (left: 2 3) -> 2 - 3 = -1 (left: -1) -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "8 8 14"
                }
            },
            "Step 7": {
                "Step": "9 - 4 = 5 (left: 2 5  -> 2 * 5 = 10 (left: 10) -> 10 / 2 = 5 -> 10 - 2 = 8 (left: 8 8 14) -> 14 - 8 = 6 (left: 8 6)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 4 = 5 (left: 2 5  -> 2 * 5 = 10 (left: 10) -> 10 / 2 = 5 -> 10 - 2 = 8 (left: 8 8 14) -> 14 - 8 = 6 (left: 8 6) -> 8 - 6 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "There are no possible next steps for 1.25 as it is a single number."
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "12 - 4 = 8 (left: 2 8 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 4 3"
                }
            },
            "Step 1": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 + 4 = 6 (left: 3 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 + 4 = 6 (left: 3 6) -> 3 + 6 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 + 4 = 6 (left: 3 6) -> 3 + 6 = 9 (left: 9) -> 9 - 8 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "2 5 "
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "2 4 3"
                }
            },
            "Step 4": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 3 - 2 = 1 (left: 1 3)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 3 - 2 = 1 (left: 1 3) -> 1 * 3 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 3 - 2 = 1 (left: 1 3) -> 1 * 3 = 3 (left: 3) -> 3 - 2 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There are no possible next steps for 1.25 as it is a single number."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "8 8 14"
                }
            },
            "Step 7": {
                "Step": "9 - 4 = 5 (left: 2 5  -> 2 * 5 = 10 (left: 10) -> 10 / 2 = 5 -> 10 - 2 = 8 (left: 8 8 14) -> 8 + 8 = 16 (left: 16 14)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 4 = 5 (left: 2 5  -> 2 * 5 = 10 (left: 10) -> 10 / 2 = 5 -> 10 - 2 = 8 (left: 8 8 14) -> 8 + 8 = 16 (left: 16 14) -> 16 * 14 = 224 (left: 224)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There are no possible next steps for 1.25 as it is a single number."
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "12 - 9 = 3 (left: 2 4 3)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 4 3"
                }
            },
            "Step 1": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 4 - 2 = 2 (left: 2 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 4 - 2 = 2 (left: 2 3) -> 2 + 3 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 4 - 2 = 2 (left: 2 3) -> 2 + 3 = 5 (left: 5) -> There are no possible next steps with the input 5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "2 4 3"
                }
            },
            "Step 4": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 + 4 = 6 (left: 3 6)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 + 4 = 6 (left: 3 6) -> 3 * 6 = 18 (left: 18)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 + 4 = 6 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> There are no possible next steps with the number 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "8 8 14"
                }
            },
            "Step 7": {
                "Step": "9 - 4 = 5 (left: 2 5  -> 2 * 5 = 10 (left: 10) -> 10 / 2 = 5 -> 10 - 2 = 8 (left: 8 8 14) -> 8 * 8 = 64 (left: 64 14)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 4 = 5 (left: 2 5  -> 2 * 5 = 10 (left: 10) -> 10 / 2 = 5 -> 10 - 2 = 8 (left: 8 8 14) -> 8 * 8 = 64 (left: 64 14) -> 64 + 14 = 78 (left: 78)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "There are no possible next steps for 1.25 as it is a single number."
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "12 - 9 = 3 (left: 2 4 3)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "2 4 3"
                }
            },
            "Step 1": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 4 - 2 = 2 (left: 2 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 4 - 2 = 2 (left: 2 3) -> 2 + 3 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 4 - 2 = 2 (left: 2 3) -> 2 + 3 = 5 (left: 5) -> There are no possible next steps with the input of just \"5\" as there are no other numbers to perform operations with.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "2 5 "
                }
            },
            "Step 4": {
                "Step": "9 - 4 = 5 (left: 2 5  -> 2 * 5 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 4 = 5 (left: 2 5  -> 2 * 5 = 10 (left: 10) -> 10 * 2 = 20",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 4 = 5 (left: 2 5  -> 2 * 5 = 10 (left: 10) -> 10 * 2 = 20 -> 20 / 2 = 10 (left: 10 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "8 8 14"
                }
            },
            "Step 7": {
                "Step": "9 - 4 = 5 (left: 2 5  -> 2 * 5 = 10 (left: 10) -> 10 / 2 = 5 -> 10 - 2 = 8 (left: 8 8 14) -> 14 - 8 = 6 (left: 8 6)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 4 = 5 (left: 2 5  -> 2 * 5 = 10 (left: 10) -> 10 / 2 = 5 -> 10 - 2 = 8 (left: 8 8 14) -> 14 - 8 = 6 (left: 8 6) -> 8 / 6 = 1.33 (left: 1.33)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "5 = 8"
                }
            }
        },
        "Input": "2 4 9 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "998": {
        "puzzle": "4 8 11 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 8 = 5 (left: 4 11 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "7 8 "
                }
            },
            "Step 1": {
                "Step": "11 - 4 = 7 (left: 7 8  -> 7 * 8 = 56 (left: 56)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 4 = 7 (left: 7 8  -> 7 * 8 = 56 (left: 56) -> 5 / 6 = 0.8333 (left: 0.8333)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 4 = 7 (left: 7 8  -> 7 * 8 = 56 (left: 56) -> 5 / 6 = 0.8333 (left: 0.8333) -> There are no possible next steps with the input 0.8333 as it is already a decimal number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "4 11 13"
                }
            },
            "Step 4": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 11 - 4 = 7 (left: 7 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 11 - 4 = 7 (left: 7 13) -> 13 / 7 = 1.857 (left: 1.857)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 11 - 4 = 7 (left: 7 13) -> 13 / 7 = 1.857 (left: 1.857) -> 1.857 x 2 = 3.714",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "0.444444 "
                }
            },
            "Step 7": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 13 - 4 = 9 (left: 9 13) -> 13 / 9 = 1.444444 (left: 1.444444) -> 1.444444 - 1 = 0.444444 (left: 0.444444  -> There are no possible next steps for the input 0.444444 as it is already a single number.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 13 - 4 = 9 (left: 9 13) -> 13 / 9 = 1.444444 (left: 1.444444) -> 1.444444 - 1 = 0.444444 (left: 0.444444  -> There are no possible next steps for the input 0.444444 as it is already a single number. -> There are no possible next steps for the input 0.444444 as it is already a single number.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 11 = 2 (left: 2 8 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6) -> 6 / 2 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "4 11 13"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "4 11 13"
                }
            },
            "Step 4": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 13 - 4 = 9 (left: 9 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 13 - 4 = 9 (left: 9 13) -> 13 / 9 = 1.444444 (left: 1.444444)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 13 - 4 = 9 (left: 9 13) -> 13 / 9 = 1.444444 (left: 1.444444) -> 1.444444 - 1 = 0.444444 (left: 0.444444 ",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "0.444444 "
                }
            },
            "Step 7": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 13 - 4 = 9 (left: 9 13) -> 13 / 9 = 1.444444 (left: 1.444444) -> 1.444444 - 1 = 0.444444 (left: 0.444444  -> There is only one possible next step: 0.444444 * 2 = 0.888888",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 13 - 4 = 9 (left: 9 13) -> 13 / 9 = 1.444444 (left: 1.444444) -> 1.444444 - 1 = 0.444444 (left: 0.444444  -> There is only one possible next step: 0.444444 * 2 = 0.888888 -> 0.888888 / 2 = 0.444444 (left: 0.444444 0.444444)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "8 / 4 = 2 (left: 2 11 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 1 * 13 = 13 (left: 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 1 * 13 = 13 (left: 13) -> 13 / 2 = 6.5 (left: 6.5)",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "7 8 "
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "4 11 13"
                }
            },
            "Step 4": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 4 + 11 = 15 (left: 15 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 4 + 11 = 15 (left: 15 13) -> 15 * 13 = 195 (left: 195)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 4 + 11 = 15 (left: 15 13) -> 15 * 13 = 195 (left: 195) -> 19 + 5 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "3 18"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "0.444444 "
                }
            },
            "Step 7": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 13 - 4 = 9 (left: 9 13) -> 13 / 9 = 1.444444 (left: 1.444444) -> 1.444444 - 1 = 0.444444 (left: 0.444444  -> 0.444444 - 2 = -1.555556 (left: -1.",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "There are no possible next steps with the input 0.8333 as it is already a decimal number."
                }
            },
            "Step 8": {
                "Step": "11 - 4 = 7 (left: 7 8  -> 7 * 8 = 56 (left: 56) -> 5 / 6 = 0.8333 (left: 0.8333) -> There are no possible next steps with the input 0.8333 as it is already a decimal number. -> N/A",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "There are no possible next steps with the input 0.8333 as it is already a decimal number."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "8 - 4 = 4 (left: 4 11 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23) -> 23 + 13 = 36 (left: 36)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23) -> 23 + 13 = 36 (left: 36) -> 36 - 2 = 34",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "4 11 13"
                }
            },
            "Step 4": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 13 + 4 = 17 (left: 11 17)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 13 + 4 = 17 (left: 11 17) -> 11 / 17 = 0.6470588235294118 (left: 0.6470588235294118)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 13 + 4 = 17 (left: 11 17) -> 11 / 17 = 0.6470588235294118 (left: 0.6470588235294118) -> 0.6470588235294118 / 2 = 0.3235294117647059",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "0.444444 "
                }
            },
            "Step 7": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 13 - 4 = 9 (left: 9 13) -> 13 / 9 = 1.444444 (left: 1.444444) -> 1.444444 - 1 = 0.444444 (left: 0.444444  -> There are no possible next steps for the input 0.444444 as it is already a single number.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 13 - 4 = 9 (left: 9 13) -> 13 / 9 = 1.444444 (left: 1.444444) -> 1.444444 - 1 = 0.444444 (left: 0.444444  -> There are no possible next steps for the input 0.444444 as it is already a single number. -> There are no possible next steps for the input 0.444444 as it is already a single number.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "8 - 4 = 4 (left: 4 11 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23) -> 13 + 23 = 36 (left: 36)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23) -> 13 + 23 = 36 (left: 36) -> 36 + 8 = 44 (left: 8)",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "7 8 "
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "2 8 13"
                }
            },
            "Step 4": {
                "Step": "13 - 11 = 2 (left: 2 8 13) -> 13 - 8 = 5 (left: 2 5)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 11 = 2 (left: 2 8 13) -> 13 - 8 = 5 (left: 2 5) -> 6 + 3 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 11 = 2 (left: 2 8 13) -> 13 - 8 = 5 (left: 2 5) -> 6 + 3 = 9 (left: 9) -> There are no possible next steps with the input 9.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "0.444444 "
                }
            },
            "Step 7": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 13 - 4 = 9 (left: 9 13) -> 13 / 9 = 1.444444 (left: 1.444444) -> 1.444444 - 1 = 0.444444 (left: 0.444444  -> 0.444444 / 0.444444 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "36 - 2 = 34"
                }
            },
            "Step 8": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23) -> 23 + 13 = 36 (left: 36) -> 36 - 2 = 34 -> 36 * 2 = 72 (left: 72)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "3 18"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "4 + 8 = 12 (left: 11 12 13)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 13 - 1 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 13 - 1 = 12 (left: 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "7 8 "
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "7 8 "
                }
            },
            "Step 4": {
                "Step": "11 - 4 = 7 (left: 7 8  -> 8 / 7 = 1.142857 (left: 1.142857)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 4 = 7 (left: 7 8  -> 8 / 7 = 1.142857 (left: 1.142857) -> 1.142857 / 1 = 1.142857",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 4 = 7 (left: 7 8  -> 8 / 7 = 1.142857 (left: 1.142857) -> 1.142857 / 1 = 1.142857 -> 1.142857 + 1 = 2.142857",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "0.444444 "
                }
            },
            "Step 7": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 13 - 4 = 9 (left: 9 13) -> 13 / 9 = 1.444444 (left: 1.444444) -> 1.444444 - 1 = 0.444444 (left: 0.444444  -> 0.444444 + 0.444444 = 0.888888 (left: 0.888888)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "1.857 x 2 = 3.714"
                }
            },
            "Step 8": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 11 - 4 = 7 (left: 7 13) -> 13 / 7 = 1.857 (left: 1.857) -> 1.857 x 2 = 3.714 -> 3.714 x 2 = 7.428 (left: 1.857 7.428)",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "11 + 4 = 15 (left: 8 13 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 12 + 13 = 25 (left: 11 25)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 12 + 13 = 25 (left: 11 25) -> Input: 3 9 27",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 12 + 13 = 25 (left: 11 25) -> Input: 3 9 27 -> 27 - 9 = 18 (left: 3 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "7 8 "
                }
            },
            "Step 4": {
                "Step": "11 - 4 = 7 (left: 7 8  -> 8 - 7 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 4 = 7 (left: 7 8  -> 8 - 7 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 4 = 7 (left: 7 8  -> 8 - 7 = 1 (left: 1) -> 1 + 1 = 2 -> 1 / 1 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There are no possible next steps with the input 0.8333 as it is already a decimal number."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "0.444444 "
                }
            },
            "Step 7": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 13 - 4 = 9 (left: 9 13) -> 13 / 9 = 1.444444 (left: 1.444444) -> 1.444444 - 1 = 0.444444 (left: 0.444444  -> Not enough numbers provided for any mathematical operations.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 13 - 4 = 9 (left: 9 13) -> 13 / 9 = 1.444444 (left: 1.444444) -> 1.444444 - 1 = 0.444444 (left: 0.444444  -> Not enough numbers provided for any mathematical operations. -> Please provide at least two numbers to perform mathematical operations.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "8 / 4 = 2 (left: 2 11 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 11 / 12 = 0.9166666666666666 (left: 0.916666666666666",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 11 / 12 = 0.9166666666666666 (left: 0.916666666666666 -> 0.916666666666666 + 2 = 2.916666666666666 (left: 2.916666666666666)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 11 / 12 = 0.9166666666666666 (left: 0.916666666666666 -> 0.916666666666666 + 2 = 2.916666666666666 (left: 2.916666666666666) -> 2.916666666666666 + 2 = 4.916666666666666 (left: 4.916666666666666)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "2 8 13"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "2 8 13"
                }
            },
            "Step 4": {
                "Step": "13 - 11 = 2 (left: 2 8 13) -> 13 - 2 = 11 (left: 2 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 11 = 2 (left: 2 8 13) -> 13 - 2 = 11 (left: 2 11) -> 11 - 2 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 11 = 2 (left: 2 8 13) -> 13 - 2 = 11 (left: 2 11) -> 11 - 2 = 9 (left: 9) -> There are no possible next steps with just one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "0.444444 "
                }
            },
            "Step 7": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 13 - 4 = 9 (left: 9 13) -> 13 / 9 = 1.444444 (left: 1.444444) -> 1.444444 - 1 = 0.444444 (left: 0.444444  -> There are no possible next steps for the input 0.444444.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 13 - 4 = 9 (left: 9 13) -> 13 / 9 = 1.444444 (left: 1.444444) -> 1.444444 - 1 = 0.444444 (left: 0.444444  -> There are no possible next steps for the input 0.444444. -> There are no possible next steps for the input 0.444444 as it is already in its simplest form.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "8 - 4 = 4 (left: 4 11 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 13 * 1 = 13 (left: 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 13 * 1 = 13 (left: 13) -> 13 / 2 = 6.5 (left: 6.5)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "4 11 "
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "4 11 13"
                }
            },
            "Step 4": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 13 - 4 = 9 (left: 11 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 13 - 4 = 9 (left: 11 9) -> 11 / 9 = 1.22 (left: 1.22)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 13 - 4 = 9 (left: 11 9) -> 11 / 9 = 1.22 (left: 1.22) -> 1.22 / 2 = 0.61",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "0.444444 "
                }
            },
            "Step 7": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 13 - 4 = 9 (left: 9 13) -> 13 / 9 = 1.444444 (left: 1.444444) -> 1.444444 - 1 = 0.444444 (left: 0.444444  -> 0.444444 / 0.444444 = 1",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 13 - 4 = 9 (left: 9 13) -> 13 / 9 = 1.444444 (left: 1.444444) -> 1.444444 - 1 = 0.444444 (left: 0.444444  -> 0.444444 / 0.444444 = 1 -> 0.444444 - 0.444444 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "1.857 x 2 = 3.714"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 7 8 ",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 12 / 11 = 1.0909 (left: 1.0909 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 12 / 11 = 1.0909 (left: 1.0909 13) -> 13 / 1.0909 = 11.9091 (left: 11.9091)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 12 / 11 = 1.0909 (left: 1.0909 13) -> 13 / 1.0909 = 11.9091 (left: 11.9091) -> There are no possible next steps for the input 11.9091.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "7 8 "
                }
            },
            "Step 4": {
                "Step": "11 - 4 = 7 (left: 7 8  -> 8 - 7 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 4 = 7 (left: 7 8  -> 8 - 7 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 4 = 7 (left: 7 8  -> 8 - 7 = 1 (left: 1) -> 1 + 1 = 2 -> 1 - 1 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "36 - 2 = 34"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "0.444444 "
                }
            },
            "Step 7": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 13 - 4 = 9 (left: 9 13) -> 13 / 9 = 1.444444 (left: 1.444444) -> 1.444444 - 1 = 0.444444 (left: 0.444444  -> There are no possible next steps for the input 0.444444 as it is already a single value.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 13 - 4 = 9 (left: 9 13) -> 13 / 9 = 1.444444 (left: 1.444444) -> 1.444444 - 1 = 0.444444 (left: 0.444444  -> There are no possible next steps for the input 0.444444 as it is already a single value. -> There are no possible next steps for the input 0.444444 as it is already a single value.",
                "Pruning": null
            }
        },
        "Input": "4 8 11 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "999": {
        "puzzle": "4 9 10 13",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 9 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9 3"
                }
            },
            "Step 1": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 4 + 9 = 13 (left: 3 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 4 + 9 = 13 (left: 3 13) -> Possible next steps:",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 4 + 9 = 13 (left: 3 13) -> Possible next steps: -> There are no possible next steps with the current input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "4 9 3"
                }
            },
            "Step 4": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 9 + 3 = 12 (left: 4 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 9 + 3 = 12 (left: 4 12) -> 12 - 4 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 9 + 3 = 12 (left: 4 12) -> 12 - 4 = 8 (left: 8) -> 8 + 8 = 16"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 10 13 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9 3"
                }
            },
            "Step 1": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 9 / 3 = 3 (left: 4 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 9 / 3 = 3 (left: 4 3) -> 4 + 3 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 9 / 3 = 3 (left: 4 3) -> 4 + 3 = 7 (left: 7) -> 7 - 8 = -1 (left: -1)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "10 - 4"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "4 9 3"
                }
            },
            "Step 4": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 3 + 9 = 12 (left: 4 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 3 + 9 = 12 (left: 4 12) -> 12 / 4 = 3 (left: 3 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 3 + 9 = 12 (left: 4 12) -> 12 / 4 = 3 (left: 3 12) -> 12 / 3 = 4 (left: 4)"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "5 10 13"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> 10 - 5 = 5 (left: 5 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> 10 - 5 = 5 (left: 5 13) -> 13 - 5 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> 10 - 5 = 5 (left: 5 13) -> 13 - 5 = 8 (left: 8) -> 8 + 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "6 9 13"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "4 9 3"
                }
            },
            "Step 4": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 4 + 9 = 13 (left: 3 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 4 + 9 = 13 (left: 3 13) -> 3 * 13 = 39 (left: 39)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 4 + 9 = 13 (left: 3 13) -> 3 * 13 = 39 (left: 39) -> There are no possible next steps with the input 39."
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 4 = 5 (left: 5 10 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9 3"
                }
            },
            "Step 1": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 4 / 3 is not a whole number.",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 4 / 3 is not a whole number. -> 4 + 3 = 7 (left: 3 7)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 4 / 3 is not a whole number. -> 4 + 3 = 7 (left: 3 7) -> 3 + 7 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "4 9 3"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "4 9 3"
                }
            },
            "Step 4": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 4 / 3 = 1.33 (",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 4 / 3 = 1.33 ( -> 4 / 3 = 1.33 (left: 1.33)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 4 / 3 = 1.33 ( -> 4 / 3 = 1.33 (left: 1.33) -> 1.33 / 2 = 0.665"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "9 / 4 = 2.25 (left: 2.25 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "10 13 36"
                }
            },
            "Step 1": {
                "Step": "4 * 9 = 36 (left: 10 13 36) -> 10 * 13 = 130 (left: 36 130)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 9 = 36 (left: 10 13 36) -> 10 * 13 = 130 (left: 36 130) -> 36 * 130 = 4680 (left: 4680)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 9 = 36 (left: 10 13 36) -> 10 * 13 = 130 (left: 36 130) -> 36 * 130 = 4680 (left: 4680) -> 6 * 8 = 48 (left: 2 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "4 9 3"
                }
            },
            "Step 4": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 3 + 4 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 3 + 4 = 7 (left: 7) -> 7 * 8 = 56 (left: 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 3 + 4 = 7 (left: 7) -> 7 * 8 = 56 (left: 8) -> 8 / 8 = 1 (left: 1)"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "9 / 4 = 2.25 (left: 2.25 10 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9 3"
                }
            },
            "Step 1": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 9 - 4 = 5 (left: 5 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 9 - 4 = 5 (left: 5 3) -> 5 + 3 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 9 - 4 = 5 (left: 5 3) -> 5 + 3 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "4 9 3"
                }
            },
            "Step 4": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 9 - 4 = 5 (left: 5 3)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 9 - 4 = 5 (left: 5 3) -> 5 / 3 = 1.67 (left: 1.67)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 9 - 4 = 5 (left: 5 3) -> 5 / 3 = 1.67 (left: 1.67) -> There are no possible next steps with the given input of 1.67."
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "4 + 9 = 13 (left: 10 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9 3"
                }
            },
            "Step 1": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 3 + 4 = 7 (left: 7 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 3 + 4 = 7 (left: 7 3) -> 7 + 3 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 3 + 4 = 7 (left: 7 3) -> 7 + 3 = 10 (left: 10) -> 10 - 2 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "2.25 10 "
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "4 9 3"
                }
            },
            "Step 4": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 4 / 3 = 1.33333",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 4 / 3 = 1.33333 -> 4 - 3 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 4 / 3 = 1.33333 -> 4 - 3 = 1 (left: 1) -> There are no possible next steps with just one number provided. Additional numbers are needed to perform operations."
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "13 - 10 = 3 (left: 4 9 3)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9 3"
                }
            },
            "Step 1": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 4 + 9 = 13 (left: 3 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 4 + 9 = 13 (left: 3 13) -> 3 * 13 = 39 (left: 39)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 4 + 9 = 13 (left: 3 13) -> 3 * 13 = 39 (left: 39) -> There are no possible next steps with the number 39.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "4 9 3"
                }
            },
            "Step 4": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 9 - 3 = 6 (left: 4 6)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 9 - 3 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 9 - 3 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (9 - (13 - 10)) = 24"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "13 - 10 = 3 (left: 4 9 3)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9 3"
                }
            },
            "Step 1": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 9 - 4 = 5 (left: 5 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 9 - 4 = 5 (left: 5 3) -> 5 * 3 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 9 - 4 = 5 (left: 5 3) -> 5 * 3 = 15 (left: 15) -> None, as there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "4 9 3"
                }
            },
            "Step 4": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 9 / 3 = 3 (left: 4 3)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 9 / 3 = 3 (left: 4 3) -> 4 - 3 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 9 / 3 = 3 (left: 4 3) -> 4 - 3 = 1 (left: 1) -> There are no possible next steps with just one number."
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 9 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9 3"
                }
            },
            "Step 1": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 9 - 4 = 5 (left: 5 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 9 - 4 = 5 (left: 5 3) -> 5 - 3 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 9 - 4 = 5 (left: 5 3) -> 5 - 3 = 2 (left: 2) -> 2 + 2 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "4 9 3"
                }
            },
            "Step 4": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 4 * 9 = 36 (left: 36 3)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 4 * 9 = 36 (left: 36 3) -> 36 * 3 = 108 (left: 108)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 4 * 9 = 36 (left: 36 3) -> 36 * 3 = 108 (left: 108) -> 10 - 8 = 2 (left: 2)"
            }
        },
        "Input": "4 9 10 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": -1
            }
        ]
    },
    "Cost": {
        "input_tokens": 1687871,
        "output_tokens": 769465.0678571421,
        "total_cost": 1.9981331017857134
    }
}