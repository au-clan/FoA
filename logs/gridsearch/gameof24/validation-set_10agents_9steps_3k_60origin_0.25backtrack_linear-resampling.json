{
    "875": {
        "puzzle": "5 6 9 12",
        "Agent 0": {
            "Step 0": {
                "Step": "6 - 5 = 1 (left: 1 9 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 9 12"
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 6 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 6 / 1 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 6 / 1 = 6 (left: 6) -> 6 + 8 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "9 11 12"
                }
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 9 11 12) -> 9 / 11 = 0.818181",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 9 11 12) -> 9 / 11 = 0.818181 -> 11 - 9 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 9 11 12) -> 9 / 11 = 0.818181 -> 11 - 9 = 2 (left: 2) -> No possible next steps, input is the final result.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "13.2222 * 2 = 26.4444"
                }
            },
            "Step 7": {
                "Step": "5 + 6 = 11 (left: 9 11 12) -> 11 / 9 = 1.2222 (left: 1.2222 12) -> 1.2222 + 12 = 13.2222 (left: 13.2222) -> 13.2222 * 2 = 26.4444 -> 13.2222 * 2 = 26.4444",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 6 = 11 (left: 9 11 12) -> 11 / 9 = 1.2222 (left: 1.2222 12) -> 1.2222 + 12 = 13.2222 (left: 13.2222) -> 13.2222 * 2 = 26.4444 -> 13.2222 * 2 = 26.4444 -> 13.2222 + 2 = 15.2222",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 9 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 9 12"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 3 3 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 3 3 12) -> 12 - 3 = 9 (left: 3 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 / 3 = 3 (left: 3 3 12) -> 12 - 3 = 9 (left: 3 9) -> Input: 4 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "9 11 12"
                }
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 9 11 12) -> 9 * 11 = 99 (left: 12 99)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 9 11 12) -> 9 * 11 = 99 (left: 12 99) -> 12 / 99 = 0.121212... (left: 0.121212...)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 9 11 12) -> 9 * 11 = 99 (left: 12 99) -> 12 / 99 = 0.121212... (left: 0.121212...) -> 0.121212... * 2 = 0.242424... (left: 0.242424...)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "There is only one possible next step:"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "13.22 - 2 = 11.22"
                }
            },
            "Step 7": {
                "Step": "5 + 6 = 11 (left: 9 11 12) -> 11 / 9 = 1.22 (left: 1.22 12) -> 1.22 + 12 = 13.22 (left: 13.22) -> 13.22 - 2 = 11.22 -> 13.22 / 2 = 6.61",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 6 = 11 (left: 9 11 12) -> 11 / 9 = 1.22 (left: 1.22 12) -> 1.22 + 12 = 13.22 (left: 13.22) -> 13.22 - 2 = 11.22 -> 13.22 / 2 = 6.61 -> 13.22 * 2 = 26.44 (left: 26.44 / 2 = 13.22)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 9 = 3 (left: 3 6 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "5 6 3"
                }
            },
            "Step 1": {
                "Step": "12 - 9 = 3 (left: 5 6 3) -> 6 - 5 = 1 (left: 1 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 9 = 3 (left: 5 6 3) -> 6 - 5 = 1 (left: 1 3) -> 1 + 3 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 9 = 3 (left: 5 6 3) -> 6 - 5 = 1 (left: 1 3) -> 1 + 3 = 4 (left: 4) -> There is only one possible next step:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 9 12"
                }
            },
            "Step 4": {
                "Step": "6 - 5 = 1 (left: 1 9 12) -> 9 / 1 = 9 (left: 9 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 - 5 = 1 (left: 1 9 12) -> 9 / 1 = 9 (left: 9 12) -> 9 * 12 = 108 (left: 108)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 5 = 1 (left: 1 9 12) -> 9 / 1 = 9 (left: 9 12) -> 9 * 12 = 108 (left: 108) -> 108 + 1 + 0 = 109 (left: 8)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "1 + 1 = 2"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "1 + 1 = 2"
                }
            },
            "Step 7": {
                "Step": "12 - 9 = 3 (left: 5 6 3) -> 3 - 5 = -2 (left: -2 3) -> -2 + 3 = 1 (left: 1) -> 1 + 1 = 2 -> 1 * 1 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "No possible next steps, input is the final result."
                }
            },
            "Step 8": {
                "Step": "5 + 6 = 11 (left: 9 11 12) -> 9 / 11 = 0.818181 -> 11 - 9 = 2 (left: 2) -> No possible next steps, input is the final result. -> No possible next steps, input is the final result.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "12 + 5 = 17 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 9 12"
                }
            },
            "Step 1": {
                "Step": "12 - 9 = 3 (left: 5 3 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 9 = 3 (left: 5 3 12) -> 5 * 3 = 15 (left: 15 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 9 = 3 (left: 5 3 12) -> 5 * 3 = 15 (left: 15 12) -> 15 * 12 = 180 (left: 180)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "9 11 12"
                }
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 9 11 12) -> 12 / 9 = 1.33 (left: 1.33 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 9 11 12) -> 12 / 9 = 1.33 (left: 1.33 12) -> 12 - 1.33 = 10.67 (left: 10.67)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 9 11 12) -> 12 / 9 = 1.33 (left: 1.33 12) -> 12 - 1.33 = 10.67 (left: 10.67) -> There is only one number, so there are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "13.22 - 2 = 11.22"
                }
            },
            "Step 7": {
                "Step": "5 + 6 = 11 (left: 9 11 12) -> 11 / 9 = 1.22 (left: 1.22 12) -> 1.22 + 12 = 13.22 (left: 13.22) -> 13.22 - 2 = 11.22 -> 13.22 - 2 = 11.22",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 6 = 11 (left: 9 11 12) -> 11 / 9 = 1.22 (left: 1.22 12) -> 1.22 + 12 = 13.22 (left: 13.22) -> 13.22 - 2 = 11.22 -> 13.22 - 2 = 11.22 -> 13.22 * 2 = 26.44 (left: 26.44)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "There are no possible next steps with the input 8.25."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 9 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 9 12"
                }
            },
            "Step 1": {
                "Step": "9 + 6 = 15 (left: 5 15 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 6 = 15 (left: 5 15 12) -> 15 - 5 = 10 (left: 10 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 + 6 = 15 (left: 5 15 12) -> 15 - 5 = 10 (left: 10 12) -> 10 - 12 = -2 (left: -2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "9 11 12"
                }
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 9 11 12) -> 11 * 9 = 99 (left: 12 99)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 9 11 12) -> 11 * 9 = 99 (left: 12 99) -> 12 * 99 = 1188 (left: 1188)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 9 11 12) -> 11 * 9 = 99 (left: 12 99) -> 12 * 99 = 1188 (left: 1188) -> 1 + 1 + 8 * 8 = 66 (left: 66)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "1 + 1 = 2"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "There are no possible next steps with the input 9."
                }
            },
            "Step 7": {
                "Step": "9 + 12 = 21 (left: 5 6 21) -> 6 * 5 = 30 (left: 30 21) -> 30 - 21 = 9 (left: 9) -> There are no possible next steps with the input 9. -> There are no possible next steps with the input 9.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 + 12 = 21 (left: 5 6 21) -> 6 * 5 = 30 (left: 30 21) -> 30 - 21 = 9 (left: 9) -> There are no possible next steps with the input 9. -> There are no possible next steps with the input 9. -> There are no possible next steps with the input 9.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "9 + 12 = 21 (left: 5 6 21)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 6 21"
                }
            },
            "Step 1": {
                "Step": "9 + 12 = 21 (left: 5 6 21) -> 6 + 5 = 11 (left: 11 21)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 12 = 21 (left: 5 6 21) -> 6 + 5 = 11 (left: 11 21) -> 11 + 21 = 32 (left: 32)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 + 12 = 21 (left: 5 6 21) -> 6 + 5 = 11 (left: 11 21) -> 11 + 21 = 32 (left: 32) -> There is only one possible next step with the input of 32: 32 itself as it is a single number and cannot be combined with any other numbers.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "9 11 12"
                }
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 9 11 12) -> 12 - 11 = 1 (left: 9 1)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 9 11 12) -> 12 - 11 = 1 (left: 9 1) -> 9 * 1 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 9 11 12) -> 12 - 11 = 1 (left: 9 1) -> 9 * 1 = 9 (left: 9) -> 9 / 3 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "14"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There is only one possible next step:"
                }
            },
            "Step 7": {
                "Step": "12 - 9 = 3 (left: 5 6 3) -> 6 - 5 = 1 (left: 1 3) -> 1 + 3 = 4 (left: 4) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 - 9 = 3 (left: 5 6 3) -> 6 - 5 = 1 (left: 1 3) -> 1 + 3 = 4 (left: 4) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16) -> 2 + 16 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "1 + 1 = 2"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "12 - 9 = 3 (left: 3 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 6 21"
                }
            },
            "Step 1": {
                "Step": "9 + 12 = 21 (left: 5 6 21) -> 21 - 6 = 15 (left: 5 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 12 = 21 (left: 5 6 21) -> 21 - 6 = 15 (left: 5 15) -> 15 - 5 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 + 12 = 21 (left: 5 6 21) -> 21 - 6 = 15 (left: 5 15) -> 15 - 5 = 10 (left: 10) -> 10 / 8 = 1.25 (left: 8)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "9 11 12"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "9 11 12"
                }
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 9 11 12) -> 9 * 11 = 99 (left: 99 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 9 11 12) -> 9 * 11 = 99 (left: 99 12) -> 99 / 12 = 8.25 (left: 8.25)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 9 11 12) -> 9 * 11 = 99 (left: 99 12) -> 99 / 12 = 8.25 (left: 8.25) -> There are no possible next steps with the input 8.25.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "No possible next steps, input is the final result."
                }
            },
            "Step 7": {
                "Step": "5 + 6 = 11 (left: 9 11 12) -> 9 / 11 = 0.818181 -> 11 - 9 = 2 (left: 2) -> No possible next steps, input is the final result. -> No possible next steps, input is the final result.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 6 = 11 (left: 9 11 12) -> 9 / 11 = 0.818181 -> 11 - 9 = 2 (left: 2) -> No possible next steps, input is the final result. -> No possible next steps, input is the final result. -> No possible next steps, input is the final result.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "12 - 9 = 3 (left: 5 6 3)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 9 12"
                }
            },
            "Step 1": {
                "Step": "9 + 6 = 15 (left: 5 15 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 6 = 15 (left: 5 15 12) -> 5 * 15 = 75 (left: 12 75)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 + 6 = 15 (left: 5 15 12) -> 5 * 15 = 75 (left: 12 75) -> 12 + 75 = 87 (left: 87)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "9 11 12"
                }
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 9 11 12) -> 11 / 9 = 1.2222 (left: 1.2222 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 9 11 12) -> 11 / 9 = 1.2222 (left: 1.2222 12) -> 1.2222 + 12 = 13.2222 (left: 13.2222)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 9 11 12) -> 11 / 9 = 1.2222 (left: 1.2222 12) -> 1.2222 + 12 = 13.2222 (left: 13.2222) -> 13.2222 * 2 = 26.4444",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "There are no possible next steps with the input 9."
                }
            },
            "Step 7": {
                "Step": "9 + 12 = 21 (left: 5 6 21) -> 6 * 5 = 30 (left: 30 21) -> 30 - 21 = 9 (left: 9) -> There are no possible next steps with the input 9. -> There are no possible next steps with the input 9.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 + 12 = 21 (left: 5 6 21) -> 6 * 5 = 30 (left: 30 21) -> 30 - 21 = 9 (left: 9) -> There are no possible next steps with the input 9. -> There are no possible next steps with the input 9. -> There are no possible next steps with the input 9.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 9 11 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 6 21"
                }
            },
            "Step 1": {
                "Step": "9 + 12 = 21 (left: 5 6 21) -> 21 * 5 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 12 = 21 (left: 5 6 21) -> 21 * 5 =  -> 21 * 5 = 105",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 + 12 = 21 (left: 5 6 21) -> 21 * 5 =  -> 21 * 5 = 105 -> 21 * 5 = 105",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "9 11 12"
                }
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 9 11 12) -> 11 / 9 = 1.22 (left: 1.22 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 9 11 12) -> 11 / 9 = 1.22 (left: 1.22 12) -> 1.22 + 12 = 13.22 (left: 13.22)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 9 11 12) -> 11 / 9 = 1.22 (left: 1.22 12) -> 1.22 + 12 = 13.22 (left: 13.22) -> 13.22 - 2 = 11.22",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "There is only one number, so there are no possible next steps."
                }
            },
            "Step 7": {
                "Step": "5 + 6 = 11 (left: 9 11 12) -> 12 / 9 = 1.33 (left: 1.33 12) -> 12 - 1.33 = 10.67 (left: 10.67) -> There is only one number, so there are no possible next steps. -> None",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "13.22 - 2 = 11.22"
                }
            },
            "Step 8": {
                "Step": "5 + 6 = 11 (left: 9 11 12) -> 11 / 9 = 1.22 (left: 1.22 12) -> 1.22 + 12 = 13.22 (left: 13.22) -> 13.22 - 2 = 11.22 -> 13.22 / 2 = 6.61 (left: 6.61 2 11.22)",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "9 + 6 = 15 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "5 6 3"
                }
            },
            "Step 1": {
                "Step": "12 - 9 = 3 (left: 5 6 3) -> 3 - 5 = -2 (left: -2 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 9 = 3 (left: 5 6 3) -> 3 - 5 = -2 (left: -2 3) -> -2 + 3 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 9 = 3 (left: 5 6 3) -> 3 - 5 = -2 (left: -2 3) -> -2 + 3 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 6 21"
                }
            },
            "Step 4": {
                "Step": "9 + 12 = 21 (left: 5 6 21) -> 6 * 5 = 30 (left: 30 21)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 + 12 = 21 (left: 5 6 21) -> 6 * 5 = 30 (left: 30 21) -> 30 - 21 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 12 = 21 (left: 5 6 21) -> 6 * 5 = 30 (left: 30 21) -> 30 - 21 = 9 (left: 9) -> There are no possible next steps with the input 9.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "There are no possible next steps with the input 8.25."
                }
            },
            "Step 7": {
                "Step": "5 + 6 = 11 (left: 9 11 12) -> 9 * 11 = 99 (left: 99 12) -> 99 / 12 = 8.25 (left: 8.25) -> There are no possible next steps with the input 8.25. -> There are no possible next steps with the input 8.25.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 6 = 11 (left: 9 11 12) -> 9 * 11 = 99 (left: 99 12) -> 99 / 12 = 8.25 (left: 8.25) -> There are no possible next steps with the input 8.25. -> There are no possible next steps with the input 8.25. -> There are no possible next steps with the input 8.25.",
                "Pruning": null
            }
        },
        "Input": "5 6 9 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "876": {
        "puzzle": "6 9 10 11",
        "Agent 0": {
            "Step 0": {
                "Step": "9 + 10 = 19 (left: 6 11 19)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 9 21"
                }
            },
            "Step 1": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 21 - 6 = 15 (left: 9 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 21 - 6 = 15 (left: 9 15) -> 9 * 15 = 135 (left: 135)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 21 - 6 = 15 (left: 9 15) -> 9 * 15 = 135 (left: 135) -> 1 + 35 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "10 11 54"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "10 11 54"
                }
            },
            "Step 4": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 54 - 11 = 43 (left: 10 43)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 54 - 11 = 43 (left: 10 43) -> 10 / 43 = 0.23255813953 (left: 0.23255813953)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 54 - 11 = 43 (left: 10 43) -> 10 / 43 = 0.23255813953 (left: 0.23255813953) -> There is only one number given, so there are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": " 9 9 12"
                }
            },
            "Step 7": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> Input: 3 6 9 12 -> 3 + 6 = 9 (left:  9 9 12) -> 12 - 9 = 3 (left: 3 9)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> Input: 3 6 9 12 -> 3 + 6 = 9 (left:  9 9 12) -> 12 - 9 = 3 (left: 3 9) -> 3 * 9 = 27 (left: 9 27)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 10 11 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 1": {
                "Step": "10 + 11 = 21 (left: 6 9 21)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 6 * 9 = 54 (left: 54 21)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 6 * 9 = 54 (left: 54 21) -> 54 / 21 = 2.57 (left: 2.57)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": " 9 9 12"
                }
            },
            "Step 4": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> Input: 3 6 9 12 -> 3 + 6 = 9 (left:  9 9 12) -> 12 * 9 = 108 (left: 9 108)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> Input: 3 6 9 12 -> 3 + 6 = 9 (left:  9 9 12) -> 12 * 9 = 108 (left: 9 108) -> 9 + 108 = 117 (left: 117)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": " 9 9 12"
                }
            },
            "Step 6": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> Input: 3 6 9 12 -> 3 + 6 = 9 (left:  9 9 12) -> 9 * 9 = 81 (left: 12 81)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": " 9 9 12"
                }
            },
            "Step 7": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> Input: 3 6 9 12 -> 3 + 6 = 9 (left:  9 9 12) -> 9 / 9 = 1 (left: 1 12)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> Input: 3 6 9 12 -> 3 + 6 = 9 (left:  9 9 12) -> 9 / 9 = 1 (left: 1 12) -> 1 + 12 = 13 (left: 13)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "1 13"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 * 9 = 54 (left: 10 11 54)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 9 11 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 10 = 16 (left: 9 11 16) -> 16 - 9 = 7 (left: 7 16)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 10 = 16 (left: 9 11 16) -> 16 - 9 = 7 (left: 7 16) -> 16 / 7 = 2.285714285714286 (left: 2.285714285714286)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "10 11 54"
                }
            },
            "Step 4": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 10 + 11 = 21 (left: 21 54)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 10 + 11 = 21 (left: 21 54) -> 21 - 54 = -33 (left: -33)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 10 + 11 = 21 (left: 21 54) -> 21 - 54 = -33 (left: -33) -> -33 + 2 = -31 (left: 2)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": " 9 9 12"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "10 4.909"
                }
            },
            "Step 7": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 54 / 11 = 4.909 (left: 10 4.909) -> 10 - 4.909 = 5.091 (left: 5.091)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 54 / 11 = 4.909 (left: 10 4.909) -> 10 - 4.909 = 5.091 (left: 5.091) -> 5.091 - 1 = 4.091",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 + 11 = 21 (left: 6 9 21)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 1": {
                "Step": "6 + 9 = 15 (left: 10 11 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> Input: 3 6 9 12",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> Input: 3 6 9 12 -> 3 + 6 = 9 (left:  9 9 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "10 11 54"
                }
            },
            "Step 4": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 11 - 10 = 1 (left: 1 54)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 11 - 10 = 1 (left: 1 54) -> 1 * 54 = 54 (left: 54 54)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 11 - 10 = 1 (left: 1 54) -> 1 * 54 = 54 (left: 54 54) -> 54 / 54 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": " 9 9 12"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": " 9 9 12"
                }
            },
            "Step 7": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> Input: 3 6 9 12 -> 3 + 6 = 9 (left:  9 9 12) -> 12 + 9 = 21 (left: 9 21)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> Input: 3 6 9 12 -> 3 + 6 = 9 (left:  9 9 12) -> 12 + 9 = 21 (left: 9 21) -> 9 + 21 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "8 15"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "10 + 11 = 21 (left: 6 9 21)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 1": {
                "Step": "6 * 9 = 54 (left: 10 11 54)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 10 + 11 = 21 (left: 21 54)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 10 + 11 = 21 (left: 21 54) -> 21 - 54 = -33 (left: -33)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 9 21"
                }
            },
            "Step 4": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 9 - 6 = 3 (left: 3 21)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 9 - 6 = 3 (left: 3 21) -> 21 / 3 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 9 - 6 = 3 (left: 3 21) -> 21 / 3 = 7 (left: 7) -> 7 + 8 = 15 (left: 8 15)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "1 13"
                }
            },
            "Step 7": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> Input: 3 6 9 12 -> 3 + 6 = 9 (left:  9 9 12) -> 9 / 9 = 1 (left: 1 9 12) -> 12 / 1 = 12 ( -> 12 + 1 = 13 (left: 1 13) -> 13 - 1 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": " 9 9 12"
                }
            },
            "Step 8": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> Input: 3 6 9 12 -> 3 + 6 = 9 (left:  9 9 12) -> 12 + 9 = 21 (left: 9 21)",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "9 + 10 = 19 (left: 6 11 19)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 11 19"
                }
            },
            "Step 1": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 19 - 11 = 8 (left: 6 8 19)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 19 - 11 = 8 (left: 6 8 19) -> 8 * 6 = 48 (left: 48 19)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 19 - 11 = 8 (left: 6 8 19) -> 8 * 6 = 48 (left: 48 19) -> 19 + 48 = 67 (left: 67)",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "10 11 15"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "10 11 54"
                }
            },
            "Step 4": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 54 / 10 = 5.4 (left: 11 5.4)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 54 / 10 = 5.4 (left: 11 5.4) -> 11 * 5.4 = 59.4 (left: 59.4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 54 / 10 = 5.4 (left: 11 5.4) -> 11 * 5.4 = 59.4 (left: 59.4) -> There is only one number provided, so there are no possible next steps as there are no operations to perform.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": " 9 9 12"
                }
            },
            "Step 7": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> Input: 3 6 9 12 -> 3 + 6 = 9 (left:  9 9 12) -> ",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": " 9 9 12"
                }
            },
            "Step 8": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> Input: 3 6 9 12 -> 3 + 6 = 9 (left:  9 9 12) -> 9 - 9 = 0 (left: 0 12)",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 10 11 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 9 21"
                }
            },
            "Step 1": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 9 - 6 = 3 (left: 3 21)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 9 - 6 = 3 (left: 3 21) -> 21 - 3 = 18 (left: 18)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 9 - 6 = 3 (left: 3 21) -> 21 - 3 = 18 (left: 18) -> 18 / 2 = 9 (left: 9 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "10 11 54"
                }
            },
            "Step 4": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 54 / 11 = 4.909 (left: 4.909 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 54 / 11 = 4.909 (left: 4.909 11) -> 11 - 4.909 = 6.091 (left: 6.091 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 54 / 11 = 4.909 (left: 4.909 11) -> 11 - 4.909 = 6.091 (left: 6.091 11) -> 6.091 - 11 = -4.909 (left: -4.909)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": " 9 9 12"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "1 13"
                }
            },
            "Step 7": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> Input: 3 6 9 12 -> 3 + 6 = 9 (left:  9 9 12) -> 9 / 9 = 1 (left: 1 9 12) -> 12 / 1 = 12 ( -> 12 + 1 = 13 (left: 1 13) -> 13 * 1 = 13 (left",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> Input: 3 6 9 12 -> 3 + 6 = 9 (left:  9 9 12) -> 9 / 9 = 1 (left: 1 9 12) -> 12 / 1 = 12 ( -> 12 + 1 = 13 (left: 1 13) -> 13 * 1 = 13 (left -> 13 * 1 = 13 (left: 13)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "1 13"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "6 * 9 = 54 (left: 10 11 54)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 9 21"
                }
            },
            "Step 1": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 9 * 6 = 54 (left: 54 21)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 9 * 6 = 54 (left: 54 21) -> 54 / 21 = 2.57 (left: 2.57)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 9 * 6 = 54 (left: 54 21) -> 54 / 21 = 2.57 (left: 2.57) -> There are no possible next steps for the input 2.57 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "10 11 54"
                }
            },
            "Step 4": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 54 - 10 = 44 (left: 44 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 54 - 10 = 44 (left: 44 11) -> 44 + 11 = 55 (left: 11 55)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 54 - 10 = 44 (left: 44 11) -> 44 + 11 = 55 (left: 11 55) -> 55 / 11 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": " 9 9 12"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": " 9 9 12"
                }
            },
            "Step 7": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> Input: 3 6 9 12 -> 3 + 6 = 9 (left:  9 9 12) -> 9 - 9 = 0 (left: 0 9 12)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> Input: 3 6 9 12 -> 3 + 6 = 9 (left:  9 9 12) -> 9 - 9 = 0 (left: 0 9 12) -> 9 - 12 = -3 (left: 0 -3)",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "10 + 11 = 21 (left: 6 9 21)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 9 21"
                }
            },
            "Step 1": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 21 - 6 = 15 (left: 6 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 21 - 6 = 15 (left: 6 15) -> 15 / 6 = 2.5 (left: 2.5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 21 - 6 = 15 (left: 6 15) -> 15 / 6 = 2.5 (left: 2.5) -> There are no possible next steps with just the number 2.5 as input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": " 9 9 12"
                }
            },
            "Step 4": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> Input: 3 6 9 12 -> 3 + 6 = 9 (left:  9 9 12) -> 9 / 9 = 1 (left: 1 9 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> Input: 3 6 9 12 -> 3 + 6 = 9 (left:  9 9 12) -> 9 / 9 = 1 (left: 1 9 12) -> 12 / 1 = 12 (",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> Input: 3 6 9 12 -> 3 + 6 = 9 (left:  9 9 12) -> 9 / 9 = 1 (left: 1 9 12) -> 12 / 1 = 12 ( -> 12 + 1 = 13 (left: 1 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": " 9 9 12"
                }
            },
            "Step 7": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> Input: 3 6 9 12 -> 3 + 6 = 9 (left:  9 9 12) -> 12 - 9 = 3 (left: 3 9)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> Input: 3 6 9 12 -> 3 + 6 = 9 (left:  9 9 12) -> 12 - 9 = 3 (left: 3 9) -> 10 / 5 = 2 (left: 2 10)",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 10 11 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 1": {
                "Step": "10 / 11 =",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 11 = -> 10 / 11 = 0.9090909090909091",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 / 11 = -> 10 / 11 = 0.9090909090909091 -> There are no possible next steps for this input as it is already simplified.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": " 9 9 12"
                }
            },
            "Step 4": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> Input: 3 6 9 12 -> 3 + 6 = 9 (left:  9 9 12) -> 12 - 9 = 3 (left: 9 3)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> Input: 3 6 9 12 -> 3 + 6 = 9 (left:  9 9 12) -> 12 - 9 = 3 (left: 9 3) -> 9 / 3 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "10 11 54"
                }
            },
            "Step 6": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 54 / 11 = 4.909 (left: 10 4.909)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "1 13"
                }
            },
            "Step 7": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> Input: 3 6 9 12 -> 3 + 6 = 9 (left:  9 9 12) -> 9 / 9 = 1 (left: 1 9 12) -> 12 / 1 = 12 ( -> 12 + 1 = 13 (left: 1 13) -> 1 + 13 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "1 13"
                }
            },
            "Step 8": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> Input: 3 6 9 12 -> 3 + 6 = 9 (left:  9 9 12) -> 9 / 9 = 1 (left: 1 9 12) -> 12 / 1 = 12 ( -> 12 + 1 = 13 (left: 1 13) -> 13 * 1 = 13 (left: 13)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "1 13"
                }
            }
        },
        "Input": "6 9 10 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "877": {
        "puzzle": "2 4 5 11",
        "Agent 0": {
            "Step 0": {
                "Step": "5 + 11 = 16 (left: 2 4 16)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 5 11"
                }
            },
            "Step 1": {
                "Step": "2 * 4 = 8 (left: 5 8 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 11 - 5 = ",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 11 - 5 =  -> 11 - 5 = 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "2 4 16"
                }
            },
            "Step 4": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 16 -",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 16 - -> 16 - 8 = 8",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 16 - -> 16 - 8 = 8 -> 16 / 8 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "2 3.67 1.835"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "2 3.67 1.835"
                }
            },
            "Step 7": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 8 - 5 = 3 (left: 3 11) -> 11 / 3 = 3.67 (left: 3.67) -> 3.67 / 2 = 1.835 (left: 2 3.67 1.835) -> 2 + 3.67 = 5.67 (left: 1.835 5.67)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 8 - 5 = 3 (left: 3 11) -> 11 / 3 = 3.67 (left: 3.67) -> 3.67 / 2 = 1.835 (left: 2 3.67 1.835) -> 2 + 3.67 = 5.67 (left: 1.835 5.67) -> 5.67 - 1.835 = 3.835 (left: 3.835)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "2 3.67 1.835"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 * 4 = 8 (left: 5 8 11)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "5 6 11"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 5 6 11) -> 5 + 6 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 5 6 11) -> 5 + 6 = 11 (left: 11) -> There are no possible next steps with the input 11.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 5 6 11) -> 5 + 6 = 11 (left: 11) -> There are no possible next steps with the input 11. -> There are no possible next steps with the input 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "2 4 16"
                }
            },
            "Step 4": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 16 / 4 = 4 (left: 4 4)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 16 / 4 = 4 (left: 4 4) -> 4 - 4 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 16 / 4 = 4 (left: 4 4) -> 4 - 4 = 0 (left: 0) -> There are no possible next steps as there is no input given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "2 3.67 1.835"
                }
            },
            "Step 7": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 8 - 5 = 3 (left: 3 11) -> 11 / 3 = 3.67 (left: 3.67) -> 3.67 / 2 = 1.835 (left: 2 3.67 1.835) -> 3.67 - 2 = 1.67 (left: 1.67 1.835)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 8 - 5 = 3 (left: 3 11) -> 11 / 3 = 3.67 (left: 3.67) -> 3.67 / 2 = 1.835 (left: 2 3.67 1.835) -> 3.67 - 2 = 1.67 (left: 1.67 1.835) -> 1.67 * 1.835 = 3.06545 (left: 3.06545)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "2 3.67 1.835"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 5 = 9 (left: 2 9 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 4 16"
                }
            },
            "Step 1": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 4 * 2 = 8 (left: 8 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 4 * 2 = 8 (left: 8 16) -> 8 * 2 = 16 (left: 16 16)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 4 * 2 = 8 (left: 8 16) -> 8 * 2 = 16 (left: 16 16) -> 16 / 16 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "2 4 16"
                },
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "2 4 16"
                }
            },
            "Step 4": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 16 - 2 = 14 (left: 4 14)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 16 - 2 = 14 (left: 4 14) -> 4 + 14 = 18 (left: 18)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 16 - 2 = 14 (left: 4 14) -> 4 + 14 = 18 (left: 18) -> There are no possible next steps with the number 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "2 3.67 1.835"
                }
            },
            "Step 7": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 8 - 5 = 3 (left: 3 11) -> 11 / 3 = 3.67 (left: 3.67) -> 3.67 / 2 = 1.835 (left: 2 3.67 1.835) -> 2 - 3.67",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 8 - 5 = 3 (left: 3 11) -> 11 / 3 = 3.67 (left: 3.67) -> 3.67 / 2 = 1.835 (left: 2 3.67 1.835) -> 2 - 3.67 -> 2 * 3.67 = 7.34",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 * 4 = 8 (left: 5 8 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "5 8 11"
                }
            },
            "Step 1": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 11 - 8 = 3 (left: 5 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 11 - 8 = 3 (left: 5 3) -> 5 - 3 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 11 - 8 = 3 (left: 5 3) -> 5 - 3 = 2 (left: 2) -> 2 + 2 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "2 4 16"
                }
            },
            "Step 4": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> Possible",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> Possible -> It seems like there might have been a mistake in the input provided. Can you please clarify or provide a new set of numbers for me to generate possible next steps for you?",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> Possible -> It seems like there might have been a mistake in the input provided. Can you please clarify or provide a new set of numbers for me to generate possible next steps for you? -> I'm sorry, I am unable to generate possible next steps without a set of numbers to work with. Please provide a new set of numbers for me to analyze.",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "2 3.67 1.835"
                }
            },
            "Step 7": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 8 - 5 = 3 (left: 3 11) -> 11 / 3 = 3.67 (left: 3.67) -> 3.67 / 2 = 1.835 (left: 2 3.67 1.835) -> 3.67 / 2 = 1.835 (left: 1.835 1.835)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 8 - 5 = 3 (left: 3 11) -> 11 / 3 = 3.67 (left: 3.67) -> 3.67 / 2 = 1.835 (left: 2 3.67 1.835) -> 3.67 / 2 = 1.835 (left: 1.835 1.835) -> 1.835 * 1.835 = 3.367225 (left: 3.367225)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "2 3.67 1.835"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 5 6 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 5 11"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 5 6 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 5 6 11) -> Input: 3 7 2",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 5 6 11) -> Input: 3 7 2 -> 7 - 3 = 4 (left: 4 2)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "2 3.67 1.835"
                }
            },
            "Step 4": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 8 - 5 = 3 (left: 3 11) -> 11 / 3 = 3.67 (left: 3.67) -> 3.67 / 2 = 1.835 (left: 2 3.67 1.835) -> 3.67 - 2 = 1.67 (left: 1.67 1.835)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 8 - 5 = 3 (left: 3 11) -> 11 / 3 = 3.67 (left: 3.67) -> 3.67 / 2 = 1.835 (left: 2 3.67 1.835) -> 3.67 - 2 = 1.67 (left: 1.67 1.835) -> 1.835 / 1.67 = 1.0994011976",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 8 - 5 = 3 (left: 3 11) -> 11 / 3 = 3.67 (left: 3.67) -> 3.67 / 2 = 1.835 (left: 2 3.67 1.835) -> 3.67 - 2 = 1.67 (left: 1.67 1.835) -> 1.835 / 1.67 = 1.0994011976 -> 1.835 - 1.67 = 0.165 (left: 0.165)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "2 3.67 1.835"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "2 3.67 1.835"
                }
            },
            "Step 7": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 8 - 5 = 3 (left: 3 11) -> 11 / 3 = 3.67 (left: 3.67) -> 3.67 / 2 = 1.835 (left: 2 3.67 1.835) -> 2 * 3.67 = 7.34 (left: 1.835 7.34)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 8 - 5 = 3 (left: 3 11) -> 11 / 3 = 3.67 (left: 3.67) -> 3.67 / 2 = 1.835 (left: 2 3.67 1.835) -> 2 * 3.67 = 7.34 (left: 1.835 7.34) -> 7.34 - 1.835 = 5.505 (left: 5.505)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "2 3.67 1.835"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 2 7 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "5 6 11"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 5 6 11) -> 6 / 5 = 1.2 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 5 6 11) -> 6 / 5 = 1.2 (left: -> 6 / 5 = 1.2 (left: 1.2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 5 6 11) -> 6 / 5 = 1.2 (left: -> 6 / 5 = 1.2 (left: 1.2) -> 1.2 + 2 = 3.2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "2 4 16"
                }
            },
            "Step 4": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 2 + 4 = 6 (left: 6 16)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 2 + 4 = 6 (left: 6 16) -> 6 + 16 = 22 (left: 22)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 2 + 4 = 6 (left: 6 16) -> 6 + 16 = 22 (left: 22) -> 22 / 2 = 11",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "2 3.67 1.835"
                }
            },
            "Step 7": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 8 - 5 = 3 (left: 3 11) -> 11 / 3 = 3.67 (left: 3.67) -> 3.67 / 2 = 1.835 (left: 2 3.67 1.835) -> 3.67 / 2 = 1.835 (left: 1.835 1.835)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 8 - 5 = 3 (left: 3 11) -> 11 / 3 = 3.67 (left: 3.67) -> 3.67 / 2 = 1.835 (left: 2 3.67 1.835) -> 3.67 / 2 = 1.835 (left: 1.835 1.835) -> 1.835 + 1.835 = 3.67",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "11 / 2 = 5.5 (left: 4 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "5 8 11"
                }
            },
            "Step 1": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 5 + 8 = 13 (left: 13 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 5 + 8 = 13 (left: 13 11) -> 13 - 11 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 5 + 8 = 13 (left: 13 11) -> 13 - 11 = 2 (left: 2) -> No possible next steps with only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "2 4 16"
                }
            },
            "Step 4": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 4 * 16 = 64 (left: 2 64)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 4 * 16 = 64 (left: 2 64) -> 64 - 64 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 4 * 16 = 64 (left: 2 64) -> 64 - 64 = 0 (left: 0) -> There are no possible next steps as there is no input given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "2 3.67 1.835"
                }
            },
            "Step 7": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 8 - 5 = 3 (left: 3 11) -> 11 / 3 = 3.67 (left: 3.67) -> 3.67 / 2 = 1.835 (left: 2 3.67 1.835) -> 2 + 3.67 = 5.67 (left: 1.835 5.67)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 8 - 5 = 3 (left: 3 11) -> 11 / 3 = 3.67 (left: 3.67) -> 3.67 / 2 = 1.835 (left: 2 3.67 1.835) -> 2 + 3.67 = 5.67 (left: 1.835 5.67) -> 5.67 - 1.835 = 3.835 (left: 3.835)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "2 3.67 1.835"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 2 7 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "5 8 11"
                }
            },
            "Step 1": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 8 - 5 = 3 (left: 3 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 8 - 5 = 3 (left: 3 11) -> 11 / 3 = 3.67 (left: 3.67)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 8 - 5 = 3 (left: 3 11) -> 11 / 3 = 3.67 (left: 3.67) -> 3.67 / 2 = 1.835 (left: 2 3.67 1.835)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "2 4 16"
                }
            },
            "Step 4": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 2 * 4 = 8 (left: 8 16)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 2 * 4 = 8 (left: 8 16) -> 8 * 16 = 128 (left: 128)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 2 * 4 = 8 (left: 8 16) -> 8 * 16 = 128 (left: 128) -> 1 * 2 * 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "2 3.67 1.835"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "2 3.67 1.835"
                }
            },
            "Step 7": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 8 - 5 = 3 (left: 3 11) -> 11 / 3 = 3.67 (left: 3.67) -> 3.67 / 2 = 1.835 (left: 2 3.67 1.835) -> 2 * 3.67 = 7.34 (left: 1.835 7.34)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 8 - 5 = 3 (left: 3 11) -> 11 / 3 = 3.67 (left: 3.67) -> 3.67 / 2 = 1.835 (left: 2 3.67 1.835) -> 2 * 3.67 = 7.34 (left: 1.835 7.34) -> 1.835 + 7.34 = 9.175 (left: 9.175)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "2 3.67 1.835"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 5 6 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 4 16"
                }
            },
            "Step 1": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 16 - 2 = 14 (left: 4 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 16 - 2 = 14 (left: 4 14) -> 14 - 4 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 16 - 2 = 14 (left: 4 14) -> 14 - 4 = 10 (left: 10) -> 10 + 8 = 18 (left: 8 18)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "2 4 16"
                }
            },
            "Step 4": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 4 + 2 = 6 (left: 6 16)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 4 + 2 = 6 (left: 6 16) -> 6 + 16 = 22 (left: 22)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 4 + 2 = 6 (left: 6 16) -> 6 + 16 = 22 (left: 22) -> There are no possible next steps with the input 22.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "2 3.67 1.835"
                }
            },
            "Step 7": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 8 - 5 = 3 (left: 3 11) -> 11 / 3 = 3.67 (left: 3.67) -> 3.67 / 2 = 1.835 (left: 2 3.67 1.835) -> 3.67 - 1.835 = 1.835 (left: 2 1.835)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 8 - 5 = 3 (left: 3 11) -> 11 / 3 = 3.67 (left: 3.67) -> 3.67 / 2 = 1.835 (left: 2 3.67 1.835) -> 3.67 - 1.835 = 1.835 (left: 2 1.835) -> 2 / 1.835 = 1.09 (left: 1.835 1.09)",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 2 5 7)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 5 7"
                }
            },
            "Step 1": {
                "Step": "11 - 4 = 7 (left: 2 5 7) -> 5 * 2 = 10 (left: 10 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 4 = 7 (left: 2 5 7) -> 5 * 2 = 10 (left: 10 7) -> 10 - 7 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 4 = 7 (left: 2 5 7) -> 5 * 2 = 10 (left: 10 7) -> 10 - 7 = 3 (left: 3) -> There are no possible next steps with just one number. If you provide more numbers, I can suggest possible calculations to reach a target number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "2 4 16"
                }
            },
            "Step 4": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 16 - 4 = 12 (left: 2 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 16 - 4 = 12 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 16 - 4 = 12 (left: 2 12) -> 12 - 2 = 10 (left: 10) -> 10 + 10 = 20",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "2 3.67 1.835"
                }
            },
            "Step 7": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 8 - 5 = 3 (left: 3 11) -> 11 / 3 = 3.67 (left: 3.67) -> 3.67 / 2 = 1.835 (left: 2 3.67 1.835) -> 2 + 3.67 = 5.67 (left: 1.835 5.67)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 8 - 5 = 3 (left: 3 11) -> 11 / 3 = 3.67 (left: 3.67) -> 3.67 / 2 = 1.835 (left: 2 3.67 1.835) -> 2 + 3.67 = 5.67 (left: 1.835 5.67) -> 1.835 / 5.67 = 0.3237 (left: 0.3237)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "2 3.67 1.835"
                }
            }
        },
        "Input": "2 4 5 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "878": {
        "puzzle": "1 2 5 10",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 5 = 7 (left: 1 7 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 5 10"
                }
            },
            "Step 1": {
                "Step": "10 / 2 = 5 (left: 1 5 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 2 = 5 (left: 1 5 10) -> 1 * 5 = 5 (left:",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 / 2 = 5 (left: 1 5 10) -> 1 * 5 = 5 (left: -> 5 - 1 = 4 (left: 4 5)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "1 10"
                }
            },
            "Step 4": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 - 10 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 - 10 = 0 (left: 0) -> No possible next steps with just the number 0.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "4 5"
                }
            },
            "Step 7": {
                "Step": "10 / 2 = 5 (left: 1 5 10) -> 1 * 5 = 5 (left: -> 5 - 1 = 4 (left: 4 5) -> 5 - 4 = 1 (left: 1 5)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 / 2 = 5 (left: 1 5 10) -> 1 * 5 = 5 (left: -> 5 - 1 = 4 (left: 4 5) -> 5 - 4 = 1 (left: 1 5) -> 1 * 5 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "10 10 10"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 - 2 = 3 (left: 1 3 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 10"
                }
            },
            "Step 1": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 + 10 = 11 (left: 11) -> There are no possible next steps with the input 11.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 + 10 = 11 (left: 11) -> There are no possible next steps with the input 11. -> There are no possible next steps with the input 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 10"
                }
            },
            "Step 4": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 * 10 = 10 (left: 10) -> 10 / 10 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 * 10 = 10 (left: 10) -> 10 / 10 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "4 5"
                }
            },
            "Step 7": {
                "Step": "10 / 2 = 5 (left: 1 5 10) -> 1 * 5 = 5 (left: -> 5 - 1 = 4 (left: 4 5) -> 4 * 5 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "4 5"
                }
            },
            "Step 8": {
                "Step": "10 / 2 = 5 (left: 1 5 10) -> 1 * 5 = 5 (left: -> 5 - 1 = 4 (left: 4 5) -> Input: 3 9",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 + 10 = 15 (left: 1 2 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 10"
                }
            },
            "Step 1": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 / 10 = 0.1 (left: 0.1)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 / 10 = 0.1 (left: 0.1) -> There are no possible next steps with the input of 0.1.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 / 10 = 0.1 (left: 0.1) -> There are no possible next steps with the input of 0.1. -> There are no possible next steps with the input of 0.1.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "1 10"
                }
            },
            "Step 4": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 / 10 = 1 (left: 1 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 / 10 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "4 5"
                },
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "4 5"
                }
            },
            "Step 7": {
                "Step": "10 / 2 = 5 (left: 1 5 10) -> 1 * 5 = 5 (left: -> 5 - 1 = 4 (left: 4 5) -> 10 + 3 = 13 (left: 3 13)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 / 2 = 5 (left: 1 5 10) -> 1 * 5 = 5 (left: -> 5 - 1 = 4 (left: 4 5) -> 10 + 3 = 13 (left: 3 13) -> 13 - 3 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "10 10 10"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 * 2 = 10 (left: 1 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 10"
                }
            },
            "Step 1": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 9) -> 9 * 8 = 72 (left: 72)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 9) -> 9 * 8 = 72 (left: 72) -> 7 + 2 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "1 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "1 10"
                }
            },
            "Step 4": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 8 = 80 (left: 8 80)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 8 = 80 (left: 8 80) -> 8 * 10 = 80 (left: 80)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "4 5"
                },
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "4 5"
                }
            },
            "Step 7": {
                "Step": "10 / 2 = 5 (left: 1 5 10) -> 1 * 5 = 5 (left: -> 5 - 1 = 4 (left: 4 5) -> 5 / 4 = 1.25 (left: 1.25)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "4 5"
                }
            },
            "Step 8": {
                "Step": "10 / 2 = 5 (left: 1 5 10) -> 1 * 5 = 5 (left: -> 5 - 1 = 4 (left: 4 5) -> 4 / 5 = 0.8 (left: 0.8)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "10 10 10"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 5 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 10"
                }
            },
            "Step 1": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> Input: 4 2 1",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "1 10"
                }
            },
            "Step 4": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 9) -> 9 / 8 = 1.125 (left: 1.125)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 9) -> 9 / 8 = 1.125 (left: 1.125) -> 1.125 + 0.125 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "4 5"
                }
            },
            "Step 7": {
                "Step": "10 / 2 = 5 (left: 1 5 10) -> 1 * 5 = 5 (left: -> 5 - 1 = 4 (left: 4 5) -> 5 - 4 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "4 5"
                }
            },
            "Step 8": {
                "Step": "10 / 2 = 5 (left: 1 5 10) -> 1 * 5 = 5 (left: -> 5 - 1 = 4 (left: 4 5) -> 5 + 4 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "10 10 10"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "5 + 10 = 15 (left: 1 2 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 10"
                }
            },
            "Step 1": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 + 10 = 11 (left: 11) -> There are no possible next steps with the input \"11\" as there are no other numbers provided to perform arithmetic operations with.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 + 10 = 11 (left: 11) -> There are no possible next steps with the input \"11\" as there are no other numbers provided to perform arithmetic operations with. -> N/A",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "1 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "1 10"
                }
            },
            "Step 4": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 9) -> There are no possible next steps with the input 9.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 9) -> There are no possible next steps with the input 9. -> There are no possible next steps with the input 9.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "4 5"
                }
            },
            "Step 7": {
                "Step": "10 / 2 = 5 (left: 1 5 10) -> 1 * 5 = 5 (left: -> 5 - 1 = 4 (left: 4 5) -> 4 / 5 = 0.8 (left: 0.8)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "4 5"
                }
            },
            "Step 8": {
                "Step": "10 / 2 = 5 (left: 1 5 10) -> 1 * 5 = 5 (left: -> 5 - 1 = 4 (left: 4 5) -> 5 - 4 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "10 10 10"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "1 * 2 = 2 (left: 2 5 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 10"
                }
            },
            "Step 1": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 * 10 = 10 (left: 10) -> 10 / 8 = 1.25 (left: 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 * 10 = 10 (left: 10) -> 10 / 8 = 1.25 (left: 8) -> 8 + 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "3 5 10"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "1 10"
                }
            },
            "Step 4": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 + 10 = 20",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 + 10 = 20 -> 20 - 10 = 10 (left: 10 10 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "4 5"
                }
            },
            "Step 7": {
                "Step": "10 / 2 = 5 (left: 1 5 10) -> 1 * 5 = 5 (left: -> 5 - 1 = 4 (left: 4 5) -> 5 / 4 = 1.25 (left: 1.25)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "4 5"
                }
            },
            "Step 8": {
                "Step": "10 / 2 = 5 (left: 1 5 10) -> 1 * 5 = 5 (left: -> 5 - 1 = 4 (left: 4 5) -> 4 * 5 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "10 10 10"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 5 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 10"
                }
            },
            "Step 1": {
                "Step": "5 * 2 = 10 (left: 1 10) -> Possible next steps:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 2 = 10 (left: 1 10) -> Possible next steps: -> There are no more possible next steps with the given numbers.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 2 = 10 (left: 1 10) -> Possible next steps: -> There are no more possible next steps with the given numbers. -> There are no more possible next steps with the given numbers.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "1 10"
                }
            },
            "Step 4": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 / 2 = 5 (left: 5 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 / 2 = 5 (left: 5 8) -> 5 + 8 = 13 (left: 13)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "4 5"
                },
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "4 5"
                }
            },
            "Step 7": {
                "Step": "10 / 2 = 5 (left: 1 5 10) -> 1 * 5 = 5 (left: -> 5 - 1 = 4 (left: 4 5) -> 10 + 2 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "4 5"
                }
            },
            "Step 8": {
                "Step": "10 / 2 = 5 (left: 1 5 10) -> 1 * 5 = 5 (left: -> 5 - 1 = 4 (left: 4 5) -> 4 * 5 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "10 10 10"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "10 - 2 = 8 (left: 1 5 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 10"
                }
            },
            "Step 1": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 9) -> 9 + 3 = 12 (left: 3)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 9) -> 9 + 3 = 12 (left: 3) -> There are no possible next steps for the input 3.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "1 10"
                }
            },
            "Step 4": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 * 10 = 10 (left: 10) -> 10 * 2 = 20 (left: 20)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 * 10 = 10 (left: 10) -> 10 * 2 = 20 (left: 20) -> 20 + 2 = 22 (left: 22",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "4 5"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "4 5"
                }
            },
            "Step 7": {
                "Step": "10 / 2 = 5 (left: 1 5 10) -> 1 * 5 = 5 (left: -> 5 - 1 = 4 (left: 4 5) -> 4 / 5 = 0.8 (left: 0.8)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "4 5"
                }
            },
            "Step 8": {
                "Step": "10 / 2 = 5 (left: 1 5 10) -> 1 * 5 = 5 (left: -> 5 - 1 = 4 (left: 4 5) -> 10 * 2 = 20",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 5 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 10"
                }
            },
            "Step 1": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 / 10 = 0.1 (left: 0.1)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 / 10 = 0.1 (left: 0.1) -> 0.1 / 0.1 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 / 10 = 0.1 (left: 0.1) -> 0.1 / 0.1 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 10"
                }
            },
            "Step 4": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 + 10 = 11 (left: 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 + 10 = 11 (left: 10) -> 10 + 8 = 18 (left: 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 + 10 = 11 (left: 10) -> 10 + 8 = 18 (left: 8) -> 8 - 8 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "4 5"
                },
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "4 5"
                }
            },
            "Step 7": {
                "Step": "10 / 2 = 5 (left: 1 5 10) -> 1 * 5 = 5 (left: -> 5 - 1 = 4 (left: 4 5) -> 4 - 5 = -1 (left: -1)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "4 5"
                }
            },
            "Step 8": {
                "Step": "10 / 2 = 5 (left: 1 5 10) -> 1 * 5 = 5 (left: -> 5 - 1 = 4 (left: 4 5) -> 5 / 4 = 1.25 (left: 1.25)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "10 10 10"
                }
            }
        },
        "Input": "1 2 5 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "879": {
        "puzzle": "2 2 2 5",
        "Agent 0": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 2 5)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 2 3"
                }
            },
            "Step 1": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 / 2 = 1 (left: 1 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 / 2 = 1 (left: 1 3) -> 3 - 1 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 / 2 = 1 (left: 1 3) -> 3 - 1 = 2 (left: 2) -> 2 + 2 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "2 2 3"
                }
            },
            "Step 4": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 + 2 = 4 (left: 3 4)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 + 2 = 4 (left: 3 4) -> 3 * 4 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 + 2 = 4 (left: 3 4) -> 3 * 4 = 12 (left: 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "1 + 1 = 2"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There is only one possible next step:"
                }
            },
            "Step 7": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 3 + 2 = 5 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5) -> There is only one possible next step: -> 8 / 8 = 1 (left: 2 1 14)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 3 + 2 = 5 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5) -> There is only one possible next step: -> 8 / 8 = 1 (left: 2 1 14) -> 1 * 14 = 14 (left: 2 14)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 - 2 = 3 (left: 2 3 5)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 2 3"
                }
            },
            "Step 1": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 / 2 = 1 (left: 1 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 / 2 = 1 (left: 1 3) -> 1 * 3 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 / 2 = 1 (left: 1 3) -> 1 * 3 = 3 (left: 3) -> 8 - 3 = 5 (left: 5 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "2 2 3"
                }
            },
            "Step 4": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 3 + 2 = 5 (left: 2 5)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 3 + 2 = 5 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 3 + 2 = 5 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5) -> There is only one possible next step:",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There is only one possible next step:"
                }
            },
            "Step 7": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 3 + 2 = 5 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5) -> There is only one possible next step: -> 8 / 8 = 1 (left: 2 1 14)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 3 + 2 = 5 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5) -> There is only one possible next step: -> 8 / 8 = 1 (left: 2 1 14) -> 2 * 1 = 2 (left: 2 14)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 2 5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 5"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 2 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 4 * 2 = 8 (left: 8 5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 4 * 2 = 8 (left: 8 5) -> 8 / 5 = 1.6 (left: 1.6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "2 2 3"
                }
            },
            "Step 4": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 * 3 = 6 (left: 3 6)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 * 3 = 6 (left: 3 6) -> 6 - 3 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 * 3 = 6 (left: 3 6) -> 6 - 3 = 3 (left: 3) -> There are no more possible next steps with the input 3.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There is only one possible next step:"
                }
            },
            "Step 7": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 3 + 2 = 5 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 3 + 2 = 5 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16) -> 16 / 2 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "There is only one possible next step:"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 * 5 = 10 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 5"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 2 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 5 / 2 = 2.5 (left: 4 2.5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 5 / 2 = 2.5 (left: 4 2.5) -> 4 * 2.5 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "2 2 3"
                }
            },
            "Step 4": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 - 2 = 0 (left: 0 3)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 - 2 = 0 (left: 0 3) -> 0 + 3 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 - 2 = 0 (left: 0 3) -> 0 + 3 = 3 (left: 3) -> 3 + 2 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "1.6"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There is only one possible next step:"
                }
            },
            "Step 7": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 3 + 2 = 5 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5) -> There is only one possible next step: -> Input: 6",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 3 + 2 = 5 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5) -> There is only one possible next step: -> Input: 6 -> 6 + 6 = 12",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 - 2 = 3 (left: 2 3 3)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 2 3"
                }
            },
            "Step 1": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 3 + 2 = 5 (left: 2 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 3 + 2 = 5 (left: 2 5) -> 2 + 5 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 3 + 2 = 5 (left: 2 5) -> 2 + 5 = 7 (left: 7) -> 7 * 8 = 56 (left: 8 56)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "2 2 3"
                }
            },
            "Step 4": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 - 2 = 0 (left: 0 3)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 - 2 = 0 (left: 0 3) -> 0 + 3 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 - 2 = 0 (left: 0 3) -> 0 + 3 = 3 (left: 3) -> There are no possible next steps with the input of 3.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There is only one possible next step:"
                }
            },
            "Step 7": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 3 + 2 = 5 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5) -> There is only one possible next step: -> 8 - 2 = 6 (left: 6 8 14)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 3 + 2 = 5 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5) -> There is only one possible next step: -> 8 - 2 = 6 (left: 6 8 14) -> 14 - 6 = 8 (left: 8 14)",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "5 - 2 = 3 (left: 2 3 3)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 3 3"
                }
            },
            "Step 1": {
                "Step": "5 - 2 = 3 (left: 2 3 3) -> 4 + 5 = 9 (",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 - 2 = 3 (left: 2 3 3) -> 4 + 5 = 9 ( -> 4 * 5 = 20 (left: 20 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 - 2 = 3 (left: 2 3 3) -> 4 + 5 = 9 ( -> 4 * 5 = 20 (left: 20 9) -> 9 * 20 = 180 (left: 180)",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "2 2 3"
                },
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "2 2 3"
                }
            },
            "Step 4": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 * 2 = 4 (left: 4 3)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 * 2 = 4 (left: 4 3) -> 4 + 3 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 * 2 = 4 (left: 4 3) -> 4 + 3 = 7 (left: 7) -> 7 * 8 = 56 (left: 56)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "10"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There is only one possible next step:"
                }
            },
            "Step 7": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 3 + 2 = 5 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 3 + 2 = 5 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16) -> 2 + 16 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "There is only one possible next step:"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "2 / 2 = 1 (left: 1 2 5)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 2 3"
                }
            },
            "Step 1": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 3 + 2 = 5 (left: 2 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 3 + 2 = 5 (left: 2 5) -> 5 - 2 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 3 + 2 = 5 (left: 2 5) -> 5 - 2 = 3 (left: 3) -> 3 + 2 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "4 2 5"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "2 2 3"
                }
            },
            "Step 4": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 + 2 = 4 (left: 3 4)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 + 2 = 4 (left: 3 4) -> 9 / 6 =",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 + 2 = 4 (left: 3 4) -> 9 / 6 = -> 9 / 6 = 1.5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There is only one possible next step:"
                }
            },
            "Step 7": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 3 + 2 = 5 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 3 + 2 = 5 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16) -> 16 - 2 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "There is only one possible next step:"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 2 5)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 3 3"
                }
            },
            "Step 1": {
                "Step": "5 - 2 = 3 (left: 2 3 3) -> 3 / 2 = 1.5 (left: 1.5 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 - 2 = 3 (left: 2 3 3) -> 3 / 2 = 1.5 (left: 1.5 3) -> 3 - 1.5 = 1.5 (left: 1.5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 - 2 = 3 (left: 2 3 3) -> 3 / 2 = 1.5 (left: 1.5 3) -> 3 - 1.5 = 1.5 (left: 1.5) -> 1.5 + 8 = 9.5 (left: 9.5)",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "2 2 3"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "2 2 3"
                }
            },
            "Step 4": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 + 2 = 4 (left: 3 4)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 + 2 = 4 (left: 3 4) -> 3 + 4 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 + 2 = 4 (left: 3 4) -> 3 + 4 = 7 (left: 7) -> 7 - 8 = -1 (left: -1)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "5 8"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There is only one possible next step:"
                }
            },
            "Step 7": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 3 + 2 = 5 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5) -> There is only one possible next step: -> 8 / 2 = 4 (left: 2 4 14)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 3 + 2 = 5 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5) -> There is only one possible next step: -> 8 / 2 = 4 (left: 2 4 14) -> 2 + 4 = 6 (left: 6 14)",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 2 5)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 2 3"
                }
            },
            "Step 1": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 3 * 2 = 6 (left: 2 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 3 * 2 = 6 (left: 2 6) -> 6 - 2 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 3 * 2 = 6 (left: 2 6) -> 6 - 2 = 4 (left: 4) -> 4 + 4 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "2 2 3"
                }
            },
            "Step 4": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 + 2 = 4 (left: 3 4)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 + 2 = 4 (left: 3 4) -> 3 * 4 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 + 2 = 4 (left: 3 4) -> 3 * 4 = 12 (left: 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "10"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There is only one possible next step:"
                }
            },
            "Step 7": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 3 + 2 = 5 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 3 + 2 = 5 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16) -> 2 + 16 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "There is only one possible next step:"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "5 - 2 = 3 (left: 2 2 3)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 2 3"
                }
            },
            "Step 1": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 * 2 = 4 (left: 4 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 * 2 = 4 (left: 4 3) -> 4 - 3 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 * 2 = 4 (left: 4 3) -> 4 - 3 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "2 2 3"
                }
            },
            "Step 4": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 * 2 = 4 (left: 3 4)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 * 2 = 4 (left: 3 4) -> 3 + 4 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 * 2 = 4 (left: 3 4) -> 3 + 4 = 7 (left: 7) -> 7 / 8 = 0.875 (left: 0.875)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "1.6"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There is only one possible next step:"
                }
            },
            "Step 7": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 3 + 2 = 5 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 3 + 2 = 5 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16) -> 16 / 2 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "There is only one possible next step:"
                }
            }
        },
        "Input": "2 2 2 5",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "880": {
        "puzzle": "6 12 13 13",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 6 13 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 12 13 13"
                }
            },
            "Step 1": {
                "Step": "13 + 6 = 19 (left: 12 13 19)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 + 6 = 19 (left: 12 13 19) -> 12 * 13 = 156 (left: 19 156)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 + 6 = 19 (left: 12 13 19) -> 12 * 13 = 156 (left: 19 156) -> 19 / 156 \u2248 0.122 (left: 0.122)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 13 13"
                }
            },
            "Step 4": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 * 6 = 78 (left: 78 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 * 6 = 78 (left: 78 13) -> Possible next steps:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 * 6 = 78 (left: 78 13) -> Possible next steps: -> There are no possible next steps with the given input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "6 2.166666666"
                }
            },
            "Step 7": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 / 6 = 2.166666666 -> 13 / 6 = 2.166666666 (left: 6 2.166666666) -> 6 * 2 = 12 (left: 12 2.166666666)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 / 6 = 2.166666666 -> 13 / 6 = 2.166666666 (left: 6 2.166666666) -> 6 * 2 = 12 (left: 12 2.166666666) -> 12 * 2 = 24 (left: 24",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "6 -6"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 7 12 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "6 13 13"
                }
            },
            "Step 1": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 3 + 6 = 9 (left: ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 3 + 6 = 9 (left:  -> It seems like there is no additional input provided. If you provide the numbers, I can generate possible next steps for you.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 3 + 6 = 9 (left:  -> It seems like there is no additional input provided. If you provide the numbers, I can generate possible next steps for you. -> Without additional input, I cannot generate possible next steps. Please provide the numbers you would like me to work with.",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 13 13"
                }
            },
            "Step 4": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> Input: 2.1666666666666665 7 13 19 78",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> Input: 2.1666666666666665 7 13 19 78 -> 19 - 13 = 6 (left:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> Input: 2.1666666666666665 7 13 19 78 -> 19 - 13 = 6 (left: -> 13 - 19 = -6 (left: 6 -6)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "6 -6"
                }
            },
            "Step 7": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> Input: 2.1666666666666665 7 13 19 78 -> 19 - 13 = 6 (left: -> 13 - 19 = -6 (left: 6 -6) -> 6 + (-6) = 0",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> Input: 2.1666666666666665 7 13 19 78 -> 19 - 13 = 6 (left: -> 13 - 19 = -6 (left: 6 -6) -> 6 + (-6) = 0 -> 6 - 6 = 0",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 12 = 18 (left: 13 18 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 12 13 13"
                }
            },
            "Step 1": {
                "Step": "12 - 6 = 6 (left: 6 13 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 - 6 = 7 (left: 7 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 - 6 = 7 (left: 7 13) -> 7 + 13 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 13 13"
                }
            },
            "Step 4": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 - 6 = 7 (left: 7 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 - 6 = 7 (left: 7 13) -> 13 / 7 = 1.857 (left: 1.857)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 - 6 = 7 (left: 7 13) -> 13 / 7 = 1.857 (left: 1.857) -> 1.857 + 2 = 3.857",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "6 -6"
                }
            },
            "Step 7": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> Input: 2.1666666666666665 7 13 19 78 -> 19 - 13 = 6 (left: -> 13 - 19 = -6 (left: 6 -6) -> 6 - (-6) = 12",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> Input: 2.1666666666666665 7 13 19 78 -> 19 - 13 = 6 (left: -> 13 - 19 = -6 (left: 6 -6) -> 6 - (-6) = 12 -> 6 - (-6) = 12",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "12 / 6 = 2 (left: 2 13 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 12 13 13"
                }
            },
            "Step 1": {
                "Step": "12 - 6 = 6 (left: 6 13 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 / 6 = 2.16666666667 (left: 2.16666666667 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 / 6 = 2.16666666667 (left: 2.16666666667 13) -> 13 - 2.16666666667 = 10.83333333333 (left: 10.83333333333)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "6 13 13"
                }
            },
            "Step 4": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 / 6 = 2.16667 (left: 2.16667 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 / 6 = 2.16667 (left: 2.16667 13) -> 13 * 2.166",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 / 6 = 2.16667 (left: 2.16667 13) -> 13 * 2.166 -> 13 + 2.166 = 15.166",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "6 2.166666666"
                }
            },
            "Step 7": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 / 6 = 2.166666666 -> 13 / 6 = 2.166666666 (left: 6 2.166666666) -> 6 * 2.166666666 = 13 (left: 13)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "6 2.166666666"
                }
            },
            "Step 8": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 / 6 = 2.166666666 -> 13 / 6 = 2.166666666 (left: 6 2.166666666) -> 6 + 2.166666666 = 8.166666666 (left: 2.166666666 8.166666666)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 + 6 = 19 (left: 12 13 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 12 13 13"
                }
            },
            "Step 1": {
                "Step": "6 + 12 = 18 (left: 13 18 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 12 = 18 (left: 13 18 13) -> 13 - 18 = -5 (left: -5 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 12 = 18 (left: 13 18 13) -> 13 - 18 = -5 (left: -5 13) -> -5 * 13 = -65 (left: -65)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 12 13 13"
                }
            },
            "Step 4": {
                "Step": "13 - 6 = 7 (left: 7 13 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 6 = 7 (left: 7 13 13) -> 7 + 13 = 20 (left: 13 20)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 6 = 7 (left: 7 13 13) -> 7 + 13 = 20 (left: 13 20) -> 13 - 20 = -7 (left: -7 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "6 2.166666666"
                }
            },
            "Step 7": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 / 6 = 2.166666666 -> 13 / 6 = 2.166666666 (left: 6 2.166666666) -> 2.166666666 / 6 = 0.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 / 6 = 2.166666666 -> 13 / 6 = 2.166666666 (left: 6 2.166666666) -> 2.166666666 / 6 = 0. -> 6 / 2.166666666 = 2.769230769 (left: 2.769230769)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "6 -6"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 6 13 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 12 13 13"
                }
            },
            "Step 1": {
                "Step": "13 - 6 = 7 (left: 6 7 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 6 = 7 (left: 6 7  -> 6 / 7 = 0.8571428571428571 (left: 0.8571428571428571)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 6 = 7 (left: 6 7  -> 6 / 7 = 0.8571428571428571 (left: 0.8571428571428571) -> 0.8571428571428571 / 2 = 0.42857142857142855",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 12 13 13"
                }
            },
            "Step 4": {
                "Step": "6 + 12 = 18 (left: 13 13 18)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 12 = 18 (left: 13 13 18) -> 18 + 13 = 31 (left: 13 31)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 12 = 18 (left: 13 13 18) -> 18 + 13 = 31 (left: 13 31) -> Input: 5 9 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "6 2.166666666"
                }
            },
            "Step 7": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 / 6 = 2.166666666 -> 13 / 6 = 2.166666666 (left: 6 2.166666666) -> 6 + 2.166666666 = 8.166666666 (left: 8.166666666)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "6 -6"
                }
            },
            "Step 8": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> Input: 2.1666666666666665 7 13 19 78 -> 19 - 13 = 6 (left: -> 13 - 19 = -6 (left: 6 -6) -> 6 - (-6) = 12",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 6 7 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 12 13 13"
                }
            },
            "Step 1": {
                "Step": "6 * 12 = 72 (left: 13 13 72)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 12 = 72 (left: 13 13 72) -> 72 - 13 = 59 (left: 13 59)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 12 = 72 (left: 13 13 72) -> 72 - 13 = 59 (left: 13 59) -> 13 / 59 \u2248 0.22 (left: 0.22)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 12 13 13"
                }
            },
            "Step 4": {
                "Step": "12 / 6 = 2 (left: 2 13 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 / 6 = 2 (left: 2 13 13) -> 2 + 13 = 15 (left: 13 15)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 6 = 2 (left: 2 13 13) -> 2 + 13 = 15 (left: 13 15) -> 13 * 15 = 195 (left: 195)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "6 -6"
                }
            },
            "Step 7": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> Input: 2.1666666666666665 7 13 19 78 -> 19 - 13 = 6 (left: -> 13 - 19 = -6 (left: 6 -6) -> 6 / -6 = -1 (left: -1)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "6 2.166666666"
                }
            },
            "Step 8": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 / 6 = 2.166666666 -> 13 / 6 = 2.166666666 (left: 6 2.166666666) -> 2.166666666 / 6 = 0.361111111 (left: 6 0.361",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 6 13 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 12 13 13"
                }
            },
            "Step 1": {
                "Step": "6 * 12 = 72 (left: 13 13 72)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 12 = 72 (left: 13 13 72) -> 72 / 13 = 5 (left: 13 5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 12 = 72 (left: 13 13 72) -> 72 / 13 = 5 (left: 13 5) -> 13 - 5 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 13 13"
                }
            },
            "Step 4": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 + 6 = 19 (left: 6 19)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 + 6 = 19 (left: 6 19) -> 10 - 5 = 5 (left: 5 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 + 6 = 19 (left: 6 19) -> 10 - 5 = 5 (left: 5 2) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "6 2.166666666"
                }
            },
            "Step 7": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 / 6 = 2.166666666 -> 13 / 6 = 2.166666666 (left: 6 2.166666666) -> 6 - 2 = 4.0 (left: 4.0)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "6 -6"
                }
            },
            "Step 8": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> Input: 2.1666666666666665 7 13 19 78 -> 19 - 13 = 6 (left: -> 13 - 19 = -6 (left: 6 -6) -> 6 / (-6) = -1 (left: -1)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "6 -6"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "13 + 6 = 19 (left: 12 13 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "6 13 13"
                }
            },
            "Step 1": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 6 + 13 = 19 (left: 13 19)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 6 + 13 = 19 (left: 13 19) -> 13 * 19 = 247 (left: 247)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 6 + 13 = 19 (left: 13 19) -> 13 * 19 = 247 (left: 247) -> 24 + 7 = 31 (left: 31)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "6 13 13"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 12 13 13"
                }
            },
            "Step 4": {
                "Step": "12 - 6 = 6 (left: 6 13 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 / 6 = 2.166666666",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 / 6 = 2.166666666 -> 13 / 6 = 2.166666666 (left: 6 2.166666666)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "6 2.166666666"
                }
            },
            "Step 7": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 / 6 = 2.166666666 -> 13 / 6 = 2.166666666 (left: 6 2.166666666) -> 6 / 2.166666666 = 2.766666666 (left: 2.766666666)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "6 2.166666666"
                }
            },
            "Step 8": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 / 6 = 2.166666666 -> 13 / 6 = 2.166666666 (left: 6 2.166666666) -> 6 - 2.166666666 = 3.833333334 (left: 3.833333334)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "6 -6"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 6 13 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 12 13 13"
                }
            },
            "Step 1": {
                "Step": "13 - 6 = 7 (left: 7 13 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 6 = 7 (left: 7 13 13) -> 13 - 7 = 6 (left: 6 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 6 = 7 (left: 7 13 13) -> 13 - 7 = 6 (left: 6 13) -> 6 + 13 = 19 (left: 19)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 12 13 13"
                }
            },
            "Step 4": {
                "Step": "13 - 6 = 7 (left: 7 13 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 6 = 7 (left: 7 13 13) -> 13 - 7 = 6 (left: 6 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 6 = 7 (left: 7 13 13) -> 13 - 7 = 6 (left: 6 13) -> 13 - 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "6 2.166666666"
                }
            },
            "Step 7": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 / 6 = 2.166666666 -> 13 / 6 = 2.166666666 (left: 6 2.166666666) -> 6 * 2 = 12 (left: 12 2.166666666)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 / 6 = 2.166666666 -> 13 / 6 = 2.166666666 (left: 6 2.166666666) -> 6 * 2 = 12 (left: 12 2.166666666) -> 12 * 2.166666666 = 26 (left: 26)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "6 -6"
                }
            }
        },
        "Input": "6 12 13 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "881": {
        "puzzle": "3 3 6 10",
        "Agent 0": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 9 6 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5) -> There are no possible next steps with the input of 1.5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 4": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 6 / 3 = 2 (left: 2 7)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 6 / 3 = 2 (left: 2 7) -> 7 - 2 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 6 / 3 = 2 (left: 2 7) -> 7 - 2 = 5 (left: 5) -> 5 - 8 = -3 (left: -3)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "7.5 * 2 = 30"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "7.5 * 2 = 30"
                }
            },
            "Step 7": {
                "Step": "6 + 3 = 9 (left: 9 6  -> 6 + 9 = 15 (left: 15) -> 15 * 2 = 30 -> 15 / 2 = 7.5 (left: 7.5 * 2 = 30) -> 7.5 / 2 = 3.75 (left: 3.75 30)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 3 = 9 (left: 9 6  -> 6 + 9 = 15 (left: 15) -> 15 * 2 = 30 -> 15 / 2 = 7.5 (left: 7.5 * 2 = 30) -> 7.5 / 2 = 3.75 (left: 3.75 30) -> 3.75 * 30 = 112.5 (left: 112.5)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "7.5 * 2 = 30"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 6 6 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "9 6 "
                }
            },
            "Step 1": {
                "Step": "6 + 3 = 9 (left: 9 6  -> 6 + 9 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 3 = 9 (left: 9 6  -> 6 + 9 = 15 (left: 15) -> 15 * 2 = 30",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 3 = 9 (left: 9 6  -> 6 + 9 = 15 (left: 15) -> 15 * 2 = 30 -> 15 / 2 = 7.5 (left: 7.5 * 2 = 30)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "9 6 "
                }
            },
            "Step 4": {
                "Step": "6 + 3 = 9 (left: 9 6  -> 9 / 6 = 1.5 (left: 1.5)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 3 = 9 (left: 9 6  -> 9 / 6 = 1.5 (left: 1.5) -> There are no possible next steps with the input of 1.5.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 3 = 9 (left: 9 6  -> 9 / 6 = 1.5 (left: 1.5) -> There are no possible next steps with the input of 1.5. -> There are no possible next steps with the input of 1.5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "7.5 * 2 = 30"
                }
            },
            "Step 7": {
                "Step": "6 + 3 = 9 (left: 9 6  -> 6 + 9 = 15 (left: 15) -> 15 * 2 = 30 -> 15 / 2 = 7.5 (left: 7.5 * 2 = 30) -> 7.5 / 2 = 3.75 (left: 3.75 30)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 3 = 9 (left: 9 6  -> 6 + 9 = 15 (left: 15) -> 15 * 2 = 30 -> 15 / 2 = 7.5 (left: 7.5 * 2 = 30) -> 7.5 / 2 = 3.75 (left: 3.75 30) -> 30 / 3.75 = 8 (left: 8 30)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 3 = 7 (left: 3 6 7)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 6 / 3 = 2 (left: 2 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 6 / 3 = 2 (left: 2 7) -> 2 + 7 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 6 / 3 = 2 (left: 2 7) -> 2 + 7 = 9 (left: 9) -> 9 - 8 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "3 6 7"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 4": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 6 / 3 = 2 (left: 2 7)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 6 / 3 = 2 (left: 2 7) -> 2 * 7 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 6 / 3 = 2 (left: 2 7) -> 2 * 7 = 14 (left: 14) -> 14 + 14 = 28",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "7.5 * 2 = 30"
                }
            },
            "Step 7": {
                "Step": "6 + 3 = 9 (left: 9 6  -> 6 + 9 = 15 (left: 15) -> 15 * 2 = 30 -> 15 / 2 = 7.5 (left: 7.5 * 2 = 30) -> 7.5 / 2 = 3.75 (left: 3.75 30)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 3 = 9 (left: 9 6  -> 6 + 9 = 15 (left: 15) -> 15 * 2 = 30 -> 15 / 2 = 7.5 (left: 7.5 * 2 = 30) -> 7.5 / 2 = 3.75 (left: 3.75 30) -> 25 - 5",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 6 6 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9) -> 7 + 9 = 16 (left: 16)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9) -> 7 + 9 = 16 (left: 16) -> There are no possible next steps as there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 4": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 6 + 7 = 13 (left: 3 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 6 + 7 = 13 (left: 3 13) -> 3 + 13 = 16 (left: 16)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 6 + 7 = 13 (left: 3 13) -> 3 + 13 = 16 (left: 16) -> There are no possible next steps with the input of 16.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "7.5 * 2 = 30"
                }
            },
            "Step 7": {
                "Step": "6 + 3 = 9 (left: 9 6  -> 6 + 9 = 15 (left: 15) -> 15 * 2 = 30 -> 15 / 2 = 7.5 (left: 7.5 * 2 = 30) -> 7.5 * 2 = 15 (left: 15 30)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 3 = 9 (left: 9 6  -> 6 + 9 = 15 (left: 15) -> 15 * 2 = 30 -> 15 / 2 = 7.5 (left: 7.5 * 2 = 30) -> 7.5 * 2 = 15 (left: 15 30) -> 30 + 15 = 45 (left: 45)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "7.5 * 2 = 30"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 9 6 ",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 7 + 3 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 7 + 3 = 10 (left: 10) -> There is only one possible next step which is 10.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 7 + 3 = 10 (left: 10) -> There is only one possible next step which is 10. -> 10 / 2 = 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 4": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 6 - 3 = 3 (left: 3 7)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 6 - 3 = 3 (left: 3 7) -> 7 - 3 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 6 - 3 = 3 (left: 3 7) -> 7 - 3 = 4 (left: 4) -> There is only one possible operation for the input of 4:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "7.5 * 2 = 30"
                }
            },
            "Step 7": {
                "Step": "6 + 3 = 9 (left: 9 6  -> 6 + 9 = 15 (left: 15) -> 15 * 2 = 30 -> 15 / 2 = 7.5 (left: 7.5 * 2 = 30) -> 7.5 / 2 = 3.75 (left: 3.75 30)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 3 = 9 (left: 9 6  -> 6 + 9 = 15 (left: 15) -> 15 * 2 = 30 -> 15 / 2 = 7.5 (left: 7.5 * 2 = 30) -> 7.5 / 2 = 3.75 (left: 3.75 30) -> 3.75 * 2 = 7.5 (left: 7.5 30)",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "6 / 3 = 2 (left: 2 3 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 6 10"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 6 - 6 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 6 - 6 =  -> 6 - 6 = 0",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 6 - 6 =  -> 6 - 6 = 0 -> 6 + 6 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "3 6 7"
                },
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 4": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9) -> 9 / 7 = 1.2857142857142858 (left: 1.2857142857142858)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9) -> 9 / 7 = 1.2857142857142858 (left: 1.2857142857142858) -> 1.2857142857142858 * 2 = 2.5714285714285716",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "7.5 * 2 = 30"
                }
            },
            "Step 7": {
                "Step": "6 + 3 = 9 (left: 9 6  -> 6 + 9 = 15 (left: 15) -> 15 * 2 = 30 -> 15 / 2 = 7.5 (left: 7.5 * 2 = 30) -> 30 / 2 = 15 (left: 15 30)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 3 = 9 (left: 9 6  -> 6 + 9 = 15 (left: 15) -> 15 * 2 = 30 -> 15 / 2 = 7.5 (left: 7.5 * 2 = 30) -> 30 / 2 = 15 (left: 15 30) -> 15 / 30 = 0.5 (left: 0.5)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "7.5 * 2 = 30"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "10 - 3 = 7 (left: 3 6 7)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 6 10"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 * 6 = 60 (left: 6 60)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 * 6 = 60 (left: 6 60) -> 6 + 60 = 66 (left: 66)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 * 6 = 60 (left: 6 60) -> 6 + 60 = 66 (left: 66) -> 66 + 2 = 68 (left: 2)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "6 6 10"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 4": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - (3 + 3)) = 24",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "7.5 * 2 = 30"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "7.5 * 2 = 30"
                }
            },
            "Step 7": {
                "Step": "6 + 3 = 9 (left: 9 6  -> 6 + 9 = 15 (left: 15) -> 15 * 2 = 30 -> 15 / 2 = 7.5 (left: 7.5 * 2 = 30) -> 7.5 / 2 = 3.75 (left: 3.75 2 30)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 3 = 9 (left: 9 6  -> 6 + 9 = 15 (left: 15) -> 15 * 2 = 30 -> 15 / 2 = 7.5 (left: 7.5 * 2 = 30) -> 7.5 / 2 = 3.75 (left: 3.75 2 30) -> 2 + 3.75 = 5.75 (left: 5.75 30",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 6 6 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 6 10"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 + 6 = 16 (left: 6 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 + 6 = 16 (left: 6 16) -> 6 - 16 = -10 (left: -10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 + 6 = 16 (left: 6 16) -> 6 - 16 = -10 (left: -10) -> -10 * 2 = -20 (left: -20)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "3 6 7"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "6 6 10"
                }
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 * 6 = 60 (left: 6 60)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 * 6 = 60 (left: 6 60) -> 6 / 60 = 0.1 (left: 0.1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 * 6 = 60 (left: 6 60) -> 6 / 60 = 0.1 (left: 0.1) -> 0.1 * 0.1 = 0.01 (left: 0.01)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "1 + 2 + 6 = 9"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "7.5 * 2 = 30"
                }
            },
            "Step 7": {
                "Step": "6 + 3 = 9 (left: 9 6  -> 6 + 9 = 15 (left: 15) -> 15 * 2 = 30 -> 15 / 2 = 7.5 (left: 7.5 * 2 = 30) -> 7.5 / 2 = 3.75 (left: 3.75 30)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 3 = 9 (left: 9 6  -> 6 + 9 = 15 (left: 15) -> 15 * 2 = 30 -> 15 / 2 = 7.5 (left: 7.5 * 2 = 30) -> 7.5 / 2 = 3.75 (left: 3.75 30) -> 3.75 * 30 = 112.5 (left: 112.5)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "7.5 * 2 = 30"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "10 - 3 = 7 (left: 3 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 6 10"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 6 * 6 = 36 (left: 10 36)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 6 * 6 = 36 (left: 10 36) -> 36 - 10 = 26 (left: 10 26)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 6 * 6 = 36 (left: 10 36) -> 36 - 10 = 26 (left: 10 26) -> 10 + 26 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "9 6 "
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 4": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> Input: 4 5",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> Input: 4 5 -> 4 / 5 = 0.8 (left: 0.8 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> Input: 4 5 -> 4 / 5 = 0.8 (left: 0.8 5) -> 5 / 0.8 = 6.25 (left: 6.25)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "7.5 * 2 = 30"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "7.5 * 2 = 30"
                }
            },
            "Step 7": {
                "Step": "6 + 3 = 9 (left: 9 6  -> 6 + 9 = 15 (left: 15) -> 15 * 2 = 30 -> 15 / 2 = 7.5 (left: 7.5 * 2 = 30) -> 7.5 + 2 = 9.5 (left: 9.5 30)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 3 = 9 (left: 9 6  -> 6 + 9 = 15 (left: 15) -> 15 * 2 = 30 -> 15 / 2 = 7.5 (left: 7.5 * 2 = 30) -> 7.5 + 2 = 9.5 (left: 9.5 30) -> 9.5 - 30 = -20.5 (left: -20.5",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "7.5 * 2 = 30"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 9 6 10)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 3 * 6 = 18 (left: 7 18)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 3 * 6 = 18 (left: 7 18) -> 7 * 18 = 126 (left: 126)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 3 * 6 = 18 (left: 7 18) -> 7 * 18 = 126 (left: 126) -> 1 + 2 + 6 = 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 4": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9) -> 9 / 7 = 1.28571428571 (left: 1.28571428571)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9) -> 9 / 7 = 1.28571428571 (left: 1.28571428571) -> 1.28571428571 * 2 = 2.57142857142 (left: 2.57142857142)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There are no possible next steps with the input of 1.5."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "7.5 * 2 = 30"
                }
            },
            "Step 7": {
                "Step": "6 + 3 = 9 (left: 9 6  -> 6 + 9 = 15 (left: 15) -> 15 * 2 = 30 -> 15 / 2 = 7.5 (left: 7.5 * 2 = 30) -> 7.5 / 2 = 3.75 (left: 3.75 2 30)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 3 = 9 (left: 9 6  -> 6 + 9 = 15 (left: 15) -> 15 * 2 = 30 -> 15 / 2 = 7.5 (left: 7.5 * 2 = 30) -> 7.5 / 2 = 3.75 (left: 3.75 2 30) -> 2 + 3.75 = 5.75 (left: 5.75 30",
                "Pruning": null
            }
        },
        "Input": "3 3 6 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "882": {
        "puzzle": "3 4 8 11",
        "Agent 0": {
            "Step 0": {
                "Step": "8 + 3 = 11 (left: 4 8 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8) -> Input: 2 8",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8) -> Input: 2 8 -> 8 / 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "4 8 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 4": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32) -> 8 + 32 = 40 (left: 40)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32) -> 8 + 32 = 40 (left: 40) -> There is only one number, so no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "2 5"
                }
            },
            "Step 7": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8) -> 2 + 8 = 10 (left: 10) -> 10 / 2 = 5 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "2 5"
                }
            },
            "Step 8": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8) -> 2 + 8 = 10 (left: 10) -> 10 / 2 = 5 (left: 2 5) -> Input: 3 9",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 + 3 = 11 (left: 4 11 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8) -> 8 / 4 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8) -> 8 / 4 = 2 (left: 2) -> 2 + 2 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 4": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8) -> 2 * 8 = 16 (left: 16)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8) -> 2 * 8 = 16 (left: 16) -> 16 / 2 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "2 5"
                }
            },
            "Step 7": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8) -> 2 + 8 = 10 (left: 10) -> 10 / 2 = 5 (left: 2 5) -> 2 + 5 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "2 5"
                }
            },
            "Step 8": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8) -> 2 + 8 = 10 (left: 10) -> 10 / 2 = 5 (left: 2 5) -> 2 * 5 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "2 5"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 3 7 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8) -> 4 + 8 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8) -> 4 + 8 = 12 (left: 12) -> 12 + 8 = 20 (left: 8 20)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 4": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8) -> 8 - 2 = 6 (left: 6 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8) -> 8 - 2 = 6 (left: 6 8) -> Input: 14 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "2 5"
                }
            },
            "Step 7": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8) -> 2 + 8 = 10 (left: 10) -> 10 / 2 = 5 (left: 2 5) -> 2 + 5 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "2 5"
                }
            },
            "Step 8": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8) -> 2 + 8 = 10 (left: 10) -> 10 / 2 = 5 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "2 5"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 8 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8) -> 2 * 8 = 16 (left: 16)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8) -> 2 * 8 = 16 (left: 16) -> 16 / 2 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "4 8 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 4": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 8 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 8 12) -> 12 + 8 = 20 (left: 8 20)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 8 12) -> 12 + 8 = 20 (left: 8 20) -> 8 / 20 = 0.4 (left: 0.4)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "8 20"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "2 5"
                }
            },
            "Step 7": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8) -> 2 + 8 = 10 (left: 10) -> 10 / 2 = 5 (left: 2 5) -> 6 - 4 = 2",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8) -> 2 + 8 = 10 (left: 10) -> 10 / 2 = 5 (left: 2 5) -> 6 - 4 = 2 -> 4 / 6 = 0.6667 (left: 0.6667)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "2 5"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 8 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 8 11"
                }
            },
            "Step 1": {
                "Step": "3 + 4 = 7 (left: 7 8 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 4 = 7 (left: 7 8 11) -> 8 / 7 = 1.14 (left: 1.14 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 + 4 = 7 (left: 7 8 11) -> 8 / 7 = 1.14 (left: 1.14 11) -> 1.14 * 11 = 12.54 (left: 12.54)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 4": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8) -> Input: 2 8",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8) -> Input: 2 8 -> 8 - 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "8 20"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "2 5"
                }
            },
            "Step 7": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8) -> 2 + 8 = 10 (left: 10) -> 10 / 2 = 5 (left: 2 5) -> 5 - 2 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "2 5"
                }
            },
            "Step 8": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8) -> 2 + 8 = 10 (left: 10) -> 10 / 2 = 5 (left: 2 5) -> 5 - 2 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "2 5"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "4 + 3 = 7 (left: 7 8 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 - 4 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 - 4 =  -> 4 (left: 4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 - 4 =  -> 4 (left: 4) -> There are no possible next steps for the number 4.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 4": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8) -> 2 + 8 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8) -> 2 + 8 = 10 (left: 10) -> 10 - 2 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "8 20"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "2 5"
                }
            },
            "Step 7": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8) -> 2 + 8 = 10 (left: 10) -> 10 / 2 = 5 (left: 2 5) -> 2 + 5 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "2 5"
                }
            },
            "Step 8": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8) -> 2 + 8 = 10 (left: 10) -> 10 / 2 = 5 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "2 5"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 3 7 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 * 4 = 32 (left: 8 32)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 * 4 = 32 (left: 8 32) -> 8 * 4 = 32 (left: 32)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 * 4 = 32 (left: 8 32) -> 8 * 4 = 32 (left: 32) -> None, as there is only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 4": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> Input: 3 5 7",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> Input: 3 5 7 -> 3 + 5 = 8 (left: 7 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> Input: 3 5 7 -> 3 + 5 = 8 (left: 7 8) -> 8 / 7 = 1.14 (left: 1.14)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "8 20"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "2 5"
                }
            },
            "Step 7": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8) -> 2 + 8 = 10 (left: 10) -> 10 / 2 = 5 (left: 2 5) -> 2 * 5 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "2 5"
                }
            },
            "Step 8": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8) -> 2 + 8 = 10 (left: 10) -> 10 / 2 = 5 (left: 2 5) -> 3 + 9 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "2 5"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "11 - 3 = 8 (left: 4 8 8)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8) -> 8 / 4 = 2 (left: 2 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8) -> 8 / 4 = 2 (left: 2 8) -> 8 / 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "4 8 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 4": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8) -> 8 / 4 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8) -> 8 / 4 = 2 (left: 2) -> 2 + 2 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "2 5"
                }
            },
            "Step 7": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8) -> 2 + 8 = 10 (left: 10) -> 10 / 2 = 5 (left: 2 5) -> Input: 3 9",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8) -> 2 + 8 = 10 (left: 10) -> 10 / 2 = 5 (left: 2 5) -> Input: 3 9 -> 9 / 3 = 3 (left: 3 9)",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "11 / 4 = 2.75 (left",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12) -> 8 + 12 = 20 (left: 20)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12) -> 8 + 12 = 20 (left: 20) -> 20 - 8 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "4 8 8"
                },
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 4": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8) -> 2 + 8 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8) -> 2 + 8 = 10 (left: 10) -> 10 / 2 = 5 (left: 2 5)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "2 5"
                }
            },
            "Step 7": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8) -> 2 + 8 = 10 (left: 10) -> 10 / 2 = 5 (left: 2 5) -> 18",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "2 5"
                }
            },
            "Step 8": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8) -> 2 + 8 = 10 (left: 10) -> 10 / 2 = 5 (left: 2 5) -> 9 * 3 = 27",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "11 - 3 = 8 (left: 4 8 8)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8) -> 8 - 2 = 6 (left: 6 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8) -> 8 - 2 = 6 (left: 6 8) -> 6 * 8 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "4 8 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 4": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12) -> 8 * 12 = 96 (left: 96)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12) -> 8 * 12 = 96 (left: 96) -> 96 + 2 = 98",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "2 5"
                }
            },
            "Step 7": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8) -> 2 + 8 = 10 (left: 10) -> 10 / 2 = 5 (left: 2 5) -> 2 + 5 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "2 5"
                }
            },
            "Step 8": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8) -> 2 + 8 = 10 (left: 10) -> 10 / 2 = 5 (left: 2 5) -> 5 - 2 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "2 5"
                }
            }
        },
        "Input": "3 4 8 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "883": {
        "puzzle": "4 4 6 13",
        "Agent 0": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 6 16 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 13"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 6 8 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 6 8 13) -> 8 / 6 = 1.33 (left: 1.33 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 6 8 13) -> 8 / 6 = 1.33 (left: 1.33 13) -> 1.33 - 13 = -11.67 (left: -11.67)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "4 6 "
                }
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 + 6 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 * 2 = 20 (left: 20) ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 * 2 = 20 (left: 20)  -> There are no possible next steps with the input 20.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "8 10 12"
                }
            },
            "Step 7": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 9 - 3 = 6 (left: 6) -> 6 / 2 = 3 (left: 3)  -> There is only one possible next step: 3 + 7 = 10 (left: 8 10 12) -> 8 + 10 = 18 (left: 18 12)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 9 - 3 = 6 (left: 6) -> 6 / 2 = 3 (left: 3)  -> There is only one possible next step: 3 + 7 = 10 (left: 8 10 12) -> 8 + 10 = 18 (left: 18 12) -> 18 / 12 = 1.5 (left: 1.5)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "8 10 12"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 4 = 10 (left: 4 10 13)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 10 13"
                }
            },
            "Step 1": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 13 - 10 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 13 - 10 =  -> 13 - 10 = 3",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 13 - 10 =  -> 13 - 10 = 3 -> 13 + 10 = 23 (left: 23)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "4 6 "
                },
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "4 6 "
                }
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 9 - 3 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 9 - 3 = 6 (left: 6) -> 6 / 2 = 3 (left: 3) ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 9 - 3 = 6 (left: 6) -> 6 / 2 = 3 (left: 3)  -> There is only one possible next step: 3 + 7 = 10 (left: 8 10 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "8 10 12"
                }
            },
            "Step 7": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 9 - 3 = 6 (left: 6) -> 6 / 2 = 3 (left: 3)  -> There is only one possible next step: 3 + 7 = 10 (left: 8 10 12) -> 10 + 12 = 22 (left: 8 22)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 9 - 3 = 6 (left: 6) -> 6 / 2 = 3 (left: 3)  -> There is only one possible next step: 3 + 7 = 10 (left: 8 10 12) -> 10 + 12 = 22 (left: 8 22) -> 22 + 8 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "8 10 12"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 6 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 4) = 24",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 4) = 24 -> Input: 3 3 7 8\nSteps:\n3 * 3 = 9 (left: 7 8 9)\n9 - 7 = 2 (left: 2 8 9)\n2 * 8 = 16 (left: 16 9)\n16 - 9 = 7 (left: 7)\n7 + 7 = 14 (left: 14)\n14 + 8 = 22 (left: 22",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "4 10 13"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "4 6 "
                }
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 12 / 10 = 1.2 (left: 1.2 12",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 12 / 10 = 1.2 (left: 1.2 12 -> 1.2 * 12 = 14.4 (left: 14.4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 12 / 10 = 1.2 (left: 1.2 12 -> 1.2 * 12 = 14.4 (left: 14.4) -> There are no possible next steps for the number 14.4 as it is already a decimal number and not an integer.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "8 10 12"
                }
            },
            "Step 7": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 9 - 3 = 6 (left: 6) -> 6 / 2 = 3 (left: 3)  -> There is only one possible next step: 3 + 7 = 10 (left: 8 10 12) -> 8 - 10 = -2 (left: -2 12)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 9 - 3 = 6 (left: 6) -> 6 / 2 = 3 (left: 3)  -> There is only one possible next step: 3 + 7 = 10 (left: 8 10 12) -> 8 - 10 = -2 (left: -2 12) -> -2 - 12 = -14 (left: -14)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "8 10 12"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 6 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 4 + 6 = 10 (left: 9 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 4 + 6 = 10 (left: 9 10) -> 10 / 9 = 1.1111111111111 (left: 1.1111111111111)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 4 + 6 = 10 (left: 9 10) -> 10 / 9 = 1.1111111111111 (left: 1.1111111111111) -> 1.1111111111111 * 2 = 2.2222222222222",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "4 6 "
                }
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 + 6 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 + 2 = 12 (left: 10 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 + 2 = 12 (left: 10 12) -> 10 + 12 = 22 (left: 22)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "Please provide at least two numbers to continue with the calculations."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "8 10 12"
                }
            },
            "Step 7": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 9 - 3 = 6 (left: 6) -> 6 / 2 = 3 (left: 3)  -> There is only one possible next step: 3 + 7 = 10 (left: 8 10 12) -> 10 * 12 = 120 (left: 8 120)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 9 - 3 = 6 (left: 6) -> 6 / 2 = 3 (left: 3)  -> There is only one possible next step: 3 + 7 = 10 (left: 8 10 12) -> 10 * 12 = 120 (left: 8 120) -> 8 ^ 2 = 64 (left: 64)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "8 10 12"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 + 4 = 8 (left: 6 8 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 13"
                }
            },
            "Step 1": {
                "Step": "6 - 4 = 2 (left: 2 4 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 4 = 2 (left: 2 4 13) -> 13 - 4 = 9 (left: 2 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 4 = 2 (left: 2 4 13) -> 13 - 4 = 9 (left: 2 9) -> 9 / 2 = 4.5 (left: 4.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "4 6 "
                }
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 6 / 4 = 1.5 (left: 1.5) -> 1.5 / 8 = 0.1875 (left: 0.1875)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 6 / 4 = 1.5 (left: 1.5) -> 1.5 / 8 = 0.1875 (left: 0.1875) -> 0.1875 - 2 = -1.8125 (left: -1.8125)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "0.1875 * 2 = 0.375"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "8 10 12"
                }
            },
            "Step 7": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 9 - 3 = 6 (left: 6) -> 6 / 2 = 3 (left: 3)  -> There is only one possible next step: 3 + 7 = 10 (left: 8 10 12) -> 8 * 10 = 80 (left: 80 12)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 9 - 3 = 6 (left: 6) -> 6 / 2 = 3 (left: 3)  -> There is only one possible next step: 3 + 7 = 10 (left: 8 10 12) -> 8 * 10 = 80 (left: 80 12) -> 80 * 12 = 960 (left: 960)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "8 10 12"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "13 - 4 = 9 (left: 4 6 9)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 6 - 4 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 6 - 4 = 2 (left: 2) -> There are no possible next steps with only one number provided.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 6 - 4 = 2 (left: 2) -> There are no possible next steps with only one number provided. -> Please provide at least two numbers to continue with the calculations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "4 6 "
                }
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 10 * 5 = 50 (left: 50 2)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 10 * 5 = 50 (left: 50 2) -> 50 + 2 = 52 (left: 52)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 10 * 5 = 50 (left: 50 2) -> 50 + 2 = 52 (left: 52) -> 5 + 2 = 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "8 10 12"
                }
            },
            "Step 7": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 9 - 3 = 6 (left: 6) -> 6 / 2 = 3 (left: 3)  -> There is only one possible next step: 3 + 7 = 10 (left: 8 10 12) -> 10 - 12 = -2 (left: 8 -2)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 9 - 3 = 6 (left: 6) -> 6 / 2 = 3 (left: 3)  -> There is only one possible next step: 3 + 7 = 10 (left: 8 10 12) -> 10 - 12 = -2 (left: 8 -2) -> 8 + (-2) = 6",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "13 - 4 = 9 (left: 4 6 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 + 6 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> 10 / 10 = 1 (left: 10)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "4 6 "
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "4 6 "
                }
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 6 / 4 = 1.5 (left: 1.5) -> There are no possible next steps for the input 1.5.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 6 / 4 = 1.5 (left: 1.5) -> There are no possible next steps for the input 1.5. -> There are no possible next steps for the input 1.5 as it is not a whole number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "8 10 12"
                }
            },
            "Step 7": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 9 - 3 = 6 (left: 6) -> 6 / 2 = 3 (left: 3)  -> There is only one possible next step: 3 + 7 = 10 (left: 8 10 12) -> 8 + 10 = 18 (left: 18 12)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 9 - 3 = 6 (left: 6) -> 6 / 2 = 3 (left: 3)  -> There is only one possible next step: 3 + 7 = 10 (left: 8 10 12) -> 8 + 10 = 18 (left: 18 12) -> 18 * 12 = 216 (left: 216)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "8 10 12"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "6 + 4 = 10 (left: 4 10 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 10 13"
                }
            },
            "Step 1": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 13 - 4 = 9 (left: 9 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 13 - 4 = 9 (left: 9 10) -> 9 * 10 = 90 (left: 90)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 13 - 4 = 9 (left: 9 10) -> 9 * 10 = 90 (left: 90) -> 90 + 2 = 92 (left: 2)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "4 6 "
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "4 6 "
                }
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 3 + 9 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 3 + 9 = 12 (left: 12) -> 12 + 2 = 14 (left: 14) ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 3 + 9 = 12 (left: 12) -> 12 + 2 = 14 (left: 14)  -> No possible next steps as there is only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "8 10 12"
                }
            },
            "Step 7": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 9 - 3 = 6 (left: 6) -> 6 / 2 = 3 (left: 3)  -> There is only one possible next step: 3 + 7 = 10 (left: 8 10 12) -> 8 * 10 = 80 (left: 80 12)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 9 - 3 = 6 (left: 6) -> 6 / 2 = 3 (left: 3)  -> There is only one possible next step: 3 + 7 = 10 (left: 8 10 12) -> 8 * 10 = 80 (left: 80 12) -> 80 + 12 = 92 (left: 92)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "8 10 12"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 6 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 3 * 9 = 27",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 3 * 9 = 27 -> 9 - 3 = 6 (left: 6 = 27)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 3 * 9 = 27 -> 9 - 3 = 6 (left: 6 = 27) -> 6 + 27 = 33 (left: 27)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "4 6 "
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "4 6 "
                }
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 6 / 4 = 1.5 (left: 1.5) -> 1.5 + 8 = 9.5 (left: 9.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 6 / 4 = 1.5 (left: 1.5) -> 1.5 + 8 = 9.5 (left: 9.5) -> There are no possible next steps with the input 9.5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "8 10 12"
                }
            },
            "Step 7": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 9 - 3 = 6 (left: 6) -> 6 / 2 = 3 (left: 3)  -> There is only one possible next step: 3 + 7 = 10 (left: 8 10 12) -> 10 + 12 = 22 (left: 8 22)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 9 - 3 = 6 (left: 6) -> 6 / 2 = 3 (left: 3)  -> There is only one possible next step: 3 + 7 = 10 (left: 8 10 12) -> 10 + 12 = 22 (left: 8 22) -> 22 + 8 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "8 10 12"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 6 13 16)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 6 / 4 = 1.5 (left: 1.5) -> 1.5 / 8 = 0.1875 (left: 0.1875)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 6 / 4 = 1.5 (left: 1.5) -> 1.5 / 8 = 0.1875 (left: 0.1875) -> 0.1875 * 2 = 0.375",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "4 6 "
                }
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 + 6 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 / 2 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 / 2 = 5 (left: 5) -> 5 * 5 = 25 (left: 25)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "Please provide at least two numbers to continue with the calculations."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "8 10 12"
                }
            },
            "Step 7": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 9 - 3 = 6 (left: 6) -> 6 / 2 = 3 (left: 3)  -> There is only one possible next step: 3 + 7 = 10 (left: 8 10 12) -> 8 + 10 = 18 (left: 12 18)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 9 - 3 = 6 (left: 6) -> 6 / 2 = 3 (left: 3)  -> There is only one possible next step: 3 + 7 = 10 (left: 8 10 12) -> 8 + 10 = 18 (left: 12 18) -> 18 - 12 = 6 (left: 6 18)",
                "Pruning": null
            }
        },
        "Input": "4 4 6 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "884": {
        "puzzle": "4 6 7 10",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 7 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10) -> 9 * 10 = 90 (left: 90)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10) -> 9 * 10 = 90 (left: 90) -> 90 - 2 = 88 (left: 88)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "2 7 10"
                },
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 4": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 7 / 2 = 3.5 (left: 3.5 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 7 / 2 = 3.5 (left: 3.5 10) -> 10 / 3.5 = 2.85714285714 (left: 2.85714285714)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 7 / 2 = 3.5 (left: 3.5 10) -> 10 / 3.5 = 2.85714285714 (left: 2.85714285714) -> 2.85714285714 - 2 = 0.85714285714 (left: 0.85714285714)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "70 70"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "70 70"
                }
            },
            "Step 7": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 * 10 = 140 (left: 140) -> 140 / 2 = 70 (left: 70 70) -> 70 - 70 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "70 70"
                }
            },
            "Step 8": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 * 10 = 140 (left: 140) -> 140 / 2 = 70 (left: 70 70) -> 70 + 70 = 140 (left: 140)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "70 70"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 - 4 = 2 (left: 2 7 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 10 - 7 = 3 (left: 2 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 10 - 7 = 3 (left: 2 3) -> 3 / 2 = 1.5 (left: 1.5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 10 - 7 = 3 (left: 2 3) -> 3 / 2 = 1.5 (left: 1.5) -> There is only one number provided in the input (1.5), so there are no possible next steps to perform any arithmetic operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 4": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 10 - 2 = 8 (left: 8 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 10 - 2 = 8 (left: 8 10) -> Possible next steps:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 10 - 2 = 8 (left: 8 10) -> Possible next steps: -> No input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "70 70"
                }
            },
            "Step 7": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 * 10 = 140 (left: 140) -> 140 / 2 = 70 (left: 70 70) -> 70 * 70 = 4900 (left: 4900)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "70 70"
                }
            },
            "Step 8": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 * 10 = 140 (left: 140) -> 140 / 2 = 70 (left: 70 70) -> 70 + 70 = 140 (left: 140)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "70 70"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 / 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 7 10"
                }
            },
            "Step 1": {
                "Step": "10 - 4 = 6 (left: 6 7 10) -> 6 / 7 = 0.857 (left: 0.857 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 6 7 10) -> 6 / 7 = 0.857 (left: 0.857 10) -> 0.857 * 10 = 8.57 (left: 8.57)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 6 7 10) -> 6 / 7 = 0.857 (left: 0.857 10) -> 0.857 * 10 = 8.57 (left: 8.57) -> 8.57 * 2 = 17.14 (left: 8.57 17.14)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "70 70"
                }
            },
            "Step 4": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 * 10 = 140 (left: 140) -> 140 / 2 = 70 (left: 70 70) -> 70 + 70 = 140 (left: 140)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "70 70"
                }
            },
            "Step 5": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 * 10 = 140 (left: 140) -> 140 / 2 = 70 (left: 70 70) -> 70 + 70 = 140 (left: 140)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "2 7 10"
                }
            },
            "Step 6": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "70 70"
                }
            },
            "Step 7": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 * 10 = 140 (left: 140) -> 140 / 2 = 70 (left: 70 70) -> 70 * 70 = 4900 (left: 4900)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "70 70"
                }
            },
            "Step 8": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 * 10 = 140 (left: 140) -> 140 / 2 = 70 (left: 70 70) -> 70 + 70 = 140 (left: 140)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "70 70"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 7 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 * 10 = 140 (left: 140)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 * 10 = 140 (left: 140) -> 140 / 2 = 70 (left: 70 70)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 4": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (6 - 4) * (7 + 10) = 24",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "70 70"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "70 70"
                }
            },
            "Step 7": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 * 10 = 140 (left: 140) -> 140 / 2 = 70 (left: 70 70) -> 70 - 70 = 0 (left: 0 70) ",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 * 10 = 140 (left: 140) -> 140 / 2 = 70 (left: 70 70) -> 70 - 70 = 0 (left: 0 70)  -> 9 * 3 = 27 (left: 27 27)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "7 - 4 = 3 (left: 3 7 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (6 - 4) * (7 + 10) = 24",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "2 7 10"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 4": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 7 + 2 = 9 (left: 9 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 7 + 2 = 9 (left: 9 10) -> 9 / 10 = 0.9 (left: 0.9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 7 + 2 = 9 (left: 9 10) -> 9 / 10 = 0.9 (left: 0.9) -> 0.9 * 2 = 1.8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "70 70"
                }
            },
            "Step 7": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 * 10 = 140 (left: 140) -> 140 / 2 = 70 (left: 70 70) -> 70 * 70 = 4900 (left: 4900)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "70 70"
                }
            },
            "Step 8": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 * 10 = 140 (left: 140) -> 140 / 2 = 70 (left: 70 70) -> 70 / 70 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "70 70"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "6 + 4 = 10 (left: 7 10)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 10 - 2 = 8 (left: 8 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 10 - 2 = 8 (left: 8 10) -> 8 / 10 = 0.8 (left: 0.8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 10 - 2 = 8 (left: 8 10) -> 8 / 10 = 0.8 (left: 0.8) -> There is only one possible next step for 0.8:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 4": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10) -> 9 + 10 = 19 (left: 19)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10) -> 9 + 10 = 19 (left: 19) -> 19 + 2 = 21",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "70 70"
                }
            },
            "Step 7": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 * 10 = 140 (left: 140) -> 140 / 2 = 70 (left: 70 70) -> 70 + 70 = 140",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 * 10 = 140 (left: 140) -> 140 / 2 = 70 (left: 70 70) -> 70 + 70 = 140 -> 70 / 70 = 1 (left: 1 70 140)",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "10 - 6 = 4 (left: 4 6 7)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 6 7 10"
                }
            },
            "Step 1": {
                "Step": "10 - 4 = 6 (left: 6 7 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 6 7 10) -> 7 + 10 = 17 (left: 6 17)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 6 7 10) -> 7 + 10 = 17 (left: 6 17) -> 6 * 17 = 102 (left: 102)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "70 70"
                }
            },
            "Step 4": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 * 10 = 140 (left: 140) -> 140 / 2 = 70 (left: 70 70) -> 70 * 70 = 4900 (left: 4900)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "8.57 17.14"
                }
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 6 7 10) -> 6 / 7 = 0.857 (left: 0.857 10) -> 0.857 * 10 = 8.57 (left: 8.57) -> 8.57 * 2 = 17.14 (left: 8.57 17.14) -> Possible next steps",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 6 7 10) -> 6 / 7 = 0.857 (left: 0.857 10) -> 0.857 * 10 = 8.57 (left: 8.57) -> 8.57 * 2 = 17.14 (left: 8.57 17.14) -> Possible next steps -> 7 - 8 = -1 (left: -1)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "70 70"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "70 70"
                }
            },
            "Step 7": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 * 10 = 140 (left: 140) -> 140 / 2 = 70 (left: 70 70) -> 70 + 70 = 140 (left: 140)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "70 70"
                }
            },
            "Step 8": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 * 10 = 140 (left: 140) -> 140 / 2 = 70 (left: 70 70) -> 70 - 70 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "70 70"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "10 - 6 = 4 (left: 4 7 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 1": {
                "Step": "10 - 6 = 4 (left: 4 6 7) -> 7 - 4 = 3 (left: 3 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 4 6 7) -> 7 - 4 = 3 (left: 3 6) -> 3 + 6 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 4 6 7) -> 7 - 4 = 3 (left: 3 6) -> 3 + 6 = 9 (left: 9) -> There are no possible next steps with the input of 9.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "8.57 17.14"
                }
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 6 7 10) -> 6 / 7 = 0.857 (left: 0.857 10) -> 0.857 * 10 = 8.57 (left: 8.57) -> 8.57 * 2 = 17.14 (left: 8.57 17.14) -> 8.57 * 17.14 = 147.0498 (left: 147.0498)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "70 70"
                }
            },
            "Step 5": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 * 10 = 140 (left: 140) -> 140 / 2 = 70 (left: 70 70) -> 70 / 70 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "2 7 10"
                }
            },
            "Step 6": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 7 + 2 = 9 (left: 9 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "70 70"
                }
            },
            "Step 7": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 * 10 = 140 (left: 140) -> 140 / 2 = 70 (left: 70 70) -> 70 + 70 = 140 (left: 140)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "70 70"
                }
            },
            "Step 8": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 * 10 = 140 (left: 140) -> 140 / 2 = 70 (left: 70 70) -> 70 + 70 = 140 (left: 140)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "70 70"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 7 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10) -> 10 - 9 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10) -> 10 - 9 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "70 70"
                }
            },
            "Step 4": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 * 10 = 140 (left: 140) -> 140 / 2 = 70 (left: 70 70) -> 70 * 70 = 4900 (left: 4900)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "70 70"
                }
            },
            "Step 5": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 * 10 = 140 (left: 140) -> 140 / 2 = 70 (left: 70 70) -> 70 - 70 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "70 70"
                }
            },
            "Step 6": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 * 10 = 140 (left: 140) -> 140 / 2 = 70 (left: 70 70) -> 70 - 70 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "70 70"
                },
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "70 70"
                }
            },
            "Step 7": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 * 10 = 140 (left: 140) -> 140 / 2 = 70 (left: 70 70) -> 70 * 70 = 4900 (left: 4900)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "70 70"
                }
            },
            "Step 8": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 * 10 = 140 (left: 140) -> 140 / 2 = 70 (left: 70 70) -> 70 * 70 = 4900 (left: 4900)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "70 70"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 7 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 10 - 2 = 8 (left: 8 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 10 - 2 = 8 (left: 8 10) -> 10 / 8 = 1.25 (left: 1.25)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 10 - 2 = 8 (left: 8 10) -> 10 / 8 = 1.25 (left: 1.25) -> 1.25 + 8 = 9.25",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "70 70"
                }
            },
            "Step 4": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 * 10 = 140 (left: 140) -> 140 / 2 = 70 (left: 70 70) -> 70 * 70 = 4900 (left: 4900)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "2 7 10"
                }
            },
            "Step 5": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 10 / 2",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 10 / 2 -> 10 + 2 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "70 70"
                }
            },
            "Step 7": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 * 10 = 140 (left: 140) -> 140 / 2 = 70 (left: 70 70) -> 70 + 70 = 140 (left: 140)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "70 70"
                }
            },
            "Step 8": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 * 10 = 140 (left: 140) -> 140 / 2 = 70 (left: 70 70) -> 70 * 70 = 4900 (left: 4900)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "70 70"
                }
            }
        },
        "Input": "4 6 7 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "885": {
        "puzzle": "6 11 11 12",
        "Agent 0": {
            "Step 0": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 11 11 12"
                }
            },
            "Step 1": {
                "Step": "6 + 11 = 17 (left: 11 11 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 11 = 17 (left: 11 11 12) -> 11 - 11 = 0 (left: 0 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 11 = 17 (left: 11 11 12) -> 11 - 11 = 0 (left: 0 12) -> 12 / 0 = Undefined",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1.83333 11 12"
                }
            },
            "Step 4": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 1.83333",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 1.83333 -> 1.83333 / 2 = 0.916665 (left: 0.916665)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 1.83333 -> 1.83333 / 2 = 0.916665 (left: 0.916665) -> 0.916665 / 2 = 0.4583325 (left: 0.4583325 0.916665)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "0.4583325 0.916665"
                }
            },
            "Step 7": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 1.83333 -> 1.83333 / 2 = 0.916665 (left: 0.916665) -> 0.916665 / 2 = 0.4583325 (left: 0.4583325 0.916665) -> 0.916665 * 0.4583325 = 0.4192062 (left: 0.4192062)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "0.4583325 0.916665"
                }
            },
            "Step 8": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 1.83333 -> 1.83333 / 2 = 0.916665 (left: 0.916665) -> 0.916665 / 2 = 0.4583325 (left: 0.4583325 0.916665) -> 0.916665 - 0.4583325 = 0.4583335",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 6 11 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1.8333 11 12"
                }
            },
            "Step 1": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 11 / 1",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 11 / 1 -> 11 * 1 = 11 (left: 11 1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 11 / 1 -> 11 * 1 = 11 (left: 11 1) -> 11 + 1 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "1.83333 11 12"
                },
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "1.8333 11 12"
                }
            },
            "Step 4": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 1.8333 * 11 = 20 (left: 20 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 1.8333 * 11 = 20 (left: 20 12) -> 20 - 12 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 1.8333 * 11 = 20 (left: 20 12) -> 20 - 12 = 8 (left: 8) -> 8 - 8 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "25 10"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "0.4583325 0.916665"
                }
            },
            "Step 7": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 1.83333 -> 1.83333 / 2 = 0.916665 (left: 0.916665) -> 0.916665 / 2 = 0.4583325 (left: 0.4583325 0.916665) -> 0.4583325 * 0.916665 = 0.419996527 (left: 0.419996527)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "0.4583325 0.916665"
                }
            },
            "Step 8": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 1.83333 -> 1.83333 / 2 = 0.916665 (left: 0.916665) -> 0.916665 / 2 = 0.4583325 (left: 0.4583325 0.916665) -> 0.4583325 * 0.916665 = 0.4199981 (left: 0.4199981)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "0.4583325 0.916665"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "11 / 6 = 1 (left: 1 11 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1.83333 11 12"
                }
            },
            "Step 1": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 11 / 1.83333 = 6 (left: 6 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 11 / 1.83333 = 6 (left: 6 12) -> 12 - 6 = 6 (left: 6 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 11 / 1.83333 = 6 (left: 6 12) -> 12 - 6 = 6 (left: 6 12) -> 12 / 6 = 2 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "2 12"
                }
            },
            "Step 4": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 11 / 1.83333 = 6 (left: 6 12) -> 12 - 6 = 6 (left: 6 12) -> 12 / 6 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "1.8333 11 12"
                }
            },
            "Step 5": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 12 / 1.8333 = 6.5455 (left: 6.5455 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 12 / 1.8333 = 6.5455 (left: 6.5455 12) -> 12 - 6.5455 = 5.4545 (left: 5.4545)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "0.4583325 0.916665"
                }
            },
            "Step 7": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 1.83333 -> 1.83333 / 2 = 0.916665 (left: 0.916665) -> 0.916665 / 2 = 0.4583325 (left: 0.4583325 0.916665) -> 0.4583325 * 0.916665 = 0.4194641078125 (left: 0.4194641078125)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "0.4583325 0.916665"
                }
            },
            "Step 8": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 1.83333 -> 1.83333 / 2 = 0.916665 (left: 0.916665) -> 0.916665 / 2 = 0.4583325 (left: 0.4583325 0.916665) -> 0.916665 - 0.4583325 = 0.4583325 (left",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "11 + 6 = 17 (left: 11 12 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1.8333 11 12"
                }
            },
            "Step 1": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 11 - 1.8333 = 9.1667 (left: 9.1667 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 11 - 1.8333 = 9.1667 (left: 9.1667 12) -> 9.1667 - 12 = -2.8333 (left: -2.8333)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 11 - 1.8333 = 9.1667 (left: 9.1667 12) -> 9.1667 - 12 = -2.8333 (left: -2.8333) -> There are no possible next steps with the input of -2.8333.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "25 10"
                }
            },
            "Step 4": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 11 - 1.8333 = 9.1667 (left: 9.1667 12) -> Input: 5 5 10 -> 5 * 5 = 25 (left: 25 10) -> 25 * 10 = 250 (left: 250)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "2 12"
                }
            },
            "Step 5": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 11 / 1.83333 = 6 (left: 6 12) -> 12 - 6 = 6 (left: 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "1.8333 11 12"
                }
            },
            "Step 6": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 1.8333 + 11 = 12.8333 (left:",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "0.4583325 0.916665"
                }
            },
            "Step 7": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 1.83333 -> 1.83333 / 2 = 0.916665 (left: 0.916665) -> 0.916665 / 2 = 0.4583325 (left: 0.4583325 0.916665) -> 0.4583325 * 0.916665 = 0.419997 (left: 0.419997)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "0.4583325 0.916665"
                }
            },
            "Step 8": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 1.83333 -> 1.83333 / 2 = 0.916665 (left: 0.916665) -> 0.916665 / 2 = 0.4583325 (left: 0.4583325 0.916665) -> 0.4583325 + 0.916665 = 1.3749975 (left: 1.3749975)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "0.4583325 0.916665"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "11 / 6 = 1 (left: 1 11 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1.83333 11 12"
                }
            },
            "Step 1": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 12 / 1.83333 = 6.54545 (left: 6.54545 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 12 / 1.83333 = 6.54545 (left: 6.54545 12) -> 6.54545 * 12 = 78.5454 (left: 78.5454)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 12 / 1.83333 = 6.54545 (left: 6.54545 12) -> 6.54545 * 12 = 78.5454 (left: 78.5454) -> There are no possible next steps with the input 78.5454 as it is a single number.",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "25 10"
                }
            },
            "Step 4": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 11 - 1.8333 = 9.1667 (left: 9.1667 12) -> Input: 5 5 10 -> 5 * 5 = 25 (left: 25 10) -> 25 * 10 = 250 (left: 10 250)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 11 - 1.8333 = 9.1667 (left: 9.1667 12) -> Input: 5 5 10 -> 5 * 5 = 25 (left: 25 10) -> 25 * 10 = 250 (left: 10 250) -> 250 - 10 = 240 (left: 240)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "1.8333 11 12"
                }
            },
            "Step 6": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 11 - 1.8333 = 9.1667 (left: 9.1667 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "0.4583325 0.916665"
                }
            },
            "Step 7": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 1.83333 -> 1.83333 / 2 = 0.916665 (left: 0.916665) -> 0.916665 / 2 = 0.4583325 (left: 0.4583325 0.916665) -> 0.916665 / 0.4583325 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "0.4583325 0.916665"
                }
            },
            "Step 8": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 1.83333 -> 1.83333 / 2 = 0.916665 (left: 0.916665) -> 0.916665 / 2 = 0.4583325 (left: 0.4583325 0.916665) -> 0.916665 / 0.4583325 = 1.999995 (left: 1.999995)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "0.4583325 0.916665"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1.8333 11 12"
                }
            },
            "Step 1": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 11 - 1.8333 = 9.1667 (left: 9.1667 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 11 - 1.8333 = 9.1667 (left: 9.1667 12) -> Input: 5 5 10",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 11 - 1.8333 = 9.1667 (left: 9.1667 12) -> Input: 5 5 10 -> 5 * 5 = 25 (left: 25 10)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "2 12"
                }
            },
            "Step 4": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 11 / 1.83333 = 6 (left: 6 12) -> 12 - 6 = 6 (left: 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "1.8333 11 12"
                }
            },
            "Step 5": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 1.8333 + 11 = 12.8333 (left: 12 12.8333)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 1.8333 + 11 = 12.8333 (left: 12 12.8333) -> 12 / 12.8333 = 0.9358 (left: 0.9358)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "0.4583325 0.916665"
                }
            },
            "Step 7": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 1.83333 -> 1.83333 / 2 = 0.916665 (left: 0.916665) -> 0.916665 / 2 = 0.4583325 (left: 0.4583325 0.916665) -> 0.916665 * 0.4583325 = 0.419999993754125 (left: 0.419999993754125)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "0.4583325 0.916665"
                }
            },
            "Step 8": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 1.83333 -> 1.83333 / 2 = 0.916665 (left: 0.916665) -> 0.916665 / 2 = 0.4583325 (left: 0.4583325 0.916665) -> 0.916665 / 0.458332",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "11 - 6 = 5 (left: 5 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 11 12"
                }
            },
            "Step 1": {
                "Step": "12 - 6 = 6 (left: 6 11 12) -> 6 + 11 = 17 (left: 12 17)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 6 = 6 (left: 6 11 12) -> 6 + 11 = 17 (left: 12 17) -> 17 / 12 = 1.4166666666666667 (left: 1.42 17)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 6 = 6 (left: 6 11 12) -> 6 + 11 = 17 (left: 12 17) -> 17 / 12 = 1.4166666666666667 (left: 1.42 17) -> 1.42 * 17 = 24.14 (left: 24.14)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "1.8333 11 12"
                },
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "2 12"
                }
            },
            "Step 4": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 11 / 1.83333 = 6 (left: 6 12) -> 12 - 6 = 6 (left: 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "1.8333 11 12"
                }
            },
            "Step 5": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 11 - 1.8333 = 9.1667 (left: 9.1667 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 11 - 1.8333 = 9.1667 (left: 9.1667 12) -> 9.1667 * 12 = 110 (left: 110)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "1.8333 + 11 = 12.8333 (left:"
                }
            },
            "Step 7": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 1.8333 + 11 = 12.8333 (left: -> 11 - 1.8333 = 9.1667 (left: 1.8333 9.1667)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 1.8333 + 11 = 12.8333 (left: -> 11 - 1.8333 = 9.1667 (left: 1.8333 9.1667) -> Input: 3 5 7 9",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "11 - 6 = 5 (left: 5 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1.83333 11 12"
                }
            },
            "Step 1": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 12 - 1.83333",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 12 - 1.83333 -> 12 - 1.83333 = 10.16667",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 12 - 1.83333 -> 12 - 1.83333 = 10.16667 -> 12 / 1.83333 = 6.54545 (left: 6.54545 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "25 10"
                }
            },
            "Step 4": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 11 - 1.8333 = 9.1667 (left: 9.1667 12) -> Input: 5 5 10 -> 5 * 5 = 25 (left: 25 10) -> 25 * 10 = 250 (left: 250)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "25 10"
                }
            },
            "Step 5": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 11 - 1.8333 = 9.1667 (left: 9.1667 12) -> Input: 5 5 10 -> 5 * 5 = 25 (left: 25 10) -> 25 / 10 = 2.5 (left: 2.5)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "2 12"
                }
            },
            "Step 6": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 11 / 1.83333 = 6 (left: 6 12) -> 12 - 6 = 6 (left: 6 12) -> 12 / 6 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "0.4583325 0.916665"
                }
            },
            "Step 7": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 1.83333 -> 1.83333 / 2 = 0.916665 (left: 0.916665) -> 0.916665 / 2 = 0.4583325 (left: 0.4583325 0.916665) -> 0.916665 - 0.4583325 = 0.4583325 (left: 0.",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "0.4583325 0.916665"
                }
            },
            "Step 8": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 1.83333 -> 1.83333 / 2 = 0.916665 (left: 0.916665) -> 0.916665 / 2 = 0.4583325 (left: 0.4583325 0.916665) -> 0.916665",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "0.4583325 0.916665"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "11 - 6 = 5 (left: 5 11 12)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 11 12"
                }
            },
            "Step 1": {
                "Step": "12 - 6 = 6 (left: 6 11 12) -> 11 * 6 = 66 (left: 66 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 6 = 6 (left: 6 11 12) -> 11 * 6 = 66 (left: 66 12) -> 66 + 12 = 78 (left: 78)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 6 = 6 (left: 6 11 12) -> 11 * 6 = 66 (left: 66 12) -> 66 + 12 = 78 (left: 78) -> 78 - 7 = 71 (left: 71)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "1.8333 11 12"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "2 12"
                }
            },
            "Step 4": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 11 / 1.83333 = 6 (left: 6 12) -> 12 - 6 = 6 (left: 6 12) -> 12 / 6 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "1.8333 11 12"
                }
            },
            "Step 5": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 1.8333 + 11 = 12.8333 (left: 12 12.8333)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 1.8333 + 11 = 12.8333 (left: 12 12.8333) -> 12 / 12.8333 = 0.9355 (left: 0.9355)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "0.4583325 0.916665"
                }
            },
            "Step 7": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 1.83333 -> 1.83333 / 2 = 0.916665 (left: 0.916665) -> 0.916665 / 2 = 0.4583325 (left: 0.4583325 0.916665) -> 0.916665 - 0.4583325 = 0.458",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 1.83333 -> 1.83333 / 2 = 0.916665 (left: 0.916665) -> 0.916665 / 2 = 0.4583325 (left: 0.4583325 0.916665) -> 0.916665 - 0.4583325 = 0.458 -> 0.916665 / 2 = 0.4583325 (left: 0.4583325 0.4583325)",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "11 / 6 = 1.83 (rounded to 2) (left: 2 11 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 11 12"
                }
            },
            "Step 1": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 11 * 1 = 11 (left: 11 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 11 * 1 = 11 (left: 11 12) -> 11 * 12 = 132 (left: 132)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 11 * 1 = 11 (left: 11 12) -> 11 * 12 = 132 (left: 132) -> 1 + 3 + 2 = 6 (left: 6 2)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "1.8333 11 12"
                }
            },
            "Step 4": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 1.8333 * 11 = 20.1663 (left: 12 20.1663)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 1.8333 * 11 = 20.1663 (left: 12 20.1663) -> 12 * 20.1663 = 241.9956 (left: 241.9956)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 1.8333 * 11 = 20.1663 (left: 12 20.1663) -> 12 * 20.1663 = 241.9956 (left: 241.9956) -> 2 + 4 = 6.9956 (left: 6.9956 1 2)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "0.4583325 0.916665"
                }
            },
            "Step 7": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 1.83333 -> 1.83333 / 2 = 0.916665 (left: 0.916665) -> 0.916665 / 2 = 0.4583325 (left: 0.4583325 0.916665) -> 0.916665 / 0.4583325 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "0.4583325 0.916665"
                }
            },
            "Step 8": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 1.83333 -> 1.83333 / 2 = 0.916665 (left: 0.916665) -> 0.916665 / 2 = 0.4583325 (left: 0.4583325 0.916665) -> 0.916665 / 0.4583325 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "6.9956 1 2"
                }
            }
        },
        "Input": "6 11 11 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "886": {
        "puzzle": "3 6 9 11",
        "Agent 0": {
            "Step 0": {
                "Step": "6 / 3 = 2 (left: 2 9 11)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 6 9 11"
                }
            },
            "Step 1": {
                "Step": "11 - 9 = 2 (left: 3 6 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 9 = 2 (left: 3 6  -> 6 - 3 = 3 (left: 3 6)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 9 = 2 (left: 3 6  -> 6 - 3 = 3 (left: 3 6) -> 3 + 6 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "3 6 "
                }
            },
            "Step 4": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 3 + 6 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 3 + 6 = 9 (left: 9) -> 8 - 9 = -1 (left: -1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 3 + 6 = 9 (left: 9) -> 8 - 9 = -1 (left: -1) -> There are no possible next steps as the input is invalid.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "1 + 1 = 2"
                }
            },
            "Step 7": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 6 / 3 = 2 (left: 2) -> 2 / 2 = 1 (left: 1) -> 1 + 1 = 2 -> 1 + 2 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "No possible next steps with just one number."
                }
            },
            "Step 8": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 6 / 3 = 2 (left: 2) -> No possible next steps with just one number. -> No possible next steps with just one number. -> No possible next steps with just one number.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 9 9 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 6 "
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 6 / 3 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 6 / 3 = 2 (left: 2) -> There are no possible next steps with just one number.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 6 / 3 = 2 (left: 2) -> There are no possible next steps with just one number. -> There are no possible next steps with just one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "3 6 "
                }
            },
            "Step 4": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 3 + 6 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 3 + 6 = 9 (left: 9) -> 9 * 9 = 81 (left: 81)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 3 + 6 = 9 (left: 9) -> 9 * 9 = 81 (left: 81) -> 81 / 2 = 40.5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps as the input is invalid."
                }
            },
            "Step 7": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 3 + 6 = 9 (left: 9) -> 8 - 9 = -1 (left: -1) -> There are no possible next steps as the input is invalid. -> There are no possible next steps as the input is invalid.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 3 + 6 = 9 (left: 9) -> 8 - 9 = -1 (left: -1) -> There are no possible next steps as the input is invalid. -> There are no possible next steps as the input is invalid. -> There are no possible next steps as the input is invalid.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 / 3 = 2 (left: 2 9 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 6 9 11"
                }
            },
            "Step 1": {
                "Step": "9 - 3 = 6 (left: 6 6 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 3 = 6 (left: 6 6  -> 6 / 6 = 1 (left: 1) ",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 3 = 6 (left: 6 6  -> 6 / 6 = 1 (left: 1)  -> 1 + 1 = 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "3 6 "
                }
            },
            "Step 4": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 3 + 6 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 3 + 6 = 9 (left: 9) -> 9 / 9 =",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 3 + 6 = 9 (left: 9) -> 9 / 9 = -> 9 / 9 = 1",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "There are no possible next steps with the input 3."
                }
            },
            "Step 7": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 6 - 3 = 3 (left: 3) -> There are no possible next steps with the input 3. -> There are no possible next steps with the input 3. -> There are no possible next steps with the input 3.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 6 - 3 = 3 (left: 3) -> There are no possible next steps with the input 3. -> There are no possible next steps with the input 3. -> There are no possible next steps with the input 3. -> There are no possible next steps with the input 3.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 3 = 6 (left: 6 9 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 9 11"
                }
            },
            "Step 1": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 11 - 2 = 9 (left: 9 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 11 - 2 = 9 (left: 9 11) -> 9 + 11 = 20 (left: 20)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 11 - 2 = 9 (left: 9 11) -> 9 + 11 = 20 (left: 20) -> There are no possible next steps with the input 20.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "3 6 "
                }
            },
            "Step 4": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 3 * 6 = 18 (left: 18)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 3 * 6 = 18 (left: 18) -> There are no possible next steps with the input of 18.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 3 * 6 = 18 (left: 18) -> There are no possible next steps with the input of 18. -> There are no possible next steps with the input of 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "9 / 9 = 1"
                }
            },
            "Step 7": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 3 + 6 = 9 (left: 9) -> 9 / 9 = -> 9 / 9 = 1 -> 9 + 9 = 18 (left: 9 1 18)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 3 + 6 = 9 (left: 9) -> 9 / 9 = -> 9 / 9 = 1 -> 9 + 9 = 18 (left: 9 1 18) -> 9 + 1 = 10 (left: 10 18)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "11 - 3 = 8 (left: 6 8 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 6 "
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 6 / 3 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 6 / 3 = 2 (left: 2) -> 2 / 2 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 6 / 3 = 2 (left: 2) -> 2 / 2 = 1 (left: 1) -> There is only one number inputted, so there are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "3 6 "
                }
            },
            "Step 4": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 6 - 3 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 6 - 3 = 3 (left: 3) -> There are no possible next steps with just the number 3. You would need at least one more number to perform an operation.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 6 - 3 = 3 (left: 3) -> There are no possible next steps with just the number 3. You would need at least one more number to perform an operation. -> 3 / 3 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "There are no possible next steps with the input 20."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "There are no possible next steps with the input 1.5."
                }
            },
            "Step 7": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 6 - 3 = 3 (left: 3) -> 3 / 2 = 1.5 (left: 1.5) -> There are no possible next steps with the input 1.5. -> There are no possible next steps with the input 1.5.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 6 - 3 = 3 (left: 3) -> 3 / 2 = 1.5 (left: 1.5) -> There are no possible next steps with the input 1.5. -> There are no possible next steps with the input 1.5. -> There are no possible next steps with the input 1.5.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "11 - 3 = 8 (left: 3 6 ",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 9 11"
                }
            },
            "Step 1": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 2 + 9 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 2 + 9 = 11 (left: 11) -> There are no possible next steps with the input 11.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 2 + 9 = 11 (left: 11) -> There are no possible next steps with the input 11. -> None",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "3 6 "
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "3 6 "
                }
            },
            "Step 4": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 6 / 3 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 6 / 3 = 2 (left: 2) -> No possible next steps with just one number.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 6 / 3 = 2 (left: 2) -> No possible next steps with just one number. -> No possible next steps with just one number.",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "No possible next steps with just one number."
                }
            },
            "Step 7": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 6 / 3 = 2 (left: 2) -> No possible next steps with just one number. -> No possible next steps with just one number. -> None",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "There are no possible next steps with the input 20."
                }
            },
            "Step 8": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 11 - 2 = 9 (left: 9 11) -> 9 + 11 = 20 (left: 20) -> There are no possible next steps with the input 20. -> 20 + 14 = 34 (left: 34)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "There are no possible next steps with the input 1.5."
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "9 - 3 = 6 (left: 6 9 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 8 11"
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 6 8 11) -> 8 + 6 = 14 (left: 11 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 6 8 11) -> 8 + 6 = 14 (left: 11 14) -> 11 / 14 = 0.7857142857142857 (left: 0.7857142857142857)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 6 8 11) -> 8 + 6 = 14 (left: 11 14) -> 11 / 14 = 0.7857142857142857 (left: 0.7857142857142857) -> 0.7857142857142857 * 2 = 1.5714285714285714",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "3 6 "
                }
            },
            "Step 4": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 6 - 3 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 6 - 3 = 3 (left: 3) -> There is only one possible next step:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 6 - 3 = 3 (left: 3) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "There are no possible next steps with the input 3."
                }
            },
            "Step 7": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 6 - 3 = 3 (left: 3) -> There are no possible next steps with the input 3. -> There are no possible next steps with the input 3. -> There are no possible next steps with the input 3.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 6 - 3 = 3 (left: 3) -> There are no possible next steps with the input 3. -> There are no possible next steps with the input 3. -> There are no possible next steps with the input 3. -> There are no possible next steps with the input 3.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "11 - 3 = 8 (left: 3 9 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 6 "
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 6 - 3 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 6 - 3 = 3 (left: 3) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 6 - 3 = 3 (left: 3) -> 8 - 3 = 5 (left: 5) -> There are no possible next steps for this input of 5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "3 6 "
                }
            },
            "Step 4": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 6 - 3 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 6 - 3 = 3 (left: 3) -> 3 / 2 = 1.5 (left: 1.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 6 - 3 = 3 (left: 3) -> 3 / 2 = 1.5 (left: 1.5) -> There are no possible next steps with the input 1.5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "1 + 1 = 2"
                }
            },
            "Step 7": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 6 / 3 = 2 (left: 2) -> 2 / 2 = 1 (left: 1) -> 1 + 1 = 2 -> 1 * 1 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "There are no possible next steps with the input 1.5."
                }
            },
            "Step 8": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 6 - 3 = 3 (left: 3) -> 3 / 2 = 1.5 (left: 1.5) -> There are no possible next steps with the input 1.5. -> There are no possible next steps with the input 1.5.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "3 + 6 = 9 (left: 9 9 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 6 "
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 3 6  -> Input: 5 10",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 3 6  -> Input: 5 10 -> 10 - 5 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 3 6  -> Input: 5 10 -> 10 - 5 = 5 (left: 5) -> There are no possible next steps with the input of 5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "3 6 "
                }
            },
            "Step 4": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 6 / 3 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 6 / 3 = 2 (left: 2) -> 2 / 2 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 6 / 3 = 2 (left: 2) -> 2 / 2 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps as the input is invalid."
                }
            },
            "Step 7": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 3 + 6 = 9 (left: 9) -> 8 - 9 = -1 (left: -1) -> There are no possible next steps as the input is invalid. -> There are no possible next steps as the input is invalid.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 3 + 6 = 9 (left: 9) -> 8 - 9 = -1 (left: -1) -> There are no possible next steps as the input is invalid. -> There are no possible next steps as the input is invalid. -> There are no possible next steps as the input is invalid.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "9 - 3 = 6 (left: 6 9 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "6 9 11"
                }
            },
            "Step 1": {
                "Step": "9 - 3 = 6 (left: 6 9 11) -> 11 - 6 = 5 (left: 5 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 3 = 6 (left: 6 9 11) -> 11 - 6 = 5 (left: 5 9) -> 5 * 9 = 45 (left: 45)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 3 = 6 (left: 6 9 11) -> 11 - 6 = 5 (left: 5 9) -> 5 * 9 = 45 (left: 45) -> There are no possible next steps for the input of 45.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "3 6 "
                }
            },
            "Step 4": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 6 - 3 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 6 - 3 = 3 (left: 3) -> There are no possible next steps with the input 3.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 6 - 3 = 3 (left: 3) -> There are no possible next steps with the input 3. -> There are no possible next steps with the input 3.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "There are no possible next steps with the input 20."
                }
            },
            "Step 7": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 11 - 2 = 9 (left: 9 11) -> 9 + 11 = 20 (left: 20) -> There are no possible next steps with the input 20. -> There are no possible next steps with the input 20.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 11 - 2 = 9 (left: 9 11) -> 9 + 11 = 20 (left: 20) -> There are no possible next steps with the input 20. -> There are no possible next steps with the input 20. -> There are no possible next steps with the input 20.",
                "Pruning": null
            }
        },
        "Input": "3 6 9 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "887": {
        "puzzle": "5 7 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "9 + 7 = 16 (left: 5 16 ",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 7 9 13"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 4 5 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 4 5 7) -> 5 * 7 = 35 (left: 4 35)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 4 5 7) -> 5 * 7 = 35 (left: 4 35) -> 30"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 + 7 = 12 (left: 9 12 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 7 9 13"
                }
            },
            "Step 1": {
                "Step": "7 - 5 = 2 (left: 2 9 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 5 = 2 (left: 2 9 13) -> 13 - 9 = 4 (left: 2 4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 5 = 2 (left: 2 9 13) -> 13 - 9 = 4 (left: 2 4) -> 2 * 4 = 8 (left: 8)"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 - 7 = 2 (left: 5 2 13)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 1": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 8 / 9 = 0.8888888888888888 (left: ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 8 / 9 = 0.8888888888888888 (left:  -> It seems like you did not provide an input for the calculation. Could you please provide the numbers you would like to use for the next step?",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 8 / 9 = 0.8888888888888888 (left:  -> It seems like you did not provide an input for the calculation. Could you please provide the numbers you would like to use for the next step? -> - Add two numbers together"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 + 7 = 12 (left: 9 12 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "9 12 13"
                }
            },
            "Step 1": {
                "Step": "5 + 7 = 12 (left: 9 12 13) -> 12 / 9 = 4/3 (left: 4/3 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 7 = 12 (left: 9 12 13) -> 12 / 9 = 4/3 (left: 4/3 13) -> 13 - 4/3 = 35/3 (left: 35/3)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 7 = 12 (left: 9 12 13) -> 12 / 9 = 4/3 (left: 4/3 13) -> 13 - 4/3 = 35/3 (left: 35/3) -> 35 / 3 = 11.67"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 - 5 = 8 (left: 7 8 9)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 1": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 9 / 8 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 9 / 8 =  -> 1. 9 / 8 = 1.125",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 9 / 8 =  -> 1. 9 / 8 = 1.125 -> 1.125 - 9 = -7.875 (left:"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "7 + 9 = 16 (left: 5 16 13)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 1": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 7 + 8 = 15 (left: 9 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 7 + 8 = 15 (left: 9 15) -> 9 * 15 = 135 (left: 135)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 7 + 8 = 15 (left: 9 15) -> 9 * 15 = 135 (left: 135) -> 13 + 5 = 18 (left: 18)"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "7 / 5 = 1.4 (left: 1.4 9 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 1": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 9 - 7 = 2 (left: 2 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 9 - 7 = 2 (left: 2 8) -> 8 / 2 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 9 - 7 = 2 (left: 2 8) -> 8 / 2 = 4 (left: 4) -> 4 + 4 = 8 (left: 8)"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "7 - 5 = 2 (left: 2 9 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "9 12 13"
                }
            },
            "Step 1": {
                "Step": "5 + 7 = 12 (left: 9 12 13) -> 9 + 12 = 21 (left: 13 21)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 7 = 12 (left: 9 12 13) -> 9 + 12 = 21 (left: 13 21) -> 21 - 13 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 7 = 12 (left: 9 12 13) -> 9 + 12 = 21 (left: 13 21) -> 21 - 13 = 8 (left: 8) -> There are no possible next steps with just the number 8."
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "5 + 7 = 12 (left: 9 12 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 1": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> 17 + 7 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> 17 + 7 = 24 (left: 24) -> Answer: ((13 - 5) + 9) + 7 = 24"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "9 - 5 = 4 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 1": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> 17 / 7 = 2.4285714285714284 (left: 2.4285714285714284)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> 17 / 7 = 2.4285714285714284 (left: 2.4285714285714284) -> 2.4285714285714284 + 8 = 10.428571428571428"
            }
        },
        "Input": "5 7 9 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            }
        ]
    },
    "888": {
        "puzzle": "2 4 12 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 / 4 = 3 (left: 2 3 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 12 = 72 (left: 4 72)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 12 = 72 (left: 4 72) -> 72 - 4 = 68 (left: 68 72)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 12 = 72 (left: 4 72) -> 72 - 4 = 68 (left: 68 72) -> 68 + 72 = 140",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 4": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 + 6 = 10 (left: 10 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 + 6 = 10 (left: 10 12) -> 10 - 12 = -2 (left: -2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 + 6 = 10 (left: 10 12) -> 10 - 12 = -2 (left: -2) -> There are no possible next steps with the input of -2.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "16 8"
                }
            },
            "Step 7": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 * 12 = 288 (left: 288) -> 2 * 8 = 16 (left: 16 8) -> 16 + 8 = 24 (left: 8 24)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 * 12 = 288 (left: 288) -> 2 * 8 = 16 (left: 16 8) -> 16 + 8 = 24 (left: 8 24) -> 24 - 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "12 * 2 = 24"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 6 12 12)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 12 12"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 - 6 = 6 (left: 6 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 - 6 = 6 (left: 6 12) -> 6 * 2 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 - 6 = 6 (left: 6 12) -> 6 * 2 = 12 (left: 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "4 6 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 4": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 / 6 = 0.6666666666666666 (left: 0.666666666666666",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 / 6 = 0.6666666666666666 (left: 0.666666666666666 -> There seems to be an error in the input provided. Can you please provide a valid input for me to generate possible next steps?",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 / 6 = 0.6666666666666666 (left: 0.666666666666666 -> There seems to be an error in the input provided. Can you please provide a valid input for me to generate possible next steps? -> I'm sorry, but without a valid input, I am unable to generate possible next steps. Please provide a valid input for me to assist you further.",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "16 8"
                }
            },
            "Step 7": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 * 12 = 288 (left: 288) -> 2 * 8 = 16 (left: 16 8) -> 16 / 8 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "16 8"
                }
            },
            "Step 8": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 * 12 = 288 (left: 288) -> 2 * 8 = 16 (left: 16 8) -> 16 * 8 = 128 (left: 8 128)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 2 = 10 (left: 4 10 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 / 6 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 / 6 =  -> 6 - 4 = 2 (left: )",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 / 6 =  -> 6 - 4 = 2 (left: ) -> It seems like you forgot to input a sequence of numbers. Please provide the numbers so we can generate possible next steps for you.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 4": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 * 6 = 24 (left: 24 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 * 6 = 24 (left: 24 12) -> 24 - 12 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 * 6 = 24 (left: 24 12) -> 24 - 12 = 12 (left: 12) -> 12 - 8 = 4 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "16 8"
                }
            },
            "Step 7": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 * 12 = 288 (left: 288) -> 2 * 8 = 16 (left: 16 8) -> 8 * 16 = 128 (left: 8 128)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 * 12 = 288 (left: 288) -> 2 * 8 = 16 (left: 16 8) -> 8 * 16 = 128 (left: 8 128) -> 8 + 128 = 136 (left: 8 136)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 * 3 = 12 (left: 2 12 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 * 6 = 24 (left: 24 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 * 6 = 24 (left: 24 12) -> 24 / 2 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 * 6 = 24 (left: 24 12) -> 24 / 2 = 12 (left: 12) -> 12 + 2 = 14 (left: 8 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 4": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 12 - 4 = 8 (left: 8 6)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 12 - 4 = 8 (left: 8 6) -> 8 * 6 = 48 (left: 48)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 12 - 4 = 8 (left: 8 6) -> 8 * 6 = 48 (left: 48) -> 48 / 2 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "68 + 72 = 140"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "16 8"
                }
            },
            "Step 7": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 * 12 = 288 (left: 288) -> 2 * 8 = 16 (left: 16 8) -> 16 / 8 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "16 8"
                }
            },
            "Step 8": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 * 12 = 288 (left: 288) -> 2 * 8 = 16 (left: 16 8) -> 16 - 8 = 8 (left: 8 8)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 / 2 = 6 (left: 4 6 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 * 6 = 24 (left: 24 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 * 6 = 24 (left: 24 12) -> 24 / 12 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 * 6 = 24 (left: 24 12) -> 24 / 12 = 2 (left: 2) -> No possible next steps with only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 4": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 + 6 = 10 (left: 10 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 + 6 = 10 (left: 10 12) -> 10 - 12 = -2 (left: -2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 + 6 = 10 (left: 10 12) -> 10 - 12 = -2 (left: -2) -> -2 * 8 = -16 (left: -16)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "None, as there is only one number given."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "16 8"
                }
            },
            "Step 7": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 * 12 = 288 (left: 288) -> 2 * 8 = 16 (left: 16 8) -> 16 + 8 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "16 8"
                }
            },
            "Step 8": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 * 12 = 288 (left: 288) -> 2 * 8 = 16 (left: 16 8) -> 16 * 8 = 128 (left: 128)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "12 * 2 = 24"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "12 / 4 = 3 (left: 2 3 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 12 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 4 6 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 4 6  -> 4 + 6 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 + 10 = 20",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 4": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 12 - 4 = 8 (left: 8 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 12 - 4 = 8 (left: 8 12) -> 8 - 12 = -4 (left: -4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 12 - 4 = 8 (left: 8 12) -> 8 - 12 = -4 (left: -4) -> There are no possible next steps with the input of -4.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "16 8"
                }
            },
            "Step 7": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 * 12 = 288 (left: 288) -> 2 * 8 = 16 (left: 16 8) -> 16 + 8 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "16 8"
                }
            },
            "Step 8": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 * 12 = 288 (left: 288) -> 2 * 8 = 16 (left: 16 8) -> 16 * 8 = 128 (left: 8 128)",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "12 / 2 = 6 (left: 4 6 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 + 6 = 10 (left: 10 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 + 6 = 10 (left: 10 12) -> 10 / 12 = 0.8333333333333334 (left: 0.8333333333333334)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 + 6 = 10 (left: 10 12) -> 10 / 12 = 0.8333333333333334 (left: 0.8333333333333334) -> There are no possible next steps with the input of 0.8333333333333334 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 4": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 * 6 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (12 / 2) = 24",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (12 / 2) = 24 -> Input: 3 5 6 8\nSteps:\n5 + 8 = 13 (left: 3 6 13)\n6 + 3 = 9 (left: 9 13)\n13 - 9 = 4 (left: 4 24)\n4 * 6 = 24 (left: 24)\nAnswer: ((5 + 8) * (6 + 3)) - 9 = 24",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "10 + 10 = 20"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "16 8"
                }
            },
            "Step 7": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 * 12 = 288 (left: 288) -> 2 * 8 = 16 (left: 16 8) -> 16 + 8 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "16 8"
                }
            },
            "Step 8": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 * 12 = 288 (left: 288) -> 2 * 8 = 16 (left: 16 8) -> 16 + 8 = 24 (left: 8 24)",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "12 - 4 = 8 (left: 2 8 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> There is only one possible next step:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 4": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 * 6 = 24 (left: 24 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 * 6 = 24 (left: 24 12) -> 24 - 12 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 * 6 = 24 (left: 24 12) -> 24 - 12 = 12 (left: 12) -> 12 * 2 = 24",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "16 8"
                }
            },
            "Step 7": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 * 12 = 288 (left: 288) -> 2 * 8 = 16 (left: 16 8) -> 16 - 8 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "16 8"
                }
            },
            "Step 8": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 * 12 = 288 (left: 288) -> 2 * 8 = 16 (left: 16 8) -> 16 + 8 = 24 (left: 8 24)",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "12 - 2 = 10 (left: 4 10 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 12 12"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 * 6 = 72 (left: 72)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 * 6 = 72 (left: 72) -> 7 + 2 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 * 6 = 72 (left: 72) -> 7 + 2 = 9 (left: 9) -> There are no possible next steps with just the number 9.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 4": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 * 12 = 288 (left: 288)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 * 12 = 288 (left: 288) -> 2 * 8 = 16 (left: 16 8)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "16 8"
                }
            },
            "Step 7": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 * 12 = 288 (left: 288) -> 2 * 8 = 16 (left: 16 8) -> 16 + 8 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "16 8"
                }
            },
            "Step 8": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 * 12 = 288 (left: 288) -> 2 * 8 = 16 (left: 16 8) -> 16 / 8 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "16 8"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "12 / 4 = 3 (left: 2 3 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 / 12 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 / 12 = 2 (left: 2) -> None, as there is only one number given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 4": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 + 6 = 10 (left: 10 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 + 6 = 10 (left: 10 12) -> 10 * 12 = 120 (left: 120)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 + 6 = 10 (left: 10 12) -> 10 * 12 = 120 (left: 120) -> 120 / 6 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "8 14"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "16 8"
                }
            },
            "Step 7": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 * 12 = 288 (left: 288) -> 2 * 8 = 16 (left: 16 8) -> 16 / 8 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "12 * 2 = 24"
                }
            },
            "Step 8": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 * 6 = 24 (left: 24 12) -> 24 - 12 = 12 (left: 12) -> 12 * 2 = 24 -> 12 - 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "16 8"
                }
            }
        },
        "Input": "2 4 12 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "889": {
        "puzzle": "4 9 11 12",
        "Agent 0": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 11 12 36)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23) -> 23 - 13 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23) -> 23 - 13 = 10 (left: 10) -> 10 / 2 = 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "2.25 11 12"
                }
            },
            "Step 4": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 11 / 2.25 = 4.88888888889 (left: 4.88888888889 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 11 / 2.25 = 4.88888888889 (left: 4.88888888889 12) -> 4.88888888889 + 12 = 16.888888888",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 11 / 2.25 = 4.88888888889 (left: 4.88888888889 12) -> 4.88888888889 + 12 = 16.888888888 -> 4.88888888889 / 2 = 2.44444444445",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "2 26"
                }
            },
            "Step 7": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 1 * 13 = 13 (left: 13) -> 13 * 2 = 26 (left: 2 26) -> 2 + 26 = 28 (left: 28)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "2 26"
                }
            },
            "Step 8": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 1 * 13 = 13 (left: 13) -> 13 * 2 = 26 (left: 2 26) -> 2 * 26 = 52 (left: 52)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "2 26"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "11 + 4 = 15 (left: 9 12 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 13) -> 2 + 13 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 13) -> 2 + 13 = 15 (left: 15) -> There are no possible next steps with the input of 15.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "2 26"
                }
            },
            "Step 4": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 1 * 13 = 13 (left: 13) -> 13 * 2 = 26 (left: 2 26) -> 2 + 26 = 28 (left: 28)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "2 26"
                }
            },
            "Step 5": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 1 * 13 = 13 (left: 13) -> 13 * 2 = 26 (left: 2 26) -> 26 / 2 = 13 (left: 13)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "2 26"
                }
            },
            "Step 6": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 1 * 13 = 13 (left: 13) -> 13 * 2 = 26 (left: 2 26) -> 26 / 2 = 13 (left: 13)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "2 26"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "2 26"
                }
            },
            "Step 7": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 1 * 13 = 13 (left: 13) -> 13 * 2 = 26 (left: 2 26) -> 26 - 2 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "2 26"
                }
            },
            "Step 8": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 1 * 13 = 13 (left: 13) -> 13 * 2 = 26 (left: 2 26) -> 2 * 26 = 52 (left: 52)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "2 26"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 9 = 3 (left: 3 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 1 * 13 = 13 (left: 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 1 * 13 = 13 (left: 13) -> 13 * 2 = 26 (left: 2 26)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "2 26"
                }
            },
            "Step 4": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 1 * 13 = 13 (left: 13) -> 13 * 2 = 26 (left: 2 26) -> 2 + 26 = 28 (left: 28)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "2 26"
                }
            },
            "Step 5": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 1 * 13 = 13 (left: 13) -> 13 * 2 = 26 (left: 2 26) -> 2 + 26 = 28 (left: 28)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "2 26"
                }
            },
            "Step 6": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 1 * 13 = 13 (left: 13) -> 13 * 2 = 26 (left: 2 26) -> 2 + 26 = 28 (left: 28) ",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "2 26"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "2 26"
                }
            },
            "Step 7": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 1 * 13 = 13 (left: 13) -> 13 * 2 = 26 (left: 2 26) -> 2 + 26 = 28 (left: 28)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "2 26"
                }
            },
            "Step 8": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 1 * 13 = 13 (left: 13) -> 13 * 2 = 26 (left: 2 26) -> 2 + 26 = 28 (left: 28)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "2 26"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 + 9 = 13 (left: 11 12 13)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132) -> 13 * 132 = 1716 (left: 1716)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132) -> 13 * 132 = 1716 (left: 1716) -> 17 / 16 = 1.0625 (left: 1.0625)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "11 12 13"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "2.25 11 12"
                }
            },
            "Step 4": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 2.25 * 11 = 24.75 (left: 12 24.75)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 2.25 * 11 = 24.75 (left: 12 24.75) -> 24.75 - 12 = 12.75 (left: 12 12.75)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 2.25 * 11 = 24.75 (left: 12 24.75) -> 24.75 - 12 = 12.75 (left: 12 12.75) -> 12 * 12.75 = 153 (left: 153)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "2 26"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "2 26"
                }
            },
            "Step 7": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 1 * 13 = 13 (left: 13) -> 13 * 2 = 26 (left: 2 26) -> 2 + 26 = 28 (left: 28)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "2 26"
                }
            },
            "Step 8": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 1 * 13 = 13 (left: 13) -> 13 * 2 = 26 (left: 2 26) -> 2 + 26 = 28 (left: 28)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "2 26"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 / 11 = 1.0909 (left: 1.0909 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 / 11 = 1.0909 (left: 1.0909 13) -> 13 / 1.0909 = 11.9091 (left: 11.9091)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 / 11 = 1.0909 (left: 1.0909 13) -> 13 / 1.0909 = 11.9091 (left: 11.9091) -> There are no possible next steps for the input 11.9091 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "2.25 11 12"
                }
            },
            "Step 4": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 12 / 2.25 = 5.33333333333 (left: 5.33333333333 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 12 / 2.25 = 5.33333333333 (left: 5.33333333333 12) -> 12 - 5.33333333333 = 6.66666666667 (left: 6.66666666667 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 12 / 2.25 = 5.33333333333 (left: 5.33333333333 12) -> 12 - 5.33333333333 = 6.66666666667 (left: 6.66666666667 12) -> 6.66666666667 * 12 = 80 (left: 80)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "2 26"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "0.7291666666666666 * 2 = 1.4583333333333332"
                }
            },
            "Step 7": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 11 - 2.25 = 8.75 (left: 8.75 12) -> 8.75 / 12 = 0.7291666666666666 (left: 0.7291666666666666) -> 0.7291666666666666 * 2 = 1.4583333333333332 -> 2 + 0.7291666666666666 = 2.7291666666666665",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 11 - 2.25 = 8.75 (left: 8.75 12) -> 8.75 / 12 = 0.7291666666666666 (left: 0.7291666666666666) -> 0.7291666666666666 * 2 = 1.4583333333333332 -> 2 + 0.7291666666666666 = 2.7291666666666665 -> 2 / 0.7291666666666666 = 2.7428571428571426 (left: 2.742857142857142",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "4.88888888889 / 2 = 2.44444444445"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 11 12 36)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 - 13 = -1 (left: 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 - 13 = -1 (left: 11) -> No possible next steps with the input \"11\" as there are no other numbers to operate on.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 - 13 = -1 (left: 11) -> No possible next steps with the input \"11\" as there are no other numbers to operate on. -> No possible next steps with the input \"11\" as there are no other numbers to operate on.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "2 26"
                }
            },
            "Step 4": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 1 * 13 = 13 (left: 13) -> 13 * 2 = 26 (left: 2 26) -> 2 + 26 = 28 (left: 28)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "2 26"
                }
            },
            "Step 5": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 1 * 13 = 13 (left: 13) -> 13 * 2 = 26 (left: 2 26) -> 2 * 26 = 52 (left: 52)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "11 12 13"
                }
            },
            "Step 6": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 13 - 12 = 1 (left: 1 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "2 26"
                }
            },
            "Step 7": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 1 * 13 = 13 (left: 13) -> 13 * 2 = 26 (left: 2 26) -> 2 + 26 = 28 (left: 28)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "2 26"
                }
            },
            "Step 8": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 1 * 13 = 13 (left: 13) -> 13 * 2 = 26 (left: 2 26) -> 26 / 2 = 13 (left: 13)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "4.88888888889 / 2 = 2.44444444445"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "4 + 9 = 13 (left: 11 12 13)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2.25 11 12"
                }
            },
            "Step 1": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 2.25 * 11 = 24.75 (left: 12 24.75)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 2.25 * 11 = 24.75 (left: 12 24.75) -> 12 * 24.75 = 297 (left: 297)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 2.25 * 11 = 24.75 (left: 12 24.75) -> 12 * 24.75 = 297 (left: 297) -> 9 * 7 = 63 (left: 63)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "2.25 11 12"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "2 26"
                }
            },
            "Step 4": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 1 * 13 = 13 (left: 13) -> 13 * 2 = 26 (left: 2 26) -> 26 + 2 = 28 (left: 28)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "2.25 11 12"
                }
            },
            "Step 5": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 12 - 2.25 = 9.75 (left: 9.75)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 12 - 2.25 = 9.75 (left: 9.75) -> 9.75 - 2 = 7.75",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "2 26"
                }
            },
            "Step 7": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 1 * 13 = 13 (left: 13) -> 13 * 2 = 26 (left: 2 26) -> 26 / 2 = 13 (left: 13)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "2 26"
                }
            },
            "Step 8": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 1 * 13 = 13 (left: 13) -> 13 * 2 = 26 (left: 2 26) -> 26 - 2 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "2 26"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "9 12 15"
                }
            },
            "Step 1": {
                "Step": "11 + 4 = 15 (left: 9 12 15) -> 15 - 9 = 6 (left: 6 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 + 4 = 15 (left: 9 12 15) -> 15 - 9 = 6 (left: 6 12) -> 6 * 12 = 72 (left: 72)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 + 4 = 15 (left: 9 12 15) -> 15 - 9 = 6 (left: 6 12) -> 6 * 12 = 72 (left: 72) -> There are no possible next steps since 72 is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "2.25 11 12"
                }
            },
            "Step 4": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 11 - 2.25 = 8.75 (left: 8.75 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 11 - 2.25 = 8.75 (left: 8.75 12) -> 8.75 / 12 = 0.7291666666666666 (left: 0.7291666666666666)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 11 - 2.25 = 8.75 (left: 8.75 12) -> 8.75 / 12 = 0.7291666666666666 (left: 0.7291666666666666) -> 0.7291666666666666 * 2 = 1.4583333333333332",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "2 26"
                }
            },
            "Step 7": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 1 * 13 = 13 (left: 13) -> 13 * 2 = 26 (left: 2 26) -> 26 - 2 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "2 26"
                }
            },
            "Step 8": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 1 * 13 = 13 (left: 13) -> 13 * 2 = 26 (left: 2 26) -> 26 - 2 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "2 26"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "11 + 4 = 15 (left: 9 12 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 + 12 = 23 (left: 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 + 12 = 23 (left: 13) -> 13 + 8 = 21 (left: 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 + 12 = 23 (left: 13) -> 13 + 8 = 21 (left: 8) -> (No possible next steps with just one number)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "2.25 11 12"
                }
            },
            "Step 4": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 2.25 * 11 = 24.75 (left: 12 24.75)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 2.25 * 11 = 24.75 (left: 12 24.75) -> 24.75 - 12 = 12.75 (left: 12.75)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 2.25 * 11 = 24.75 (left: 12 24.75) -> 24.75 - 12 = 12.75 (left: 12.75) -> There are no possible next steps with the number 12.75.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "2 26"
                }
            },
            "Step 7": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 1 * 13 = 13 (left: 13) -> 13 * 2 = 26 (left: 2 26) -> 2 * 26 = 52 (left: 52)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "2 26"
                }
            },
            "Step 8": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 1 * 13 = 13 (left: 13) -> 13 * 2 = 26 (left: 2 26) -> 26 - 2 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "2 26"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 11 12 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 13 + 1 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 13 + 1 = 14 (left: 14) -> No more possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "2.25 11 12"
                }
            },
            "Step 4": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 12 - 2.25 = ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 12 - 2.25 =  -> 12 - 2.25 = 9.75",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 12 - 2.25 =  -> 12 - 2.25 = 9.75 -> 12 + 2.25 = 14.25",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "2 26"
                }
            },
            "Step 7": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 1 * 13 = 13 (left: 13) -> 13 * 2 = 26 (left: 2 26) -> 2 + 26 = 28 (left: 28)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "2 26"
                }
            },
            "Step 8": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 1 * 13 = 13 (left: 13) -> 13 * 2 = 26 (left: 2 26) -> 26 / 2 = 13 (left: 13)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "2 26"
                }
            }
        },
        "Input": "4 9 11 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "890": {
        "puzzle": "7 8 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 7 = 6 (left: 6 8 9)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "9 13 15"
                }
            },
            "Step 1": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 9 * 13 = 117 (left: 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 9 * 13 = 117 (left: 15) -> There are no possible next steps with just one number.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 9 * 13 = 117 (left: 15) -> There are no possible next steps with just one number. -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 1 13"
                }
            },
            "Step 4": {
                "Step": "9 - 8 = 1 (left: 7 1 13) -> 7 + 1 = 8 (left: 8 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 8 = 1 (left: 7 1 13) -> 7 + 1 = 8 (left: 8 13) -> 8 * 13 = 104 (left: 104)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 8 = 1 (left: 7 1 13) -> 7 + 1 = 8 (left: 8 13) -> 8 * 13 = 104 (left: 104) -> 104 + 2 = 106",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 4 8  -> 4 * 8 = 32 (left: 8 32) -> 32 - 8 = 24 (left: 24) -> Answer: (13 - 9) * (8 - 7) = 24",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "24"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 4 8  -> 4 * 8 = 32 (left: 8 32) -> 32 - 8 = 24 (left: 24) -> Answer: ((13 - 9) * 8) - 8 = 24",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "8.3077 20.9231"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 + 8 = 15 (left: 9 13 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 9 13"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 7 8 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 7 8 4) -> 8 - 4 = 4 (left: 4 4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 7 8 4) -> 8 - 4 = 4 (left: 4 4) -> 4 * 4 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "2 6.3077"
                }
            },
            "Step 4": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 56 / 13 = 4.3077 (left: 4.3077  -> 4.3077 + 2 = 6.3077 (left: 2 6.3077) -> 2 + 6.3077 = 8.3077",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 56 / 13 = 4.3077 (left: 4.3077  -> 4.3077 + 2 = 6.3077 (left: 2 6.3077) -> 2 + 6.3077 = 8.3077 -> 6.3077 * 2 = 12.6154 (left: 12.6154 8.3077)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 56 / 13 = 4.3077 (left: 4.3077  -> 4.3077 + 2 = 6.3077 (left: 2 6.3077) -> 2 + 6.3077 = 8.3077 -> 6.3077 * 2 = 12.6154 (left: 12.6154 8.3077) -> 12.6154 + 8.3077 = 20.9231 (left: 8.3077 20.9231)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 4 8  -> 4 * 8 = 32 (left: 8 32) -> 32 - 8 = 24 (left: 24) -> Answer: ((13 - 9) * 8) - 8 = 24",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "24"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 4 8  -> 4 * 8 = 32 (left: 8 32) -> 32 - 8 = 24 (left: 24) -> Answer: (13 - 9) * 8 - 8 = 24",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "8.3077 20.9231"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 + 8 = 17 (left: 7 13 17)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "9 13 15"
                }
            },
            "Step 1": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 9 * 13 = 117 (left: 15 117)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 9 * 13 = 117 (left: 15 117) -> 15 - 117 = -102 (left: -102)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 9 * 13 = 117 (left: 15 117) -> 15 - 117 = -102 (left: -102) -> -102 + 2 = -100 (left: 2)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "9 13 15"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "9 13 15"
                }
            },
            "Step 4": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 15 - 13 = 2 (left: 9 2)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 15 - 13 = 2 (left: 9 2) -> 9 * 2 = 18 (left: 18)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 15 - 13 = 2 (left: 9 2) -> 9 * 2 = 18 (left: 18) -> There are no possible next steps with the number 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 4 8  -> 4 * 8 = 32 (left: 8 32) -> 32 - 8 = 24 (left: 24) -> Answer: (13 - 9) * (8 - 7) = 24",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "24"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 4 8  -> 4 * 8 = 32 (left: 8 32) -> 32 - 8 = 24 (left: 24) -> Answer: ((13 - 9) * 8) - 8 = 24",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "8.3077 20.9231"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 + 8 = 15 (left: 9 13 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "7 13 17"
                }
            },
            "Step 1": {
                "Step": "9 + 8 = 17 (left: 7 13 17) -> 17 - 13 = 4 (left: 4 17)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 8 = 17 (left: 7 13 17) -> 17 - 13 = 4 (left: 4 17) -> 4 - 17 = -13 (left: -13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 + 8 = 17 (left: 7 13 17) -> 17 - 13 = 4 (left: 4 17) -> 4 - 17 = -13 (left: -13) -> There are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "2 6.3077"
                }
            },
            "Step 4": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 56 / 13 = 4.3077 (left: 4.3077  -> 4.3077 + 2 = 6.3077 (left: 2 6.3077) -> 2 + 6.3077 = 8.3077 (left: 8.3077)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "9 13 15"
                }
            },
            "Step 5": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 15 - 9 = 6 (left: 13 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 15 - 9 = 6 (left: 13 6) -> 13 * 6 = 78 (left: 78)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 4 8  -> 4 * 8 = 32 (left: 8 32) -> 32 - 8 = 24 (left: 24) -> Answer: (13 - 9) * (8 - 7) = 24",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "24"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 4 8  -> 4 * 8 = 32 (left: 8 32) -> 32 - 8 = 24 (left: 24) -> Answer: ((13 - 9) * 8) - 8 = 24",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "8.3077 20.9231"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "9 - 8 = 1 (left: 7 1 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 9 13"
                }
            },
            "Step 1": {
                "Step": "7 * 8 = 56 (left: 9 13 56)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 56 / 13 = 4.3077 (left: 4.3077 ",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 56 / 13 = 4.3077 (left: 4.3077  -> 4.3077 + 2 = 6.3077 (left: 2 6.3077)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "9 13 56"
                }
            },
            "Step 4": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 56 / 9 = 6 (left: 6 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 56 / 9 = 6 (left: 6 13) -> 6 / 13 = 0.46 (left: 0.46)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 56 / 9 = 6 (left: 6 13) -> 6 / 13 = 0.46 (left: 0.46) -> There are no possible next steps for the input 0.46 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 4 8  -> 4 * 8 = 32 (left: 8 32) -> 32 - 8 = 24 (left: 24) -> Answer: (13 - 9) * (8 * 4) = 24",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "24"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 4 8  -> 4 * 8 = 32 (left: 8 32) -> 32 - 8 = 24 (left: 24) -> Answer: ((13 - 9) * 8) - 8 = 24",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "8.3077 20.9231"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "7 + 8 = 15 (left: 9 13 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "7 8 4"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 7 8 4) -> 8 - 4 = 4 (left: 4 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 7 8 4) -> 8 - 4 = 4 (left: 4 4) -> 4 - 4 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 7 8 4) -> 8 - 4 = 4 (left: 4 4) -> 4 - 4 = 0 (left: 0) -> There are no possible next steps for the input \"0\" as there are no numbers to work with.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 9 13"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 4 8 ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 4 8  -> 4 * 8 = 32 (left: 8 32)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 4 8  -> 4 * 8 = 32 (left: 8 32) -> 32 - 8 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 4 8  -> 4 * 8 = 32 (left: 8 32) -> 32 - 8 = 24 (left: 24) -> Answer: (13 - 9) * (8 + 7) = 24",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "24"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 4 8  -> 4 * 8 = 32 (left: 8 32) -> 32 - 8 = 24 (left: 24) -> Answer: ((13 - 9) * 8) - 8 = 24",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "8.3077 20.9231"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "7 * 8 = 56 (left: 9 13 56)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "9 13 15"
                }
            },
            "Step 1": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 13 + 15 = 28 (left: 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 13 + 15 = 28 (left: 9) -> There are no possible next steps with the input 9.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 13 + 15 = 28 (left: 9) -> There are no possible next steps with the input 9. -> There are no possible next steps with the input 9.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "2 6.3077"
                }
            },
            "Step 4": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 56 / 13 = 4.3077 (left: 4.3077  -> 4.3077 + 2 = 6.3077 (left: 2 6.3077) -> 2 / 6.3077 = 0.3172",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 56 / 13 = 4.3077 (left: 4.3077  -> 4.3077 + 2 = 6.3077 (left: 2 6.3077) -> 2 / 6.3077 = 0.3172 -> 2 + 6.3077 = 8.3077 (left: 8.3077)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "9 13 15"
                }
            },
            "Step 6": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> Input: 3 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 4 8  -> 4 * 8 = 32 (left: 8 32) -> 32 - 8 = 24 (left: 24) -> Answer: ((13 - 9) * 8) - 8 = 24",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "24"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 4 8  -> 4 * 8 = 32 (left: 8 32) -> 32 - 8 = 24 (left: 24) -> Answer: ((13 - 9) * 8) - 8 = 24",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "8.3077 20.9231"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 7 8 4)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "7 13 17"
                }
            },
            "Step 1": {
                "Step": "9 + 8 = 17 (left: 7 13 17) -> 17 - 13 = 4 (left: 4 17)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 8 = 17 (left: 7 13 17) -> 17 - 13 = 4 (left: 4 17) -> 17 / 4 = 4.25 (left: 4.25)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 + 8 = 17 (left: 7 13 17) -> 17 - 13 = 4 (left: 4 17) -> 17 / 4 = 4.25 (left: 4.25) -> There is only one number given, so there are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "9 13 15"
                }
            },
            "Step 4": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 15 - 9 = 6 (left: 13 6)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 15 - 9 = 6 (left: 13 6) -> 13 - 6 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 15 - 9 = 6 (left: 13 6) -> 13 - 6 = 7 (left: 7) -> 7 + 7 = 14 (left: 7 14)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 4 8  -> 4 * 8 = 32 (left: 8 32) -> 32 - 8 = 24 (left: 24) -> Answer: (13 - 9) * (8 + 7) = 24",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "24"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 4 8  -> 4 * 8 = 32 (left: 8 32) -> 32 - 8 = 24 (left: 24) -> Answer: ((13 - 9) * 8) - 8 = 24",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "8.3077 20.9231"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "9 + 8 = 17 (left: 13 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 9 13"
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 6 8 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 6 8 9) -> 6 * 8 = 48 (left: 9 48)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 6 8 9) -> 6 * 8 = 48 (left: 9 48) -> 9 + 48 = 57 (left: 57)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "2 6.3077"
                }
            },
            "Step 4": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 56 / 13 = 4.3077 (left: 4.3077  -> 4.3077 + 2 = 6.3077 (left: 2 6.3077) -> 2 + 6.3077 = 8.3077 (left: 8.3077)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "9 13 15"
                }
            },
            "Step 5": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 13 - 9 = 4 (left: 4 15)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 13 - 9 = 4 (left: 4 15) -> Input: 3 9 27",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 4 8  -> 4 * 8 = 32 (left: 8 32) -> 32 - 8 = 24 (left: 24) -> Answer: ((13 - 9) * 8) - 8 = 24",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "24"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 4 8  -> 4 * 8 = 32 (left: 8 32) -> 32 - 8 = 24 (left: 24) -> Answer: ((13 - 9) * 8) - 8 = 24",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "8.3077 20.9231"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "7 * 8 = 56 (left: 9 13 56)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 9 13"
                }
            },
            "Step 1": {
                "Step": "9 + 13 = 22 (left: 7 8 22)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 13 = 22 (left: 7 8 22) -> 8 - 7 = 1 (left: 1 8 22)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 + 13 = 22 (left: 7 8 22) -> 8 - 7 = 1 (left: 1 8 22) -> 22 / 1 = 22 (left: 8 22)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "9 13 15"
                }
            },
            "Step 4": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 15 - 13",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 15 - 13 -> 15 - 13 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 15 - 13 -> 15 - 13 = 2 (left: 2) -> There are no possible next steps with just the number 2.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 4 8  -> 4 * 8 = 32 (left: 8 32) -> 32 - 8 = 24 (left: 24) -> Answer: ((13 - 9) * 8) - 8 = 24",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "24"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 4 8  -> 4 * 8 = 32 (left: 8 32) -> 32 - 8 = 24 (left: 24) -> Answer: ((13 - 9) * 8) - 8 = 24",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "8.3077 20.9231"
                }
            }
        },
        "Input": "7 8 9 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "891": {
        "puzzle": "2 6 12 12",
        "Agent 0": {
            "Step 0": {
                "Step": "6 * 2 = 12 (left: 12 12 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 -> 24 - 12 = 12 (left: 12 24)"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 / 6 = 2 (left: 2 2 ",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 12 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 6 12 12) -> 12 - 6 = 6 (left: 6 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 6 12 12) -> 12 - 6 = 6 (left: 6 12) -> 6 * 12 = 72 (left: 72)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 6 12 12) -> 12 - 6 = 6 (left: 6 12) -> 6 * 12 = 72 (left: 72) -> 72 / 8 = 9 (left: 9)"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 / 6 = 2 (left: 2 12 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "2 12 12"
                }
            },
            "Step 1": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 + 12 = 14 (left: 12 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 + 12 = 14 (left: 12 14) -> 12 - 14 = -2 (left: -2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 + 12 = 14 (left: 12 14) -> 12 - 14 = -2 (left: -2) -> -2 - 8 = -10 (left: -10)"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 * 2 = 12 (left: 12 12 ",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12) -> 12 / 1 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12) -> 12 / 1 = 12 (left: 12) -> 12 / 2 = 6 (left: 6)"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 / 2 = 6 (left: 6 12 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "10 12 12"
                }
            },
            "Step 1": {
                "Step": "12 - 2 = 10 (left: 10 12 12) -> 12 - 10 = 2 (left: 2 12 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 2 = 10 (left: 10 12 12) -> 12 - 10 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 24)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 2 = 10 (left: 10 12 12) -> 12 - 10 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 24) -> 12 * 24 = 288 (left: 288)"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "2 + 6 = 8 (left: 8 12 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 2 "
                }
            },
            "Step 1": {
                "Step": "12 / 6 = 2 (left: 2 2  -> 2 / 2 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 6 = 2 (left: 2 2  -> 2 / 2 = 1 (left: 1) -> 1 - 1 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 / 6 = 2 (left: 2 2  -> 2 / 2 = 1 (left: 1) -> 1 - 1 = 0 (left: 0) -> No possible next steps as there is no input provided."
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 2 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 6 6 12) -> 12 - 6 = 6 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 6 6 12) -> 12 - 6 = 6 (left: -> 6 - 6 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 6 6 12) -> 12 - 6 = 6 (left: -> 6 - 6 = 0 (left: 0) -> No possible next steps as there are no numbers provided."
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "12 / 2 = 6 (left: 6 6 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "2 12 12"
                }
            },
            "Step 1": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 + 12 = 14 (left: 12 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 + 12 = 14 (left: 12 14) -> 12 / 14 = 0.85714285714 (left: 0.85714285714)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 + 12 = 14 (left: 12 14) -> 12 / 14 = 0.85714285714 (left: 0.85714285714) -> 0.85714285714 + 2 = 2.85714285714"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "6 * 2 = 12 (left: 12 12 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "12 12 "
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 12 12  -> 12 / 12 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 12 12  -> 12 / 12 = 1 (left: 1) -> 1 / 1 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 2 = 12 (left: 12 12  -> 12 / 12 = 1 (left: 1) -> 1 / 1 = 1 (left: 1) -> There are no possible next steps with just one number."
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "12 - 2 = 10 (left: 10 12 12)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 - 12 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 - 12 = 24 (left: 24) -> Answer: ((12 / 2) * 6) - 12 = 24"
            }
        },
        "Input": "2 6 12 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            }
        ]
    },
    "892": {
        "puzzle": "3 4 5 6",
        "Agent 0": {
            "Step 0": {
                "Step": "3 * 4 = 12 (left: 5 6 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 4 - 3 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 4 - 3 = 1 (left: 1) -> 1 + 1 = 2 (left: 1 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 4 - 3 = 1 (left: 1) -> 1 + 1 = 2 (left: 1 2) -> 2 / 1 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "3 4 "
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "3 4 "
                }
            },
            "Step 4": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 5 * 10 = 50 (left: 50)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 5 * 10 = 50 (left: 50) -> 50 + 2 = 52 (left: 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 5 * 10 = 50 (left: 50) -> 50 + 2 = 52 (left: 2) -> There are no possible next steps with only one number given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "27 *"
                }
            },
            "Step 7": {
                "Step": "4 + 5 = 9 (left: 3 6 9) -> 6 * 3 = 18 (left: 18 9) -> 18 + 9 = 27 (left: 27) -> 27 * -> 27 * 8 = 216 (left: 216)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "2 + 2 = 4"
                }
            },
            "Step 8": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 6 / 3 = 2 (left: 1 2) -> 1 * 2 = 2 (left: 2) -> 2 + 2 = 4 -> 2 / 2 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "Input: 3 6 6 3"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 5 = 20 (left: 3 6 20)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 6 9"
                }
            },
            "Step 1": {
                "Step": "4 + 5 = 9 (left: 3 6 9) -> 6 * 3 = 18 (left: 18 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 5 = 9 (left: 3 6 9) -> 6 * 3 = 18 (left: 18 9) -> 18 + 9 = 27 (left: 27)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 5 = 9 (left: 3 6 9) -> 6 * 3 = 18 (left: 18 9) -> 18 + 9 = 27 (left: 27) -> 27 *",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "1 3 6"
                }
            },
            "Step 4": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 1 + 3 = 4 (left: 4 6)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 1 + 3 = 4 (left: 4 6) -> 4 - 6 = -2 (left: -2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 1 + 3 = 4 (left: 4 6) -> 4 - 6 = -2 (left: -2) -> There are no possible next steps with the input of -2.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no possible next steps with the input of -2."
                }
            },
            "Step 7": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 1 + 3 = 4 (left: 4 6) -> 4 - 6 = -2 (left: -2) -> There are no possible next steps with the input of -2. -> There are no possible next steps with the input of -2.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 1 + 3 = 4 (left: 4 6) -> 4 - 6 = -2 (left: -2) -> There are no possible next steps with the input of -2. -> There are no possible next steps with the input of -2. -> There are no possible next steps with the input of -2.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 * 5 = 20 (left: 3 6 20)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 4 11"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 3 4 11) -> 4 * 3 = 12 (left: 12 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 3 4 11) -> 4 * 3 = 12 (left: 12 11) -> 12 * 11 = 132 (left: 132)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 3 4 11) -> 4 * 3 = 12 (left: 12 11) -> 12 * 11 = 132 (left: 132) -> 13 - ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "1 3 6"
                }
            },
            "Step 4": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 6 / 3 = 2 (left: 1 2)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 6 / 3 = 2 (left: 1 2) -> 1 * 2 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 6 / 3 = 2 (left: 1 2) -> 1 * 2 = 2 (left: 2) -> 2 + 2 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "27 *"
                }
            },
            "Step 7": {
                "Step": "4 + 5 = 9 (left: 3 6 9) -> 6 * 3 = 18 (left: 18 9) -> 18 + 9 = 27 (left: 27) -> 27 * -> 16 + 4 = 20 (left: /)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "There are no possible next steps with only one number given."
                }
            },
            "Step 8": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 5 * 10 = 50 (left: 50) -> 50 + 2 = 52 (left: 2) -> There are no possible next steps with only one number given. -> Please provide more numbers to continue the calculations.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 3 4 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1 3 6"
                }
            },
            "Step 1": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 6 / 3 = 2 (left: 1 2 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 6 / 3 = 2 (left: 1 2 6) -> 2 * 6 = 12 (left: 1 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 6 / 3 = 2 (left: 1 2 6) -> 2 * 6 = 12 (left: 1 12) -> 12 / 1 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "3 4 "
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "3 4 "
                }
            },
            "Step 4": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 3 + 4 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 3 + 4 = 7 (left: 7) -> 7 + 8 = 15 (left: 8 15)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 3 + 4 = 7 (left: 7) -> 7 + 8 = 15 (left: 8 15) -> 8 - 15 = -7 (left: -7)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "27 *"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "27 *"
                }
            },
            "Step 7": {
                "Step": "4 + 5 = 9 (left: 3 6 9) -> 6 * 3 = 18 (left: 18 9) -> 18 + 9 = 27 (left: 27) -> 27 * -> 27 - 8 = 19 (left: *)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "2 + 2 = 4"
                }
            },
            "Step 8": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 6 / 3 = 2 (left: 1 2) -> 1 * 2 = 2 (left: 2) -> 2 + 2 = 4 -> 2 + 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "27 *"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 * 5 = 20 (left: 3 6 20)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 4 11"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 3 4 11) -> 11 / 3 = 3.67 (left: 4 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 3 4 11) -> 11 / 3 = 3.67 (left: 4 11) -> 11 - 4 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 3 4 11) -> 11 / 3 = 3.67 (left: 4 11) -> 11 - 4 = 7 (left: 7) -> 7 + 8 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "1 3 6"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "3 4 "
                }
            },
            "Step 4": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 4 - 3 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 4 - 3 = 1 (left: 1) -> There is only one number provided, so there are no possible next steps.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 4 - 3 = 1 (left: 1) -> There is only one number provided, so there are no possible next steps. -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps with only one number given."
                }
            },
            "Step 7": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 5 * 10 = 50 (left: 50) -> 50 + 2 = 52 (left: 2) -> There are no possible next steps with only one number given. -> Please provide at least two numbers to generate possible next steps.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 5 * 10 = 50 (left: 50) -> 50 + 2 = 52 (left: 2) -> There are no possible next steps with only one number given. -> Please provide at least two numbers to generate possible next steps. -> Please provide at least two numbers to generate possible next steps.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "5 - 4 = 1 (left: 1 3 6)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1 3 6"
                }
            },
            "Step 1": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 1 * 3 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 1 * 3 = 3 (left: 3) -> There are no possible next steps with the input of 3.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 1 * 3 = 3 (left: 3) -> There are no possible next steps with the input of 3. -> There are no possible next steps with the input of 3.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "3 4 "
                }
            },
            "Step 4": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 3 + 4 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 3 + 4 = 7 (left: 7) -> 7 * 8 = 56 (left: 56)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 3 + 4 = 7 (left: 7) -> 7 * 8 = 56 (left: 56) -> There are no possible next steps for the number 56 with the given operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "No possible next steps."
                }
            },
            "Step 7": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 4 - 3 = 1 (left: 1) -> There is only one number provided, so there are no possible next steps. -> No possible next steps. -> None",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "Input: 3 6 6 3"
                }
            },
            "Step 8": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 3 + 6 = 9 (left: 1 9) -> 1 * 9 = 9 (left: 9) -> Input: 3 6 6 3 -> 3 + 6 = 9 (left: 6 6 9)",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "5 * 6 = 30 (left: 3 4 ",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 3 + 4 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 3 + 4 = 7 (left: 7) -> 7 * 8 = 56 (left: 56)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 3 + 4 = 7 (left: 7) -> 7 * 8 = 56 (left: 56) -> There are no possible next steps with the input 56.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "1 3 6"
                }
            },
            "Step 4": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 3 + 6 = 9 (left: 1 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 3 + 6 = 9 (left: 1 9) -> 1 * 9 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 3 + 6 = 9 (left: 1 9) -> 1 * 9 = 9 (left: 9) -> Input: 3 6 6 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "27 *"
                }
            },
            "Step 7": {
                "Step": "4 + 5 = 9 (left: 3 6 9) -> 6 * 3 = 18 (left: 18 9) -> 18 + 9 = 27 (left: 27) -> 27 * -> 27 / 8 = 3.375 (left: 3.375 *)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 5 = 9 (left: 3 6 9) -> 6 * 3 = 18 (left: 18 9) -> 18 + 9 = 27 (left: 27) -> 27 * -> 27 / 8 = 3.375 (left: 3.375 *) -> 3.375 * 14 = 47.25 (left: )",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "27 *"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "4 * 5 = 20 (left: 3 6 20)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 4 - 3 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 4 - 3 = 1 (left: 1) -> There are no possible next steps for the input 1.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 4 - 3 = 1 (left: 1) -> There are no possible next steps for the input 1. -> There are no possible next steps for the input 1.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "1 3 6"
                }
            },
            "Step 4": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 6 - 3 = 3 (left: 1 3)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 6 - 3 = 3 (left: 1 3) -> 1 + 3 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 6 - 3 = 3 (left: 1 3) -> 1 + 3 = 4 (left: 4) -> 8 / 4 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "27 *"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "27 *"
                }
            },
            "Step 7": {
                "Step": "4 + 5 = 9 (left: 3 6 9) -> 6 * 3 = 18 (left: 18 9) -> 18 + 9 = 27 (left: 27) -> 27 * -> 27 / 8 = 3.375 (left: 3.375 *)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 5 = 9 (left: 3 6 9) -> 6 * 3 = 18 (left: 18 9) -> 18 + 9 = 27 (left: 27) -> 27 * -> 27 / 8 = 3.375 (left: 3.375 *) -> 3.375 * 2 = 6.75 (left: *)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "2 + 2 = 4"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 3 4 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 5 * 10 = 50 (left: 50)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 5 * 10 = 50 (left: 50) -> There are no possible next steps with just the number 50.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 5 * 10 = 50 (left: 50) -> There are no possible next steps with just the number 50. -> There are no possible next steps with just the number 50.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "3 4 "
                }
            },
            "Step 4": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 3 * 4 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 + 2 = 14 (left: 8 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 + 2 = 14 (left: 8 14) -> 8 + 14 = 22 (left: 22)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "27 *"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "Input: 3 6 6 3"
                }
            },
            "Step 7": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 3 + 6 = 9 (left: 1 9) -> 1 * 9 = 9 (left: 9) -> Input: 3 6 6 3 -> 3 + 6 = 9 (left: 6 9 3)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 3 + 6 = 9 (left: 1 9) -> 1 * 9 = 9 (left: 9) -> Input: 3 6 6 3 -> 3 + 6 = 9 (left: 6 9 3) -> 9 - 6 = 3 (left: 3",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "There are no possible next steps with only one number given."
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "4 + 5 = 9 (left: 3 6 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 4 - 3 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 4 - 3 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 4 - 3 = 1 (left: 1) -> 1 + 1 = 2 -> 1 / 1 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "1 3 6"
                },
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "3 4 "
                }
            },
            "Step 4": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 3 * 4 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 + 8 = 20 (left: 8 20)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 + 8 = 20 (left: 8 20) -> 20 / 8 = 2.5 (left: 2.5)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "27 *"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "27 *"
                }
            },
            "Step 7": {
                "Step": "4 + 5 = 9 (left: 3 6 9) -> 6 * 3 = 18 (left: 18 9) -> 18 + 9 = 27 (left: 27) -> 27 * -> Possible next steps:",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 5 = 9 (left: 3 6 9) -> 6 * 3 = 18 (left: 18 9) -> 18 + 9 = 27 (left: 27) -> 27 * -> Possible next steps: -> There are no possible next steps.",
                "Pruning": null
            }
        },
        "Input": "3 4 5 6",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "893": {
        "puzzle": "6 10 12 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 6 10 ",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "12 16 12"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 16 - 12 = 4 (left: 12 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 16 - 12 = 4 (left: 12 4) -> 12 - 4 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 16 - 12 = 4 (left: 12 4) -> 12 - 4 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "1 24"
                }
            },
            "Step 4": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 12 / 12 = 1 (left: 1 24) -> 1 + 24 = 25 (left: 25)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "1 24"
                }
            },
            "Step 5": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 12 / 12 = 1 (left: 1 24) -> 24 - 1 = 23 (left: 1 23)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 12 / 12 = 1 (left: 1 24) -> 24 - 1 = 23 (left: 1 23) -> 1 * 23 = 23 (left: 23)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "1 24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "1 23"
                }
            },
            "Step 7": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 12 / 12 = 1 (left: 1 24) -> 24 - 1 = 23 (left: 1 23) -> 1 * 23 = 23 (left: 23)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "1 24"
                }
            },
            "Step 8": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 12 / 12 = 1 (left: 1 24) -> 24 / 1 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "1 23"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 / 2 = 6 (left: 6 10 ",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "12 16 12"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 28 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 28 12) -> 28 / 12 = 2.33 (left: 2.33)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 28 12) -> 28 / 12 = 2.33 (left: 2.33) -> There are no possible next steps for the input 2.33 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "1 24"
                }
            },
            "Step 4": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 12 / 12 = 1 (left: 1 24) -> 24 - 1 = 23 (left",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 12 / 12 = 1 (left: 1 24) -> 24 - 1 = 23 (left -> 24 - 2 = 22 (left: 22 1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 12 / 12 = 1 (left: 1 24) -> 24 - 1 = 23 (left -> 24 - 2 = 22 (left: 22 1) -> 22 / 1 = 22 (left: 22)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "1 24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "1 24"
                }
            },
            "Step 7": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 12 / 12 = 1 (left: 1 24) -> 1 + 24 = 25 (left: 25)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "1 24"
                }
            },
            "Step 8": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 12 / 12 = 1 (left: 1 24) -> 24 / 1 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "24 24"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "12 16 12"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 12 28)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 12 28) -> 12 * 28 = 336 (left: 336)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 12 28) -> 12 * 28 = 336 (left: 336) -> 3 * 3 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "12 16 12"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "1 24"
                }
            },
            "Step 4": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 12 / 12 = 1 (left: 1 24) -> 24 / 1 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "1 24"
                }
            },
            "Step 5": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 12 / 12 = 1 (left: 1 24) -> 24 - 1 = 23 (left: 23)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "1 24"
                }
            },
            "Step 6": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 12 / 12 = 1 (left: 1 24) -> 1 + 24 = 25 (left: 24 25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "1 24"
                }
            },
            "Step 7": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 12 / 12 = 1 (left: 1 24) -> 1 + 24 = 25 (left: 25)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "1 23"
                }
            },
            "Step 8": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 12 / 12 = 1 (left: 1 24) -> 24 - 1 = 23 (left: 1 23) -> 1 + 23 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "1 23"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 + 10 = 16 (left: 12 16 12)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "12 16 12"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 28 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 28 12) -> 28 + 12 = 40 (left: 40)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 28 12) -> 28 + 12 = 40 (left: 40) -> None, as there is only one number given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "1 24"
                }
            },
            "Step 4": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 12 / 12 = 1 (left: 1 24) -> 1 * 24 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "1 24"
                }
            },
            "Step 5": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 12 / 12 = 1 (left: 1 24) -> 1 * 24 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "1 24"
                }
            },
            "Step 6": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 12 / 12 = 1 (left: 1 24) -> 24 - 1 = 23 (left: 1 23)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "1 24"
                }
            },
            "Step 7": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 12 / 12 = 1 (left: 1 24) -> 24 - 1 = 23 (left: 23)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "1 24"
                }
            },
            "Step 8": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 12 / 12 = 1 (left: 1 24) -> 24 / 1 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "1 23"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 10 = 16 (left: 12 16 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 10 12 12"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 12 12 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 10 = 16 (left: 12 12 16) -> 12 - 12 = 0 (left: 0 16)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 10 = 16 (left: 12 12 16) -> 12 - 12 = 0 (left: 0 16) -> 0 + 16 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "1 24"
                }
            },
            "Step 4": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 12 / 12 = 1 (left: 1 24) -> 24 - 1 = 23 (left: 23)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "1 24"
                }
            },
            "Step 5": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 12 / 12 = 1 (left: 1 24) -> 1 * 24 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "1 24"
                }
            },
            "Step 6": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 12 / 12 = 1 (left: 1 24) -> 24 / 1 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "1 24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "1 24"
                }
            },
            "Step 7": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 12 / 12 = 1 (left: 1 24) -> 24 / 1 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "1 24"
                }
            },
            "Step 8": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 12 / 12 = 1 (left: 1 24) -> 1 + 24 = 25 (left: 25)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "24 24"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "12",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 10 12 12"
                }
            },
            "Step 1": {
                "Step": "10 - 6 = 4 (left: 4 6 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 4 6  -> 3 * 9 = 27 (left: 27)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 4 6  -> 3 * 9 = 27 (left: 27) -> 27 + 2 = 29 (left: 29)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "1 24"
                }
            },
            "Step 4": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 12 / 12 = 1 (left: 1 24) -> 24 + 1 = 25 (left: 25)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "1 24"
                }
            },
            "Step 5": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 12 / 12 = 1 (left: 1 24) -> 24 - 1 = 23 (left: 23)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "1 24"
                }
            },
            "Step 6": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 12 / 12 = 1 (left: 1 24) -> 24 / 1 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "1 24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "1 24"
                }
            },
            "Step 7": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 12 / 12 = 1 (left: 1 24) -> 24 - 1 = 23 (left: 23)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "1 24"
                }
            },
            "Step 8": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 12 / 12 = 1 (left: 1 24) -> 24 - 1 = 23 (left: 23)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "24 24"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "12 / 6 = 2 (left: 2 10 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1.66666666667 12 12"
                }
            },
            "Step 1": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 1.66666666667 * 12 = 20 (left: 12 20)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 1.66666666667 * 12 = 20 (left: 12 20) -> 12 + 20 = 32 (left: 32)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 1.66666666667 * 12 = 20 (left: 12 20) -> 12 + 20 = 32 (left: 32) -> No possible next steps, as there is only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "1 24"
                }
            },
            "Step 4": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 12 / 12 = 1 (left: 1 24) -> 1 * 24 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "1 24"
                }
            },
            "Step 5": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 12 / 12 = 1 (left: 1 24) -> 24 / 1 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "1 24"
                }
            },
            "Step 6": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 12 / 12 = 1 (left: 1 24) -> 1 * 24 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "1 24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "1 24"
                }
            },
            "Step 7": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 12 / 12 = 1 (left: 1 24) -> 24 / 1 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "1 24"
                }
            },
            "Step 8": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 12 / 12 = 1 (left: 1 24) -> 24 - 1 = 23 (left: 23)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "1 23"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "10 / 6 = 1.66666666667 (left:",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1.66666666667 12 12"
                }
            },
            "Step 1": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 1.66666666667 + 12 = 13.66666666667 (left: 12 13.66666666667)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 1.66666666667 + 12 = 13.66666666667 (left: 12 13.66666666667) -> 12 - 13.66666666667 = -1.66666666667 (left: -1.66666666667)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 1.66666666667 + 12 = 13.66666666667 (left: 12 13.66666666667) -> 12 - 13.66666666667 = -1.66666666667 (left: -1.66666666667) -> There are no possible next steps with the given input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "1 24"
                }
            },
            "Step 4": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 12 / 12 = 1 (left: 1 24) -> 24 / 1 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "1 24"
                }
            },
            "Step 5": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 12 / 12 = 1 (left: 1 24) -> 24 - 1 = 23 (left: 23)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "1 24"
                }
            },
            "Step 6": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 12 / 12 = 1 (left: 1 24) -> 24 / 1 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "1 24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "1 24"
                }
            },
            "Step 7": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 12 / 12 = 1 (left: 1 24) -> 24 - 1 = 23 (left: 23)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "1 24"
                }
            },
            "Step 8": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 12 / 12 = 1 (left: 1 24) -> 1 + 24 = 25 (left: 25)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "24 24"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "6 + 10 = 16 (left: 12 12 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 10 12 12"
                }
            },
            "Step 1": {
                "Step": "12 - 6 = 6 (left: 6 6 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 6 = 6 (left: 6 6  -> 6 - 6 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 6 = 6 (left: 6 6  -> 6 - 6 = 0 (left: 0) -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "1 24"
                }
            },
            "Step 4": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 12 / 12 = 1 (left: 1 24) -> 1 * 24 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "1 24"
                }
            },
            "Step 5": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 12 / 12 = 1 (left: 1 24) -> 24 + 1 = 25 (left: 25)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "1 24"
                }
            },
            "Step 6": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 12 / 12 = 1 (left: 1 24) -> 24 / 1 = 24 (left: 24 24)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1 24"
                }
            },
            "Step 7": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 12 / 12 = 1 (left: 1 24) -> 1 * 24 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "1 24"
                }
            },
            "Step 8": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 12 / 12 = 1 (left: 1 24) -> 24 - 1 = 23 (left: 23)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "1 23"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "12 - 6 =",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 10 12 12"
                }
            },
            "Step 1": {
                "Step": "12 / 6 = 2 (left: 2 12 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 12 / 12 = 1 (left: 1 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "1 24"
                }
            },
            "Step 4": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 12 / 12 = 1 (left: 1 24) -> 24 - 1 = 23 (left: 23)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "1 24"
                }
            },
            "Step 5": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 12 / 12 = 1 (left: 1 24) -> 24 - 1 = 23 (left: 23)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "1 24"
                }
            },
            "Step 6": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 12 / 12 = 1 (left: 1 24) -> 24 * 1 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "1 24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "1 24"
                }
            },
            "Step 7": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 12 / 12 = 1 (left: 1 24) -> 24 * 1 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "1 24"
                }
            },
            "Step 8": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 12 / 12 = 1 (left: 1 24) -> 24 - 1 = 23 (left: 23)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "24 24"
                }
            }
        },
        "Input": "6 10 12 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "894": {
        "puzzle": "5 5 5 9",
        "Agent 0": {
            "Step 0": {
                "Step": "5 / 5 = 1 (left: 1 5 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "10 5 9"
                }
            },
            "Step 1": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 10 + 9 = 19 (left: 5 19)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 10 + 9 = 19 (left: 5 19) -> 19 / 5 = 3.8 (left: 3.8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 10 + 9 = 19 (left: 5 19) -> 19 / 5 = 3.8 (left: 3.8) -> There are no possible next steps for the input 3.8.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 4 "
                }
            },
            "Step 4": {
                "Step": "9 - 5 = 4 (left: 5 4  -> Input: 10 2",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 5 = 4 (left: 5 4  -> Input: 10 2 -> 10 + 2 = 12 (left: 2 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 5 = 4 (left: 5 4  -> Input: 10 2 -> 10 + 2 = 12 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "8 + 8 = 16"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "7 12"
                }
            },
            "Step 7": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> Input: 3 6 9 12 -> 6 / 3 = 2 (left: 2 9 12) -> 9 - 2 = 7 (left: 7 12) -> 7 - 12 = -5 (left: -5)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "8 10 14"
                }
            },
            "Step 8": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 4 - 5 = -1 (left: -1) -> Invalid input. Please enter a valid mathematical operation using the numbers provided. -> 2 + 8 = 10 (left: 8 10 14) -> 8 * 10 = 80 (left: 80 14)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 - 5 = 4 (left: 5 5 4)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 5 9"
                }
            },
            "Step 1": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> Input: 3 7",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> Input: 3 7 -> 7 - 3 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> Input: 3 7 -> 7 - 3 = 4 (left: 4) -> 4 + 4 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 4 "
                }
            },
            "Step 4": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 5 / 4 = 1.25 (left: 1.25)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 5 / 4 = 1.25 (left: 1.25) -> 1.25 + 8 = 9.25 (left: 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 5 / 4 = 1.25 (left: 1.25) -> 1.25 + 8 = 9.25 (left: 8) -> 8 - 8 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "4 - 5 = -1"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "8 10 14"
                }
            },
            "Step 7": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 4 - 5 = -1 (left: -1) -> Invalid input. Please enter a valid mathematical operation using the numbers provided. -> 2 + 8 = 10 (left: 8 10 14) -> 10 + 14 = 24 (left: 8 24)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 4 - 5 = -1 (left: -1) -> Invalid input. Please enter a valid mathematical operation using the numbers provided. -> 2 + 8 = 10 (left: 8 10 14) -> 10 + 14 = 24 (left: 8 24) -> Possible",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "8 10 14"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 + 5 = 10 (left: 5 10 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 4 "
                }
            },
            "Step 1": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 4 / 5 =",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 4 / 5 = -> 4 / 5 = 0.8",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 4 / 5 = -> 4 / 5 = 0.8 -> 4 - 5 = -1",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "41"
                }
            },
            "Step 4": {
                "Step": "5 + 5 = 10 (left: 5 10 9) -> 5 * 10 = 50 (left: 9 50) -> 50 - 9 = 41 (left: 41) -> 41 + 2 = 43",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 5 = 10 (left: 5 10 9) -> 5 * 10 = 50 (left: 9 50) -> 50 - 9 = 41 (left: 41) -> 41 + 2 = 43 -> There are no possible next steps as the equation is already solved.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 5 = 10 (left: 5 10 9) -> 5 * 10 = 50 (left: 9 50) -> 50 - 9 = 41 (left: 41) -> 41 + 2 = 43 -> There are no possible next steps as the equation is already solved. -> None",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "No possible next steps with only one number provided."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "8 10 14"
                }
            },
            "Step 7": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 4 - 5 = -1 (left: -1) -> Invalid input. Please enter a valid mathematical operation using the numbers provided. -> 2 + 8 = 10 (left: 8 10 14) -> 10 / 8 = ",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 4 - 5 = -1 (left: -1) -> Invalid input. Please enter a valid mathematical operation using the numbers provided. -> 2 + 8 = 10 (left: 8 10 14) -> 10 / 8 =  -> 1. 10 / 8 = 1.25",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 / 5 = 1 (left: 1 5 9)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 5 9"
                }
            },
            "Step 1": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> 9 - 5 = 4 (left: 1 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> 9 - 5 = 4 (left: 1 4) -> 4 - 1 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> 9 - 5 = 4 (left: 1 4) -> 4 - 1 = 3 (left: 3) -> There are no possible next steps with the input: 3.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 4 "
                }
            },
            "Step 4": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 5 - 4 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 5 - 4 = 1 (left: 1) -> There is only one number given, so there are no possible operations to perform.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 5 - 4 = 1 (left: 1) -> There is only one number given, so there are no possible operations to perform. -> No possible next steps as there is only one number given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "7 12"
                }
            },
            "Step 7": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> Input: 3 6 9 12 -> 6 / 3 = 2 (left: 2 9 12) -> 9 - 2 = 7 (left: 7 12) -> 7 * 12 = 84 (left: 84)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "8 10 14"
                }
            },
            "Step 8": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 4 - 5 = -1 (left: -1) -> Invalid input. Please enter a valid mathematical operation using the numbers provided. -> 2 + 8 = 10 (left: 8 10 14) -> 8 * 10 = 80 (left: 80 14)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 + 5 = 10 (left: 5 10 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 4 "
                }
            },
            "Step 1": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 5 - 4 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 5 - 4 = 1 (left: 1) -> There are no possible next steps with just one number provided.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 5 - 4 = 1 (left: 1) -> There are no possible next steps with just one number provided. -> Please provide more than one number to generate possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 4 "
                }
            },
            "Step 4": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 6 / 3 = 2 (left: 2 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 6 / 3 = 2 (left: 2 9) -> 9 / 2 = 4.5 (left: 4.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 6 / 3 = 2 (left: 2 9) -> 9 / 2 = 4.5 (left: 4.5) -> There are no possible next steps for the input 4.5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "8 10 14"
                }
            },
            "Step 7": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 4 - 5 = -1 (left: -1) -> Invalid input. Please enter a valid mathematical operation using the numbers provided. -> 2 + 8 = 10 (left: 8 10 14) -> 14 - 10 = 4 (left: 8 4)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 4 - 5 = -1 (left: -1) -> Invalid input. Please enter a valid mathematical operation using the numbers provided. -> 2 + 8 = 10 (left: 8 10 14) -> 14 - 10 = 4 (left: 8 4) -> 8 + 4 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "8 10 14"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "9 - 5 = 4 (left: 5 4 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 4 "
                }
            },
            "Step 1": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 5 + 4 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 5 + 4 = 9 (left: 9) -> There are no possible next steps with the input 9.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 5 + 4 = 9 (left: 9) -> There are no possible next steps with the input 9. -> There are no possible next steps with the input 9.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "1 5 9"
                }
            },
            "Step 4": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> 1 + 5 = 6 (left: 6 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> 1 + 5 = 6 (left: 6 9) -> 6 + 9 = 15 (left: 9 15)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> 1 + 5 = 6 (left: 6 9) -> 6 + 9 = 15 (left: 9 15) -> 15 / 9 = 1.6666666666666667 (left: 1.6666666666666667)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "There are no possible next steps with the input: 3."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "8 10 14"
                }
            },
            "Step 7": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 4 - 5 = -1 (left: -1) -> Invalid input. Please enter a valid mathematical operation using the numbers provided. -> 2 + 8 = 10 (left: 8 10 14) -> 8 + 10 = 18 (left: 18 14)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 4 - 5 = -1 (left: -1) -> Invalid input. Please enter a valid mathematical operation using the numbers provided. -> 2 + 8 = 10 (left: 8 10 14) -> 8 + 10 = 18 (left: 18 14) -> 18 - 14 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "8 10 14"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "5 / 5 = 1 (left: 1 5 9)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 4 "
                }
            },
            "Step 1": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 5 * 4 = 20 (left: 20)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 5 * 4 = 20 (left: 20) -> 20 + 8 = 28 (left: 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 5 * 4 = 20 (left: 20) -> 20 + 8 = 28 (left: 8) -> 8 + 8 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 4 "
                }
            },
            "Step 4": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 5 + 4 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 5 + 4 = 9 (left: 9) -> 8 + 9 = 17 (left: 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 5 + 4 = 9 (left: 9) -> 8 + 9 = 17 (left: 9) -> There are no possible next steps with the input 9.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "8 10 14"
                }
            },
            "Step 7": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 4 - 5 = -1 (left: -1) -> Invalid input. Please enter a valid mathematical operation using the numbers provided. -> 2 + 8 = 10 (left: 8 10 14) -> 10 * 8 = 80 (left: 80 14)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 4 - 5 = -1 (left: -1) -> Invalid input. Please enter a valid mathematical operation using the numbers provided. -> 2 + 8 = 10 (left: 8 10 14) -> 10 * 8 = 80 (left: 80 14) -> 80 - 14 = 66 (left: 66)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "8 10 14"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "5 + 5 = 10 (left: 10 5 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "5 5 4"
                }
            },
            "Step 1": {
                "Step": "9 - 5 = 4 (left: 5 5 4) -> 5 - 4 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 5 = 4 (left: 5 5 4) -> 5 - 4 = 1 (left: 1) -> No possible next steps with only one number provided.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 5 = 4 (left: 5 5 4) -> 5 - 4 = 1 (left: 1) -> No possible next steps with only one number provided. -> No possible next steps with only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "1 5 9"
                }
            },
            "Step 4": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> Input: 3 6 9 12",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> Input: 3 6 9 12 -> 6 / 3 = 2 (left: 2 9 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> Input: 3 6 9 12 -> 6 / 3 = 2 (left: 2 9 12) -> 9 - 2 = 7 (left: 7 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "7 12"
                }
            },
            "Step 7": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> Input: 3 6 9 12 -> 6 / 3 = 2 (left: 2 9 12) -> 9 - 2 = 7 (left: 7 12) -> 12 / 7 = 1.71428571429 (left: 1.71428571429)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "7 12"
                }
            },
            "Step 8": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> Input: 3 6 9 12 -> 6 / 3 = 2 (left: 2 9 12) -> 9 - 2 = 7 (left: 7 12) -> 12 / 7 = 1.71429 (left: 1.71429)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "7 12"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "5 + 5 = 10 (left: 5 10 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 5 9"
                }
            },
            "Step 1": {
                "Step": "5 + 5 = 10 (left: 5 10 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 5 = 10 (left: 5 10 9) -> 5 * 10 = 50 (left: 9 50)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 5 = 10 (left: 5 10 9) -> 5 * 10 = 50 (left: 9 50) -> 50 - 9 = 41 (left: 41)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 5 9"
                }
            },
            "Step 4": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> 9 - 5 = 4 (left: 1 4)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> 9 - 5 = 4 (left: 1 4) -> 4 / 1 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> 9 - 5 = 4 (left: 1 4) -> 4 / 1 = 4 (left: 4) -> 4 + 4 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "7 12"
                }
            },
            "Step 7": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> Input: 3 6 9 12 -> 6 / 3 = 2 (left: 2 9 12) -> 9 - 2 = 7 (left: 7 12) -> 7 * 12 = 84 (left: 84)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "8 10 14"
                }
            },
            "Step 8": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 4 - 5 = -1 (left: -1) -> Invalid input. Please enter a valid mathematical operation using the numbers provided. -> 2 + 8 = 10 (left: 8 10 14) -> 10 / 8 = 1.25 (left: 1.25 14)",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "9 - 5 = 4 (left: 5 5 4)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 4 "
                }
            },
            "Step 1": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 5 / 4 = 1.25 (left: 1.25)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 5 / 4 = 1.25 (left: 1.25) -> 1.25 - 2 = -0.75 (left: -0.75)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 5 / 4 = 1.25 (left: 1.25) -> 1.25 - 2 = -0.75 (left: -0.75) -> -0.75 + 2 = 1.25 (left: 2)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "1 5 9"
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 4 "
                }
            },
            "Step 4": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 4 - 5 = -1 (left: -1)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 4 - 5 = -1 (left: -1) -> Invalid input. Please enter a valid mathematical operation using the numbers provided.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 4 - 5 = -1 (left: -1) -> Invalid input. Please enter a valid mathematical operation using the numbers provided. -> 2 + 8 = 10 (left: 8 10 14)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "8 10 14"
                }
            },
            "Step 7": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 4 - 5 = -1 (left: -1) -> Invalid input. Please enter a valid mathematical operation using the numbers provided. -> 2 + 8 = 10 (left: 8 10 14) -> 8 + 10 = 18 (left: 18 14)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 4 - 5 = -1 (left: -1) -> Invalid input. Please enter a valid mathematical operation using the numbers provided. -> 2 + 8 = 10 (left: 8 10 14) -> 8 + 10 = 18 (left: 18 14) -> 18 / 14 = 1.2857 (left: 1.2857)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "7 12"
                }
            }
        },
        "Input": "5 5 5 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "895": {
        "puzzle": "5 5 6 11",
        "Agent 0": {
            "Step 0": {
                "Step": "5 + 5 = 10 (left: 6 10 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "6 11 11"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 6 11 11) -> 11 - 6 = 5 (left: 5 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 6 11 11) -> 11 - 6 = 5 (left: 5 11) -> 5 / 11 = 0.4545 (left: 0.4545)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 6 11 11) -> 11 - 6 = 5 (left: 5 11) -> 5 / 11 = 0.4545 (left: 0.4545) -> 0.4545 + 2 = 2.4545 (left: 2.4545)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "1 6 11"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "22 + 2 = 24"
                }
            },
            "Step 4": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 11 + 5 = 16 (left: 6 16) -> 6 + 16 = 22 (left: 22) -> 22 + 2 = 24 -> 22 - 2 = 20 (left: 2 20 ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 11 + 5 = 16 (left: 6 16) -> 6 + 16 = 22 (left: 22) -> 22 + 2 = 24 -> 22 - 2 = 20 (left: 2 20  -> 20 / 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "22 + 2 = 24"
                }
            },
            "Step 6": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 11 + 5 = 16 (left: 6 16) -> 6 + 16 = 22 (left: 22) -> 22 + 2 = 24 -> 24 / 2 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "22 + 2 = 24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "22 + 2 = 24"
                }
            },
            "Step 7": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 11 + 5 = 16 (left: 6 16) -> 6 + 16 = 22 (left: 22) -> 22 + 2 = 24 -> None, as the equation 22 + 2 = 24 is already solved.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 11 + 5 = 16 (left: 6 16) -> 6 + 16 = 22 (left: 22) -> 22 + 2 = 24 -> None, as the equation 22 + 2 = 24 is already solved. -> None, as the equation 22 + 2 = 24 is already solved.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 * 5 = 25 (left: 6 11 25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "6 11 11"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 6 11 11) -> 5 + 10 = 15 (left: 15 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 6 11 11) -> 5 + 10 = 15 (left: 15 15) -> 15 * 15 = 225 (left: 225)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 6 11 11) -> 5 + 10 = 15 (left: 15 15) -> 15 * 15 = 225 (left: 225) -> 2 + 2 + 5 = 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "22 + 2 = 24"
                }
            },
            "Step 4": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 11 + 5 = 16 (left: 6 16) -> 6 + 16 = 22 (left: 22) -> 22 + 2 = 24 -> None",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "22 + 2 = 24"
                }
            },
            "Step 5": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 11 + 5 = 16 (left: 6 16) -> 6 + 16 = 22 (left: 22) -> 22 + 2 = 24 -> 22 / 2 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "5 6 11"
                }
            },
            "Step 6": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 6 + 5 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "22 + 2 = 24"
                }
            },
            "Step 7": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 11 + 5 = 16 (left: 6 16) -> 6 + 16 = 22 (left: 22) -> 22 + 2 = 24 -> 22 / 2 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "22 + 2 = 24"
                }
            },
            "Step 8": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 11 + 5 = 16 (left: 6 16) -> 6 + 16 = 22 (left: 22) -> 22 + 2 = 24 -> 22 / 2 = 11 (left: 11 2)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 5 = 11 (left: 5 11 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 5 "
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 5  -> 1 + 5 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 5  -> 1 + 5 = 6 (left: 6) -> 6 / 8 = 0.75 (left: 0.75)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 5 = 1 (left: 1 5  -> 1 + 5 = 6 (left: 6) -> 6 / 8 = 0.75 (left: 0.75) -> 0.75 + 2 = 2.75",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "5 6 11"
                }
            },
            "Step 4": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 6 / 5 = 1.2 (left: 1.2 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 6 / 5 = 1.2 (left: 1.2 11) -> Input: 5 3 6",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 6 / 5 = 1.2 (left: 1.2 11) -> Input: 5 3 6 -> 5 - 3 = 2 (left: 2 6)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "1 44"
                }
            },
            "Step 7": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 11 + 5 = 16 (left: 6 16) -> 6 + 16 = 22 (left: 22) -> 22 + 2 = 24 -> 24 - 2 = 22 (left: 22 22) -> 22 + 22 = 44 -> 22 / 22 = 1 (left: 1 44) -> 44 / 1 = 44 (left: 44)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "1 44"
                }
            },
            "Step 8": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 11 + 5 = 16 (left: 6 16) -> 6 + 16 = 22 (left: 22) -> 22 + 2 = 24 -> 24 - 2 = 22 (left: 22 22) -> 22 + 22 = 44 -> 22 / 22 = 1 (left: 1 44) -> 1 + 44 = 45 (left: 45)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "1 44"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 - 5 = 1 (left: 1 5 ",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "11 - 5 = 6 (left: 5 6 6) -> 5 * 6 = 30 (left: 30)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 5 = 6 (left: 5 6 6) -> 5 * 6 = 30 (left: 30) -> There are no possible next steps with the input of 30.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 5 = 6 (left: 5 6 6) -> 5 * 6 = 30 (left: 30) -> There are no possible next steps with the input of 30. -> None",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "5 6 11"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "22 + 2 = 24"
                }
            },
            "Step 4": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 11 + 5 = 16 (left: 6 16) -> 6 + 16 = 22 (left: 22) -> 22 + 2 = 24 -> 2 * 2 = 4 (left: 4 22 24)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 11 + 5 = 16 (left: 6 16) -> 6 + 16 = 22 (left: 22) -> 22 + 2 = 24 -> 2 * 2 = 4 (left: 4 22 24) -> 4 * 5 = 20 (left: 20 22)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 11 + 5 = 16 (left: 6 16) -> 6 + 16 = 22 (left: 22) -> 22 + 2 = 24 -> 2 * 2 = 4 (left: 4 22 24) -> 4 * 5 = 20 (left: 20 22) -> 20 + 22 = 42 (left: 42)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "22 + 2 = 24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "22 + 2 = 24"
                }
            },
            "Step 7": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 11 + 5 = 16 (left: 6 16) -> 6 + 16 = 22 (left: 22) -> 22 + 2 = 24 -> 22 + 2 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "22 + 2 = 24"
                }
            },
            "Step 8": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 11 + 5 = 16 (left: 6 16) -> 6 + 16 = 22 (left: 22) -> 22 + 2 = 24 -> 24 * 2 = 48 (left: 8 14 48)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 + 5 = 10 (left: 6 10 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "11 - 5 = 6 (left: 5 6 6) -> 9 / 3",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 5 = 6 (left: 5 6 6) -> 9 / 3 -> 9 / 3 = 3",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 5 = 6 (left: 5 6 6) -> 9 / 3 -> 9 / 3 = 3 -> 9 / 3 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "6 11 11"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "22 + 2 = 24"
                }
            },
            "Step 4": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 11 + 5 = 16 (left: 6 16) -> 6 + 16 = 22 (left: 22) -> 22 + 2 = 24 -> 22 * 8 =",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 11 + 5 = 16 (left: 6 16) -> 6 + 16 = 22 (left: 22) -> 22 + 2 = 24 -> 22 * 8 = -> 22 * 8 = 176",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 11 + 5 = 16 (left: 6 16) -> 6 + 16 = 22 (left: 22) -> 22 + 2 = 24 -> 22 * 8 = -> 22 * 8 = 176 -> 22 * 8 = 176 (left: 176)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "22 + 2 = 24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "22 + 2 = 24"
                }
            },
            "Step 7": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 11 + 5 = 16 (left: 6 16) -> 6 + 16 = 22 (left: 22) -> 22 + 2 = 24 -> 22 * 2 = 44 (left: 44)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "22 + 2 = 24"
                }
            },
            "Step 8": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 11 + 5 = 16 (left: 6 16) -> 6 + 16 = 22 (left: 22) -> 22 + 2 = 24 -> 24 - 8 = 16 (left: 8 16)",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "6 + 5 = 11 (left: 5 6 11)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 5 "
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 5  -> 1 * 5 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 5  -> 1 * 5 = 5 (left: 5) -> There are no possible next steps with the input of 5.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 5 = 1 (left: 1 5  -> 1 * 5 = 5 (left: 5) -> There are no possible next steps with the input of 5. -> There are no possible next steps with the input of 5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "22 + 2 = 24"
                }
            },
            "Step 4": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 11 + 5 = 16 (left: 6 16) -> 6 + 16 = 22 (left: 22) -> 22 + 2 = 24 -> 24 + 8 = 32 (left: 8 32)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 11 + 5 = 16 (left: 6 16) -> 6 + 16 = 22 (left: 22) -> 22 + 2 = 24 -> 24 + 8 = 32 (left: 8 32) -> 8 + 32 = 40 (left: 40)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "5 6 11"
                }
            },
            "Step 6": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 11 - 5 = 6 (left: 6 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "22 + 2 = 24"
                }
            },
            "Step 7": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 11 + 5 = 16 (left: 6 16) -> 6 + 16 = 22 (left: 22) -> 22 + 2 = 24 -> 22 - 2 = 20 (left: 20 2 24)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 11 + 5 = 16 (left: 6 16) -> 6 + 16 = 22 (left: 22) -> 22 + 2 = 24 -> 22 - 2 = 20 (left: 20 2 24) -> 20 + 2 = 22 (left: 22 24)",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 6 11 11)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 6 11"
                }
            },
            "Step 1": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 11 + 5 = 16 (left: 6 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 11 + 5 = 16 (left: 6 16) -> 6 + 16 = 22 (left: 22)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 11 + 5 = 16 (left: 6 16) -> 6 + 16 = 22 (left: 22) -> 22 + 2 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "5 6 11"
                }
            },
            "Step 4": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 5 / 6 = 0.8333",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 5 / 6 = 0.8333 -> Possible next steps:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 5 / 6 = 0.8333 -> Possible next steps: -> It seems like there was a repetition in the input values. Let's try to provide different numbers for the input to generate new possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "1 44"
                }
            },
            "Step 7": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 11 + 5 = 16 (left: 6 16) -> 6 + 16 = 22 (left: 22) -> 22 + 2 = 24 -> 24 - 2 = 22 (left: 22 22) -> 22 + 22 = 44 -> 22 / 22 = 1 (left: 1 44) -> 44 - 1 = 43 (left: 43) ",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "22 + 2 = 24"
                }
            },
            "Step 8": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 11 + 5 = 16 (left: 6 16) -> 6 + 16 = 22 (left: 22) -> 22 + 2 = 24 -> 22 / 2 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "22 + 2 = 24"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "11 - 5 = 6 (left: 5 6 6)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "6 11 11"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 6 11 11) -> 11 - 6 = 5 (left: 5 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 6 11 11) -> 11 - 6 = 5 (left: 5 11) -> Possible next steps:",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 6 11 11) -> 11 - 6 = 5 (left: 5 11) -> Possible next steps: -> It seems like the input is missing. Please provide the numbers to generate the possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "5 6 11"
                }
            },
            "Step 4": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 5 + 6 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 5 + 6 = 11 (left: 11) -> There are no possible next steps as there are no other numbers given to perform operations with.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 5 + 6 = 11 (left: 11) -> There are no possible next steps as there are no other numbers given to perform operations with. -> There are no possible next steps as there are no other numbers given to perform operations with.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "1 44"
                }
            },
            "Step 7": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 11 + 5 = 16 (left: 6 16) -> 6 + 16 = 22 (left: 22) -> 22 + 2 = 24 -> 24 - 2 = 22 (left: 22 22) -> 22 + 22 = 44 -> 22 / 22 = 1 (left: 1 44) -> 1 * 44 = 44 (left: 44)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "22 + 2 = 24"
                }
            },
            "Step 8": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 11 + 5 = 16 (left: 6 16) -> 6 + 16 = 22 (left: 22) -> 22 + 2 = 24 -> 22 * 2 = 44 (left: 44)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "22 + 2 = 24"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "5 / 5 = 1 (left: 1 6 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 6 11"
                }
            },
            "Step 1": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 11 / 5 = 2.2 (left: 2.2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 11 / 5 = 2.2 (left: 2.2) -> There are no possible next steps for the input 2.2 as it is a single number and not an equation or expression.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 11 / 5 = 2.2 (left: 2.2) -> There are no possible next steps for the input 2.2 as it is a single number and not an equation or expression. -> There are no possible next steps for the input 2.2 as it is a single number and not an equation or expression.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "22 + 2 = 24"
                }
            },
            "Step 4": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 11 + 5 = 16 (left: 6 16) -> 6 + 16 = 22 (left: 22) -> 22 + 2 = 24 -> 2 / 22 = 0.09090909090909091 (left: 0.09090909090909091)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "22 + 2 = 24"
                }
            },
            "Step 5": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 11 + 5 = 16 (left: 6 16) -> 6 + 16 = 22 (left: 22) -> 22 + 2 = 24 -> 24 - 2 = 22 (left: 22)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "22 + 2 = 24"
                }
            },
            "Step 6": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 11 + 5 = 16 (left: 6 16) -> 6 + 16 = 22 (left: 22) -> 22 + 2 = 24 -> 24 - 2 = 22 (left: 22 24 44)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "22 + 2 = 24"
                }
            },
            "Step 7": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 11 + 5 = 16 (left: 6 16) -> 6 + 16 = 22 (left: 22) -> 22 + 2 = 24 -> There are no possible next steps as the equation has been solved.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 11 + 5 = 16 (left: 6 16) -> 6 + 16 = 22 (left: 22) -> 22 + 2 = 24 -> There are no possible next steps as the equation has been solved. -> There are no possible next steps as the equation has been solved.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "6 + 5 = 11 (left: 5 11 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "6 11 11"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 6 11 11) -> Possible next steps:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 6 11 11) -> Possible next steps: -> 7 + 8 = 15 (left: 8 15)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 6 11 11) -> Possible next steps: -> 7 + 8 = 15 (left: 8 15) -> 8 * 15 = 120 (left: 120)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "6 11 11"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "22 + 2 = 24"
                }
            },
            "Step 4": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 11 + 5 = 16 (left: 6 16) -> 6 + 16 = 22 (left: 22) -> 22 + 2 = 24 -> 24 - 2 = 22 (left: 22 22)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 11 + 5 = 16 (left: 6 16) -> 6 + 16 = 22 (left: 22) -> 22 + 2 = 24 -> 24 - 2 = 22 (left: 22 22) -> 22 + 22 = 44",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 11 + 5 = 16 (left: 6 16) -> 6 + 16 = 22 (left: 22) -> 22 + 2 = 24 -> 24 - 2 = 22 (left: 22 22) -> 22 + 22 = 44 -> 22 / 22 = 1 (left: 1 44)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "22 + 2 = 24"
                }
            },
            "Step 7": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 11 + 5 = 16 (left: 6 16) -> 6 + 16 = 22 (left: 22) -> 22 + 2 = 24 -> 22 / 2 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "22 + 2 = 24"
                }
            },
            "Step 8": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 11 + 5 = 16 (left: 6 16) -> 6 + 16 = 22 (left: 22) -> 22 + 2 = 24 -> 22 - 2 = 20 (left: 20 24)",
                "Pruning": null
            }
        },
        "Input": "5 5 6 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "896": {
        "puzzle": "6 8 9 9",
        "Agent 0": {
            "Step 0": {
                "Step": "6 + 8 = 14 (left: 9 9 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 9"
                }
            },
            "Step 1": {
                "Step": "6 * 8 = 48 (left: 9 9 48)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 8 = 48 (left: 9 9 48) -> 9 * 9 = 81 (left: 48 81)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 9 9 48) -> 9 * 9 = 81 (left: 48 81) -> 48 - 81 = -33 (left: -33)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "8 10"
                }
            },
            "Step 4": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> Input: 2 10 10 -> 10 - 2 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "8 10"
                }
            },
            "Step 5": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> Input: 2 10 10 -> 10 - 2 = 8 (left: 8 10) -> 10 / 8 = 1.25 (left: 1.25)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "8 10"
                }
            },
            "Step 6": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> Input: 2 10 10 -> 10 - 2 = 8 (left: 8 10) -> 8 / 10 = 0.8 (left: 0.8)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "8 10"
                },
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "8 10"
                }
            },
            "Step 7": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> Input: 2 10 10 -> 10 - 2 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "8 10"
                }
            },
            "Step 8": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> Input: 2 10 10 -> 10 - 2 = 8 (left: 8 10) -> 8 / 10 = 0.8 (left: 0.8)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "Input numbers are needed to provide possible next steps."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 / 6 = 1.33 (left: 1.",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 9"
                }
            },
            "Step 1": {
                "Step": "6 + 8 = 14 (left: 9 9 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 8 = 14 (left: 9 9 14) -> 9 * 9 = 81 (left: 14 81)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 8 = 14 (left: 9 9 14) -> 9 * 9 = 81 (left: 14 81) -> 81 - 14 = 67 (left: 67)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "8 10"
                }
            },
            "Step 4": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> Input: 2 10 10 -> 10 - 2 = 8 (left: 8 10) -> 10 / 8 = 1.25 (left: 1.25)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "8 10"
                }
            },
            "Step 5": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> Input: 2 10 10 -> 10 - 2 = 8 (left: 8 10) -> 10 - 8 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "8 10"
                }
            },
            "Step 6": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> Input: 2 10 10 -> 10 - 2 = 8 (left: 8 10) -> 8 - 10 = -2 (left: -2)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "8 10"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "8 10"
                }
            },
            "Step 7": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> Input: 2 10 10 -> 10 - 2 = 8 (left: 8 10) -> 8 * 10 = 80 (left: 80)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "8 10"
                }
            },
            "Step 8": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> Input: 2 10 10 -> 10 - 2 = 8 (left: 8 10) -> 8 * 10 = 80 (left: 80)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "6 6"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 + 6 = 15 (left: 8 9 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 9"
                }
            },
            "Step 1": {
                "Step": "9 + 6 = 15 (left: 8 9 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 15 - 8 = 7 (left: 8 7)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 15 - 8 = 7 (left: 8 7) -> 8 * 7 = 56 (left: 56)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "8 10"
                }
            },
            "Step 4": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> Input: 2 10 10 -> 10 - 2 = 8 (left: 8 10) -> Possible next steps:",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> Input: 2 10 10 -> 10 - 2 = 8 (left: 8 10) -> Possible next steps: -> There are no possible next steps with the given numbers.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> Input: 2 10 10 -> 10 - 2 = 8 (left: 8 10) -> Possible next steps: -> There are no possible next steps with the given numbers. -> Input numbers are needed to provide possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "8 10"
                }
            },
            "Step 7": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> Input: 2 10 10 -> 10 - 2 = 8 (left: 8 10) -> 8 * 16 = 128 (left: 4 128)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> Input: 2 10 10 -> 10 - 2 = 8 (left: 8 10) -> 8 * 16 = 128 (left: 4 128) -> 128 - 4 = 124 (left: 124)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "Input numbers are needed to provide possible next steps."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 8 = 1 (left: 6 1 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 9"
                }
            },
            "Step 1": {
                "Step": "9 + 6 = 15 (left: 8 9 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 9 - 8 = 1 (left: 1 15)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 9 - 8 = 1 (left: 1 15) -> 1 * 15 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "8 10"
                }
            },
            "Step 4": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> Input: 2 10 10 -> 10 - 2 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18)  ",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "8 10"
                }
            },
            "Step 5": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> Input: 2 10 10 -> 10 - 2 = 8 (left: 8 10) -> 10 / 8 = 1.25 (left: 1.25)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "8 10"
                }
            },
            "Step 6": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> Input: 2 10 10 -> 10 - 2 = 8 (left: 8 10) -> 10 - 8 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "8 10"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "8 10"
                }
            },
            "Step 7": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> Input: 2 10 10 -> 10 - 2 = 8 (left: 8 10) -> 10 - 8 = 2 (left: 2) ",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "8 10"
                }
            },
            "Step 8": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> Input: 2 10 10 -> 10 - 2 = 8 (left: 8 10) -> 8 * 10 = 80 (left: 80)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "6 6"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "9 - 8 = 1 (left: 6 1 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1.33 9 9"
                }
            },
            "Step 1": {
                "Step": "8 / 6 = 1.33 (left: 1.33 9 9) -> 9 - 1.33 = 7.67 (left: 7",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 / 6 = 1.33 (left: 1.33 9 9) -> 9 - 1.33 = 7.67 (left: 7 -> 7 - 2 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 / 6 = 1.33 (left: 1.33 9 9) -> 9 - 1.33 = 7.67 (left: 7 -> 7 - 2 = 5 (left: 5) -> There are no possible next steps with just one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "8 10"
                }
            },
            "Step 4": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> Input: 2 10 10 -> 10 - 2 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "8 10"
                }
            },
            "Step 5": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> Input: 2 10 10 -> 10 - 2 = 8 (left: 8 10) -> 8 * 10 = 80 (left: 80) ",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "8 10"
                }
            },
            "Step 6": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> Input: 2 10 10 -> 10 - 2 = 8 (left: 8 10) -> 10 - 8 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "8 10"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "8 10"
                }
            },
            "Step 7": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> Input: 2 10 10 -> 10 - 2 = 8 (left: 8 10) -> 8 * 10 = 80 (left: 80)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "8 10"
                }
            },
            "Step 8": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> Input: 2 10 10 -> 10 - 2 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "Input numbers are needed to provide possible next steps."
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "8 / 6 = 1.33 (left: 1.33 9 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 9"
                }
            },
            "Step 1": {
                "Step": "8 / 6 = 1.3333 (left: 1",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 / 6 = 1.3333 (left: 1 -> There is only one number, so there are no possible next steps.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 / 6 = 1.3333 (left: 1 -> There is only one number, so there are no possible next steps. -> There are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "8 10"
                }
            },
            "Step 4": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> Input: 2 10 10 -> 10 - 2 = 8 (left: 8 10) -> Possible next steps:",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> Input: 2 10 10 -> 10 - 2 = 8 (left: 8 10) -> Possible next steps: -> - 7 + 8 = 15 (left: 8 15)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> Input: 2 10 10 -> 10 - 2 = 8 (left: 8 10) -> Possible next steps: -> - 7 + 8 = 15 (left: 8 15) -> 8 / 15 = 0.5333 (left: 0.5333)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "8 10"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "8 10"
                }
            },
            "Step 7": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> Input: 2 10 10 -> 10 - 2 = 8 (left: 8 10) -> Possible next steps:",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> Input: 2 10 10 -> 10 - 2 = 8 (left: 8 10) -> Possible next steps: -> There are no possible next steps as the input values have been exhausted.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 9"
                }
            },
            "Step 1": {
                "Step": "8 - 6 = 2 (left: 2 9 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> Input: 2 10 10",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> Input: 2 10 10 -> 10 - 2 = 8 (left: 8 10)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "8 10"
                }
            },
            "Step 4": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> Input: 2 10 10 -> 10 - 2 = 8 (left: 8 10) -> 8 * 10 = 80 (left: 80)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "8 10"
                }
            },
            "Step 5": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> Input: 2 10 10 -> 10 - 2 = 8 (left: 8 10) -> Input: 18 2",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> Input: 2 10 10 -> 10 - 2 = 8 (left: 8 10) -> Input: 18 2 -> 5 + 10 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "8 10"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "8 10"
                }
            },
            "Step 7": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> Input: 2 10 10 -> 10 - 2 = 8 (left: 8 10) -> 8 / 10 = 0.8 (left: 0.8)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "8 10"
                }
            },
            "Step 8": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> Input: 2 10 10 -> 10 - 2 = 8 (left: 8 10) -> 14",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "6 6"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "6 * 8 = 48 (left: 9 9 48)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 9"
                }
            },
            "Step 1": {
                "Step": "6 + 8 = 14 (left: 9 9 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 8 = 14 (left: 9 9 14) -> 9 + 9 = 18 (left: 14 18)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 8 = 14 (left: 9 9 14) -> 9 + 9 = 18 (left: 14 18) -> 14 + 18 = 32 (left: 32)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "8 10"
                }
            },
            "Step 4": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> Input: 2 10 10 -> 10 - 2 = 8 (left: 8 10) -> 10 / 8 = 1.25 (left: 1.25)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "8 10"
                }
            },
            "Step 5": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> Input: 2 10 10 -> 10 - 2 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "8 10"
                }
            },
            "Step 6": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> Input: 2 10 10 -> 10 - 2 = 8 (left: 8 10) -> 10 - 8 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "8 10"
                },
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "8 10"
                }
            },
            "Step 7": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> Input: 2 10 10 -> 10 - 2 = 8 (left: 8 10) -> 8 * 10 = 80 (left: 80)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "8 10"
                }
            },
            "Step 8": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> Input: 2 10 10 -> 10 - 2 = 8 (left: 8 10) -> 6 - 2 = 4 (left: 4 4)",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "8 - 6 = 2 (left: 2 9 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 1 9"
                }
            },
            "Step 1": {
                "Step": "9 - 8 = 1 (left: 6 1 9) -> 6 / 1 = 6 (left: 6 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 8 = 1 (left: 6 1 9) -> 6 / 1 = 6 (left: 6 9) -> 6 + 9 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 8 = 1 (left: 6 1 9) -> 6 / 1 = 6 (left: 6 9) -> 6 + 9 = 15 (left: 15) -> None, since there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "8 10"
                }
            },
            "Step 4": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> Input: 2 10 10 -> 10 - 2 = 8 (left: 8 10) -> 8 / 10 = 0.8 (left: 0.8)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "8 10"
                }
            },
            "Step 5": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> Input: 2 10 10 -> 10 - 2 = 8 (left: 8 10) -> 10 - 8 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "8 10"
                }
            },
            "Step 6": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> Input: 2 10 10 -> 10 - 2 = 8 (left: 8 10) -> 10 - 8 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "8 10"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "8 10"
                }
            },
            "Step 7": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> Input: 2 10 10 -> 10 - 2 = 8 (left: 8 10) -> 8 + 10 = 18",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> Input: 2 10 10 -> 10 - 2 = 8 (left: 8 10) -> 8 + 10 = 18 -> 10 - 8 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "Input numbers are needed to provide possible next steps."
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "8 / 6 = 1.33 (left: 1.33 9 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 9"
                }
            },
            "Step 1": {
                "Step": "9 / 6 = 1.5 (left: 1.",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 6 = 1.5 (left: 1. -> There are no possible next steps with just the input \"1.\" Please provide additional numbers to continue the calculations.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 / 6 = 1.5 (left: 1. -> There are no possible next steps with just the input \"1.\" Please provide additional numbers to continue the calculations. -> 1 / 2 = 0.5 (left: 0.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "8 10"
                }
            },
            "Step 4": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> Input: 2 10 10 -> 10 - 2 = 8 (left: 8 10) -> Input: 4 8 14",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> Input: 2 10 10 -> 10 - 2 = 8 (left: 8 10) -> Input: 4 8 14 -> 8 / 4 = 2 (left: 2 8 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> Input: 2 10 10 -> 10 - 2 = 8 (left: 8 10) -> Input: 4 8 14 -> 8 / 4 = 2 (left: 2 8 14) -> 14 - 8 = 6 (left: 6 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "8 10"
                }
            },
            "Step 7": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> Input: 2 10 10 -> 10 - 2 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "8 10"
                }
            },
            "Step 8": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> Input: 2 10 10 -> 10 - 2 = 8 (left: 8 10) -> Possible next steps:",
                "Pruning": null
            }
        },
        "Input": "6 8 9 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "897": {
        "puzzle": "3 3 6 13",
        "Agent 0": {
            "Step 0": {
                "Step": "6 * 3 = 18 (left: 18 6 ",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "18 6 "
                }
            },
            "Step 1": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 4 5\nSteps:\n2 * 5 = 10 (left: 3 4 10)\n4 - 3 = 1 (left: 1 10)\n10 * 1 = 10 (left: 10)\n10 + 10 = 20 (left: 20)\n20 + 4 = 24 (left: 24)\nAnswer: ((2 * 5) + (4 - 3)) *",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "6 6 13"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "- Multiply two numbers"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 13 + 9 = 22 (left:  -> Please provide a set of numbers to continue with the calculations. -> - Multiply two numbers -> 2 * 14 = 28 (left: 8 28 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 13 + 9 = 22 (left:  -> Please provide a set of numbers to continue with the calculations. -> - Multiply two numbers -> 2 * 14 = 28 (left: 8 28 8) -> 28 - 8 = 20 (left: 20 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 13 + 9 = 22 (left:  -> Please provide a set of numbers to continue with the calculations. -> - Multiply two numbers -> 2 * 14 = 28 (left: 8 28 8) -> 28 - 8 = 20 (left: 20 8) -> 20 + 8 = 28 (left: 8 28)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "- Multiply two numbers"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 13 + 9 = 22 (left:  -> Please provide a set of numbers to continue with the calculations. -> - Multiply two numbers -> - 14 * 14 = 196 (left: 2 196)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 13 + 9 = 22 (left:  -> Please provide a set of numbers to continue with the calculations. -> - Multiply two numbers -> - 14 * 14 = 196 (left: 2 196) -> 196 / 2 = 98 (left: 98)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "2 64 14"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 3 7 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "9 6 13"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 + 6 = 15 (left: 15 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 + 6 = 15 (left: 15 13) -> 15 * 13 = 195 (left: 195)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 + 6 = 15 (left: 15 13) -> 15 * 13 = 195 (left: 195) -> 1 * 95 = 95 (left: 95)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "18 6 "
                },
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "- Multiply two numbers"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 13 + 9 = 22 (left:  -> Please provide a set of numbers to continue with the calculations. -> - Multiply two numbers -> 2 * 14 = 28 (left: 28 112)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 13 + 9 = 22 (left:  -> Please provide a set of numbers to continue with the calculations. -> - Multiply two numbers -> 2 * 14 = 28 (left: 28 112) -> 112 / 4 = 28 (left: 28)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "- Multiply two numbers"
                }
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 13 + 9 = 22 (left:  -> Please provide a set of numbers to continue with the calculations. -> - Multiply two numbers -> 8 * 8 = 64 (left: 2 64 14)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "- Multiply two numbers"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 13 + 9 = 22 (left:  -> Please provide a set of numbers to continue with the calculations. -> - Multiply two numbers -> 14 * 8 = 112 (left: 2 112 8)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 13 + 9 = 22 (left:  -> Please provide a set of numbers to continue with the calculations. -> - Multiply two numbers -> 14 * 8 = 112 (left: 2 112 8) -> 112 - 2 = 110 (left: 8 110)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 6 6 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "9 6 13"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 6 * 13 = 78 (left: 9 78)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 6 * 13 = 78 (left: 9 78) -> 78 / 9 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 6 * 13 = 78 (left: 9 78) -> 78 / 9 = 8 (left: 8) -> 8 * 8 = 64 (left: 64)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "9 6 13"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "9 6 13"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 * 6 = 54 (left: 13 54)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 * 6 = 54 (left: 13 54) -> 54 - 13 = 41 (left: 41)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 * 6 = 54 (left: 13 54) -> 54 - 13 = 41 (left: 41) -> 41 * 2 = 82",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "2 64 14"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 13 + 9 = 22 (left:  -> Please provide a set of numbers to continue with the calculations. -> - Multiply two numbers -> 8 * 8 = 64 (left: 2 64 14) -> 2 * 64 = 128 (left: 14 128)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 13 + 9 = 22 (left:  -> Please provide a set of numbers to continue with the calculations. -> - Multiply two numbers -> 8 * 8 = 64 (left: 2 64 14) -> 2 * 64 = 128 (left: 14 128) -> 14 / 128 = 0.109375 (left: 0.109375)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "2 64 14"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 / 3 = 2 (left: 2 6 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "9 6 13"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 13 - 6 = 7 (left: 9 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 13 - 6 = 7 (left: 9 7) -> 9 + 7 = 16 (left: 16)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 13 - 6 = 7 (left: 9 7) -> 9 + 7 = 16 (left: 16) -> 16 + 16 = 32",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "9 6 13"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 6 - 13 = -7 (left: -7 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 6 - 13 = -7 (left: -7 13) -> -7 / 13 = -0.5385 (left: -0.5385)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 6 - 13 = -7 (left: -7 13) -> -7 / 13 = -0.5385 (left: -0.5385) -> -0.5385 + 2 = 1.4615",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "0.375 8"
                }
            },
            "Step 7": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 / 6 = 3 (left: 3) -> 3 -> 3 / 8 = 0.375 (left: 0.375 8) -> 8 - 0.375 = 7.625 (left: 7.625)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "- Multiply two numbers"
                }
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 13 + 9 = 22 (left:  -> Please provide a set of numbers to continue with the calculations. -> - Multiply two numbers -> 8 * 14 = 112 (left: 2 8 112)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 6 13)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "9 6 13"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 + 6 = 15 (left: 15 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 + 6 = 15 (left: 15 13) -> 15 / 13 = 1.15 (left: 1.15)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 + 6 = 15 (left: 15 13) -> 15 / 13 = 1.15 (left: 1.15) -> 1.15 - 2 = -0.85 (left: -2)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "18 6 "
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "18 6 "
                }
            },
            "Step 4": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 / 6 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 / 6 = 3 (left: 3) -> 3",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 / 6 = 3 (left: 3) -> 3 -> 3 / 8 = 0.375 (left: 0.375 8)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "- Multiply two numbers"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 13 + 9 = 22 (left:  -> Please provide a set of numbers to continue with the calculations. -> - Multiply two numbers -> 8 * 8 = 64 (left: 2 64 14)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 13 + 9 = 22 (left:  -> Please provide a set of numbers to continue with the calculations. -> - Multiply two numbers -> 8 * 8 = 64 (left: 2 64 14) -> 14 / 2 = 7 (left: 7 64)",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 6 6 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 13 18"
                }
            },
            "Step 1": {
                "Step": "6 * 3 = 18 (left: 3 13 18) -> 13 - 3 = 10 (left: 10 18)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 3 = 18 (left: 3 13 18) -> 13 - 3 = 10 (left: 10 18) -> 18 / 10 = 1.8 (left: 1.8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 3 = 18 (left: 3 13 18) -> 13 - 3 = 10 (left: 10 18) -> 18 / 10 = 1.8 (left: 1.8) -> There are no possible next steps for the input 1.8.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "18 6 "
                }
            },
            "Step 4": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 6 - 18 = -12 (left: -12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 6 - 18 = -12 (left: -12) -> There are no possible next steps as the input value is not part of the previous list of numbers.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 6 - 18 = -12 (left: -12) -> There are no possible next steps as the input value is not part of the previous list of numbers. -> There are no possible next steps as the input value is not part of the previous list of numbers.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "- Multiply two numbers"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 13 + 9 = 22 (left:  -> Please provide a set of numbers to continue with the calculations. -> - Multiply two numbers -> 8 * 8 = 64 (left: 2 64 14)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 13 + 9 = 22 (left:  -> Please provide a set of numbers to continue with the calculations. -> - Multiply two numbers -> 8 * 8 = 64 (left: 2 64 14) -> 14 - 2 = 12 (left: 12 14)",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 * 3 = 18 (left: 3 13 18)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "9 6 13"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 13 + 9 = 22 (left: ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 13 + 9 = 22 (left:  -> Please provide a set of numbers to continue with the calculations.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 13 + 9 = 22 (left:  -> Please provide a set of numbers to continue with the calculations. -> - Multiply two numbers",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "18 6 "
                }
            },
            "Step 4": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 - 6 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 - 6 = 12 (left: 12) -> 12 * 2 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 - 6 = 12 (left: 12) -> 12 * 2 = 24 (left: 24) -> Answer: ((3 * 6) - 3) * 2 = 24",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "- Multiply two numbers"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "- Multiply two numbers"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 13 + 9 = 22 (left:  -> Please provide a set of numbers to continue with the calculations. -> - Multiply two numbers -> 14 * 2 = 28 (left: 28)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "- Multiply two numbers"
                }
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 13 + 9 = 22 (left:  -> Please provide a set of numbers to continue with the calculations. -> - Multiply two numbers -> 8 * 8 = 64 (left: 2 64 14)",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 3 7 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "9 6 13"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 - 6 = 3 (left: 3 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 - 6 = 3 (left: 3 13) -> 13 / 3 = 4.33 (left: 4.33)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 - 6 = 3 (left: 3 13) -> 13 / 3 = 4.33 (left: 4.33) -> There are no possible next steps for the input 4.33 as it is a single number and not a mathematical equation.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "3 13 18"
                }
            },
            "Step 4": {
                "Step": "6 * 3 = 18 (left: 3 13 18) -> 3 * 13 = 39 (left: 39 18)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 * 3 = 18 (left: 3 13 18) -> 3 * 13 = 39 (left: 39 18) -> 39 + 18 = 57 (left: 57)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 3 = 18 (left: 3 13 18) -> 3 * 13 = 39 (left: 39 18) -> 39 + 18 = 57 (left: 57) -> 5 + 7 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "- Multiply two numbers"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "- Multiply two numbers"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 13 + 9 = 22 (left:  -> Please provide a set of numbers to continue with the calculations. -> - Multiply two numbers -> 2 * 14 = 28 (left: 8 28 8)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 13 + 9 = 22 (left:  -> Please provide a set of numbers to continue with the calculations. -> - Multiply two numbers -> 2 * 14 = 28 (left: 8 28 8) -> 28 - 8 = 20 (left: 20 8)",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 6 6 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 13 18"
                }
            },
            "Step 1": {
                "Step": "6 * 3 = 18 (left: 3 13 18) -> 3 + 13 = 16 (left: 16 18)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 3 = 18 (left: 3 13 18) -> 3 + 13 = 16 (left: 16 18) -> 16 * 18 = 288 (left: 288)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 3 = 18 (left: 3 13 18) -> 3 + 13 = 16 (left: 16 18) -> 16 * 18 = 288 (left: 288) -> 2 + 8 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "3 13 18"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "18 6 "
                }
            },
            "Step 4": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 / 6 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 / 6 = 3 (left: 3) -> There are no possible next steps with just the number 3.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 / 6 = 3 (left: 3) -> There are no possible next steps with just the number 3. -> 3 + 3 = 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "- Multiply two numbers"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 13 + 9 = 22 (left:  -> Please provide a set of numbers to continue with the calculations. -> - Multiply two numbers -> 8 * 8 = 64 (left: 2 64 14)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 13 + 9 = 22 (left:  -> Please provide a set of numbers to continue with the calculations. -> - Multiply two numbers -> 8 * 8 = 64 (left: 2 64 14) -> 2 * 64 = 128 (left: 14 128)",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 6 13)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "18 6 "
                }
            },
            "Step 1": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 * 6 = 108 (left: 108)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 * 6 = 108 (left: 108) -> 10 * 8 = 80 (left: 80)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 * 6 = 108 (left: 108) -> 10 * 8 = 80 (left: 80) -> 80 + 2 = 82 (left: 2)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "9 6 13"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "18 6 "
                }
            },
            "Step 4": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 / 6 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 / 6 = 3 (left: 3) -> 3 + 7 = 10 (left: 8 8 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 / 6 = 3 (left: 3) -> 3 + 7 = 10 (left: 8 8 10) -> 10 + 8 = 18 (left: 8 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "0.375 8"
                }
            },
            "Step 7": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 / 6 = 3 (left: 3) -> 3 -> 3 / 8 = 0.375 (left: 0.375 8) -> 8 - 0.375 = 7.625 (left: 7.625)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "- Multiply two numbers"
                }
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 13 + 9 = 22 (left:  -> Please provide a set of numbers to continue with the calculations. -> - Multiply two numbers -> Input: 28 112",
                "Pruning": null
            }
        },
        "Input": "3 3 6 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "898": {
        "puzzle": "6 8 9 11",
        "Agent 0": {
            "Step 0": {
                "Step": "6 * 8 = 48 (left: 9 11 48)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "8 11 15"
                }
            },
            "Step 1": {
                "Step": "6 + 9 = 15 (left: 8 11 15) -> 15 - 8 = 7 (left: 7 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 9 = 15 (left: 8 11 15) -> 15 - 8 = 7 (left: 7 15) -> 7 / 15 = 0.4666666666666667 (left: 0.4666666666666667)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 9 = 15 (left: 8 11 15) -> 15 - 8 = 7 (left: 7 15) -> 7 / 15 = 0.4666666666666667 (left: 0.4666666666666667) -> There are no possible next steps for the input 0.4666666666666667 as it is already a single value.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "2.7273"
                }
            },
            "Step 4": {
                "Step": "11 - 6 = 5 -> 11 / 6 = 1.8333 (left: 1.8333 5) -> 5 / 1.8333 = 2.7273 (left: 2.7273) -> 2.7273 + 2 = 4.7273",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 6 = 5 -> 11 / 6 = 1.8333 (left: 1.8333 5) -> 5 / 1.8333 = 2.7273 (left: 2.7273) -> 2.7273 + 2 = 4.7273 -> 2 + 2 = 4 (left: 4 2.7273)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 6 = 5 -> 11 / 6 = 1.8333 (left: 1.8333 5) -> 5 / 1.8333 = 2.7273 (left: 2.7273) -> 2.7273 + 2 = 4.7273 -> 2 + 2 = 4 (left: 4 2.7273) -> 4 * 2.7273 = 10.9092 (left: 2.7273 10.9092)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "3 3"
                }
            },
            "Step 7": {
                "Step": "9 - 6 = -> 9 - 6 = 3 -> 9 - 6 = 3 (left: 3 3) -> 3 + 3 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "3 3"
                }
            },
            "Step 8": {
                "Step": "9 - 6 = -> 9 - 6 = 3 -> 9 - 6 = 3 (left: 3 3) -> 5 * 10 = 50 (left: 50)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "2.7273 10.9092"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 + 6 = 15 (left: 8 11 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "9 11 48"
                }
            },
            "Step 1": {
                "Step": "6 * 8 = 48 (left: 9 11 48) -> 48 - 9 = 39 (left: 9 39)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 8 = 48 (left: 9 11 48) -> 48 - 9 = 39 (left: 9 39) -> 39 / 9 = 4.333333333333333 (left: 4.333333333333333)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 9 11 48) -> 48 - 9 = 39 (left: 9 39) -> 39 / 9 = 4.333333333333333 (left: 4.333333333333333) -> There are no possible next steps for the input 4.333333333333333.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "3 3"
                }
            },
            "Step 4": {
                "Step": "9 - 6 = -> 9 - 6 = 3 -> 9 - 6 = 3 (left: 3 3) -> 3 * 3 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "3 3"
                }
            },
            "Step 5": {
                "Step": "9 - 6 = -> 9 - 6 = 3 -> 9 - 6 = 3 (left: 3 3) -> 3 / 3 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "3 3"
                }
            },
            "Step 6": {
                "Step": "9 - 6 = -> 9 - 6 = 3 -> 9 - 6 = 3 (left: 3 3) -> 3 / 3 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "3 3"
                },
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "3 3"
                }
            },
            "Step 7": {
                "Step": "9 - 6 = -> 9 - 6 = 3 -> 9 - 6 = 3 (left: 3 3) -> 3 + 3 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "3 3"
                }
            },
            "Step 8": {
                "Step": "9 - 6 = -> 9 - 6 = 3 -> 9 - 6 = 3 (left: 3 3) -> 3 / 3 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "2.7273 10.9092"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 8 = 14 (left: 9 11 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 11"
                }
            },
            "Step 1": {
                "Step": "6 * 8 = 48 (left: 9 11 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 8 = 48 (left: 9 11  -> 9 - 11 = -2 (left: -2 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 9 11  -> 9 - 11 = -2 (left: -2 11) -> 11 / -2 = -5.5 (left: -5.5)  ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "3 3"
                }
            },
            "Step 4": {
                "Step": "9 - 6 = -> 9 - 6 = 3 -> 9 - 6 = 3 (left: 3 3) -> 3 * 3 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "3 3"
                }
            },
            "Step 5": {
                "Step": "9 - 6 = -> 9 - 6 = 3 -> 9 - 6 = 3 (left: 3 3) -> 3 + 3 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "3 3"
                }
            },
            "Step 6": {
                "Step": "9 - 6 = -> 9 - 6 = 3 -> 9 - 6 = 3 (left: 3 3) -> 3 * 3 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "3 3"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "3 3"
                }
            },
            "Step 7": {
                "Step": "9 - 6 = -> 9 - 6 = 3 -> 9 - 6 = 3 (left: 3 3) -> 3 * 3 = 9 (left: 3 9)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 6 = -> 9 - 6 = 3 -> 9 - 6 = 3 (left: 3 3) -> 3 * 3 = 9 (left: 3 9) -> 3 + 9 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "2.7273 10.9092"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "11 - 9 = 2 (left: 6 2 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 11"
                }
            },
            "Step 1": {
                "Step": "11 - 6 = 5",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 6 = 5 -> 11 / 6 = 1.8333 (left: 1.8333 5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 6 = 5 -> 11 / 6 = 1.8333 (left: 1.8333 5) -> 5 / 1.8333 = 2.7273 (left: 2.7273)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "3 3"
                }
            },
            "Step 4": {
                "Step": "9 - 6 = -> 9 - 6 = 3 -> 9 - 6 = 3 (left: 3 3) -> 3 * 3 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "3 3"
                }
            },
            "Step 5": {
                "Step": "9 - 6 = -> 9 - 6 = 3 -> 9 - 6 = 3 (left: 3 3) -> 3 - 3 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "8 11 15"
                }
            },
            "Step 6": {
                "Step": "6 + 9 = 15 (left: 8 11 15) -> 8 * 11 = 88 (left: 88 15)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "2.7273 10.9092"
                }
            },
            "Step 7": {
                "Step": "11 - 6 = 5 -> 11 / 6 = 1.8333 (left: 1.8333 5) -> 5 / 1.8333 = 2.7273 (left: 2.7273) -> 2.7273 + 2 = 4.7273 -> 2 + 2 = 4 (left: 4 2.7273) -> 4 * 2.7273 = 10.9092 (left: 2.7273 10.9092) -> 10.9092 / 2.7273 = 4 (left: 4 10.9092)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 6 = 5 -> 11 / 6 = 1.8333 (left: 1.8333 5) -> 5 / 1.8333 = 2.7273 (left: 2.7273) -> 2.7273 + 2 = 4.7273 -> 2 + 2 = 4 (left: 4 2.7273) -> 4 * 2.7273 = 10.9092 (left: 2.7273 10.9092) -> 10.9092 / 2.7273 = 4 (left: 4 10.9092) -> 4 * 10.9092 = 43.6368 (left: 43.6368)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "2.7273 10.9092"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 8 11 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 11"
                }
            },
            "Step 1": {
                "Step": "11 - 6 = 5 (left: 5 9 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 6 = 5 (left: 5 9 11) -> 9 * 11 = 99 (left: 5 99)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 6 = 5 (left: 5 9 11) -> 9 * 11 = 99 (left: 5 99) -> 99 / ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "3 3"
                }
            },
            "Step 4": {
                "Step": "9 - 6 = -> 9 - 6 = 3 -> 9 - 6 = 3 (left: 3 3) -> 3 - 3 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "3 3"
                }
            },
            "Step 5": {
                "Step": "9 - 6 = -> 9 - 6 = 3 -> 9 - 6 = 3 (left: 3 3) -> 3 * 3 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "3 3"
                }
            },
            "Step 6": {
                "Step": "9 - 6 = -> 9 - 6 = 3 -> 9 - 6 = 3 (left: 3 3) -> 3 + 3 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "3 3"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "3 3"
                }
            },
            "Step 7": {
                "Step": "9 - 6 = -> 9 - 6 = 3 -> 9 - 6 = 3 (left: 3 3) -> 3 * 3 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "3 3"
                }
            },
            "Step 8": {
                "Step": "9 - 6 = -> 9 - 6 = 3 -> 9 - 6 = 3 (left: 3 3) -> 3 + 3 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "2.7273 10.9092"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 11"
                }
            },
            "Step 1": {
                "Step": "11",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 -> Input: 5 7",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 -> Input: 5 7 -> Input: 3 9 1",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "3 3"
                }
            },
            "Step 4": {
                "Step": "9 - 6 = -> 9 - 6 = 3 -> 9 - 6 = 3 (left: 3 3) -> 3 * 3 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "3 3"
                }
            },
            "Step 5": {
                "Step": "9 - 6 = -> 9 - 6 = 3 -> 9 - 6 = 3 (left: 3 3) -> 3 + 3 = 6 (left: 6) ",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "3 3"
                }
            },
            "Step 6": {
                "Step": "9 - 6 = -> 9 - 6 = 3 -> 9 - 6 = 3 (left: 3 3) -> 3 / 3 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "3 3"
                },
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "3 3"
                }
            },
            "Step 7": {
                "Step": "9 - 6 = -> 9 - 6 = 3 -> 9 - 6 = 3 (left: 3 3) -> 3 + 3 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "3 3"
                }
            },
            "Step 8": {
                "Step": "9 - 6 = -> 9 - 6 = 3 -> 9 - 6 = 3 (left: 3 3) -> 3 * 3 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "2.7273 10.9092"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "8 + 9 = 17 (left: 6 11 17)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 2 "
                }
            },
            "Step 1": {
                "Step": "11 - 9 = 2 (left: 6 2  -> 6 * 2 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 9 = 2 (left: 6 2  -> 6 * 2 = 12 (left: 12) -> 12 / 2 = 6 (left: 6 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 9 = 2 (left: 6 2  -> 6 * 2 = 12 (left: 12) -> 12 / 2 = 6 (left: 6 8) -> 6 * 8 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "6 2 "
                },
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "3 3"
                }
            },
            "Step 4": {
                "Step": "9 - 6 = -> 9 - 6 = 3 -> 9 - 6 = 3 (left: 3 3) -> 3 / 3 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "3 3"
                }
            },
            "Step 5": {
                "Step": "9 - 6 = -> 9 - 6 = 3 -> 9 - 6 = 3 (left: 3 3) -> 3 + 3 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "3 3"
                }
            },
            "Step 6": {
                "Step": "9 - 6 = -> 9 - 6 = 3 -> 9 - 6 = 3 (left: 3 3) -> 3 * 3 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "3 3"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "3 3"
                }
            },
            "Step 7": {
                "Step": "9 - 6 = -> 9 - 6 = 3 -> 9 - 6 = 3 (left: 3 3) -> 3 * 3 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "3 3"
                }
            },
            "Step 8": {
                "Step": "9 - 6 = -> 9 - 6 = 3 -> 9 - 6 = 3 (left: 3 3) -> 3 + 3 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "2.7273 10.9092"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "6 + 8 = 14 (left: 9 11 14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "8 11 15"
                }
            },
            "Step 1": {
                "Step": "9 + 6 = 15 (left: 8 11 15) -> 11 + 15 = 26 (left: 8 26)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 6 = 15 (left: 8 11 15) -> 11 + 15 = 26 (left: 8 26) -> 8 + 26 = 34 (left: 34)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 + 6 = 15 (left: 8 11 15) -> 11 + 15 = 26 (left: 8 26) -> 8 + 26 = 34 (left: 34) -> 34 + 2 = 36",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "3 3"
                }
            },
            "Step 4": {
                "Step": "9 - 6 = -> 9 - 6 = 3 -> 9 - 6 = 3 (left: 3 3) -> 3 + 3 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "3 3"
                }
            },
            "Step 5": {
                "Step": "9 - 6 = -> 9 - 6 = 3 -> 9 - 6 = 3 (left: 3 3) -> 3 + 3 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "3 3"
                }
            },
            "Step 6": {
                "Step": "9 - 6 = -> 9 - 6 = 3 -> 9 - 6 = 3 (left: 3 3) -> 3 / 3 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "3 3"
                },
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "3 3"
                }
            },
            "Step 7": {
                "Step": "9 - 6 = -> 9 - 6 = 3 -> 9 - 6 = 3 (left: 3 3) -> 3 / 3 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "3 3"
                }
            },
            "Step 8": {
                "Step": "9 - 6 = -> 9 - 6 = 3 -> 9 - 6 = 3 (left: 3 3) -> 3 - 3 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "2.7273 10.9092"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "8 + 9 = 17 (left: 6 11 17)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 11"
                }
            },
            "Step 1": {
                "Step": "9 - 6 =",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 6 = -> 9 - 6 = 3",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 6 = -> 9 - 6 = 3 -> 9 - 6 = 3 (left: 3 3)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "3 3"
                }
            },
            "Step 4": {
                "Step": "9 - 6 = -> 9 - 6 = 3 -> 9 - 6 = 3 (left: 3 3) -> 3 * 3 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "3 3"
                }
            },
            "Step 5": {
                "Step": "9 - 6 = -> 9 - 6 = 3 -> 9 - 6 = 3 (left: 3 3) -> 3 + 3 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "3 3"
                }
            },
            "Step 6": {
                "Step": "9 - 6 = -> 9 - 6 = 3 -> 9 - 6 = 3 (left: 3 3) -> 3 - 3 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "3 3"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "3 3"
                }
            },
            "Step 7": {
                "Step": "9 - 6 = -> 9 - 6 = 3 -> 9 - 6 = 3 (left: 3 3) -> 3 - 3 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "3 3"
                }
            },
            "Step 8": {
                "Step": "9 - 6 = -> 9 - 6 = 3 -> 9 - 6 = 3 (left: 3 3) -> 3 / 3 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "2.7273 10.9092"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "6 + 8 = 14 (left: 9 11 14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 11"
                }
            },
            "Step 1": {
                "Step": "6 * 8 = 48 (left: 9 11 48)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 8 = 48 (left: 9 11 48) -> 11 - 9 = 2 (left: 2 11 48)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 9 11 48) -> 11 - 9 = 2 (left: 2 11 48) -> 11 * 2 = 22 (left: 22 48)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "3 3"
                }
            },
            "Step 4": {
                "Step": "9 - 6 = -> 9 - 6 = 3 -> 9 - 6 = 3 (left: 3 3) -> 3 - 3 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "3 3"
                }
            },
            "Step 5": {
                "Step": "9 - 6 = -> 9 - 6 = 3 -> 9 - 6 = 3 (left: 3 3) -> 3 + 3 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "3 3"
                }
            },
            "Step 6": {
                "Step": "9 - 6 = -> 9 - 6 = 3 -> 9 - 6 = 3 (left: 3 3) -> 3 * 3 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "3 3"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "3 3"
                }
            },
            "Step 7": {
                "Step": "9 - 6 = -> 9 - 6 = 3 -> 9 - 6 = 3 (left: 3 3) -> 3 + 3 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "3 3"
                }
            },
            "Step 8": {
                "Step": "9 - 6 = -> 9 - 6 = 3 -> 9 - 6 = 3 (left: 3 3) -> 3 * 3 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "2.7273 10.9092"
                }
            }
        },
        "Input": "6 8 9 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "899": {
        "puzzle": "1 3 3 11",
        "Agent 0": {
            "Step 0": {
                "Step": "11 - 1 = 10 (left: 3 3 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 3 8"
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 3 * 1 = 3 (left: 3 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 3 * 1 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 3 * 1 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11) -> There are no possible next steps with the input 11."
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 1 9 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 3 8"
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 3 - 1 = 2 (left: 2 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 3 - 1 = 2 (left: 2 8) -> 8 / 2 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 3 - 1 = 2 (left: 2 8) -> 8 / 2 = 4 (left: 4) -> 4 + 4 = 8"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 3 4 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "1 3 8"
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 3 * 8 = 24 (left: 1 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 3 * 8 = 24 (left: 1 24) -> 24 - 1 = 23 (left: 23)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 3 * 8 = 24 (left: 1 24) -> 24 - 1 = 23 (left: 23) -> 23 + 8 = 31 (left: 8)"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "11 - 1 = 10 (left: 3 10 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "1 3 8"
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 8 - 1 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 8 - 1 = 7 (left: 7) -> 7 - 8 = -1 (left: -1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 8 - 1 = 7 (left: 7) -> 7 - 8 = -1 (left: -1) -> -1 is not a valid input. Please enter a valid input consisting of three numbers separated by spaces."
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 3 4 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1 3 8"
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 3 * 8 = 24 (left: 1 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 3 * 8 = 24 (left: 1 24) -> 1 + 24 = 25 (left: 25)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 3 * 8 = 24 (left: 1 24) -> 1 + 24 = 25 (left: 25) -> 25 + 2 = 27 (left: 2)"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "11 - 3 = 8 (left: 1 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 4 11"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 4 - 3 = 1 (left: 1 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 4 - 3 = 1 (left: 1 11) -> 11 / 1 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 4 - 3 = 1 (left: 1 11) -> 11 / 1 = 11 (left: 11) -> There are no possible next steps with the input 11."
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "11 - 3 = 8 (left: 1 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 3 11"
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 1 3 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 1 3  -> 3 / 1 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 1 3  -> 3 / 1 = 3 (left: 3) -> 3 - 3 = 0 (left: 0)"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "11 - 3 = 8 (left: 1 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 3 8"
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 8 - 1 = 7 (left: 3 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 8 - 1 = 7 (left: 3 7) -> 3 + 7 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 8 - 1 = 7 (left: 3 7) -> 3 + 7 = 10 (left: 10) -> 10 - 2 = 8 (left: 8)"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 3 4 11)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 4 11"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 3 + 4 = 7 (left: 7 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 3 + 4 = 7 (left: 7 11) -> Possible next steps:",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 3 + 4 = 7 (left: 7 11) -> Possible next steps: -> No input provided."
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 3 4 11)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1 3 8"
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 3 * 1 = 3 (left: 3 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 3 * 1 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 3 * 1 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (3 * (11 - 3)) * 1 = 24"
            }
        },
        "Input": "1 3 3 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 1
            }
        ]
    },
    "1050": {
        "puzzle": "4 10 11 13",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 11 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "11 13 14"
                }
            },
            "Step 1": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 14 - 13 = 1 (left: 1 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 14 - 13 = 1 (left: 1 14) -> 1 * 14 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 14 - 13 = 1 (left: 1 14) -> 1 * 14 = 14 (left: 14) -> No possible next steps as there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "11 13 14"
                }
            },
            "Step 4": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 11 + 13 = 24 (left: 14 24)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 11 + 13 = 24 (left: 14 24) -> 24 / 14 = 1.71428571429 (left: 1.71428571429)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 11 + 13 = 24 (left: 14 24) -> 24 / 14 = 1.71428571429 (left: 1.71428571429) -> 1.71428571429 / 2 = 0.857142857145",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "1 7"
                }
            },
            "Step 7": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 11 * 13 = 143 (left: 14 143) -> 14 * 143 = 2002 (left: 143) -> 4 + 3 = 7 (left: 1 7) -> 1 * 7 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "1 7"
                }
            },
            "Step 8": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 11 * 13 = 143 (left: 14 143) -> 14 * 143 = 2002 (left: 143) -> 4 + 3 = 7 (left: 1 7) -> 1 + 7 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "1 7"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 10 = 3 (left: 3 11 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 11 13"
                }
            },
            "Step 1": {
                "Step": "4 * 10 = 40 (left: 40 11 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 10 = 40 (left: 40 11 13) -> 40 - 11 = 29 (left: 29 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 10 = 40 (left: 40 11 13) -> 40 - 11 = 29 (left: 29 13) -> 29 - 13 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "11 13 14"
                }
            },
            "Step 4": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 13 - 11 = 2 (left: 2 14)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 13 - 11 = 2 (left: 2 14) -> 14 / 2 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 13 - 11 = 2 (left: 2 14) -> 14 / 2 = 7 (left: 7) -> 7 + 8 = 15 (left: 8 15)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "1 7"
                }
            },
            "Step 7": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 11 * 13 = 143 (left: 14 143) -> 14 * 143 = 2002 (left: 143) -> 4 + 3 = 7 (left: 1 7) -> 7 / 1 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "1.619834711 11"
                }
            },
            "Step 8": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 14 / 11 = 1.272727272 -> 14 / 11 = 1.272727272 (left: 11 1.272727272 1.272727272) -> 1.272727272 * 1.272727272 = 1.619834711 (left: 1.619834711 11) -> 1.619834711 * 11 = 17.818182821 (left: 17.818182821)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "1 7"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "11 + 4 = 15 (left: 10 13 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 11 13"
                }
            },
            "Step 1": {
                "Step": "11 + 4 = 15 (left: 10 13 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 + 4 = 15 (left: 10 13 15) -> 15 / 10 = 1.5 (left: 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 + 4 = 15 (left: 10 13 15) -> 15 / 10 = 1.5 (left: 13) -> There are no possible next steps with the input 13.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "11 13 14"
                }
            },
            "Step 4": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 11 * 13 = 143 (left: 14 143)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 11 * 13 = 143 (left: 14 143) -> 14 / 143 = 0.09790 (left: 0.09790)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 11 * 13 = 143 (left: 14 143) -> 14 / 143 = 0.09790 (left: 0.09790) -> 0.09790 - 2 = -1.9021",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "1.619834711 11"
                }
            },
            "Step 7": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 14 / 11 = 1.272727272 -> 14 / 11 = 1.272727272 (left: 11 1.272727272 1.272727272) -> 1.272727272 * 1.272727272 = 1.619834711 (left: 1.619834711 11) -> 1.619834711 + 11 = 12.619834711 (left: 12.619834711)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "1 7"
                }
            },
            "Step 8": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 11 * 13 = 143 (left: 14 143) -> 14 * 143 = 2002 (left: 143) -> 4 + 3 = 7 (left: 1 7) -> 7 - 1 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "1 7"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 / 4 = 2.5 (left: 2.",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "11 13 14"
                }
            },
            "Step 1": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 11 * 14 = 154 (left: 13 154)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 11 * 14 = 154 (left: 13 154) -> 13 / 154 = 0.0844 (left: 0.0844 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 11 * 14 = 154 (left: 13 154) -> 13 / 154 = 0.0844 (left: 0.0844 13) -> 0.0844 / 13 = 0.0065 (left: 0.0065)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "11 13 14"
                },
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "11 13 14"
                }
            },
            "Step 4": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 13 - 11 = 2 (left: 2 14)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 13 - 11 = 2 (left: 2 14) -> 14 - 2 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 13 - 11 = 2 (left: 2 14) -> 14 - 2 = 12 (left: 12) -> 12 * 2 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "1.619834711 11"
                },
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "1 7"
                }
            },
            "Step 7": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 11 * 13 = 143 (left: 14 143) -> 14 * 143 = 2002 (left: 143) -> 4 + 3 = 7 (left: 1 7) -> 1 + 7 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "1 7"
                }
            },
            "Step 8": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 11 * 13 = 143 (left: 14 143) -> 14 * 143 = 2002 (left: 143) -> 4 + 3 = 7 (left: 1 7) -> 7 / 1 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "1 7"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "11 + 4 = 15 (left: 10 13 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "11 13 14"
                }
            },
            "Step 1": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 13 - 11 = 2 (left: 2 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 13 - 11 = 2 (left: 2 14) -> 2 + 14 = 16 (left: 16)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 13 - 11 = 2 (left: 2 14) -> 2 + 14 = 16 (left: 16) -> There are no possible next steps with just one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "11 13 14"
                }
            },
            "Step 4": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 13 - 11 = 2 (left: 2 14)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 13 - 11 = 2 (left: 2 14) -> 2 * 14 = 28 (left: 28)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 13 - 11 = 2 (left: 2 14) -> 2 * 14 = 28 (left: 28) -> None",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "1.619834711 11"
                },
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "1 7"
                }
            },
            "Step 7": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 11 * 13 = 143 (left: 14 143) -> 14 * 143 = 2002 (left: 143) -> 4 + 3 = 7 (left: 1 7) -> 1 + 7 = 8",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 11 * 13 = 143 (left: 14 143) -> 14 * 143 = 2002 (left: 143) -> 4 + 3 = 7 (left: 1 7) -> 1 + 7 = 8 -> 7 + 1 = 8 (",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 11 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "6 11 13"
                }
            },
            "Step 1": {
                "Step": "10 - 4 = 6 (left: 6 11 13) -> 6 * 11 = 66 (left: 13 66)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 6 11 13) -> 6 * 11 = 66 (left: 13 66) -> 13 * 66 = 858 (left: 858)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 6 11 13) -> 6 * 11 = 66 (left: 13 66) -> 13 * 66 = 858 (left: 858) -> 8 + 5 = 13 (left: 13 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "11 13 14"
                }
            },
            "Step 4": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 13 / 11 = 1.18181818182 (left: 1.18181818182 14)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 13 / 11 = 1.18181818182 (left: 1.18181818182 14) -> 14 / 1.18181818182 = 11.818181818",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 13 / 11 = 1.18181818182 (left: 1.18181818182 14) -> 14 / 1.18181818182 = 11.818181818 -> 14 + 1.18181818182 = 15.18181818182 (left: 15.18181818182 11.818181818)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "1 7"
                }
            },
            "Step 7": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 11 * 13 = 143 (left: 14 143) -> 14 * 143 = 2002 (left: 143) -> 4 + 3 = 7 (left: 1 7) -> 9 - 3 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "1 7"
                }
            },
            "Step 8": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 11 * 13 = 143 (left: 14 143) -> 14 * 143 = 2002 (left: 143) -> 4 + 3 = 7 (left: 1 7) -> 1 + 7 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "1 7"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "10 / 4 = 2.5 (left: 2.5 11 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "11 13 14"
                }
            },
            "Step 1": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 14 + 11 = 25 (left: 13 25)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 14 + 11 = 25 (left: 13 25) -> 13 * 25 = 325 (left: 325)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 14 + 11 = 25 (left: 13 25) -> 13 * 25 = 325 (left: 325) -> 3^2 + 5 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "11 13 14"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "11 13 14"
                }
            },
            "Step 4": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 11 + 14 = 25 (left: 13 25)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 11 + 14 = 25 (left: 13 25) -> 13 - 25 = -12 (left: -12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 11 + 14 = 25 (left: 13 25) -> 13 - 25 = -12 (left: -12) -> -12 - 8 = -20 (left: -20)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "1.619834711 11"
                },
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "1 7"
                }
            },
            "Step 7": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 11 * 13 = 143 (left: 14 143) -> 14 * 143 = 2002 (left: 143) -> 4 + 3 = 7 (left: 1 7) -> 7 / 1 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "1 7"
                }
            },
            "Step 8": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 11 * 13 = 143 (left: 14 143) -> 14 * 143 = 2002 (left: 143) -> 4 + 3 = 7 (left: 1 7) -> 7 / 1 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "1 7"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "4 + 10 = 14 (left: 11 13 14)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "11 13 14"
                }
            },
            "Step 1": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 14 / 11 = 1.272727272",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 14 / 11 = 1.272727272 -> 14 / 11 = 1.272727272 (left: 11 1.272727272 1.272727272)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 14 / 11 = 1.272727272 -> 14 / 11 = 1.272727272 (left: 11 1.272727272 1.272727272) -> 1.272727272 * 1.272727272 = 1.619834711 (left: 1.619834711 11)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "11 13 14"
                }
            },
            "Step 4": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 11 * 13 = 143 (left: 14 143)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 11 * 13 = 143 (left: 14 143) -> 14 * 143 = 2002 (left: 143)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 11 * 13 = 143 (left: 14 143) -> 14 * 143 = 2002 (left: 143) -> 4 + 3 = 7 (left: 1 7)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "1 7"
                }
            },
            "Step 7": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 11 * 13 = 143 (left: 14 143) -> 14 * 143 = 2002 (left: 143) -> 4 + 3 = 7 (left: 1 7) -> 7 / 1 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "1 7"
                }
            },
            "Step 8": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 11 * 13 = 143 (left: 14 143) -> 14 * 143 = 2002 (left: 143) -> 4 + 3 = 7 (left: 1 7) -> 7 / 1 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "1 7"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "13 - 10 = 3 (left: 4 11 3)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 11 13"
                }
            },
            "Step 1": {
                "Step": "4 * 10 = 40 (left: 11 13 40)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 10 = 40 (left: 11 13 40) -> 13 / 11 = 1.1818181818181819 (left: 1.1818181818181819 11 40)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 10 = 40 (left: 11 13 40) -> 13 / 11 = 1.1818181818181819 (left: 1.1818181818181819 11 40) -> 40 - 1.1818181818181819 = 38.81818181818182 (left: 1.1818181818181819 38.81818181818182)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "11 13 14"
                }
            },
            "Step 4": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 11 * 13 = 143 (left: 14 143)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 11 * 13 = 143 (left: 14 143) -> 14 * 143 = 2002 (left: 2002)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 11 * 13 = 143 (left: 14 143) -> 14 * 143 = 2002 (left: 2002) -> ",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "1.619834711 11"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "1 7"
                }
            },
            "Step 7": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 11 * 13 = 143 (left: 14 143) -> 14 * 143 = 2002 (left: 143) -> 4 + 3 = 7 (left: 1 7) -> 7 - 1 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "1 7"
                }
            },
            "Step 8": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 11 * 13 = 143 (left: 14 143) -> 14 * 143 = 2002 (left: 143) -> 4 + 3 = 7 (left: 1 7) -> 7 - 1 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "1 7"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 11 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "11 13 14"
                }
            },
            "Step 1": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 11 / 13 = 0.8461538461538461 (left: 14 0.8461538461538461)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 11 / 13 = 0.8461538461538461 (left: 14 0.8461538461538461) -> 0.8461538461538461 * 14 = 11.999999999999998 (left: 12 0.8461538461538461)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 11 / 13 = 0.8461538461538461 (left: 14 0.8461538461538461) -> 0.8461538461538461 * 14 = 11.999999999999998 (left: 12 0.8461538461538461) -> 12 * 0.8461538461538461 = 10.153846153846153 (left: 10.153846153846153)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "11 13 14"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "11 13 14"
                }
            },
            "Step 4": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 13 + 14 = 27 (left: 11 27)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 13 + 14 = 27 (left: 11 27) -> 27 - 11 = 16 (left: 16)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 13 + 14 = 27 (left: 11 27) -> 27 - 11 = 16 (left: 16) -> There are no possible next steps with the input of 16.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "1 7"
                }
            },
            "Step 7": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 11 * 13 = 143 (left: 14 143) -> 14 * 143 = 2002 (left: 143) -> 4 + 3 = 7 (left: 1 7) -> 7 - 1 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "1 7"
                }
            },
            "Step 8": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 11 * 13 = 143 (left: 14 143) -> 14 * 143 = 2002 (left: 143) -> 4 + 3 = 7 (left: 1 7) -> 7 / 1 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "1 7"
                }
            }
        },
        "Input": "4 10 11 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1051": {
        "puzzle": "2 6 6 7",
        "Agent 0": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 5 6 6)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9) -> 7 * 9 = 63 (left: 63)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9) -> 7 * 9 = 63 (left: 63) -> None, the input is only one number."
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 - 6 = 1 (left: 2 1 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7) ",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7)  -> 7 / 2 = 3.5 (left: 3.5 8)"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 4 6 7)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 5 - 6 = -1 (left: -1 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 5 - 6 = -1 (left: -1 6) -> Input: 3 9 27",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 5 - 6 = -1 (left: -1 6) -> Input: 3 9 27 -> 27 - 9 = 18 (left: 3 18)"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 / 2 = 3 (left: 3 6 7)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 6 7) -> 6 - 3 = 3 (left: 3 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 6 7) -> 6 - 3 = 3 (left: 3 7) -> 5 + 9 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 6 7) -> 6 - 3 = 3 (left: 3 7) -> 5 + 9 = 14 (left: 14) -> There are no possible next steps with only one number provided."
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 4 6 7)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5) -> There are no possible next steps with the input 1.5."
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 6 5 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 5 * 6 = 30 (left: 6 6 30)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 5 * 6 = 30 (left: 6 6 30) -> 6 * 6 = 36 (left: 36 30)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 5 * 6 = 30 (left: 6 6 30) -> 6 * 6 = 36 (left: 36 30) -> 36 - 30 = 6 (left: 6)"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 5 6 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6 6) -> 1 + 6 = 7 (left: 6 6 7)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6 6) -> 1 + 6 = 7 (left: 6 6 7) -> 7 + 6 = 13 (left: 6 13)"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "2 + 6 = 8 (left: 6 7 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 5 * 6 = 30 (left: 6 30)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 5 * 6 = 30 (left: 6 30) -> 30 - 6 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 5 * 6 = 30 (left: 6 30) -> 30 - 6 = 24 (left: 24) -> Answer: ((7 - 2) * 6) - 6 = 24"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "2 + 6 = 8 (left: 6 7 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 6 + 7 = 13 (left: 4 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 6 + 7 = 13 (left: 4 13) -> 13 - 4 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 6 + 7 = 13 (left: 4 13) -> 13 - 4 = 9 (left: 9) -> There are no possible next steps with the number 9 alone."
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 5 6 6)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 6 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 6 = 0 (left: 0) -> No possible next steps.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 6 = 0 (left: 0) -> No possible next steps. -> No possible next steps."
            }
        },
        "Input": "2 6 6 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1052": {
        "puzzle": "7 10 10 12",
        "Agent 0": {
            "Step 0": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 10 12"
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 12 - 3 = 9 (left: 10 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 12 - 3 = 9 (left: 10 9) -> 10 * 9 = 90 (left: 9 90)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 12 - 3 = 9 (left: 10 9) -> 10 * 9 = 90 (left: 9 90) -> 9 * 90 = 810 (left: 810)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "3 10 12"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "3 10 12"
                }
            },
            "Step 4": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 12 / 3 = 4 (left: 10 4)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 12 / 3 = 4 (left: 10 4) -> 10 - 4 = 6 (left: 6 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 12 / 3 = 4 (left: 10 4) -> 10 - 4 = 6 (left: 6 4) -> 6 + 4 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "There are no possible next steps with the input 1.42857142857."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps with the input 1.42857142857."
                }
            },
            "Step 7": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 -> There are no possible next steps with the input 1.42857142857. -> There are no possible next steps with the input 1.42857142857. -> 1.42857142857 + 2 = 3.42857142857 (left: 3.42857142857)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "There are no valid next steps for the input -4."
                }
            },
            "Step 8": {
                "Step": "10 / 10 = 1 (left: 7 1 12) -> 12 - 1 = 11 (left: 7 11) -> 7 - 11 = -4 (left: -4) -> There are no valid next steps for the input -4. -> There are no valid next steps for the input -4.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 - 7 = 3 (left: 3 10 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 10 10 12"
                }
            },
            "Step 1": {
                "Step": "10 * 7 = 70 (left: 70 10 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 12 + 10 = 22 (left: 22)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 12 + 10 = 22 (left: 22) -> 22 * 8 = 176 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "7 1 12"
                }
            },
            "Step 4": {
                "Step": "10 / 10 = 1 (left: 7 1 12) -> 12 - 1 = 11 (left: 7 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 / 10 = 1 (left: 7 1 12) -> 12 - 1 = 11 (left: 7 11) -> 7 - 11 = -4 (left: -4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 / 10 = 1 (left: 7 1 12) -> 12 - 1 = 11 (left: 7 11) -> 7 - 11 = -4 (left: -4) -> There are no valid next steps for the input -4.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "1 + 4 = 5"
                }
            },
            "Step 7": {
                "Step": "10 / 7 = 1.43 (left: 1.43 10 12) -> 10 - 1.43 = 8.57 (left: 8.57 12 -> 12 / 8.57 = 1.4 (left: 1.4) -> 1 + 4 = 5 -> 4 + 1 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "No possible next steps."
                }
            },
            "Step 8": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 10 / 1.42857142857 = 7 (left: 7 12) -> 7 + 12 = 19 (left: 19) -> No possible next steps. -> No possible next steps.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 / 10 = 1 (left: 7 1 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 10 12"
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 12 / 3 = 4 (left: 4 12) -> 12 / 4 = 3 (left: 3 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 12 / 3 = 4 (left: 4 12) -> 12 / 4 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "3 10 12"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "7 1 12"
                }
            },
            "Step 4": {
                "Step": "10 / 10 = 1 (left: 7 1 12) -> 12 - 7 = 5 (left: 7 5)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 / 10 = 1 (left: 7 1 12) -> 12 - 7 = 5 (left: 7 5) -> 7 * 5 = 35 (left: 35)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 / 10 = 1 (left: 7 1 12) -> 12 - 7 = 5 (left: 7 5) -> 7 * 5 = 35 (left: 35) -> 35 - 8 = 27 (left: 8)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "There is only one possible step for this input:"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "360 * 2 = 720"
                }
            },
            "Step 7": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 3 * 10 = 30 (left: 30 12) -> 30 * 12 = 360 (left: 360) -> 360 * 2 = 720 -> 360 / 2 = 180 (left: 180 * 2 = 360)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 3 * 10 = 30 (left: 30 12) -> 30 * 12 = 360 (left: 360) -> 360 * 2 = 720 -> 360 / 2 = 180 (left: 180 * 2 = 360) -> 2 * 2 = 4 (left: 180 4 360)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 - 7 = 3 (left: 3 10 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 10 10 12"
                }
            },
            "Step 1": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 -> There are no possible next steps with the input 1.42857142857.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 -> There are no possible next steps with the input 1.42857142857. -> There are no possible next steps with the input 1.42857142857.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "7 1 12"
                }
            },
            "Step 4": {
                "Step": "10 / 10 = 1 (left: 7 1 12) -> 12 - 7 = 5 (left: 5 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 / 10 = 1 (left: 7 1 12) -> 12 - 7 = 5 (left: 5 12) -> 5 / 12 = 0.4166666666666667 (left: 0.4166666666666667)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 / 10 = 1 (left: 7 1 12) -> 12 - 7 = 5 (left: 5 12) -> 5 / 12 = 0.4166666666666667 (left: 0.4166666666666667) -> 0.4166666666666667 - 2 = -1.5833333333333333",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no valid next steps for the input -4."
                }
            },
            "Step 7": {
                "Step": "10 / 10 = 1 (left: 7 1 12) -> 12 - 1 = 11 (left: 7 11) -> 7 - 11 = -4 (left: -4) -> There are no valid next steps for the input -4. -> There are no valid next steps for the input -4.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 / 10 = 1 (left: 7 1 12) -> 12 - 1 = 11 (left: 7 11) -> 7 - 11 = -4 (left: -4) -> There are no valid next steps for the input -4. -> There are no valid next steps for the input -4. -> There are no valid next steps for the input -4.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1.43 10 12"
                }
            },
            "Step 1": {
                "Step": "10 / 7 = 1.43 (left: 1.43 10 12) -> 10 - 1.43 = 8.57 (left: 8.57 12",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 7 = 1.43 (left: 1.43 10 12) -> 10 - 1.43 = 8.57 (left: 8.57 12 -> 12 / 8.57 = 1.4 (left: 1.4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 / 7 = 1.43 (left: 1.43 10 12) -> 10 - 1.43 = 8.57 (left: 8.57 12 -> 12 / 8.57 = 1.4 (left: 1.4) -> 1 + 4 = 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "3 10 12"
                }
            },
            "Step 4": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 3 * 10 = 30 (left: 30 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 3 * 10 = 30 (left: 30 12) -> 30 * 12 = 360 (left: 360)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 3 * 10 = 30 (left: 30 12) -> 30 * 12 = 360 (left: 360) -> 360 * 2 = 720",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps with the input 1.42857142857."
                }
            },
            "Step 7": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 -> There are no possible next steps with the input 1.42857142857. -> There are no possible next steps with the input 1.42857142857. -> 1 / 1 = 1 (left: 1.42857142857 1)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 -> There are no possible next steps with the input 1.42857142857. -> There are no possible next steps with the input 1.42857142857. -> 1 / 1 = 1 (left: 1.42857142857 1) -> 1.42857142857 + 1 = 2.42857142857 (left: 2.42857142857)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "1 + 4 = 5"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "10 / 7 = 1.43 (left: 1.43 10 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1.43 10 12"
                }
            },
            "Step 1": {
                "Step": "10 / 7 = 1.43 (left: 1.43 10 12) -> 10 / 1.43 = 6.993 (left: 6.993 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 7 = 1.43 (left: 1.43 10 12) -> 10 / 1.43 = 6.993 (left: 6.993 12) -> 6.993 / 12 = 0.58275 (left: 0.58275)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 / 7 = 1.43 (left: 1.43 10 12) -> 10 / 1.43 = 6.993 (left: 6.993 12) -> 6.993 / 12 = 0.58275 (left: 0.58275) -> There is only one possible step for this input:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "7 1 12"
                }
            },
            "Step 4": {
                "Step": "10 / 10 = 1 (left: 7 1 12) -> 7 / 1 = 7 (left: 7 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 / 10 = 1 (left: 7 1 12) -> 7 / 1 = 7 (left: 7 12) -> 7 - 12 = -5 (left: -5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 / 10 = 1 (left: 7 1 12) -> 7 / 1 = 7 (left: 7 12) -> 7 - 12 = -5 (left: -5) -> There are no possible next steps with the input of -5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "No possible next steps."
                }
            },
            "Step 7": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 10 / 1.42857142857 = 7 (left: 7 12) -> 7 + 12 = 19 (left: 19) -> No possible next steps. -> There are no more possible next steps.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 10 / 1.42857142857 = 7 (left: 7 12) -> 7 + 12 = 19 (left: 19) -> No possible next steps. -> There are no more possible next steps. -> N/A",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "There is only one possible step for this input:"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "10 + 7 = 17 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "7 1 12"
                }
            },
            "Step 1": {
                "Step": "10 / 10 = 1 (left: 7 1 12) -> 1 * 12 = 12 (left: 7 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 10 = 1 (left: 7 1 12) -> 1 * 12 = 12 (left: 7 12) -> 7 + 12 = 19 (left: 19)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 / 10 = 1 (left: 7 1 12) -> 1 * 12 = 12 (left: 7 12) -> 7 + 12 = 19 (left: 19) -> 19 * 2 = 38 (left: 38)",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "7 1 12"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "3 10 12"
                }
            },
            "Step 4": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 3 + 10 = 13 (left: 10 12 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 3 + 10 = 13 (left: 10 12 13) -> 10 / 12 = 0.8333 (left: 0.8333 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 3 + 10 = 13 (left: 10 12 13) -> 10 / 12 = 0.8333 (left: 0.8333 13) -> 0.8333 / 13 = 0.0641 (left: 0.0641)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "1 + 4 = 5"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no valid next steps for the input -4."
                }
            },
            "Step 7": {
                "Step": "10 / 10 = 1 (left: 7 1 12) -> 12 - 1 = 11 (left: 7 11) -> 7 - 11 = -4 (left: -4) -> There are no valid next steps for the input -4. -> There are no valid next steps for the input -4.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 / 10 = 1 (left: 7 1 12) -> 12 - 1 = 11 (left: 7 11) -> 7 - 11 = -4 (left: -4) -> There are no valid next steps for the input -4. -> There are no valid next steps for the input -4. -> There are no valid next steps for the input -4.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "7 + 10 = 17 (left: 10 10 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1.43 10 12"
                }
            },
            "Step 1": {
                "Step": "10 / 7 = 1.43 (left: 1.43 10 12) -> 12 - 1.43 \u2248 10.57 (left: 10 10.57)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 7 = 1.43 (left: 1.43 10 12) -> 12 - 1.43 \u2248 10.57 (left: 10 10.57) -> 10 - 10.57 = -0.57 (left: -0.57)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 / 7 = 1.43 (left: 1.43 10 12) -> 12 - 1.43 \u2248 10.57 (left: 10 10.57) -> 10 - 10.57 = -0.57 (left: -0.57) -> -0.57 * 2 = -1.14 (left: -1.14)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "1.42857142857 10 12"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "1.42857142857 10 12"
                }
            },
            "Step 4": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 10 / 1.42857142857 = 7 (left: 7 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 10 / 1.42857142857 = 7 (left: 7 12) -> 7 + 12 = 19 (left: 19)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 10 / 1.42857142857 = 7 (left: 7 12) -> 7 + 12 = 19 (left: 19) -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There is only one possible step for this input:"
                }
            },
            "Step 7": {
                "Step": "10 / 7 = 1.43 (left: 1.43 10 12) -> 10 / 1.43 = 6.993 (left: 6.993 12) -> 6.993 / 12 = 0.58275 (left: 0.58275) -> There is only one possible step for this input: -> 8 - 8 = 0 (left: 2 0 14)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 / 7 = 1.43 (left: 1.43 10 12) -> 10 / 1.43 = 6.993 (left: 6.993 12) -> 6.993 / 12 = 0.58275 (left: 0.58275) -> There is only one possible step for this input: -> 8 - 8 = 0 (left: 2 0 14) -> 2 * 0 = 0 (left: 0 14)",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "10 - 7 = 3 (left: 3 10 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1.42857142857 10 12"
                }
            },
            "Step 1": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 12 - 1.42857142857 = 10.5714285714 (left: 10.5714285714 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 12 - 1.42857142857 = 10.5714285714 (left: 10.5714285714 12) -> 12 / 10.5714285714 = 1.1333333333 (left: 1.133",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 12 - 1.42857142857 = 10.5714285714 (left: 10.5714285714 12) -> 12 / 10.5714285714 = 1.1333333333 (left: 1.133 -> 1.133 / 2 = 0.5665 (left: 0.5665)",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "7 1 12"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "3 10 12"
                }
            },
            "Step 4": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 12 - 3 = 9 (left: 3 9 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 12 - 3 = 9 (left: 3 9 12) -> 9 - 3 = 6 (left:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 12 - 3 = 9 (left: 3 9 12) -> 9 - 3 = 6 (left: -> 9 + 3 = 12 (left: 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "360 * 2 = 720"
                }
            },
            "Step 7": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 3 * 10 = 30 (left: 30 12) -> 30 * 12 = 360 (left: 360) -> 360 * 2 = 720 -> 360 / 2 = 180 (left: 180 * 2 = 360)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 3 * 10 = 30 (left: 30 12) -> 30 * 12 = 360 (left: 360) -> 360 * 2 = 720 -> 360 / 2 = 180 (left: 180 * 2 = 360) -> 180 + 2 = 182 (left: 182 * 2 = 364)",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "10 / 10 = 1 (left: 7 1 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 10 10 12"
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 7 3 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 7 3 12) -> 12 + 7 = 19 (left: 3 19)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 7 3 12) -> 12 + 7 = 19 (left: 3 19) -> 3 * 19 = 57 (left: 57)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "7 1 12"
                }
            },
            "Step 4": {
                "Step": "10 / 10 = 1 (left: 7 1 12) -> 12 - 7 = 5 (left: 7 5)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 / 10 = 1 (left: 7 1 12) -> 12 - 7 = 5 (left: 7 5) -> 7 / 5 = 1.4 (left: 1.4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 / 10 = 1 (left: 7 1 12) -> 12 - 7 = 5 (left: 7 5) -> 7 / 5 = 1.4 (left: 1.4) -> 1 + 4 = 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "No possible next steps."
                }
            },
            "Step 7": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 10 / 1.42857142857 = 7 (left: 7 12) -> 7 + 12 = 19 (left: 19) -> No possible next steps. -> There are no possible next steps with the given numbers.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 10 / 1.42857142857 = 7 (left: 7 12) -> 7 + 12 = 19 (left: 19) -> No possible next steps. -> There are no possible next steps with the given numbers. -> No possible next steps.",
                "Pruning": null
            }
        },
        "Input": "7 10 10 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1053": {
        "puzzle": "2 5 7 11",
        "Agent 0": {
            "Step 0": {
                "Step": "5 * 2 = 10 (left: 10 7 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 35 "
                }
            },
            "Step 1": {
                "Step": "5 * 7 = 35 (left: 2 35  -> 4 + 9 = 13 (left: 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 7 = 35 (left: 2 35  -> 4 + 9 = 13 (left: 13) -> 13 / 2 = 6.5 (left: 6.5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 7 = 35 (left: 2 35  -> 4 + 9 = 13 (left: 13) -> 13 / 2 = 6.5 (left: 6.5) -> There are no possible next steps with the input 6.5 as it is already a single number and not a combination of numbers.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "7 17"
                }
            },
            "Step 4": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> Possible next steps:",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> Possible next steps: -> There are no more possible next steps for the input provided.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> Possible next steps: -> There are no more possible next steps for the input provided. -> There are no more possible next steps for the input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "7 17"
                }
            },
            "Step 7": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> Possible next steps:",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> Possible next steps: -> It seems like the input is missing. Please provide the numbers to generate the possible next steps.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 + 7 = 12 (left: 2 12 11)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 7 11"
                }
            },
            "Step 1": {
                "Step": "2 + 5 = 7 (left: 7 7 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 5 = 7 (left: 7 7 11) -> 11 + 7 = 18 (left: 7 18)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 5 = 7 (left: 7 7 11) -> 11 + 7 = 18 (left: 7 18) -> 7 - 18 = -11 (left: -11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "7 17"
                }
            },
            "Step 4": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> 7 * 17 = 119 (left: 119)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "7 17"
                }
            },
            "Step 5": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> Input: 1 5 10",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> Input: 1 5 10 -> 5 * 10 = 50 (left: 1 50)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "7 17"
                }
            },
            "Step 7": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> 7 * 17 = 119 (left: 119)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "7 17"
                }
            },
            "Step 8": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> 17 / 7 = 2.43 (left: 2.43)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "7 17"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "11 - 5 = 6 (left: 2 6 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 35 "
                }
            },
            "Step 1": {
                "Step": "5 * 7 = 35 (left: 2 35  -> 2 + 35 = 37 (left: 37)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 7 = 35 (left: 2 35  -> 2 + 35 = 37 (left: 37) -> 37 + 2 = 39",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 7 = 35 (left: 2 35  -> 2 + 35 = 37 (left: 37) -> 37 + 2 = 39 -> 37 - 2 = 35 (left: 35 2 39)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "2 12 11"
                }
            },
            "Step 4": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 - 2 = 10 (left: 10 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 - 2 = 10 (left: 10 11) -> 10 - 11 = -1 (left: -1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 - 2 = 10 (left: 10 11) -> 10 - 11 = -1 (left: -1) -> Please provide a valid input to continue the calculation.",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "7 17"
                }
            },
            "Step 7": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> 7 + 17 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "7 17"
                }
            },
            "Step 8": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> 7 + 17 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "7 17"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 + 11 = 18 (left: 2 5 18)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 12 11"
                }
            },
            "Step 1": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 - 2 = 10 (left: 10 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 - 2 = 10 (left: 10 11) -> 10 - 11 = -1 (left: -1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 - 2 = 10 (left: 10 11) -> 10 - 11 = -1 (left: -1) -> Invalid input. Please enter a valid mathematical expression.",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "7 17"
                }
            },
            "Step 4": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> 7 * 17 = 119 (left: 119)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "7 17"
                }
            },
            "Step 5": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> 17 / 7 = 2.42857 (left: 2.42857)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "2 12 11"
                }
            },
            "Step 6": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 2 + 12 = 14 (left: 11 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "7 17"
                }
            },
            "Step 7": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> 17 / 7 = 2.43 (left: 2.43)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "7 17"
                }
            },
            "Step 8": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> 7 * 17 = 119 (left: 119)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "7 17"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 5 = 7 (left: 7 7 11)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 12 11"
                }
            },
            "Step 1": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 - 2 = 10 (left: 10 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 - 2 = 10 (left: 10 11) -> 10 * 11 = 110 (left: 110)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 - 2 = 10 (left: 10 11) -> 10 * 11 = 110 (left: 110) -> 110 * 2 = 220 (left: )",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "2 12 11"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "7 17"
                }
            },
            "Step 4": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> 7 * 17 = 119 (left: 119)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "7 17"
                }
            },
            "Step 5": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> 7 + 17 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "7 17"
                }
            },
            "Step 6": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> 7 + 17 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "7 17"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "7 17"
                }
            },
            "Step 7": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> 24 / 5 = 4.8 (left: 4.8",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "7 17"
                }
            },
            "Step 8": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> 7 + 17 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "7 17"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 5 5 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 12 11"
                }
            },
            "Step 1": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 2 + 12 = 14 (left: 11 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 2 + 12 = 14 (left: 11 14) -> 11 - 14 = -3 (left: -3)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 2 + 12 = 14 (left: 11 14) -> 11 - 14 = -3 (left: -3) -> There are no possible next steps with the input of -3.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "2 12 11"
                }
            },
            "Step 4": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 11 - 2 = 9 (left:",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 11 - 2 = 9 (left: -> 11 - 2",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 11 - 2 = 9 (left: -> 11 - 2 -> 11 - 2 = 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "7 17"
                }
            },
            "Step 7": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> Possible next steps:",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> Possible next steps: -> 2 + 8 = 10 (left: 8 10 14)",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "2 + 5 = 7 (left: 7 7 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 12 11"
                }
            },
            "Step 1": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 - 2 = 10 (left: 10 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 - 2 = 10 (left: 10 11) -> 10 / 11 = 0.9091 (left: 0.9091)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 - 2 = 10 (left: 10 11) -> 10 / 11 = 0.9091 (left: 0.9091) -> There are no possible next steps for the input 0.9091.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "7 17"
                }
            },
            "Step 4": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> Input: 3 9 5",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> Input: 3 9 5 -> 5 + 3 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "7 17"
                }
            },
            "Step 6": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> 17 + 7 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "7 17"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "7 17"
                }
            },
            "Step 7": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> 17 - 7 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "7 17"
                }
            },
            "Step 8": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> 17 / 7 = 2.43 (left: 2.43)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "7 17"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "2 + 5 = 7 (left: 7 7 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 12 11"
                }
            },
            "Step 1": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Possible",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Possible -> It seems like there was an error in the input. Can you please provide the numbers or operations you would like to work with?",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Possible -> It seems like there was an error in the input. Can you please provide the numbers or operations you would like to work with? -> - Provide the numbers or operations you would like to work with.",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "2 12 11"
                }
            },
            "Step 4": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 2 * 12 = 24 (left: 11 24)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 2 * 12 = 24 (left: 11 24) -> 11 + 24 = 35 (left: 35)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 2 * 12 = 24 (left: 11 24) -> 11 + 24 = 35 (left: 35) -> 35 + 2 = 37",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "7 17"
                }
            },
            "Step 7": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> Input: 24 10 119 2",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> Input: 24 10 119 2 -> 24 / 10 = 2.4 (left: 2.4 119 2)",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "5 * 7 = 35 (left: 2 35 ",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 12 11"
                }
            },
            "Step 1": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "2 12 11"
                }
            },
            "Step 4": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 2 + 12 = 14 (left: 11 14)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 2 + 12 = 14 (left: 11 14) -> 11 - 14 = -3 (left: -3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 2 + 12 = 14 (left: 11 14) -> 11 - 14 = -3 (left: -3) -> There are no possible next steps with the input of -3.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "7 17"
                }
            },
            "Step 7": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> 7 + 17 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "7 17"
                }
            },
            "Step 8": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> 7 + 17 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "7 17"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "5 + 7 = 12 (left: 2 12 11)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 7 11"
                }
            },
            "Step 1": {
                "Step": "2 * 5 = 10 (left: 10 7 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 5 = 10 (left: 10 7 11) -> 7 * 11 = 77 (left: 10",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 5 = 10 (left: 10 7 11) -> 7 * 11 = 77 (left: 10 -> 10 / 2 = 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "7 17"
                }
            },
            "Step 4": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> 7 - 17 = -10 (left: -10)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "2 12 11"
                }
            },
            "Step 5": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 2 + 12 = 14 (left: 11 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 2 + 12 = 14 (left: 11 14) -> 11 / 14 = 0.7857142857142857 (left: 0.7857142857142857)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "7 17"
                }
            },
            "Step 7": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> 7 + 17 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "7 17"
                }
            },
            "Step 8": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> 7 * 17 = 119 (left: 119)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "7 17"
                }
            }
        },
        "Input": "2 5 7 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1054": {
        "puzzle": "4 4 6 9",
        "Agent 0": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 8 - 6 = 2 (left: 2 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 8 - 6 = 2 (left: 2 9) -> 2 * 9 = 18 (left: 18)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 8 - 6 = 2 (left: 2 9) -> 2 * 9 = 18 (left: 18) -> 18 + 8 = 26 (left: 8)"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 6 16 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 + 4) * (9 - 6) = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 6 16 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "24 6 9"
                }
            },
            "Step 1": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> Input: 5 2",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> Input: 5 2 -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> Input: 5 2 -> 5 / 2 = 2.5 (left: 2.5) -> There are no possible next steps with the input of 2.5."
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 6 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 9"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 6 8 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 6 * 8 = 48 (left: 9 48)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 6 * 8 = 48 (left: 9 48) -> 48 / 9 = 5.33 (left: 5.33)"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 4 = 10 (left: 4 10 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "24 6 9"
                }
            },
            "Step 1": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> 24 / 6 = 4 (left: 4 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> 24 / 6 = 4 (left: 4 9) -> 3",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> 24 / 6 = 4 (left: 4 9) -> 3 -> 3 / 3 = 1 (left: 1 8 "
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 6 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "24 6 9"
                }
            },
            "Step 1": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> 24 - 9 = 15 (left: 6 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> 24 - 9 = 15 (left: 6 15) -> 6 + 15 = 21 (left: 21)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> 24 - 9 = 15 (left: 6 15) -> 6 + 15 = 21 (left: 21) -> 21 / 2 = 10.5"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "4 + 4 = 8 (left: 6 8 9)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 9 / 6 = 1.5 (left: 1.5 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 9 / 6 = 1.5 (left: 1.5 8) -> 8 - 1.5 = 6.5 (left: 6.5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 9 / 6 = 1.5 (left: 1.5 8) -> 8 - 1.5 = 6.5 (left: 6.5) -> There are no possible next steps with the input 6.5."
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 6 16 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 16 9"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 16 - 6 = 10 (left: 10 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 16 - 6 = 10 (left: 10 9) -> 10 + 9 = 19",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 16 - 6 = 10 (left: 10 9) -> 10 + 9 = 19 -> 10 / 9 = 1.11 (left: 1.11 = 19)"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "6 * 4 = 24 (left: 24 6 9)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 9"
                }
            },
            "Step 1": {
                "Step": "6 + 4 = 10 (left: 4 9 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 4 = 10 (left: 4 9 10) -> 10 / 4 = ",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 4 = 10 (left: 4 9 10) -> 10 / 4 =  -> 10 / 4 = 2.5"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "4 + 4 = 8 (left: 6 8 9)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "24 6 9"
                }
            },
            "Step 1": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> 6 * 9 = 54 (left: 24 54)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> 6 * 9 = 54 (left: 24 54) -> 24 + 54 = 78 (left: 78)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> 6 * 9 = 54 (left: 24 54) -> 24 + 54 = 78 (left: 78) -> 78 / 8 = 9.75 (left: 9.75)"
            }
        },
        "Input": "4 4 6 9",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            }
        ]
    },
    "1055": {
        "puzzle": "6 9 10 12",
        "Agent 0": {
            "Step 0": {
                "Step": "10 + 12 = 22 (left: 6 9 22)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 12"
                }
            },
            "Step 1": {
                "Step": "6 + 9 = 15 (left: 10 12 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 9 = 15 (left: 10 12 15) -> Input: 5 7",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 9 = 15 (left: 10 12 15) -> Input: 5 7 -> 5 + 7 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "9 12 16"
                }
            },
            "Step 4": {
                "Step": "10 + 6 = 16 (left: 9 12 16) -> 9 * 12 = 108 (left: 108 16)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 + 6 = 16 (left: 9 12 16) -> 9 * 12 = 108 (left: 108 16) -> 108 / 16 = 6.75 (left: 6.75)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 + 6 = 16 (left: 9 12 16) -> 9 * 12 = 108 (left: 108 16) -> 108 / 16 = 6.75 (left: 6.75) -> None, as there is only one number given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "0.75 12 16"
                }
            },
            "Step 7": {
                "Step": "10 + 6 = 16 (left: 9 12 16) -> 12 - 9 = 3 (left: 3 12 16) -> 12 - 3 = 9 (left: 9 12 16) -> 9 / 12 = 0.75 (left: 0.75 12 16) -> 16 / 0.75 = 21.33",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 + 6 = 16 (left: 9 12 16) -> 12 - 9 = 3 (left: 3 12 16) -> 12 - 3 = 9 (left: 9 12 16) -> 9 / 12 = 0.75 (left: 0.75 12 16) -> 16 / 0.75 = 21.33 -> 16 / 0.75 = 21.33 (left: 21.33)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "-3.5 7 10.5"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 * 12 = 120 (left: 6 9 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 12"
                }
            },
            "Step 1": {
                "Step": "6 / 9 = 0.67 (left: 0.67 9 10 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 9 = 0.67 (left: 0.67 9 10 12) -> 12 - 0.67 = 11.33 (left: 9 10 11.33)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 / 9 = 0.67 (left: 0.67 9 10 12) -> 12 - 0.67 = 11.33 (left: 9 10 11.33) -> 9 + 10 = 19 (left: 11.33 19)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "9 12 16"
                }
            },
            "Step 4": {
                "Step": "10 + 6 = 16 (left: 9 12 16) -> 12 - 9 = 3 (left: 3 12 16)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 + 6 = 16 (left: 9 12 16) -> 12 - 9 = 3 (left: 3 12 16) -> 3 + 12 = 15 (left: 15 16)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 + 6 = 16 (left: 9 12 16) -> 12 - 9 = 3 (left: 3 12 16) -> 3 + 12 = 15 (left: 15 16) -> 15 + 16 = 31 (left: 31)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "0.75 12 16"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "5 5 10"
                }
            },
            "Step 7": {
                "Step": "10 + 6 = 16 (left: 9 12 16) -> 12 - 9 = 3 (left: 3 12 16) -> 12 - 3 = 9 (left: 9 12 16) -> 9 / 12 = 0.75 (left: 0.75 12 16) -> 0.75 * 12 = 9 (left: 9 16) -> Input: 5 5 5 5 -> 5 + 5 = 10 (left: 5 5 10) -> 5 / 5 = 1 (left: 1 10)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 + 6 = 16 (left: 9 12 16) -> 12 - 9 = 3 (left: 3 12 16) -> 12 - 3 = 9 (left: 9 12 16) -> 9 / 12 = 0.75 (left: 0.75 12 16) -> 0.75 * 12 = 9 (left: 9 16) -> Input: 5 5 5 5 -> 5 + 5 = 10 (left: 5 5 10) -> 5 / 5 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "-3.5 7 10.5"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 + 12 = 22 (left: 6 9 22)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "6 9 10"
                }
            },
            "Step 1": {
                "Step": "12 - 6 = 6 (left: 6 9 10) -> 9 + 10 = 19 (left: 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 6 = 6 (left: 6 9 10) -> 9 + 10 = 19 (left: 6) -> 6 + 8 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 6 = 6 (left: 6 9 10) -> 9 + 10 = 19 (left: 6) -> 6 + 8 = 14 (left: 14) -> There are no possible next steps as there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "11.33 19"
                }
            },
            "Step 4": {
                "Step": "6 / 9 = 0.67 (left: 0.67 9 10 12) -> 12 - 0.67 = 11.33 (left: 9 10 11.33) -> 9 + 10 = 19 (left: 11.33 19) -> 19 + 11.33 = 30.33 (left:",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 / 9 = 0.67 (left: 0.67 9 10 12) -> 12 - 0.67 = 11.33 (left: 9 10 11.33) -> 9 + 10 = 19 (left: 11.33 19) -> 19 + 11.33 = 30.33 (left: -> 19 * 11.33 = 215.27 (left: 215.27 + 30.33)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 9 = 0.67 (left: 0.67 9 10 12) -> 12 - 0.67 = 11.33 (left: 9 10 11.33) -> 9 + 10 = 19 (left: 11.33 19) -> 19 + 11.33 = 30.33 (left: -> 19 * 11.33 = 215.27 (left: 215.27 + 30.33) -> 215.27 + 30.33 = 245.6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "0.75 12 16"
                }
            },
            "Step 7": {
                "Step": "10 + 6 = 16 (left: 9 12 16) -> 12 - 9 = 3 (left: 3 12 16) -> 12 - 3 = 9 (left: 9 12 16) -> 9 / 12 = 0.75 (left: 0.75 12 16) -> 0.75 * 12 = 9 (left: 9 16)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 + 6 = 16 (left: 9 12 16) -> 12 - 9 = 3 (left: 3 12 16) -> 12 - 3 = 9 (left: 9 12 16) -> 9 / 12 = 0.75 (left: 0.75 12 16) -> 0.75 * 12 = 9 (left: 9 16) -> 9 + 16 = 25 (left: 25)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "5 5 10"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 + 10 = 19 (left: 6 12 19)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "9 12 16"
                }
            },
            "Step 1": {
                "Step": "10 + 6 = 16 (left: 9 12 16) -> 12 - 9 = 3 (left: 3 12 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 6 = 16 (left: 9 12 16) -> 12 - 9 = 3 (left: 3 12 16) -> 12 - 3 = 9 (left: 9 12 16)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 + 6 = 16 (left: 9 12 16) -> 12 - 9 = 3 (left: 3 12 16) -> 12 - 3 = 9 (left: 9 12 16) -> 9 / 12 = 0.75 (left: 0.75 12 16)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "0.75 12 16"
                }
            },
            "Step 4": {
                "Step": "10 + 6 = 16 (left: 9 12 16) -> 12 - 9 = 3 (left: 3 12 16) -> 12 - 3 = 9 (left: 9 12 16) -> 9 / 12 = 0.75 (left: 0.75 12 16) -> 16 / 0.75 = 21.33 (left: 12 21.33)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 + 6 = 16 (left: 9 12 16) -> 12 - 9 = 3 (left: 3 12 16) -> 12 - 3 = 9 (left: 9 12 16) -> 9 / 12 = 0.75 (left: 0.75 12 16) -> 16 / 0.75 = 21.33 (left: 12 21.33) -> 21.33 + 12 = 33.33 (",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 + 6 = 16 (left: 9 12 16) -> 12 - 9 = 3 (left: 3 12 16) -> 12 - 3 = 9 (left: 9 12 16) -> 9 / 12 = 0.75 (left: 0.75 12 16) -> 16 / 0.75 = 21.33 (left: 12 21.33) -> 21.33 + 12 = 33.33 ( -> 21.33 - 12 = 9.33 (left: 9.33 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "-3.5 7 10.5"
                }
            },
            "Step 7": {
                "Step": "6 / 9 = 0.67 (left: 0.67 9 10 12) -> 12 - 0.67 = 11.33 (left: 9 10 11.33) -> 9 + 10 = 19 (left: 11.33 19) -> 3.5 + 7 = -> 3.5 + 7 = 10.5 -> 3.5 - 7 = -3.5 (left: -3.5 7 10.5) -> -3.5 + 7 = 3.5 (left: 3.5 10.5)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 / 9 = 0.67 (left: 0.67 9 10 12) -> 12 - 0.67 = 11.33 (left: 9 10 11.33) -> 9 + 10 = 19 (left: 11.33 19) -> 3.5 + 7 = -> 3.5 + 7 = 10.5 -> 3.5 - 7 = -3.5 (left: -3.5 7 10.5) -> -3.5 + 7 = 3.5 (left: 3.5 10.5) -> 10.5 / 3.5 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "5 5 10"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "9 + 10 = 19 (left: 6 12 19)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 12"
                }
            },
            "Step 1": {
                "Step": "9 * 10 = 90 (left: 6 12 90)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 * 10 = 90 (left: 6 12 90) -> 12 - 6 = 6 (left: 6 90)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 * 10 = 90 (left: 6 12 90) -> 12 - 6 = 6 (left: 6 90) -> 90 / 6 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "0.75 12 16"
                }
            },
            "Step 4": {
                "Step": "10 + 6 = 16 (left: 9 12 16) -> 12 - 9 = 3 (left: 3 12 16) -> 12 - 3 = 9 (left: 9 12 16) -> 9 / 12 = 0.75 (left: 0.75 12 16) -> 12 / 0.75 = 16 (left: 16 16)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 + 6 = 16 (left: 9 12 16) -> 12 - 9 = 3 (left: 3 12 16) -> 12 - 3 = 9 (left: 9 12 16) -> 9 / 12 = 0.75 (left: 0.75 12 16) -> 12 / 0.75 = 16 (left: 16 16) -> 16 + 16 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "0.75 12 16"
                }
            },
            "Step 6": {
                "Step": "10 + 6 = 16 (left: 9 12 16) -> 12 - 9 = 3 (left: 3 12 16) -> 12 - 3 = 9 (left: 9 12 16) -> 9 / 12 = 0.75 (left: 0.75 12 16) -> 16 - 0.75 = 15.25 (left: 12 15.25)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "-3.5 7 10.5"
                }
            },
            "Step 7": {
                "Step": "6 / 9 = 0.67 (left: 0.67 9 10 12) -> 12 - 0.67 = 11.33 (left: 9 10 11.33) -> 9 + 10 = 19 (left: 11.33 19) -> 3.5 + 7 = -> 3.5 + 7 = 10.5 -> 3.5 - 7 = -3.5 (left: -3.5 7 10.5) -> 7 - (-3.5) = 10.5 (left: 10.5 10.5)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 / 9 = 0.67 (left: 0.67 9 10 12) -> 12 - 0.67 = 11.33 (left: 9 10 11.33) -> 9 + 10 = 19 (left: 11.33 19) -> 3.5 + 7 = -> 3.5 + 7 = 10.5 -> 3.5 - 7 = -3.5 (left: -3.5 7 10.5) -> 7 - (-3.5) = 10.5 (left: 10.5 10.5) -> 10.5 + 10.5 = 21 (left: 21)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "0.75 12 16"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 6 9 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 12"
                }
            },
            "Step 1": {
                "Step": "10 * 12 = 120 (left: 6 9 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 * 12 = 120 (left: 6 9  -> 9 / 6 = 1.5 (left: 1.5 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 * 12 = 120 (left: 6 9  -> 9 / 6 = 1.5 (left: 1.5 9) -> 1.5 + 9 = 10.5 (left: 10.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "0.75 12 16"
                }
            },
            "Step 4": {
                "Step": "10 + 6 = 16 (left: 9 12 16) -> 12 - 9 = 3 (left: 3 12 16) -> 12 - 3 = 9 (left: 9 12 16) -> 9 / 12 = 0.75 (left: 0.75 12 16) -> 0.75 + 12 = 12.75 (left: 12.75 16)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 + 6 = 16 (left: 9 12 16) -> 12 - 9 = 3 (left: 3 12 16) -> 12 - 3 = 9 (left: 9 12 16) -> 9 / 12 = 0.75 (left: 0.75 12 16) -> 0.75 + 12 = 12.75 (left: 12.75 16) -> 12.75 + 16 = 28.75 (left: 28.75)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "6 9 22"
                }
            },
            "Step 6": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 22 / 6 = 3.67 (left: 3.67 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "12 15.25"
                }
            },
            "Step 7": {
                "Step": "10 + 6 = 16 (left: 9 12 16) -> 12 - 9 = 3 (left: 3 12 16) -> 12 - 3 = 9 (left: 9 12 16) -> 9 / 12 = 0.75 (left: 0.75 12 16) -> 16 - 0.75 = 15.25 (left: 12 15.25) -> 12 * 15.25 = 183 (left: 183)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "5 5 10"
                }
            },
            "Step 8": {
                "Step": "10 + 6 = 16 (left: 9 12 16) -> 12 - 9 = 3 (left: 3 12 16) -> 12 - 3 = 9 (left: 9 12 16) -> 9 / 12 = 0.75 (left: 0.75 12 16) -> 0.75 * 12 = 9 (left: 9 16) -> Input: 5 5 5 5 -> 5 + 5 = 10 (left: 5 5 10) -> 5 + 5 = 10 (left: 10 10)",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 * 9 = 54 (left: 10 12 54)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 12"
                }
            },
            "Step 1": {
                "Step": "9 + 10 = 19 (left: 6 12 19)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 6 * 12 = 72 (left: 72 19)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 6 * 12 = 72 (left: 72 19) -> 72 / 19 = 3.789 (left: 3.789)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "11.33 19"
                }
            },
            "Step 4": {
                "Step": "6 / 9 = 0.67 (left: 0.67 9 10 12) -> 12 - 0.67 = 11.33 (left: 9 10 11.33) -> 9 + 10 = 19 (left: 11.33 19) -> 3.5 + 7 =",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 / 9 = 0.67 (left: 0.67 9 10 12) -> 12 - 0.67 = 11.33 (left: 9 10 11.33) -> 9 + 10 = 19 (left: 11.33 19) -> 3.5 + 7 = -> 3.5 + 7 = 10.5",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 9 = 0.67 (left: 0.67 9 10 12) -> 12 - 0.67 = 11.33 (left: 9 10 11.33) -> 9 + 10 = 19 (left: 11.33 19) -> 3.5 + 7 = -> 3.5 + 7 = 10.5 -> 3.5 - 7 = -3.5 (left: -3.5 7 10.5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "0.75 12 16"
                }
            },
            "Step 7": {
                "Step": "10 + 6 = 16 (left: 9 12 16) -> 12 - 9 = 3 (left: 3 12 16) -> 12 - 3 = 9 (left: 9 12 16) -> 9 / 12 = 0.75 (left: 0.75 12 16) -> 16 - 0.75 = 15.25 (left: 12 15.25)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 + 6 = 16 (left: 9 12 16) -> 12 - 9 = 3 (left: 3 12 16) -> 12 - 3 = 9 (left: 9 12 16) -> 9 / 12 = 0.75 (left: 0.75 12 16) -> 16 - 0.75 = 15.25 (left: 12 15.25) -> 12 - 15.25 = -3.25 (left: -3.25)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "-3.5 7 10.5"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "10 + 6 = 16 (left: 9 12 16)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 12"
                }
            },
            "Step 1": {
                "Step": "10 + 12 = 22 (left: 6 9 22)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 6 + 9 = 15 (left: 15 22)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 6 + 9 = 15 (left: 15 22) -> 15 - 22 = -7 (left: -7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "0.75 12 16"
                }
            },
            "Step 4": {
                "Step": "10 + 6 = 16 (left: 9 12 16) -> 12 - 9 = 3 (left: 3 12 16) -> 12 - 3 = 9 (left: 9 12 16) -> 9 / 12 = 0.75 (left: 0.75 12 16) -> 16 - 0.75 = 15.25 (left: 12 15.25)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 + 6 = 16 (left: 9 12 16) -> 12 - 9 = 3 (left: 3 12 16) -> 12 - 3 = 9 (left: 9 12 16) -> 9 / 12 = 0.75 (left: 0.75 12 16) -> 16 - 0.75 = 15.25 (left: 12 15.25) -> 12 / 15.25 \u2248 0.7877 (left: 0.7877)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "11.33 19"
                }
            },
            "Step 6": {
                "Step": "6 / 9 = 0.67 (left: 0.67 9 10 12) -> 12 - 0.67 = 11.33 (left: 9 10 11.33) -> 9 + 10 = 19 (left: 11.33 19) -> 11.33 + 19 = 30.33 (left: 30.33)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "0.75 12 16"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "-3.5 7 10.5"
                }
            },
            "Step 7": {
                "Step": "6 / 9 = 0.67 (left: 0.67 9 10 12) -> 12 - 0.67 = 11.33 (left: 9 10 11.33) -> 9 + 10 = 19 (left: 11.33 19) -> 3.5 + 7 = -> 3.5 + 7 = 10.5 -> 3.5 - 7 = -3.5 (left: -3.5 7 10.5) -> -3.5 + 7 = 3.5 (left: 3.5 10.5)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 / 9 = 0.67 (left: 0.67 9 10 12) -> 12 - 0.67 = 11.33 (left: 9 10 11.33) -> 9 + 10 = 19 (left: 11.33 19) -> 3.5 + 7 = -> 3.5 + 7 = 10.5 -> 3.5 - 7 = -3.5 (left: -3.5 7 10.5) -> -3.5 + 7 = 3.5 (left: 3.5 10.5) -> 3.5 + 10.5 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "0.75 12 16"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 10 12 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 12"
                }
            },
            "Step 1": {
                "Step": "9 + 10 = 19 (left: 6 12 19)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 19 / 6 = 3.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 19 / 6 = 3. -> 19 / 3 = 6.33 (left: 6.33)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "0.75 12 16"
                }
            },
            "Step 4": {
                "Step": "10 + 6 = 16 (left: 9 12 16) -> 12 - 9 = 3 (left: 3 12 16) -> 12 - 3 = 9 (left: 9 12 16) -> 9 / 12 = 0.75 (left: 0.75 12 16) -> 0.75 * 12 = 9 (left: 9 16)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 + 6 = 16 (left: 9 12 16) -> 12 - 9 = 3 (left: 3 12 16) -> 12 - 3 = 9 (left: 9 12 16) -> 9 / 12 = 0.75 (left: 0.75 12 16) -> 0.75 * 12 = 9 (left: 9 16) -> Input: 5 5 5 5",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 + 6 = 16 (left: 9 12 16) -> 12 - 9 = 3 (left: 3 12 16) -> 12 - 3 = 9 (left: 9 12 16) -> 9 / 12 = 0.75 (left: 0.75 12 16) -> 0.75 * 12 = 9 (left: 9 16) -> Input: 5 5 5 5 -> 5 + 5 = 10 (left: 5 5 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "0.75 12 16"
                }
            },
            "Step 7": {
                "Step": "10 + 6 = 16 (left: 9 12 16) -> 12 - 9 = 3 (left: 3 12 16) -> 12 - 3 = 9 (left: 9 12 16) -> 9 / 12 = 0.75 (left: 0.75 12 16) -> 16 - 0.75 = 15.25 (left: 12 15.25)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 + 6 = 16 (left: 9 12 16) -> 12 - 9 = 3 (left: 3 12 16) -> 12 - 3 = 9 (left: 9 12 16) -> 9 / 12 = 0.75 (left: 0.75 12 16) -> 16 - 0.75 = 15.25 (left: 12 15.25) -> 12 / 15.25 = 0.787704918 (left: 0.787704918)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "0.75 12 16"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: 3 10 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 12"
                }
            },
            "Step 1": {
                "Step": "9 + 10 = 19 (left: 6 12 19)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 12 * 6 = 72 (left: 72 19)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 12 * 6 = 72 (left: 72 19) -> 72 + 19 = 91 (left: 91)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "0.75 12 16"
                }
            },
            "Step 4": {
                "Step": "10 + 6 = 16 (left: 9 12 16) -> 12 - 9 = 3 (left: 3 12 16) -> 12 - 3 = 9 (left: 9 12 16) -> 9 / 12 = 0.75 (left: 0.75 12 16) -> 16 / 0.75 = 21.33 (left: 12 21.33)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 + 6 = 16 (left: 9 12 16) -> 12 - 9 = 3 (left: 3 12 16) -> 12 - 3 = 9 (left: 9 12 16) -> 9 / 12 = 0.75 (left: 0.75 12 16) -> 16 / 0.75 = 21.33 (left: 12 21.33) -> 12 + 21.33 = 33.33 (left: 33.33)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "0.75 12 16"
                }
            },
            "Step 6": {
                "Step": "10 + 6 = 16 (left: 9 12 16) -> 12 - 9 = 3 (left: 3 12 16) -> 12 - 3 = 9 (left: 9 12 16) -> 9 / 12 = 0.75 (left: 0.75 12 16) -> 12 / 0.75 = 16 (left: 16 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "12 15.25"
                }
            },
            "Step 7": {
                "Step": "10 + 6 = 16 (left: 9 12 16) -> 12 - 9 = 3 (left: 3 12 16) -> 12 - 3 = 9 (left: 9 12 16) -> 9 / 12 = 0.75 (left: 0.75 12 16) -> 16 - 0.75 = 15.25 (left: 12 15.25) -> 12 - 15.25 = -3.25 (left: -3.25)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "5 5 10"
                }
            },
            "Step 8": {
                "Step": "10 + 6 = 16 (left: 9 12 16) -> 12 - 9 = 3 (left: 3 12 16) -> 12 - 3 = 9 (left: 9 12 16) -> 9 / 12 = 0.75 (left: 0.75 12 16) -> 0.75 * 12 = 9 (left: 9 16) -> Input: 5 5 5 5 -> 5 + 5 = 10 (left: 5 5 10) -> 5 / 5 = 1 (left: 1 10)",
                "Pruning": null
            }
        },
        "Input": "6 9 10 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1056": {
        "puzzle": "6 9 9 12",
        "Agent 0": {
            "Step 0": {
                "Step": "9 + 9 = 18 (left: 6 18 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 12 27"
                }
            },
            "Step 1": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 27 - 9 = 18 (left: 9 12 18)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 27 - 9 = 18 (left: 9 12 18) -> 9 + 12 = 21 (left: 18 21)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 27 - 9 = 18 (left: 9 12 18) -> 9 + 12 = 21 (left: 18 21) -> 21 / 18 = 1.1667 (left: 1.1667)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "9 9 12"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "9 12 27"
                }
            },
            "Step 4": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 9 / 3 = 3 (left: 3 12 27)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 9 / 3 = 3 (left: 3 12 27) -> 3 * 12 = 36 (left: 27 36)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 9 / 3 = 3 (left: 3 12 27) -> 3 * 12 = 36 (left: 27 36) -> 27 - 36 = -9 (left: -9)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "3.75"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "3.75"
                }
            },
            "Step 7": {
                "Step": "6 * 9 = 54 (left: 9 12 54) -> 54 - 9 = 45 (left: 12 45) -> 45 / 12 = 3.75 (left: 3.75) -> There are no possible next steps for the input 3.75.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 * 9 = 54 (left: 9 12 54) -> 54 - 9 = 45 (left: 12 45) -> 45 / 12 = 3.75 (left: 3.75) -> There are no possible next steps for the input 3.75. -> 3.75 / 3.75 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "8 18"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: 3 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 12"
                }
            },
            "Step 1": {
                "Step": "9 - 6 = 3 (left: 3 9 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 6 = 3 (left: 3 9 12) -> 9 / 3 = 3 (left: 3 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 6 = 3 (left: 3 9 12) -> 9 / 3 = 3 (left: 3 12) -> 12 / 3 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "9 9 12"
                }
            },
            "Step 4": {
                "Step": "6 + 9 = 15 (left: 9 9 12) -> 9 / 9 = 1 (left: 1 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 9 = 15 (left: 9 9 12) -> 9 / 9 = 1 (left: 1 12) -> 1 + 12 = 13 (left: 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 9 = 15 (left: 9 9 12) -> 9 / 9 = 1 (left: 1 12) -> 1 + 12 = 13 (left: 13) -> There are no possible next steps with the input of 13.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "3.75"
                }
            },
            "Step 7": {
                "Step": "6 * 9 = 54 (left: 9 12 54) -> 54 - 9 = 45 (left: 12 45) -> 45 / 12 = 3.75 (left: 3.75) -> 3.75 * 2 = 7.5",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 * 9 = 54 (left: 9 12 54) -> 54 - 9 = 45 (left: 12 45) -> 45 / 12 = 3.75 (left: 3.75) -> 3.75 * 2 = 7.5 -> 3.75 + 2 = 5.75 (left: 5.75 = 7.5)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 * 3 = 27 (left: 9 12 27)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 12"
                }
            },
            "Step 1": {
                "Step": "6 * 9 = 54 (left: 9 12 54)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 9 = 54 (left: 9 12 54) -> 54 - 9 = 45 (left: 12 45)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 9 = 54 (left: 9 12 54) -> 54 - 9 = 45 (left: 12 45) -> 45 / 12 = 3.75 (left: 3.75)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "9 9 12"
                }
            },
            "Step 4": {
                "Step": "6 + 9 = 15 (left: 9 9 12) -> 12 * 9 = 108 (left: 108)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 9 = 15 (left: 9 9 12) -> 12 * 9 = 108 (left: 108) -> 1 - 0 + 8 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 9 = 15 (left: 9 9 12) -> 12 * 9 = 108 (left: 108) -> 1 - 0 + 8 = 9 (left: 9) -> 9 - 8 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "3.75"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "There are no possible next steps with the input 1.5."
                }
            },
            "Step 7": {
                "Step": "6 + 9 = 15 (left: 9 9 12) -> 9 + 9 = 18 (left: 18 12) -> 18 / 12 = 1.5 (left: 1.5) -> There are no possible next steps with the input 1.5. -> There are no possible next steps with the input 1.5.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 9 = 15 (left: 9 9 12) -> 9 + 9 = 18 (left: 18 12) -> 18 / 12 = 1.5 (left: 1.5) -> There are no possible next steps with the input 1.5. -> There are no possible next steps with the input 1.5. -> There are no possible next steps with the input 1.5.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 9 9 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "9 9 12"
                }
            },
            "Step 1": {
                "Step": "6 + 9 = 15 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 9 = 15 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 12 / 0 = undefined",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 9 = 15 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 12 / 0 = undefined -> Division by zero is undefined in mathematics.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "9 9 12"
                }
            },
            "Step 4": {
                "Step": "6 + 9 = 15 (left: 9 9 12) -> 12 - 9 = 3 (left: 9 3)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 9 = 15 (left: 9 9 12) -> 12 - 9 = 3 (left: 9 3) -> 9 * 3 = 27 (left: 27)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 9 = 15 (left: 9 9 12) -> 12 - 9 = 3 (left: 9 3) -> 9 * 3 = 27 (left: 27) -> 27 / 2 = 13.5 (left: 13.5)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "4"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no possible next steps with the input of 13."
                }
            },
            "Step 7": {
                "Step": "6 + 9 = 15 (left: 9 9 12) -> 9 / 9 = 1 (left: 1 12) -> 1 + 12 = 13 (left: 13) -> There are no possible next steps with the input of 13. -> 13 / 8 = 1.625 (left: 1.625 8)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 9 = 15 (left: 9 9 12) -> 9 / 9 = 1 (left: 1 12) -> 1 + 12 = 13 (left: 13) -> There are no possible next steps with the input of 13. -> 13 / 8 = 1.625 (left: 1.625 8) -> 1.625 * 8 = 13 (left: 13)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "There are no possible next steps with the input of 13."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 9 9 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 9 12"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 6 9 12) -> 6 + 9 = 15 (left: 15 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 6 9 12) -> 6 + 9 = 15 (left: 15 12) -> 15 * 12 = 180 (left: 180)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 / 3 = 3 (left: 6 9 12) -> 6 + 9 = 15 (left: 15 12) -> 15 * 12 = 180 (left: 180) -> There are no possible next steps for the input 180.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "9 9 12"
                }
            },
            "Step 4": {
                "Step": "6 + 9 = 15 (left: 9 9 12) -> 12 / 9 = 1.33 (left: 1.33)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 9 = 15 (left: 9 9 12) -> 12 / 9 = 1.33 (left: 1.33) -> There are no possible next steps with the input 1.33.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 9 = 15 (left: 9 9 12) -> 12 / 9 = 1.33 (left: 1.33) -> There are no possible next steps with the input 1.33. -> There are no possible next steps with the input 1.33.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "4"
                }
            },
            "Step 7": {
                "Step": "9 - 6 = 3 (left: 3 9 12) -> 9 / 3 = 3 (left: 3 12) -> 12 / 3 = 4 (left: 4) -> There are no possible next steps with just the number 4.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 6 = 3 (left: 3 9 12) -> 9 / 3 = 3 (left: 3 12) -> 12 / 3 = 4 (left: 4) -> There are no possible next steps with just the number 4. -> 4 + 2 = 6 (left: 2 6)",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: 3 9 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 12"
                }
            },
            "Step 1": {
                "Step": "6 + 9 = 15 (left: 9 9 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 9 = 15 (left: 9 9 12) -> 9 + 9 = 18 (left: 12 18)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 9 = 15 (left: 9 9 12) -> 9 + 9 = 18 (left: 12 18) -> 12 / 2 =",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 12 27"
                }
            },
            "Step 4": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 27 / 9",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 27 / 9 -> 27 / 9 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 27 / 9 -> 27 / 9 = 3 (left: 3) -> 8 - 3 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "21 / 2 = 10.5"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "9 14"
                }
            },
            "Step 7": {
                "Step": "6 + 9 = 15 (left: 9 9 12) -> 9 * 9 = 81 (left: 12 81) -> 12 * 81 = 972 (left: 972) -> 7 * 2 = 14 (left: 9 14) -> 9 * 14 = 126 (left: 126)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "8 18"
                }
            },
            "Step 8": {
                "Step": "6 + 9 = 15 (left: 9 9 12) -> 12 * 9 -> 12 * 9 = 108 (left: 108) -> 10 + 8 = 18 (left: 8 18) -> 8 * 18 = 144 (left: 144)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "There are no possible next steps with the input 1.5."
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 9 9 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 12 27"
                }
            },
            "Step 1": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 27 - 12 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 27 - 12 =  -> 27 - 12 = 15",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 27 - 12 =  -> 27 - 12 = 15 -> 27 + 12 = 39 (left: 39)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "9 12 27"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "9 9 12"
                }
            },
            "Step 4": {
                "Step": "6 + 9 = 15 (left: 9 9 12) -> 9 + 9 = 18 (left: 18 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 9 = 15 (left: 9 9 12) -> 9 + 9 = 18 (left: 18 12) -> 18 / 12 = 1.5 (left: 1.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 9 = 15 (left: 9 9 12) -> 9 + 9 = 18 (left: 18 12) -> 18 / 12 = 1.5 (left: 1.5) -> There are no possible next steps with the input 1.5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "3.75"
                }
            },
            "Step 7": {
                "Step": "6 * 9 = 54 (left: 9 12 54) -> 54 - 9 = 45 (left: 12 45) -> 45 / 12 = 3.75 (left: 3.75) -> 3.75 - 2 = 1.75",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 * 9 = 54 (left: 9 12 54) -> 54 - 9 = 45 (left: 12 45) -> 45 / 12 = 3.75 (left: 3.75) -> 3.75 - 2 = 1.75 -> 3.75 * 2 = 7.5 (left: 2 7.5)",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 6 9 12)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 9 12"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 6 9 12) -> 6 + 9 = 15 (left: 15 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 6 9 12) -> 6 + 9 = 15 (left: 15 12) -> 15 + 12 = 27 (left: 27)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 / 3 = 3 (left: 6 9 12) -> 6 + 9 = 15 (left: 15 12) -> 15 + 12 = 27 (left: 27) -> There are no possible next steps for the input 27.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "9 9 12"
                }
            },
            "Step 4": {
                "Step": "6 + 9 = 15 (left: 9 9 12) -> 9 * 9 = 81 (left: 12 81)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 9 = 15 (left: 9 9 12) -> 9 * 9 = 81 (left: 12 81) -> 12 * 81 = 972 (left: 972)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 9 = 15 (left: 9 9 12) -> 9 * 9 = 81 (left: 12 81) -> 12 * 81 = 972 (left: 972) -> 7 * 2 = 14 (left: 9 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "There are no possible next steps with the input 1.33."
                }
            },
            "Step 7": {
                "Step": "6 + 9 = 15 (left: 9 9 12) -> 12 / 9 = 1.33 (left: 1.33) -> There are no possible next steps with the input 1.33. -> There are no possible next steps with the input 1.33. -> There are no possible next steps with the input 1.33.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 9 = 15 (left: 9 9 12) -> 12 / 9 = 1.33 (left: 1.33) -> There are no possible next steps with the input 1.33. -> There are no possible next steps with the input 1.33. -> There are no possible next steps with the input 1.33. -> There are no possible next steps with the input 1.33.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 6 9 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 12 27"
                }
            },
            "Step 1": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 9 * 12 = 108 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 9 * 12 = 108 (left: -> 9 + 12 = 21 (left: 21)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 9 * 12 = 108 (left: -> 9 + 12 = 21 (left: 21) -> 21 / 2 = 10.5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "9 9 12"
                }
            },
            "Step 4": {
                "Step": "6 + 9 = 15 (left: 9 9 12) -> 12 * 9",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 9 = 15 (left: 9 9 12) -> 12 * 9 -> 12 * 9 = 108 (left: 108)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 9 = 15 (left: 9 9 12) -> 12 * 9 -> 12 * 9 = 108 (left: 108) -> 10 + 8 = 18 (left: 8 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "8 18"
                }
            },
            "Step 7": {
                "Step": "6 + 9 = 15 (left: 9 9 12) -> 12 * 9 -> 12 * 9 = 108 (left: 108) -> 10 + 8 = 18 (left: 8 18) -> 8 * 18 = 144 (left: 144)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "3.75"
                }
            },
            "Step 8": {
                "Step": "6 * 9 = 54 (left: 9 12 54) -> 54 - 9 = 45 (left: 12 45) -> 45 / 12 = 3.75 (left: 3.75) -> There is only one number, so there are no possible next steps.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 6 9 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 9 12"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 6 9 12) -> 12 / 9 = 1.33 (left: 1.33 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 6 9 12) -> 12 / 9 = 1.33 (left: 1.33 12) -> 1.33 * 12 = 15.96 (left: 15.96)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 / 3 = 3 (left: 6 9 12) -> 12 / 9 = 1.33 (left: 1.33 12) -> 1.33 * 12 = 15.96 (left: 15.96) -> None, as there is only one number given in the input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "9 9 12"
                }
            },
            "Step 4": {
                "Step": "6 + 9 = 15 (left: 9 9 12) -> 9 + 9 = 18 (left: 18 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 9 = 15 (left: 9 9 12) -> 9 + 9 = 18 (left: 18 12) -> 18 - 12 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 9 = 15 (left: 9 9 12) -> 9 + 9 = 18 (left: 18 12) -> 18 - 12 = 6 (left: 6) -> 6 + 8 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "3.75"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "4"
                }
            },
            "Step 7": {
                "Step": "9 - 6 = 3 (left: 3 9 12) -> 9 / 3 = 3 (left: 3 12) -> 12 / 3 = 4 (left: 4) -> 4 + 4 = 8",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 6 = 3 (left: 3 9 12) -> 9 / 3 = 3 (left: 3 12) -> 12 / 3 = 4 (left: 4) -> 4 + 4 = 8 -> 4 - 4 = 0 (left: 0 4 8)",
                "Pruning": null
            }
        },
        "Input": "6 9 9 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1057": {
        "puzzle": "2 3 6 12",
        "Agent 0": {
            "Step 0": {
                "Step": "3 * 2 = 6 (left: 6 6 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> Possible",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> Possible -> It appears that the input is not clear. Please provide a valid input for the next steps to be determined.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> Possible -> It appears that the input is not clear. Please provide a valid input for the next steps to be determined. -> Apologies for the confusion. Please provide a valid set of numbers for the next steps to be determined.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 * 12 = 144 (left: 144)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 * 12 = 144 (left: 144) -> There is only one number, so there are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "24 144"
                }
            },
            "Step 7": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 -> 12 * 12 = 144 (left: 24 144) -> 24 * 144 = 3456 (left: 3456)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "24 144"
                }
            },
            "Step 8": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 -> 12 * 12 = 144 (left: 24 144) -> 144 / 24 = 6 (left: 6)"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 * 2 = 6 (left: 6 6 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "3 6 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 3 6 12) -> 6 * 2 = 12 (left: 3 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 3 6 12) -> 6 * 2 = 12 (left: 3 12) -> 12 / 3 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 3 6 12) -> 6 * 2 = 12 (left: 3 12) -> 12 / 3 = 4 (left: 4) -> 4 + 4 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 12 + 6 = 18 (left: 6 18)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 12 + 6 = 18 (left: 6 18) -> 18 / 6 = 3 (left: 3 18)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 12 + 6 = 18 (left: 6 18) -> 18 / 6 = 3 (left: 3 18) -> 3 * 18 = 54 (left: 54)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "24 144"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "24 144"
                }
            },
            "Step 7": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 -> 12 * 12 = 144 (left: 24 144) -> 24 / 144 = 0.16666666666667 (left: 0.16666666666667)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "24 144"
                }
            },
            "Step 8": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 -> 12 * 12 = 144 (left: 24 144) -> 144 / 24 = 6 (left: 6)"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 2 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12) -> 12 - 1 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12) -> 12 - 1 = 11 (left: 11) -> There are no possible next steps with the input 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 - 12 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 - 12 = 0 (left: 0) -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "24 144"
                }
            },
            "Step 7": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 -> 12 * 12 = 144 (left: 24 144) -> 144 / 24 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "24 144"
                }
            },
            "Step 8": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 -> 12 * 12 = 144 (left: 24 144) -> 24 + 144 = 168 (left: 168)"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 6 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12) -> 4 + 12 = 16 (left: 16)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 2 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12) -> 4 + 12 = 16 (left: 16) -> There are no possible next steps as there are no more numbers to operate on. The final result is 16.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 + 12 = 48 (left: 48)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 + 12 = 48 (left: 48) -> There are no possible next steps for the number 48 as it is already a single number and cannot be combined with any other numbers in the input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "24 144"
                }
            },
            "Step 7": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 -> 12 * 12 = 144 (left: 24 144) -> 24 + 144 = 168 (left: 168)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "24 144"
                }
            },
            "Step 8": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 -> 12 * 12 = 144 (left: 24 144) -> 24 + 144 = 168 (left: 24 168)"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 6 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 3 12 12) -> 3 + 12 = 15 (left: 12 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 3 12 12) -> 3 + 12 = 15 (left: 12 15) -> 15 / 12 = 1.25 (left: 1.25 15)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 2 = 12 (left: 3 12 12) -> 3 + 12 = 15 (left: 12 15) -> 15 / 12 = 1.25 (left: 1.25 15) -> Input: 3 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "24 144"
                }
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 -> 12 * 12 = 144 (left: 24 144) -> 24 * 6 = 144 (left: 144)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "3 6"
                }
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 12 / 6 = 2 (left: -> 12 / 2 = 6 (left: 6) -> 6 / 2 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "24 144"
                }
            },
            "Step 6": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 -> 12 * 12 = 144 (left: 24 144) -> 24 + 144 = 168 (left: 168)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "24 144"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "12 12"
                }
            },
            "Step 7": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 * 12 = 144 (left: 144)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 * 12 = 144 (left: 144) -> There are no possible next steps for the number 144 as it is already a single number."
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 6 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 3 12 12) -> 12 - 3 = 9 (left: 9 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 3 12 12) -> 12 - 3 = 9 (left: 9 12) -> 12 / 9 = 1.33 (left: 1.33)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 2 = 12 (left: 3 12 12) -> 12 - 3 = 9 (left: 9 12) -> 12 / 9 = 1.33 (left: 1.33) -> There is only one number given (1.33) so there are no possible next steps to calculate.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "3 6"
                }
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 12 / 6 = 2 (left: -> 12 / 2 = 6 (left: 6) -> 6 / 2 = 3 (left: 3 6) -> 6 / 3 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "24 144"
                }
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 -> 12 * 12 = 144 (left: 24 144) -> 144 - 24 = 120 (left: 120)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "24 144"
                }
            },
            "Step 6": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 -> 12 * 12 = 144 (left: 24 144) -> 24 / 144 = 0.16666666666666666 (left: 0.166666",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "24 144"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "24 144"
                }
            },
            "Step 7": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 -> 12 * 12 = 144 (left: 24 144) -> 27 / 3 = 9 (left: 3 9 27)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 -> 12 * 12 = 144 (left: 24 144) -> 27 / 3 = 9 (left: 3 9 27) -> 27 / 3 = 9 (left: 9 9)"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 2 6 6)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 -> 12 * 12 = 144 (left: 24 144)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "24 144"
                }
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 -> 12 * 12 = 144 (left: 24 144) -> 144 / 24 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "3 6"
                }
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 12 / 6 = 2 (left: -> 12 / 2 = 6 (left: 6) -> 6 / 2 = 3 (left: 3 6) -> 6 / 3 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "24 144"
                }
            },
            "Step 6": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 -> 12 * 12 = 144 (left: 24 144) -> 24 * 6 = 144 (left: 144)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "3 6"
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "24 144"
                }
            },
            "Step 7": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 -> 12 * 12 = 144 (left: 24 144) -> 24 + 144 = 168 (left: 168)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "24 144"
                }
            },
            "Step 8": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 -> 12 * 12 = 144 (left: 24 144) -> 144 / 24 = 6 (left: 6)"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "12 / 2 = 6 (left: 3 6 12)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "3 6 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 3 6 12) -> 3 * 6 = 18 (left: 18 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 3 6 12) -> 3 * 6 = 18 (left: 18 12) -> 18 - 12 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 3 6 12) -> 3 * 6 = 18 (left: 18 12) -> 18 - 12 = 6 (left: 6) -> 6 + 8 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "6 6 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "24 144"
                }
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 -> 12 * 12 = 144 (left: 24 144) -> 144 - 24 = 120 (left: 120)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "3 6"
                }
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 12 / 6 = 2 (left: -> 12 / 2 = 6 (left: 6) -> 6 / 2 = 3 (left: 3 6) -> 6 / 3 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "6 6 12"
                }
            },
            "Step 6": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "12 12"
                }
            },
            "Step 7": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: ((2 * 3) + 6) + 12 = 24"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "6 * 2 = 12 (left: 3 12 12)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 12 / 6 = 2 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 12 / 6 = 2 (left: -> 12 / 2 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 12 / 6 = 2 (left: -> 12 / 2 = 6 (left: 6) -> 6 / 2 = 3 (left: 3 6)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 - 12 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 - 12 = 0 (left: 0) -> There are no possible next steps as there is no input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "24 144"
                }
            },
            "Step 7": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 -> 12 * 12 = 144 (left: 24 144) -> 144 / 24 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "24 144"
                }
            },
            "Step 8": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 -> 12 * 12 = 144 (left: 24 144) -> 144 - 24 = 120 (left: 120)"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 6 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 12 / 6 = 2 (left: 2 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 12 / 6 = 2 (left: 2 6) -> 2 + 6 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 12 / 6 = 2 (left: 2 6) -> 2 + 6 = 8 (left: 8) -> No possible next steps, the input is the final result.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12) -> 1 * 12 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12) -> 1 * 12 = 12 (left: 12) -> 12 / 2 = 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "12 12"
                }
            },
            "Step 7": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 / 12 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 / 12 = 1 (left: 1) -> 1 + 1 = 2"
            }
        },
        "Input": "2 3 6 12",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": 0
            }
        ]
    },
    "1058": {
        "puzzle": "2 4 4 5",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 4 4 5)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 4 5"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 4 5) -> 4 * 4 = 16 (left: 16 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 4 4 5) -> 4 * 4 = 16 (left: 16 5) -> 16 - 5 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 4 4 5) -> 4 * 4 = 16 (left: 16 5) -> 16 - 5 = 11 (left: 11) -> No possible next steps with the input 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "2 3 4"
                }
            },
            "Step 4": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 - 2 = 2 (left: 2 3)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 - 2 = 2 (left: 2 3) -> 2 + 3 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 - 2 = 2 (left: 2 3) -> 2 + 3 = 5 (left: 5) -> 5 + 5 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "There are no possible next steps with just the number 9."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "2 + 2 / 2 = 3"
                }
            },
            "Step 7": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 - 2 = 2 (left: 2 2) -> 2 + 2 = 4 -> 2 + 2 / 2 = 3 -> 2 / 2 = 1",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 - 2 = 2 (left: 2 2) -> 2 + 2 = 4 -> 2 + 2 / 2 = 3 -> 2 / 2 = 1 -> 1 + 1 = 2 (left: 1 2)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 - 4 = 1 (left: 2 4 1)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 3 4"
                }
            },
            "Step 1": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 2 + 3 = 5 (left: 4 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 2 + 3 = 5 (left: 4 5) -> 10 * 2 = 20 (left: 20)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 2 + 3 = 5 (left: 4 5) -> 10 * 2 = 20 (left: 20) -> There are no possible next steps with the number 20.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "2 3 4"
                }
            },
            "Step 4": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 / 2 = 2 (left: 2 3 2)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 / 2 = 2 (left: 2 3 2) -> 7 - 4 = 3 (left:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 / 2 = 2 (left: 2 3 2) -> 7 - 4 = 3 (left: -> 7 * 4 = 28 (left: 28)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "There is only one number given, so no possible next steps can be determined."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "There are no possible next steps with just the number 9."
                }
            },
            "Step 7": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 3 + 4 = 7 (left: 2 7) -> 2 + 7 = 9 (left: 9) -> There are no possible next steps with just the number 9. -> There are no possible next steps with just the number 9.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 3 + 4 = 7 (left: 2 7) -> 2 + 7 = 9 (left: 9) -> There are no possible next steps with just the number 9. -> There are no possible next steps with just the number 9. -> There are no possible next steps with just the number 9.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 4 5 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 5 6"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30) -> 10 + 5 = 15 (left: 15 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30) -> 10 + 5 = 15 (left: 15 2) -> 15 + 2 = 17 (left: 17)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "2 3 4"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "2 3 4"
                }
            },
            "Step 4": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 2 + 3 = 5 (left: 4 5)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 2 + 3 = 5 (left: 4 5) -> 5 / 4 = 1.25 (left: 1.25)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 2 + 3 = 5 (left: 4 5) -> 5 / 4 = 1.25 (left: 1.25) -> There are no possible next steps for the input 1.25 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps for the input 1.25 as it is already a single number."
                }
            },
            "Step 7": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 2 + 3 = 5 (left: 4 5) -> 5 / 4 = 1.25 (left: 1.25) -> There are no possible next steps for the input 1.25 as it is already a single number. -> There are no possible next steps for the input 1.25 as it is already a single number.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 2 + 3 = 5 (left: 4 5) -> 5 / 4 = 1.25 (left: 1.25) -> There are no possible next steps for the input 1.25 as it is already a single number. -> There are no possible next steps for the input 1.25 as it is already a single number. -> There are no possible next steps for the input 1.25 as it is already a single number.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 - 2 = 2 (left: 2 4 5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 3 4"
                }
            },
            "Step 1": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 - 2 = 2 (left: 2 3 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 - 2 = 2 (left: 2 3 2) -> 3 / 2 = 1.5 (left: 2 1.5 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 - 2 = 2 (left: 2 3 2) -> 3 / 2 = 1.5 (left: 2 1.5 2) -> 2 - 1.5 =  0.5 (left: 0.5 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "2 3 4"
                }
            },
            "Step 4": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 2 + 3 = 5 (left: 4 5)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 2 + 3 = 5 (left: 4 5) -> 4 + 5 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 2 + 3 = 5 (left: 4 5) -> 4 + 5 = 9 (left: 9) -> 9 / 8 = 1.125 (left: 1.125)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "2 = 6"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "There are no possible next steps with the input of 1.5."
                }
            },
            "Step 7": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 2 * 3 = 6 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5) -> There are no possible next steps with the input of 1.5. -> 1.5 * 8 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "No possible next steps as there is no input provided."
                }
            },
            "Step 8": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 / 2 = 2 (left: 2 2) -> 2 - 2 = 0 (left: 0) -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 4 5 6)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 3 4"
                }
            },
            "Step 1": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 3 + 4 = 7 (left: 2 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 3 + 4 = 7 (left: 2 7) -> 2 * 7 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 3 + 4 = 7 (left: 2 7) -> 2 * 7 = 14 (left: 14) -> 14 / 2 = 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "2 3 4"
                }
            },
            "Step 4": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 - 2 = 2 (left: 2 3)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 - 2 = 2 (left: 2 3) -> 2 + 3 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 - 2 = 2 (left: 2 3) -> 2 + 3 = 5 (left: 5) -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "There are no possible next steps with just the number 9."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "2 + 2 / 2 = 3"
                }
            },
            "Step 7": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 - 2 = 2 (left: 2 2) -> 2 + 2 = 4 -> 2 + 2 / 2 = 3 -> 2 / 2 = 1 (left: 2 + 1 = 3)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 - 2 = 2 (left: 2 2) -> 2 + 2 = 4 -> 2 + 2 / 2 = 3 -> 2 / 2 = 1 (left: 2 + 1 = 3) -> 1 * 3 = 3 (left: 2 3)",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "4 / 2 = 2 (left: 2 3 4)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 3 4"
                }
            },
            "Step 1": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 / 2 = 2 (left: 2 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 / 2 = 2 (left: 2 2) -> 2 + 2 = 4",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 / 2 = 2 (left: 2 2) -> 2 + 2 = 4 -> 4 + 2 = 6 (left: 2 = 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "2 3 4"
                }
            },
            "Step 4": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 3 + 4 = 7 (left: 2 7)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 3 + 4 = 7 (left: 2 7) -> 7 - 2 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 3 + 4 = 7 (left: 2 7) -> 7 - 2 = 5 (left: 5) -> There is only one possible next step: 16 - 5 = 11 (left: 5)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "There are no possible next steps with just the number 9."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "No possible next steps as there is no input provided."
                }
            },
            "Step 7": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 / 2 = 2 (left: 2 2) -> 2 - 2 = 0 (left: 0) -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 / 2 = 2 (left: 2 2) -> 2 - 2 = 0 (left: 0) -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "2 * 4 = 8 (left: 4 5 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 3 4"
                }
            },
            "Step 1": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 3 + 4 = 7 (left: 2 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 3 + 4 = 7 (left: 2 7) -> 2 + 7 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 3 + 4 = 7 (left: 2 7) -> 2 + 7 = 9 (left: 9) -> There are no possible next steps with just the number 9.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "2 3 4"
                }
            },
            "Step 4": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 2 + 3 = 5 (left: 4 5)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 2 + 3 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 20)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 2 + 3 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 20) -> 20 + 2 = 22 (left: 2 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "There are no possible next steps with the input of 1.5."
                }
            },
            "Step 7": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 2 * 3 = 6 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5) -> There are no possible next steps with the input of 1.5. -> 1.5 / 8 = 0.1875",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 2 * 3 = 6 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5) -> There are no possible next steps with the input of 1.5. -> 1.5 / 8 = 0.1875 -> 1.5 + 8 = 9.5 (left: 9.5)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "There are no possible next steps with the input of 1.5."
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "5 - 4 = 1 (left: 2 4 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 5 6"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 6 - 4 = 2 (left: 2 5 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 6 - 4 = 2 (left: 2 5 6) -> 6 / 2 = 3 (left: 3 6)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 6 - 4 = 2 (left: 2 5 6) -> 6 / 2 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "4 5 8"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "2 3 4"
                }
            },
            "Step 4": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 2 * 3 = 6 (left: 4 6)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 2 * 3 = 6 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 2 * 3 = 6 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5) -> There are no possible next steps with the input of 1.5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps for the input 1.25 as it is already a single number."
                }
            },
            "Step 7": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 2 + 3 = 5 (left: 4 5) -> 5 / 4 = 1.25 (left: 1.25) -> There are no possible next steps for the input 1.25 as it is already a single number. -> N/A",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "2 20"
                }
            },
            "Step 8": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 2 + 3 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 20) -> 20 + 2 = 22 (left: 2 20) -> 20 - 2 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "There are no possible next steps with just the number 9."
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "4 / 2 = 2 (left: 2 4 5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 4 5"
                }
            },
            "Step 1": {
                "Step": "4 / 2 = 2 (left: 2 4 5) -> 5 - 4 = 1 (left: 2 1)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 2 = 2 (left: 2 4 5) -> 5 - 4 = 1 (left: 2 1) -> 2 + 1 = 3 (left: 1 3)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 / 2 = 2 (left: 2 4 5) -> 5 - 4 = 1 (left: 2 1) -> 2 + 1 = 3 (left: 1 3) -> 1 + 3 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "2 3 4"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "2 3 4"
                }
            },
            "Step 4": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 / 2 = 2 (left: 2 2)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 / 2 = 2 (left: 2 2) -> 2 - 2 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 / 2 = 2 (left: 2 2) -> 2 - 2 = 0 (left: 0) -> No possible next steps as there is no input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "2 + 2 / 2 = 3"
                }
            },
            "Step 7": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 - 2 = 2 (left: 2 2) -> 2 + 2 = 4 -> 2 + 2 / 2 = 3 -> 2 / 2 + 2 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "There are no possible next steps for the input 1.25 as it is already a single number."
                }
            },
            "Step 8": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 2 + 3 = 5 (left: 4 5) -> 5 / 4 = 1.25 (left: 1.25) -> There are no possible next steps for the input 1.25 as it is already a single number. -> N/A",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "No possible next steps as there is no input provided."
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 4 5 6)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 3 4"
                }
            },
            "Step 1": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 - 2 = 2 (left: 2 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 - 2 = 2 (left: 2 3) -> 3 - 2 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 - 2 = 2 (left: 2 3) -> 3 - 2 = 1 (left: 1) -> There is only one number given, so no possible next steps can be determined.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "2 3 4"
                }
            },
            "Step 4": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 - 2 = 2 (left: 2 2)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 - 2 = 2 (left: 2 2) -> 2 + 2 = 4",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 - 2 = 2 (left: 2 2) -> 2 + 2 = 4 -> 2 + 2 / 2 = 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps for the input 1.25 as it is already a single number."
                }
            },
            "Step 7": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 2 + 3 = 5 (left: 4 5) -> 5 / 4 = 1.25 (left: 1.25) -> There are no possible next steps for the input 1.25 as it is already a single number. -> There are no possible next steps for the input 1.25 as it is already a single number.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 2 + 3 = 5 (left: 4 5) -> 5 / 4 = 1.25 (left: 1.25) -> There are no possible next steps for the input 1.25 as it is already a single number. -> There are no possible next steps for the input 1.25 as it is already a single number. -> There are no possible next steps for the input 1.25 as it is already a single number.",
                "Pruning": null
            }
        },
        "Input": "2 4 4 5",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1059": {
        "puzzle": "2 4 4 10",
        "Agent 0": {
            "Step 0": {
                "Step": "4 / 2 = 2 (left: 2 4 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 + 6 = 10 (left: 10 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 + 6 = 10 (left: 10 10) -> 10 * 10 = 100 (left: 100)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 + 6 = 10 (left: 10 10) -> 10 * 10 = 100 (left: 100) -> - 100 * 2 = 200",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 + 6 = 10 (left: 10 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 + 6 = 10 (left: 10 10) -> 10 / 10 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 + 6 = 10 (left: 10 10) -> 10 / 10 = 1 (left: 1) -> There are no possible next steps with just one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps with just one number provided."
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 + 6 = 10 (left: 10 10) -> 10 / 10 = 1 (left: 1) -> There are no possible next steps with just one number provided. -> Provide more numbers to create new combinations.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 + 6 = 10 (left: 10 10) -> 10 / 10 = 1 (left: 1) -> There are no possible next steps with just one number provided. -> Provide more numbers to create new combinations. -> 16 - 8 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "There are no possible next steps with only one number provided."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 / 2 = 2 (left: 2 4 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 / 4 = 2.5 (left: 2.5 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 / 4 = 2.5 (left: 2.5 10) -> 10 + 2.5 = 12.5 (left: 2.5 12.5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 / 4 = 2.5 (left: 2.5 10) -> 10 + 2.5 = 12.5 (left: 2.5 12.5) -> 2.5 * 5 = 12.5 (left: 12.5)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "4 6 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 + 6 = 10 (left: 10 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 + 6 = 10 (left: 10 10) -> 10 + 10 = 20 (left: 20)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 + 6 = 10 (left: 10 10) -> 10 + 10 = 20 (left: 20) -> There are no possible next steps with the input of 20.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps with just one number provided."
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 + 6 = 10 (left: 10 10) -> 10 / 10 = 1 (left: 1) -> There are no possible next steps with just one number provided. -> Provide more numbers to perform operations on.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 + 6 = 10 (left: 10 10) -> 10 / 10 = 1 (left: 1) -> There are no possible next steps with just one number provided. -> Provide more numbers to perform operations on. -> 4 + 8 = 12 (left: 2 12)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 / 2 = 2 (left: 2 4 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 / 10 = 2.4 (left: 2.4 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 / 10 = 2.4 (left: 2.4 10) -> 2.4 * 10 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "4 6 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 6 * 4 = 24 (left: 24 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 6 * 4 = 24 (left: 24 10) -> 24 + 10 = 34 (left: 10 34)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 6 * 4 = 24 (left: 24 10) -> 24 + 10 = 34 (left: 10 34) -> 44 + 30 = 74 (left: 74 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "There are no possible next steps with just one number provided."
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 6 * 4 = 24 (left: 24 10) -> 24 - 10 = 14 (left: 14) -> There are no possible next steps with just one number provided. -> Please provide more numbers to generate possible next steps.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 6 * 4 = 24 (left: 24 10) -> 24 - 10 = 14 (left: 14) -> There are no possible next steps with just one number provided. -> Please provide more numbers to generate possible next steps. -> 14 - 8 = 6 (left: 2 6 ",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 / 2 = 2 (left: 2 4 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 - 4 = 6 (left: 6 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 - 4 = 6 (left: 6 10) -> 10 / 6 = 1.6666666666666667 (left: 1.6666666666666667 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 - 4 = 6 (left: 6 10) -> 10 / 6 = 1.6666666666666667 (left: 1.6666666666666667 10) -> 1.6666666666666667 + ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 - 4 = 6 (left: 6 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 - 4 = 6 (left: 6 10) -> 6 * 10 = 60 (left: 60)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 - 4 = 6 (left: 6 10) -> 6 * 10 = 60 (left: 60) -> There are no possible next steps with the input of 60.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "There are no possible next steps with the input of 60."
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 - 4 = 6 (left: 6 10) -> 6 * 10 = 60 (left: 60) -> There are no possible next steps with the input of 60. -> There are no possible next steps with the input of 60.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 - 4 = 6 (left: 6 10) -> 6 * 10 = 60 (left: 60) -> There are no possible next steps with the input of 60. -> There are no possible next steps with the input of 60. -> There are no possible next steps with the input of 60.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 4 6 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 + 6 = 10 (left: 10 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 + 6 = 10 (left: 10 10) -> 10 / 10 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 + 6 = 10 (left: 10 10) -> 10 / 10 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 6 * 4 = 24 (left: 24 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 6 * 4 = 24 (left: 24 10) -> 10 / 24 = 0.4167 (left: 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 6 * 4 = 24 (left: 24 10) -> 10 / 24 = 0.4167 (left: 24) -> Answer: (2 + 4) * 4 = 24",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "1.6666666666666667 + "
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "- 100 * 2 = 200"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 + 6 = 10 (left: 10 10) -> 10 * 10 = 100 (left: 100) -> - 100 * 2 = 200 -> - 200 / 2 = -100",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 + 6 = 10 (left: 10 10) -> 10 * 10 = 100 (left: 100) -> - 100 * 2 = 200 -> - 200 / 2 = -100 -> -200 * 2 = -400 (left: -400)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "There are no possible next steps with only one number provided."
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "4 * 2 = 8 (left: 8 4 10)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 - 4 = 6 (left: 6 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 - 4 = 6 (left: 6 10) -> 6 * 10 = 60 (left: 60)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 - 4 = 6 (left: 6 10) -> 6 * 10 = 60 (left: 60) -> There are no possible next steps with the input of 60.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 - 4 = 6 (left: 4 6)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 - 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 - 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (2 + 4) * (4 * 10) = 24",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "There are no possible next steps with only one number provided."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "There are no possible next steps with the input of 60."
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 - 4 = 6 (left: 6 10) -> 6 * 10 = 60 (left: 60) -> There are no possible next steps with the input of 60. -> There are no possible next steps with the input of 60.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 - 4 = 6 (left: 6 10) -> 6 * 10 = 60 (left: 60) -> There are no possible next steps with the input of 60. -> There are no possible next steps with the input of 60. -> There are no possible next steps with the input of 60.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 2 4 6)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "2 4 10"
                }
            },
            "Step 1": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 10 / 2 = 5 (left: 5 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 10 / 2 = 5 (left: 5 10) -> 5 + 10 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 10 / 2 = 5 (left: 5 10) -> 5 + 10 = 15 (left: 15) -> 15 * 2 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "4 6 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 6 * 4 = 24 (left: 24 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 6 * 4 = 24 (left: 24 10) -> 24 - 10 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 6 * 4 = 24 (left: 24 10) -> 24 - 10 = 14 (left: 14) -> There are no possible next steps with just one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "- 100 * 2 = 200"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 + 6 = 10 (left: 10 10) -> 10 * 10 = 100 (left: 100) -> - 100 * 2 = 200 -> - 100 - 2 = -102 (left: -102 * 2 = 200)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 + 6 = 10 (left: 10 10) -> 10 * 10 = 100 (left: 100) -> - 100 * 2 = 200 -> - 100 - 2 = -102 (left: -102 * 2 = 200) -> -102 / 2 = -51",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "4 / 2 = 2 (left: 2 4 10)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 6 + 4 = 10 (left: 10 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 6 + 4 = 10 (left: 10 10) -> 10 + 10 = 20 (left: 20)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 6 + 4 = 10 (left: 10 10) -> 10 + 10 = 20 (left: 20) -> 20 + 8 = 28 (left: 8)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "4 6 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 + 6 = 10 (left: 10 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 + 6 = 10 (left: 10 10) -> 10 * 10 = 100 (left: 100)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 + 6 = 10 (left: 10 10) -> 10 * 10 = 100 (left: 100) -> 100 * 2 = 200 (left: 200)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "There are no possible next steps with only one number provided."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "There are no possible next steps with the input of 60."
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 - 4 = 6 (left: 6 10) -> 6 * 10 = 60 (left: 60) -> There are no possible next steps with the input of 60. -> There are no possible next steps with the input of 60.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 - 4 = 6 (left: 6 10) -> 6 * 10 = 60 (left: 60) -> There are no possible next steps with the input of 60. -> There are no possible next steps with the input of 60. -> There are no possible next steps with the input of 60.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "4 / 2 = 2 (left: 2 4 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 4 10"
                }
            },
            "Step 1": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 10 - 2 = 8 (left: 4 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 10 - 2 = 8 (left: 4 8) -> 8 / 4 = 2 (left: 2 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 10 - 2 = 8 (left: 4 8) -> 8 / 4 = 2 (left: 2 8) -> 2 * 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "4 6 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 6 - 4 = 2 (left: 2 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 6 - 4 = 2 (left: 2 10) -> 10 - 2 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 6 - 4 = 2 (left: 2 10) -> 10 - 2 = 8 (left: 8) -> 8 + 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "- 100 * 2 = 200"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "There are no possible next steps with the input of 60."
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 - 4 = 6 (left: 6 10) -> 6 * 10 = 60 (left: 60) -> There are no possible next steps with the input of 60. -> There are no possible next steps with the input of 60.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 - 4 = 6 (left: 6 10) -> 6 * 10 = 60 (left: 60) -> There are no possible next steps with the input of 60. -> There are no possible next steps with the input of 60. -> There are no possible next steps with the input of 60.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 4 6 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 - 4 = 6 (left: 6 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 - 4 = 6 (left: 6 10) -> 10 - 6 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 - 4 = 6 (left: 6 10) -> 10 - 6 = 4 (left: 4) -> There are no possible next steps with only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 / 4 = 2.5 (left: 2.5 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 / 4 = 2.5 (left: 2.5 10) -> 10 / 2.5 = 4 (left: 4 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 / 4 = 2.5 (left: 2.5 10) -> 10 / 2.5 = 4 (left: 4 10) -> 10 - 4 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "There are no possible next steps with the input of 60."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "There are no possible next steps with only one number provided."
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 - 4 = 6 (left: 6 10) -> 10 - 6 = 4 (left: 4) -> There are no possible next steps with only one number provided. -> Please provide at least two numbers to generate possible next steps.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 - 4 = 6 (left: 6 10) -> 10 - 6 = 4 (left: 4) -> There are no possible next steps with only one number provided. -> Please provide at least two numbers to generate possible next steps. -> Please provide at least two numbers to generate possible next steps.",
                "Pruning": null
            }
        },
        "Input": "2 4 4 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1060": {
        "puzzle": "3 3 3 4",
        "Agent 0": {
            "Step 0": {
                "Step": "4 / 3 = 1.33 (left: 1.33 3 3)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "9 3 4"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 3 4) -> 9 - 3 = 6 (left: 6 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 3 4) -> 9 - 3 = 6 (left: 6 4) -> 6 * 4 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 3 4) -> 9 - 3 = 6 (left: 6 4) -> 6 * 4 = 24 (left: 24) -> Answer: (3 * 3) * (4 - 3) = 24",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "3 9 4"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "3 9 4"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 4 + 3 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 4 + 3 = 7 (left: 7) -> 7 * 7 = 49 (left: 49)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 4 + 3 = 7 (left: 7) -> 7 * 7 = 49 (left: 49) -> 49 / 2 = 24.5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "3 24 8"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 3 + 9 = 12 (left: 4 12) -> Input: 16 48 3 8 -> 3 * 8 = 24 (left: 3 24 8) -> 24 - 8 = 16 (left: 3 16)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 3 + 9 = 12 (left: 4 12) -> Input: 16 48 3 8 -> 3 * 8 = 24 (left: 3 24 8) -> 24 - 8 = 16 (left: 3 16) -> 3 * 16 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "3 24 8"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 / 3 = 1 (left: 1 3 4)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 3 4"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 3 4 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 3 4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 3 4) -> 4 / 3 = 1.33 (left: 1.33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "3 9 4"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 9 - 3 = 6 (left: 6 4)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 9 - 3 = 6 (left: 6 4) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 9 - 3 = 6 (left: 6 4) -> 6 / 4 = 1.5 (left: 1.5) -> There are no possible next steps for the input 1.5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "3 24 8"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 3 + 9 = 12 (left: 4 12) -> Input: 16 48 3 8 -> 3 * 8 = 24 (left: 3 24 8) -> 3 * 8 = 24 (left: 24 8)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 3 + 9 = 12 (left: 4 12) -> Input: 16 48 3 8 -> 3 * 8 = 24 (left: 3 24 8) -> 3 * 8 = 24 (left: 24 8) -> 8 / 24 = 0.333",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 3 6 4)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 3 4"
                }
            },
            "Step 1": {
                "Step": "3 / 3 = 1 (left: 1 3 4) -> 3 + 1 = 4 (left: 4 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 / 3 = 1 (left: 1 3 4) -> 3 + 1 = 4 (left: 4 4) -> 4 * 4 = 16 (left: 16)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 / 3 = 1 (left: 1 3 4) -> 3 + 1 = 4 (left: 4 4) -> 4 * 4 = 16 (left: 16) -> There are no possible next steps as there are no more numbers given in the input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "0 3 4"
                }
            },
            "Step 4": {
                "Step": "3 - 3 = 0 (left: 0 3 4) -> 0 + 3 = 3 (left: 3 4)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 - 3 = 0 (left: 0 3 4) -> 0 + 3 = 3 (left: 3 4) -> 4 - 3 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 - 3 = 0 (left: 0 3 4) -> 0 + 3 = 3 (left: 3 4) -> 4 - 3 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "3 24 8"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 3 + 9 = 12 (left: 4 12) -> Input: 16 48 3 8 -> 3 * 8 = 24 (left: 3 24 8) -> 24 / 3 = 8 (left: 8 24)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 3 + 9 = 12 (left: 4 12) -> Input: 16 48 3 8 -> 3 * 8 = 24 (left: 3 24 8) -> 24 / 3 = 8 (left: 8 24) -> 24 - 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "3 24 8"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 - 3 = 1 (left: 3 3 1)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 9 4"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 4 + 3 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 4 + 3 = 7 (left: 7) -> 7 * 8 = 56 (left: 56)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 4 + 3 = 7 (left: 7) -> 7 * 8 = 56 (left: 56) -> There are no possible next steps since there is only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "3 9 4"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 9 - 4 = 5 (left: 5 4)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 9 - 4 = 5 (left: 5 4) -> 4 * 5 = 20 (left: 20)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 9 - 4 = 5 (left: 5 4) -> 4 * 5 = 20 (left: 20) -> There are no possible next steps with the number 20.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "3 24 8"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 3 + 9 = 12 (left: 4 12) -> Input: 16 48 3 8 -> 3 * 8 = 24 (left: 3 24 8) -> 24 - 8 = 16 (left:",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 3 + 9 = 12 (left: 4 12) -> Input: 16 48 3 8 -> 3 * 8 = 24 (left: 3 24 8) -> 24 - 8 = 16 (left: -> 24 - 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "3 24 8"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 3 3 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 3 4"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 3 6 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 3 6 4) -> 3 * 6 = 18 (left: 4 18)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 3 6 4) -> 3 * 6 = 18 (left: 4 18) -> 18 - 4 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "3 9 4"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 4 - 3 = ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 4 - 3 =  -> 1 (left: 1) ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 4 - 3 =  -> 1 (left: 1)  -> 1 + 1 = 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "3 24 8"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 3 + 9 = 12 (left: 4 12) -> Input: 16 48 3 8 -> 3 * 8 = 24 (left: 3 24 8) -> 24 / 8 = 3 (left: 3 24)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 3 + 9 = 12 (left: 4 12) -> Input: 16 48 3 8 -> 3 * 8 = 24 (left: 3 24 8) -> 24 / 8 = 3 (left: 3 24) -> 10 * 20 = 200 (left: 5 200)",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "3 - 3 = 0 (left: 0 3 4)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 9 4"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 3 + 9 = 12 (left: 4 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 3 + 9 = 12 (left: 4 12) -> 12 - 4 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 3 + 9 = 12 (left: 4 12) -> 12 - 4 = 8 (left: 8) -> 8 - 8 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "0 3 4"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "3 3 7"
                }
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 3 3 7) -> 7 - 3 = 4 (left: 3 4)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 + 4 = 7 (left: 3 3 7) -> 7 - 3 = 4 (left: 3 4) -> 3 - 4 = -1 (left: -1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 4 = 7 (left: 3 3 7) -> 7 - 3 = 4 (left: 3 4) -> 3 - 4 = -1 (left: -1) -> Please provide a valid input to continue solving the math problem.",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "3 24 8"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 3 + 9 = 12 (left: 4 12) -> Input: 16 48 3 8 -> 3 * 8 = 24 (left: 3 24 8) -> 8 / 3 = 2.6666666666666665 (left: 2.666666666666666",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "3 24 8"
                }
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 3 + 9 = 12 (left: 4 12) -> Input: 16 48 3 8 -> 3 * 8 = 24 (left: 3 24 8) -> 24 / 8 = 3 (left: 3 24)",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "3 / 3 = 1 (left: 1 3 4)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 9 4"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 9 - 3 = 6 (left: 6 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 9 - 3 = 6 (left: 6 4) -> 6 * 4 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 9 - 3 = 6 (left: 6 4) -> 6 * 4 = 24 (left: 24) -> Answer: (3 * (3 - 3)) * 4 = 24",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "0 3 4"
                },
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "3 9 4"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 3 + 9 = 12 (left: 4 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 3 + 9 = 12 (left: 4 12) -> 4 + 12 = 16 (left: 16)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 3 + 9 = 12 (left: 4 12) -> 4 + 12 = 16 (left: 16) -> None",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "There are no possible next steps since there is only one number."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "3 24 8"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 3 + 9 = 12 (left: 4 12) -> Input: 16 48 3 8 -> 3 * 8 = 24 (left: 3 24 8) -> 24 - 8 = 16 (left: 3 16)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 3 + 9 = 12 (left: 4 12) -> Input: 16 48 3 8 -> 3 * 8 = 24 (left: 3 24 8) -> 24 - 8 = 16 (left: 3 16) -> 16 / 3 = 5.33 (left: 3 5.33)",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 3 6 4)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 9 4"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 9 + 3 = 12 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 9 + 3 = 12 (left: -> 9 - 3 = 6 (left",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 9 + 3 = 12 (left: -> 9 - 3 = 6 (left -> 3 - 9 = -6 (left: -6)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "3 3 7"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "3 9 4"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> Input: 5 5 10 15",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> Input: 5 5 10 15 -> 5 * 5 = 25 (left: 25 10 15)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> Input: 5 5 10 15 -> 5 * 5 = 25 (left: 25 10 15) -> 10 + 15 = 25 (left: 25 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "3 24 8"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 3 + 9 = 12 (left: 4 12) -> Input: 16 48 3 8 -> 3 * 8 = 24 (left: 3 24 8) -> 8 * 3 = 24 (left:",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 3 + 9 = 12 (left: 4 12) -> Input: 16 48 3 8 -> 3 * 8 = 24 (left: 3 24 8) -> 8 * 3 = 24 (left: -> 8 - 3 = 5 (left: 5 8)",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 3 4)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "0 3 4"
                }
            },
            "Step 1": {
                "Step": "3 - 3 = 0 (left: 0 3 4) -> 3 * 4 = 12 (left: 0 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 - 3 = 0 (left: 0 3 4) -> 3 * 4 = 12 (left: 0 12) -> 12 / 0 = undefined (left: 0 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 - 3 = 0 (left: 0 3 4) -> 3 * 4 = 12 (left: 0 12) -> 12 / 0 = undefined (left: 0 12) -> 12 / 12 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "3 9 4"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "3 9 4"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 3 + 9 = 12 (left: 4 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 3 + 9 = 12 (left: 4 12) -> Input: 16 48 3 8",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 3 + 9 = 12 (left: 4 12) -> Input: 16 48 3 8 -> 3 * 8 = 24 (left: 3 24 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "3 24 8"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 3 + 9 = 12 (left: 4 12) -> Input: 16 48 3 8 -> 3 * 8 = 24 (left: 3 24 8) -> 24 / 8 = 3 (left: 3 3)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 3 + 9 = 12 (left: 4 12) -> Input: 16 48 3 8 -> 3 * 8 = 24 (left: 3 24 8) -> 24 / 8 = 3 (left: 3 3) -> 3 / 3 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "25 15"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 3 9 4)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "0 3 4"
                }
            },
            "Step 1": {
                "Step": "3 - 3 = 0 (left: 0 3 4) -> 0 + 3 = 3 (left: 3 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 - 3 = 0 (left: 0 3 4) -> 0 + 3 = 3 (left: 3 4) -> 4 / 3 = 1.33 (left: 1.33)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 - 3 = 0 (left: 0 3 4) -> 0 + 3 = 3 (left: 3 4) -> 4 / 3 = 1.33 (left: 1.33) -> 1.33 + 1.33 = 2.66 (left: 2.66",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "1.33 3 3"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "3 9 4"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 4 + 3 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 4 + 3 = 7 (left: 7) -> 7 - 8 = -1 (left: -1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 4 + 3 = 7 (left: 7) -> 7 - 8 = -1 (left: -1) -> There are no possible next steps as the input is -1.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "3 24 8"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 3 + 9 = 12 (left: 4 12) -> Input: 16 48 3 8 -> 3 * 8 = 24 (left: 3 24 8) -> 24 / 3 = 8 (left: 8 24)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 3 + 9 = 12 (left: 4 12) -> Input: 16 48 3 8 -> 3 * 8 = 24 (left: 3 24 8) -> 24 / 3 = 8 (left: 8 24) -> 24 - 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "3 24 8"
                }
            }
        },
        "Input": "3 3 3 4",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1061": {
        "puzzle": "2 2 2 7",
        "Agent 0": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 2 2 5)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 2 5"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 + 2 = 4 (left: 4 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 + 2 = 4 (left: 4 5) -> Possible next steps:",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 + 2 = 4 (left: 4 5) -> Possible next steps: -> There are no possible next steps as the input has already been evaluated.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "8 26"
                }
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 3 + 6 = 9 ( -> 6 * 3 = 18 (left: 18) -> 18 + 8 = 26 (left: 8 26) -> 26 / 8 = 3.25 (left: 3.25)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "8 26"
                }
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 3 + 6 = 9 ( -> 6 * 3 = 18 (left: 18) -> 18 + 8 = 26 (left: 8 26) -> 8 * 26 = 208 (left: 208)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "2 2 5"
                }
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 - 2 = 0 (left: 0 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "8 26"
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 3 + 6 = 9 ( -> 6 * 3 = 18 (left: 18) -> 18 + 8 = 26 (left: 8 26) -> 8 + 26 = 34 (left: 34)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "8 26"
                }
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 3 + 6 = 9 ( -> 6 * 3 = 18 (left: 18) -> 18 + 8 = 26 (left: 8 26) -> 26 - 8 = 18 (left: 8 18)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 2 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 7"
                }
            },
            "Step 1": {
                "Step": "2 * 7 = 14 (left: 2 2 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 2 / 2 = 1 (left: 1 14)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 2 / 2 = 1 (left: 1 14) -> 1 * 14 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "8 26"
                }
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 3 + 6 = 9 ( -> 6 * 3 = 18 (left: 18) -> 18 + 8 = 26 (left: 8 26) -> 8 + 26 = 34 (left: 34)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "4 2 7"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 4 2 7) -> 7 - 4 = 3 (left: 2 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 4 2 7) -> 7 - 4 = 3 (left: 2 3) -> 2 * 3 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "8 26"
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 3 + 6 = 9 ( -> 6 * 3 = 18 (left: 18) -> 18 + 8 = 26 (left: 8 26) -> 26 - 2 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "8 26"
                }
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 3 + 6 = 9 ( -> 6 * 3 = 18 (left: 18) -> 18 + 8 = 26 (left: 8 26) -> 26 + 8 = 34 (left: 34)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "8 26"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 2 2 5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 2 5"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 + 2 = 4 (left: 4 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 + 2 = 4 (left: 4 5) -> 5 - 4 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 + 2 = 4 (left: 4 5) -> 5 - 4 = 1 (left: 1) -> There are no possible next steps with only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "8 26"
                }
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 3 + 6 = 9 ( -> 6 * 3 = 18 (left: 18) -> 18 + 8 = 26 (left: 8 26) -> 26 / 8 = 3.25 (left: 3.25)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "4 2 7"
                }
            },
            "Step 5": {
                "Step": "2 * 2 = 4 (left: 4 2 7) -> 7 - 4 = 3 (left: 2 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 2 = 4 (left: 4 2 7) -> 7 - 4 = 3 (left: 2 3) -> 2 + 3 = 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "8 26"
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 3 + 6 = 9 ( -> 6 * 3 = 18 (left: 18) -> 18 + 8 = 26 (left: 8 26) -> 5 * 10 = 50 (left: 50 15)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 3 + 6 = 9 ( -> 6 * 3 = 18 (left: 18) -> 18 + 8 = 26 (left: 8 26) -> 5 * 10 = 50 (left: 50 15) -> 50 * 15 = 750 (left: 750)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "8 26"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 2 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 2 5"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 3 + 6 = 9 (",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 3 + 6 = 9 ( -> 6 * 3 = 18 (left: 18)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 3 + 6 = 9 ( -> 6 * 3 = 18 (left: 18) -> 18 + 8 = 26 (left: 8 26)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "8 26"
                }
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 3 + 6 = 9 ( -> 6 * 3 = 18 (left: 18) -> 18 + 8 = 26 (left: 8 26) -> 26 - 8 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "2 2 5"
                }
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> Input: 3 7",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> Input: 3 7 -> 5 + 9 = 14 (left: 14 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "8 26"
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 3 + 6 = 9 ( -> 6 * 3 = 18 (left: 18) -> 18 + 8 = 26 (left: 8 26) -> 8 - 26 = -18 (left: -18)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "8 26"
                }
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 3 + 6 = 9 ( -> 6 * 3 = 18 (left: 18) -> 18 + 8 = 26 (left: 8 26) -> 26 / 8 = 3.25 (left: 3.25)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "8 26"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 2 4 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 2 7"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 2 7) -> 7 - 2 = 5 (left: 4 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 2 7) -> 7 - 2 = 5 (left: 4 5) -> Possible next steps:",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 2 7) -> 7 - 2 = 5 (left: 4 5) -> Possible next steps: -> There are no possible next steps for the input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "8 26"
                }
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 3 + 6 = 9 ( -> 6 * 3 = 18 (left: 18) -> 18 + 8 = 26 (left: 8 26) -> 8 + 26 = 34 (left: 34)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "4 2 7"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 4 2 7) -> Input: 3.5",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 4 2 7) -> Input: 3.5 -> There seems to be an error in the input provided. Please provide a valid sequence of numbers to continue with the calculation.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "8 26"
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 3 + 6 = 9 ( -> 6 * 3 = 18 (left: 18) -> 18 + 8 = 26 (left: 8 26) -> 8 + 26 = 34 (left: 34)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "8 26"
                }
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 3 + 6 = 9 ( -> 6 * 3 = 18 (left: 18) -> 18 + 8 = 26 (left: 8 26) -> 8 + 26 = 34 (left: 34)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "8 26"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 2 4 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 7"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 2 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 2 7) -> Input: 3 5",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 2 7) -> Input: 3 5 -> 3 / 5 = 0.6 (left: 0.6)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "8 26"
                }
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 3 + 6 = 9 ( -> 6 * 3 = 18 (left: 18) -> 18 + 8 = 26 (left: 8 26) -> Possible next steps:",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 3 + 6 = 9 ( -> 6 * 3 = 18 (left: 18) -> 18 + 8 = 26 (left: 8 26) -> Possible next steps: -> There are no possible next steps with the given input.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 3 + 6 = 9 ( -> 6 * 3 = 18 (left: 18) -> 18 + 8 = 26 (left: 8 26) -> Possible next steps: -> There are no possible next steps with the given input. -> None",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "8 26"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "8 26"
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 3 + 6 = 9 ( -> 6 * 3 = 18 (left: 18) -> 18 + 8 = 26 (left: 8 26) -> 8 * 3 = 24 (left: 24 26)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 3 + 6 = 9 ( -> 6 * 3 = 18 (left: 18) -> 18 + 8 = 26 (left: 8 26) -> 8 * 3 = 24 (left: 24 26) -> 24 * 26 = 624 (left: 624)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "8 26"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "2 + 7 = 9 (left: 2 2 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 7"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 2 5 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 2 5 5) -> 2 + 5 = 7 (left: 5 7)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 2 5 5) -> 2 + 5 = 7 (left: 5 7) -> 7 + 5 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 2 5"
                }
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 * 2 = 4 (left: 4 5)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 * 2 = 4 (left: 4 5) -> 5 - 4 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 * 2 = 4 (left: 4 5) -> 5 - 4 = 1 (left: 1) -> 1 / 1 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "8 26"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "8 26"
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 3 + 6 = 9 ( -> 6 * 3 = 18 (left: 18) -> 18 + 8 = 26 (left: 8 26) -> 8 * 26 = 208 (left: 208)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "8 26"
                }
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 3 + 6 = 9 ( -> 6 * 3 = 18 (left: 18) -> 18 + 8 = 26 (left: 8 26) -> 26 - 8 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "8 26"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 2 2 5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 7"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 2 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 2  -> 4 + 2 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 2  -> 4 + 2 = 6 (left: 6) -> 6 / 8 = 0.75 (left: 0.75)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "8 26"
                }
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 3 + 6 = 9 ( -> 6 * 3 = 18 (left: 18) -> 18 + 8 = 26 (left: 8 26) -> 26 + 8 = 34 (left: 34)",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "2 4 7"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 2 4 7) -> 7 / 4 = ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 2 4 7) -> 7 / 4 =  -> 7 / 4 = 1.75",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "8 26"
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 3 + 6 = 9 ( -> 6 * 3 = 18 (left: 18) -> 18 + 8 = 26 (left: 8 26) -> 8 + 26 = 34 (left: 34)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "8 26"
                }
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 3 + 6 = 9 ( -> 6 * 3 = 18 (left: 18) -> 18 + 8 = 26 (left: 8 26) -> 8 - 26 = -18 (left: -18)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "8 26"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 2 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "2 2 5"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> Input: 1 3 5 7",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> Input: 1 3 5 7 -> 5 + 7 = 12 (left: 1 3 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> Input: 1 3 5 7 -> 5 + 7 = 12 (left: 1 3 12) -> 3 + 12 = 15 (left: 1 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 4 7"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 2 4 7) -> 4 + 7 = 11 (left: 2 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 2 4 7) -> 4 + 7 = 11 (left: 2 11) -> 2 * 11 = 22 (left: 22)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 2 4 7) -> 4 + 7 = 11 (left: 2 11) -> 2 * 11 = 22 (left: 22) -> No possible next steps with the input 22.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "8 26"
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 3 + 6 = 9 ( -> 6 * 3 = 18 (left: 18) -> 18 + 8 = 26 (left: 8 26) -> 8 + 26 = 34 (left: 34)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "8 26"
                }
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 3 + 6 = 9 ( -> 6 * 3 = 18 (left: 18) -> 18 + 8 = 26 (left: 8 26) -> 26 - 8 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "8 26"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 2 4 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 2 7"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 2 7) -> 4 / 2 = 2 (left: 2 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 2 7) -> 4 / 2 = 2 (left: 2 7) -> 2 * 7 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 2 7) -> 4 / 2 = 2 (left: 2 7) -> 2 * 7 = 14 (left: 14) -> No possible next steps as there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "8 26"
                }
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 3 + 6 = 9 ( -> 6 * 3 = 18 (left: 18) -> 18 + 8 = 26 (left: 8 26) -> 8 - 26 = -18 (left: -18)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "8 26"
                }
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 3 + 6 = 9 ( -> 6 * 3 = 18 (left: 18) -> 18 + 8 = 26 (left: 8 26) -> 8 + 26 = 34 (left: 34)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "2 2 5"
                }
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 7 - 4 = 3 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "8 26"
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 3 + 6 = 9 ( -> 6 * 3 = 18 (left: 18) -> 18 + 8 = 26 (left: 8 26) -> 8 * 26 = 208 (left: 208)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "8 26"
                }
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 3 + 6 = 9 ( -> 6 * 3 = 18 (left: 18) -> 18 + 8 = 26 (left: 8 26) -> 8 * 26 = 208 (left: 208)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "8 26"
                }
            }
        },
        "Input": "2 2 2 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1062": {
        "puzzle": "4 9 10 11",
        "Agent 0": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 10 11 36)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9 "
                }
            },
            "Step 1": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 9 - 4 = 5 (left: 5 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 9 - 4 = 5 (left: 5 9) -> 9 - 5 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 9 - 4 = 5 (left: 5 9) -> 9 - 5 = 4 (left: 4) -> 4 + 4 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "4 9 "
                }
            },
            "Step 4": {
                "Step": "11 - 10 = 1 (left: 4 9  -> Possible next steps:",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 10 = 1 (left: 4 9  -> Possible next steps: -> There are no possible next steps with the given input.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 10 = 1 (left: 4 9  -> Possible next steps: -> There are no possible next steps with the given input. -> None",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "4 + 4 = 8"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "2 2"
                }
            },
            "Step 7": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 36 / 9 = 4 (left: 4) -> 4 - 2 = 2 (left: 2 2) -> 2 + 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "2 2"
                }
            },
            "Step 8": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 36 / 9 = 4 (left: 4) -> 4 - 2 = 2 (left: 2 2) -> 2 * 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "2 2"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 / 4 = 2.25 (left: 2.25 10 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9 "
                }
            },
            "Step 1": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 9 / 4 = 2.25 (left: 2.25 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 9 / 4 = 2.25 (left: 2.25 9) -> 2.25 + 9 = 11.25 (left: 11.25)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 9 / 4 = 2.25 (left: 2.25 9) -> 2.25 + 9 = 11.25 (left: 11.25) -> There is only one number given, so there are no possible next steps to perform.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "4 9 "
                }
            },
            "Step 4": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 36 / 9 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 36 / 9 = 4 (left: 4) -> 4 - 2 = 2 (left: 2 2)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "2 2"
                }
            },
            "Step 7": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 36 / 9 = 4 (left: 4) -> 4 - 2 = 2 (left: 2 2) -> 2 * 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "2 2"
                }
            },
            "Step 8": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 36 / 9 = 4 (left: 4) -> 4 - 2 = 2 (left: 2 2) -> 2 - 2 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "2 2"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 9 = 13 (left: 10 11 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9 "
                }
            },
            "Step 1": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> There is only one possible next step for the input 36:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "4 9 "
                }
            },
            "Step 4": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 + 9 = 13 (left: 9 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 + 9 = 13 (left: 9 13) -> 9 - 13 = -4 (left: -4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 + 9 = 13 (left: 9 13) -> 9 - 13 = -4 (left: -4) -> There are no possible next steps with the input of -4.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "2 2"
                }
            },
            "Step 7": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 36 / 9 = 4 (left: 4) -> 4 - 2 = 2 (left: 2 2) -> 2 + 2 = 4",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 36 / 9 = 4 (left: 4) -> 4 - 2 = 2 (left: 2 2) -> 2 + 2 = 4 -> 2 - 2 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "2 2"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 * 11 = 110 (left: 4 9 ",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9 "
                }
            },
            "Step 1": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 + 36 = 45 (left: 45)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 + 36 = 45 (left: 45) -> There are no possible next steps with just the number 45.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "4 9 "
                }
            },
            "Step 4": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 9 / 4 = 2.25 (left: 2.25 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 9 / 4 = 2.25 (left: 2.25 9) -> 2.25 + 9 = 11.25 (left: 11.25)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 9 / 4 = 2.25 (left: 2.25 9) -> 2.25 + 9 = 11.25 (left: 11.25) -> There is only one number given in the input (11.25), so there are no possible next steps to take.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "2 2"
                }
            },
            "Step 7": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 36 / 9 = 4 (left: 4) -> 4 - 2 = 2 (left: 2 2) -> 2 * 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "2 2"
                }
            },
            "Step 8": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 36 / 9 = 4 (left: 4) -> 4 - 2 = 2 (left: 2 2) -> 2 * 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "2 2"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 10 11 36)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9 "
                }
            },
            "Step 1": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 9 / 4 = 2.25 (left: 2.25 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 9 / 4 = 2.25 (left: 2.25 9) -> 2.25 + 9 = 11.25 (left: 11.25)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 9 / 4 = 2.25 (left: 2.25 9) -> 2.25 + 9 = 11.25 (left: 11.25) -> There is no clear operation to perform with the number 11.25 alone. If you provide additional numbers or specify an operation, I can suggest possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "4 9 "
                }
            },
            "Step 4": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 9 - 4 = 5 (left: 5 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 9 - 4 = 5 (left: 5 9) -> 9 / 5 = 1.8 (left: 1.8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 9 - 4 = 5 (left: 5 9) -> 9 / 5 = 1.8 (left: 1.8) -> There are no possible next steps for the input 1.8 as it is a single number and not an operation.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "2 2"
                }
            },
            "Step 7": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 36 / 9 = 4 (left: 4) -> 4 - 2 = 2 (left: 2 2) -> 2 + 2 = 4",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 36 / 9 = 4 (left: 4) -> 4 - 2 = 2 (left: 2 2) -> 2 + 2 = 4 -> 2 + 2 * 2 = 6",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 7 9 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9 "
                }
            },
            "Step 1": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> There are no possible next steps as there are no other numbers given to perform operations with.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "4 9 "
                }
            },
            "Step 4": {
                "Step": "11 - 10 = 1 (left: 4 9  -> Possible next steps:",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 10 = 1 (left: 4 9  -> Possible next steps: -> There are no possible next steps with the given input.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 10 = 1 (left: 4 9  -> Possible next steps: -> There are no possible next steps with the given input. -> There are no possible next steps with the given input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "2 2"
                }
            },
            "Step 7": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 36 / 9 = 4 (left: 4) -> 4 - 2 = 2 (left: 2 2) -> 2 + 2 = 4",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 36 / 9 = 4 (left: 4) -> 4 - 2 = 2 (left: 2 2) -> 2 + 2 = 4 -> 2 / 2 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "2 2"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "4 + 9 = 13 (left: 10 11 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 10 11"
                }
            },
            "Step 1": {
                "Step": "4 * 9 = 36 (left: 10 11 36)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 9 = 36 (left: 10 11 36) -> 10 + 11 = 21 (left: 21 36)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 9 = 36 (left: 10 11 36) -> 10 + 11 = 21 (left: 21 36) -> 21 - 36 = -15 (left: -15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "4 9 "
                }
            },
            "Step 4": {
                "Step": "10 * 11 = 110 (left: 4 9  -> Input: 10 5",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 * 11 = 110 (left: 4 9  -> Input: 10 5 -> 10 / 5 = 2 (left: 2 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 * 11 = 110 (left: 4 9  -> Input: 10 5 -> 10 / 5 = 2 (left: 2 5) -> 2 + 5 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "There are no possible next steps as there are no other numbers given to perform operations with."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "2 2"
                }
            },
            "Step 7": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 36 / 9 = 4 (left: 4) -> 4 - 2 = 2 (left: 2 2) -> 2 * 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "2 2"
                }
            },
            "Step 8": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 36 / 9 = 4 (left: 4) -> 4 - 2 = 2 (left: 2 2) -> 2 * 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "2 2"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 10 11 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9 "
                }
            },
            "Step 1": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 9 / 4 = 2.25 (left: 2.25 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 9 / 4 = 2.25 (left: 2.25 9) -> 5 - 3 = ",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 9 / 4 = 2.25 (left: 2.25 9) -> 5 - 3 =  -> 5 - 3 = 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "4 9 "
                }
            },
            "Step 4": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 9 - 4 = 5 (left: 5 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 9 - 4 = 5 (left: 5 9) -> 10 + 2 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 9 - 4 = 5 (left: 5 9) -> 10 + 2 = 12 (left: 12) -> 12 + 8 = 20 (left: 8 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "2 2"
                }
            },
            "Step 7": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 36 / 9 = 4 (left: 4) -> 4 - 2 = 2 (left: 2 2) -> 2 - 2 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "2 2"
                }
            },
            "Step 8": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 36 / 9 = 4 (left: 4) -> 4 - 2 = 2 (left: 2 2) -> 2 / 2 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "2 2"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "11 - 10 = 1 (left: 4 9 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9 "
                }
            },
            "Step 1": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 6 + 12 = 18 (left: 12 18)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 6 + 12 = 18 (left: 12 18) -> 12 * 18 = 216 (left: 216)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 6 + 12 = 18 (left: 12 18) -> 12 * 18 = 216 (left: 216) -> 216 / 6 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "4 9 "
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "4 9 "
                }
            },
            "Step 4": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 9 / 4 = 2.25 (left: 2.25 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 9 / 4 = 2.25 (left: 2.25 9) -> 3 + 3 = 6 (left: 6 ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 9 / 4 = 2.25 (left: 2.25 9) -> 3 + 3 = 6 (left: 6  -> 6 + 8 = 14 (left: 8 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "2 2"
                }
            },
            "Step 7": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 36 / 9 = 4 (left: 4) -> 4 - 2 = 2 (left: 2 2) -> 2 + 2 = 4",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 36 / 9 = 4 (left: 4) -> 4 - 2 = 2 (left: 2 2) -> 2 + 2 = 4 -> 4 - 2 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "2 2"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "10 + 4 = 14 (left: 9 11 14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9 "
                }
            },
            "Step 1": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 3 + 5 = 8 (",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 3 + 5 = 8 ( -> 3 + 5 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 3 + 5 = 8 ( -> 3 + 5 = 8 (left: 8) -> 8 / 8 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "4 9 "
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "4 9 "
                }
            },
            "Step 4": {
                "Step": "11 - 10 = 1 (left: 4 9  -> Possible next steps:",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 10 = 1 (left: 4 9  -> Possible next steps: -> There are no possible next steps given the input provided.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 10 = 1 (left: 4 9  -> Possible next steps: -> There are no possible next steps given the input provided. -> There are no possible next steps given the input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "2 2"
                }
            },
            "Step 7": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 36 / 9 = 4 (left: 4) -> 4 - 2 = 2 (left: 2 2) -> 2 - 2 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "2 2"
                }
            },
            "Step 8": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 36 / 9 = 4 (left: 4) -> 4 - 2 = 2 (left: 2 2) -> 2 + 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "2 2"
                }
            }
        },
        "Input": "4 9 10 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1063": {
        "puzzle": "7 9 10 11",
        "Agent 0": {
            "Step 0": {
                "Step": "7 * 9 = 63 (left: 10 11 63)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 10 11"
                }
            },
            "Step 1": {
                "Step": "7 * 9 = 63 (left: 10 11 63)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 63 / 21 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "10 11 63"
                }
            },
            "Step 4": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 21 * 63 = 1323 (left: 1323)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 21 * 63 = 1323 (left: 1323) -> 1 * 3 * 2 * 3 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "3"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "11 23.857"
                }
            },
            "Step 7": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 7 = 12.857 (left: 12.857 11) -> 12.857 + 11 = 23.857 (left: 11 23.857) -> 11 * 23.857 = 262.427 (left: 23.857 262.427)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 7 = 12.857 (left: 12.857 11) -> 12.857 + 11 = 23.857 (left: 11 23.857) -> 11 * 23.857 = 262.427 (left: 23.857 262.427) -> 23.857 * 262.427 = 6269.853939 (left: 6269.853939)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "2 62"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 * 11 = 110 (left: 7 9 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 10 11"
                }
            },
            "Step 1": {
                "Step": "9 * 10 = 90 (left: 7 11 90)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 7 = 12.857 (left: 12.857 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 7 = 12.857 (left: 12.857 11) -> 12.857 + 11 = 23.857 (left: 11 23.857)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "10 11 63"
                }
            },
            "Step 4": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 63 - 10 = 53 (left: 11 53)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 63 - 10 = 53 (left: 11 53) -> 53 - 11 = 42 (left: 42)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 63 - 10 = 53 (left: 11 53) -> 53 - 11 = 42 (left: 42) -> 42 - 2 = 40",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "11 23.857"
                }
            },
            "Step 7": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 7 = 12.857 (left: 12.857 11) -> 12.857 + 11 = 23.857 (left: 11 23.857) -> 11 - 23.857 = -12.857 (left: -12.857 23.857)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 7 = 12.857 (left: 12.857 11) -> 12.857 + 11 = 23.857 (left: 11 23.857) -> 11 - 23.857 = -12.857 (left: -12.857 23.857) -> -12.857 * 23.857 = -307.697 (left: -307.697)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "42 - 2 = 40"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 * 10 = 90 (left: 7 11 90)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 10 11"
                }
            },
            "Step 1": {
                "Step": "9 * 10 = 90 (left: 7 11 90)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 11 * 7 = 77 (left: 77 90)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 11 * 7 = 77 (left: 77 90) -> 77 + 90 = 167 (left: 167)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "10 11 63"
                }
            },
            "Step 4": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 21 * 63 = 1323 (left: 1323)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 21 * 63 = 1323 (left: 1323) -> 1 * 3 * 2 * 3 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "11 23.857"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "11 23.857"
                }
            },
            "Step 7": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 7 = 12.857 (left: 12.857 11) -> 12.857 + 11 = 23.857 (left: 11 23.857) -> 11 + 23.857 = 34.857 (left: 34.857)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "11 23.857"
                }
            },
            "Step 8": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 7 = 12.857 (left: 12.857 11) -> 12.857 + 11 = 23.857 (left: 11 23.857) -> 11 - 23.857 = -12.857 (left: -12.857)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "42 - 2 = 40"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "11 - 10 = 1 (left: 7 9 1)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 10 11"
                }
            },
            "Step 1": {
                "Step": "9 + 10 = 19 (left: 7 11 19)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 10 = 19 (left: 7 11 19) -> 7 + 11 = 18 (left: 18 19)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 + 10 = 19 (left: 7 11 19) -> 7 + 11 = 18 (left: 18 19) -> 18 + 19 = 37",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "10 11 63"
                }
            },
            "Step 4": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 63 - 11 = 52 (left: 10 52)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 63 - 11 = 52 (left: 10 52) -> 52 - 10 = 42 (left: 42)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 63 - 11 = 52 (left: 10 52) -> 52 - 10 = 42 (left: 42) -> 42 / 2 = 21 (left: 21)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "11 23.857"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "11 23.857"
                }
            },
            "Step 7": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 7 = 12.857 (left: 12.857 11) -> 12.857 + 11 = 23.857 (left: 11 23.857) -> 11 + 23.857 = 34.857 (left: 23.857 34.857)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 7 = 12.857 (left: 12.857 11) -> 12.857 + 11 = 23.857 (left: 11 23.857) -> 11 + 23.857 = 34.857 (left: 23.857 34.857) -> 23.857 / 34.857 = 0.685 (left: 0.685)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "10 - 1 = 9"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "7 + 9 = 16 (left: 10 11 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 10 11"
                }
            },
            "Step 1": {
                "Step": "9 * 10 = 90 (left: 7 11 90)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 11 * 7 = 77 (left: 77 90)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 11 * 7 = 77 (left: 77 90) -> 77 + 90 = 167 (left: 167)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "10 11 63"
                }
            },
            "Step 4": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 63 / 11 = 5.727 (left: 10 5.727)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 63 / 11 = 5.727 (left: 10 5.727) -> 10 - 5.727 = 4.273 (left: 4.273 5.727)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 63 / 11 = 5.727 (left: 10 5.727) -> 10 - 5.727 = 4.273 (left: 4.273 5.727) -> 5.727 - 4.273 = 1.454 (left: 1.454)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "18 + 19 = 37"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "11 23.857"
                }
            },
            "Step 7": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 7 = 12.857 (left: 12.857 11) -> 12.857 + 11 = 23.857 (left: 11 23.857) -> 11 / 23.857 = 0.460 (left: 0.460 23.857)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 7 = 12.857 (left: 12.857 11) -> 12.857 + 11 = 23.857 (left: 11 23.857) -> 11 / 23.857 = 0.460 (left: 0.460 23.857) -> 0.460 - 23.857 = -23.397 (left: -23.397)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "42 - 2 = 40"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "9 + 10 = 19 (left: 7 11 19)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 10 11"
                }
            },
            "Step 1": {
                "Step": "10 + 7 = 17 (left: 9 11 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 7 = 17 (left: 9 11  -> 9 / 11 = 0.8181818181818182 (left: 0.8181818181818182)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 + 7 = 17 (left: 9 11  -> 9 / 11 = 0.8181818181818182 (left: 0.8181818181818182) -> 0.8181818181818182 * 2 = 1.6363636363636364",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "10 11 63"
                }
            },
            "Step 4": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 63 - 10 = 53 (left: 11 53)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 63 - 10 = 53 (left: 11 53) -> 11 + 53 = 64 (left: 64)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 63 - 10 = 53 (left: 11 53) -> 11 + 53 = 64 (left: 64) -> 64 * 2 = 128 (left: 128)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "18 + 19 = 37"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "11 23.857"
                }
            },
            "Step 7": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 7 = 12.857 (left: 12.857 11) -> 12.857 + 11 = 23.857 (left: 11 23.857) -> 11 - 23.857 = -12.857 (left: -12.857 23.857)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 7 = 12.857 (left: 12.857 11) -> 12.857 + 11 = 23.857 (left: 11 23.857) -> 11 - 23.857 = -12.857 (left: -12.857 23.857) -> -12.857 + 23.857 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "10 - 1 = 9"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "7 * 9 = 63 (left: 10 11 63)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "7 11 90"
                }
            },
            "Step 1": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 11 - 7 = 4 (left: 4 11 90)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 11 - 7 = 4 (left: 4 11 90) -> 4 * 11 = 44 (left: 44 90)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 11 - 7 = 4 (left: 4 11 90) -> 4 * 11 = 44 (left: 44 90) -> 44 * 90 = 3960 (left: 3960)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "10 11 63"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "10 11 63"
                }
            },
            "Step 4": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 * 11 = 110 (left: 110 63)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 * 11 = 110 (left: 110 63) -> 110 + 63 = 173 (left: 173)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 * 11 = 110 (left: 110 63) -> 110 + 63 = 173 (left: 173) -> 1 + 7 + 3 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "18 + 19 = 37"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "11 23.857"
                }
            },
            "Step 7": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 7 = 12.857 (left: 12.857 11) -> 12.857 + 11 = 23.857 (left: 11 23.857) -> 23.857 * 11 = 262.427 (left: 11 262.427)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 7 = 12.857 (left: 12.857 11) -> 12.857 + 11 = 23.857 (left: 11 23.857) -> 23.857 * 11 = 262.427 (left: 11 262.427) -> 262.427 + 11 = 273.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "7 + 9 = 16 (left: 10 11 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 10 11"
                }
            },
            "Step 1": {
                "Step": "7 * 9 = 63 (left: 10 11 63)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 21 + 31 = 52 (left:",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 21 + 31 = 52 (left: -> 31 - 21 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "10 11 63"
                }
            },
            "Step 4": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 63 - 10 = 53 (left: 11 53)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 63 - 10 = 53 (left: 11 53) -> 11 + 53 = 64 (left: 64)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 63 - 10 = 53 (left: 11 53) -> 11 + 53 = 64 (left: 64) -> 64 - 2 = 62 (left: 2 62)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "11 23.857"
                }
            },
            "Step 7": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 7 = 12.857 (left: 12.857 11) -> 12.857 + 11 = 23.857 (left: 11 23.857) -> 11 - 23.857 = -12.857 (left: -12.857 23.857)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 7 = 12.857 (left: 12.857 11) -> 12.857 + 11 = 23.857 (left: 11 23.857) -> 11 - 23.857 = -12.857 (left: -12.857 23.857) -> -12.857 * 23.857 = -306.981 (left: -306.981)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "42 - 2 = 40"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "9 * 10 = 90 (left: 7 11 90)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "7 9 1"
                }
            },
            "Step 1": {
                "Step": "11 - 10 = 1 (left: 7 9 1) -> 9 / 1 = 9 (left: 7 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 10 = 1 (left: 7 9 1) -> 9 / 1 = 9 (left: 7 9) -> 1 + 4 = 5 (left: 5 5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 10 = 1 (left: 7 9 1) -> 9 / 1 = 9 (left: 7 9) -> 1 + 4 = 5 (left: 5 5) -> 5 - 5 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "10 11 63"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "10 11 63"
                }
            },
            "Step 4": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 11 - 10 = 1 (left: 1 63)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 11 - 10 = 1 (left: 1 63) -> 1 + 63 = 64 (left: 64)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 11 - 10 = 1 (left: 1 63) -> 1 + 63 = 64 (left: 64) -> 64 * 4 = 256 (left",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "11 23.857"
                }
            },
            "Step 7": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 7 = 12.857 (left: 12.857 11) -> 12.857 + 11 = 23.857 (left: 11 23.857) -> 11 + 23.857 = 34.857 (left: 23.857 34.857)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 7 = 12.857 (left: 12.857 11) -> 12.857 + 11 = 23.857 (left: 11 23.857) -> 11 + 23.857 = 34.857 (left: 23.857 34.857) -> 23.857 * 34.857 = 832.136849 (left: 832.136849)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "10 - 1 = 9"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "10 + 11 = 21 (left: 7 9 21)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "7 11 90"
                }
            },
            "Step 1": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 7 = 12.857142857142857 (left: 12.857142857142857 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 7 = 12.857142857142857 (left: 12.857142857142857 11) -> 12.857142857142857 + 11 = 23.857142857142857 (left: 11 23.857142857142857)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 7 = 12.857142857142857 (left: 12.857142857142857 11) -> 12.857142857142857 + 11 = 23.857142857142857 (left: 11 23.857142857142857) -> 11 + 23.857142857142857 = 34.857142857142857 (left: 23.857142857142857 34.857142857142857)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "10 11 63"
                }
            },
            "Step 4": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 11 - 10 = 1 (left: 1 10 63)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 11 - 10 = 1 (left: 1 10 63) -> 10 - 1 = ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 11 - 10 = 1 (left: 1 10 63) -> 10 - 1 =  -> 10 - 1 = 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "11 23.857"
                }
            },
            "Step 7": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 7 = 12.857 (left: 12.857 11) -> 12.857 + 11 = 23.857 (left: 11 23.857) -> 11 + 23.857 = 34.857 (left: 23.857 34.857)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 7 = 12.857 (left: 12.857 11) -> 12.857 + 11 = 23.857 (left: 11 23.857) -> 11 + 23.857 = 34.857 (left: 23.857 34.857) -> 23.857 + 34.857 = 58.714 (left: 58.714)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "42 - 2 = 40"
                }
            }
        },
        "Input": "7 9 10 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1064": {
        "puzzle": "1 4 5 7",
        "Agent 0": {
            "Step 0": {
                "Step": "7 - 1 = 6 (left: 4 5 ",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 5 7"
                }
            },
            "Step 1": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10) -> 7 * 10 = 70 (left: 70)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10) -> 7 * 10 = 70 (left: 70) -> No possible next steps with just the number 70.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1 4 6"
                }
            },
            "Step 4": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 6 - 1 = 5 (left: 4 5)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 6 - 1 = 5 (left: 4 5) -> 4 + 5 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 6 - 1 = 5 (left: 4 5) -> 4 + 5 = 9 (left: 9) -> There are no possible next steps with the input of 9.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "1.42857142857 2.85714285714"
                }
            },
            "Step 7": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10) -> 10 / 7 = 1.42857142857 (left: 1.42857142857) -> 1.42857142857 * 2 = 2.85714285714 (left: 1.42857142857 2.85714285714) -> 1.42857142857 * 2.85714285714 = 4.08163265306 (left: 4.08163265306)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "1.42857142857 2.85714285714"
                }
            },
            "Step 8": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10) -> 10 / 7 = 1.42857142857 (left: 1.42857142857) -> 1.42857142857 * 2 = 2.85714285714 (left: 1.42857142857 2.85714285714) -> 1.42857142857 + 2.85714285714 = 4.28571428571 (left: 4.28571428571)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "1.42857142857 2.85714285714"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "1 + 4 = 5 (left: 5 5 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "5 5 7"
                }
            },
            "Step 1": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10) -> 10 / 7 = 1.42857142857 (left: 1.42857142857)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10) -> 10 / 7 = 1.42857142857 (left: 1.42857142857) -> 1.42857142857 * 2 = 2.85714285714 (left: 1.42857142857 2.85714285714)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1 4 6"
                }
            },
            "Step 4": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 1 + 4 = 5 (left: 5 6)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 1 + 4 = 5 (left: 5 6) -> 5 * 6 = 30 (left: 30)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 1 + 4 = 5 (left: 5 6) -> 5 * 6 = 30 (left: 30) -> There are no possible next steps for the input 30 as it is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "1.42857142857 2.85714285714"
                }
            },
            "Step 7": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10) -> 10 / 7 = 1.42857142857 (left: 1.42857142857) -> 1.42857142857 * 2 = 2.85714285714 (left: 1.42857142857 2.85714285714) -> 2.85714285714 / 1.42857142857 = 2 (left: 2 2.85714285714)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10) -> 10 / 7 = 1.42857142857 (left: 1.42857142857) -> 1.42857142857 * 2 = 2.85714285714 (left: 1.42857142857 2.85714285714) -> 2.85714285714 / 1.42857142857 = 2 (left: 2 2.85714285714) -> 2 * 2.85714285714 = 5.71428571428 (left: 5.71428571428)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "1.42857142857 2.85714285714"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 1 = 5 (left: 5 5 7)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 4 6"
                }
            },
            "Step 1": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 6 / 4 = 1.5 (left: 1.5 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 6 / 4 = 1.5 (left: 1.5 6) -> 1.5 + 6 = 7.5 (left: 7.5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 6 / 4 = 1.5 (left: 1.5 6) -> 1.5 + 6 = 7.5 (left: 7.5) -> 7.5 + 8 = 15.5 (left: 15.5)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "1 4 6"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1 4 6"
                }
            },
            "Step 4": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 4 / 1 = ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 4 / 1 =  -> 4 / 1 = 4",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 4 / 1 =  -> 4 / 1 = 4 -> 4 - 1 = 3 (left: 3 4)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "1.42857142857 2.85714285714"
                }
            },
            "Step 7": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10) -> 10 / 7 = 1.42857142857 (left: 1.42857142857) -> 1.42857142857 * 2 = 2.85714285714 (left: 1.42857142857 2.85714285714) -> 2",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "1.42857142857 2.85714285714"
                }
            },
            "Step 8": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10) -> 10 / 7 = 1.42857142857 (left: 1.42857142857) -> 1.42857142857 * 2 = 2.85714285714 (left: 1.42857142857 2.85714285714) -> 2.85714285714 / 1.42857142857 = 2.0 (left: 2.0)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "1.42857142857 2.85714285714"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 + 2 = 7 (left: 4 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 4 6"
                }
            },
            "Step 1": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 4 - 1 = 3 (left: 3 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 4 - 1 = 3 (left: 3 6) -> 3 + 6 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 4 - 1 = 3 (left: 3 6) -> 3 + 6 = 9 (left: 9) -> 9 + 9 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "4 5 "
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "4 5 "
                }
            },
            "Step 4": {
                "Step": "7 - 1 = 6 (left: 4 5  -> Input: 3 9 27",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 - 1 = 6 (left: 4 5  -> Input: 3 9 27 -> 9 / 3 = 3 (left: 3 27)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 1 = 6 (left: 4 5  -> Input: 3 9 27 -> 9 / 3 = 3 (left: 3 27) -> 5 * 10 = 50 (left: 20)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "1.42857142857 2.85714285714"
                },
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "1.42857142857 2.85714285714"
                }
            },
            "Step 7": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10) -> 10 / 7 = 1.42857142857 (left: 1.42857142857) -> 1.42857142857 * 2 = 2.85714285714 (left: 1.42857142857 2.85714285714) -> 1.42857142857 + 2.85714285714 = 4.28571428571 (left: 4.28571428571)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "1.42857142857 2.85714285714"
                }
            },
            "Step 8": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10) -> 10 / 7 = 1.42857142857 (left: 1.42857142857) -> 1.42857142857 * 2 = 2.85714285714 (left: 1.42857142857 2.85714285714) -> 1.42857142857 + 2.85714285714 = 4.28571428571 (left: 4.28571428571)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "1.42857142857 2.85714285714"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 + 4 = 5 (left: 5 5 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 5 7"
                }
            },
            "Step 1": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 5 + 7 = 12 (left: 5 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 5 + 7 = 12 (left: 5 12) -> 5 + 12 = 17 (left: 17)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 5 + 7 = 12 (left: 5 12) -> 5 + 12 = 17 (left: 17) -> 17 * 2 = 34 (left: 8 8 34)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1 4 6"
                }
            },
            "Step 4": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 6 - 4 = 2 (left: 1 2)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 6 - 4 = 2 (left: 1 2) -> 1 * 2 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 6 - 4 = 2 (left: 1 2) -> 1 * 2 = 2 (left: 2) -> 2 + 2 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "1.42857142857 2.85714285714"
                }
            },
            "Step 7": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10) -> 10 / 7 = 1.42857142857 (left: 1.42857142857) -> 1.42857142857 * 2 = 2.85714285714 (left: 1.42857142857 2.85714285714) -> 1.42857142857 - 2.85714285714 = -1.42857142857 (left: -1",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "1.42857142857 2.85714285714"
                }
            },
            "Step 8": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10) -> 10 / 7 = 1.42857142857 (left: 1.42857142857) -> 1.42857142857 * 2 = 2.85714285714 (left: 1.42857142857 2.85714285714) -> 1.42857142857 + 2.85714285714 = 4.28571428571 (left: 4.28571428571)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "1.42857142857 2.85714285714"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "5 + 2 = 7 (left: 1 5 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 4 6"
                }
            },
            "Step 1": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 6 / 4 = 1.5 (left: 1 1.5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 6 / 4 = 1.5 (left: 1 1.5) -> 1 / 1.5 = 0.6666666666666666 (left: 0.6666666666666666)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 6 / 4 = 1.5 (left: 1 1.5) -> 1 / 1.5 = 0.6666666666666666 (left: 0.6666666666666666) -> There are no possible next steps for the input 0.6666666666666666.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1 4 6"
                }
            },
            "Step 4": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 1 * 4 = 4 (left: 4 6)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 1 * 4 = 4 (left: 4 6) -> 6 - 4 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 1 * 4 = 4 (left: 4 6) -> 6 - 4 = 2 (left: 2) -> There is only one number, so no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "1.42857142857 2.85714285714"
                }
            },
            "Step 7": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10) -> 10 / 7 = 1.42857142857 (left: 1.42857142857) -> 1.42857142857 * 2 = 2.85714285714 (left: 1.42857142857 2.85714285714) -> 2",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "1.42857142857 2.85714285714"
                }
            },
            "Step 8": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10) -> 10 / 7 = 1.42857142857 (left: 1.42857142857) -> 1.42857142857 * 2 = 2.85714285714 (left: 1.42857142857 2.85714285714) -> 1.42857142857 + 2.85714285714 = 4.28571428571 (left: 4.28571428571)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "1.42857142857 2.85714285714"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "7 - 1 = 6 (left: 1 4 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 5 7"
                }
            },
            "Step 1": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 7 * 5 = 35 (left: 5 35)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 7 * 5 = 35 (left: 5 35) -> 35 - 5 = 30 (left: 30)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 7 * 5 = 35 (left: 5 35) -> 35 - 5 = 30 (left: 30) -> 30 / 2 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "4 5 "
                },
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1 4 6"
                }
            },
            "Step 4": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> Possible",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> Possible -> There is not enough information provided to determine the possible next steps. Can you please provide more context or details?",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> Possible -> There is not enough information provided to determine the possible next steps. Can you please provide more context or details? -> Without additional information or context, it is difficult to determine the specific next steps in the sequence of numbers provided. If you can provide more numbers or specify a desired operation (addition, subtraction, multiplication, division), I would be happy to help you find the possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "1.42857142857 2.85714285714"
                }
            },
            "Step 7": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10) -> 10 / 7 = 1.42857142857 (left: 1.42857142857) -> 1.42857142857 * 2 = 2.85714285714 (left: 1.42857142857 2.85714285714) -> 1.42857142857 + 2.85714285714 = 4.28571428571 (left: 4.28571428571)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "1.42857142857 2.85714285714"
                }
            },
            "Step 8": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10) -> 10 / 7 = 1.42857142857 (left: 1.42857142857) -> 1.42857142857 * 2 = 2.85714285714 (left: 1.42857142857 2.85714285714) -> 1.42857142857 + 2.85714285714 = 4.28571428571 (left: 4.28571428571)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "1.42857142857 2.85714285714"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "7 - 4 = 3 (left: 1 3 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 4 6"
                }
            },
            "Step 1": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 6 - 1 = 5 (left: 4 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 6 - 1 = 5 (left: 4 5) -> 4 / 5 = 0.8 (left: 0.8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 6 - 1 = 5 (left: 4 5) -> 4 / 5 = 0.8 (left: 0.8) -> There are no possible next steps for the input 0.8.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1 4 6"
                }
            },
            "Step 4": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 6 / 4 = 1.5 (left: 1 1.5)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 6 / 4 = 1.5 (left: 1 1.5) -> 1 / 1.5 = 0.6667 (left: 0.6667)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 6 / 4 = 1.5 (left: 1 1.5) -> 1 / 1.5 = 0.6667 (left: 0.6667) -> There is only one possible next step: 0.6667 + 0.6667 = 1.3334",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "1.42857142857 2.85714285714"
                }
            },
            "Step 7": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10) -> 10 / 7 = 1.42857142857 (left: 1.42857142857) -> 1.42857142857 * 2 = 2.85714285714 (left: 1.42857142857 2.85714285714) -> 1.42857142857 + 2.85714285714 = 4.28571428571 (left: 4.28571428571)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "1.42857142857 2.85714285714"
                }
            },
            "Step 8": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10) -> 10 / 7 = 1.42857142857 (left: 1.42857142857) -> 1.42857142857 * 2 = 2.85714285714 (left: 1.42857142857 2.85714285714) -> 2.85714285714 / 1.42857142857 = 2 (left:",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "1 + 4 = 5 (left: 5 5 7)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 5 7"
                }
            },
            "Step 1": {
                "Step": "1 + 4 = 5 (left: 5 5 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> Input: 3 6",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> Input: 3 6 -> 3 * 6 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1 4 6"
                }
            },
            "Step 4": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 4 + 6 = 10 (left: 1 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 4 + 6 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 4 + 6 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 - 8 = 2 (left: 8)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "1.42857142857 2.85714285714"
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "1.42857142857 2.85714285714"
                }
            },
            "Step 7": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10) -> 10 / 7 = 1.42857142857 (left: 1.42857142857) -> 1.42857142857 * 2 = 2.85714285714 (left: 1.42857142857 2.85714285714) -> 1.42857142857 * 2.85714285714 = 4.08163265306 (left: 4.08163265306)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "1.42857142857 2.85714285714"
                }
            },
            "Step 8": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10) -> 10 / 7 = 1.42857142857 (left: 1.42857142857) -> 1.42857142857 * 2 = 2.85714285714 (left: 1.42857142857 2.85714285714) -> 1.42857142857 - 2.85714285714 \u2248 -1.42857142857 (left: -1.428571428",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "1.42857142857 2.85714285714"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "1 + 4 = 5 (left: 5 5 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 5 "
                }
            },
            "Step 1": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 4 / 5 = 0.8 (left: 0.8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 4 / 5 = 0.8 (left: 0.8) -> 0.8 * 2 = 1.6 (left: 1.6)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 4 / 5 = 0.8 (left: 0.8) -> 0.8 * 2 = 1.6 (left: 1.6) -> There are no possible next steps for the input 1.6.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1 4 6"
                }
            },
            "Step 4": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 1 * 4 = 4 (left: 4 6)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 1 * 4 = 4 (left: 4 6) -> 6 - 4 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 1 * 4 = 4 (left: 4 6) -> 6 - 4 = 2 (left: 2) -> No possible next steps with only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "1.42857142857 2.85714285714"
                }
            },
            "Step 7": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10) -> 10 / 7 = 1.42857142857 (left: 1.42857142857) -> 1.42857142857 * 2 = 2.85714285714 (left: 1.42857142857 2.85714285714) -> 2.85714285714 / 1.42857142857 = 2 (left:",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10) -> 10 / 7 = 1.42857142857 (left: 1.42857142857) -> 1.42857142857 * 2 = 2.85714285714 (left: 1.42857142857 2.85714285714) -> 2.85714285714 / 1.42857142857 = 2 (left: -> 2 - 1 = 1 (left: 1.85714285714 / 1.42857142857 = 2)",
                "Pruning": null
            }
        },
        "Input": "1 4 5 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1065": {
        "puzzle": "3 4 9 9",
        "Agent 0": {
            "Step 0": {
                "Step": "9 - 4 = 5 (left: 3 5 9)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 9 9"
                }
            },
            "Step 1": {
                "Step": "4 + 9 = 13 (left: 3 13 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 9 = 13 (left: 3 13 9) -> 13 - 3 = 10 (left: 10 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 9 = 13 (left: 3 13 9) -> 13 - 3 = 10 (left: 10 9) -> 10 * 9 = 90 (left: 90)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 4": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 * 9 = 54 (left: 4 54)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 * 9 = 54 (left: 4 54) -> Input: 10 3 5",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 * 9 = 54 (left: 4 54) -> Input: 10 3 5 -> 3 + 5 = 8 (left: 10 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "24 2"
                }
            },
            "Step 7": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 - 4 =  -> 6 - 4 = 2 -> 6 * 4 = 24 (left: 24 2) -> 24 + 2 = 26 (left: 26)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "24 2"
                }
            },
            "Step 8": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 - 4 =  -> 6 - 4 = 2 -> 6 * 4 = 24 (left: 24 2) -> 24 * 2 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "24 2"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 4 9 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "7 9 9"
                }
            },
            "Step 1": {
                "Step": "3 + 4 = 7 (left: 7 9 9) -> 9 - 9 = 0 (left: 7 0 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 4 = 7 (left: 7 9 9) -> 9 - 9 = 0 (left: 7 0 9) -> 7 * 9 = 63 (left: 0 63)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 + 4 = 7 (left: 7 9 9) -> 9 - 9 = 0 (left: 7 0 9) -> 7 * 9 = 63 (left: 0 63) -> 0 - 63 = -63 (left: -63)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "4 6 9"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 4": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 - 4 = 2 (left: 2 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 - 4 = 2 (left: 2 9) -> 5 + 6 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 - 4 = 2 (left: 2 9) -> 5 + 6 = 11 (left: 11) -> 11 + 8 = 19 (left: 8)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "8 8.666666666666666"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "8 2.125"
                }
            },
            "Step 7": {
                "Step": "9 / 4 = 2.25 (left: 3  -> 3 + 14 = 17 (left: 8 8 17) -> 17 / 8 = 2.125 (left: 8 2.125) -> 8 + 2.125 = 10.125 (left: 10.125)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "24 2"
                }
            },
            "Step 8": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 - 4 =  -> 6 - 4 = 2 -> 6 * 4 = 24 (left: 24 2) -> 24 * 2 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "24 2"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 9 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9 12"
                }
            },
            "Step 1": {
                "Step": "9 + 3 = 12 (left: 4 9 12) -> 4 + 9 = 13 (left: 13 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 3 = 12 (left: 4 9 12) -> 4 + 9 = 13 (left: 13 12) -> 13 / 12 = 1.0833333333333333 (left: 1.0833333333333333)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 + 3 = 12 (left: 4 9 12) -> 4 + 9 = 13 (left: 13 12) -> 13 / 12 = 1.0833333333333333 (left: 1.0833333333333333) -> 1.0833333333333333 * 8 = 8.666666666666666 (left: 8 8.666666666666666)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 4": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 4 + 6 = 10 (left: 9 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 4 + 6 = 10 (left: 9 10) -> 10 / 9 = 1.11 (left: 1.11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 4 + 6 = 10 (left: 9 10) -> 10 / 9 = 1.11 (left: 1.11) -> 1 / 1 = 1 (left: 1.11)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "8 2.125"
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "24 2"
                }
            },
            "Step 7": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 - 4 =  -> 6 - 4 = 2 -> 6 * 4 = 24 (left: 24 2) -> 24 + 2 = 26 (left: 26)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "24 2"
                }
            },
            "Step 8": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 - 4 =  -> 6 - 4 = 2 -> 6 * 4 = 24 (left: 24 2) -> 24 + 2 = 26 (left: 2)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "8 8.666666666666666"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 3 = 6 (left: 4 6 9)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9 12"
                }
            },
            "Step 1": {
                "Step": "9 + 3 = 12 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 3 = 12 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12) -> 12 / 5 = 2.4 (left: 2.4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 + 3 = 12 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12) -> 12 / 5 = 2.4 (left: 2.4) -> There is only one number given, so there are no possible next steps to perform any operations on.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 4": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 4 + 6 = 10 (left: 9 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 4 + 6 = 10 (left: 9 10) -> 9 / 10 = 0.9 (left: 0.9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 4 + 6 = 10 (left: 9 10) -> 9 / 10 = 0.9 (left: 0.9) -> There are no possible next steps with the input 0.9 as it is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "24 2"
                }
            },
            "Step 7": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 - 4 =  -> 6 - 4 = 2 -> 6 * 4 = 24 (left: 24 2) -> 24 - 2 = 22 (left: 22)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "24 2"
                }
            },
            "Step 8": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 - 4 =  -> 6 - 4 = 2 -> 6 * 4 = 24 (left: 24 2) -> 24 / 2 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "24 2"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 * 3 = 12 (left: 9 9 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 5 9"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> Input: 4 6 10",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> Input: 4 6 10 -> 10 / 4 = 2.5 (",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> Input: 4 6 10 -> 10 / 4 = 2.5 ( -> 10 - 4 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "4 6 9"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "8 2.125"
                }
            },
            "Step 4": {
                "Step": "9 / 4 = 2.25 (left: 3  -> 3 + 14 = 17 (left: 8 8 17) -> 17 / 8 = 2.125 (left: 8 2.125) -> 8 + 2.125 = 10.125 (left: 10.125)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "4 6 9"
                }
            },
            "Step 5": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 4 * 6 = 24 (left: 9 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 4 * 6 = 24 (left: 9 24) -> 9 * 24 = 216 (left: 216)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "24 2"
                }
            },
            "Step 7": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 - 4 =  -> 6 - 4 = 2 -> 6 * 4 = 24 (left: 24 2) -> 24 * 2 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "24 2"
                }
            },
            "Step 8": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 - 4 =  -> 6 - 4 = 2 -> 6 * 4 = 24 (left: 24 2) -> 24 / 2 = 12",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 9 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 9 9"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 4 3 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 4 3 9) -> 3 * 9 = 27 (left: 4 27)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 / 3 = 3 (left: 4 3 9) -> 3 * 9 = 27 (left: 4 27) -> 27 / 4 = 6.75 (left: 6.75)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 4": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 / 4 = 1.5 (left: 1.5 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 / 4 = 1.5 (left: 1.5 9) -> 9 - 1.5 = 7.5 (left: 7.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 / 4 = 1.5 (left: 1.5 9) -> 9 - 1.5 = 7.5 (left: 7.5) -> There are no possible next steps with the input 7.5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "24 2"
                }
            },
            "Step 7": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 - 4 =  -> 6 - 4 = 2 -> 6 * 4 = 24 (left: 24 2) -> Input: 5 10 3",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 - 4 =  -> 6 - 4 = 2 -> 6 * 4 = 24 (left: 24 2) -> Input: 5 10 3 -> 3 * 5 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "24 2"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 9 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 9 9"
                }
            },
            "Step 1": {
                "Step": "3 + 4 = 7 (left: 7 9 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 4 = 7 (left: 7 9 9) -> 7 + 9 = 16 (left: 9 16)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 + 4 = 7 (left: 7 9 9) -> 7 + 9 = 16 (left: 9 16) -> Input: 6 12 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 4": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 9 - 4 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 9 - 4 = 5 (left: 5) -> There are no possible next steps with just one number.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 9 - 4 = 5 (left: 5) -> There are no possible next steps with just one number. -> There are no possible next steps with just one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "24 2"
                }
            },
            "Step 7": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 - 4 =  -> 6 - 4 = 2 -> 6 * 4 = 24 (left: 24 2) -> 24 / 2 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "24 2"
                }
            },
            "Step 8": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 - 4 =  -> 6 - 4 = 2 -> 6 * 4 = 24 (left: 24 2) -> 24 + 2 = 26 (left: 26)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "24 2"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 3 4 9)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 9 9"
                }
            },
            "Step 1": {
                "Step": "9 / 4 = 2.25 (left: 3 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 4 = 2.25 (left: 3  -> 3 + 14 = 17 (left: 8 8 17)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 / 4 = 2.25 (left: 3  -> 3 + 14 = 17 (left: 8 8 17) -> 17 / 8 = 2.125 (left: 8 2.125)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 4": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 - 4 = ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 - 4 =  -> 6 - 4 = 2",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 - 4 =  -> 6 - 4 = 2 -> 6 * 4 = 24 (left: 24 2)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "24 2"
                }
            },
            "Step 7": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 - 4 =  -> 6 - 4 = 2 -> 6 * 4 = 24 (left: 24 2) -> 24 / 2 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "24 2"
                }
            },
            "Step 8": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 - 4 =  -> 6 - 4 = 2 -> 6 * 4 = 24 (left: 24 2) -> 24 - 2 = 22 (left: 22)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "24 2"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "9 + 3 = 12 (left: 4 9 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 5 9"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 3 + 5 = 8 (left: 8 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 3 + 5 = 8 (left: 8 9) -> 8 + 9 = 17 (left: 17)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 3 + 5 = 8 (left: 8 9) -> 8 + 9 = 17 (left: 17) -> 17 / 2 = 8.5 (left: 8 8.5)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 4": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 9 - 4 = 5 (left: 5 6)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 9 - 4 = 5 (left: 5 6) -> 5 * 6 = 30 (left: 30)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 9 - 4 = 5 (left: 5 6) -> 5 * 6 = 30 (left: 30) -> There are no possible next steps with the input 30.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "24 2"
                }
            },
            "Step 7": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 - 4 =  -> 6 - 4 = 2 -> 6 * 4 = 24 (left: 24 2) -> 24 - 2 = 22 (left: 22)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "24 2"
                }
            },
            "Step 8": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 - 4 =  -> 6 - 4 = 2 -> 6 * 4 = 24 (left: 24 2) -> 24 / 2 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "24 2"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 3 9 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "3 4 9"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 3 4 9) -> 3 + 4 = 7 (left: 7 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 3 4 9) -> 3 + 4 = 7 (left: 7 9) -> 7 + 9 = 16 (left: 16)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 / 3 = 3 (left: 3 4 9) -> 3 + 4 = 7 (left: 7 9) -> 7 + 9 = 16 (left: 16) -> There are no possible next steps as there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 4": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 4 + 6 = 10 (left: 9 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 4 + 6 = 10 (left: 9 10) -> 5 * 3 = 15 (left: 15",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 4 + 6 = 10 (left: 9 10) -> 5 * 3 = 15 (left: 15 -> 15 / 8 = 1.875 (left: 8)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "8 8.666666666666666"
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "24 2"
                }
            },
            "Step 7": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 - 4 =  -> 6 - 4 = 2 -> 6 * 4 = 24 (left: 24 2) -> 24 * 2 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "24 2"
                }
            },
            "Step 8": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 - 4 =  -> 6 - 4 = 2 -> 6 * 4 = 24 (left: 24 2) -> 24 + 2 = 26 (left: 26)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "24 2"
                }
            }
        },
        "Input": "3 4 9 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1066": {
        "puzzle": "3 3 6 8",
        "Agent 0": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 6 6 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 6 8"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8) -> 1.5 / 8 = 0.1875 (left: 0.1875)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8) -> 1.5 / 8 = 0.1875 (left: 0.1875) -> There are no possible next steps for the input 0.1875.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "9 6 8"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 8 + 9 = 17 (left:",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 8 + 9 = 17 (left: -> 8 * 9 = 72 (left: 17 72)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 8 + 9 = 17 (left: -> 8 * 9 = 72 (left: 17 72) -> 17 + 72 = 89 (left: 89)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "8 14"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "8 48"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 6 * 8 =  -> 6 * 8 = 48 -> 48 / 6 = 8 (left: 8 48) -> 8 * 6 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "8 48"
                }
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 6 * 8 =  -> 6 * 8 = 48 -> 48 / 6 = 8 (left: 8 48) -> 48 - 40 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "8 48"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 - 6 = 2 (left: 3 6 2)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 6 "
                }
            },
            "Step 1": {
                "Step": "8 - 6 = 2 (left: 2 6  -> 6 / 2 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 6 = 2 (left: 2 6  -> 6 / 2 = 3 (left: 3) -> 3 + 3 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 6 = 2 (left: 2 6  -> 6 / 2 = 3 (left: 3) -> 3 + 3 = 6 (left: 6) -> 6 * 8 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "2 6 "
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "9 6 8"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 6 * 8 = ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 6 * 8 =  -> 6 * 8 = 48",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 6 * 8 =  -> 6 * 8 = 48 -> 48 / 6 = 8 (left: 8 48)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "8 48"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 6 * 8 =  -> 6 * 8 = 48 -> 48 / 6 = 8 (left: 8 48) -> 8 + 40 = 48 (left: 8 48)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 6 * 8 =  -> 6 * 8 = 48 -> 48 / 6 = 8 (left: 8 48) -> 8 + 40 = 48 (left: 8 48) -> 48 - 40 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "8 48"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 6 8)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 6 8"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 8 - 6 = 2 (left: 2 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 8 - 6 = 2 (left: 2 8) -> 8 - 2 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 8 - 6 = 2 (left: 2 8) -> 8 - 2 = 6 (left: 6) -> 6 + 8 = 14 (left: 8 14)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "9 6 8"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 * 6 = 54 (left: 54 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 * 6 = 54 (left: 54 8) -> 54 - 8 = 46 (left: 46)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 * 6 = 54 (left: 54 8) -> 54 - 8 = 46 (left: 46) -> 46 is already a single number, no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "8 48"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 6 * 8 =  -> 6 * 8 = 48 -> 48 / 6 = 8 (left: 8 48) -> 48 / 6 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "8 48"
                }
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 6 * 8 =  -> 6 * 8 = 48 -> 48 / 6 = 8 (left: 8 48) -> 8 + 40 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "8 48"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 3 9 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 6 8"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8) -> 1.5 * 8 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8) -> 1.5 * 8 = 12 (left: 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "9 6 8"
                },
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "9 6 8"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 6 - 8 = -",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 6 - 8 = - -> 6 - 8 = -2",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 6 - 8 = - -> 6 - 8 = -2 -> 6 * 8 = 48 (left: -2 48)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "8 48"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 6 * 8 =  -> 6 * 8 = 48 -> 48 / 6 = 8 (left: 8 48) -> 8 * 6 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "8 48"
                }
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 6 * 8 =  -> 6 * 8 = 48 -> 48 / 6 = 8 (left: 8 48) -> 48 / 8 = 6 (left: 6 8)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "8 - 6 = 2 (left: 2 6 ",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 6 "
                }
            },
            "Step 1": {
                "Step": "8 - 6 = 2 (left: 2 6  -> 2 + 6 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 6 = 2 (left: 2 6  -> 2 + 6 = 8 (left: 8) -> 8 * 8 = 64 (left: 64)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 6 = 2 (left: 2 6  -> 2 + 6 = 8 (left: 8) -> 8 * 8 = 64 (left: 64) -> 64 + 2 = 66 (left: 2 64)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "9 6 8"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 6 - 8 = -2 (left: -2 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 6 - 8 = -2 (left: -2 8) -> 3 + 6 = 9 (left: 9 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 6 - 8 = -2 (left: -2 8) -> 3 + 6 = 9 (left: 9 9) -> 9 * 9 = 81 (left: 81)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "8 14"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "8 48"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 6 * 8 =  -> 6 * 8 = 48 -> 48 / 6 = 8 (left: 8 48) -> 8 * 6 = 48",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 6 * 8 =  -> 6 * 8 = 48 -> 48 / 6 = 8 (left: 8 48) -> 8 * 6 = 48 -> 48 - 8 = 40 (left: 6 40)",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "3 - 3 = 0 (left: 0 6 8)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "3 18 "
                }
            },
            "Step 1": {
                "Step": "6 * 3 = 18 (left: 3 18  -> 3 + 18 = 21 (left: 21)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 3 = 18 (left: 3 18  -> 3 + 18 = 21 (left: 21) -> 21 + 2 = 23",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 3 = 18 (left: 3 18  -> 3 + 18 = 21 (left: 21) -> 21 + 2 = 23 -> 21 - 2 = 19 (left: 19)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "3 18 "
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "9 6 8"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 6 * 8 = 48 (",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 6 * 8 = 48 ( -> 48 / 6 = 8 (left: 8 48)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 6 * 8 = 48 ( -> 48 / 6 = 8 (left: 8 48) -> 48 / 8 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "8 14"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "8 48"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 6 * 8 =  -> 6 * 8 = 48 -> 48 / 6 = 8 (left: 8 48) -> 8 * 6 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "8 48"
                }
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 6 * 8 =  -> 6 * 8 = 48 -> 48 / 6 = 8 (left: 8 48) -> 8 * 6 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "8 48"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "8 - 6 = 2 (left: 3 2 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "0 6 8"
                }
            },
            "Step 1": {
                "Step": "3 - 3 = 0 (left: 0 6 8) -> 8 - 6 = 2 (left: 0 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 - 3 = 0 (left: 0 6 8) -> 8 - 6 = 2 (left: 0 2) -> 4 - 2 = 2 (left: 2 6)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 - 3 = 0 (left: 0 6 8) -> 8 - 6 = 2 (left: 0 2) -> 4 - 2 = 2 (left: 2 6) -> 6 - 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "9 6 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "9 6 8"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 8 + 9 = 17 (left:",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 8 + 9 = 17 (left: -> 9 - 8 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 8 + 9 = 17 (left: -> 9 - 8 = 1 (left: 1) -> There are no possible next steps with just one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "8 48"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 6 * 8 =  -> 6 * 8 = 48 -> 48 / 6 = 8 (left: 8 48) -> 8 * 6 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "8 48"
                }
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 6 * 8 =  -> 6 * 8 = 48 -> 48 / 6 = 8 (left: 8 48) -> 48 / 8 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "8 48"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "6 * 3 = 18 (left: 3 18 ",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "3 18 "
                }
            },
            "Step 1": {
                "Step": "6 * 3 = 18 (left: 3 18  -> 3 * 6 = 18 (left: 18)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 3 = 18 (left: 3 18  -> 3 * 6 = 18 (left: 18) -> 18 + 8 = 26 (left: 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 3 = 18 (left: 3 18  -> 3 * 6 = 18 (left: 18) -> 18 + 8 = 26 (left: 8) -> 8 + 8 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "9 6 8"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 * 6 = 54 (left: 8 54)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 * 6 = 54 (left: 8 54) -> 54 / 8 = 6.75 (left: 6.75)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 * 6 = 54 (left: 8 54) -> 54 / 8 = 6.75 (left: 6.75) -> There are no possible next steps with the input 6.75.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "8 48"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 6 * 8 =  -> 6 * 8 = 48 -> 48 / 6 = 8 (left: 8 48) -> 8 + 40 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "8 48"
                }
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 6 * 8 =  -> 6 * 8 = 48 -> 48 / 6 = 8 (left: 8 48) -> 48 - 40 = 8 (left: 8 8)",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "6 / 3 = 2 (left: 3 2 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 6 8"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 - 6 = 3 (left: 3 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (3 * 3) * (6 + 8) = 24",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "9 6 8"
                },
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "9 6 8"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 8 - 6 = 2 (left: 9 2)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 8 - 6 = 2 (left: 9 2) -> 9 - 2 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 8 - 6 = 2 (left: 9 2) -> 9 - 2 = 7 (left: 7) -> 7 - 2 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "8 14"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "8 48"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 6 * 8 =  -> 6 * 8 = 48 -> 48 / 6 = 8 (left: 8 48) -> 8 * 6 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "8 48"
                }
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 6 * 8 =  -> 6 * 8 = 48 -> 48 / 6 = 8 (left: 8 48) -> 48 - 40 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "8 48"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "6 - 3 = 3 (left: 3 3 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 6 8"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 * 6 = 54 (left: 8 54)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 * 6 = 54 (left: 8 54) -> 8 + 54 = 62 (left: 62)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 * 6 = 54 (left: 8 54) -> 8 + 54 = 62 (left: 62) -> 6 + 2 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "3 18 "
                }
            },
            "Step 4": {
                "Step": "6 * 3 = 18 (left: 3 18  -> 18 - 3 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 * 3 = 18 (left: 3 18  -> 18 - 3 = 15 (left: 15) -> There are no possible next steps with the input 15.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 3 = 18 (left: 3 18  -> 18 - 3 = 15 (left: 15) -> There are no possible next steps with the input 15. -> There are no possible next steps with the input 15.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "8 48"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 6 * 8 =  -> 6 * 8 = 48 -> 48 / 6 = 8 (left: 8 48) -> 8 * 48 = 384 (left: 384)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "8 48"
                }
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 6 * 8 =  -> 6 * 8 = 48 -> 48 / 6 = 8 (left: 8 48) -> 48 / 8 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "8 48"
                }
            }
        },
        "Input": "3 3 6 8",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1067": {
        "puzzle": "4 4 7 8",
        "Agent 0": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 7 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 8"
                }
            },
            "Step 1": {
                "Step": "7 + 4 = 11 (left: 4 8 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 4 = 11 (left: 4 8 11) -> 4 * 8 = 32 (left: 32 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 + 4 = 11 (left: 4 8 11) -> 4 * 8 = 32 (left: 32 11) -> 32 + 11 = 43 (left: 43)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "1 7"
                }
            },
            "Step 4": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 - 1 = 7 (left: 7 7) -> 7 / 7 = 1 (left: 1 7) -> 1 + 7 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "1 7"
                }
            },
            "Step 5": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 - 1 = 7 (left: 7 7) -> 7 / 7 = 1 (left: 1 7) -> 1 * 7 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "There are no next steps as the input is already at its final state."
                }
            },
            "Step 6": {
                "Step": "8 / 4 = 2 (left: 2 4  -> Possible next steps: -> There are no next steps as the input is already at its final state. -> N/A",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "There are no next steps as the input is already at its final state."
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "There are no next steps as the input is already at its final state."
                }
            },
            "Step 7": {
                "Step": "8 / 4 = 2 (left: 2 4  -> Possible next steps: -> There are no next steps as the input is already at its final state. -> N/A",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "There are no next steps as the input is already at its final state."
                }
            },
            "Step 8": {
                "Step": "8 / 4 = 2 (left: 2 4  -> Possible next steps: -> There are no next steps as the input is already at its final state. -> There are no possible next steps as the input is already at its final state.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 7 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "7 8 16"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 7 8 16) -> 7 * 8 = 56 (left: 56 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 7 8 16) -> 7 * 8 = 56 (left: 56 16) -> 56 + 16 = 72 (left: 72)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 4 = 16 (left: 7 8 16) -> 7 * 8 = 56 (left: 56 16) -> 56 + 16 = 72 (left: 72) -> There are no possible next steps for the input 72 as it is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "There are no next steps as the input is already at its final state."
                }
            },
            "Step 4": {
                "Step": "8 / 4 = 2 (left: 2 4  -> Possible next steps: -> There are no next steps as the input is already at its final state. -> Input is already at its final state.",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 / 4 = 2 (left: 2 4  -> Possible next steps: -> There are no next steps as the input is already at its final state. -> Input is already at its final state. -> Input is already at its final state.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 / 4 = 2 (left: 2 4  -> Possible next steps: -> There are no next steps as the input is already at its final state. -> Input is already at its final state. -> Input is already at its final state. -> There are no possible next steps as the input is already at its final state.",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "1 7"
                }
            },
            "Step 7": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 - 1 = 7 (left: 7 7) -> 7 / 7 = 1 (left: 1 7) -> 1 + 7 = 8",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 - 1 = 7 (left: 7 7) -> 7 / 7 = 1 (left: 1 7) -> 1 + 7 = 8 -> 8 - 7 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "There are no possible next steps as the input is already at its final state."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 4 = 8 (left: 7 8 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 8"
                }
            },
            "Step 1": {
                "Step": "8 / 4 = 2 (left: 2 4 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 / 4 = 2 (left: 2 4  -> Possible next steps:",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 / 4 = 2 (left: 2 4  -> Possible next steps: -> There are no next steps as the input is already at its final state.",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "1 7"
                }
            },
            "Step 4": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 - 1 = 7 (left: 7 7) -> 7 / 7 = 1 (left: 1 7) -> 1 + 7 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "1 7"
                }
            },
            "Step 5": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 - 1 = 7 (left: 7 7) -> 7 / 7 = 1 (left: 1 7) -> 1 * 7 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "1 7"
                }
            },
            "Step 6": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 - 1 = 7 (left: 7 7) -> 7 / 7 = 1 (left: 1 7) -> 1 * 7 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "1 7"
                },
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "1 7"
                }
            },
            "Step 7": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 - 1 = 7 (left: 7 7) -> 7 / 7 = 1 (left: 1 7) -> 7 - 1 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "There are no next steps as the input is already at its final state."
                }
            },
            "Step 8": {
                "Step": "8 / 4 = 2 (left: 2 4  -> Possible next steps: -> There are no next steps as the input is already at its final state. -> Input is already at its final state.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 7 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 7 8"
                }
            },
            "Step 1": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 7 / 1 = 7 (left: 7 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 7 / 1 = 7 (left: 7 8) -> 7 * 8 = 56 (left: 8 56)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 7 / 1 = 7 (left: 7 8) -> 7 * 8 = 56 (left: 8 56) -> 8 * 7 = 56 (left: 56)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "1 7 8"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "1 7"
                }
            },
            "Step 4": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 - 1 = 7 (left: 7 7) -> 7 / 7 = 1 (left: 1 7) -> 7 * 1 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "1 7"
                }
            },
            "Step 5": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 - 1 = 7 (left: 7 7) -> 7 / 7 = 1 (left: 1 7) -> 1 + 7 = 8",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 - 1 = 7 (left: 7 7) -> 7 / 7 = 1 (left: 1 7) -> 1 + 7 = 8 -> 1 / 7 = 0.14285714286 (left: 0.14285714286 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "1 7"
                }
            },
            "Step 7": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 - 1 = 7 (left: 7 7) -> 7 / 7 = 1 (left: 1 7) -> 7 / 1 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "There are no next steps as the input is already at its final state."
                }
            },
            "Step 8": {
                "Step": "8 / 4 = 2 (left: 2 4  -> Possible next steps: -> There are no next steps as the input is already at its final state. -> There are no possible next steps as the input is already at its final state.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "8 - 4 = 4 (left: 4 4 ",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 8"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 16 7 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 7 + 8 = 15 (left: 16 15)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 7 + 8 = 15 (left: 16 15) -> 16 - 15 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "1 7"
                }
            },
            "Step 4": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 - 1 = 7 (left: 7 7) -> 7 / 7 = 1 (left: 1 7) -> 7 / 1 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "1 7"
                }
            },
            "Step 5": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 - 1 = 7 (left: 7 7) -> 7 / 7 = 1 (left: 1 7) -> 7 / 1 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "1 7"
                }
            },
            "Step 6": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 - 1 = 7 (left: 7 7) -> 7 / 7 = 1 (left: 1 7) -> 1 * 7 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "1 7"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no next steps as the input is already at its final state."
                }
            },
            "Step 7": {
                "Step": "8 / 4 = 2 (left: 2 4  -> Possible next steps: -> There are no next steps as the input is already at its final state. -> None",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "1 7"
                }
            },
            "Step 8": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 - 1 = 7 (left: 7 7) -> 7 / 7 = 1 (left: 1 7) -> 1 + 7 = 8",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 7 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 8"
                }
            },
            "Step 1": {
                "Step": "4 / 4 = 1 (left: 1 7 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 - 1 = 7 (left: 7 7)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 - 1 = 7 (left: 7 7) -> 7 / 7 = 1 (left: 1 7)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "There are no next steps as the input is already at its final state."
                }
            },
            "Step 4": {
                "Step": "8 / 4 = 2 (left: 2 4  -> Possible next steps: -> There are no next steps as the input is already at its final state. -> Input is already at its final state.",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 / 4 = 2 (left: 2 4  -> Possible next steps: -> There are no next steps as the input is already at its final state. -> Input is already at its final state. -> Input is already at its final state.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 / 4 = 2 (left: 2 4  -> Possible next steps: -> There are no next steps as the input is already at its final state. -> Input is already at its final state. -> Input is already at its final state. -> Input is already at its final state.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "1 7"
                }
            },
            "Step 7": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 - 1 = 7 (left: 7 7) -> 7 / 7 = 1 (left: 1 7) -> 7 * 1 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "There are no next steps as the input is already at its final state."
                }
            },
            "Step 8": {
                "Step": "8 / 4 = 2 (left: 2 4  -> Possible next steps: -> There are no next steps as the input is already at its final state. -> N/A",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "There are no possible next steps as the input is already at its final state."
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 16 7 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 8"
                }
            },
            "Step 1": {
                "Step": "8 - 4 = 4 (left: 4 4 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 4 = 4 (left: 4 4 7) -> 7 - 4 = 3 (left: 4 3)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 4 = 4 (left: 4 4 7) -> 7 - 4 = 3 (left: 4 3) -> 4 / 3 = 1.33 (left: 1.33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "1 7"
                }
            },
            "Step 4": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 - 1 = 7 (left: 7 7) -> 7 / 7 = 1 (left: 1 7) -> 7 / 1 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "1 7"
                }
            },
            "Step 5": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 - 1 = 7 (left: 7 7) -> 7 / 7 = 1 (left: 1 7) -> 7 * 1 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "1 7"
                }
            },
            "Step 6": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 - 1 = 7 (left: 7 7) -> 7 / 7 = 1 (left: 1 7) -> 1 * 7 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "There are no next steps as the input is already at its final state."
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "0.14285714286 7"
                }
            },
            "Step 7": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 - 1 = 7 (left: 7 7) -> 7 / 7 = 1 (left: 1 7) -> 1 + 7 = 8 -> 1 / 7 = 0.14285714286 (left: 0.14285714286 7) -> 0.14285714286 * 7 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "1 7"
                }
            },
            "Step 8": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 - 1 = 7 (left: 7 7) -> 7 / 7 = 1 (left: 1 7) -> 7 - 1 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "There are no possible next steps as the input is already at its final state."
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "4 + 4 = 8 (left: 7 8 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 7 8"
                }
            },
            "Step 1": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 1 * 7 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 1 * 7 = 7 (left: 7) -> 7 * 8 = 56 (left: 56)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 1 * 7 = 7 (left: 7) -> 7 * 8 = 56 (left: 56) -> There are no possible next steps as there is only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "1 7"
                }
            },
            "Step 4": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 - 1 = 7 (left: 7 7) -> 7 / 7 = 1 (left: 1 7) -> 7 / 1 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "There are no next steps as the input is already at its final state."
                }
            },
            "Step 5": {
                "Step": "8 / 4 = 2 (left: 2 4  -> Possible next steps: -> There are no next steps as the input is already at its final state. -> N/A",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "There are no next steps as the input is already at its final state."
                }
            },
            "Step 6": {
                "Step": "8 / 4 = 2 (left: 2 4  -> Possible next steps: -> There are no next steps as the input is already at its final state. -> Input is already at its final state.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no possible next steps as the input is already at its final state."
                }
            },
            "Step 7": {
                "Step": "8 / 4 = 2 (left: 2 4  -> Possible next steps: -> There are no next steps as the input is already at its final state. -> Input is already at its final state. -> Input is already at its final state. -> There are no possible next steps as the input is already at its final state. -> There are no possible next steps as the input is already at its final state.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 / 4 = 2 (left: 2 4  -> Possible next steps: -> There are no next steps as the input is already at its final state. -> Input is already at its final state. -> Input is already at its final state. -> There are no possible next steps as the input is already at its final state. -> There are no possible next steps as the input is already at its final state. -> There are no possible next steps as the input is already at its final state.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 7 8 16)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "7 8 8"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 7 8 8) -> 8 / 7 = 1.14 (left",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 7 8 8) -> 8 / 7 = 1.14 (left -> 7 * 1 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 7 8 8) -> 8 / 7 = 1.14 (left -> 7 * 1 = 7 (left: 7) -> 7 - 2 = 5 (left: 5 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "1 7"
                }
            },
            "Step 4": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 - 1 = 7 (left: 7 7) -> 7 / 7 = 1 (left: 1 7) -> 1 * 7 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "There are no next steps as the input is already at its final state."
                }
            },
            "Step 5": {
                "Step": "8 / 4 = 2 (left: 2 4  -> Possible next steps: -> There are no next steps as the input is already at its final state. -> N/A",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "1 7"
                }
            },
            "Step 6": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 - 1 = 7 (left: 7 7) -> 7 / 7 = 1 (left: 1 7) -> 7 / 1 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "There are no next steps as the input is already at its final state."
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "There are no next steps as the input is already at its final state."
                }
            },
            "Step 7": {
                "Step": "8 / 4 = 2 (left: 2 4  -> Possible next steps: -> There are no next steps as the input is already at its final state. -> There are no possible next steps as the input is already at its final state.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 / 4 = 2 (left: 2 4  -> Possible next steps: -> There are no next steps as the input is already at its final state. -> There are no possible next steps as the input is already at its final state. -> N/A",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "0.14285714286 7"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 7 8 16)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 7 8"
                }
            },
            "Step 1": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 1 * 7 = 7 (left: 7 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 1 * 7 = 7 (left: 7 8) -> 7 / 8 = 0.875 (left: 0.875)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 1 * 7 = 7 (left: 7 8) -> 7 / 8 = 0.875 (left: 0.875) -> There is only one number which is 0.875. No further operations can be done.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "1 7"
                }
            },
            "Step 4": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 - 1 = 7 (left: 7 7) -> 7 / 7 = 1 (left: 1 7) -> 7 / 1 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "There are no next steps as the input is already at its final state."
                }
            },
            "Step 5": {
                "Step": "8 / 4 = 2 (left: 2 4  -> Possible next steps: -> There are no next steps as the input is already at its final state. -> N/A",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "1 7"
                }
            },
            "Step 6": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 - 1 = 7 (left: 7 7) -> 7 / 7 = 1 (left: 1 7) -> 1 * 7 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "1 7"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no next steps as the input is already at its final state."
                }
            },
            "Step 7": {
                "Step": "8 / 4 = 2 (left: 2 4  -> Possible next steps: -> There are no next steps as the input is already at its final state. -> Input is already at its final state.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 / 4 = 2 (left: 2 4  -> Possible next steps: -> There are no next steps as the input is already at its final state. -> Input is already at its final state. -> Input is already at its final state.",
                "Pruning": null
            }
        },
        "Input": "4 4 7 8",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1068": {
        "puzzle": "3 5 11 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 5 = 7 (left: 3 7 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 16 12"
                }
            },
            "Step 1": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 3 = 5.33 (left: 5.33 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 3 = 5.33 (left: 5.33 12) -> 12 - 5.33 = 6.67 (left: 6.67)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 3 = 5.33 (left: 5.33 12) -> 12 - 5.33 = 6.67 (left: 6.67) -> 6.67 * 2 = 13.34 (left: 13.34)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "15 11 12"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "3 16 12"
                }
            },
            "Step 4": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 - 3 = 13 (left: 13 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 - 3 = 13 (left: 13 12) -> 13 - 12 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 - 3 = 13 (left: 13 12) -> 13 - 12 = 1 (left: 1) -> There is only one number provided, so there are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "3 30"
                }
            },
            "Step 7": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 3 = 5.33 (left: 5.33 12) -> Input: 10 3 -> 10 * 3 = 30 (left: 3 30) -> 30 - 3 = 27 (left: 27)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "3 30"
                }
            },
            "Step 8": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 3 = 5.33 (left: 5.33 12) -> Input: 10 3 -> 10 * 3 = 30 (left: 3 30) -> 3 + 30 = 33 (left: 33)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "3 30"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "11 - 5 = 6 (left: 3 6 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 55 12"
                }
            },
            "Step 1": {
                "Step": "5 * 11 = 55 (left: 3 55 12) -> 55 - 3 = 52 (left: 52 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 11 = 55 (left: 3 55 12) -> 55 - 3 = 52 (left: 52 12) -> 52 + 12 = 64 (left: 64)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 11 = 55 (left: 3 55 12) -> 55 - 3 = 52 (left: 52 12) -> 52 + 12 = 64 (left: 64) -> 64 * 2 = 128",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "3 16 12"
                }
            },
            "Step 4": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 - 12 = 4 (left: 3 4)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 - 12 = 4 (left: 3 4) -> 4 - 3 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 - 12 = 4 (left: 3 4) -> 4 - 3 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "3 30"
                }
            },
            "Step 7": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 3 = 5.33 (left: 5.33 12) -> Input: 10 3 -> 10 * 3 = 30 (left: 3 30) -> 30 / 3 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "3 30"
                }
            },
            "Step 8": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 3 = 5.33 (left: 5.33 12) -> Input: 10 3 -> 10 * 3 = 30 (left: 3 30) -> 30 / 3 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "3 30"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 * 5 = 15 (left: 15 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "15 11 12"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 15 11 12) -> 15 / 11 = 1.3636363636363635 (left: 1 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 15 11 12) -> 15 / 11 = 1.3636363636363635 (left: 1 12) -> 1 + 12 = 13 (left: 12 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 15 11 12) -> 15 / 11 = 1.3636363636363635 (left: 1 12) -> 1 + 12 = 13 (left: 12 13) -> 12 * 13 = 156 (left: 156)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "3 16 12"
                },
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "3 16 12"
                }
            },
            "Step 4": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 3 = 5.33 (left: 5.33 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 3 = 5.33 (left: 5.33 12) -> 5.33 * 12 \u2248 63.96 (left: 63.96)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 3 = 5.33 (left: 5.33 12) -> 5.33 * 12 \u2248 63.96 (left: 63.96) -> 6 * 3 = 18.96 (left: 18 9.96)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "3 30"
                }
            },
            "Step 7": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 3 = 5.33 (left: 5.33 12) -> Input: 10 3 -> 10 * 3 = 30 (left: 3 30) -> 3 + 30 = 33 (left: 33)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "3 30"
                }
            },
            "Step 8": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 3 = 5.33 (left: 5.33 12) -> Input: 10 3 -> 10 * 3 = 30 (left: 3 30) -> 30 - 3 = 27 (left: 27)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "3 30"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "3 * 5 = 15 (left: 15 11 12)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 11 12"
                }
            },
            "Step 1": {
                "Step": "3 + 5 = 8 (left: 8 11 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 5 = 8 (left: 8 11 12) -> 8 + 11 = 19 (left: 19 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 + 5 = 8 (left: 8 11 12) -> 8 + 11 = 19 (left: 19 12) -> 19 + 12 = 31 (left: 31)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "3 16 12"
                }
            },
            "Step 4": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 - 3 = 13 (left: 13 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 - 3 = 13 (left: 13 12) -> 13 + 12 = 25 (left: 25)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 - 3 = 13 (left: 13 12) -> 13 + 12 = 25 (left: 25) -> 25 / 2 = 12.5 (left: 12.5)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "There are no possible next steps with the input of 3."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "3 30"
                }
            },
            "Step 7": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 3 = 5.33 (left: 5.33 12) -> Input: 10 3 -> 10 * 3 = 30 (left: 3 30) -> 3 * 30 = 90 (left: 90)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "3 30"
                }
            },
            "Step 8": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 3 = 5.33 (left: 5.33 12) -> Input: 10 3 -> 10 * 3 = 30 (left: 3 30) -> 30 / 3 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "3 30"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 + 11 = 16 (left: 3 16 12)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "15 11 12"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 15 11 12) -> 12 / 11",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 15 11 12) -> 12 / 11 -> 12 / 11 = 1.0909090909090908",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 15 11 12) -> 12 / 11 -> 12 / 11 = 1.0909090909090908 -> 12 + 11 = 23",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "3 16 12"
                }
            },
            "Step 4": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 3 = 5.33 (left: 5.33 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 3 = 5.33 (left: 5.33 12) -> Possible next steps:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 3 = 5.33 (left: 5.33 12) -> Possible next steps: -> There are no possible next steps with the given input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "3 30"
                }
            },
            "Step 7": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 3 = 5.33 (left: 5.33 12) -> Input: 10 3 -> 10 * 3 = 30 (left: 3 30) -> 30 / 3 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "3 30"
                }
            },
            "Step 8": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 3 = 5.33 (left: 5.33 12) -> Input: 10 3 -> 10 * 3 = 30 (left: 3 30) -> 3 * 10 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "3 30"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "12 - 5 = 7 (left: 3 7 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 16 12"
                }
            },
            "Step 1": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 3 + 16 = 19 (left: 12 19)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 3 + 16 = 19 (left: 12 19) -> 12 / 19 = 0.631578947368421 (left: 0.631578947368421)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 3 + 16 = 19 (left: 12 19) -> 12 / 19 = 0.631578947368421 (left: 0.631578947368421) -> 0.631578947368421 / 2 = 0.3157894736842105 (left: 0.3157894736842105)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "3 16 12"
                },
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "3 16 12"
                }
            },
            "Step 4": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 12 - 3 = 9 (left: 9 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 12 - 3 = 9 (left: 9 12) -> 9 * 12 = 108 (left: 108)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 12 - 3 = 9 (left: 9 12) -> 9 * 12 = 108 (left: 108) -> 4. 108 / 2 = 54",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "3 30"
                }
            },
            "Step 7": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 3 = 5.33 (left: 5.33 12) -> Input: 10 3 -> 10 * 3 = 30 (left: 3 30) -> 30 / 3 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "3 30"
                }
            },
            "Step 8": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 3 = 5.33 (left: 5.33 12) -> Input: 10 3 -> 10 * 3 = 30 (left: 3 30) -> 3 + 30 = 33 (left: 33)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "3 30"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "5 * 11 = 55 (left: 3 55 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 16 12"
                }
            },
            "Step 1": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 12 - 3 = 9 (left: 9 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 12 - 3 = 9 (left: 9 12) -> 12 - 9 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 12 - 3 = 9 (left: 9 12) -> 12 - 9 = 3 (left: 3) -> There are no possible next steps with the input of 3.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "3 16 12"
                }
            },
            "Step 4": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 - 3 = 13 (left: 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 - 3 = 13 (left: 13) -> 13 - 8 = 5 (left: 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 - 3 = 13 (left: 13) -> 13 - 8 = 5 (left: 8) -> 8 * 8 = 64 (left: 64)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "64 * 2 = 128"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "3 30"
                }
            },
            "Step 7": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 3 = 5.33 (left: 5.33 12) -> Input: 10 3 -> 10 * 3 = 30 (left: 3 30) -> 30 - 3 = 27 (left: 27)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "3 30"
                }
            },
            "Step 8": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 3 = 5.33 (left: 5.33 12) -> Input: 10 3 -> 10 * 3 = 30 (left: 3 30) -> 3 + 30 = 33 (left: 33)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "3 30"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "11 * 3 = 33 (left: 5 33 ",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "15 11 12"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 15 11 12) -> 15 - 12 = 3 (left: 3 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 15 11 12) -> 15 - 12 = 3 (left: 3 11) -> 4 + 6 = 10 (left: 10 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 15 11 12) -> 15 - 12 = 3 (left: 3 11) -> 4 + 6 = 10 (left: 10 2) -> 10 + 2 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "3 16 12"
                },
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "3 16 12"
                }
            },
            "Step 4": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 3 = 5.33 (left: 5.33 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 3 = 5.33 (left: 5.33 12) -> 5.33 / 12 = 0.44 (left: 0.44)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 3 = 5.33 (left: 5.33 12) -> 5.33 / 12 = 0.44 (left: 0.44) -> There are no possible next steps for the input 0.44.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "3 30"
                }
            },
            "Step 7": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 3 = 5.33 (left: 5.33 12) -> Input: 10 3 -> 10 * 3 = 30 (left: 3 30) -> 30 / 3 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "3 30"
                }
            },
            "Step 8": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 3 = 5.33 (left: 5.33 12) -> Input: 10 3 -> 10 * 3 = 30 (left: 3 30) -> 3 * 30 = 90 (left: 90)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "3 30"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "5 * 11 = 55 (left: 3 55 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 16 12"
                }
            },
            "Step 1": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 3 = 5.33 (left: 5.33 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 3 = 5.33 (left: 5.33 12) -> Input: 3 9 27",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 3 = 5.33 (left: 5.33 12) -> Input: 3 9 27 -> 3 * 9 = 27 (left: 27)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "3 16 12"
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "3 16 12"
                }
            },
            "Step 4": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 3 = 5.33 (left: 5.33 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 3 = 5.33 (left: 5.33 12) -> Input: 10 3",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 3 = 5.33 (left: 5.33 12) -> Input: 10 3 -> 10 * 3 = 30 (left: 3 30)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "3 30"
                }
            },
            "Step 7": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 3 = 5.33 (left: 5.33 12) -> Input: 10 3 -> 10 * 3 = 30 (left: 3 30) -> 3 * 10 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "3 30"
                }
            },
            "Step 8": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 3 = 5.33 (left: 5.33 12) -> Input: 10 3 -> 10 * 3 = 30 (left: 3 30) -> 30 / 3 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "3 30"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "5 * 11 = 55 (left: 3 55 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 16 12"
                }
            },
            "Step 1": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 3 + 16 = 19 (left: 12 19)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 3 + 16 = 19 (left: 12 19) -> 12 - 19 = -7 (left: -7)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 3 + 16 = 19 (left: 12 19) -> 12 - 19 = -7 (left: -7) -> 7 + (-7) = 0",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "3 16 12"
                }
            },
            "Step 4": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> Input: 48 13 5",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> Input: 48 13 5 -> Input: 3 6 9 12",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> Input: 48 13 5 -> Input: 3 6 9 12 -> 6 / 3 = 2 (left: 2 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "3 30"
                }
            },
            "Step 7": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 3 = 5.33 (left: 5.33 12) -> Input: 10 3 -> 10 * 3 = 30 (left: 3 30) -> 30 - 3 = 27 (left: 27)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "3 30"
                }
            },
            "Step 8": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 3 = 5.33 (left: 5.33 12) -> Input: 10 3 -> 10 * 3 = 30 (left: 3 30) -> 30 / 3 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "3 30"
                }
            }
        },
        "Input": "3 5 11 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1069": {
        "puzzle": "4 4 6 10",
        "Agent 0": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 6 10)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 4 10"
                }
            },
            "Step 1": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5) -> There are no possible next steps with the input 1.5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "4 4 10"
                }
            },
            "Step 4": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 4 + 4 = 8 (left: 8 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 4 + 4 = 8 (left: 8 10) -> 8 * 10 = 80 (left: 80)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 4 + 4 = 8 (left: 8 10) -> 8 * 10 = 80 (left: 80) -> There are no possible next steps with the input of 80.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "9 + 3 = 12 (left:"
                }
            },
            "Step 7": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 10 - 6 = 4 (left: 4 10) -> 9 / 3 = 3 (left: 3 9 27 -> 9 + 3 = 12 (left: -> 9 * 3 = 27 (left: 27)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "9 + 3 = 12 (left:"
                }
            },
            "Step 8": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 10 - 6 = 4 (left: 4 10) -> 9 / 3 = 3 (left: 3 9 27 -> 9 + 3 = 12 (left: -> 9 - 3 = 6 (left: 6 12)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 4 = 10 (left: 4 10 10)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 8 10"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 10 - 6 = 4 (left: 4 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 10 - 6 = 4 (left: 4 10) -> 9 / 3 = 3 (left: 3 9 27",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 10 - 6 = 4 (left: 4 10) -> 9 / 3 = 3 (left: 3 9 27 -> 9 + 3 = 12 (left:",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "4 4 10"
                }
            },
            "Step 4": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 4 / 4 = 1 (left: 1 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 4 / 4 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 4 / 4 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11) -> There are no possible next steps with the input 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "9 + 3 = 12 (left:"
                }
            },
            "Step 7": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 10 - 6 = 4 (left: 4 10) -> 9 / 3 = 3 (left: 3 9 27 -> 9 + 3 = 12 (left: -> 9 / 3 = 3 (left: 3 12)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 10 - 6 = 4 (left: 4 10) -> 9 / 3 = 3 (left: 3 9 27 -> 9 + 3 = 12 (left: -> 9 / 3 = 3 (left: 3 12) -> 3 + 12 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "9 + 3 = 12 (left:"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 6 = 4 (left: 4 4 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 10"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 6 8 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14) -> 14 / 10 = 1.4 (left: 1.4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "4 4 10"
                }
            },
            "Step 4": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 4 + 4 = 8 (left: 8 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 4 + 4 = 8 (left: 8 10) -> 10 + 8 = 18 (left: 18)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 4 + 4 = 8 (left: 8 10) -> 10 + 8 = 18 (left: 18) -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "9 + 3 = 12 (left:"
                }
            },
            "Step 7": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 10 - 6 = 4 (left: 4 10) -> 9 / 3 = 3 (left: 3 9 27 -> 9 + 3 = 12 (left: -> 3 + 12 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "9 + 3 = 12 (left:"
                }
            },
            "Step 8": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 10 - 6 = 4 (left: 4 10) -> 9 / 3 = 3 (left: 3 9 27 -> 9 + 3 = 12 (left: -> 9 - 3 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "9 + 3 = 12 (left:"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 + 4 = 8 (left: 6 8 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 10 10"
                }
            },
            "Step 1": {
                "Step": "6 + 4 = 10 (left: 4 10 10) -> 10 / 4 = 2.5 (left: 2.5 10 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 4 = 10 (left: 4 10 10) -> 10 / 4 = 2.5 (left: 2.5 10 10) -> 2.5 + 10 = 12.5 (left: 10 12.5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 4 = 10 (left: 4 10 10) -> 10 / 4 = 2.5 (left: 2.5 10 10) -> 2.5 + 10 = 12.5 (left: 10 12.5) -> 10 - 12.5 = -2.5 (left: -2.5)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "4 4 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "4 4 10"
                }
            },
            "Step 4": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 4 * 4 = 16 (left: 16 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 4 * 4 = 16 (left: 16 10) -> 16 * 10 = 160 (left: 160)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 4 * 4 = 16 (left: 16 10) -> 16 * 10 = 160 (left: 160) -> No possible next steps since there is only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "9 + 3 = 12 (left:"
                }
            },
            "Step 7": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 10 - 6 = 4 (left: 4 10) -> 9 / 3 = 3 (left: 3 9 27 -> 9 + 3 = 12 (left: -> 9 - 3 = 6 (left: 6 9 12)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 10 - 6 = 4 (left: 4 10) -> 9 / 3 = 3 (left: 3 9 27 -> 9 + 3 = 12 (left: -> 9 - 3 = 6 (left: 6 9 12) -> 6 + 9 = 15 (left: 15 12)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "10 / 4 = 2.5 (left: 4 6 2.5)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 4 10"
                }
            },
            "Step 1": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 4 + 6 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 4 + 6 = 10 (left: 10) -> 10 / 2 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "4 4 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "4 4 10"
                }
            },
            "Step 4": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 4 + 4 = 8 (left: 8 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 4 + 4 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 4 + 4 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "9 + 3 = 12 (left:"
                }
            },
            "Step 7": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 10 - 6 = 4 (left: 4 10) -> 9 / 3 = 3 (left: 3 9 27 -> 9 + 3 = 12 (left: -> 9 * 3 = 27 (left: 27)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "9 + 3 = 12 (left:"
                }
            },
            "Step 8": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 10 - 6 = 4 (left: 4 10) -> 9 / 3 = 3 (left: 3 9 27 -> 9 + 3 = 12 (left: -> 27 / 9 = 3 (left: 12 3)",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 4 6 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 10 10"
                }
            },
            "Step 1": {
                "Step": "6 + 4 = 10 (left: 4 10 10) -> 4 + 10 = 14 (left: 10 10 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 4 = 10 (left: 4 10 10) -> 4 + 10 = 14 (left: 10 10 14) -> 10 - 10 = 0 (left: 0 14)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 4 = 10 (left: 4 10 10) -> 4 + 10 = 14 (left: 10 10 14) -> 10 - 10 = 0 (left: 0 14) -> 14 - 0 = 14 (left: 0)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "4 4 10"
                },
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "9 + 3 = 12 (left:"
                }
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 10 - 6 = 4 (left: 4 10) -> 9 / 3 = 3 (left: 3 9 27 -> 9 + 3 = 12 (left: -> 15 / 3 = 5 (left: 5 9 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 10 - 6 = 4 (left: 4 10) -> 9 / 3 = 3 (left: 3 9 27 -> 9 + 3 = 12 (left: -> 15 / 3 = 5 (left: 5 9 12) -> 12 / 5 = 2.4 (left: 5 2.4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 10 - 6 = 4 (left: 4 10) -> 9 / 3 = 3 (left: 3 9 27 -> 9 + 3 = 12 (left: -> 15 / 3 = 5 (left: 5 9 12) -> 12 / 5 = 2.4 (left: 5 2.4) -> 5 / 2.4 = 2.0833333333333335 (left: 2.0833333333333335)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "9 + 3 = 12 (left:"
                },
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "9 + 3 = 12 (left:"
                }
            },
            "Step 7": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 10 - 6 = 4 (left: 4 10) -> 9 / 3 = 3 (left: 3 9 27 -> 9 + 3 = 12 (left: -> 9 / 3 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "9 + 3 = 12 (left:"
                }
            },
            "Step 8": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 10 - 6 = 4 (left: 4 10) -> 9 / 3 = 3 (left: 3 9 27 -> 9 + 3 = 12 (left: -> 12 * 3 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "9 + 3 = 12 (left:"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 + 4 = 10 (left: 4 10 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 4 10"
                }
            },
            "Step 1": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (10 - 6) * (4 * 4) = 24",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "4 4 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "4 4 10"
                }
            },
            "Step 4": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 * 4 = 40 (left: 40)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 * 4 = 40 (left: 40) -> There are no possible next steps with the input 40.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 * 4 = 40 (left: 40) -> There are no possible next steps with the input 40. -> There are no possible next steps with the input 40.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "9 + 3 = 12 (left:"
                }
            },
            "Step 7": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 10 - 6 = 4 (left: 4 10) -> 9 / 3 = 3 (left: 3 9 27 -> 9 + 3 = 12 (left: -> 9 * 3 = 27 (left: 27)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "9 + 3 = 12 (left:"
                }
            },
            "Step 8": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 10 - 6 = 4 (left: 4 10) -> 9 / 3 = 3 (left: 3 9 27 -> 9 + 3 = 12 (left: -> 12 - 9 = 3 (left: 3 3)",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 6 10 16)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 4 10"
                }
            },
            "Step 1": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 / 4 = 2 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 / 4 = 2 (left: -> 10 - 4 = 6 (left: 6 14)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 / 4 = 2 (left: -> 10 - 4 = 6 (left: 6 14) -> 14 - 6 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "6 8 10"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "4 4 10"
                }
            },
            "Step 4": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> Input: 3 5 7",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> Input: 3 5 7 -> 7 - 3 = ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> Input: 3 5 7 -> 7 - 3 =  -> 7 - 3 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "9 + 3 = 12 (left:"
                }
            },
            "Step 7": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 10 - 6 = 4 (left: 4 10) -> 9 / 3 = 3 (left: 3 9 27 -> 9 + 3 = 12 (left: -> 12 / 3 = 4 (left: 3 4 3)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 10 - 6 = 4 (left: 4 10) -> 9 / 3 = 3 (left: 3 9 27 -> 9 + 3 = 12 (left: -> 12 / 3 = 4 (left: 3 4 3) -> 3 + 4 = 7 (left: 3 7 3)",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 6 16 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 4 10"
                }
            },
            "Step 1": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 4 + 6 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 4 + 6 = 10 (left: 10) -> 10 / 2 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "4 10 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "4 4 10"
                }
            },
            "Step 4": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 4 * 4 = 16 (left: 16 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 4 * 4 = 16 (left: 16 10) -> 16 * 10 = 160 (left: 160)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 4 * 4 = 16 (left: 16 10) -> 16 * 10 = 160 (left: 160) -> There are no possible next steps for the number 160.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "9 + 3 = 12 (left:"
                }
            },
            "Step 7": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 10 - 6 = 4 (left: 4 10) -> 9 / 3 = 3 (left: 3 9 27 -> 9 + 3 = 12 (left: -> 9 / 3 = 3 (left: 3 9)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 10 - 6 = 4 (left: 4 10) -> 9 / 3 = 3 (left: 3 9 27 -> 9 + 3 = 12 (left: -> 9 / 3 = 3 (left: 3 9) -> 3 + 9 = 12 (left: 9 12)",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "4 * 6 = 24 (left: 4 10 24)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "10 - 4 = 6 (left: 4 6  -> 5 * 7 = 35 (left: 35)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 4 6  -> 5 * 7 = 35 (left: 35) -> 35 + 2 = 37",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 4 6  -> 5 * 7 = 35 (left: 35) -> 35 + 2 = 37 -> 35 / 2 = 17.5 (left: 17.5 37)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "4 4 10"
                }
            },
            "Step 4": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 3 + 9 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 3 + 9 = 12 (left: 12) -> 12 - 3 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "9 + 3 = 12 (left:"
                },
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "9 + 3 = 12 (left:"
                }
            },
            "Step 7": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 10 - 6 = 4 (left: 4 10) -> 9 / 3 = 3 (left: 3 9 27 -> 9 + 3 = 12 (left: -> 3 - 9 = -6 (left: -6 12)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 10 - 6 = 4 (left: 4 10) -> 9 / 3 = 3 (left: 3 9 27 -> 9 + 3 = 12 (left: -> 3 - 9 = -6 (left: -6 12) -> -6 + 12 = 6 (left: 6) ",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "No possible next steps since there is only one number provided."
                }
            }
        },
        "Input": "4 4 6 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1070": {
        "puzzle": "4 6 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 9 10 13)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 4"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2) -> 2 + 2 = 4",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2) -> 2 + 2 = 4 -> 2 - 2 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "4 6 9"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "4 6 4"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2 4)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2 4) -> 4 - 2 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2 4) -> 4 - 2 = 2 (left: 2) -> 2 + 2 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "3 27"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> Input: 3 9 27 -> 27 / 3 = 9 (left: 9 27) -> 27 / 9 = 3 (left: 3 27) -> 27 - 3 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "3 27"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> Input: 3 9 27 -> 27 / 3 = 9 (left: 9 27) -> 27 / 9 = 3 (left: 3 27) -> 3 * 27 = 81 (left: 81)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "3 27"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 6 = 24 (left: 9 13 24)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 6 9 13"
                }
            },
            "Step 1": {
                "Step": "6 / 4 = 1.5 (left: 1.5 9 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 4 = 1.5 (left: 1.5 9 13) -> 9 / 1.5 = 6 (left: 6 13",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 / 4 = 1.5 (left: 1.5 9 13) -> 9 / 1.5 = 6 (left: 6 13 -> 6 * 13 = 78 (left: 78)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "4 6 4"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 / 4 = 1.5 (left: 1.5 4)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 / 4 = 1.5 (left: 1.5 4) -> 1.5 + 4 = 5.5 (left: 5.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 / 4 = 1.5 (left: 1.5 4) -> 1.5 + 4 = 5.5 (left: 5.5) -> 5.5 / 8 = 0.6875 (left: 0.6875)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "78"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "8 9 12"
                }
            },
            "Step 7": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 6 - 4 = 2 (left: 2 9) -> 2 + 9 = 11 (left: 11) -> 11 - 2 = 9 (left: 8 9 12) -> 8 + 9 = 17 (left: 12 17)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 6 - 4 = 2 (left: 2 9) -> 2 + 9 = 11 (left: 11) -> 11 - 2 = 9 (left: 8 9 12) -> 8 + 9 = 17 (left: 12 17) -> 12 * 17 = 204 (left: 204)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "3 27"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 4 6 4)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 4"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 / 4 = 1.5 (left: 1.5 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 / 4 = 1.5 (left: 1.5 4) -> 4 / 1.5 = 2.66666666667 (left: 2.66666666667)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 / 4 = 1.5 (left: 1.5 4) -> 4 / 1.5 = 2.66666666667 (left: 2.66666666667) -> There are no possible next steps with the input of 2.66666666667 as it is a single number without any other numbers to perform operations on.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "4 6 4"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> Input: 3 9 27",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> Input: 3 9 27 -> 27 / 3 = 9 (left: 9 27)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> Input: 3 9 27 -> 27 / 3 = 9 (left: 9 27) -> 27 / 9 = 3 (left: 3 27)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "3 27"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> Input: 3 9 27 -> 27 / 3 = 9 (left: 9 27) -> 27 / 9 = 3 (left: 3 27) -> 27 / 3 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "3 27"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> Input: 3 9 27 -> 27 / 3 = 9 (left: 9 27) -> 27 / 9 = 3 (left: 3 27) -> 27 - 3 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "3 27"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 9 10 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> Input:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> Input: -> There is no input provided. Please provide an input sequence to generate possible next steps.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> Input: -> There is no input provided. Please provide an input sequence to generate possible next steps. -> There is no input provided. Please provide an input sequence to generate possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "4 6 4"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 / 4 = 1.5 (left: 1.5 4)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 / 4 = 1.5 (left: 1.5 4) -> 4 - 1.5 = 2.5 (left: 2.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 / 4 = 1.5 (left: 1.5 4) -> 4 - 1.5 = 2.5 (left: 2.5) -> 2.5 + 8 = 10.5 (left: 10.5)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "78"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "3 27"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> Input: 3 9 27 -> 27 / 3 = 9 (left: 9 27) -> 27 / 9 = 3 (left: 3 27) -> 3 * 27 = 81 (left: 81)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "3 27"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> Input: 3 9 27 -> 27 / 3 = 9 (left: 9 27) -> 27 / 9 = 3 (left: 3 27) -> 27 - 3 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "3 27"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 4 15 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 6 + 9 = 15 (left: 4 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 6 + 9 = 15 (left: 4 15) -> 15 / 4 = 3.75 (left: 3.75)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 6 + 9 = 15 (left: 4 15) -> 15 / 4 = 3.75 (left: 3.75) -> There are no possible next steps for the input 3.75.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "4 6 4"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 4 + 6 = 10 (left: 4 10 4)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 4 + 6 = 10 (left: 4 10 4) -> 4 * 10 = 40 (left: 4 40)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 4 + 6 = 10 (left: 4 10 4) -> 4 * 10 = 40 (left: 4 40) -> 40 - 36 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "8 15"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "3 27"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> Input: 3 9 27 -> 27 / 3 = 9 (left: 9 27) -> 27 / 9 = 3 (left: 3 27) -> 3 * 27 = 81 (left: 81)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "3 27"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> Input: 3 9 27 -> 27 / 3 = 9 (left: 9 27) -> 27 / 9 = 3 (left: 3 27) -> 3 + 27 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "3 27"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: 3 6 13)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 6 - 4 = 2 (left: 2 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 6 - 4 = 2 (left: 2 9) -> 9 - 2 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 6 - 4 = 2 (left: 2 9) -> 9 - 2 = 7 (left: 7) -> 7 + 8 = 15 (left: 8 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "4 6 4"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 / 4 = 1.5 (left: 1.5 4)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 / 4 = 1.5 (left: 1.5 4) -> 4 - 1.5 = 2.5 (left: 2.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 / 4 = 1.5 (left: 1.5 4) -> 4 - 1.5 = 2.5 (left: 2.5) -> Input: 10 5 3 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "3 27"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> Input: 3 9 27 -> 27 / 3 = 9 (left: 9 27) -> 27 / 9 = 3 (left: 3 27) -> 3 * 27 = 81 (left: 81)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "3 27"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> Input: 3 9 27 -> 27 / 3 = 9 (left: 9 27) -> 27 / 9 = 3 (left: 3 27) -> 27 - 3 = 24 (left: 3 24)",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "9 - 4 = 5 (left: 5 6 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 9 - 4 = 5 (left: 5 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 9 - 4 = 5 (left: 5 6) -> 5 * 6 = 30 (left: 30)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 9 - 4 = 5 (left: 5 6) -> 5 * 6 = 30 (left: 30) -> 30 - 2 = 28 (left: 28)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "4 6 9"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 9 - 4 = 5 (left: 5 6)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 9 - 4 = 5 (left: 5 6) -> 5 + 6 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 9 - 4 = 5 (left: 5 6) -> 5 + 6 = 11 (left: 11) -> 11 - 2 = 9 (left: 2 9)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "8 9 12"
                }
            },
            "Step 7": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 6 - 4 = 2 (left: 2 9) -> 2 + 9 = 11 (left: 11) -> 11 - 2 = 9 (left: 8 9 12) -> 12 - 8 = 4 (left: 9 4)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 6 - 4 = 2 (left: 2 9) -> 2 + 9 = 11 (left: 11) -> 11 - 2 = 9 (left: 8 9 12) -> 12 - 8 = 4 (left: 9 4) -> 9 + 4 = 13 (left: 13)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "3 27"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "13 - 4 = 9 (left: 4 6 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 4"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 4 / 6 = 0.666666",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 4 / 6 = 0.666666 -> 4 + 6 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 4 / 6 = 0.666666 -> 4 + 6 = 10 (left: 10) -> 10 / 2 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "4 6 4"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 6 - 4 = ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 6 - 4 =  -> 6 - 4 = 2",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 6 - 4 =  -> 6 - 4 = 2 -> 6 - 2 = 4 (left: 4 =)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "3 27"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> Input: 3 9 27 -> 27 / 3 = 9 (left: 9 27) -> 27 / 9 = 3 (left: 3 27) -> 3 + 27 = 30 (left: 9 30)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> Input: 3 9 27 -> 27 / 3 = 9 (left: 9 27) -> 27 / 9 = 3 (left: 3 27) -> 3 + 27 = 30 (left: 9 30) -> 9 * 30 = 270 (left: 270)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "3 27"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "4 * 6 = 24 (left: 9 13 24)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "9 13 24"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 9 13 24) -> 13 - 9 = 4 (left: 4 13 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 9 13 24) -> 13 - 9 = 4 (left: 4 13 24) -> 13 / 4 = 3.25 (left: 3.25 24)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 9 13 24) -> 13 - 9 = 4 (left: 4 13 24) -> 13 / 4 = 3.25 (left: 3.25 24) -> 3.25 * 24 = 78 (left: 78)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "4 6 4"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "4 6 4"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> Input: 3 5 7 2",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> Input: 3 5 7 2 -> 7 - 3 = 4 (left: 4 5 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> Input: 3 5 7 2 -> 7 - 3 = 4 (left: 4 5 2) -> Input: 6 3 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "3 27"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> Input: 3 9 27 -> 27 / 3 = 9 (left: 9 27) -> 27 / 9 = 3 (left: 3 27) -> Input: 4 16 64",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> Input: 3 9 27 -> 27 / 3 = 9 (left: 9 27) -> 27 / 9 = 3 (left: 3 27) -> Input: 4 16 64 -> 64 - 16 = 48 (left: 4 48)",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "13 - 4 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 6 - 4 = 2 (left: 2 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 6 - 4 = 2 (left: 2 9) -> 9 / 2 = 4.5 (left: 4.5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 6 - 4 = 2 (left: 2 9) -> 9 / 2 = 4.5 (left: 4.5) -> There are no possible next steps with the input 4.5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 6 - 4 = 2 (left: 2 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 6 - 4 = 2 (left: 2 9) -> 2 + 9 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 6 - 4 = 2 (left: 2 9) -> 2 + 9 = 11 (left: 11) -> 11 - 2 = 9 (left: 8 9 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "8 9 12"
                }
            },
            "Step 7": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 6 - 4 = 2 (left: 2 9) -> 2 + 9 = 11 (left: 11) -> 11 - 2 = 9 (left: 8 9 12) -> 12 - 8 = 4 (left: 4 12)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 6 - 4 = 2 (left: 2 9) -> 2 + 9 = 11 (left: 11) -> 11 - 2 = 9 (left: 8 9 12) -> 12 - 8 = 4 (left: 4 12) -> 16 / 8 = 2 (left: 2 48 3",
                "Pruning": null
            }
        },
        "Input": "4 6 9 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1071": {
        "puzzle": "3 5 6 11",
        "Agent 0": {
            "Step 0": {
                "Step": "11 - 5 = 6 (left: 3 6 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 6 11"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 6 11 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 6 11 15) -> 6 + 11 = 17 (left: 15 17)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 6 11 15) -> 6 + 11 = 17 (left: 15 17) -> 15 + 17 = 32 (left: 32)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 6 11"
                }
            },
            "Step 4": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 3 + 6 = 9 (left: 9 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 3 + 6 = 9 (left: 9 11) -> 9 / 11 = 0.818181818 (left: 0.818181818)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 3 + 6 = 9 (left: 9 11) -> 9 / 11 = 0.818181818 (left: 0.818181818) -> 0.818181818 - 0.818181818 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "59"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "8 48"
                }
            },
            "Step 7": {
                "Step": "5 * 6 = 30 (left: 3 11 30) -> 30 - 11 = 19 (left: 3 19) -> 19 / 3 = 6 (left: 6) -> 6 * 8 = 48 (left: 8 48) -> 48 / 8 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "8 48"
                }
            },
            "Step 8": {
                "Step": "5 * 6 = 30 (left: 3 11 30) -> 30 - 11 = 19 (left: 3 19) -> 19 / 3 = 6 (left: 6) -> 6 * 8 = 48 (left: 8 48) -> 8 * 6 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "8 48"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 * 6 = 30 (left: 3 30)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 11 11"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 3 11 11) -> 11 / 3 = 3.67 (left: 3.67 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 3 11 11) -> 11 / 3 = 3.67 (left: 3.67 11) -> 11 / 3.67 = 2.99 (left: 2.99)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 3 11 11) -> 11 / 3 = 3.67 (left: 3.67 11) -> 11 / 3.67 = 2.99 (left: 2.99) -> No next steps as there are not enough numbers to perform any operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "3 11 30"
                }
            },
            "Step 4": {
                "Step": "5 * 6 = 30 (left: 3 11 30) -> 30 - 11 = 19 (left: 3 19)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 6 = 30 (left: 3 11 30) -> 30 - 11 = 19 (left: 3 19) -> 19 / 3 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 6 = 30 (left: 3 11 30) -> 30 - 11 = 19 (left: 3 19) -> 19 / 3 = 6 (left: 6) -> 6 * 8 = 48 (left: 8 48)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "8 48"
                }
            },
            "Step 7": {
                "Step": "5 * 6 = 30 (left: 3 11 30) -> 30 - 11 = 19 (left: 3 19) -> 19 / 3 = 6 (left: 6) -> 6 * 8 = 48 (left: 8 48) -> Input: 48",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 * 6 = 30 (left: 3 11 30) -> 30 - 11 = 19 (left: 3 19) -> 19 / 3 = 6 (left: 6) -> 6 * 8 = 48 (left: 8 48) -> Input: 48 -> No next steps possible with just one number given.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 3 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 11 11"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 3 11 11) -> 11 - 3 = 8 (left: 8 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 3 11 11) -> 11 - 3 = 8 (left: 8 11) -> 8 / 11 = 0.7272727272727273 (left: 0.7272727272727273)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 3 11 11) -> 11 - 3 = 8 (left: 8 11) -> 8 / 11 = 0.7272727272727273 (left: 0.7272727272727273) -> 0.7272727272727273 / 2 = 0.36363636363636365",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 6 11"
                }
            },
            "Step 4": {
                "Step": "3 + 5 = 8 (left: 6 8 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 + 5 = 8 (left: 6 8 11) -> 8 * 11 = 88 (left: 6 88)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 5 = 8 (left: 6 8 11) -> 8 * 11 = 88 (left: 6 88) -> 6 + 88 = 94 (left: 94)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "8 48"
                }
            },
            "Step 7": {
                "Step": "5 * 6 = 30 (left: 3 11 30) -> 30 - 11 = 19 (left: 3 19) -> 19 / 3 = 6 (left: 6) -> 6 * 8 = 48 (left: 8 48) -> 48 / 8 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "8 48"
                }
            },
            "Step 8": {
                "Step": "5 * 6 = 30 (left: 3 11 30) -> 30 - 11 = 19 (left: 3 19) -> 19 / 3 = 6 (left: 6) -> 6 * 8 = 48 (left: 8 48) -> 48 / 8 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "8 48"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "11 - 5 = 6 (left: 3 6 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 11 15"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 6 11 15) -> 6 + 11 = 17 (left: 15 17)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 6 11 15) -> 6 + 11 = 17 (left: 15 17) -> 15 * 17 = 255 (left: 255)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 6 11 15) -> 6 + 11 = 17 (left: 15 17) -> 15 * 17 = 255 (left: 255) -> 255 / 8 = 31.875 (left: 8)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "3 6 11"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "3 11 30"
                }
            },
            "Step 4": {
                "Step": "5 * 6 = 30 (left: 3 11 30) -> 30 - 3 = 27 (left: 11 27)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 6 = 30 (left: 3 11 30) -> 30 - 3 = 27 (left: 11 27) -> 11 + 27 = 38 (left: 38)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 6 = 30 (left: 3 11 30) -> 30 - 3 = 27 (left: 11 27) -> 11 + 27 = 38 (left: 38) -> 38 - 2 = 36 (left: 2 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "8 48"
                }
            },
            "Step 7": {
                "Step": "5 * 6 = 30 (left: 3 11 30) -> 30 - 11 = 19 (left: 3 19) -> 19 / 3 = 6 (left: 6) -> 6 * 8 = 48 (left: 8 48) -> 48 / 8 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "8 48"
                }
            },
            "Step 8": {
                "Step": "5 * 6 = 30 (left: 3 11 30) -> 30 - 11 = 19 (left: 3 19) -> 19 / 3 = 6 (left: 6) -> 6 * 8 = 48 (left: 8 48) -> 48 - 8 = 40 (left: 8 40)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 - 3 = 3 (left: 3 5 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 6 11"
                }
            },
            "Step 1": {
                "Step": "3 + 5 = 8 (left: 6 8 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 5 = 8 (left: 6 8 11) -> 8 + 6 = 14 (left: 11 14)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 + 5 = 8 (left: 6 8 11) -> 8 + 6 = 14 (left: 11 14) -> 11 * 14 = 154 (left: 154)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "3 11 30"
                }
            },
            "Step 4": {
                "Step": "5 * 6 = 30 (left: 3 11 30) -> 30 - 11 = 19 (left: 3 19)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 6 = 30 (left: 3 11 30) -> 30 - 11 = 19 (left: 3 19) -> 3 * 19 = 57 (left: 57)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 6 = 30 (left: 3 11 30) -> 30 - 11 = 19 (left: 3 19) -> 3 * 19 = 57 (left: 57) -> None (invalid input)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "8 48"
                }
            },
            "Step 7": {
                "Step": "5 * 6 = 30 (left: 3 11 30) -> 30 - 11 = 19 (left: 3 19) -> 19 / 3 = 6 (left: 6) -> 6 * 8 = 48 (left: 8 48) -> 48 - 40 = 8 (left: 8 8)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 * 6 = 30 (left: 3 11 30) -> 30 - 11 = 19 (left: 3 19) -> 19 / 3 = 6 (left: 6) -> 6 * 8 = 48 (left: 8 48) -> 48 - 40 = 8 (left: 8 8) -> 8 * 8 = 64 (left: 64)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "8 48"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 3 11 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 6 11"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 6 11 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 6 11 15) -> 11 - 6 = 5 (left: 5 15)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 6 11 15) -> 11 - 6 = 5 (left: 5 15) -> 5 + 15 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "3 11 30"
                }
            },
            "Step 4": {
                "Step": "5 * 6 = 30 (left: 3 11 30) -> 11 - 3 = 8 (left: 8 30)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 6 = 30 (left: 3 11 30) -> 11 - 3 = 8 (left: 8 30) -> 8 + 30 = 38 (left: 38)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 6 = 30 (left: 3 11 30) -> 11 - 3 = 8 (left: 8 30) -> 8 + 30 = 38 (left: 38) -> 38 * 3 = 114 (left: 114)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "No next steps as there are not enough numbers to perform any operations."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "8 48"
                }
            },
            "Step 7": {
                "Step": "5 * 6 = 30 (left: 3 11 30) -> 30 - 11 = 19 (left: 3 19) -> 19 / 3 = 6 (left: 6) -> 6 * 8 = 48 (left: 8 48) -> 48 - 8 = 40 (left: 40)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "8 48"
                }
            },
            "Step 8": {
                "Step": "5 * 6 = 30 (left: 3 11 30) -> 30 - 11 = 19 (left: 3 19) -> 19 / 3 = 6 (left: 6) -> 6 * 8 = 48 (left: 8 48) -> 8 + 40 = 48 (left: 40)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "8 48"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "11 - 5 = 6 (left: 3 6 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 11 15"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 6 11 15) -> 6 * 11 = 66 (left: 15 66)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 6 11 15) -> 6 * 11 = 66 (left: 15 66) -> 15 * 66 = 990 (left: 990)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 6 11 15) -> 6 * 11 = 66 (left: 15 66) -> 15 * 66 = 990 (left: 990) -> 9 * 9 * 0 = 0 (left: 81 0)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "3 11 30"
                }
            },
            "Step 4": {
                "Step": "5 * 6 = 30 (left: 3 11 30) -> 30 / 3 = 10 (left: 10 30)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 6 = 30 (left: 3 11 30) -> 30 / 3 = 10 (left: 10 30) -> 10 / 30 = 0.3333333333333333 (left: 0.3333333333333333)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 6 = 30 (left: 3 11 30) -> 30 / 3 = 10 (left: 10 30) -> 10 / 30 = 0.3333333333333333 (left: 0.3333333333333333) -> 0.3333333333333333 * 0.3333333333333333 = 0.1111111111111111",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "8 48"
                }
            },
            "Step 7": {
                "Step": "5 * 6 = 30 (left: 3 11 30) -> 30 - 11 = 19 (left: 3 19) -> 19 / 3 = 6 (left: 6) -> 6 * 8 = 48 (left: 8 48) -> 8 * 6 = 48 (left: 6)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "8 48"
                }
            },
            "Step 8": {
                "Step": "5 * 6 = 30 (left: 3 11 30) -> 30 - 11 = 19 (left: 3 19) -> 19 / 3 = 6 (left: 6) -> 6 * 8 = 48 (left: 8 48) -> 8 * 6 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "8 48"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "5 * 6 = 30 (left: 3 11 30)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 6 11"
                }
            },
            "Step 1": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 6 / 3 = 2 (left: 2 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 6 / 3 = 2 (left: 2 11) -> 11 / 2 = 5.5 (left: 5.5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 6 / 3 = 2 (left: 2 11) -> 11 / 2 = 5.5 (left: 5.5) -> 5.5 + 8 = 13.5 (left: 13.5)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "3 11 30"
                },
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "3 11 30"
                }
            },
            "Step 4": {
                "Step": "5 * 6 = 30 (left: 3 11 30) -> 3 + 11 = 14 (left: 14 30)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 6 = 30 (left: 3 11 30) -> 3 + 11 = 14 (left: 14 30) -> 14 - 30 = -16 (left: -16)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 6 = 30 (left: 3 11 30) -> 3 + 11 = 14 (left: 14 30) -> 14 - 30 = -16 (left: -16) -> -16 - 2 = -18 (left: -18)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "154"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "8 48"
                }
            },
            "Step 7": {
                "Step": "5 * 6 = 30 (left: 3 11 30) -> 30 - 11 = 19 (left: 3 19) -> 19 / 3 = 6 (left: 6) -> 6 * 8 = 48 (left: 8 48) -> 8 * 6 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "8 48"
                }
            },
            "Step 8": {
                "Step": "5 * 6 = 30 (left: 3 11 30) -> 30 - 11 = 19 (left: 3 19) -> 19 / 3 = 6 (left: 6) -> 6 * 8 = 48 (left: 8 48) -> 8 + 40 = 48 (left: 8 48)",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "3 * 5 = 15 (left: 6 11 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 6 11"
                }
            },
            "Step 1": {
                "Step": "3 + 5 = 8 (left: 6 8 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 5 = 8 (left: 6 8 11) -> 6 * 8 = 48 (left: 48 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 + 5 = 8 (left: 6 8 11) -> 6 * 8 = 48 (left: 48 11) -> 48 + 11 = 59 (left: 59)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "3 11 30"
                }
            },
            "Step 4": {
                "Step": "5 * 6 = 30 (left: 3 11 30) -> 30 - 3 = 27 (left: 11 27)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 6 = 30 (left: 3 11 30) -> 30 - 3 = 27 (left: 11 27) -> 27 - 11 = 16 (left: 16)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 6 = 30 (left: 3 11 30) -> 30 - 3 = 27 (left: 11 27) -> 27 - 11 = 16 (left: 16) -> There are no possible next steps with just the number 16 as input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "8 48"
                }
            },
            "Step 7": {
                "Step": "5 * 6 = 30 (left: 3 11 30) -> 30 - 11 = 19 (left: 3 19) -> 19 / 3 = 6 (left: 6) -> 6 * 8 = 48 (left: 8 48) -> 8 * 6 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "8 48"
                }
            },
            "Step 8": {
                "Step": "5 * 6 = 30 (left: 3 11 30) -> 30 - 11 = 19 (left: 3 19) -> 19 / 3 = 6 (left: 6) -> 6 * 8 = 48 (left: 8 48) -> 8 + 40 = 48 (left: 40)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "8 48"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 3 11 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 11 15"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 6 11 15) -> 11 - 6 = 5 (left: 5 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 6 11 15) -> 11 - 6 = 5 (left: 5 15) -> Possible next steps:",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 6 11 15) -> 11 - 6 = 5 (left: 5 15) -> Possible next steps: -> There are no possible next steps for this input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "3 11 30"
                }
            },
            "Step 4": {
                "Step": "5 * 6 = 30 (left: 3 11 30) -> 3 + 11 = 14 (left: 14 30)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 6 = 30 (left: 3 11 30) -> 3 + 11 = 14 (left: 14 30) -> 30 - 14 = 16 (left: 16)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 6 = 30 (left: 3 11 30) -> 3 + 11 = 14 (left: 14 30) -> 30 - 14 = 16 (left: 16) -> There are no possible next steps for the number 16.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "8 48"
                }
            },
            "Step 7": {
                "Step": "5 * 6 = 30 (left: 3 11 30) -> 30 - 11 = 19 (left: 3 19) -> 19 / 3 = 6 (left: 6) -> 6 * 8 = 48 (left: 8 48) -> 8 * 6 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "8 48"
                }
            },
            "Step 8": {
                "Step": "5 * 6 = 30 (left: 3 11 30) -> 30 - 11 = 19 (left: 3 19) -> 19 / 3 = 6 (left: 6) -> 6 * 8 = 48 (left: 8 48) -> 48 - 8 = 40 (left: 40)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "8 48"
                }
            }
        },
        "Input": "3 5 6 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1072": {
        "puzzle": "1 5 8 13",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 5 = 6 (left: 6 8 13)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "1 5 5"
                }
            },
            "Step 1": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 - 1 = 4 (left: 4 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 - 1 = 4 (left: 4 5) -> 4 * 5 = 20 (left: 20)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 - 1 = 4 (left: 4 5) -> 4 * 5 = 20 (left: 20) -> There are no possible next steps with the input of 20.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "1 5 5"
                }
            },
            "Step 4": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 1 * 5 = 5 (left: 5 5)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 1 * 5 = 5 (left: 5 5) -> 5 * 5 = 25 (left: 25)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 1 * 5 = 5 (left: 5 5) -> 5 * 5 = 25 (left: 25) -> 25 / 2 = 12.5 (left: 2)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "2 53"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "2 53"
                }
            },
            "Step 7": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 / 13 = 3 (left: -> 40 + 13 = 53 (left: 53) -> 53 - 2 = 51 (left: 2 53)  -> 53 / 2 = 26.5 (left: 26.5)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "2 53"
                }
            },
            "Step 8": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 / 13 = 3 (left: -> 40 + 13 = 53 (left: 53) -> 53 - 2 = 51 (left: 2 53)  -> 2 + 53 = 55 (left: 55)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "2 53"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 - 5 = 3 (left: 1 3 13)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "1 5 5"
                }
            },
            "Step 1": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 * 1 = 5 (left: 5 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 * 1 = 5 (left: 5 5) -> 5 * 5 = 25 (left: 25)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 * 1 = 5 (left: 5 5) -> 5 * 5 = 25 (left: 25) -> 25 + 25 = 50",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "2 53"
                }
            },
            "Step 4": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 / 13 = 3 (left: -> 40 + 13 = 53 (left: 53) -> 53 - 2 = 51 (left: 2 53)  -> 2 + 53 = 55 (left: 55)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "2 53"
                }
            },
            "Step 5": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 / 13 = 3 (left: -> 40 + 13 = 53 (left: 53) -> 53 - 2 = 51 (left: 2 53)  -> 2 + 53 = 55 (left: 55)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "2 53"
                }
            },
            "Step 6": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 / 13 = 3 (left: -> 40 + 13 = 53 (left: 53) -> 53 - 2 = 51 (left: 2 53)  -> 20",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "2 53"
                },
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "2 53"
                }
            },
            "Step 7": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 / 13 = 3 (left: -> 40 + 13 = 53 (left: 53) -> 53 - 2 = 51 (left: 2 53)  -> 53 - 2 = 51 (left: 51)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "2 53"
                }
            },
            "Step 8": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 / 13 = 3 (left: -> 40 + 13 = 53 (left: 53) -> 53 - 2 = 51 (left: 2 53)  -> 7 - 5 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "2 53"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 + 5 = 6 (left: 6 8 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "1 5 5"
                }
            },
            "Step 1": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 / 1 = 5 (left: 5 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 / 1 = 5 (left: 5 5) -> 5 * 5 = 25 (left: 25)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 / 1 = 5 (left: 5 5) -> 5 * 5 = 25 (left: 25) -> There are no possible next steps for the input 25 as there are no other numbers provided to perform operations with.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "2 53"
                }
            },
            "Step 4": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 / 13 = 3 (left: -> 40 + 13 = 53 (left: 53) -> 53 - 2 = 51 (left: 2 53)  -> 9 / 3 = 3 (left: 3 27)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 / 13 = 3 (left: -> 40 + 13 = 53 (left: 53) -> 53 - 2 = 51 (left: 2 53)  -> 9 / 3 = 3 (left: 3 27) -> 3 * 27 = 81 (left: 81)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "2 53"
                }
            },
            "Step 6": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 / 13 = 3 (left: -> 40 + 13 = 53 (left: 53) -> 53 - 2 = 51 (left: 2 53)  -> 3",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "2 53"
                },
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "2 53"
                }
            },
            "Step 7": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 / 13 = 3 (left: -> 40 + 13 = 53 (left: 53) -> 53 - 2 = 51 (left: 2 53)  -> 2 * 53 = 106 (left: 106)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "2 53"
                }
            },
            "Step 8": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 / 13 = 3 (left: -> 40 + 13 = 53 (left: 53) -> 53 - 2 = 51 (left: 2 53)  -> 53 / 2 = 26.5 (left: 26.5)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "2 53"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 * 8 = 40 (left: 1 40 13)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 8 13"
                }
            },
            "Step 1": {
                "Step": "13 - 1 = 12 (left: 5 8 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 1 = 12 (left: 5 8 12) -> 8 - 5 = 3 (left: 3 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 1 = 12 (left: 5 8 12) -> 8 - 5 = 3 (left: 3 12) -> 3 + 12 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "2 53"
                }
            },
            "Step 4": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 / 13 = 3 (left: -> 40 + 13 = 53 (left: 53) -> 53 - 2 = 51 (left: 2 53)  -> 2 * 53 = 106 (left: 106)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "2 53"
                }
            },
            "Step 5": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 / 13 = 3 (left: -> 40 + 13 = 53 (left: 53) -> 53 - 2 = 51 (left: 2 53)  -> 2 + 53 = 55 (left: 55)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "2 53"
                }
            },
            "Step 6": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 / 13 = 3 (left: -> 40 + 13 = 53 (left: 53) -> 53 - 2 = 51 (left: 2 53)  -> 3 + 9 = 12 (left: 12 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "2 53"
                }
            },
            "Step 7": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 / 13 = 3 (left: -> 40 + 13 = 53 (left: 53) -> 53 - 2 = 51 (left: 2 53)  -> 7 + 3 = 10 (left: 10 5)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 / 13 = 3 (left: -> 40 + 13 = 53 (left: 53) -> 53 - 2 = 51 (left: 2 53)  -> 7 + 3 = 10 (left: 10 5) -> 10 + 5 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "2 53"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "8 * 5 = 40 (left: 1 13 40)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 40 13"
                }
            },
            "Step 1": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 / 13 = 3 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 / 13 = 3 (left: -> 40 + 13 = 53 (left: 53)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 / 13 = 3 (left: -> 40 + 13 = 53 (left: 53) -> 53 - 2 = 51 (left: 2 53) ",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "2 53"
                }
            },
            "Step 4": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 / 13 = 3 (left: -> 40 + 13 = 53 (left: 53) -> 53 - 2 = 51 (left: 2 53)  -> 2 * 53 = 106 (left: 106)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "2 53"
                }
            },
            "Step 5": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 / 13 = 3 (left: -> 40 + 13 = 53 (left: 53) -> 53 - 2 = 51 (left: 2 53)  -> 2 * 53 = 106 (left: 106)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "1 40 13"
                }
            },
            "Step 6": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 1 * 40 = 40 (left: 40 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "2 53"
                }
            },
            "Step 7": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 / 13 = 3 (left: -> 40 + 13 = 53 (left: 53) -> 53 - 2 = 51 (left: 2 53)  -> 53 - 2 = 51 (left: 51) ",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "2 53"
                }
            },
            "Step 8": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 / 13 = 3 (left: -> 40 + 13 = 53 (left: 53) -> 53 - 2 = 51 (left: 2 53)  -> 2 * 53 = 106 (left: 106)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "2 53"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "13 - 5 = 8 (left: 1 8 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 40 13"
                }
            },
            "Step 1": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 / 1 = 40 (left: 40 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 / 1 = 40 (left: 40 13) -> 40 * 13 = 520 (left: 520)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 / 1 = 40 (left: 40 13) -> 40 * 13 = 520 (left: 520) -> Input: 7 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "2 53"
                }
            },
            "Step 4": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 / 13 = 3 (left: -> 40 + 13 = 53 (left: 53) -> 53 - 2 = 51 (left: 2 53)  -> 2 - 53 = -51 (left: -51)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "2 53"
                }
            },
            "Step 5": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 / 13 = 3 (left: -> 40 + 13 = 53 (left: 53) -> 53 - 2 = 51 (left: 2 53)  -> 53 / 2 = 26.5 (left: 26.5)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "1 40 13"
                }
            },
            "Step 6": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 1 * 40 = 40 (left: 40 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "2 53"
                }
            },
            "Step 7": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 / 13 = 3 (left: -> 40 + 13 = 53 (left: 53) -> 53 - 2 = 51 (left: 2 53)  -> 2 * 53 = 106 (left: 106)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "2 53"
                }
            },
            "Step 8": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 / 13 = 3 (left: -> 40 + 13 = 53 (left: 53) -> 53 - 2 = 51 (left: 2 53)  -> 7",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "2 53"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "1 * 5 = 5 (left: 5 8 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "1 5 5"
                }
            },
            "Step 1": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 - 1 = 4 (left: 4 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 - 1 = 4 (left: 4 5) -> 5 - 4 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 - 1 = 4 (left: 4 5) -> 5 - 4 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "1 5 5"
                }
            },
            "Step 4": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 / 1 = 5 (left: 5 5 5)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 / 1 = 5 (left: 5 5 5) -> 3 + 9 = 12 (left: 12 27)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 / 1 = 5 (left: 5 5 5) -> 3 + 9 = 12 (left: 12 27) -> 12 - 27 = -15 (left: -15)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "2 53"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "2 53"
                }
            },
            "Step 7": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 / 13 = 3 (left: -> 40 + 13 = 53 (left: 53) -> 53 - 2 = 51 (left: 2 53)  -> 53 - 2 = 51 (left: 51)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "2 53"
                }
            },
            "Step 8": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 / 13 = 3 (left: -> 40 + 13 = 53 (left: 53) -> 53 - 2 = 51 (left: 2 53)  -> 53 / 2 = 26.5 (left: 26.5)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "2 53"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "8 - 1 = 7 (left: 7 5 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "1 5 5"
                }
            },
            "Step 1": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 1 * 5 = 5 (left: 5 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 1 * 5 = 5 (left: 5 5) -> 5 * 5 = 25 (left: 25)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 1 * 5 = 5 (left: 5 5) -> 5 * 5 = 25 (left: 25) -> 25 + 2 = 27",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 40 13"
                }
            },
            "Step 4": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 13 - 1 = 12 (left: 40 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 13 - 1 = 12 (left: 40 12) -> 40 - 12 = 28 (left: 28)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 13 - 1 = 12 (left: 40 12) -> 40 - 12 = 28 (left: 28) -> 28 / 2 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "2 53"
                },
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "2 53"
                }
            },
            "Step 7": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 / 13 = 3 (left: -> 40 + 13 = 53 (left: 53) -> 53 - 2 = 51 (left: 2 53)  -> 53 - 2 = 51 (left: 51)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "8 8 15"
                }
            },
            "Step 8": {
                "Step": "1 * 5 = 5 (left: 5 8  -> 8 - 5 = 3 (left: 3) -> There is only one possible next step: 12 + 3 = 15 (left: 8 8 15) -> 15 - 8 = 7 (left: 8 7)",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "13 - 8 = 5 (left: 1 5 5)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "1 5 5"
                }
            },
            "Step 1": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 1 + 5 = 6 (left: 5 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 1 + 5 = 6 (left: 5 6) -> 6 - 5 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 1 + 5 = 6 (left: 5 6) -> 6 - 5 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "1 5 5"
                }
            },
            "Step 4": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 - 1 = 4 (left: 4 5)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 - 1 = 4 (left: 4 5) -> 5 - 4 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 - 1 = 4 (left: 4 5) -> 5 - 4 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "2 53"
                }
            },
            "Step 7": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 / 13 = 3 (left: -> 40 + 13 = 53 (left: 53) -> 53 - 2 = 51 (left: 2 53)  -> 2 + 53 = 55 (left: 55)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "2 53"
                }
            },
            "Step 8": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 / 13 = 3 (left: -> 40 + 13 = 53 (left: 53) -> 53 - 2 = 51 (left: 2 53)  -> 7 + 3 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "2 53"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "13 - 5 = 8 (left: 1 8 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "1 5 5"
                }
            },
            "Step 1": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 1 + 5 = 6 (left: 5 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 1 + 5 = 6 (left: 5 6) -> 6 - 5 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 1 + 5 = 6 (left: 5 6) -> 6 - 5 = 1 (left: 1) -> There are no possible next steps with just one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 8 13"
                }
            },
            "Step 4": {
                "Step": "1 * 5 = 5 (left: 5 8 ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 * 5 = 5 (left: 5 8  -> 8 - 5 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 * 5 = 5 (left: 5 8  -> 8 - 5 = 3 (left: 3) -> There is only one possible next step: 12 + 3 = 15 (left: 8 8 15)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "2 53"
                }
            },
            "Step 7": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 / 13 = 3 (left: -> 40 + 13 = 53 (left: 53) -> 53 - 2 = 51 (left: 2 53)  -> 9 - 3 = 6 (left: 6 7)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 / 13 = 3 (left: -> 40 + 13 = 53 (left: 53) -> 53 - 2 = 51 (left: 2 53)  -> 9 - 3 = 6 (left: 6 7) -> 7 - 6 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "2 53"
                }
            }
        },
        "Input": "1 5 8 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1073": {
        "puzzle": "3 3 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 9 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 3 4"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 4 * 3 = 12 (left: 12 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 4 * 3 = 12 (left: 12 3) -> 12 + 3 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 4 * 3 = 12 (left: 12 3) -> 12 + 3 = 15 (left: 15) -> 15 + 14 = 29 (left: 14)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "3 3 4"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "3 4 9"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 9 - 3 = 6 (left: 4 6)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 9 - 3 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 9 - 3 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (9 - (13 - 9)) = 24",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "8 96"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "6 4"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 9 - 3 = 6 (left: 6 4) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 9 - 3 = 6 (left: 6 4) -> 6 / 4 = 1.5 (left: 1.5) -> There are no possible next steps with the input of 1.5.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 9 13)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 3 4"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 * 3 = 9 (left: 4 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 * 3 = 9 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 * 3 = 9 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25) -> There are no possible next steps for the input 2.25 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "3 4 9"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 4 / 3 = 1.33 (left: 1.33 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 4 / 3 = 1.33 (left: 1.33 9) -> 9 - 1.33 = 7.67 (left: 7.67)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 4 / 3 = 1.33 (left: 1.33 9) -> 9 - 1.33 = 7.67 (left: 7.67) -> 7.67 * 2 = 15.34",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "6 4"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 9 - 3 = 6 (left: 6 4) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 9 - 3 = 6 (left: 6 4) -> 6 / 4 = 1.5 (left: 1.5) -> There is only one number, so there are no possible next steps.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 3 3 4)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 4 9"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 4 / 3 = 1.3333333333333333 (left: 1.3333333333333333 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 4 / 3 = 1.3333333333333333 (left: 1.3333333333333333 9) -> 1.3333333333333333 * 9 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 4 / 3 = 1.3333333333333333 (left: 1.3333333333333333 9) -> 1.3333333333333333 * 9 = 12 (left: 12) -> 12 + 2 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "3 4 9"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "3 3 4"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 + 3 = 6 (left: 4 6)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 + 3 = 6 (left: 4 6) -> 4 + 6 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 + 3 = 6 (left: 4 6) -> 4 + 6 = 10 (left: 10) -> 10 + 10 = 20",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "8 96"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 * 8 = 96 (left: 8 96) -> 96 - 8 = 88 (left: 8 88)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 * 8 = 96 (left: 8 96) -> 96 - 8 = 88 (left: 8 88) -> 88 / 8 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "0.75 = 12"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 3 = 6 (left: 3 6 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 3 4"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 * 3 = 9 (left: 4 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 * 3 = 9 (left: 4 9) -> 4 + 9 = 13 (left: 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 * 3 = 9 (left: 4 9) -> 4 + 9 = 13 (left: 9) -> 8 - 9 = -1 (left: -1)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "3 4 9"
                },
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "8 96"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 * 8 = 96 (left: 8 96) -> 96 / 8 = 12 (left: 8 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 * 8 = 96 (left: 8 96) -> 96 / 8 = 12 (left: 8 12) -> 12 - 8 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "3 4 9"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 9 - 3 = 6 (left: 6 4)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "8 96"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 * 8 = 96 (left: 8 96) -> 96 - 8 = 88 (left: 88)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "8 96"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 * 8 = 96 (left: 8 96) -> 96 / 8 = 12 (left: 12 8)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 9 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 9 "
                }
            },
            "Step 1": {
                "Step": "13 - 3 = 10 (left: 3 9  -> 9 / 3 = 3 (left: 3 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 3 = 10 (left: 3 9  -> 9 / 3 = 3 (left: 3 9) -> Possible next steps:",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 3 = 10 (left: 3 9  -> 9 / 3 = 3 (left: 3 9) -> Possible next steps: -> There are no possible next steps as the input is already in its simplest form.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "3 4 9"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 9 - 3 = 6 (left: 4 6)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 9 - 3 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 9 - 3 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 9) * (9 - 3) = 24",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "8 96"
                },
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "6 4"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 9 - 3 = 6 (left: 6 4) -> 6 - 4 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 9 - 3 = 6 (left: 6 4) -> 6 - 4 = 2 (left: 2) -> Not enough numbers provided for further calculations.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 6 9 13)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 4 9"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 3 + 4 = 7 (left: 7 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 3 + 4 = 7 (left: 7 9) -> 9 / 7 = 1.2857142857142858 (left: 1.2857142857142858)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 3 + 4 = 7 (left: 7 9) -> 9 / 7 = 1.2857142857142858 (left: 1.2857142857142858) -> 1.2857142857142858 + 1 = 2.2857142857142858",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "8 96"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 * 8 = 96 (left: 8 96) -> Possible next steps:",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 * 8 = 96 (left: 8 96) -> Possible next steps: -> There are no possible next steps as all the numbers are the same.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 * 8 = 96 (left: 8 96) -> Possible next steps: -> There are no possible next steps as all the numbers are the same. -> All numbers are the same, so no further operations can be performed.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "8 96"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 * 8 = 96 (left: 8 96) -> 96 / 8 = 12 (left: 8 12)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 * 8 = 96 (left: 8 96) -> 96 / 8 = 12 (left: 8 12) -> 8 / 12 = 0.6667 (left: 0.6667)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "0.75 = 12"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 3 4 9)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 9 13"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 * 8 = 96 (left: 8 96)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "3 4 9"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 3 + 4 = 7 (left: 7 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 3 + 4 = 7 (left: 7 9) -> 7 + 9 = 16 (left: 16)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 3 + 4 = 7 (left: 7 9) -> 7 + 9 = 16 (left: 16) -> 16 + 16 = 32",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "6 4"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 9 - 3 = 6 (left: 6 4) -> 6 + 4 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 9 - 3 = 6 (left: 6 4) -> 6 + 4 = 10 (left: 10) -> 10 - 10 = 0",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "13 - 3 = 10 (left: 3 9 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 4 9"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 3 * 4 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 3 * 4 =  -> 3 * 4 = 12",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 3 * 4 =  -> 3 * 4 = 12 -> 3 / 4 = 0.75 (left: 0.75 = 12)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "3 4 9"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 9 / 3 = 3 (left: 3 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 9 / 3 = 3 (left: 3 9) -> 4 * 10 = 40",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 9 / 3 = 3 (left: 3 9) -> 4 * 10 = 40 -> 10 / 4 = 2.5 (left: 2.5 = 40)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "8 96"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 * 8 = 96 (left: 8 96) -> 96 / 8 = 12 (left: 8 12)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 * 8 = 96 (left: 8 96) -> 96 / 8 = 12 (left: 8 12) -> 8 - 12 = -4 (left: -4)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "7.67 * 2 = 15.34"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "13 - 3 = 10 (left: 3 9 ",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 4 9"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 3 + 4 = 7 (left: 7 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 3 + 4 = 7 (left: 7 9) -> 7 * 9 = 63 (left: 63)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 3 + 4 = 7 (left: 7 9) -> 7 * 9 = 63 (left: 63) -> 63 / 3 = 21 (left: 21)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "3 4 9"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "8 96"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 * 8 = 96 (left: 8 96) -> 96 - 8 = 88 (left: 88)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "3 4 9"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> Possible",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> Possible -> It appears that the input is not clear. Could you please provide more information or clarify the input?",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "6 4"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 9 - 3 = 6 (left: 6 4) -> 6 * 4 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 9 - 3 = 6 (left: 6 4) -> 6 * 4 = 24 (left: 24) -> Answer: (9 - 3) * (13 - 9) = 24",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "0.75 = 12"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 3 4 9)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "9 9 13"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 4 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 4 9) -> 4 + 9 = 13 (left: 9 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 4 9) -> 4 + 9 = 13 (left: 9 13) -> 13 / 9 = 1.4444 (left: 1.4444)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "6 9 13"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "8 96"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 * 8 = 96 (left: 8 96) -> 8 * 12 = 96 (left: 12)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "3 4 9"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 9 + 3 = 12 (left: 4 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 9 + 3 = 12 (left: 4 12) -> 12 / 4 = 3 (left: 3 12)  ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "6 4"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 9 - 3 = 6 (left: 6 4) -> 6 * 4 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 9 - 3 = 6 (left: 6 4) -> 6 * 4 = 24 (left: 24) -> Answer: (9 - (13 - 9)) * 3 = 24",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "0.75 = 12"
                }
            }
        },
        "Input": "3 3 9 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1074": {
        "puzzle": "7 7 9 10",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 7 = 3 (left: 3 7 ",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10) -> 10 - 9 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10) -> 10 - 9 = 1 (left: 1) -> No possible next steps for the input 1.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 4": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 10 / 2 = 5 (left: 7 5)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 10 / 2 = 5 (left: 7 5) -> 7 * 5 = 35 (left: 35)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 10 / 2 = 5 (left: 7 5) -> 7 * 5 = 35 (left: 35) -> 35 + 8 = 43 (left: 8)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "13"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "Possible next steps:"
                }
            },
            "Step 7": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 7 / 2 = 3.5 (left: 3.5 10) -> 10 - 3.5 = 6.5 (left: 6.5 10) -> Possible next steps: -> There are no possible next steps with the given input.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 7 / 2 = 3.5 (left: 3.5 10) -> 10 - 3.5 = 6.5 (left: 6.5 10) -> Possible next steps: -> There are no possible next steps with the given input. -> There are no possible next steps with the given input.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 * 9 = 63 (left: 10 10 63)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "9 10 49"
                }
            },
            "Step 1": {
                "Step": "7 * 7 = 49 (left: 9 10 49) -> 9 + 10 = 19 (left: 19 49)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 * 7 = 49 (left: 9 10 49) -> 9 + 10 = 19 (left: 19 49) -> 7 - 3 = 4 (left: 5 4",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 * 7 = 49 (left: 9 10 49) -> 9 + 10 = 19 (left: 19 49) -> 7 - 3 = 4 (left: 5 4 -> 4 * 5 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "2 7 10"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 4": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 7 * 2 = 14 (left: 10 14)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 7 * 2 = 14 (left: 10 14) -> 10 - 14 = -4 (left: -4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 7 * 2 = 14 (left: 10 14) -> 10 - 14 = -4 (left: -4) -> -4 - 2 = -6 (left: -6)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "2.8"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "2.8"
                }
            },
            "Step 7": {
                "Step": "7 + 7 = 14 (left: 9 10 14) -> 14 - 9 = 5 (left: 5 14) -> 14 / 5 = 2.8 (left: 2.8) -> There are no possible next steps for the input 2.8 as it is a single number and not a mathematical operation with multiple numbers.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 + 7 = 14 (left: 9 10 14) -> 14 - 9 = 5 (left: 5 14) -> 14 / 5 = 2.8 (left: 2.8) -> There are no possible next steps for the input 2.8 as it is a single number and not a mathematical operation with multiple numbers. -> There are no possible next steps for the input 2.8 as it is a single number and not a mathematical operation with multiple numbers.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 - 7 = 2 (left: 7 2 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 7 "
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 3 7  -> 9 / 5 = 1 (left: 1 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 3 7  -> 9 / 5 = 1 (left: 1 9) -> 9 - 1 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 3 7  -> 9 / 5 = 1 (left: 1 9) -> 9 - 1 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 4": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 7 + 2 = 9 (left: 2 9 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 7 + 2 = 9 (left: 2 9 10) -> 10 - 2 = 8 (left: 8 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 7 + 2 = 9 (left: 2 9 10) -> 10 - 2 = 8 (left: 8 10) -> 10 - 8 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "8 + 8 = 16"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "No possible next steps for the input 1."
                }
            },
            "Step 7": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10) -> 10 - 9 = 1 (left: 1) -> No possible next steps for the input 1. -> No possible next steps.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10) -> 10 - 9 = 1 (left: 1) -> No possible next steps for the input 1. -> No possible next steps. -> No possible next steps.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 * 9 = 63 (left: 10 63)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 10 - 2 = 8 (left: 8 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 10 - 2 = 8 (left: 8 10) -> 8 / 10 = 0.8 (left: 0.8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 10 - 2 = 8 (left: 8 10) -> 8 / 10 = 0.8 (left: 0.8) -> There are no possible next steps with the input of 0.8.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 4": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 10 / 2 = 5 (left: 5 5)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 10 / 2 = 5 (left: 5 5) -> 5 - 5 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 10 / 2 = 5 (left: 5 5) -> 5 - 5 = 0 (left: 0) -> There are no possible next steps with the input 0 as it does not provide any numbers to work with.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "There are no possible next steps with the input of 15."
                }
            },
            "Step 7": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 7 + 10 = 17 (left: 2 17) -> 17 - 2 = 15 (left: 15) -> There are no possible next steps with the input of 15. -> There are no possible next steps with the input of 15.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 7 + 10 = 17 (left: 2 17) -> 17 - 2 = 15 (left: 15) -> There are no possible next steps with the input of 15. -> There are no possible next steps with the input of 15. -> 15 / 2 = 7.5 (left: 7.5)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "2 3.4"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "7 * 7 = 49 (left: 9 10 49)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 7 "
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 3 7  -> 3 + 7 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 3 7  -> 3 + 7 = 10 (left: 10) -> 10 + 2 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 3 7  -> 3 + 7 = 10 (left: 10) -> 10 + 2 = 12 (left: 12) -> 12 / 2 = 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 4": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 10 - 2 = 8 (left: 7 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 10 - 2 = 8 (left: 7 8) -> 7 - 8 = -1 (left: -1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 10 - 2 = 8 (left: 7 8) -> 7 - 8 = -1 (left: -1) -> -1 - 2 = -3 (left: 2)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "No possible next steps for the input 1."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "2 3.4"
                }
            },
            "Step 7": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 7 * 2 = 14 (left: 14 10) -> 14 / 10 = 1.4 (left: 1.4) -> 1.4 + 2 = 3.4 (left: 2 3.4) -> 2 - 3.4 = -1.4 (left: -1.4)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "Possible next steps:"
                }
            },
            "Step 8": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 7 / 2 = 3.5 (left: 3.5 10) -> 10 - 3.5 = 6.5 (left: 6.5 10) -> Possible next steps: -> It seems that there are no more possible next steps for the given input.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "7 + 7 = 14 (left: 9 10 14)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 7 / 2 = 3.5 (left: 3.5 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 7 / 2 = 3.5 (left: 3.5 10) -> 10 / 3.5 = 2.857 (left: 2.857 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 7 / 2 = 3.5 (left: 3.5 10) -> 10 / 3.5 = 2.857 (left: 2.857 10) -> 2.857 * 10 = 28.57 (left: 28.57)",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "2 7 10"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 4": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 7 + 2 = 9 (left: 2 9 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 7 + 2 = 9 (left: 2 9 10) -> 9 - 2 = 7 (left: 7 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 7 + 2 = 9 (left: 2 9 10) -> 9 - 2 = 7 (left: 7 10) -> 10 - 7 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "There are no possible next steps with the input of 0.8."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "No possible next steps for the input 1."
                }
            },
            "Step 7": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10) -> 10 - 9 = 1 (left: 1) -> No possible next steps for the input 1. -> There are no possible next steps for the input 1.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10) -> 10 - 9 = 1 (left: 1) -> No possible next steps for the input 1. -> There are no possible next steps for the input 1. -> There are no possible next steps for the input 1.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "7 * 9 = 63 (left: 10 63)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 10 / 2 = 5 (left: 5 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 10 / 2 = 5 (left: 5 10) -> 5 + 10 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 10 / 2 = 5 (left: 5 10) -> 5 + 10 = 15 (left: 15) -> 15 / 2 = 7.5 (left: 7.5)",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "2 7 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 4": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10) -> 9 / 10 = 0.9 (left: 0.9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10) -> 9 / 10 = 0.9 (left: 0.9) -> There are no possible next steps for the input 0.9.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "Possible next steps:"
                }
            },
            "Step 7": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 7 / 2 = 3.5 (left: 3.5 10) -> 10 - 3.5 = 6.5 (left: 6.5 10) -> Possible next steps: -> There are no possible next steps as the input has already been fully evaluated.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 7 / 2 = 3.5 (left: 3.5 10) -> 10 - 3.5 = 6.5 (left: 6.5 10) -> Possible next steps: -> There are no possible next steps as the input has already been fully evaluated. -> N/A",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "There are no possible next steps with the input of 0.8."
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "9 + 1 = 10 (left: 7 10 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 9 10"
                }
            },
            "Step 1": {
                "Step": "7 + 7 = 14 (left: 9 10 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 7 = 14 (left: 9 10 14) -> 14 - 9 = 5 (left: 5 14)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 + 7 = 14 (left: 9 10 14) -> 14 - 9 = 5 (left: 5 14) -> 14 / 5 = 2.8 (left: 2.8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 4": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 7 / 2 = 3.5 (left: 3.5 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 7 / 2 = 3.5 (left: 3.5 10) -> 10 - 3.5 = 6.5 (left: 6.5 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 7 / 2 = 3.5 (left: 3.5 10) -> 10 - 3.5 = 6.5 (left: 6.5 10) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "2.8"
                }
            },
            "Step 7": {
                "Step": "7 + 7 = 14 (left: 9 10 14) -> 14 - 9 = 5 (left: 5 14) -> 14 / 5 = 2.8 (left: 2.8) -> There is only one number provided (2.8), so there are no possible next steps to perform any operations.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 + 7 = 14 (left: 9 10 14) -> 14 - 9 = 5 (left: 5 14) -> 14 / 5 = 2.8 (left: 2.8) -> There is only one number provided (2.8), so there are no possible next steps to perform any operations. -> There is only one number provided, so there are no possible next steps as there are not enough numbers to perform any operations.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "7 / 7 = 1 (left: 1 9 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10) -> 9 - 10 = -1 (left: -1 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10) -> 9 - 10 = -1 (left: -1 10) -> 10 - (-1) = 11 (left: 11) ",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "9 10 49"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 4": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 7 * 2 = 14 (left: 14 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 7 * 2 = 14 (left: 14 10) -> 14 / 10 = 1.4 (left: 1.4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 7 * 2 = 14 (left: 14 10) -> 14 / 10 = 1.4 (left: 1.4) -> 1.4 + 2 = 3.4 (left: 2 3.4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "There are no possible next steps with the input of 0.8."
                }
            },
            "Step 7": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 10 - 2 = 8 (left: 8 10) -> 8 / 10 = 0.8 (left: 0.8) -> There are no possible next steps with the input of 0.8. -> There are no possible next steps with the input of 0.8.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 10 - 2 = 8 (left: 8 10) -> 8 / 10 = 0.8 (left: 0.8) -> There are no possible next steps with the input of 0.8. -> There are no possible next steps with the input of 0.8. -> 0.8 - 2 = -1.2",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "9 - 7 = 2 (left: 2 7 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 9 10"
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 7 9 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 7 9 3) -> 7 - 3 = 4 (left: 4 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 7 9 3) -> 7 - 3 = 4 (left: 4 9) -> 4 + 9 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 4": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 7 + 10 = 17 (left: 2 17)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 7 + 10 = 17 (left: 2 17) -> 17 - 2 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 7 + 10 = 17 (left: 2 17) -> 17 - 2 = 15 (left: 15) -> There are no possible next steps with the input of 15.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "2 3.4"
                }
            },
            "Step 7": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 7 * 2 = 14 (left: 14 10) -> 14 / 10 = 1.4 (left: 1.4) -> 1.4 + 2 = 3.4 (left: 2 3.4) -> 2 - 3.4 = -1.4 (left: -1.4)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "12 / 2 = 6"
                }
            },
            "Step 8": {
                "Step": "10 - 7 = 3 (left: 3 7  -> 3 + 7 = 10 (left: 10) -> 10 + 2 = 12 (left: 12) -> 12 / 2 = 6 -> 12 / 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "8 + 8 = 16"
                }
            }
        },
        "Input": "7 7 9 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "Cost": {
        "input_tokens": 768805,
        "output_tokens": 389560.7757936513,
        "total_cost": 0.9687436636904769
    }
}