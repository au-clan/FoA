{
    "875": {
        "puzzle": "5 6 9 12",
        "Agent 0": {
            "Step 0": {
                "Step": "6 - 5 = 1 (left: 1 9 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "9 11 12"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 9 11 12) -> ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 9 11 12) ->  -> It appears that you have not provided an input for the next step calculation. Please provide the numbers for the next step calculation.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "14"
                }
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 9 11 12) -> 11 - 9 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14) -> 14 / 2 = 7",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 9 11 12) -> 11 - 9 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14) -> 14 / 2 = 7 -> There are no possible next steps as the equation has been solved and simplified to 7.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3 = 1"
                }
            },
            "Step 5": {
                "Step": "6 - 5 = 1 (left: 1 9 12) -> 12 / 9 = 1. -> 12 % 9 = 3 (left: 3 = 1) -> 3 / 1 = 3 (left: 3 = 1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 5 = 1 (left: 1 9 12) -> 12 / 9 = 1. -> 12 % 9 = 3 (left: 3 = 1) -> 3 / 1 = 3 (left: 3 = 1) -> 3 + 1 = 4 (left: 1)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "There are no possible next steps with the input of -3."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 9 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 9 12"
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 9 12) -> 12 / 9 = 1.",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 9 12) -> 12 / 9 = 1. -> 12 % 9 = 3 (left: 3 = 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "14"
                }
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 9 11 12) -> 11 - 9 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14) -> There are no possible next steps as there is only one number left.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 9 11 12) -> 11 - 9 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14) -> There are no possible next steps as there is only one number left. -> There are no possible next steps as there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "There are no possible next steps as there is only one number left."
                }
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 9 11 12) -> 11 - 9 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14) -> There are no possible next steps as there is only one number left. -> There are no possible next steps as there is only one number left. -> No possible next steps.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 9 11 12) -> 11 - 9 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14) -> There are no possible next steps as there is only one number left. -> There are no possible next steps as there is only one number left. -> No possible next steps. -> There are no possible next steps for the input provided.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 9 = 3 (left: 3 6 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "9 11 12"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 9 11 12) -> 11 - 9 = 2 (left: 2 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 9 11 12) -> 11 - 9 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "14"
                }
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 9 11 12) -> 11 - 9 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14) -> 14 / 2 = 7",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 9 11 12) -> 11 - 9 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14) -> 14 / 2 = 7 -> 2 - 7 = -5 (left: -5)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "3 = 1"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "There are no possible next steps as there is only one number left."
                }
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 9 11 12) -> 11 - 9 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14) -> There are no possible next steps as there is only one number left. -> There are no possible next steps as there is only one number left. -> There are no possible next steps as there is only one number left.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 9 11 12) -> 11 - 9 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14) -> There are no possible next steps as there is only one number left. -> There are no possible next steps as there is only one number left. -> There are no possible next steps as there is only one number left. -> None",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "There are no possible next steps as the equation has been solved and simplified to 7."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "12 + 5 = 17 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 9 12"
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 9 12) -> 12 - 1 = 11 (left: 9 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 9 12) -> 12 - 1 = 11 (left: 9 11) -> 9 - 11 = -2 (left: -2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "-3"
                }
            },
            "Step 3": {
                "Step": "6 - 5 = 1 (left: 1 9 12) -> 9 / 1 = 9 (left: 9 12) -> 9 - 12 = -3 (left: -3) -> There are no possible next steps with the input of -3.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 - 5 = 1 (left: 1 9 12) -> 9 / 1 = 9 (left: 9 12) -> 9 - 12 = -3 (left: -3) -> There are no possible next steps with the input of -3. -> There are no possible next steps with the input of -3.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "There are no possible next steps as the equation has been solved and simplified to 7."
                }
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 9 11 12) -> 11 - 9 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14) -> 14 / 2 = 7 -> There are no possible next steps as the equation has been solved and simplified to 7. -> There are no possible next steps as the equation has been solved and simplified to 7.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 9 11 12) -> 11 - 9 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14) -> 14 / 2 = 7 -> There are no possible next steps as the equation has been solved and simplified to 7. -> There are no possible next steps as the equation has been solved and simplified to 7. -> There are no possible next steps as the equation has already been solved and simplified to 7.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 9 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 9 12"
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 9 12) -> 9 / 1 = 9 (left: 9 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 9 12) -> 9 / 1 = 9 (left: 9 12) -> 9 - 12 = -3 (left: -3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 = 1"
                }
            },
            "Step 3": {
                "Step": "6 - 5 = 1 (left: 1 9 12) -> 12 / 9 = 1. -> 12 % 9 = 3 (left: 3 = 1) -> 3 + 1 = 4 (left: 1 4)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 - 5 = 1 (left: 1 9 12) -> 12 / 9 = 1. -> 12 % 9 = 3 (left: 3 = 1) -> 3 + 1 = 4 (left: 1 4) -> 4 - 1 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "-2"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3 = 1"
                }
            },
            "Step 5": {
                "Step": "6 - 5 = 1 (left: 1 9 12) -> 12 / 9 = 1. -> 12 % 9 = 3 (left: 3 = 1) -> 3 - 1 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "It appears that you have not provided an input for the next step calculation. Please provide the numbers for the next step calculation."
                }
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 9 11 12) ->  -> It appears that you have not provided an input for the next step calculation. Please provide the numbers for the next step calculation. -> - Add two numbers",
                "Pruning": null
            }
        },
        "Input": "5 6 9 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "876": {
        "puzzle": "6 9 10 11",
        "Agent 0": {
            "Step 0": {
                "Step": "9 + 10 = 19 (left: 6 11 19)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 9 21"
                }
            },
            "Step 1": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 21 - 6 = 15 (left: 9 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 21 - 6 = 15 (left: 9 15) -> 9 * 15 = 135 (left: 135)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 21 / 9 = 3 (left: 6 3) -> 6 * 3 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 21 / 9 = 3 (left: 6 3) -> 6 * 3 = 18 (left: 18) -> There are no possible next steps with the input 18. -> None",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "135"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "6 15"
                }
            },
            "Step 5": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 21 - 6 = 15 (left: 6 15) -> 6 - 15 = -9 (left: -9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 21 - 6 = 15 (left: 6 15) -> 6 - 15 = -9 (left: -9) -> There are no possible next steps with the input of -9.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 10 11 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 11 19"
                }
            },
            "Step 1": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 11 / 6 = 1.83 (",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 11 / 6 = 1.83 ( -> 11 + 6 = 17 (left: 17 / 6 = 2.83)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 21 / 9 = 3 (left: 6 3) -> 6 * 3 = 18 (left: 18) -> 18 + 8 = 26 (left: 8 26)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 21 / 9 = 3 (left: 6 3) -> 6 * 3 = 18 (left: 18) -> 18 + 8 = 26 (left: 8 26) -> 26 - 8 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "17 / 6 = 2.83"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "There are no possible next steps for the number 18."
                }
            },
            "Step 5": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 21 / 9 = 3 (left: 6 3) -> 6 * 3 = 18 (left: 18) -> There are no possible next steps for the number 18. -> There are no possible next steps for the number 18. -> 18 / 2 = 9",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 21 / 9 = 3 (left: 6 3) -> 6 * 3 = 18 (left: 18) -> There are no possible next steps for the number 18. -> There are no possible next steps for the number 18. -> 18 / 2 = 9 -> 16 / ",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 * 9 = 54 (left: 10 11 54)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 9 21"
                }
            },
            "Step 1": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 21 / 9 = 3 (left: 6 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 21 / 9 = 3 (left: 6 3) -> 6 * 3 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 21 / 9 = 3 (left: 6 3) -> 6 * 3 = 18 (left: 18) -> 18 - 8 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "10 11 15"
                }
            },
            "Step 4": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 10 + 11 = 21 (left: 15 21)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "There are no possible next steps for the number 18."
                }
            },
            "Step 5": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 21 / 9 = 3 (left: 6 3) -> 6 * 3 = 18 (left: 18) -> There are no possible next steps for the number 18. -> There are no possible next steps for the number 18. -> None.",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "17 / 6 = 2.83"
                }
            },
            "Step 6": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 11 / 6 = 1.83 ( -> 11 + 6 = 17 (left: 17 / 6 = 2.83) -> 17 * 6 = 102 (left: 6 2.83 102)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 + 11 = 21 (left: 6 9 21)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 9 21"
                }
            },
            "Step 1": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 6 * 9 = 54 (left: 21 54)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 6 * 9 = 54 (left: 21 54) -> 21 * 54 = 1134 (left: 1134)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 21 / 9 = 3 (left: 6 3) -> 6 * 3 = 18 (left: 18) -> There are no possible next steps for the number 18.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 21 / 9 = 3 (left: 6 3) -> 6 * 3 = 18 (left: 18) -> There are no possible next steps for the number 18. -> There are no possible next steps for the number 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "17 / 6 = 2.83"
                }
            },
            "Step 5": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 11 / 6 = 1.83 ( -> 11 + 6 = 17 (left: 17 / 6 = 2.83) -> 17 - 6 = 11 (left: 11 = 2.83)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 11 / 6 = 1.83 ( -> 11 + 6 = 17 (left: 17 / 6 = 2.83) -> 17 - 6 = 11 (left: 11 = 2.83) -> 11 + 2 = 13 (left: 13 2.83)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "10 + 11 = 21 (left: 6 9 21)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 11 19"
                }
            },
            "Step 1": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 11 / 6 = 1.83 (",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 11 / 6 = 1.83 ( -> 11 + 6 = 17 (left: 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 21 / 9 = 3 (left: 6 3) -> 6 * 3 = 18 (left: 18) -> 2 * 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "6 9 21"
                }
            },
            "Step 4": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 21 - 6 = 15 (left: 6 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "17 / 6 = 2.83"
                }
            },
            "Step 5": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 11 / 6 = 1.83 ( -> 11 + 6 = 17 (left: 17 / 6 = 2.83) -> 6 / 17 = 0.35 (left: 0.35 = 2.83)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 11 / 6 = 1.83 ( -> 11 + 6 = 17 (left: 17 / 6 = 2.83) -> 6 / 17 = 0.35 (left: 0.35 = 2.83) -> 0.35 + 2.83 = 3.18 (left: 2.83 3.18)",
                "Pruning": null
            }
        },
        "Input": "6 9 10 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "877": {
        "puzzle": "2 4 5 11",
        "Agent 0": {
            "Step 0": {
                "Step": "5 + 11 = 16 (left: 2 4 16)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 4 16"
                }
            },
            "Step 1": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 16 / 4 = 4 (left: 2 4 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 16 / 4 = 4 (left: 2 4 16) -> Input: 3 9 27",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "16 16"
                }
            },
            "Step 3": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 4 * 2 = 8 (left: 8 16) -> 8 * 2 = 16 (left: 16 16) -> 16 + 16 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "Input: 3 9 27"
                }
            },
            "Step 4": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 16 / 4 = 4 (left: 2 4 16) -> Input: 3 9 27 -> 27 - 9 = 18 (left: 9 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "5 3"
                }
            },
            "Step 5": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 11 - 8 = 3 (left: 5 3) -> 5 + 3 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 11 - 8 = 3 (left: 5 3) -> 5 + 3 = 8 (left: 8) -> 8 / 8 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "9 18"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 * 4 = 8 (left: 5 8 11)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "5 6 11"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 5 6 11) -> 5 + 6 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 5 6 11) -> 5 + 6 = 11 (left: 11) -> There are no possible next steps with the input 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "128"
                }
            },
            "Step 3": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 4 * 2 = 8 (left: 8 16) -> 16 * 8 = 128 (left: 128) -> 1 + 2 + 8 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "5 8 11"
                }
            },
            "Step 4": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 11 - 8 = 3 (left: 5 3)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "5 3"
                }
            },
            "Step 5": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 11 - 8 = 3 (left: 5 3) -> 5 + 3 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 11 - 8 = 3 (left: 5 3) -> 5 + 3 = 8 (left: 8) -> There are no possible next steps with just one number.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 5 = 9 (left: 2 9 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 4 16"
                }
            },
            "Step 1": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 4 * 2 = 8 (left: 8 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 4 * 2 = 8 (left: 8 16) -> 8 * 2 = 16 (left: 16 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "Input: 3 9 27"
                }
            },
            "Step 3": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 16 / 4 = 4 (left: 2 4 16) -> Input: 3 9 27 -> 3 * 9 = 27 (left: 27)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "5 8 11"
                }
            },
            "Step 4": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 8 - 5 = 3 (left: 3 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "5 3"
                }
            },
            "Step 5": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 11 - 8 = 3 (left: 5 3) -> 5 + 3 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 11 - 8 = 3 (left: 5 3) -> 5 + 3 = 8 (left: 8) -> 8 / 8 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "9 18"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 * 4 = 8 (left: 5 8 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "5 8 11"
                }
            },
            "Step 1": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 11 - 8 = 3 (left: 5 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 11 - 8 = 3 (left: 5 3) -> 5 - 3 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "Input: 3 9 27"
                }
            },
            "Step 3": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 16 / 4 = 4 (left: 2 4 16) -> Input: 3 9 27 -> 27 / 3 = 9 (left: 9 27)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 16 / 4 = 4 (left: 2 4 16) -> Input: 3 9 27 -> 27 / 3 = 9 (left: 9 27) -> 9 + 27 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "128"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "5 3"
                }
            },
            "Step 5": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 11 - 8 = 3 (left: 5 3) -> 5 * 3 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 11 - 8 = 3 (left: 5 3) -> 5 * 3 = 15 (left: 15) -> 15 + 8 = 23 (left: 8)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "9 18"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 5 6 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 4 16"
                }
            },
            "Step 1": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 4 * 2 = 8 (left: 8 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 4 * 2 = 8 (left: 8 16) -> 16 * 8 = 128 (left: 128)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "16 16"
                }
            },
            "Step 3": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 4 * 2 = 8 (left: 8 16) -> 8 * 2 = 16 (left: 16 16) -> 16 - 16 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "2 4 16"
                }
            },
            "Step 4": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 2 + 4 = 6 (left: 6 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "5 3"
                }
            },
            "Step 5": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 11 - 8 = 3 (left: 5 3) -> 5 / 3 = 1.67 (left: 1.67)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 11 - 8 = 3 (left: 5 3) -> 5 / 3 = 1.67 (left: 1.67) -> There are no possible next steps for the input 1.67.",
                "Pruning": null
            }
        },
        "Input": "2 4 5 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "878": {
        "puzzle": "1 2 5 10",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 5 = 7 (left: 1 7 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 10"
                }
            },
            "Step 1": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 1 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 1 9) -> 9 / 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "10 100"
                }
            },
            "Step 3": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> Possible next steps:",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> Possible next steps: -> There are no more possible next steps as all calculations have been exhausted.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "There are no possible next steps with the input 11."
                }
            },
            "Step 5": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 + 10 = 11 (left: 11) -> There are no possible next steps with the input 11. -> There are no possible next steps with the input 11. -> None",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "9"
                }
            },
            "Step 6": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 1 9) -> 9 / 1 = 9 (left: 9) -> There is only one possible next step: 8 + 1 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "10 90"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 - 2 = 3 (left: 1 3 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 10"
                }
            },
            "Step 1": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 + 10 = 11 (left: 11) -> There are no possible next steps with the input 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "10 100"
                }
            },
            "Step 3": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> 100 / 10 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "There are no possible next steps with the input 11."
                }
            },
            "Step 4": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 + 10 = 11 (left: 11) -> There are no possible next steps with the input 11. -> There are no possible next steps with the input 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "There are no possible next steps with the input 11."
                }
            },
            "Step 5": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 + 10 = 11 (left: 11) -> There are no possible next steps with the input 11. -> There are no possible next steps with the input 11. -> None",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "10 100"
                }
            },
            "Step 6": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> 100 / 10 = 10 (left: 10 10)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 + 10 = 15 (left: 1 2 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 10"
                }
            },
            "Step 1": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 / 10 = 0.1 (left: 0.1)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 / 10 = 0.1 (left: 0.1) -> There are no possible next steps with the input of 0.1.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "10 100"
                }
            },
            "Step 3": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> 10 * 10 = 100 (left: 10 100)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> 10 * 10 = 100 (left: 10 100) -> 100 - 10 = 90 (left: 10 90)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "There are no more possible next steps as all calculations have been exhausted."
                }
            },
            "Step 5": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> Possible next steps: -> There are no more possible next steps as all calculations have been exhausted. -> There are no more possible next steps as all calculations have been exhausted.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> Possible next steps: -> There are no more possible next steps as all calculations have been exhausted. -> There are no more possible next steps as all calculations have been exhausted. -> There are no more possible next steps as all calculations have been exhausted.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 * 2 = 10 (left: 1 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 10"
                }
            },
            "Step 1": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 9) -> 9 * 8 = 72 (left: 72)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "10 100"
                }
            },
            "Step 3": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> 10 * 100 = 1000 (left: 1000)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "1 10"
                }
            },
            "Step 4": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "There are no possible next steps with the input 11."
                }
            },
            "Step 5": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 + 10 = 11 (left: 11) -> There are no possible next steps with the input 11. -> There are no possible next steps with the input 11. -> 11 + 2 = 13 (left: 2 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 + 10 = 11 (left: 11) -> There are no possible next steps with the input 11. -> There are no possible next steps with the input 11. -> 11 + 2 = 13 (left: 2 13) -> Possible next steps:",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 5 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 10"
                }
            },
            "Step 1": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "10 100"
                }
            },
            "Step 3": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> 10 * 10 = 100 (left: 100)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "1 7 "
                }
            },
            "Step 4": {
                "Step": "2 + 5 = 7 (left: 1 7  -> 7 / 1 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "There are no more possible next steps as all calculations have been exhausted."
                }
            },
            "Step 5": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> Possible next steps: -> There are no more possible next steps as all calculations have been exhausted. -> N/A",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "9"
                }
            },
            "Step 6": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 1 9) -> 9 / 1 = 9 (left: 9) -> 9 + 9 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "There are no more possible next steps as all calculations have been exhausted."
                }
            }
        },
        "Input": "1 2 5 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "879": {
        "puzzle": "2 2 2 5",
        "Agent 0": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 2 5)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 2 5"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 / 2 = 2 (left: 2 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 / 2 = 2 (left: 2 5) -> 5 - 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3"
                }
            },
            "Step 3": {
                "Step": "5 - 2 = 3 (left: 2 3 3) -> 3 * 2 = 6 (left: 3 6) -> 6 - 3 = 3 (left: 3) -> 3 + 8 = 11 (left: 8 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 - 2 = 3 (left: 2 3 3) -> 3 * 2 = 6 (left: 3 6) -> 6 - 3 = 3 (left: 3) -> 3 + 8 = 11 (left: 8 11) -> 8 + 11 = 19 (left: 19)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "Input: 3 9"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "3"
                }
            },
            "Step 5": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 / 2 = 2 (left: 2 5) -> 5 - 2 = 3 (left: 3) -> There are no possible next steps with just one number provided.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 / 2 = 2 (left: 2 5) -> 5 - 2 = 3 (left: 3) -> There are no possible next steps with just one number provided. -> Please provide at least two numbers to generate possible next steps.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 - 2 = 3 (left: 2 3 5)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 3 3"
                }
            },
            "Step 1": {
                "Step": "5 - 2 = 3 (left: 2 3 3) -> 3 * 2 = 6 (left: 3 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 - 2 = 3 (left: 2 3 3) -> 3 * 2 = 6 (left: 3 6) -> 6 - 3 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3"
                }
            },
            "Step 3": {
                "Step": "5 - 2 = 3 (left: 2 3 3) -> 3 * 2 = 6 (left: 3 6) -> 6 - 3 = 3 (left: 3) -> 8 - 3 = 5 (left: 5 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 - 2 = 3 (left: 2 3 3) -> 3 * 2 = 6 (left: 3 6) -> 6 - 3 = 3 (left: 3) -> 8 - 3 = 5 (left: 5 8) -> 5 + 8 = 13 (left: 13)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "3"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "3"
                }
            },
            "Step 5": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 / 2 = 2 (left: 2 5) -> 5 - 2 = 3 (left: 3) -> There are no possible next steps with the input 3.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 / 2 = 2 (left: 2 5) -> 5 - 2 = 3 (left: 3) -> There are no possible next steps with the input 3. -> There are no possible next steps with the input 3.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 2 5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 2 5"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 + 2 = 6 (left: 6 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 + 2 = 6 (left: 6 5) -> 6 - 5 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3"
                }
            },
            "Step 3": {
                "Step": "5 - 2 = 3 (left: 2 3 3) -> 3 * 2 = 6 (left: 3 6) -> 6 - 3 = 3 (left: 3) -> There are no possible next steps with the input of 3.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 - 2 = 3 (left: 2 3 3) -> 3 * 2 = 6 (left: 3 6) -> 6 - 3 = 3 (left: 3) -> There are no possible next steps with the input of 3. -> There are no possible next steps with the input of 3.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "3"
                }
            },
            "Step 5": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 / 2 = 2 (left: 2 5) -> 5 - 2 = 3 (left: 3) -> 8 / 3 = 2.6666666666666665 (left: 2.6666666666666665)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "3"
                }
            },
            "Step 6": {
                "Step": "5 - 2 = 3 (left: 2 3 3) -> 3 * 2 = 6 (left: 3 6) -> 6 - 3 = 3 (left: 3) -> There are no more possible next steps with the input 3.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 * 5 = 10 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 2 5"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 + 2 = 6 (left: 6 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 + 2 = 6 (left: 6 5) -> Input: 3 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3"
                }
            },
            "Step 3": {
                "Step": "5 - 2 = 3 (left: 2 3 3) -> 3 * 2 = 6 (left: 3 6) -> 6 - 3 = 3 (left: 3) -> 3 * 8 = 24 (left: 8 24)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 - 2 = 3 (left: 2 3 3) -> 3 * 2 = 6 (left: 3 6) -> 6 - 3 = 3 (left: 3) -> 3 * 8 = 24 (left: 8 24) -> 8 * 3 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "3"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "3"
                }
            },
            "Step 5": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 / 2 = 2 (left: 2 5) -> 5 - 2 = 3 (left: 3) -> 3 + 14 = 17 (left: 14 17)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 / 2 = 2 (left: 2 5) -> 5 - 2 = 3 (left: 3) -> 3 + 14 = 17 (left: 14 17) -> 14 + 17 = 31 (left: 31)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "No possible next steps with the input 3."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 - 2 = 3 (left: 2 3 3)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 3 3"
                }
            },
            "Step 1": {
                "Step": "5 - 2 = 3 (left: 2 3 3) -> 3 / 2 = 1.5 (left: 1.5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 - 2 = 3 (left: 2 3 3) -> 3 / 2 = 1.5 (left: 1.5) -> 1.5 + 8 = 9.5 (left: 9.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3"
                }
            },
            "Step 3": {
                "Step": "5 - 2 = 3 (left: 2 3 3) -> 3 * 2 = 6 (left: 3 6) -> 6 - 3 = 3 (left: 3) -> There are no possible next steps with the input 3.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 - 2 = 3 (left: 2 3 3) -> 3 * 2 = 6 (left: 3 6) -> 6 - 3 = 3 (left: 3) -> There are no possible next steps with the input 3. -> No possible next steps with the input 3.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "3"
                }
            },
            "Step 5": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 / 2 = 2 (left: 2 5) -> 5 - 2 = 3 (left: 3) -> 3 * 8 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "3"
                }
            },
            "Step 6": {
                "Step": "5 - 2 = 3 (left: 2 3 3) -> 3 * 2 = 6 (left: 3 6) -> 6 - 3 = 3 (left: 3) -> There are no possible next steps with the input of 3.",
                "Pruning": null
            }
        },
        "Input": "2 2 2 5",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "880": {
        "puzzle": "6 12 13 13",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 6 13 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 13 13"
                }
            },
            "Step 1": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 / 6 = 2.16666666667 (left: 2.16666666667 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 / 6 = 2.16666666667 (left: 2.16666666667 13) -> 13 + 2.16666666667 = 15.16666666667 (left: 2.16666666667 15.16666666667)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "2.16666666667 15.16666666667"
                }
            },
            "Step 3": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 / 6 = 2.16666666667 (left: 2.16666666667 13) -> 13 + 2.16666666667 = 15.16666666667 (left: 2.16666666667 15.16666666667) -> 15.16666666667 - 2.16666666667 = 13 (left: 13 15.16666666667)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 / 6 = 2.16666666667 (left: 2.16666666667 13) -> 13 + 2.16666666667 = 15.16666666667 (left: 2.16666666667 15.16666666667) -> 15.16666666667 - 2.16666666667 = 13 (left: 13 15.16666666667) -> 13 * 15.16666666667 = 197.16666666671 (left: 197.16666666671)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "6"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "0.46296296297 32.833333"
                }
            },
            "Step 5": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 / 6 = 2.16666666667 (left: 2.16666666667 13) -> 13 + 2.16666666667 = 15.16666666667 (left: 2.16666666667 15.16666666667) -> 2.16666666667 * 15.16666666667 = 32.8333333334 (left: 15.16666666667 32.833333 -> 15.16666666667 / 32.833333 = 0.46296296297 (left: 0.46296296297 32.833333) -> 32.833333 / 0.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 / 6 = 2.16666666667 (left: 2.16666666667 13) -> 13 + 2.16666666667 = 15.16666666667 (left: 2.16666666667 15.16666666667) -> 2.16666666667 * 15.16666666667 = 32.8333333334 (left: 15.16666666667 32.833333 -> 15.16666666667 / 32.833333 = 0.46296296297 (left: 0.46296296297 32.833333) -> 32.833333 / 0. -> Division by zero is undefined, so there are no possible next steps in this case.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 7 12 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "13 18 13"
                }
            },
            "Step 1": {
                "Step": "6 + 12 = 18 (left: 13 18 13) -> 13 - 18 = -5 (left: -5 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 12 = 18 (left: 13 18 13) -> 13 - 18 = -5 (left: -5 13) -> -5 - 13 = -18 (left: -18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "2.16666666667 15.16666666667"
                }
            },
            "Step 3": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 / 6 = 2.16666666667 (left: 2.16666666667 13) -> 13 + 2.16666666667 = 15.16666666667 (left: 2.16666666667 15.16666666667) -> 15.16666666667 *",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 / 6 = 2.16666666667 (left: 2.16666666667 13) -> 13 + 2.16666666667 = 15.16666666667 (left: 2.16666666667 15.16666666667) -> 15.16666666667 * -> 15.16666666667 - 8 = 7.16666666667 (left: *)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "2.16666666667 15.16666666667"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "13 5"
                }
            },
            "Step 5": {
                "Step": "6 + 12 = 18 (left: 13 18 13) -> 18 - 13 = 5 (left: 13 5) -> 13 / 5 = 2.6 (left: 2.6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 12 = 18 (left: 13 18 13) -> 18 - 13 = 5 (left: 13 5) -> 13 / 5 = 2.6 (left: 2.6) -> Possible next steps:",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 12 = 18 (left: 13 18 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 13 13"
                }
            },
            "Step 1": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 6 - 13 = -7 (left: -7 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 6 - 13 = -7 (left: -7 13) -> -7 * 13 = -91 (left: -91)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "2.16666666667 15.16666666667"
                }
            },
            "Step 3": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 / 6 = 2.16666666667 (left: 2.16666666667 13) -> 13 + 2.16666666667 = 15.16666666667 (left: 2.16666666667 15.16666666667) -> 2.16666666667 * 15.16666666667 = 32.91666666667 (left: 32.91666666667)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "91"
                }
            },
            "Step 4": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 - 6 = 7 (left: 7 13) -> 7 * 13 = 91 (left: 91) -> 9 * 1 = 9 (left: 91 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "2.16666666667 15.16666666667"
                }
            },
            "Step 5": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 / 6 = 2.16666666667 (left: 2.16666666667 13) -> 13 + 2.16666666667 = 15.16666666667 (left: 2.16666666667 15.16666666667) -> 2.16666666667 / 15.166",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 / 6 = 2.16666666667 (left: 2.16666666667 13) -> 13 + 2.16666666667 = 15.16666666667 (left: 2.16666666667 15.16666666667) -> 2.16666666667 / 15.166 -> 2.16666666667 + 15.166 = 17.33266666667 (left: 17.33266666667)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "0.46296296297 32.833333"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "12 / 6 = 2 (left: 2 13 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 13 13"
                }
            },
            "Step 1": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 - 6 = 7 (left: 7 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 - 6 = 7 (left: 7 13) -> 7 * 13 = 91 (left: 91)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "2.16666666667 15.16666666667"
                }
            },
            "Step 3": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 / 6 = 2.16666666667 (left: 2.16666666667 13) -> 13 + 2.16666666667 = 15.16666666667 (left: 2.16666666667 15.16666666667) -> 2.16666666667 + 15.16666666667 = 17.33333333334 (left: 17.33333333334)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "13 18 13"
                }
            },
            "Step 4": {
                "Step": "6 + 12 = 18 (left: 13 18 13) -> 18 - 13 = 5 (left: 13 5)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "2.16666666667 15.16666666667"
                }
            },
            "Step 5": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 / 6 = 2.16666666667 (left: 2.16666666667 13) -> 13 + 2.16666666667 = 15.16666666667 (left: 2.16666666667 15.16666666667) -> 15.16666666667 - 2.16666666667 = 13 (left: 13 15.16666666667)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 / 6 = 2.16666666667 (left: 2.16666666667 13) -> 13 + 2.16666666667 = 15.16666666667 (left: 2.16666666667 15.16666666667) -> 15.16666666667 - 2.16666666667 = 13 (left: 13 15.16666666667) -> 13 - 15.16666666667 = -2.16666666667 (left: -2.16666666667)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "91 9"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 + 6 = 19 (left: 12 13 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 13 13"
                }
            },
            "Step 1": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 6 + 13 = 19 (left: 19 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 6 + 13 = 19 (left: 19 13) -> 19 - 13 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "2.16666666667 15.16666666667"
                }
            },
            "Step 3": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 / 6 = 2.16666666667 (left: 2.16666666667 13) -> 13 + 2.16666666667 = 15.16666666667 (left: 2.16666666667 15.16666666667) -> 2.16666666667 * 15.16666666667 = 32.8333333334 (left: 15.16666666667 32.833333",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 / 6 = 2.16666666667 (left: 2.16666666667 13) -> 13 + 2.16666666667 = 15.16666666667 (left: 2.16666666667 15.16666666667) -> 2.16666666667 * 15.16666666667 = 32.8333333334 (left: 15.16666666667 32.833333 -> 15.16666666667 / 32.833333 = 0.46296296297 (left: 0.46296296297 32.833333)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "2.16666666667 15.16666666667"
                }
            },
            "Step 5": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 / 6 = 2.16666666667 (left: 2.16666666667 13) -> 13 + 2.16666666667 = 15.16666666667 (left: 2.16666666667 15.16666666667) -> 15.166666",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "91"
                }
            },
            "Step 6": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 - 6 = 7 (left: 7 13) -> 7 * 13 = 91 (left: 91) -> There are no possible next steps with the input 91.",
                "Pruning": null
            }
        },
        "Input": "6 12 13 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "881": {
        "puzzle": "3 3 6 10",
        "Agent 0": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 9 6 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 6 10"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 * 6 = 60 (left: 6 60)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 * 6 = 60 (left: 6 60) -> 6 + 60 = 66 (left: 66)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (10 - 3 - 3) * 6 = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 6 6 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "22"
                }
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 + 6 = 16 (left: 6 16) -> 6 + 16 = 22 (left: 22) -> 22 * 2 = 44 (left: 8)"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 3 = 7 (left: 3 6 7)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 6 10"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 + 6 = 16 (left: 6 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 + 6 = 16 (left: 6 16) -> 6 + 16 = 22 (left: 22)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "22"
                }
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 6 + 6 = 12 (left: 10 12) -> 10 + 12 = 22 (left: 22) -> 22 / 2 = 11"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 6 6 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 6 10"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 6 + 6 = 12 (left: 10 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 6 + 6 = 12 (left: 10 12) -> 10 + 12 = 22 (left: 22)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "22"
                }
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 + 6 = 16 (left: 6 16) -> 6 + 16 = 22 (left: 22) -> 22 + 2 = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 9 6 ",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 6 10"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 / 6 = 1.67 (left: 1.67 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 / 6 = 1.67 (left: 1.67 6) -> 1.67 * 6 = 10.02 (left: 10.02)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (10 - 3) - (3 * 6) = 24"
            }
        },
        "Input": "3 3 6 10",
        "Verifications": [
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            }
        ]
    },
    "882": {
        "puzzle": "3 4 8 11",
        "Agent 0": {
            "Step 0": {
                "Step": "8 + 3 = 11 (left: 4 8 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "7 8 11"
                }
            },
            "Step 1": {
                "Step": "3 + 4 = 7 (left: 7 8 11) -> 7 * 8 = 56 (left: 11 56)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 4 = 7 (left: 7 8 11) -> 7 * 8 = 56 (left: 11 56) -> 11 + 56 = 67 (left: 67)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "2.667 8"
                }
            },
            "Step 3": {
                "Step": "3 + 4 = 7 (left: 7 8 11) -> 11 - 8 = 3 (left: 3 7 8) -> 8 / 3 = 2.667 (left: 2.667 8) -> 8 - 2.667 = 5.333 (left: 5.333)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "3 7 8"
                }
            },
            "Step 4": {
                "Step": "11 - 4 = 7 (left: 3 7 8) -> Input:",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "Input:"
                }
            },
            "Step 5": {
                "Step": "11 - 4 = 7 (left: 3 7 8) -> Input: -> There doesn't seem to be any input provided. Can you please provide the numbers for me to generate the possible next steps?",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 4 = 7 (left: 3 7 8) -> Input: -> There doesn't seem to be any input provided. Can you please provide the numbers for me to generate the possible next steps? -> I apologize for the oversight. Please provide the numbers for me to generate the possible next steps.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 + 3 = 11 (left: 4 11 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 7 8"
                }
            },
            "Step 1": {
                "Step": "11 - 4 = 7 (left: 3 7 8) -> 3 * 7 = 21 (left: 8 21)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 4 = 7 (left: 3 7 8) -> 3 * 7 = 21 (left: 8 21) -> 6 + 7 = 13 (left: 5 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "2.667 8"
                }
            },
            "Step 3": {
                "Step": "3 + 4 = 7 (left: 7 8 11) -> 11 - 8 = 3 (left: 3 7 8) -> 8 / 3 = 2.667 (left: 2.667 8) -> 8 - 2.667 = 5.333 (left: 5.333)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "4 11 "
                }
            },
            "Step 4": {
                "Step": "8 + 3 = 11 (left: 4 11  -> Input: 6 9 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "Input:"
                }
            },
            "Step 5": {
                "Step": "11 - 4 = 7 (left: 3 7 8) -> Input: -> Please provide a set of numbers to calculate possible next steps.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 4 = 7 (left: 3 7 8) -> Input: -> Please provide a set of numbers to calculate possible next steps. -> It appears that you did not provide a set of numbers for calculation. Please provide a set of numbers so that I can generate possible next steps for you.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 3 7 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "7 8 11"
                }
            },
            "Step 1": {
                "Step": "3 + 4 = 7 (left: 7 8 11) -> 11 - 8 = 3 (left: 3 7 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 4 = 7 (left: 7 8 11) -> 11 - 8 = 3 (left: 3 7 8) -> 8 / 3 = 2.667 (left: 2.667 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "2.667 8"
                }
            },
            "Step 3": {
                "Step": "3 + 4 = 7 (left: 7 8 11) -> 11 - 8 = 3 (left: 3 7 8) -> 8 / 3 = 2.667 (left: 2.667 8) -> 8 / 2.667 = 3 (left: 3 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 7 8 11) -> 11 - 8 = 3 (left: 3 7 8) -> 8 / 3 = 2.667 (left: 2.667 8) -> 8 / 2.667 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "5 13"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "Input:"
                }
            },
            "Step 5": {
                "Step": "11 - 4 = 7 (left: 3 7 8) -> Input: -> There is no input provided. Please provide a set of numbers to continue.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 4 = 7 (left: 3 7 8) -> Input: -> There is no input provided. Please provide a set of numbers to continue. -> Without an input provided, I am unable to generate possible next steps. Please provide a set of numbers for me to work with.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 8 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 7 8"
                }
            },
            "Step 1": {
                "Step": "11 - 4 = 7 (left: 3 7 8) -> 7 - 3 = 4 (left: 4 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 4 = 7 (left: 3 7 8) -> 7 - 3 = 4 (left: 4 8) -> 8 - 4 = 4 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "2.667 8"
                }
            },
            "Step 3": {
                "Step": "3 + 4 = 7 (left: 7 8 11) -> 11 - 8 = 3 (left: 3 7 8) -> 8 / 3 = 2.667 (left: 2.667 8) -> 2.667 * 8 = 21.336 (left: 8 21.336)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 7 8 11) -> 11 - 8 = 3 (left: 3 7 8) -> 8 / 3 = 2.667 (left: 2.667 8) -> 2.667 * 8 = 21.336 (left: 8 21.336) -> 8 - 21.336 = -13.336 (left: -13.336)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "2.75"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "Input:"
                }
            },
            "Step 5": {
                "Step": "11 - 4 = 7 (left: 3 7 8) -> Input: -> Please provide the input numbers for me to generate possible next steps.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 4 = 7 (left: 3 7 8) -> Input: -> Please provide the input numbers for me to generate possible next steps. -> It seems like you haven't provided the input numbers yet. Please provide the numbers so I can generate possible next steps for you.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 8 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 8 11"
                }
            },
            "Step 1": {
                "Step": "8 + 3 = 11 (left: 4 8 11) -> 11 - 4 = 7 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 + 3 = 11 (left: 4 8 11) -> 11 - 4 = 7 (left: -> 11 / 4 = 2.75 (left: 2.75)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "2.667 8"
                }
            },
            "Step 3": {
                "Step": "3 + 4 = 7 (left: 7 8 11) -> 11 - 8 = 3 (left: 3 7 8) -> 8 / 3 = 2.667 (left: 2.667 8) -> 8 - 2.667 = 5.333 (left: 5.333 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 7 8 11) -> 11 - 8 = 3 (left: 3 7 8) -> 8 / 3 = 2.667 (left: 2.667 8) -> 8 - 2.667 = 5.333 (left: 5.333 8) -> 5.333 + 8 = 13.333 (left: 13.333)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "67"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "Input:"
                }
            },
            "Step 5": {
                "Step": "11 - 4 = 7 (left: 3 7 8) -> Input: -> Please provide the input numbers for me to generate possible next steps.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 4 = 7 (left: 3 7 8) -> Input: -> Please provide the input numbers for me to generate possible next steps. -> Without specific input numbers, I am unable to generate possible next steps. Please provide the numbers you would like me to work with.",
                "Pruning": null
            }
        },
        "Input": "3 4 8 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "883": {
        "puzzle": "4 4 6 13",
        "Agent 0": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 6 16 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 10 13"
                }
            },
            "Step 1": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 4 + 10 = 14 (left: 14 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 4 + 10 = 14 (left: 14 13) -> 14 - 13 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1"
                }
            },
            "Step 3": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 4 + 10 = 14 (left: 14 13) -> 14 - 13 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 4 + 10 = 14 (left: 14 13) -> 14 - 13 = 1 (left: 1) -> 1 + 1 = 2 -> 1 / 1 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "5.2"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "2.15384615384 0.53846153846"
                }
            },
            "Step 5": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 4 + 10 = 14 (left: 14 13) -> 14 / 13 = 1.07692307692 (left: 1.07692307692) -> 1.07692307692 / 2 = 0.53846153846 -> 1.07692307692 * 2 = 2.15384615384 (left: 2.15384615384 0.53846153846) -> 2.153846",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "1"
                }
            },
            "Step 6": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 4 + 10 = 14 (left: 14 13) -> 14 - 13 = 1 (left: 1) -> 1 + 1 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "There are no possible next steps with just one number provided."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 4 = 10 (left: 4 10 13)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 10 13"
                }
            },
            "Step 1": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 13 - 10 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 13 - 10 =  -> 13 - 10 = 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1"
                }
            },
            "Step 3": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 4 + 10 = 14 (left: 14 13) -> 14 - 13 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 4 + 10 = 14 (left: 14 13) -> 14 - 13 = 1 (left: 1) -> 1 + 1 = 2 -> 1 + 1 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "75"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "2.15384615384 0.53846153846"
                }
            },
            "Step 5": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 4 + 10 = 14 (left: 14 13) -> 14 / 13 = 1.07692307692 (left: 1.07692307692) -> 1.07692307692 / 2 = 0.53846153846 -> 1.07692307692 * 2 = 2.15384615384 (left: 2.15384615384 0.53846153846) -> 2.15384615384 + 0.53846153846 = 2.6923076923 (left: 0.53846153846 2.6923076923)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 4 + 10 = 14 (left: 14 13) -> 14 / 13 = 1.07692307692 (left: 1.07692307692) -> 1.07692307692 / 2 = 0.53846153846 -> 1.07692307692 * 2 = 2.15384615384 (left: 2.15384615384 0.53846153846) -> 2.15384615384 + 0.53846153846 = 2.6923076923 (left: 0.53846153846 2.6923076923) -> 0.53846153846 + 2.6923076923 = 3.23076923076 (left: 3.23076923076)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "2.15384615384 0.53846153846"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 6 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 10 13"
                }
            },
            "Step 1": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> Input: 5 15",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> Input: 5 15 -> 5 * 15 = 75 (left: 75)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1.07692307692"
                }
            },
            "Step 3": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 4 + 10 = 14 (left: 14 13) -> 14 / 13 = 1.07692307692 (left: 1.07692307692) -> 1.07692307692 / 2 = 0.53846153846",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 4 + 10 = 14 (left: 14 13) -> 14 / 13 = 1.07692307692 (left: 1.07692307692) -> 1.07692307692 / 2 = 0.53846153846 -> 1.07692307692 * 2 = 2.15384615384 (left: 2.15384615384 0.53846153846)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "2.15384615384 0.53846153846"
                }
            },
            "Step 5": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 4 + 10 = 14 (left: 14 13) -> 14 / 13 = 1.07692307692 (left: 1.07692307692) -> 1.07692307692 / 2 = 0.53846153846 -> 1.07692307692 * 2 = 2.15384615384 (left: 2.15384615384 0.53846153846) -> 2.15384615384 + 0.53846153846 = 2.6923076923 (left: 2.6923076923)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "1"
                }
            },
            "Step 6": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 4 + 10 = 14 (left: 14 13) -> 14 - 13 = 1 (left: 1) -> There are no possible next steps with just one number provided.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 6 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 10 13"
                }
            },
            "Step 1": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 4 + 10 = 14 (left: 14 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 4 + 10 = 14 (left: 14 13) -> 14 / 13 = 1.07692307692 (left: 1.07692307692)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1"
                }
            },
            "Step 3": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 4 + 10 = 14 (left: 14 13) -> 14 - 13 = 1 (left: 1) -> There are no possible next steps with just the input of 1.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 4 + 10 = 14 (left: 14 13) -> 14 - 13 = 1 (left: 1) -> There are no possible next steps with just the input of 1. -> There are no possible next steps with just the input of 1.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "2.15384615384 0.53846153846"
                }
            },
            "Step 5": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 4 + 10 = 14 (left: 14 13) -> 14 / 13 = 1.07692307692 (left: 1.07692307692) -> 1.07692307692 / 2 = 0.53846153846 -> 1.07692307692 * 2 = 2.15384615384 (left: 2.15384615384 0.53846153846) -> 2.15384615384 / 0.53846153846 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "75"
                }
            },
            "Step 6": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> Input: 5 15 -> 5 * 15 = 75 (left: 75) -> There are no possible next steps for the number 75.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 + 4 = 8 (left: 6 8 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 10 13"
                }
            },
            "Step 1": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 10 / 4 = 2.5 (left: 2.5 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 10 / 4 = 2.5 (left: 2.5 13) -> 13 / 2.5 = 5.2 (left: 5.2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1"
                }
            },
            "Step 3": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 4 + 10 = 14 (left: 14 13) -> 14 - 13 = 1 (left: 1) -> 1 + 1 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "1"
                }
            },
            "Step 4": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 4 + 10 = 14 (left: 14 13) -> 14 - 13 = 1 (left: 1) -> There are no possible next steps with just one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "2.15384615384 0.53846153846"
                }
            },
            "Step 5": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 4 + 10 = 14 (left: 14 13) -> 14 / 13 = 1.07692307692 (left: 1.07692307692) -> 1.07692307692 / 2 = 0.53846153846 -> 1.07692307692 * 2 = 2.15384615384 (left: 2.15384615384 0.53846153846) -> 2.15384615384 + 0.53846153846 = 2.6923076923 (left: 0.53846153846 2.6923076923)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 4 + 10 = 14 (left: 14 13) -> 14 / 13 = 1.07692307692 (left: 1.07692307692) -> 1.07692307692 / 2 = 0.53846153846 -> 1.07692307692 * 2 = 2.15384615384 (left: 2.15384615384 0.53846153846) -> 2.15384615384 + 0.53846153846 = 2.6923076923 (left: 0.53846153846 2.6923076923) -> 2.6923076923 / 0.53846153846 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "There are no possible next steps with just one number provided."
                }
            }
        },
        "Input": "4 4 6 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "884": {
        "puzzle": "4 6 7 10",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 7 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10) -> 9 * 10 = 90 (left: 90)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (6 - 4) * (7 + 10) = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 - 4 = 2 (left: 2 7 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 10 - 7 = 3 (left: 2 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 10 - 7 = 3 (left: 2 3) -> 3 / 2 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (6 - 4) * 7 + 10 = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 / 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 7 10"
                }
            },
            "Step 1": {
                "Step": "7 - 4 = 3 (left: 3 7 10) -> 7 - 3 =",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 4 = 3 (left: 3 7 10) -> 7 - 3 = -> 7 - 3 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (6 - 4) * (7 + 10) = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 7 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 * 10 = 140 (left: 140)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (6 - 4) * (7 + 10) = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "7 - 4 = 3 (left: 3 7 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (6 - 4) * (7 + 10) = 24"
            }
        },
        "Input": "4 6 7 10",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "885": {
        "puzzle": "6 11 11 12",
        "Agent 0": {
            "Step 0": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1.83333 11 12"
                }
            },
            "Step 1": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 1.83333 + 11 = 12.83333 (left: 12 12.83333)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 1.83333 + 11 = 12.83333 (left: 12 12.83333) -> 12 + 12.83333 = 24.83333 (left: 24.83333)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "6 12"
                }
            },
            "Step 3": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 11 / 1.83333 = 6 (left: 6 12) -> 12 - 6 = 6 (left: 6 12) -> 6 + 12 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "-1"
                }
            },
            "Step 4": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 1 * 11 = 11 (left: 11 12) -> 11 - 12 = -1 (left: -1) -> Sorry, I cannot provide possible next steps without knowing the numbers to work with. Please provide a set of numbers for me to work with.",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "Sorry, I cannot provide possible next steps without knowing the numbers to work with. Please provide a set of numbers for me to work with."
                }
            },
            "Step 5": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 1 * 11 = 11 (left: 11 12) -> 11 - 12 = -1 (left: -1) -> Sorry, I cannot provide possible next steps without knowing the numbers to work with. Please provide a set of numbers for me to work with. -> Sorry, I cannot provide possible next steps without knowing the numbers to work with. Please provide a set of numbers for me to work with.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 1 * 11 = 11 (left: 11 12) -> 11 - 12 = -1 (left: -1) -> Sorry, I cannot provide possible next steps without knowing the numbers to work with. Please provide a set of numbers for me to work with. -> Sorry, I cannot provide possible next steps without knowing the numbers to work with. Please provide a set of numbers for me to work with. -> Sorry, I cannot provide possible next steps without knowing the numbers to work with. Please provide a set of numbers for me to work with.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 6 11 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 11 12"
                }
            },
            "Step 1": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 12 - 1 = 11 (left: 11 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 12 - 1 = 11 (left: 11 11) -> 11 * 11 = 121 (left: 121)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24.83333"
                }
            },
            "Step 3": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 1.83333 + 11 = 12.83333 (left: 12 12.83333) -> 12 + 12.83333 = 24.83333 (left: 24.83333) -> There are no possible next steps for the input 24.83333.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 1.83333 + 11 = 12.83333 (left: 12 12.83333) -> 12 + 12.83333 = 24.83333 (left: 24.83333) -> There are no possible next steps for the input 24.83333. -> 24.83333 rounded to the nearest whole numbers would be 25. ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "12 17"
                }
            },
            "Step 5": {
                "Step": "12 - 6 = 6 (left: 6 11 12) -> 11 + 6 = 17 (left: 12 17) -> 17 - 12 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 6 = 6 (left: 6 11 12) -> 11 + 6 = 17 (left: 12 17) -> 17 - 12 = 5 (left: 5) -> There are no possible next steps with just the number 5.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "11 / 6 = 1 (left: 1 11 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1.83333 11 12"
                }
            },
            "Step 1": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 11 / 1.83333 = 6 (left: 6 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 11 / 1.83333 = 6 (left: 6 12) -> 12 - 6 = 6 (left: 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "6 12"
                }
            },
            "Step 3": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 11 / 1.83333 = 6 (left: 6 12) -> 12 - 6 = 6 (left: 6 12) -> 6 + 12 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "6 11 12"
                }
            },
            "Step 4": {
                "Step": "12 - 6 = 6 (left: 6 11 12) -> 11 + 6 = 17 (left: 12 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "12 17"
                }
            },
            "Step 5": {
                "Step": "12 - 6 = 6 (left: 6 11 12) -> 11 + 6 = 17 (left: 12 17) -> 12 * 17 = 204 (left: 204)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 6 = 6 (left: 6 11 12) -> 11 + 6 = 17 (left: 12 17) -> 12 * 17 = 204 (left: 204) -> 20 - 4 = 16 (left: 16 0 4)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "11 + 6 = 17 (left: 11 12 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 11 12"
                }
            },
            "Step 1": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 1 * 11 = 11 (left: 11 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 1 * 11 = 11 (left: 11 12) -> 11 - 12 = -1 (left: -1)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24.83333"
                }
            },
            "Step 3": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 1.83333 + 11 = 12.83333 (left: 12 12.83333) -> 12 + 12.83333 = 24.83333 (left: 24.83333) -> Not enough numbers provided for further calculations.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 1.83333 + 11 = 12.83333 (left: 12 12.83333) -> 12 + 12.83333 = 24.83333 (left: 24.83333) -> Not enough numbers provided for further calculations. -> Please provide at least two numbers to continue the calculations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "17 23"
                }
            },
            "Step 5": {
                "Step": "11 + 6 = 17 (left: 11 12 17) -> 11 + 12 = 23 (left: 17 23) -> 17 / 23 = 0.73913043478 (left: 0.73913043478)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 + 6 = 17 (left: 11 12 17) -> 11 + 12 = 23 (left: 17 23) -> 17 / 23 = 0.73913043478 (left: 0.73913043478) -> 0.73913043478 * 2 = 1.47826086956",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "11 / 6 = 1 (left: 1 11 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1.83333 11 12"
                }
            },
            "Step 1": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 12 / 1.83333 = 6.54545 (left: 6.54545 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 12 / 1.83333 = 6.54545 (left: 6.54545 12) -> 6.54545 * 12 = 78.5454 (left: 78.5454)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "6 12"
                }
            },
            "Step 3": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 11 / 1.83333 = 6 (left: 6 12) -> 12 - 6 = 6 (left: 6 12) -> 6 + 12 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "11 12 17"
                }
            },
            "Step 4": {
                "Step": "11 + 6 = 17 (left: 11 12 17) -> 11 + 12 = 23 (left: 17 23)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "24.83333 rounded to the nearest whole numbers would be 25. "
                }
            },
            "Step 5": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 1.83333 + 11 = 12.83333 (left: 12 12.83333) -> 12 + 12.83333 = 24.83333 (left: 24.83333) -> There are no possible next steps for the input 24.83333. -> 24.83333 rounded to the nearest whole numbers would be 25.  -> There are no possible next steps as the number 24.83333 is already a decimal and cannot be further manipulated using simple arithmetic operations.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 1.83333 + 11 = 12.83333 (left: 12 12.83333) -> 12 + 12.83333 = 24.83333 (left: 24.83333) -> There are no possible next steps for the input 24.83333. -> 24.83333 rounded to the nearest whole numbers would be 25.  -> There are no possible next steps as the number 24.83333 is already a decimal and cannot be further manipulated using simple arithmetic operations. -> There are no possible next steps as the number 24.83333 is already a decimal and cannot be further manipulated using simple arithmetic operations.",
                "Pruning": null
            }
        },
        "Input": "6 11 11 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "886": {
        "puzzle": "3 6 9 11",
        "Agent 0": {
            "Step 0": {
                "Step": "6 / 3 = 2 (left: 2 9 11)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 9 11"
                }
            },
            "Step 1": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 11 - 9 = 2 (left: 2 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 11 - 9 = 2 (left: 2 2) -> 2 + 2 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1.67"
                }
            },
            "Step 3": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> Input: 3 5 -> 5 / 3 = 1.67 (left: 1.67) -> 1.67 + 2 = 3.67",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> Input: 3 5 -> 5 / 3 = 1.67 (left: 1.67) -> 1.67 + 2 = 3.67 -> 1.67 * 2 = 3.34",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "0.875 8"
                }
            },
            "Step 5": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 9 - 2 = 7 (left: 7) -> 7 / 8 = 0.875 (left: 0.875 8) -> 0.875 + 8 = 8.875 (left: 8.875)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "2 + 2 = 4"
                }
            },
            "Step 6": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 11 - 9 = 2 (left: 2 2) -> 2 + 2 = 4 -> 2 * 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "1.67 * 2 = 3.34"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 9 9 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 9 11"
                }
            },
            "Step 1": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> Input: 3 5",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> Input: 3 5 -> 5 / 3 = 1.67 (left: 1.67)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "2 + 2 = 4"
                }
            },
            "Step 3": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 11 - 9 = 2 (left: 2 2) -> 2 + 2 = 4 -> 2 - 2 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "2 + 2 = 4"
                }
            },
            "Step 4": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 11 - 9 = 2 (left: 2 2) -> 2 + 2 = 4 -> 4 / 2 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "0.875 8"
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "0.875 8"
                }
            },
            "Step 5": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 9 - 2 = 7 (left: 7) -> 7 / 8 = 0.875 (left: 0.875 8) -> 0.875 - ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 9 - 2 = 7 (left: 7) -> 7 / 8 = 0.875 (left: 0.875 8) -> 0.875 -  -> 0.875 - 2 = -1.125 (left: -1.125 -)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 / 3 = 2 (left: 2 9 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 9 11"
                }
            },
            "Step 1": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 9 - 2 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 9 - 2 = 7 (left: 7) -> 7 / 8 = 0.875 (left: 0.875 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "0.875 8"
                }
            },
            "Step 3": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 9 - 2 = 7 (left: 7) -> 7 / 8 = 0.875 (left: 0.875 8) -> 8 / 0.875 = 9.14285714286 (left: 9.14285714286)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "2 9 11"
                }
            },
            "Step 4": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 2 * 9 = 18 (left: 11 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "3.33 20"
                }
            },
            "Step 5": {
                "Step": "9 - 3 = 6 (left: 6 9 11) -> 9 + 11 = 20 (left: 6 20) -> 20 / 6 = 3.33 (left: 3.33 20) -> 20 / 3.33 = 6.006 (left: 6.006 20)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 3 = 6 (left: 6 9 11) -> 9 + 11 = 20 (left: 6 20) -> 20 / 6 = 3.33 (left: 3.33 20) -> 20 / 3.33 = 6.006 (left: 6.006 20) -> 20 - 6.006 = 13.994 (left: 13.994 20)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 3 = 6 (left: 6 9 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 9 11"
                }
            },
            "Step 1": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 11 - 2 = 9 (left: 9 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 11 - 2 = 9 (left: 9 11) -> 9 + 11 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "2 + 2 = 4"
                }
            },
            "Step 3": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 11 - 9 = 2 (left: 2 2) -> 2 + 2 = 4 -> 2 + 2 = 4",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 11 - 9 = 2 (left: 2 2) -> 2 + 2 = 4 -> 2 + 2 = 4 -> 2 / 2 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "3.33 20"
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "0.875 8"
                }
            },
            "Step 5": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 9 - 2 = 7 (left: 7) -> 7 / 8 = 0.875 (left: 0.875 8) -> 0.875 + 8 = 8.875 (left: 8.875)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "1.67"
                }
            },
            "Step 6": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> Input: 3 5 -> 5 / 3 = 1.67 (left: 1.67) -> There are no possible next steps for the input 1.67.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "11 - 3 = 8 (left: 6 8 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 9 11"
                }
            },
            "Step 1": {
                "Step": "9 - 3 = 6 (left: 6 9 11) -> 9 + 11 = 20 (left: 6 20)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 3 = 6 (left: 6 9 11) -> 9 + 11 = 20 (left: 6 20) -> 20 / 6 = 3.33 (left: 3.33 20)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "2 + 2 = 4"
                }
            },
            "Step 3": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 11 - 9 = 2 (left: 2 2) -> 2 + 2 = 4 -> 2 / 2 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "9 9 11"
                }
            },
            "Step 4": {
                "Step": "6 + 3 = 9 (left: 9 9 11) -> 11 - 9 = 2 (left: 9 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "3.33 20"
                }
            },
            "Step 5": {
                "Step": "9 - 3 = 6 (left: 6 9 11) -> 9 + 11 = 20 (left: 6 20) -> 20 / 6 = 3.33 (left: 3.33 20) -> 3.33 + 20 = 23.33 (left: 20 23.33)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 3 = 6 (left: 6 9 11) -> 9 + 11 = 20 (left: 6 20) -> 20 / 6 = 3.33 (left: 3.33 20) -> 3.33 + 20 = 23.33 (left: 20 23.33) -> 20 + 23.33 = 43.33 (left: 43.33)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "1.67 * 2 = 3.34"
                }
            }
        },
        "Input": "3 6 9 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "887": {
        "puzzle": "5 7 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "9 + 7 = 16 (left: 5 16 ",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 1": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 9 - 7 = 2 (left: 2 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 9 - 7 = 2 (left: 2 8) -> 8 - 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "6"
                }
            },
            "Step 3": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 9 - 7 = 2 (left: 2 8) -> 8 - 2 = 6 (left: 6) -> 6 + 14 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "9 12 13"
                }
            },
            "Step 4": {
                "Step": "5 + 7 = 12 (left: 9 12 13) -> 13 - 12 = 1 (left: 9 1)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "9 1"
                }
            },
            "Step 5": {
                "Step": "5 + 7 = 12 (left: 9 12 13) -> 13 - 12 = 1 (left: 9 1) -> 9 / 1 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 7 = 12 (left: 9 12 13) -> 13 - 12 = 1 (left: 9 1) -> 9 / 1 = 9 (left: 9) -> There are no possible next steps with the input 9.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 + 7 = 12 (left: 9 12 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 16 "
                }
            },
            "Step 1": {
                "Step": "9 + 7 = 16 (left: 5 16  -> 16 - 5 = 11 (left: 5 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 7 = 16 (left: 5 16  -> 16 - 5 = 11 (left: 5 11) -> 5 + 11 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "16"
                }
            },
            "Step 3": {
                "Step": "9 + 7 = 16 (left: 5 16  -> 16 - 5 = 11 (left: 5 11) -> 5 + 11 = 16 (left: 16) -> 16 + 16 = 32",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 + 7 = 16 (left: 5 16  -> 16 - 5 = 11 (left: 5 11) -> 5 + 11 = 16 (left: 16) -> 16 + 16 = 32 -> 16 / 16 = 1 (left: 1 16 32)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1 16 32"
                }
            },
            "Step 5": {
                "Step": "9 + 7 = 16 (left: 5 16  -> 16 - 5 = 11 (left: 5 11) -> 5 + 11 = 16 (left: 16) -> 16 + 16 = 32 -> 16 / 16 = 1 (left: 1 16 32) -> 16 * 1 = 16 (left: 16 32)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 7 = 16 (left: 5 16  -> 16 - 5 = 11 (left: 5 11) -> 5 + 11 = 16 (left: 16) -> 16 + 16 = 32 -> 16 / 16 = 1 (left: 1 16 32) -> 16 * 1 = 16 (left: 16 32) -> 32 / 16 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "1.125 * 9 = 10.125"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 - 7 = 2 (left: 5 2 13)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 1": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 8 / 9 = 0.8888888888888888 (left: ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 8 / 9 = 0.8888888888888888 (left:  -> It seems like you did not provide an input for the calculation. Could you please provide the numbers you would like to use for the next step?",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1. 9 / 8 = 1.125"
                }
            },
            "Step 3": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 9 / 8 =  -> 1. 9 / 8 = 1.125 -> 9 - 8 = 1 (left: 1 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 9 / 8 =  -> 1. 9 / 8 = 1.125 -> 9 - 8 = 1 (left: 1 8) -> 1 + 8 = 9 (left: 8 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1 16 32"
                }
            },
            "Step 5": {
                "Step": "9 + 7 = 16 (left: 5 16  -> 16 - 5 = 11 (left: 5 11) -> 5 + 11 = 16 (left: 16) -> 16 + 16 = 32 -> 16 / 16 = 1 (left: 1 16 32) -> 1 * 16 = 16 (left: 16 32)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 7 = 16 (left: 5 16  -> 16 - 5 = 11 (left: 5 11) -> 5 + 11 = 16 (left: 16) -> 16 + 16 = 32 -> 16 / 16 = 1 (left: 1 16 32) -> 1 * 16 = 16 (left: 16 32) -> 32 / 2 = 16 (left: 16 16",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 + 7 = 12 (left: 9 12 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 1": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 8 - 7 = 1 (left: 1 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 8 - 7 = 1 (left: 1 9) -> 9 - 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1. 9 / 8 = 1.125"
                }
            },
            "Step 3": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 9 / 8 =  -> 1. 9 / 8 = 1.125 -> 1.125 * 9 =",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 9 / 8 =  -> 1. 9 / 8 = 1.125 -> 1.125 * 9 = -> 1.125 * 9 = 10.125",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "9 1"
                }
            },
            "Step 5": {
                "Step": "5 + 7 = 12 (left: 9 12 13) -> 13 - 12 = 1 (left: 9 1) -> 9 - 1 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 7 = 12 (left: 9 12 13) -> 13 - 12 = 1 (left: 9 1) -> 9 - 1 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 - 5 = 8 (left: 7 8 9)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 1": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 9 / 8 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 9 / 8 =  -> 1. 9 / 8 = 1.125",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1. 9 / 8 = 1.125"
                }
            },
            "Step 3": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 9 / 8 =  -> 1. 9 / 8 = 1.125 -> 1 + 9 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "7 8 9"
                }
            },
            "Step 4": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 7 * 8 = 56 (left: 9 56)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "9 1"
                }
            },
            "Step 5": {
                "Step": "5 + 7 = 12 (left: 9 12 13) -> 13 - 12 = 1 (left: 9 1) -> 9 + 1 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 7 = 12 (left: 9 12 13) -> 13 - 12 = 1 (left: 9 1) -> 9 + 1 = 10 (left: 10) -> None",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "1.125 * 9 = 10.125"
                }
            }
        },
        "Input": "5 7 9 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "888": {
        "puzzle": "2 4 12 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 / 4 = 3 (left: 2 3 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 12 = 72 (left: 4 72)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 12 = 72 (left: 4 72) -> 72 - 4 = 68 (left: 68 72)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "2"
                }
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 * 6 = 24 (left: 24 12) -> 24 / 12 = 2 (left: 2) -> 2 + 2 = 4",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 * 6 = 24 (left: 24 12) -> 24 / 12 = 2 (left: 2) -> 2 + 2 = 4 -> 2 + 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "68 72"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "10 12"
                }
            },
            "Step 5": {
                "Step": "4 * 3 = 12 (left: 2 12 12) -> 12 - 2 = 10 (left: 10 12) -> 10 + 12 = 22 (left: 22)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 3 = 12 (left: 2 12 12) -> 12 - 2 = 10 (left: 10 12) -> 10 + 12 = 22 (left: 22) -> 22 + 2 = 24",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 6 12 12)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 12 12"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 - 6 = 6 (left: 6 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 - 6 = 6 (left: 6 12) -> 6 * 2 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "68 72"
                }
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 12 = 72 (left: 4 72) -> 72 - 4 = 68 (left: 68 72) -> 68 + 72 = 140 (left: 140)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "2 3 12"
                }
            },
            "Step 4": {
                "Step": "12 / 4 = 3 (left: 2 3 12) -> 12 - 3 = 9 (left: 2 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "2 9"
                }
            },
            "Step 5": {
                "Step": "12 / 4 = 3 (left: 2 3 12) -> 12 - 3 = 9 (left: 2 9) -> 9 - 2 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 4 = 3 (left: 2 3 12) -> 12 - 3 = 9 (left: 2 9) -> 9 - 2 = 7 (left: 7) -> 7 + 8 = 15 (left: 15)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 2 = 10 (left: 4 10 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 / 6 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 / 6 =  -> 6 - 4 = 2 (left: )",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "68 72"
                }
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 12 = 72 (left: 4 72) -> 72 - 4 = 68 (left: 68 72) -> 68 - 72 = -4 (left: -4)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "2 12 12"
                }
            },
            "Step 4": {
                "Step": "4 * 3 = 12 (left: 2 12 12) -> 12 - 2 = 10 (left: 10 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "2"
                }
            },
            "Step 5": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 * 6 = 24 (left: 24 12) -> 24 / 12 = 2 (left: 2) -> There are no possible next steps with only one number provided.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 * 6 = 24 (left: 24 12) -> 24 / 12 = 2 (left: 2) -> There are no possible next steps with only one number provided. -> Provide at least two numbers to perform operations on.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 * 3 = 12 (left: 2 12 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 * 6 = 24 (left: 24 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 * 6 = 24 (left: 24 12) -> 24 / 2 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "12"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 - 6 = 6 (left: 6 12) -> 6 * 2 = 12 (left: 12) -> 12 - 2 = 10 (left: 8 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 - 6 = 6 (left: 6 12) -> 6 * 2 = 12 (left: 12) -> 12 - 2 = 10 (left: 8 10) -> 10 / 8 = 1.25 (left: 1.25)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "2"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "10 12"
                }
            },
            "Step 5": {
                "Step": "4 * 3 = 12 (left: 2 12 12) -> 12 - 2 = 10 (left: 10 12) -> 10 * 12 = 120 (left: 120)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 3 = 12 (left: 2 12 12) -> 12 - 2 = 10 (left: 10 12) -> 10 * 12 = 120 (left: 120) -> No possible next steps as there is only one number provided.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 / 2 = 6 (left: 4 6 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 * 6 = 24 (left: 24 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 * 6 = 24 (left: 24 12) -> 24 / 12 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "68 72"
                }
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 12 = 72 (left: 4 72) -> 72 - 4 = 68 (left: 68 72) -> 68 * 72 = 4896 (left: 4896)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "12"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 - 6 = 6 (left: 6 12) -> 6 * 2 = 12 (left: 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": ""
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "2"
                }
            },
            "Step 5": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 * 6 = 24 (left: 24 12) -> 24 / 12 = 2 (left: 2) -> 2 * 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "68 72"
                }
            },
            "Step 6": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 12 = 72 (left: 4 72) -> 72 - 4 = 68 (left: 68 72) -> 68 - 72 = -4 (left: -4)",
                "Pruning": "NA"
            }
        },
        "Input": "2 4 12 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            }
        ]
    },
    "889": {
        "puzzle": "4 9 11 12",
        "Agent 0": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 11 12 36)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23) -> 23 - 13 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "105"
                }
            },
            "Step 3": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 11 - 2.25 = 8.75 (left: 8.75 12) -> 8.75 * 12 = 105 (left: 105) -> 105 - 2 = 103 (left: 2)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "105"
                }
            },
            "Step 4": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 11 - 2.25 = 8.75 (left: 8.75 12) -> 8.75 * 12 = 105 (left: 105) -> 105 + 2 = 107 (left: 2)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "1716"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 5": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 12 / 2.25 = 5. -> 12 - 5 = 7 (left: 5) -> There are no possible next steps with just one number. -> 6 / 2 = 3 (left: 3 8 12) -> 8 / 3 = 2.6666666666666665 (left: 2.6666666666666665 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 12 / 2.25 = 5. -> 12 - 5 = 7 (left: 5) -> There are no possible next steps with just one number. -> 6 / 2 = 3 (left: 3 8 12) -> 8 / 3 = 2.6666666666666665 (left: 2.6666666666666665 12) -> 12 - 2.6666666666666665 = 9.333333333333334 (left: 9.333333333333334)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "There are no possible next steps for the input 11.9091."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "11 + 4 = 15 (left: 9 12 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2.25 11 12"
                }
            },
            "Step 1": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 12 / 2.25 = 5.",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 12 / 2.25 = 5. -> 12 - 5 = 7 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "105"
                }
            },
            "Step 3": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 11 - 2.25 = 8.75 (left: 8.75 12) -> 8.75 * 12 = 105 (left: 105) -> 105 * 2 = 210",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 11 - 2.25 = 8.75 (left: 8.75 12) -> 8.75 * 12 = 105 (left: 105) -> 105 * 2 = 210 -> 105 - 2 = 103 (left: 103 210)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 5": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 12 / 2.25 = 5. -> 12 - 5 = 7 (left: 5) -> There are no possible next steps with just one number. -> 6 / 2 = 3 (left: 3 8 12) -> 8 - 3 = 5 (left: 5 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 12 / 2.25 = 5. -> 12 - 5 = 7 (left: 5) -> There are no possible next steps with just one number. -> 6 / 2 = 3 (left: 3 8 12) -> 8 - 3 = 5 (left: 5 12) -> 12 + 5 = 17 (left: 17)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "3 8 12"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 9 = 3 (left: 3 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2.25 11 12"
                }
            },
            "Step 1": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 11 - 2.25 = 8.75 (left: 8.75 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 11 - 2.25 = 8.75 (left: 8.75 12) -> 8.75 * 12 = 105 (left: 105)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "11.9091"
                }
            },
            "Step 3": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 / 11 = 1.0909 (left: 1.0909 13) -> 13 / 1.0909 = 11.9091 (left: 11.9091) -> 11.9091 * 2 = 23.8182",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 / 11 = 1.0909 (left: 1.0909 13) -> 13 / 1.0909 = 11.9091 (left: 11.9091) -> 11.9091 * 2 = 23.8182 -> 11.9091 / 2 = 5.95455",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 5": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 12 / 2.25 = 5. -> 12 - 5 = 7 (left: 5) -> There are no possible next steps with just one number. -> 6 / 2 = 3 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 12 / 2.25 = 5. -> 12 - 5 = 7 (left: 5) -> There are no possible next steps with just one number. -> 6 / 2 = 3 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4 12) -> 12 - 3 = 9 (left: 4 9)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 + 9 = 13 (left: 11 12 13)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132) -> 13 * 132 = 1716 (left: 1716)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "5"
                }
            },
            "Step 3": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 12 / 2.25 = 5. -> 12 - 5 = 7 (left: 5) -> There are no possible next steps with just one number.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 12 / 2.25 = 5. -> 12 - 5 = 7 (left: 5) -> There are no possible next steps with just one number. -> 6 / 2 = 3 (left: 3 8 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 5": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 12 / 2.25 = 5. -> 12 - 5 = 7 (left: 5) -> There are no possible next steps with just one number. -> 6 / 2 = 3 (left: 3 8 12) -> 3 + 8 = 11 (left: 11 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 12 / 2.25 = 5. -> 12 - 5 = 7 (left: 5) -> There are no possible next steps with just one number. -> 6 / 2 = 3 (left: 3 8 12) -> 3 + 8 = 11 (left: 11 12) -> 11 * 12 = 132 (left: 132) ",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "There are no possible next steps for the input 11.9091."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 / 11 = 1.0909 (left: 1.0909 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 / 11 = 1.0909 (left: 1.0909 13) -> 13 / 1.0909 = 11.9091 (left: 11.9091)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "105"
                }
            },
            "Step 3": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 11 - 2.25 = 8.75 (left: 8.75 12) -> 8.75 * 12 = 105 (left: 105) -> 1 - 0 - 5 = -4 (left: 105)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "11.9091"
                }
            },
            "Step 4": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 / 11 = 1.0909 (left: 1.0909 13) -> 13 / 1.0909 = 11.9091 (left: 11.9091) -> There are no possible next steps for the input 11.9091.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 5": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 12 / 2.25 = 5. -> 12 - 5 = 7 (left: 5) -> There are no possible next steps with just one number. -> 6 / 2 = 3 (left: 3 8 12) -> 8 - 3 = 5 (left: 5 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 12 / 2.25 = 5. -> 12 - 5 = 7 (left: 5) -> There are no possible next steps with just one number. -> 6 / 2 = 3 (left: 3 8 12) -> 8 - 3 = 5 (left: 5 12) -> 12 + 5 = 17 (left: 17)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "3 8 12"
                }
            }
        },
        "Input": "4 9 11 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "890": {
        "puzzle": "7 8 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 7 = 6 (left: 6 8 9)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "9 13 15"
                }
            },
            "Step 1": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 9 * 13 = 117 (left: 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 9 * 13 = 117 (left: 15) -> There are no possible next steps with just one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "-102"
                }
            },
            "Step 3": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 9 * 13 = 117 (left: 15 117) -> 15 - 117 = -102 (left: -102) -> -102 * 2 = -204 (left: -204)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "7 13 17"
                }
            },
            "Step 4": {
                "Step": "9 + 8 = 17 (left: 7 13 17) -> 13 - 7 = 6 (left: 6 17)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 9 * 13 = 117 (left: 15) -> There are no possible next steps with just one number. -> 9 - 3 = 6 (left: 6 9 12) -> 12 / 6 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "31.569"
                }
            },
            "Step 6": {
                "Step": "9 + 8 = 17 (left: 7 13 17) -> 13 / 7 = 1.857 (left: 1.857 17) -> 1.857 * 17 = 31.569 (left: 31.569) -> 2 + 5 =",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 + 8 = 15 (left: 9 13 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "7 13 17"
                }
            },
            "Step 1": {
                "Step": "9 + 8 = 17 (left: 7 13 17) -> 13 / 7 = 1.857 (left: 1.857 17)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 8 = 17 (left: 7 13 17) -> 13 / 7 = 1.857 (left: 1.857 17) -> 1.857 * 17 = 31.569 (left: 31.569)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "31.569"
                }
            },
            "Step 3": {
                "Step": "9 + 8 = 17 (left: 7 13 17) -> 13 / 7 = 1.857 (left: 1.857 17) -> 1.857 * 17 = 31.569 (left: 31.569) -> 9 - 0.5 =",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 + 8 = 17 (left: 7 13 17) -> 13 / 7 = 1.857 (left: 1.857 17) -> 1.857 * 17 = 31.569 (left: 31.569) -> 9 - 0.5 = -> 9 - 0.5 = 8.5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 9 * 13 = 117 (left: 15) -> There are no possible next steps with just one number. -> 9 - 3 = 6 (left: 6 9 12) -> 12 / 6 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "-9"
                }
            },
            "Step 6": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 15 - 9 = 6 (left: 6 15) -> 6 - 15 = -9 (left: -9) -> -9 + 8 = -1 (left: 8)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "Add another number to create a new equation."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 + 8 = 17 (left: 7 13 17)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "9 13 15"
                }
            },
            "Step 1": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 9 * 13 = 117 (left: 15 117)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 9 * 13 = 117 (left: 15 117) -> 15 - 117 = -102 (left: -102)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "There are no possible next steps with just one number."
                }
            },
            "Step 3": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 9 * 13 = 117 (left: 15) -> There are no possible next steps with just one number. -> There are no possible next steps with just one number.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 9 * 13 = 117 (left: 15) -> There are no possible next steps with just one number. -> There are no possible next steps with just one number. -> Add another number to create a new equation.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 9 * 13 = 117 (left: 15) -> There are no possible next steps with just one number. -> 9 - 3 = 6 (left: 6 9 12) -> 12 / 6 = 2 (left: 2 12) -> 12 + 2 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "There are no possible next steps with just one number."
                }
            },
            "Step 6": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 9 * 13 = 117 (left: 15) -> There are no possible next steps with just one number. -> There are no possible next steps with just one number.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 + 8 = 15 (left: 9 13 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "9 13 15"
                }
            },
            "Step 1": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 15 - 9 = 6 (left: 6 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 15 - 9 = 6 (left: 6 15) -> 6 - 15 = -9 (left: -9)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "There are no possible next steps with just one number."
                }
            },
            "Step 3": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 9 * 13 = 117 (left: 15) -> There are no possible next steps with just one number. -> 9 - 3 = 6 (left: 6 9 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 9 * 13 = 117 (left: 15) -> There are no possible next steps with just one number. -> 9 - 3 = 6 (left: 6 9 12) -> 12 / 6 = 2 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "6 17"
                }
            },
            "Step 5": {
                "Step": "9 + 8 = 17 (left: 7 13 17) -> 13 - 7 = 6 (left: 6 17) -> 17 / 6 = 2.83 (left: 2.83)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 8 = 17 (left: 7 13 17) -> 13 - 7 = 6 (left: 6 17) -> 17 / 6 = 2.83 (left: 2.83) -> There is only one number given in the input, so there are no possible next steps to perform any operations.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "9 - 8 = 1 (left: 7 1 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "9 13 15"
                }
            },
            "Step 1": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 15 - 13 = 2 (left: 2",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 15 - 13 = 2 (left: 2 -> There are no possible next steps with just the number 2.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "There are no possible next steps with just the number 2."
                }
            },
            "Step 3": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 15 - 13 = 2 (left: 2 -> There are no possible next steps with just the number 2. -> 2 + 2 = 4",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 15 - 13 = 2 (left: 2 -> There are no possible next steps with just the number 2. -> 2 + 2 = 4 -> 2 - 2 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "-102"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 9 * 13 = 117 (left: 15) -> There are no possible next steps with just one number. -> 9 - 3 = 6 (left: 6 9 12) -> 12 / 6 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "2 12"
                }
            },
            "Step 6": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 9 * 13 = 117 (left: 15) -> There are no possible next steps with just one number. -> 9 - 3 = 6 (left: 6 9 12) -> 12 / 6 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "Add another number to create a new equation."
                }
            }
        },
        "Input": "7 8 9 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "891": {
        "puzzle": "2 6 12 12",
        "Agent 0": {
            "Step 0": {
                "Step": "6 * 2 = 12 (left: 12 12 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "2 12 12"
                }
            },
            "Step 1": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 + 12 = 14 (left: 12 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 + 12 = 14 (left: 12 14) -> 12 + 14 = 26 (left: 26)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "2 2"
                }
            },
            "Step 3": {
                "Step": "12 / 6 = 2 (left: 2 2  -> 2 + 2 = 4 -> 2 + 2 - 2 = 2 (left: 2 2) -> 2 / 2 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "6 12"
                }
            },
            "Step 4": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 12 / 2 = 6 (left: 6 12 12) -> 12 - 6 = 6 (left: 6 12) -> 12 / 6 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "6 12"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "6 12"
                }
            },
            "Step 5": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 12 / 2 = 6 (left: 6 12 12) -> 12 - 6 = 6 (left: 6 12) -> 12 / 6 = 2 (left: 2 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 12 / 2 = 6 (left: 6 12 12) -> 12 - 6 = 6 (left: 6 12) -> 12 / 6 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "26 + 2 = 28"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 / 6 = 2 (left: 2 2 ",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "2 12 12"
                }
            },
            "Step 1": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 12 / 2 = 6 (left: 6 12 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 12 / 2 = 6 (left: 6 12 12) -> 12 - 6 = 6 (left: 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "26"
                }
            },
            "Step 3": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 + 12 = 14 (left: 12 14) -> 12 + 14 = 26 (left: 26) -> 26 * 2 = 52 (left: 52)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "26"
                }
            },
            "Step 4": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 + 12 = 14 (left: 12 14) -> 12 + 14 = 26 (left: 26) -> 26 + 2 = 28",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "144 / 2 = 72"
                }
            },
            "Step 5": {
                "Step": "6 * 2 = 12 (left: 12 12  -> 12 * 12 = 144 (left: 144)  -> 144 / 2 = 72 -> 144 - 72 = 72 (left: 72)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "26 + 2 = 28"
                }
            },
            "Step 6": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 + 12 = 14 (left: 12 14) -> 12 + 14 = 26 (left: 26) -> 26 + 2 = 28 -> 26 = 2 = 24 (left: 24 + 2 = 26)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 / 6 = 2 (left: 2 12 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 2 "
                }
            },
            "Step 1": {
                "Step": "12 / 6 = 2 (left: 2 2  -> 2 + 2 = 4",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 6 = 2 (left: 2 2  -> 2 + 2 = 4 -> 2 + 2 - 2 = 2 (left: 2 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "2 2"
                }
            },
            "Step 3": {
                "Step": "12 / 6 = 2 (left: 2 2  -> 2 + 2 = 4 -> 2 + 2 - 2 = 2 (left: 2 2) -> 2 - 2 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "6 12"
                }
            },
            "Step 4": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 12 / 2 = 6 (left: 6 12 12) -> 12 - 6 = 6 (left: 6 12) -> 6 + 12 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "6 12"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "26"
                }
            },
            "Step 5": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 + 12 = 14 (left: 12 14) -> 12 + 14 = 26 (left: 26) -> 26 * 2 = 52",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 + 12 = 14 (left: 12 14) -> 12 + 14 = 26 (left: 26) -> 26 * 2 = 52 -> 26 / 2 = 13 (left: 13 * 2 = 26)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 * 2 = 12 (left: 12 12 ",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "12 12 "
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 12 12  -> 12 * 12 = 144 (left: 144) ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 12 12  -> 12 * 12 = 144 (left: 144)  -> 144 / 2 = 72",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "2 2"
                }
            },
            "Step 3": {
                "Step": "12 / 6 = 2 (left: 2 2  -> 2 + 2 = 4 -> 2 + 2 - 2 = 2 (left: 2 2) -> 2 + 2 = 4",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 / 6 = 2 (left: 2 2  -> 2 + 2 = 4 -> 2 + 2 - 2 = 2 (left: 2 2) -> 2 + 2 = 4 -> 4 * 2 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "26"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "6 12"
                }
            },
            "Step 5": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 12 / 2 = 6 (left: 6 12 12) -> 12 - 6 = 6 (left: 6 12) -> 72 / 18 = 4 (left: 4 2 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 12 / 2 = 6 (left: 6 12 12) -> 12 - 6 = 6 (left: 6 12) -> 72 / 18 = 4 (left: 4 2 6) -> 6 / 2 = 3 (left: 4 3)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 / 2 = 6 (left: 6 12 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 12 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 6 12 12) -> 12 - 6 = 6 (left: 6 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 6 12 12) -> 12 - 6 = 6 (left: 6 12) -> 6 + 12 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "6 12"
                }
            },
            "Step 3": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 12 / 2 = 6 (left: 6 12 12) -> 12 - 6 = 6 (left: 6 12) -> 12 - 6 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "144 / 2 = 72"
                }
            },
            "Step 4": {
                "Step": "6 * 2 = 12 (left: 12 12  -> 12 * 12 = 144 (left: 144)  -> 144 / 2 = 72 -> 72 / 2 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "144 / 2 = 72"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "144 / 2 = 72"
                }
            },
            "Step 5": {
                "Step": "6 * 2 = 12 (left: 12 12  -> 12 * 12 = 144 (left: 144)  -> 144 / 2 = 72 -> 144 - 2 = 142 (left: 142)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "26"
                }
            },
            "Step 6": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 + 12 = 14 (left: 12 14) -> 12 + 14 = 26 (left: 26) -> 26 - 2 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "26 + 2 = 28"
                }
            }
        },
        "Input": "2 6 12 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "892": {
        "puzzle": "3 4 5 6",
        "Agent 0": {
            "Step 0": {
                "Step": "3 * 4 = 12 (left: 5 6 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 4 11"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 3 4 11) -> 11 - 3 = 8 (left: 3 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 3 4 11) -> 11 - 3 = 8 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "6.67 13.33"
                }
            },
            "Step 3": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 20 / 3 = 6.67 (left: 6.67 20) -> 20 - 6.67 = 13.33 (left: 6.67 13.33) -> 2",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "3 6 20"
                }
            },
            "Step 4": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 3 + 6 = 9 (left: 9 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "9 20"
                }
            },
            "Step 5": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 3 + 6 = 9 (left: 9 20) -> Input: 5 15",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 3 + 6 = 9 (left: 9 20) -> Input: 5 15 -> Input: 3 9",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 5 = 20 (left: 3 6 20)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 6 20"
                }
            },
            "Step 1": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 3 * 6 = 18 (left: 18 20)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 3 * 6 = 18 (left: 18 20) -> 18 + 20 = 38 (left: 38)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "6.67 13.33"
                }
            },
            "Step 3": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 20 / 3 = 6.67 (left: 6.67 20) -> 20 - 6.67 = 13.33 (left: 6.67 13.33) -> 13.33 - 6.67 = 6.659999999999999 (left: 6.659999999999999)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "11"
                }
            },
            "Step 4": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 6 + 3 = 9 (left: 9 20) -> 20 - 9 = 11 (left: 11) -> There are no possible next steps as there are no other numbers given to perform operations with.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "8 4"
                }
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 3 4 11) -> 11 - 3 = 8 (left: 8 4) -> 8 - 4 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 3 4 11) -> 11 - 3 = 8 (left: 8 4) -> 8 - 4 = 4 (left: 4) -> 4 + 4 = 8",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 * 5 = 20 (left: 3 6 20)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 6 20"
                }
            },
            "Step 1": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 6 + 3 = 9 (left: 9 20)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 6 + 3 = 9 (left: 9 20) -> 20 - 9 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "6.67 13.33"
                }
            },
            "Step 3": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 20 / 3 = 6.67 (left: 6.67 20) -> 20 - 6.67 = 13.33 (left: 6.67 13.33) -> 6.67 + 13.33 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "38"
                }
            },
            "Step 4": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 3 * 6 = 18 (left: 18 20) -> 18 + 20 = 38 (left: 38) -> 3 + 8 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "38"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "8 4"
                }
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 3 4 11) -> 11 - 3 = 8 (left: 8 4) -> 8 + 4 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 3 4 11) -> 11 - 3 = 8 (left: 8 4) -> 8 + 4 = 12 (left: 12) -> 4 + 8 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "There are no possible next steps as there are no other numbers given to perform operations with."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 3 4 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 6 12"
                }
            },
            "Step 1": {
                "Step": "3 * 4 = 12 (left: 5 6 12) -> 12 / 6 = 2 (left: 5 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 4 = 12 (left: 5 6 12) -> 12 / 6 = 2 (left: 5 2) -> 5 - 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "6.67 13.33"
                }
            },
            "Step 3": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 20 / 3 = 6.67 (left: 6.67 20) -> 20 - 6.67 = 13.33 (left: 6.67 13.33) -> 13.33 / 6.67 = 1.995 (left: 1.995)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "3 6 20"
                }
            },
            "Step 4": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 20 / 6 = 3.33 (left: 3.33)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "3.33"
                }
            },
            "Step 5": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 20 / 6 = 3.33 (left: 3.33) -> There are no possible next steps with the input \"3.33\" as it is already a single number.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 20 / 6 = 3.33 (left: 3.33) -> There are no possible next steps with the input \"3.33\" as it is already a single number. -> N/A",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "There are no possible next steps as there are no other numbers given to perform operations with."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 * 5 = 20 (left: 3 6 20)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 6 20"
                }
            },
            "Step 1": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 20 / 3 = 6.67 (left: 6.67 20)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 20 / 3 = 6.67 (left: 6.67 20) -> 20 - 6.67 = 13.33 (left: 6.67 13.33)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "6.67 13.33"
                }
            },
            "Step 3": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 20 / 3 = 6.67 (left: 6.67 20) -> 20 - 6.67 = 13.33 (left: 6.67 13.33) -> 13.33 - 6.67 = 6.66 (left: 6.66)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "3 4 11"
                }
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 3 4 11) -> 11 - 3 = 8 (left: 8 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "8 4"
                }
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 3 4 11) -> 11 - 3 = 8 (left: 8 4) -> 8 * 4 = 32 (left: 32)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 3 4 11) -> 11 - 3 = 8 (left: 8 4) -> 8 * 4 = 32 (left: 32) -> There are no possible next steps with the input of 32.",
                "Pruning": null
            }
        },
        "Input": "3 4 5 6",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "893": {
        "puzzle": "6 10 12 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 6 10 ",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "12 16 12"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 16 - 12 = 4 (left: 12 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 16 - 12 = 4 (left: 12 4) -> 12 - 4 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2.33"
                }
            },
            "Step 3": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 28 12) -> 28 / 12 = 2.33 (left: 2.33) -> 2.33 * 2 = 4.66",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 28 12) -> 28 / 12 = 2.33 (left: 2.33) -> 2.33 * 2 = 4.66 -> 2.33 - 2 = 0.33 (left: 0.33)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "-1.66666666667"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "6 / 0 = undefined"
                }
            },
            "Step 5": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 12 28) -> 12 * 28 = 336 (left: 336) -> 3 - 3 = 0 (left: 0 6) -> 6 / 0 = undefined -> Division by zero is undefined.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 12 28) -> 12 * 28 = 336 (left: 336) -> 3 - 3 = 0 (left: 0 6) -> 6 / 0 = undefined -> Division by zero is undefined. -> There are no possible next steps when division by zero is involved.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 / 2 = 6 (left: 6 10 ",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "12 16 12"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 28 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 28 12) -> 28 / 12 = 2.33 (left: 2.33)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "336"
                }
            },
            "Step 3": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 12 28) -> 12 * 28 = 336 (left: 336) -> 3 - 3 = 0 (left: 0 6)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 12 28) -> 12 * 28 = 336 (left: 336) -> 3 - 3 = 0 (left: 0 6) -> 6 / 0 = undefined",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "2 22"
                }
            },
            "Step 5": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 28 12) -> 28 + 12 = 40 (left: 40) -> There is only one possible next step: -> 8 + 14 = 22 (left: 2 22) -> 22 / 2 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "336"
                }
            },
            "Step 6": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 12 28) -> 12 * 28 = 336 (left: 336) -> 33 *",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "12 16 12"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 12 28)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 12 28) -> 12 * 28 = 336 (left: 336)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "8"
                }
            },
            "Step 3": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 16 - 12 = 4 (left: 12 4) -> 12 - 4 = 8 (left: 8) -> 8 / 8 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "12 16 12"
                }
            },
            "Step 4": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 16 / 12 = 1.33 (left: 1.33 12)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "2 22"
                }
            },
            "Step 5": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 28 12) -> 28 + 12 = 40 (left: 40) -> There is only one possible next step: -> 8 + 14 = 22 (left: 2 22) -> 2 + 22 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "40"
                }
            },
            "Step 6": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 28 12) -> 28 + 12 = 40 (left: 40) -> None - only one number provided.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 + 10 = 16 (left: 12 16 12)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "12 16 12"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 28 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 28 12) -> 28 + 12 = 40 (left: 40)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2.33"
                }
            },
            "Step 3": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 28 12) -> 28 / 12 = 2.33 (left: 2.33) -> 2.33 + 2 = 4.33 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 28 12) -> 28 / 12 = 2.33 (left: 2.33) -> 2.33 + 2 = 4.33  -> 2.33 / 2 = 1.165",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "2.33 / 2 = 1.165"
                }
            },
            "Step 5": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 28 12) -> 28 / 12 = 2.33 (left: 2.33) -> 2.33 + 2 = 4.33  -> 2.33 / 2 = 1.165 -> 2.33 + 2 = 4.33",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 28 12) -> 28 / 12 = 2.33 (left: 2.33) -> 2.33 + 2 = 4.33  -> 2.33 / 2 = 1.165 -> 2.33 + 2 = 4.33 -> 2 / 2 = 1 (left: 2.33 1)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 10 = 16 (left: 12 16 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1.66666666667 12 12"
                }
            },
            "Step 1": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 1.66666666667 + 12 = 13.66666666667 (left: 12 13.66666666667)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 1.66666666667 + 12 = 13.66666666667 (left: 12 13.66666666667) -> 12 - 13.66666666667 = -1.66666666667 (left: -1.66666666667)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "40"
                }
            },
            "Step 3": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 28 12) -> 28 + 12 = 40 (left: 40) -> There is only one possible next step:",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 28 12) -> 28 + 12 = 40 (left: 40) -> There is only one possible next step: -> 8 + 14 = 22 (left: 2 22)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "2.33 / 2 = 1.165"
                }
            },
            "Step 5": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 28 12) -> 28 / 12 = 2.33 (left: 2.33) -> 2.33 + 2 = 4.33  -> 2.33 / 2 = 1.165 -> 2.33 / 2.33 = 1",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 28 12) -> 28 / 12 = 2.33 (left: 2.33) -> 2.33 + 2 = 4.33  -> 2.33 / 2 = 1.165 -> 2.33 / 2.33 = 1 -> There are no possible next steps as the result is already calculated.",
                "Pruning": null
            }
        },
        "Input": "6 10 12 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "894": {
        "puzzle": "5 5 5 9",
        "Agent 0": {
            "Step 0": {
                "Step": "5 / 5 = 1 (left: 1 5 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "5 10 9"
                }
            },
            "Step 1": {
                "Step": "5 + 5 = 10 (left: 5 10 9) -> 5 * 10 = 50 (left: 9 50)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 5 = 10 (left: 5 10 9) -> 5 * 10 = 50 (left: 9 50) -> 9 * 50 = 450 (left: 450)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "450"
                }
            },
            "Step 3": {
                "Step": "5 + 5 = 10 (left: 5 10 9) -> 5 * 10 = 50 (left: 9 50) -> 9 * 50 = 450 (left: 450) -> 450 * 2 = 900",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 5 = 10 (left: 5 10 9) -> 5 * 10 = 50 (left: 9 50) -> 9 * 50 = 450 (left: 450) -> 450 * 2 = 900 -> 450 + 2 = 452 (left: 452 * 2 = 904)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "4"
                }
            },
            "Step 5": {
                "Step": "5 + 5 = 10 (left: 5 10 9) -> 10 - 5 = 5 (left: 5 9) -> 9 - 5 = 4 (left: 4) -> 4 * 2 = 8",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 5 = 10 (left: 5 10 9) -> 10 - 5 = 5 (left: 5 9) -> 9 - 5 = 4 (left: 4) -> 4 * 2 = 8 -> 4 + 2 = 6 (left: 6 8)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 - 5 = 4 (left: 5 5 4)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "5 10 9"
                }
            },
            "Step 1": {
                "Step": "5 + 5 = 10 (left: 5 10 9) -> 9 - 5 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 5 = 10 (left: 5 10 9) -> 9 - 5 =  -> 9 - 5 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "7"
                }
            },
            "Step 3": {
                "Step": "5 + 5 = 10 (left: 5 10 9) -> 10 / 5 = 2 (left: 9 2) -> 9 - 2 = 7 (left: 7) -> 7 * 8 = 56 (left: 8 56)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 5 = 10 (left: 5 10 9) -> 10 / 5 = 2 (left: 9 2) -> 9 - 2 = 7 (left: 7) -> 7 * 8 = 56 (left: 8 56) -> 8 * 7 = 56 (left: 56)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "4"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "7"
                }
            },
            "Step 5": {
                "Step": "5 + 5 = 10 (left: 5 10 9) -> 10 / 5 = 2 (left: 9 2) -> 9 - 2 = 7 (left: 7) -> 7 * 8 = 56 (left: 56)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "0.7142857142857143"
                }
            },
            "Step 6": {
                "Step": "5 + 5 = 10 (left: 5 10 9) -> 9 + 5 = 14 (left: 10 14) -> 10 / 14 = 0.7142857142857143 (left: 0.7142857142857143) -> 0.7142857142857143 / 2 = 0.35714285714285715",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 + 5 = 10 (left: 5 10 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 10 9"
                }
            },
            "Step 1": {
                "Step": "5 + 5 = 10 (left: 5 10 9) -> 10 / 5 = 2 (left: 9 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 5 = 10 (left: 5 10 9) -> 10 / 5 = 2 (left: 9 2) -> 9 - 2 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "7"
                }
            },
            "Step 3": {
                "Step": "5 + 5 = 10 (left: 5 10 9) -> 10 / 5 = 2 (left: 9 2) -> 9 - 2 = 7 (left: 7) -> 7 - 8 = -1 (left: -1 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 5 = 10 (left: 5 10 9) -> 10 / 5 = 2 (left: 9 2) -> 9 - 2 = 7 (left: 7) -> 7 - 8 = -1 (left: -1 8) -> -1 / 8 = -0.125 (left: -0.125)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "7"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "9 - 5 = 4"
                }
            },
            "Step 5": {
                "Step": "5 + 5 = 10 (left: 5 10 9) -> 9 - 5 =  -> 9 - 5 = 4 -> 5 - 9 = -4 (left: -4 = 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 5 = 10 (left: 5 10 9) -> 9 - 5 =  -> 9 - 5 = 4 -> 5 - 9 = -4 (left: -4 = 4) -> -4 - -8 = 4 (left: -8 = 4)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 / 5 = 1 (left: 1 5 9)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "5 10 9"
                }
            },
            "Step 1": {
                "Step": "5 + 5 = 10 (left: 5 10 9) -> 9 + 5 = 14 (left: 10 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 5 = 10 (left: 5 10 9) -> 9 + 5 = 14 (left: 10 14) -> 10 / 14 = 0.7142857142857143 (left: 0.7142857142857143)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "9 - 5 = 4"
                }
            },
            "Step 3": {
                "Step": "5 + 5 = 10 (left: 5 10 9) -> 9 - 5 =  -> 9 - 5 = 4 -> 9 / 5 = 1.8 (left: 1.8 4)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 5 = 10 (left: 5 10 9) -> 9 - 5 =  -> 9 - 5 = 4 -> 9 / 5 = 1.8 (left: 1.8 4) -> 1.8 / 4 = 0.45 (left: 0.45)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "9 - 5 = 4"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "9 - 5 = 4"
                }
            },
            "Step 5": {
                "Step": "5 + 5 = 10 (left: 5 10 9) -> 9 - 5 =  -> 9 - 5 = 4 -> 9 + 5 = 14 (left: 14 = 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 5 = 10 (left: 5 10 9) -> 9 - 5 =  -> 9 - 5 = 4 -> 9 + 5 = 14 (left: 14 = 4) -> 14 - 4 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "452 * 2 = 904"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 + 5 = 10 (left: 5 10 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 10 9"
                }
            },
            "Step 1": {
                "Step": "5 + 5 = 10 (left: 5 10 9) -> 10 - 5 = 5 (left: 5 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 5 = 10 (left: 5 10 9) -> 10 - 5 = 5 (left: 5 9) -> 9 - 5 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "9 - 5 = 4"
                }
            },
            "Step 3": {
                "Step": "5 + 5 = 10 (left: 5 10 9) -> 9 - 5 =  -> 9 - 5 = 4 -> 5 + 9 = 14 (left: 4 14)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 5 = 10 (left: 5 10 9) -> 9 - 5 =  -> 9 - 5 = 4 -> 5 + 9 = 14 (left: 4 14) -> 14 - 4 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "4"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "452 * 2 = 904"
                }
            },
            "Step 5": {
                "Step": "5 + 5 = 10 (left: 5 10 9) -> 5 * 10 = 50 (left: 9 50) -> 9 * 50 = 450 (left: 450) -> 450 * 2 = 900 -> 450 + 2 = 452 (left: 452 * 2 = 904) -> 452 / 2 = 226 (left: 226 * 2 = 452)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 5 = 10 (left: 5 10 9) -> 5 * 10 = 50 (left: 9 50) -> 9 * 50 = 450 (left: 450) -> 450 * 2 = 900 -> 450 + 2 = 452 (left: 452 * 2 = 904) -> 452 / 2 = 226 (left: 226 * 2 = 452) -> 226 / 2 = 113 (left: 113)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "452 * 2 = 904"
                }
            }
        },
        "Input": "5 5 5 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "895": {
        "puzzle": "5 5 6 11",
        "Agent 0": {
            "Step 0": {
                "Step": "5 + 5 = 10 (left: 6 10 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 5 "
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 5  -> 5 / 1 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 5  -> 5 / 1 = 5 (left: 5) -> There are no possible next steps with just the number 5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "11 + 1.66666666667 = 12.666666666"
                }
            },
            "Step 3": {
                "Step": "5 + 5 = 10 (left: 6 10 11) -> 10 / 6 = 1.66666666667 (left: 1.66666666667 11) -> 11 + 1.66666666667 = 12.666666666 -> 11 / 1.66666666667 = 6.6 (left: 6.6)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "1 5 "
                }
            },
            "Step 4": {
                "Step": "6 - 5 = 1 (left: 1 5  -> 1 + 5 = 6 (left: 6) ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1 10"
                }
            },
            "Step 5": {
                "Step": "6 - 5 = 1 (left: 1 5  -> 5 / 1 = 5 (left: 5) -> There are no possible next steps with just the number 5. -> 5 + 5 = 10 -> 5 / 5 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "There is not enough information to determine the next steps without additional numbers or operations."
                }
            },
            "Step 6": {
                "Step": "6 - 5 = 1 (left: 1 5  -> 1 * 5 = 5 (left: 5) -> There is not enough information to determine the next steps without additional numbers or operations. -> 14 / 2 = 7 (left: 2 7 8)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 * 5 = 25 (left: 6 11 25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 5 "
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 5  -> 1 * 5 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 5  -> 1 * 5 = 5 (left: 5) -> There is not enough information to determine the next steps without additional numbers or operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "There is not enough information to determine the next steps without additional numbers or operations."
                }
            },
            "Step 3": {
                "Step": "6 - 5 = 1 (left: 1 5  -> 1 * 5 = 5 (left: 5) -> There is not enough information to determine the next steps without additional numbers or operations. -> 5 * 2 = 10 (left: 3",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "There is not enough information to determine the next steps without additional numbers or operations."
                }
            },
            "Step 4": {
                "Step": "6 - 5 = 1 (left: 1 5  -> 1 * 5 = 5 (left: 5) -> There is not enough information to determine the next steps without additional numbers or operations. -> 20 - 10 = 10 (left: 5 10 10)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1 10"
                }
            },
            "Step 5": {
                "Step": "6 - 5 = 1 (left: 1 5  -> 5 / 1 = 5 (left: 5) -> There are no possible next steps with just the number 5. -> 5 + 5 = 10 -> 5 / 5 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "There is not enough information to determine the next steps without additional numbers or operations."
                }
            },
            "Step 6": {
                "Step": "6 - 5 = 1 (left: 1 5  -> 1 * 5 = 5 (left: 5) -> There is not enough information to determine the next steps without additional numbers or operations. -> 5 * 2 = 10 (left: 8 10 14)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 5 = 11 (left: 5 11 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 5 "
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 5  -> 1 + 5 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 5  -> 1 + 5 = 6 (left: 6) -> 6 / 8 = 0.75 (left: 0.75)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "There are no possible next steps with just the number 5."
                }
            },
            "Step 3": {
                "Step": "6 - 5 = 1 (left: 1 5  -> 5 / 1 = 5 (left: 5) -> There are no possible next steps with just the number 5. -> 5 + 5 = 10",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 - 5 = 1 (left: 1 5  -> 5 / 1 = 5 (left: 5) -> There are no possible next steps with just the number 5. -> 5 + 5 = 10 -> 5 / 5 = 1 (left: 1 10)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1 10"
                }
            },
            "Step 5": {
                "Step": "6 - 5 = 1 (left: 1 5  -> 5 / 1 = 5 (left: 5) -> There are no possible next steps with just the number 5. -> 5 + 5 = 10 -> 5 / 5 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "There are no possible next steps with just the number 5."
                }
            },
            "Step 6": {
                "Step": "6 - 5 = 1 (left: 1 5  -> 5 / 1 = 5 (left: 5) -> There are no possible next steps with just the number 5. -> There are no possible next steps with just the number 5. -> There are no possible next steps with just the number 5. -> There are no possible next steps with just the number 5.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 - 5 = 1 (left: 1 5 ",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 10 11"
                }
            },
            "Step 1": {
                "Step": "5 + 5 = 10 (left: 6 10 11) -> 10 + 11 = 21 (left: 6 21)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 5 = 10 (left: 6 10 11) -> 10 + 11 = 21 (left: 6 21) -> 6 + 21 = 27 (left: 27)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "11 + 1.66666666667 = 12.666666666"
                }
            },
            "Step 3": {
                "Step": "5 + 5 = 10 (left: 6 10 11) -> 10 / 6 = 1.66666666667 (left: 1.66666666667 11) -> 11 + 1.66666666667 = 12.666666666 -> 11 * 1.66666666667 = 18.3333333334 (left: 18.3333333334 1.66666666667 12.666666666)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 5 = 10 (left: 6 10 11) -> 10 / 6 = 1.66666666667 (left: 1.66666666667 11) -> 11 + 1.66666666667 = 12.666666666 -> 11 * 1.66666666667 = 18.3333333334 (left: 18.3333333334 1.66666666667 12.666666666) -> 1.66666666667 * 12.666666666 = 21.11111111124 (left: 18.3333333334 21.11111111124)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1 10"
                }
            },
            "Step 5": {
                "Step": "6 - 5 = 1 (left: 1 5  -> 5 / 1 = 5 (left: 5) -> There are no possible next steps with just the number 5. -> 5 + 5 = 10 -> 5 / 5 = 1 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "There are no possible next steps with just the number 5."
                }
            },
            "Step 6": {
                "Step": "6 - 5 = 1 (left: 1 5  -> 5 / 1 = 5 (left: 5) -> There are no possible next steps with just the number 5. -> There are no possible next steps with just the number 5. -> There are no possible next steps with just the number 5. -> There are no possible next steps with just the number 5.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 + 5 = 10 (left: 6 10 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 10 11"
                }
            },
            "Step 1": {
                "Step": "5 + 5 = 10 (left: 6 10 11) -> 10 / 6 = 1.66666666667 (left: 1.66666666667 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 5 = 10 (left: 6 10 11) -> 10 / 6 = 1.66666666667 (left: 1.66666666667 11) -> 11 + 1.66666666667 = 12.666666666",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "There are no possible next steps with just the number 5."
                }
            },
            "Step 3": {
                "Step": "6 - 5 = 1 (left: 1 5  -> 5 / 1 = 5 (left: 5) -> There are no possible next steps with just the number 5. -> There are no possible next steps with just the number 5.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 - 5 = 1 (left: 1 5  -> 5 / 1 = 5 (left: 5) -> There are no possible next steps with just the number 5. -> There are no possible next steps with just the number 5. -> There are no possible next steps with just the number 5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1 10"
                }
            },
            "Step 5": {
                "Step": "6 - 5 = 1 (left: 1 5  -> 5 / 1 = 5 (left: 5) -> There are no possible next steps with just the number 5. -> 5 + 5 = 10 -> 5 / 5 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "There is not enough information to determine the next steps without additional numbers or operations."
                }
            },
            "Step 6": {
                "Step": "6 - 5 = 1 (left: 1 5  -> 1 * 5 = 5 (left: 5) -> There is not enough information to determine the next steps without additional numbers or operations. -> Input: 2 8 8 14 6",
                "Pruning": null
            }
        },
        "Input": "5 5 6 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "896": {
        "puzzle": "6 8 9 9",
        "Agent 0": {
            "Step 0": {
                "Step": "6 + 8 = 14 (left: 9 9 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 1 9"
                }
            },
            "Step 1": {
                "Step": "9 - 8 = 1 (left: 6 1 9) -> Input: 5 2 7",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 8 = 1 (left: 6 1 9) -> Input: 5 2 7 -> 5 + 2 = 7 (left: 7 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "4 9"
                }
            },
            "Step 3": {
                "Step": "9 - 8 = 1 (left: 6 1 9) -> 9 / 1 = 9 (left: -> 5 + 4 = 9 (left: 4 9) -> Possible next steps:",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 8 = 1 (left: 6 1 9) -> 9 / 1 = 9 (left: -> 5 + 4 = 9 (left: 4 9) -> Possible next steps: -> There are no possible next steps as the input is already in its simplest form.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 9"
                }
            },
            "Step 5": {
                "Step": "9 - 8 = 1 (left: 6 1 9) -> 9 / 1 = 9 (left: -> 5 + 4 = 9 (left: 4 9) -> 4 * 9 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "There are no possible next steps provided in the input."
                }
            },
            "Step 6": {
                "Step": "9 - 8 = 1 (left: 6 1 9) -> 9 / 1 = 9 (left: -> 5 + 4 = 9 (left: 4 9) -> Possible next steps: -> There are no possible next steps provided in the input. -> There are no possible next steps provided in the input.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 / 6 = 1.33 (left: 1.",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 1 9"
                }
            },
            "Step 1": {
                "Step": "9 - 8 = 1 (left: 6 1 9) -> 9 / 1 = 9 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 8 = 1 (left: 6 1 9) -> 9 / 1 = 9 (left: -> 5 + 4 = 9 (left: 4 9)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "4 9"
                }
            },
            "Step 3": {
                "Step": "9 - 8 = 1 (left: 6 1 9) -> 9 / 1 = 9 (left: -> 5 + 4 = 9 (left: 4 9) -> 6 + 3 = 9 (left: 5 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 8 = 1 (left: 6 1 9) -> 9 / 1 = 9 (left: -> 5 + 4 = 9 (left: 4 9) -> 6 + 3 = 9 (left: 5 9) -> 9 - 5 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "7 7"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 9"
                }
            },
            "Step 5": {
                "Step": "9 - 8 = 1 (left: 6 1 9) -> 9 / 1 = 9 (left: -> 5 + 4 = 9 (left: 4 9) -> 9 - 4 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "There are no possible next steps provided in the input."
                }
            },
            "Step 6": {
                "Step": "9 - 8 = 1 (left: 6 1 9) -> 9 / 1 = 9 (left: -> 5 + 4 = 9 (left: 4 9) -> Possible next steps: -> There are no possible next steps provided in the input. -> There are no possible next steps provided in the input.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 + 6 = 15 (left: 8 9 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 9 15"
                }
            },
            "Step 1": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 15 - 8 = 7 (left: 7 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 15 - 8 = 7 (left: 7 9) -> 9 - 7 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "4 9"
                }
            },
            "Step 3": {
                "Step": "9 - 8 = 1 (left: 6 1 9) -> 9 / 1 = 9 (left: -> 5 + 4 = 9 (left: 4 9) -> 4 + 9 = 13 (left: 9 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 8 = 1 (left: 6 1 9) -> 9 / 1 = 9 (left: -> 5 + 4 = 9 (left: 4 9) -> 4 + 9 = 13 (left: 9 13) -> 9 + 13 = 22 (left: 22)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "4 9"
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 9"
                }
            },
            "Step 5": {
                "Step": "9 - 8 = 1 (left: 6 1 9) -> 9 / 1 = 9 (left: -> 5 + 4 = 9 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "4 9"
                }
            },
            "Step 6": {
                "Step": "9 - 8 = 1 (left: 6 1 9) -> 9 / 1 = 9 (left: -> 5 + 4 = 9 (left: 4 9) -> Possible next steps:",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 8 = 1 (left: 6 1 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 9 15"
                }
            },
            "Step 1": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 15 - 8 = 7 (left: 8 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 15 - 8 = 7 (left: 8 7) -> 8 / 7 = 1.1428571428571428 (left: 1.1428571428571428)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "4 9"
                }
            },
            "Step 3": {
                "Step": "9 - 8 = 1 (left: 6 1 9) -> 9 / 1 = 9 (left: -> 5 + 4 = 9 (left: 4 9) -> 9 - 4 = 5 (left: 5 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 8 = 1 (left: 6 1 9) -> 9 / 1 = 9 (left: -> 5 + 4 = 9 (left: 4 9) -> 9 - 4 = 5 (left: 5 9) -> 5 * 9 = 45 (left: 45)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "7 7"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 9"
                }
            },
            "Step 5": {
                "Step": "9 - 8 = 1 (left: 6 1 9) -> 9 / 1 = 9 (left: -> 5 + 4 = 9 (left: 4 9) -> 4 * 9 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "7 7"
                }
            },
            "Step 6": {
                "Step": "9 - 8 = 1 (left: 6 1 9) -> Input: 5 2 7 -> 5 + 2 = 7 (left: 7 7) -> 7 - 7 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "There are no possible next steps provided in the input."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "9 - 8 = 1 (left: 6 1 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 1 9"
                }
            },
            "Step 1": {
                "Step": "9 - 8 = 1 (left: 6 1 9) -> 1 * 9 = 9 (left: 6 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 8 = 1 (left: 6 1 9) -> 1 * 9 = 9 (left: 6 9) -> 9 - 6 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "4 9"
                }
            },
            "Step 3": {
                "Step": "9 - 8 = 1 (left: 6 1 9) -> 9 / 1 = 9 (left: -> 5 + 4 = 9 (left: 4 9) -> Possible next steps:",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 8 = 1 (left: 6 1 9) -> 9 / 1 = 9 (left: -> 5 + 4 = 9 (left: 4 9) -> Possible next steps: -> There are no possible next steps provided in the input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 9"
                }
            },
            "Step 5": {
                "Step": "9 - 8 = 1 (left: 6 1 9) -> 9 / 1 = 9 (left: -> 5 + 4 = 9 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "3"
                }
            },
            "Step 6": {
                "Step": "9 - 8 = 1 (left: 6 1 9) -> 1 * 9 = 9 (left: 6 9) -> 9 - 6 = 3 (left: 3) -> There are no possible next steps with the input 3 alone.",
                "Pruning": null
            }
        },
        "Input": "6 8 9 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "897": {
        "puzzle": "3 3 6 13",
        "Agent 0": {
            "Step 0": {
                "Step": "6 * 3 = 18 (left: 18 6 ",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "18 6 "
                }
            },
            "Step 1": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 4 5\nSteps:\n2 * 5 = 10 (left: 3 4 10)\n4 - 3 = 1 (left: 1 10)\n10 * 1 = 10 (left: 10)\n10 + 10 = 20 (left: 20)\n20 + 4 = 24 (left: 24)\nAnswer: ((2 * 5) + (4 - 3)) *",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "18 6 "
                }
            },
            "Step 4": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 - 6 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "1 45"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 + 6 = 15 (left: 15 13) -> 15 * 13 = 195 (left: 195) -> 9 * 5 = 45 (left: 1 45) -> 45 / 1 = 45 (left: 45)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "16"
                }
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 13 - 6 = 7 (left: 9 7) -> 9 + 7 = 16 (left: 16) -> There are no possible next steps as there is only one number left.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 3 7 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "9 6 13"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 + 6 = 15 (left: 15 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 + 6 = 15 (left: 15 13) -> 15 * 13 = 195 (left: 195)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 4 6\nSteps:\n2 * 6 = 12 (left: 3 4 12)\n4 * 3 = 12 (left: 12 12)\n12 * 12 = 24 (left: 24)\nAnswer: (2 * 6) * (4 * 3) = 24",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "1.15"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 + 6 = 15 (left: 15 13) -> 15 / 13 = 1.15 (left: 1.15) -> 1.15 - 2 = -0.85 (left: -0.85)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "1.15"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "1 45"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 + 6 = 15 (left: 15 13) -> 15 * 13 = 195 (left: 195) -> 9 * 5 = 45 (left: 1 45) -> 1 + 45 = 46 (left: 46)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 6 9\nSteps:\n3 * 9 = 27 (left: 2 6 27)\n27 - 6 = 21 (left: 2 21)\n21 - 2 = 19 (left: 19)\nAnswer: ((2 * 3) + 9) * 6 = 24",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "16 / 2 = 8"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 6 6 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "9 6 13"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 6 * 13 = 78 (left: 9 78)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 6 * 13 = 78 (left: 9 78) -> 78 / 9 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 4 6\nSteps:\n2 * 3 = 6 (left: 4 6 6)\n6 + 4 = 10 (left: 10 6)\n10 * 6 = 60 (left: 60)\nAnswer: (2 * 3) * (4 + 6) = 24",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "9 6 13"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 * 6 = 54 (left: 13 54)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "1 45"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 + 6 = 15 (left: 15 13) -> 15 * 13 = 195 (left: 195) -> 9 * 5 = 45 (left: 1 45) -> 45 / 1 = 45 (left: 45)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "195"
                }
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 + 6 = 15 (left: 15 13) -> 15 * 13 = 195 (left: 195) -> 9 * 5 = 45 (left: 1 45)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 / 3 = 2 (left: 2 6 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "9 6 13"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 13 - 6 = 7 (left: 9 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 13 - 6 = 7 (left: 9 7) -> 9 + 7 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 7 7 7 3\nSteps:\n7 + 7 = 14 (left: 14 7 3)\n14 - 7 = 7 (left: 7 7)\n7 * 7 = 49 (left: 49)\n49 / 3 = 16.33 (left: 16.33)\nAnswer: ((7 + 7) - 7) * (7 * 3) = 24",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "195"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 + 6 = 15 (left: 15 13) -> 15 * 13 = 195 (left: 195) -> 9 * 5 = 45 (left: 1 45)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "1 45"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 + 6 = 15 (left: 15 13) -> 15 * 13 = 195 (left: 195) -> 9 * 5 = 45 (left: 1 45) -> 1 * 45 = 45 (left: 45)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "1.15"
                }
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 + 6 = 15 (left: 15 13) -> 15 / 13 = 1.15 (left: 1.15) -> 1.15 - 2 = -0.85 (left: -2)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "1 45"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 6 13)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "9 6 13"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 + 6 = 15 (left: 15 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 + 6 = 15 (left: 15 13) -> 15 / 13 = 1.15 (left: 1.15)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 5 7\nSteps:\n3 * 7 = 21 (left: 2 5 21)\n5 - 2 = 3 (left: 3 21)\n21 - 3 = 18 (left: 18)\nAnswer: ((3 * 7) - 5) * 2 = 24",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "16"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 13 - 6 = 7 (left: 9 7) -> 9 + 7 = 16 (left: 16) -> 16 / 2 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "1 45"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 + 6 = 15 (left: 15 13) -> 15 * 13 = 195 (left: 195) -> 9 * 5 = 45 (left: 1 45) -> 45 - 1 = 44 (left: 44)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "1.15"
                }
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 + 6 = 15 (left: 15 13) -> 15 / 13 = 1.15 (left: 1.15) -> 1.15 + 2 = 3.15",
                "Pruning": null
            }
        },
        "Input": "3 3 6 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "898": {
        "puzzle": "6 8 9 11",
        "Agent 0": {
            "Step 0": {
                "Step": "6 * 8 = 48 (left: 9 11 48)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "8 11 15"
                }
            },
            "Step 1": {
                "Step": "6 + 9 = 15 (left: 8 11 15) -> 15 - 8 = 7 (left: 7 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 9 = 15 (left: 8 11 15) -> 15 - 8 = 7 (left: 7 15) -> 7 / 15 = 0.4666666666666667 (left: 0.4666666666666667)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "There are no possible next steps with the input 3."
                }
            },
            "Step 3": {
                "Step": "11 - 9 = 2 (left: 6 2  -> 6 / 2 = 3 (left: 3) -> There are no possible next steps with the input 3. -> 3 / 3 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "-73"
                }
            },
            "Step 4": {
                "Step": "9 + 6 = 15 (left: 8 11 15) -> 11 * 8 = 88 (left: 15 88) -> 15 - 88 = -73 (left: -73) -> -73 / 2 = -36.5 (left: -36.5)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "0.4666666666666667"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "There are no possible next steps with the given input."
                }
            },
            "Step 5": {
                "Step": "6 * 8 = 48 (left: 9 11 48) -> 48 - 9 = 39 (left: 11 39) -> Possible next steps: -> There are no possible next steps with the given input. -> There are no possible next steps with the given input.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 8 = 48 (left: 9 11 48) -> 48 - 9 = 39 (left: 11 39) -> Possible next steps: -> There are no possible next steps with the given input. -> There are no possible next steps with the given input. -> There are no possible next steps with the given input.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 + 6 = 15 (left: 8 11 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 2 "
                }
            },
            "Step 1": {
                "Step": "11 - 9 = 2 (left: 6 2  -> 6 / 2 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 9 = 2 (left: 6 2  -> 6 / 2 = 3 (left: 3) -> There are no possible next steps with the input 3.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "2"
                }
            },
            "Step 3": {
                "Step": "9 + 6 = 15 (left: 8 11 15) -> 15 - 11 = 4 (left: 8 4) -> 8 / 4 = 2 (left: 2) -> No possible next steps.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 + 6 = 15 (left: 8 11 15) -> 15 - 11 = 4 (left: 8 4) -> 8 / 4 = 2 (left: 2) -> No possible next steps. -> There are no possible next steps as all combinations have been exhausted.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "There are no possible next steps as all combinations have been exhausted."
                }
            },
            "Step 5": {
                "Step": "9 + 6 = 15 (left: 8 11 15) -> 15 - 11 = 4 (left: 8 4) -> 8 / 4 = 2 (left: 2) -> No possible next steps. -> There are no possible next steps as all combinations have been exhausted. -> There are no possible next steps as all combinations have been exhausted.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 6 = 15 (left: 8 11 15) -> 15 - 11 = 4 (left: 8 4) -> 8 / 4 = 2 (left: 2) -> No possible next steps. -> There are no possible next steps as all combinations have been exhausted. -> There are no possible next steps as all combinations have been exhausted. -> N/A",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "10 16"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 8 = 14 (left: 9 11 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "9 11 48"
                }
            },
            "Step 1": {
                "Step": "6 * 8 = 48 (left: 9 11 48) -> 48 - 9 = 39 (left: 11 39)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 8 = 48 (left: 9 11 48) -> 48 - 9 = 39 (left: 11 39) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "Possible next steps:"
                }
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 9 11 48) -> 48 - 9 = 39 (left: 11 39) -> Possible next steps: -> There are no possible next steps as the input has already been evaluated.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 * 8 = 48 (left: 9 11 48) -> 48 - 9 = 39 (left: 11 39) -> Possible next steps: -> There are no possible next steps as the input has already been evaluated. -> N/A",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "-73"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "There are no possible next steps as all combinations have been exhausted."
                }
            },
            "Step 5": {
                "Step": "9 + 6 = 15 (left: 8 11 15) -> 15 - 11 = 4 (left: 8 4) -> 8 / 4 = 2 (left: 2) -> No possible next steps. -> There are no possible next steps as all combinations have been exhausted. -> None",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "0.4666666666666667"
                }
            },
            "Step 6": {
                "Step": "6 + 9 = 15 (left: 8 11 15) -> 15 - 8 = 7 (left: 7 15) -> 7 / 15 = 0.4666666666666667 (left: 0.4666666666666667) -> 0.4666666666666667 * 2 = 0.9333333333333334",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "11 - 9 = 2 (left: 6 2 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "8 11 15"
                }
            },
            "Step 1": {
                "Step": "9 + 6 = 15 (left: 8 11 15) -> 15 - 11 = 4 (left: 8 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 6 = 15 (left: 8 11 15) -> 15 - 11 = 4 (left: 8 4) -> 8 / 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "Possible next steps:"
                }
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 9 11 48) -> 48 - 9 = 39 (left: 11 39) -> Possible next steps: -> 16 - 8 = 8 (left: 2 8 16)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 * 8 = 48 (left: 9 11 48) -> 48 - 9 = 39 (left: 11 39) -> Possible next steps: -> 16 - 8 = 8 (left: 2 8 16) -> 2 + 8 = 10 (left: 10 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "There are no possible next steps with the given input."
                }
            },
            "Step 5": {
                "Step": "6 * 8 = 48 (left: 9 11 48) -> 48 - 9 = 39 (left: 11 39) -> Possible next steps: -> There are no possible next steps with the given input. -> There are no possible next steps with the given input.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 8 = 48 (left: 9 11 48) -> 48 - 9 = 39 (left: 11 39) -> Possible next steps: -> There are no possible next steps with the given input. -> There are no possible next steps with the given input. -> There are no possible next steps with the given input.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 8 11 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "8 11 15"
                }
            },
            "Step 1": {
                "Step": "9 + 6 = 15 (left: 8 11 15) -> 11 * 8 = 88 (left: 15 88)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 6 = 15 (left: 8 11 15) -> 11 * 8 = 88 (left: 15 88) -> 15 - 88 = -73 (left: -73)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "0.4666666666666667"
                }
            },
            "Step 3": {
                "Step": "6 + 9 = 15 (left: 8 11 15) -> 15 - 8 = 7 (left: 7 15) -> 7 / 15 = 0.4666666666666667 (left: 0.4666666666666667) -> 0.4666666666666667 / 2 = 0.23333333333333334 (left: 0.23333333333333334)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "Possible next steps:"
                }
            },
            "Step 4": {
                "Step": "6 * 8 = 48 (left: 9 11 48) -> 48 - 9 = 39 (left: 11 39) -> Possible next steps: -> There are no possible next steps with the given input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "There are no possible next steps as all combinations have been exhausted."
                }
            },
            "Step 5": {
                "Step": "9 + 6 = 15 (left: 8 11 15) -> 15 - 11 = 4 (left: 8 4) -> 8 / 4 = 2 (left: 2) -> No possible next steps. -> There are no possible next steps as all combinations have been exhausted. -> N/A",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "There are no possible next steps with the given input."
                }
            },
            "Step 6": {
                "Step": "6 * 8 = 48 (left: 9 11 48) -> 48 - 9 = 39 (left: 11 39) -> Possible next steps: -> There are no possible next steps with the given input. -> There are no possible next steps with the given input.",
                "Pruning": null
            }
        },
        "Input": "6 8 9 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "899": {
        "puzzle": "1 3 3 11",
        "Agent 0": {
            "Step 0": {
                "Step": "11 - 1 = 10 (left: 3 3 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 4 11"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 4 * 3 = 12 (left: 12 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 4 * 3 = 12 (left: 12 11) -> 12 + 11 = 23 (left: 23)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "21"
                }
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 11 - 4 = 7 (left: 3 7) -> 3 * 7 = 21 (left: 21) -> 21 + 2 = 23",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 11 - 4 = 7 (left: 3 7) -> 3 * 7 = 21 (left: 21) -> 21 + 2 = 23 -> 21 / 2 = 10.5 (left: 10.5)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "23"
                },
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "0 10"
                }
            },
            "Step 5": {
                "Step": "11 - 1 = 10 (left: 3 3 10) -> 3 - 3 = 0 (left: 0 10) -> 10 / 10 = 1 (left: 1 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 1 = 10 (left: 3 3 10) -> 3 - 3 = 0 (left: 0 10) -> 10 / 10 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "There are no possible next steps as there is only one number in the input."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 1 9 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 4 11"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 11 - 4 = 7 (left: 3 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 11 - 4 = 7 (left: 3 7) -> 3 * 7 = 21 (left: 21)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "21"
                }
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 11 - 4 = 7 (left: 3 7) -> 3 * 7 = 21 (left: 21) -> 21 + 2 = 23",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 11 - 4 = 7 (left: 3 7) -> 3 * 7 = 21 (left: 21) -> 21 + 2 = 23 -> 21 * 2 = 23 (left: 23)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "21"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "23"
                }
            },
            "Step 5": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 4 * 3 = 12 (left: 12 11) -> 12 + 11 = 23 (left: 23) -> 23 - 8 = 15 (left: 8)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "21"
                }
            },
            "Step 6": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 11 - 4 = 7 (left: 3 7) -> 3 * 7 = 21 (left: 21) -> 21 + 2 = 23",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 3 4 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 4 11"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 4 * 3 = 12 (left: 12 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 4 * 3 = 12 (left: 12 11) -> 12 * 11 = 132 (left: 132)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "21"
                }
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 11 - 4 = 7 (left: 3 7) -> 3 * 7 = 21 (left: 21) -> 21 - 2 = 19 (left: 19)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "3 3 10"
                }
            },
            "Step 4": {
                "Step": "11 - 1 = 10 (left: 3 3 10) -> 3 - 3 = 0 (left: 0 10)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "21"
                }
            },
            "Step 5": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 11 - 4 = 7 (left: 3 7) -> 3 * 7 = 21 (left: 21) -> 21 + 2 = 23",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 11 - 4 = 7 (left: 3 7) -> 3 * 7 = 21 (left: 21) -> 21 + 2 = 23 -> 21 * 2 = 42 (left: 42)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "There are no possible next steps as there is only one number in the input."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "11 - 1 = 10 (left: 3 10 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 4 11"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 4 - 3 = 1 (left: 1 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 4 - 3 = 1 (left: 1 11) -> 1 * 11 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "21"
                }
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 11 - 4 = 7 (left: 3 7) -> 3 * 7 = 21 (left: 21) -> There are no possible next steps for the number 21.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 11 - 4 = 7 (left: 3 7) -> 3 * 7 = 21 (left: 21) -> There are no possible next steps for the number 21. -> None",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "23"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "21"
                }
            },
            "Step 5": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 11 - 4 = 7 (left: 3 7) -> 3 * 7 = 21 (left: 21) -> -3 * 5 = -15 (left:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 11 - 4 = 7 (left: 3 7) -> 3 * 7 = 21 (left: 21) -> -3 * 5 = -15 (left: -> -3 + 5 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "There are no possible next steps as there is only one number in the input."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 3 4 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 3 10"
                }
            },
            "Step 1": {
                "Step": "11 - 1 = 10 (left: 3 3 10) -> 3 * 3 = 9 (left: 9 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 1 = 10 (left: 3 3 10) -> 3 * 3 = 9 (left: 9 10) -> 9 - 10 = -1 (left: -1)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "21"
                }
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 11 - 4 = 7 (left: 3 7) -> 3 * 7 = 21 (left: 21) -> None, as there is only one number in the input.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 11 - 4 = 7 (left: 3 7) -> 3 * 7 = 21 (left: 21) -> None, as there is only one number in the input. -> There are no possible next steps as there is only one number in the input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "21"
                }
            },
            "Step 5": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 11 - 4 = 7 (left: 3 7) -> 3 * 7 = 21 (left: 21) -> 21 + 2 = 23",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 11 - 4 = 7 (left: 3 7) -> 3 * 7 = 21 (left: 21) -> 21 + 2 = 23 -> 2 + 21 = 23 (left: 23)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "There are no possible next steps as there is only one number in the input."
                }
            }
        },
        "Input": "1 3 3 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1050": {
        "puzzle": "4 10 11 13",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 11 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "10 13 15"
                }
            },
            "Step 1": {
                "Step": "11 + 4 = 15 (left: 10 13 15) -> 13 / 10 = 1.3 (left: 1.3 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 + 4 = 15 (left: 10 13 15) -> 13 / 10 = 1.3 (left: 1.3 15) -> 1.3 * 15 = 19.5 (left: 19.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "145"
                }
            },
            "Step 3": {
                "Step": "11 + 4 = 15 (left: 10 13 15) -> 10 * 13 = 130 (left: 15 130) -> 15 + 130 = 145 (left: 145) -> 5 / 4 = 1.25 (left: 1.25)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "10 13 15"
                }
            },
            "Step 4": {
                "Step": "11 + 4 = 15 (left: 10 13 15) -> 15 - 13 = 2 (left: 10 2)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "10 2"
                }
            },
            "Step 5": {
                "Step": "11 + 4 = 15 (left: 10 13 15) -> 15 - 13 = 2 (left: 10 2) -> 10 / 2 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 + 4 = 15 (left: 10 13 15) -> 15 - 13 = 2 (left: 10 2) -> 10 / 2 = 5 (left: 5) -> There are no possible next steps with just one number provided.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 10 = 3 (left: 3 11 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 11 13"
                }
            },
            "Step 1": {
                "Step": "10 - 4 = 6 (left: 6 11 13) -> 11 / 6 = 1.83 (left: 1.83 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 6 11 13) -> 11 / 6 = 1.83 (left: 1.83 13) -> 13 - 1.83 = 11.17 (left: 11.17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "0.6363636363636364"
                }
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 6 11 13) -> 13 - 6 = 7 (left: 7 11) -> 7 / 11 = 0.6363636363636364 (left: 0.6363636363636364) -> 0.6363636363636364 * 2 = 1.2727272727272728",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 6 11 13) -> 13 - 6 = 7 (left: 7 11) -> 7 / 11 = 0.6363636363636364 (left: 0.6363636363636364) -> 0.6363636363636364 * 2 = 1.2727272727272728 -> 0.6363636363636364 + 2 = 2.6363636363636364",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "10 2"
                }
            },
            "Step 5": {
                "Step": "11 + 4 = 15 (left: 10 13 15) -> 15 - 13 = 2 (left: 10 2) -> 10 + 2 = 12 (left: 2 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 + 4 = 15 (left: 10 13 15) -> 15 - 13 = 2 (left: 10 2) -> 10 + 2 = 12 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "19.5 + 2 = 21.5"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "11 + 4 = 15 (left: 10 13 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 11 13"
                }
            },
            "Step 1": {
                "Step": "10 - 4 = 6 (left: 6 11 13) -> 11 - 6 = 5 (left: 5 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 6 11 13) -> 11 - 6 = 5 (left: 5 13) -> 5 - 13 = -8 (left: -8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "19.5"
                }
            },
            "Step 3": {
                "Step": "11 + 4 = 15 (left: 10 13 15) -> 13 / 10 = 1.3 (left: 1.3 15) -> 1.3 * 15 = 19.5 (left: 19.5) -> 19.5 / 2 = 9.75",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 + 4 = 15 (left: 10 13 15) -> 13 / 10 = 1.3 (left: 1.3 15) -> 1.3 * 15 = 19.5 (left: 19.5) -> 19.5 / 2 = 9.75 -> 19.5 + 2 = 21.5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "10 2"
                }
            },
            "Step 5": {
                "Step": "11 + 4 = 15 (left: 10 13 15) -> 15 - 13 = 2 (left: 10 2) -> 10 / 2 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 + 4 = 15 (left: 10 13 15) -> 15 - 13 = 2 (left: 10 2) -> 10 / 2 = 5 (left: 5) -> There are no possible next steps with just one number.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 / 4 = 2.5 (left: 2.",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 11 13"
                }
            },
            "Step 1": {
                "Step": "10 - 4 = 6 (left: 6 11 13) -> 13 - 6 = 7 (left: 7 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 6 11 13) -> 13 - 6 = 7 (left: 7 11) -> 7 / 11 = 0.6363636363636364 (left: 0.6363636363636364)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "11.17"
                }
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 6 11 13) -> 11 / 6 = 1.83 (left: 1.83 13) -> 13 - 1.83 = 11.17 (left: 11.17) -> 11 - 17 = -6 (left: -6 17)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 6 11 13) -> 11 / 6 = 1.83 (left: 1.83 13) -> 13 - 1.83 = 11.17 (left: 11.17) -> 11 - 17 = -6 (left: -6 17) -> -6 + 17 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "-8"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "10 2"
                }
            },
            "Step 5": {
                "Step": "11 + 4 = 15 (left: 10 13 15) -> 15 - 13 = 2 (left: 10 2) -> 10 + 2 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 + 4 = 15 (left: 10 13 15) -> 15 - 13 = 2 (left: 10 2) -> 10 + 2 = 12 (left: 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "19.5 + 2 = 21.5"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "11 + 4 = 15 (left: 10 13 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "10 13 15"
                }
            },
            "Step 1": {
                "Step": "11 + 4 = 15 (left: 10 13 15) -> 10 * 13 = 130 (left: 15 130)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 + 4 = 15 (left: 10 13 15) -> 10 * 13 = 130 (left: 15 130) -> 15 + 130 = 145 (left: 145)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "19.5"
                }
            },
            "Step 3": {
                "Step": "11 + 4 = 15 (left: 10 13 15) -> 13 / 10 = 1.3 (left: 1.3 15) -> 1.3 * 15 = 19.5 (left: 19.5) -> There are no possible next steps with the input 19.5 since there are no other numbers provided to perform operations on.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 + 4 = 15 (left: 10 13 15) -> 13 / 10 = 1.3 (left: 1.3 15) -> 1.3 * 15 = 19.5 (left: 19.5) -> There are no possible next steps with the input 19.5 since there are no other numbers provided to perform operations on. -> There are no possible next steps with the input 19.5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "10 2"
                }
            },
            "Step 5": {
                "Step": "11 + 4 = 15 (left: 10 13 15) -> 15 - 13 = 2 (left: 10 2) -> 10 - 2 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 + 4 = 15 (left: 10 13 15) -> 15 - 13 = 2 (left: 10 2) -> 10 - 2 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null
            }
        },
        "Input": "4 10 11 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1051": {
        "puzzle": "2 6 6 7",
        "Agent 0": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 5 6 6)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9) -> 7 * 9 = 63 (left: 63)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3.25"
                }
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 6 + 7 = 13 (left: 4 13) -> 13 / 4 = 3.25 (left: 3.25) -> 3.25 - 2 = 1.25",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 6 + 7 = 13 (left: 4 13) -> 13 / 4 = 3.25 (left: 3.25) -> 3.25 - 2 = 1.25 -> 2 - 3.25 = -1.25 (left: -1.25)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "63"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "26 8 11.25"
                }
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 6 + 7 = 13 (left: 4 13) -> 13 / 4 = 3.25 (left: 3.25) -> 3.25 + 8 = 11.25 -> 3.25 * 8 = 26 (left: 26 8 11.25) -> 26 - 11.25 = 14.75 (left: 8 14.75)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 6 + 7 = 13 (left: 4 13) -> 13 / 4 = 3.25 (left: 3.25) -> 3.25 + 8 = 11.25 -> 3.25 * 8 = 26 (left: 26 8 11.25) -> 26 - 11.25 = 14.75 (left: 8 14.75) -> 8 - 14.75 = -6.75 (left: -6.75)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "26 8 11.25"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 - 6 = 1 (left: 2 1 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7) ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3.25"
                }
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 6 + 7 = 13 (left: 4 13) -> 13 / 4 = 3.25 (left: 3.25) -> There are no possible next steps for the input 3.25 as it is already a single number.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 6 + 7 = 13 (left: 4 13) -> 13 / 4 = 3.25 (left: 3.25) -> There are no possible next steps for the input 3.25 as it is already a single number. -> There are no possible next steps for the input 3.25 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "26 8 11.25"
                }
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 6 + 7 = 13 (left: 4 13) -> 13 / 4 = 3.25 (left: 3.25) -> 3.25 + 8 = 11.25 -> 3.25 * 8 = 26 (left: 26 8 11.25) -> 26 - 8 = 18 (left: 18 11.25)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 6 + 7 = 13 (left: 4 13) -> 13 / 4 = 3.25 (left: 3.25) -> 3.25 + 8 = 11.25 -> 3.25 * 8 = 26 (left: 26 8 11.25) -> 26 - 8 = 18 (left: 18 11.25) -> 18 / 11.25 = 1.6 (left: 1.6)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "There are no possible next steps for the input 3.25 as it is already a single number."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 4 6 7)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 5 - 6 = -1 (left: -1 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 5 - 6 = -1 (left: -1 6) -> Input: 3 9 27",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "3"
                }
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 7 - 4 = 3 (left: 3 6) -> 6 - 3 = 3 (left: 3) -> 8 - 3 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "3"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 7 - 4 = 3 (left: 3 6) -> 6 - 3 = 3 (left: 3) -> 6 + 3 = 9 (left: 3 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "26 8 11.25"
                }
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 6 + 7 = 13 (left: 4 13) -> 13 / 4 = 3.25 (left: 3.25) -> 3.25 + 8 = 11.25 -> 3.25 * 8 = 26 (left: 26 8 11.25) -> 26 + 8 = 34 (left: 11.25 34)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 6 + 7 = 13 (left: 4 13) -> 13 / 4 = 3.25 (left: 3.25) -> 3.25 + 8 = 11.25 -> 3.25 * 8 = 26 (left: 26 8 11.25) -> 26 + 8 = 34 (left: 11.25 34) -> 11.25 / 34 = 0.330882 (left: 0.330882)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "There are no possible next steps for the input 3.25 as it is already a single number."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 / 2 = 3 (left: 3 6 7)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 6 + 7 = 13 (left: 4 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 6 + 7 = 13 (left: 4 13) -> 13 / 4 = 3.25 (left: 3.25)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3.25"
                }
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 6 + 7 = 13 (left: 4 13) -> 13 / 4 = 3.25 (left: 3.25) -> 3.25 + 8 = 11.25",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 6 + 7 = 13 (left: 4 13) -> 13 / 4 = 3.25 (left: 3.25) -> 3.25 + 8 = 11.25 -> 3.25 * 8 = 26 (left: 26 8 11.25)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "26 8 11.25"
                }
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 6 + 7 = 13 (left: 4 13) -> 13 / 4 = 3.25 (left: 3.25) -> 3.25 + 8 = 11.25 -> 3.25 * 8 = 26 (left: 26 8 11.25) -> 26 / 8 = 3.25 (left: 3.25 11.25)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 6 + 7 = 13 (left: 4 13) -> 13 / 4 = 3.25 (left: 3.25) -> 3.25 + 8 = 11.25 -> 3.25 * 8 = 26 (left: 26 8 11.25) -> 26 / 8 = 3.25 (left: 3.25 11.25) -> 3.25 * 11.25 = 36.5625 (left: 36.5625)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "3 9"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 4 6 7)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 7 - 4 = 3 (left: 3 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 7 - 4 = 3 (left: 3 6) -> 6 - 3 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "63"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9) -> 7 * 9 = 63 (left: 63) -> 63 + 2 = 65 (left: 2)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "2 1 "
                }
            },
            "Step 4": {
                "Step": "7 - 6 = 1 (left: 2 1  -> 2 / 1 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "26 8 11.25"
                }
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 6 + 7 = 13 (left: 4 13) -> 13 / 4 = 3.25 (left: 3.25) -> 3.25 + 8 = 11.25 -> 3.25 * 8 = 26 (left: 26 8 11.25) -> 8 * 11.25 = 90 (left: 26 90)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 6 + 7 = 13 (left: 4 13) -> 13 / 4 = 3.25 (left: 3.25) -> 3.25 + 8 = 11.25 -> 3.25 * 8 = 26 (left: 26 8 11.25) -> 8 * 11.25 = 90 (left: 26 90) -> 26 + 90 = 116 (left: 116)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "There are no possible next steps for the input 3.25 as it is already a single number."
                }
            }
        },
        "Input": "2 6 6 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1052": {
        "puzzle": "7 10 10 12",
        "Agent 0": {
            "Step 0": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 10 12"
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 12 - 3 = 9 (left: 10 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 12 - 3 = 9 (left: 10 9) -> 10 * 9 = 90 (left: 9 90)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "9 90"
                }
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 12 - 3 = 9 (left: 10 9) -> 10 * 9 = 90 (left: 9 90) -> 90 / 9 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "3 10 12"
                }
            },
            "Step 4": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 10 * 3 = 30 (left: 12 30)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "9 90"
                }
            },
            "Step 5": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 12 - 3 = 9 (left: 10 9) -> 10 * 9 = 90 (left: 9 90) -> 90 - 9 = 81 (left: 9 81)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 12 - 3 = 9 (left: 10 9) -> 10 * 9 = 90 (left: 9 90) -> 90 - 9 = 81 (left: 9 81) -> 9 * 9 = 81 (left: 81)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "102.85714285716 - 2 = 100.85714285716"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 - 7 = 3 (left: 3 10 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1.42857142857 10 12"
                }
            },
            "Step 1": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 12 / 10 = 1.2 (",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 12 / 10 = 1.2 ( -> 12 / 10 = 1.2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "9 90"
                }
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 12 - 3 = 9 (left: 10 9) -> 10 * 9 = 90 (left: 9 90) -> 90 / 9 = 10 (left: 9 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 12 - 3 = 9 (left: 10 9) -> 10 * 9 = 90 (left: 9 90) -> 90 / 9 = 10 (left: 9 10) -> 9 + 10 = 19 (left: 19)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "12 / 10 = 1.2"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "9 90"
                }
            },
            "Step 5": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 12 - 3 = 9 (left: 10 9) -> 10 * 9 = 90 (left: 9 90) -> 90 - 9 = 81 (left: 81)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "3 12"
                }
            },
            "Step 6": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 12 / 3 = 4 (left: 4 12) -> 12 / 4 = 3 (left: 3 12) -> 12 - 3 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "102.85714285716 - 2 = 100.85714285716"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 / 10 = 1 (left: 7 1 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 10 12"
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 12 / 3 = 4 (left: 4 12) -> 12 / 4 = 3 (left: 3 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "9 90"
                }
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 12 - 3 = 9 (left: 10 9) -> 10 * 9 = 90 (left: 9 90) -> 9 * 9 = 81 (left: 81 90)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 12 - 3 = 9 (left: 10 9) -> 10 * 9 = 90 (left: 9 90) -> 9 * 9 = 81 (left: 81 90) -> 81 / 90 = 0.9 (left: 0.9)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "9 90"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "9 90"
                }
            },
            "Step 5": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 12 - 3 = 9 (left: 10 9) -> 10 * 9 = 90 (left: 9 90) -> 9 * 10 = 90 (left: 90)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "12 / 10 = 1.2"
                }
            },
            "Step 6": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 12 / 10 = 1.2 ( -> 12 / 10 = 1.2 -> 10 * 2 = 20 (left: 20 1.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 - 7 = 3 (left: 3 10 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1.42857142857 10 12"
                }
            },
            "Step 1": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 10 - 1.42857142857 = 8.57142857143 (left: 8.57142857143 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 10 - 1.42857142857 = 8.57142857143 (left: 8.57142857143 12) -> 8.57142857143 * 12 = 102.85714285716 (left: 102.85714285716)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "9 90"
                }
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 12 - 3 = 9 (left: 10 9) -> 10 * 9 = 90 (left: 9 90) -> 90 - 9 = 81 (left: 81)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "9 90"
                }
            },
            "Step 4": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 12 - 3 = 9 (left: 10 9) -> 10 * 9 = 90 (left: 9 90) -> 9 + 90 = 99 (left: 99)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "12 / 10 = 1.2"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "9 90"
                }
            },
            "Step 5": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 12 - 3 = 9 (left: 10 9) -> 10 * 9 = 90 (left: 9 90) -> 9 + 90 = 99 (left: 90)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "9 90"
                }
            },
            "Step 6": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 12 - 3 = 9 (left: 10 9) -> 10 * 9 = 90 (left: 9 90) -> 90 - 9 = 81 (left: 81)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "102.85714285716 - 2 = 100.85714285716"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1.42857142857 10 12"
                }
            },
            "Step 1": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) ->  -> - Subtract the second number from the third number: 8 - 8 = 0 (left: 2 0 14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "9 90"
                }
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 12 - 3 = 9 (left: 10 9) -> 10 * 9 = 90 (left: 9 90) -> 90 / 9 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "102.85714285716"
                }
            },
            "Step 4": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 10 - 1.42857142857 = 8.57142857143 (left: 8.57142857143 12) -> 8.57142857143 * 12 = 102.85714285716 (left: 102.85714285716) -> 102.85714285716 - 2 = 100.85714285716",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "9 90"
                }
            },
            "Step 5": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 12 - 3 = 9 (left: 10 9) -> 10 * 9 = 90 (left: 9 90) -> 90 / 9 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "9 90"
                }
            },
            "Step 6": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 12 - 3 = 9 (left: 10 9) -> 10 * 9 = 90 (left: 9 90) -> 9 * 10 = 90 (left: 90)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "102.85714285716 - 2 = 100.85714285716"
                }
            }
        },
        "Input": "7 10 10 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1053": {
        "puzzle": "2 5 7 11",
        "Agent 0": {
            "Step 0": {
                "Step": "5 * 2 = 10 (left: 10 7 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 12 11"
                }
            },
            "Step 1": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 / 2 = 6 (left: 6 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 / 2 = 6 (left: 6 11) -> 6 - 11 = -5 (left: -5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "-3"
                }
            },
            "Step 3": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 2 + 12 = 14 (left: 11 14) -> 11 - 14 = -3 (left: -3) -> There are no possible next steps for the input -3.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 2 + 12 = 14 (left: 11 14) -> 11 - 14 = -3 (left: -3) -> There are no possible next steps for the input -3. -> There are no possible next steps for the input -3.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "There are no possible next steps with the input of -5."
                }
            },
            "Step 5": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 / 2 = 6 (left: 6 11) -> 6 - 11 = -5 (left: -5) -> There are no possible next steps with the input of -5. -> There are no possible next steps with the input of -5. -> There are no possible next steps with the input of -5.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 / 2 = 6 (left: 6 11) -> 6 - 11 = -5 (left: -5) -> There are no possible next steps with the input of -5. -> There are no possible next steps with the input of -5. -> There are no possible next steps with the input of -5. -> It seems like there are no valid mathematical operations that can be performed with the input of -5.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 + 7 = 12 (left: 2 12 11)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 12 11"
                }
            },
            "Step 1": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 2 + 12 = 14 (left: 11 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 2 + 12 = 14 (left: 11 14) -> 11 - 14 = -3 (left: -3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "-5"
                }
            },
            "Step 3": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 / 2 = 6 (left: 6 11) -> 6 - 11 = -5 (left: -5) -> -5 + 8 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "2 5 18"
                }
            },
            "Step 4": {
                "Step": "7 + 11 = 18 (left: 2 5 18) -> 4 + 7 = 11 (left: 11",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "11"
                }
            },
            "Step 5": {
                "Step": "7 + 11 = 18 (left: 2 5 18) -> 4 + 7 = 11 (left: 11 -> There are no possible next steps for the input 11.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 11 = 18 (left: 2 5 18) -> 4 + 7 = 11 (left: 11 -> There are no possible next steps for the input 11. -> There are no possible next steps for the input 11.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "11 - 5 = 6 (left: 2 6 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 12 11"
                }
            },
            "Step 1": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 2 + 12 = 14 (left: 11 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 2 + 12 = 14 (left: 11 14) -> 11 * 14 = 154 (left: 154)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "-5"
                }
            },
            "Step 3": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 / 2 = 6 (left: 6 11) -> 6 - 11 = -5 (left: -5) -> There are no possible next steps with the input of -5.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 / 2 = 6 (left: 6 11) -> 6 - 11 = -5 (left: -5) -> There are no possible next steps with the input of -5. -> There are no possible next steps with the input of -5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "There are no possible next steps for the input -3."
                }
            },
            "Step 5": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 2 + 12 = 14 (left: 11 14) -> 11 - 14 = -3 (left: -3) -> There are no possible next steps for the input -3. -> There are no possible next steps for the input -3. -> There are no possible next steps for the input -3.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 2 + 12 = 14 (left: 11 14) -> 11 - 14 = -3 (left: -3) -> There are no possible next steps for the input -3. -> There are no possible next steps for the input -3. -> There are no possible next steps for the input -3. -> There are no possible next steps for the input -3.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 + 11 = 18 (left: 2 5 18)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 12 11"
                }
            },
            "Step 1": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 - 2 = 10 (left: 10 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 - 2 = 10 (left: 10 11) -> 10 - 11 = -1 (left: -1)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "154"
                }
            },
            "Step 3": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 2 + 12 = 14 (left: 11 14) -> 11 * 14 = 154 (left: 154) -> 15 - 4 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "-5"
                }
            },
            "Step 4": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 / 2 = 6 (left: 6 11) -> 6 - 11 = -5 (left: -5) -> There are no possible next steps with the input -5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "There are no possible next steps for the input -3."
                }
            },
            "Step 5": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 2 + 12 = 14 (left: 11 14) -> 11 - 14 = -3 (left: -3) -> There are no possible next steps for the input -3. -> There are no possible next steps for the input -3. -> There are no possible next steps for the input -3.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 2 + 12 = 14 (left: 11 14) -> 11 - 14 = -3 (left: -3) -> There are no possible next steps for the input -3. -> There are no possible next steps for the input -3. -> There are no possible next steps for the input -3. -> There are no possible next steps for the input -3 as it is not a valid operation.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 5 = 7 (left: 7 7 11)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "2 5 18"
                }
            },
            "Step 1": {
                "Step": "7 + 11 = 18 (left: 2 5 18) -> 5 + 2 = 7 (left: 7 18)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 11 = 18 (left: 2 5 18) -> 5 + 2 = 7 (left: 7 18) -> 18 - 7 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "11"
                }
            },
            "Step 3": {
                "Step": "7 + 11 = 18 (left: 2 5 18) -> 5 + 2 = 7 (left: 7 18) -> 18 - 7 = 11 (left: 11) -> There are no possible next steps with the input of 11.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 + 11 = 18 (left: 2 5 18) -> 5 + 2 = 7 (left: 7 18) -> 18 - 7 = 11 (left: 11) -> There are no possible next steps with the input of 11. -> There are no possible next steps with the input of 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "There are no possible next steps with the input -5."
                }
            },
            "Step 5": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 / 2 = 6 (left: 6 11) -> 6 - 11 = -5 (left: -5) -> There are no possible next steps with the input -5. -> There are no possible next steps with the input -5.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 / 2 = 6 (left: 6 11) -> 6 - 11 = -5 (left: -5) -> There are no possible next steps with the input -5. -> There are no possible next steps with the input -5. -> There are no possible next steps with the input -5.",
                "Pruning": null
            }
        },
        "Input": "2 5 7 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1054": {
        "puzzle": "4 4 6 9",
        "Agent 0": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 10 9"
                }
            },
            "Step 1": {
                "Step": "6 + 4 = 10 (left: 4 10 9) -> Input: 3 6",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 4 = 10 (left: 4 10 9) -> Input: 3 6 -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "8 1"
                }
            },
            "Step 3": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 6 + 16 = 22 (left: 9 22) -> 5 + 3 = 8 (left: 8 1) -> 8 * 1 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "19"
                }
            },
            "Step 4": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 16 - 6 = 10 (left: 10 9) -> 19 -> 19 / 8 = 2.375 (left: 8)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "8 1"
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1 54"
                }
            },
            "Step 5": {
                "Step": "4 / 4 = 1 (left: 1 6 9) -> 6 * 9 = 54 (left: 1 54) -> 54 - 1 = 53 (left: 53)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 4 = 1 (left: 1 6 9) -> 6 * 9 = 54 (left: 1 54) -> 54 - 1 = 53 (left: 53) -> 53 - 2 = 51 (left: 2)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "There seems to be an error in the input. Please provide a valid set of numbers."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 6 16 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 16 9"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 16 - 9 = 7 (left: 6 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 16 - 9 = 7 (left: 6 7) -> 6 + 7 = 13",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "8 1"
                }
            },
            "Step 3": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 6 + 16 = 22 (left: 9 22) -> 5 + 3 = 8 (left: 8 1) -> 8 / 1 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "Possible next steps:"
                }
            },
            "Step 4": {
                "Step": "6 + 4 = 10 (left: 4 10 9) -> Input: 3 6 -> Possible next steps: -> There seems to be an error in the input. Please provide a valid set of numbers.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1 54"
                }
            },
            "Step 5": {
                "Step": "4 / 4 = 1 (left: 1 6 9) -> 6 * 9 = 54 (left: 1 54) -> 1 * 54 = 54 (left: 54)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 4 = 1 (left: 1 6 9) -> 6 * 9 = 54 (left: 1 54) -> 1 * 54 = 54 (left: 54) -> 54 / 2 = 27",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 6 16 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 6 9"
                }
            },
            "Step 1": {
                "Step": "4 / 4 = 1 (left: 1 6 9) -> Input: 7 3",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 4 = 1 (left: 1 6 9) -> Input: 7 3 -> 10 - 5 = 5 (left: 5 2)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "8 1"
                }
            },
            "Step 3": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 6 + 16 = 22 (left: 9 22) -> 5 + 3 = 8 (left: 8 1) -> 8 * 1 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "1 6 9"
                }
            },
            "Step 4": {
                "Step": "4 / 4 = 1 (left: 1 6 9) -> 6 * 9 = 54 (left: 1 54)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1 54"
                }
            },
            "Step 5": {
                "Step": "4 / 4 = 1 (left: 1 6 9) -> 6 * 9 = 54 (left: 1 54) -> 54 - 1 = 53 (left: 53)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 4 = 1 (left: 1 6 9) -> 6 * 9 = 54 (left: 1 54) -> 54 - 1 = 53 (left: 53) -> There are no possible next steps for the number 53 as it is a single number and cannot be combined with any of the other numbers provided.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 6 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 16 9"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 6 + 16 = 22 (left: 9 22)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 6 + 16 = 22 (left: 9 22) -> 5 + 3 = 8 (left: 8 1)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "8 1"
                }
            },
            "Step 3": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 6 + 16 = 22 (left: 9 22) -> 5 + 3 = 8 (left: 8 1) -> 8 - 1 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "8 1"
                }
            },
            "Step 4": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 6 + 16 = 22 (left: 9 22) -> 5 + 3 = 8 (left: 8 1) -> 8 + 1 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "6 + 7 = 13"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1 54"
                }
            },
            "Step 5": {
                "Step": "4 / 4 = 1 (left: 1 6 9) -> 6 * 9 = 54 (left: 1 54) -> 54 / 1 = 54 (left: 54)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 4 = 1 (left: 1 6 9) -> 6 * 9 = 54 (left: 1 54) -> 54 / 1 = 54 (left: 54) -> There are no possible next steps as the input only has one number.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 4 = 10 (left: 4 10 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 16 9"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 16 - 6 = 10 (left: 10 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 16 - 6 = 10 (left: 10 9) -> 19",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "8 1"
                }
            },
            "Step 3": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 6 + 16 = 22 (left: 9 22) -> 5 + 3 = 8 (left: 8 1) -> 8 - 1 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "6 16 9"
                }
            },
            "Step 4": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 6 + 16 = 22 (left: 9 22)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1 54"
                }
            },
            "Step 5": {
                "Step": "4 / 4 = 1 (left: 1 6 9) -> 6 * 9 = 54 (left: 1 54) -> 54 / 1 = 54 (left: 54)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 4 = 1 (left: 1 6 9) -> 6 * 9 = 54 (left: 1 54) -> 54 / 1 = 54 (left: 54) -> 54 - 2 = 52",
                "Pruning": null
            }
        },
        "Input": "4 4 6 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1055": {
        "puzzle": "6 9 10 12",
        "Agent 0": {
            "Step 0": {
                "Step": "10 + 12 = 22 (left: 6 9 22)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 9 22"
                }
            },
            "Step 1": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 6 + 9 = 15 (left: 15 22)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 6 + 9 = 15 (left: 15 22) -> 15 + 22 = 37",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "15 + 22 = 37"
                }
            },
            "Step 3": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 6 + 9 = 15 (left: 15 22) -> 15 + 22 = 37 -> 15 * 22 = 330 (left: 330 37)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 6 + 9 = 15 (left: 15 22) -> 15 + 22 = 37 -> 15 * 22 = 330 (left: 330 37) -> 330 - 37 = 293 (left: 293)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "37"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "37"
                }
            },
            "Step 5": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 12 + 6 = 18 (left: 18 19) -> 18 + 19 = 37 (left: 37) -> There are no possible next steps with the input 37.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 12 + 6 = 18 (left: 18 19) -> 18 + 19 = 37 (left: 37) -> There are no possible next steps with the input 37. -> There are no possible next steps with the input 37.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 * 12 = 120 (left: 6 9 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 9 22"
                }
            },
            "Step 1": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 9 * 6 = 54 (left: 54 22)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 9 * 6 = 54 (left: 54 22) -> 54 / 22 = 2.45454545455 (left: 2.45454545455)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "15 + 22 = 37"
                }
            },
            "Step 3": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 6 + 9 = 15 (left: 15 22) -> 15 + 22 = 37 -> 22 - 15 = 7",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 6 + 9 = 15 (left: 15 22) -> 15 + 22 = 37 -> 22 - 15 = 7 -> 22 + 15 = 37 (left: 37)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "2.45454545455"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "330 = 0.6818181818181818"
                }
            },
            "Step 5": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 6 + 9 = 15 (left: 15 22) -> 15 + 22 = 37 -> 15 / 22 = 0.6818181818181818 -> 15 * 22 = 330 (left: 330 = 0.6818181818181818) -> 3 + 3 = 6 (left: 6 0.6818181818181818)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 6 + 9 = 15 (left: 15 22) -> 15 + 22 = 37 -> 15 / 22 = 0.6818181818181818 -> 15 * 22 = 330 (left: 330 = 0.6818181818181818) -> 3 + 3 = 6 (left: 6 0.6818181818181818) -> 6 / 0.6818181818181818 = 8.787878787878787 (left: 0.6818181818181818 8.787878787878787)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 + 12 = 22 (left: 6 9 22)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 12 19"
                }
            },
            "Step 1": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 12 + 6 = 18 (left: 18 19)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 12 + 6 = 18 (left: 18 19) -> 18 + 19 = 37 (left: 37)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1.67"
                }
            },
            "Step 3": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 22 / 6 = 3.67 (left: 3.67) -> 3.67 - 2 = 1.67 (left: 1.67) -> There is only one number in the input, so there are no possible mathematical operations that can be performed.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 22 / 6 = 3.67 (left: 3.67) -> 3.67 - 2 = 1.67 (left: 1.67) -> There is only one number in the input, so there are no possible mathematical operations that can be performed. -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "No possible next steps."
                }
            },
            "Step 5": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 22 / 6 = 3.67 (left: 3.67) -> 3.67 - 2 = 1.67 (left: 1.67) -> There is only one number in the input, so there are no possible mathematical operations that can be performed. -> No possible next steps. -> There are no possible next steps with the given numbers.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 22 / 6 = 3.67 (left: 3.67) -> 3.67 - 2 = 1.67 (left: 1.67) -> There is only one number in the input, so there are no possible mathematical operations that can be performed. -> No possible next steps. -> There are no possible next steps with the given numbers. -> There are no possible next steps with the given numbers.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 + 10 = 19 (left: 6 12 19)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 12 19"
                }
            },
            "Step 1": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 12 - 6 = 6 (left: 6 12 19)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 12 - 6 = 6 (left: 6 12 19) -> 19 - 6 = 13 (left: 6 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "15 + 22 = 37"
                }
            },
            "Step 3": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 6 + 9 = 15 (left: 15 22) -> 15 + 22 = 37 -> 15 / 22 = 0.6818181818181818",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 6 + 9 = 15 (left: 15 22) -> 15 + 22 = 37 -> 15 / 22 = 0.6818181818181818 -> 15 * 22 = 330 (left: 330 = 0.6818181818181818)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "2.45454545455"
                }
            },
            "Step 5": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 9 * 6 = 54 (left: 54 22) -> 54 / 22 = 2.45454545455 (left: 2.45454545455) -> There are no possible next steps for the input 2.45454545455 as it is already a single number.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 9 * 6 = 54 (left: 54 22) -> 54 / 22 = 2.45454545455 (left: 2.45454545455) -> There are no possible next steps for the input 2.45454545455 as it is already a single number. -> There are no possible next steps for the input 2.45454545455 as it is already a single number.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "9 + 10 = 19 (left: 6 12 19)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 9 22"
                }
            },
            "Step 1": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 22 / 6 = 3.67 (left: 3.67)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 22 / 6 = 3.67 (left: 3.67) -> 3.67 - 2 = 1.67 (left: 1.67)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "15 + 22 = 37"
                }
            },
            "Step 3": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 6 + 9 = 15 (left: 15 22) -> 15 + 22 = 37 -> 15 / 22 = 0.6818181818181818 (left: 0.6818181818181818 + 37)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 6 + 9 = 15 (left: 15 22) -> 15 + 22 = 37 -> 15 / 22 = 0.6818181818181818 (left: 0.6818181818181818 + 37) -> 0.6818181818181818 - 37 = -36.31818181818182 (left: -36.31818181818182)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "15 + 22 = 37"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "2.45454545455"
                }
            },
            "Step 5": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 9 * 6 = 54 (left: 54 22) -> 54 / 22 = 2.45454545455 (left: 2.45454545455) -> 2.45454545455 - 2 = 0.45454545455",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 9 * 6 = 54 (left: 54 22) -> 54 / 22 = 2.45454545455 (left: 2.45454545455) -> 2.45454545455 - 2 = 0.45454545455 -> 2.45454545455 * 2 = 4.9090909091 (left: 4.9090909091)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "330 = 0.6818181818181818"
                }
            }
        },
        "Input": "6 9 10 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1056": {
        "puzzle": "6 9 9 12",
        "Agent 0": {
            "Step 0": {
                "Step": "9 + 9 = 18 (left: 6 18 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 12 27"
                }
            },
            "Step 1": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 27 - 9 = 18 (left: 9 12 18)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 27 - 9 = 18 (left: 9 12 18) -> 9 + 12 = 21 (left: 18 21)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "27 35.91"
                }
            },
            "Step 3": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 / 9 = 1.33 (left: 1.33 27) -> 1.33 * 27 = 35.91 (left: 27 35.91) -> 27 - 35.91 = -8.91 (left: -8.91)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "25.67"
                }
            },
            "Step 4": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 / 9 = 1.33 (left: 1.33 27) -> 27 - 1.33 = 25.67 (left: 25.67) -> 25 - 67 = -42.67 (left: -42.67)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "18 21"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "9 324"
                }
            },
            "Step 5": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 * 27 = 324 (left: 9 324) -> 324 / 9 = 36 (left: 9 36)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 * 27 = 324 (left: 9 324) -> 324 / 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: 3 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 12 27"
                }
            },
            "Step 1": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 * 9 = 108 (left: 108 27)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 * 9 = 108 (left: 108 27) -> 27 + 108 = 135 (left: 108 135)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "27 35.91"
                }
            },
            "Step 3": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 / 9 = 1.33 (left: 1.33 27) -> 1.33 * 27 = 35.91 (left: 27 35.91) -> 27 + 35.91 = 62.91 (left: 62.91)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "6 18 12"
                }
            },
            "Step 4": {
                "Step": "9 + 9 = 18 (left: 6 18 12) -> 12 / 6 = 2 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "9 + 9 = 18 (left: 6 18 12) -> 12 / 6 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 9 = 18 (left: 6 18 12) -> 12 / 6 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14) -> No more steps can be taken with just one number.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 * 3 = 27 (left: 9 12 27)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 12 27"
                }
            },
            "Step 1": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 / 9 = 1.33 (left: 1.33 27)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 / 9 = 1.33 (left: 1.33 27) -> 1.33 * 27 = 35.91 (left: 27 35.91)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "27 35.91"
                }
            },
            "Step 3": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 / 9 = 1.33 (left: 1.33 27) -> 1.33 * 27 = 35.91 (left: 27 35.91) -> 27 + 35.91 = 62.91 (left: 62.91)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "27 35.91"
                }
            },
            "Step 4": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 / 9 = 1.33 (left: 1.33 27) -> 1.33 * 27 = 35.91 (left: 27 35.91) -> 27 / 35.91 = 0.75 (left: 0.75)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "567"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "9 + 9 = 18 (left: 6 18 12) -> 12 / 6 = 2 (left: 2 12) -> 2 + 12 = 14",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 9 = 18 (left: 6 18 12) -> 12 / 6 = 2 (left: 2 12) -> 2 + 12 = 14 -> 12 + 2 = 14 (left: 14)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 9 9 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 12 27"
                }
            },
            "Step 1": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 / 9 = 1.33 (left: 1.33 27)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 / 9 = 1.33 (left: 1.33 27) -> 27 - 1.33 = 25.67 (left: 25.67)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "27 35.91"
                }
            },
            "Step 3": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 / 9 = 1.33 (left: 1.33 27) -> 1.33 * 27 = 35.91 (left: 27 35.91) -> 27 - 35.91 = -8.91 (left: -8.91)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "3 9 12"
                }
            },
            "Step 4": {
                "Step": "9 - 6 = 3 (left: 3 9 12) -> 9 - 3 = 6 (left: 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "9 + 9 = 18 (left: 6 18 12) -> 12 / 6 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 9 = 18 (left: 6 18 12) -> 12 / 6 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6) -> 6 / 8 = 0.75 (left: 0.75)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 9 9 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 12 27"
                }
            },
            "Step 1": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 9 + 12 = 21 (left: 21 27)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 9 + 12 = 21 (left: 21 27) -> 21 * 27 = 567 (left: 567)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "27 35.91"
                }
            },
            "Step 3": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 / 9 = 1.33 (left: 1.33 27) -> 1.33 * 27 = 35.91 (left: 27 35.91) -> 27 / 35.91 = 0.75 (left: 0.75)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "9 12 27"
                }
            },
            "Step 4": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 * 27 = 324 (left: 9 324)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "9 324"
                }
            },
            "Step 5": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 * 27 = 324 (left: 9 324) -> 9 + 324 = 333 (left: 333)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 * 27 = 324 (left: 9 324) -> 9 + 324 = 333 (left: 333) -> 3 + 3 + 3 = 9 (left: 9)",
                "Pruning": "NA"
            }
        },
        "Input": "6 9 9 12",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "1057": {
        "puzzle": "2 3 6 12",
        "Agent 0": {
            "Step 0": {
                "Step": "3 * 2 = 6 (left: 6 6 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> Possible",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> Possible -> It appears that the input is not clear. Please provide a valid input for the next steps to be determined.",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 5 * 6 = 30 (left: 30 12) -> 30 - 12 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 5 * 6 = 30 (left: 30 12) -> 30 - 12 = 18 (left: 18) -> There are no possible next steps with the input 18. -> There are no possible next steps with the input 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "18 / 2 = 9"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 5 * 6 = 30 (left: 30 12) -> 30 - 12 = 18 (left: 18) -> 18 / 2 = 9 -> 18 * 2 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "0.9166666666666666"
                }
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 5 + 6 = 11 (left: 11 12) -> 11 / 12 = 0.9166666666666666 (left: 0.9166666666666666) -> 0.9166666666666666 / 2 = 0.4583333333333333",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 * 2 = 6 (left: 6 6 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12) -> 12 / 1 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 5 * 6 = 30 (left: 30 12) -> 30 - 12 = 18 (left: 18) -> 18 / 2 = 9",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 5 * 6 = 30 (left: 30 12) -> 30 - 12 = 18 (left: 18) -> 18 / 2 = 9 -> 18 - 2 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "0.9166666666666666"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "0.9166666666666666"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 5 + 6 = 11 (left: 11 12) -> 11 / 12 = 0.9166666666666666 (left: 0.9166666666666666) -> There are no possible next steps as the input is already a single number.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 5 + 6 = 11 (left: 11 12) -> 11 / 12 = 0.9166666666666666 (left: 0.9166666666666666) -> There are no possible next steps as the input is already a single number. -> Input is already a single number.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 2 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12) -> 12 - 1 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 5 * 6 = 30 (left: 30 12) -> 30 - 12 = 18 (left: 18) -> 18 - 8 = 10 (left: 8 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 5 * 6 = 30 (left: 30 12) -> 30 - 12 = 18 (left: 18) -> 18 - 8 = 10 (left: 8 10) -> 10 - 8 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "0.9166666666666666"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "0.9166666666666666"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 5 + 6 = 11 (left: 11 12) -> 11 / 12 = 0.9166666666666666 (left: 0.9166666666666666) -> 0.9166666666666666 - 2 = -1.0833333333333335",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 5 + 6 = 11 (left: 11 12) -> 11 / 12 = 0.9166666666666666 (left: 0.9166666666666666) -> 0.9166666666666666 - 2 = -1.0833333333333335 -> 0.9166666666666666 + 2 = 2.9166666666666665 (left: -1.0833333333333335 2.9166666666666665)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 6 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "5 6 12"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 5 * 6 = 30 (left: 30 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 5 * 6 = 30 (left: 30 12) -> 30 - 12 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 5 * 6 = 30 (left: 30 12) -> 30 - 12 = 18 (left: 18) -> 18 * 2 = 36 (left: 8)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "18"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 5 * 6 = 30 (left: 30 12) -> 30 - 12 = 18 (left: 18) -> 18 / 2 = 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "0.9166666666666666"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 5 + 6 = 11 (left: 11 12) -> 11 / 12 = 0.9166666666666666 (left: 0.9166666666666666) -> 0.9166666666666666 + 2 = 2.916666666666666",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 5 + 6 = 11 (left: 11 12) -> 11 / 12 = 0.9166666666666666 (left: 0.9166666666666666) -> 0.9166666666666666 + 2 = 2.916666666666666 -> 2.916666666666666 + 2 = ",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 6 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "5 6 12"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 5 + 6 = 11 (left: 11 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 5 + 6 = 11 (left: 11 12) -> 11 / 12 = 0.9166666666666666 (left: 0.9166666666666666)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 5 * 6 = 30 (left: 30 12) -> 30 - 12 = 18 (left: 18) -> There are no possible next steps with the input of 18.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 5 * 6 = 30 (left: 30 12) -> 30 - 12 = 18 (left: 18) -> There are no possible next steps with the input of 18. -> 18 - 8 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "11"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "18 / 2 = 9"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 5 * 6 = 30 (left: 30 12) -> 30 - 12 = 18 (left: 18) -> 18 / 2 = 9 -> 5 + 6 = 11 (left: 4 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 5 * 6 = 30 (left: 30 12) -> 30 - 12 = 18 (left: 18) -> 18 / 2 = 9 -> 5 + 6 = 11 (left: 4 11) -> 3 * 5 = 15 (left: 7 15)",
                "Pruning": null
            }
        },
        "Input": "2 3 6 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1058": {
        "puzzle": "2 4 4 5",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 4 4 5)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 4 1"
                }
            },
            "Step 1": {
                "Step": "5 - 4 = 1 (left: 2 4 1) -> 4 - 2 = 2 (left: 2 1)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 - 4 = 1 (left: 2 4 1) -> 4 - 2 = 2 (left: 2 1) -> 2 + 1 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "15 2"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30) -> 10 + 5 = 15 (left: 15 2) -> 15 + 2 = 17 (left: 17)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "4 - 12 = -8 (left:"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 4 + 5 = 9 (left: 6 9) -> 4 - 12 = -8 (left: -> 4 / 12 = 0.3333 (left: -8 0.3333)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "8 10 12"
                }
            },
            "Step 5": {
                "Step": "5 - 4 = 1 (left: 2 4 1) -> 4 - 2 = 2 (left: 2 1) -> 2 + 1 = 3 (left: 3) -> 7 + 3 = 10 (left: 8 10 12) -> 8 * 10 = 80 (left: 80 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 - 4 = 1 (left: 2 4 1) -> 4 - 2 = 2 (left: 2 1) -> 2 + 1 = 3 (left: 3) -> 7 + 3 = 10 (left: 8 10 12) -> 8 * 10 = 80 (left: 80 12) -> 80 / 12 = 6.67 (left: 6.67)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "-8 0.3333"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 - 4 = 1 (left: 2 4 1)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 5 6"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 4 + 5 = 9 (left: 6 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 4 + 5 = 9 (left: 6 9) -> 4 - 12 = -8 (left:",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "15 2"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30) -> 10 + 5 = 15 (left: 15 2) -> 15 / 2 = 7.5 (left: 7.5)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "18"
                }
            },
            "Step 4": {
                "Step": "4 - 2 = 2 (left: 2 4 5) -> 4 + 5 = 9 (left: 2 9) -> 2 * 9 = 18 (left: 18) -> There are no possible next steps with the input of 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "8 10 12"
                }
            },
            "Step 5": {
                "Step": "5 - 4 = 1 (left: 2 4 1) -> 4 - 2 = 2 (left: 2 1) -> 2 + 1 = 3 (left: 3) -> 7 + 3 = 10 (left: 8 10 12) -> 10 / 8 = 1.25 (left: 1.25 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 - 4 = 1 (left: 2 4 1) -> 4 - 2 = 2 (left: 2 1) -> 2 + 1 = 3 (left: 3) -> 7 + 3 = 10 (left: 8 10 12) -> 10 / 8 = 1.25 (left: 1.25 12) -> 1.25 * 12 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "8 10 12"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 4 5 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 5 6"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30) -> 10 + 5 = 15 (left: 15 2)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "15 2"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30) -> 10 + 5 = 15 (left: 15 2) -> 15 + 2 = 17 (left: 17)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "4 5 6"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 + 6 = 11 (left: 4 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "8 10 12"
                }
            },
            "Step 5": {
                "Step": "5 - 4 = 1 (left: 2 4 1) -> 4 - 2 = 2 (left: 2 1) -> 2 + 1 = 3 (left: 3) -> 7 + 3 = 10 (left: 8 10 12) -> 8 -",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 - 4 = 1 (left: 2 4 1) -> 4 - 2 = 2 (left: 2 1) -> 2 + 1 = 3 (left: 3) -> 7 + 3 = 10 (left: 8 10 12) -> 8 - -> 8 - 8 = 0",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 - 2 = 2 (left: 2 4 5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "2 4 5"
                }
            },
            "Step 1": {
                "Step": "4 - 2 = 2 (left: 2 4 5) -> 5 - 2 = 3 (left: 3 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 - 2 = 2 (left: 2 4 5) -> 5 - 2 = 3 (left: 3 4) -> 5 + 9 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "15 2"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30) -> 10 + 5 = 15 (left: 15 2) -> 15 * 2 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "3"
                }
            },
            "Step 4": {
                "Step": "5 - 4 = 1 (left: 2 4 1) -> 4 - 2 = 2 (left: 2 1) -> 2 + 1 = 3 (left: 3) -> 7 + 3 = 10 (left: 8 10 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "8 10 12"
                }
            },
            "Step 5": {
                "Step": "5 - 4 = 1 (left: 2 4 1) -> 4 - 2 = 2 (left: 2 1) -> 2 + 1 = 3 (left: 3) -> 7 + 3 = 10 (left: 8 10 12) -> 8 - 10 = -2 (left: -2 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 - 4 = 1 (left: 2 4 1) -> 4 - 2 = 2 (left: 2 1) -> 2 + 1 = 3 (left: 3) -> 7 + 3 = 10 (left: 8 10 12) -> 8 - 10 = -2 (left: -2 12) -> -2 / 12 = -0.16666666666666666 (left: -0.16666666666666666)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "8 10 12"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 4 5 6)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "2 4 5"
                }
            },
            "Step 1": {
                "Step": "4 - 2 = 2 (left: 2 4 5) -> 4 + 5 = 9 (left: 2 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 - 2 = 2 (left: 2 4 5) -> 4 + 5 = 9 (left: 2 9) -> 2 * 9 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "15 2"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30) -> 10 + 5 = 15 (left: 15 2) -> Input: 3 5 7",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30) -> 10 + 5 = 15 (left: 15 2) -> Input: 3 5 7 -> 3 + 5 = 8 (left: 8 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "8 10 12"
                }
            },
            "Step 5": {
                "Step": "5 - 4 = 1 (left: 2 4 1) -> 4 - 2 = 2 (left: 2 1) -> 2 + 1 = 3 (left: 3) -> 7 + 3 = 10 (left: 8 10 12) -> 10 + 12 = 22 (left: 8 22)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 - 4 = 1 (left: 2 4 1) -> 4 - 2 = 2 (left: 2 1) -> 2 + 1 = 3 (left: 3) -> 7 + 3 = 10 (left: 8 10 12) -> 10 + 12 = 22 (left: 8 22) -> 8 - 22 = -14 (left: -14)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "There are no possible next steps with the input of 18."
                }
            }
        },
        "Input": "2 4 4 5",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1059": {
        "puzzle": "2 4 4 10",
        "Agent 0": {
            "Step 0": {
                "Step": "4 / 2 = 2 (left: 2 4 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 + 6 = 10 (left: 10 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 + 6 = 10 (left: 10 10) -> 10 * 10 = 100 (left: 100)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "2.4 10"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 / 10 = 2.4 (left: 2.4 10) -> 10 - 2.4 = 7.6 (left: 7.6)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "2 4 10"
                }
            },
            "Step 4": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 4 * 2 = 8 (left: 8 10)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "10 - 4 = 6 (left:"
                }
            },
            "Step 5": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 10 - 4 = 6 (left: -> 6 * 2 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 10 - 4 = 6 (left: -> 6 * 2 = 12 (left: 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "6 9"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 / 2 = 2 (left: 2 4 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 / 4 = 2.5 (left: 2.5 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 / 4 = 2.5 (left: 2.5 10) -> 10 + 2.5 = 12.5 (left: 2.5 12.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "2.4 10"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 / 10 = 2.4 (left: 2.4 10) -> Input: 100 5",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 / 10 = 2.4 (left: 2.4 10) -> Input: 100 5 -> 100 - 5 = 95 (left: 95)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "2.5 12.5"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "10 - 4 = 6 (left:"
                }
            },
            "Step 5": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 10 - 4 = 6 (left: -> 10 + 4 = 14 (left: 4 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 10 - 4 = 6 (left: -> 10 + 4 = 14 (left: 4 14) -> 14 + 4 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "6 9"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 / 2 = 2 (left: 2 4 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 / 10 = 2.4 (left: 2.4 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "2.4 10"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 / 10 = 2.4 (left: 2.4 10) -> 2.4 * 10 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "2 4 10"
                }
            },
            "Step 4": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 2 * 4 = 8 (left: 8 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "10 - 4 = 6 (left:"
                }
            },
            "Step 5": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 10 - 4 = 6 (left: -> 10 * 4 = 40 (left: 40)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 10 - 4 = 6 (left: -> 10 * 4 = 40 (left: 40) -> There are no possible next steps with the input of 40.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 / 2 = 2 (left: 2 4 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 - 4 = 6 (left: 6 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 - 4 = 6 (left: 6 10) -> 10 / 6 = 1.6666666666666667 (left: 1.6666666666666667 10)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "2.4 10"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 / 10 = 2.4 (left: 2.4 10) -> 10 / 2.4 = 4.16666666667 (left: 4.16666666667)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "2 4 10"
                }
            },
            "Step 4": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 10 - 4 = 6 (left:",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "10 - 4 = 6 (left:"
                }
            },
            "Step 5": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 10 - 4 = 6 (left: -> 10 / 4 = 2.5 (left: 2.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 10 - 4 = 6 (left: -> 10 / 4 = 2.5 (left: 2.5) -> 2.5 + 8 = 10.5 (left: 10.5)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "6 9"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 4 6 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 + 6 = 10 (left: 10 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 + 6 = 10 (left: 10 10) -> 10 / 10 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "2.4 10"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 / 10 = 2.4 (left: 2.4 10) -> 3 + 9 = 12 (left",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 / 10 = 2.4 (left: 2.4 10) -> 3 + 9 = 12 (left -> 9 - 3 = 6 (left: 6 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "10 - 4 = 6 (left:"
                }
            },
            "Step 5": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 10 - 4 = 6 (left: -> 8 / 6 = 1.33333 (left: 1.33333 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 10 - 4 = 6 (left: -> 8 / 6 = 1.33333 (left: 1.33333 8) -> 1.33333 + 8 = 9.33333 (left: 9.33333)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "6 9"
                }
            }
        },
        "Input": "2 4 4 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1060": {
        "puzzle": "3 3 3 4",
        "Agent 0": {
            "Step 0": {
                "Step": "4 / 3 = 1.33 (left: 1.33 3 3)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 4"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 3 6 4) -> 4",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 3 6 4) -> 4 -> There are no possible next steps with just the number 4.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 5.01"
                }
            },
            "Step 3": {
                "Step": "4 / 3 = 1.33 (left: 1.33 3 3) -> 3 - 1.33 = 1.67 (left: 1.67 3) -> 1.67 * 3 = 5.01 (left: 3 5.01) -> Possible next steps:",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 / 3 = 1.33 (left: 1.33 3 3) -> 3 - 1.33 = 1.67 (left: 1.67 3) -> 1.67 * 3 = 5.01 (left: 3 5.01) -> Possible next steps: -> 8 - 8 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "12.99"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "2 8"
                }
            },
            "Step 5": {
                "Step": "4 / 3 = 1.33 (left: 1.33 3 3) -> 3 - 1.33 = 1.67 (left: 1.67 3) -> 1.67 * 3 = 5.01 (left: 3 5.01) -> Input: 10 2 -> 10 - 2 = 8 (left: 2 8) -> 8 / 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "There are no possible next steps with just the number 4."
                }
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 3 6 4) -> 4 -> There are no possible next steps with just the number 4. -> 4 - 0 = 4 (left: 0)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "2 8"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 / 3 = 1 (left: 1 3 4)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1.33 3 3"
                }
            },
            "Step 1": {
                "Step": "4 / 3 = 1.33 (left: 1.33 3 3) -> 3 - 1.33 = 1.67 (left: 1.67 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 3 = 1.33 (left: 1.33 3 3) -> 3 - 1.33 = 1.67 (left: 1.67 3) -> 1.67 * 3 = 5.01 (left: 3 5.01)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 5.01"
                }
            },
            "Step 3": {
                "Step": "4 / 3 = 1.33 (left: 1.33 3 3) -> 3 - 1.33 = 1.67 (left: 1.67 3) -> 1.67 * 3 = 5.01 (left: 3 5.01) -> Input: 10 2",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 / 3 = 1.33 (left: 1.33 3 3) -> 3 - 1.33 = 1.67 (left: 1.67 3) -> 1.67 * 3 = 5.01 (left: 3 5.01) -> Input: 10 2 -> 10 - 2 = 8 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "2 8"
                }
            },
            "Step 5": {
                "Step": "4 / 3 = 1.33 (left: 1.33 3 3) -> 3 - 1.33 = 1.67 (left: 1.67 3) -> 1.67 * 3 = 5.01 (left: 3 5.01) -> Input: 10 2 -> 10 - 2 = 8 (left: 2 8) -> 8 - 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "1.33333"
                }
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 3 6 4) -> 6 - 3 = 3 (left: 3 4) -> 4 / 3 = 1.33333 (left: 1.33333) -> 1.33333 * 2 = 2.66666",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 3 6 4)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 4"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 3 6 4) -> 6 - 3 = 3 (left: 3 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 3 6 4) -> 6 - 3 = 3 (left: 3 4) -> 4 / 3 = 1.33333 (left: 1.33333)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 5.01"
                }
            },
            "Step 3": {
                "Step": "4 / 3 = 1.33 (left: 1.33 3 3) -> 3 - 1.33 = 1.67 (left: 1.67 3) -> 1.67 * 3 = 5.01 (left: 3 5.01) -> 5.01 - 3 = 2.01 (left: 2.01)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "12.99"
                }
            },
            "Step 4": {
                "Step": "4 / 3 = 1.33 (left: 1.33 3 3) -> 1.33 + 3 = 4.33 (left: 3 4.33) -> 3 * 4.33 = 12.99 (left: 12.99) -> There are no possible next steps for the number 12.99 as it is already a decimal number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "2 8"
                }
            },
            "Step 5": {
                "Step": "4 / 3 = 1.33 (left: 1.33 3 3) -> 3 - 1.33 = 1.67 (left: 1.67 3) -> 1.67 * 3 = 5.01 (left: 3 5.01) -> Input: 10 2 -> 10 - 2 = 8 (left: 2 8) -> 8 / 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "There are no possible next steps for the number 12.99 as it is already a decimal number."
                }
            },
            "Step 6": {
                "Step": "4 / 3 = 1.33 (left: 1.33 3 3) -> 1.33 + 3 = 4.33 (left: 3 4.33) -> 3 * 4.33 = 12.99 (left: 12.99) -> There are no possible next steps for the number 12.99 as it is already a decimal number. -> N/A",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "There are no possible next steps for the number 12.99 as it is already a decimal number."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 - 3 = 1 (left: 3 3 1)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 3 7"
                }
            },
            "Step 1": {
                "Step": "3 + 4 = 7 (left: 3 3 7) -> 3 / 3 = 1 (left: 1 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 4 = 7 (left: 3 3 7) -> 3 / 3 = 1 (left: 1 7) -> 7 / 1 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 5.01"
                }
            },
            "Step 3": {
                "Step": "4 / 3 = 1.33 (left: 1.33 3 3) -> 3 - 1.33 = 1.67 (left: 1.67 3) -> 1.67 * 3 = 5.01 (left: 3 5.01) -> 3 + 5.01 = 8.01 (left: 8.01)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "3 6 4"
                }
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 3 6 4) -> 6 + 4 = 10 (left: 3 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "2 8"
                }
            },
            "Step 5": {
                "Step": "4 / 3 = 1.33 (left: 1.33 3 3) -> 3 - 1.33 = 1.67 (left: 1.67 3) -> 1.67 * 3 = 5.01 (left: 3 5.01) -> Input: 10 2 -> 10 - 2 = 8 (left: 2 8) -> 2 * 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "12.99"
                }
            },
            "Step 6": {
                "Step": "4 / 3 = 1.33 (left: 1.33 3 3) -> 1.33 + 3 = 4.33 (left: 3 4.33) -> 3 * 4.33 = 12.99 (left: 12.99) -> There are no possible next steps for the input 12.99 as it is a single number and not an equation.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 3 3 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1.33 3 3"
                }
            },
            "Step 1": {
                "Step": "4 / 3 = 1.33 (left: 1.33 3 3) -> 1.33 + 3 = 4.33 (left: 3 4.33)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 3 = 1.33 (left: 1.33 3 3) -> 1.33 + 3 = 4.33 (left: 3 4.33) -> 3 * 4.33 = 12.99 (left: 12.99)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 5.01"
                }
            },
            "Step 3": {
                "Step": "4 / 3 = 1.33 (left: 1.33 3 3) -> 3 - 1.33 = 1.67 (left: 1.67 3) -> 1.67 * 3 = 5.01 (left: 3 5.01) -> 4 + 7 = 11 (left: ",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "7"
                }
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 3 3 7) -> 3 / 3 = 1 (left: 1 7) -> 7 / 1 = 7 (left: 7) -> 7 + 8 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "There are no possible next steps with just the number 4."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "2 8"
                }
            },
            "Step 5": {
                "Step": "4 / 3 = 1.33 (left: 1.33 3 3) -> 3 - 1.33 = 1.67 (left: 1.67 3) -> 1.67 * 3 = 5.01 (left: 3 5.01) -> Input: 10 2 -> 10 - 2 = 8 (left: 2 8) -> Input: 10 4 16 6",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 3 = 1.33 (left: 1.33 3 3) -> 3 - 1.33 = 1.67 (left: 1.67 3) -> 1.67 * 3 = 5.01 (left: 3 5.01) -> Input: 10 2 -> 10 - 2 = 8 (left: 2 8) -> Input: 10 4 16 6 -> 6 * 4 = 24 (left: 10 16 24)",
                "Pruning": null
            }
        },
        "Input": "3 3 3 4",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1061": {
        "puzzle": "2 2 2 7",
        "Agent 0": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 2 2 5)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 2 5"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 + 2 = 4 (left: 4 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 + 2 = 4 (left: 4 5) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 3 + 3 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (7 - 2) * (2 + 2) = 24",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "2 2 5"
                }
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 5 / 2 = 2.5 (left: 2.5 2)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 5"
                }
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 * 2 = 4 (left: 4 5) -> 4 * 5 = 20 (left: 20)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 * 2 = 4 (left: 4 5) -> 4 * 5 = 20 (left: 20) -> None, since there is only one number given.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 2 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 2 5"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 3 + 3 = 6 (left: 4 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 3 + 3 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 3 + 3 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (7 - 2) * (2 + 2) = 24",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "18"
                }
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 3 + 6 = 9 ( -> 6 * 3 = 18 (left: 18) -> 18 - 8 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "It seems like there was an error in the input. Please provide a valid set of numbers to continue finding possible next steps."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 5"
                }
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 * 2 = 4 (left: 4 5) -> 4 + 5 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 * 2 = 4 (left: 4 5) -> 4 + 5 = 9 (left: 9) -> There are no possible next steps with the input 9.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 2 2 5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 2 5"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 + 2 = 4 (left: 4 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 + 2 = 4 (left: 4 5) -> 5 - 4 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 3 + 3 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (7 - 2) * (2 + 2) = 24",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "2 2 5"
                }
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 * 2 = 4 (left: 4 5)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 5"
                }
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 * 2 = 4 (left: 4 5) -> 4 * 5 = 20 (left: 20)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 * 2 = 4 (left: 4 5) -> 4 * 5 = 20 (left: 20) -> None.",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "Unfortunately, without valid input numbers, I am unable to provide possible next steps. Please provide a valid set of numbers for me to continue. Thank you."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 2 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 2 5"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 3 + 6 = 9 (",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 3 + 6 = 9 ( -> 6 * 3 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 3 + 6 = 9 ( -> 6 * 3 = 18 (left: 18) -> 18 + 8 = 26 (left: 8 26)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 3 + 6 = 9 ( -> 6 * 3 = 18 (left: 18) -> 18 + 8 = 26 (left: 8 26) -> 7",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "It seems like there was an error in the input. Please provide a valid set of numbers to continue finding possible next steps."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 5"
                }
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 * 2 = 4 (left: 4 5) -> 5 / 4 = 1.25 (left: 1.25)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 * 2 = 4 (left: 4 5) -> 5 / 4 = 1.25 (left: 1.25) -> There is only one number provided (1.25), so there are no possible next steps.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 2 4 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 4 7"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 2 4 7) -> Possible",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 2 4 7) -> Possible -> It seems like there was an error in the input. Please provide a valid set of numbers to continue finding possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 3 + 3 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (7 - 2) * (2 + 2) = 24",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "It seems like there was an error in the input. Please provide a valid set of numbers to continue finding possible next steps."
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 2 4 7) -> Possible -> It seems like there was an error in the input. Please provide a valid set of numbers to continue finding possible next steps. -> Unfortunately, without valid input numbers, I am unable to provide possible next steps. Please provide a valid set of numbers for me to continue. Thank you.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 5"
                }
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 * 2 = 4 (left: 4 5) -> 4 + 5 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 * 2 = 4 (left: 4 5) -> 4 + 5 = 9 (left: 9) -> 8 + 9 = 17 (left: 17)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "Unfortunately, without valid input numbers, I am unable to provide possible next steps. Please provide a valid set of numbers for me to continue. Thank you."
                }
            }
        },
        "Input": "2 2 2 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1062": {
        "puzzle": "4 9 10 11",
        "Agent 0": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 10 11 36)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9 "
                }
            },
            "Step 1": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 9 - 4 = 5 (left: 5 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 9 - 4 = 5 (left: 5 9) -> 9 - 5 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> There is only one possible next step: 6 * 6 = 36",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> There is only one possible next step: 6 * 6 = 36 -> There is only one possible next step: 6 * 6 = 36",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> 36 - 2 = 34 (left: 34)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "4"
                }
            },
            "Step 6": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 9 - 4 = 5 (left: 5 9) -> 9 - 5 = 4 (left: 4) -> There are no possible next steps with the input of 4.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 / 4 = 2.25 (left: 2.25 10 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9 "
                }
            },
            "Step 1": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 9 / 4 = 2.25 (left: 2.25 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 9 / 4 = 2.25 (left: 2.25 9) -> 2.25 + 9 = 11.25 (left: 11.25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> None - the input is a single number and there are no other numbers to perform operations with.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> None - the input is a single number and there are no other numbers to perform operations with. -> There are no possible next steps since there are no other numbers to perform operations with.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> No possible next steps with a single number input.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> No possible next steps with a single number input. -> No possible next steps with a single number input.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 9 = 13 (left: 10 11 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9 "
                }
            },
            "Step 1": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 4 * 9 = 36 (left: 9 36)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> 36 / 2 = 18 -> 10 - 2 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "36"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> There are no possible next steps with only one number given.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> There are no possible next steps with only one number given. -> Please provide more than one number for calculation.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 * 11 = 110 (left: 4 9 ",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9 "
                }
            },
            "Step 1": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 4 * 9 = 36 (left: 9 36)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 + 36 = 45 (left: 45)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> There are no possible next steps for the input 36.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> There are no possible next steps for the input 36. -> There are no possible next steps for the input 36.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> There are no possible next steps with only the number 36.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> There are no possible next steps with only the number 36. -> None",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "There are no possible next steps since there are no other numbers to perform operations with."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 10 11 36)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9 "
                }
            },
            "Step 1": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 9 / 4 = 2.25 (left: 2.25 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 9 / 4 = 2.25 (left: 2.25 9) -> 2.25 + 9 = 11.25 (left: 11.25)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> None, as there is only one number provided.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> None, as there is only one number provided. -> There are no possible next steps as there is only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> 36 / 2 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "There are no possible next steps since there are no other numbers to perform operations with."
                }
            },
            "Step 6": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> None - the input is a single number and there are no other numbers to perform operations with. -> There are no possible next steps since there are no other numbers to perform operations with. -> None",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "There is only one possible next step: 6 * 6 = 36"
                }
            }
        },
        "Input": "4 9 10 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1063": {
        "puzzle": "7 9 10 11",
        "Agent 0": {
            "Step 0": {
                "Step": "7 * 9 = 63 (left: 10 11 63)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "7 9 1"
                }
            },
            "Step 1": {
                "Step": "11 - 10 = 1 (left: 7 9 1) -> 9 / 7 = 1.28571428571 (left: 1 1.28571428571)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 10 = 1 (left: 7 9 1) -> 9 / 7 = 1.28571428571 (left: 1 1.28571428571) -> 1 + 1.28571428571 = 2.28571428571 (left: 2.28571428571)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 8 90"
                }
            },
            "Step 3": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 11 = 8 (left: 7 8 90) -> 8 - 7 = 1 (left: 1 8 90) -> 90 / 1 = 90 (left: 8 90)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 11 = 8 (left: 7 8 90) -> 8 - 7 = 1 (left: 1 8 90) -> 90 / 1 = 90 (left: 8 90) -> 90 / 8 = 11.25 (left: 11.25)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "-15"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "9 9 12"
                }
            },
            "Step 5": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 11 = 8 (left: 7 8 90) -> 8 - 7 = 1 (left: 1 8 90) -> 8 * 1 = 8 (left: 8 90) -> 3 + 6 = 9 (left: 9 9 12) -> 12 / 9 = 1 (left: 9 1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 11 = 8 (left: 7 8 90) -> 8 - 7 = 1 (left: 1 8 90) -> 8 * 1 = 8 (left: 8 90) -> 3 + 6 = 9 (left: 9 9 12) -> 12 / 9 = 1 (left: 9 1) -> 9 - 1 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "9 9 12"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 * 11 = 110 (left: 7 9 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "7 11 90"
                }
            },
            "Step 1": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 11 = 8 (left: 7 8 90)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 11 = 8 (left: 7 8 90) -> 8 - 7 = 1 (left: 1 8 90)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 8 90"
                }
            },
            "Step 3": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 11 = 8 (left: 7 8 90) -> 8 - 7 = 1 (left: 1 8 90) -> 90 / 1 = 90 (left: 8 90)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 11 = 8 (left: 7 8 90) -> 8 - 7 = 1 (left: 1 8 90) -> 90 / 1 = 90 (left: 8 90) -> 90 - 8 = 82 (left: 82)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "-15"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "9 9 12"
                }
            },
            "Step 5": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 11 = 8 (left: 7 8 90) -> 8 - 7 = 1 (left: 1 8 90) -> 8 * 1 = 8 (left: 8 90) -> 3 + 6 = 9 (left: 9 9 12) -> 9 / 9 = 1 (left: 1 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 11 = 8 (left: 7 8 90) -> 8 - 7 = 1 (left: 1 8 90) -> 8 * 1 = 8 (left: 8 90) -> 3 + 6 = 9 (left: 9 9 12) -> 9 / 9 = 1 (left: 1 12) -> 1 * 12 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "9 9 12"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 * 10 = 90 (left: 7 11 90)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "7 9 1"
                }
            },
            "Step 1": {
                "Step": "11 - 10 = 1 (left: 7 9 1) -> 7 + 9 = 16 (left: 1 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 10 = 1 (left: 7 9 1) -> 7 + 9 = 16 (left: 1 16) -> 1 - 16 = -15 (left: -15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 8 90"
                }
            },
            "Step 3": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 11 = 8 (left: 7 8 90) -> 8 - 7 = 1 (left: 1 8 90) -> 1 / 8 = 0.125 (",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 11 = 8 (left: 7 8 90) -> 8 - 7 = 1 (left: 1 8 90) -> 1 / 8 = 0.125 ( -> 1 / 8 = 0.125 (left: 0.125)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "167"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "9 9 12"
                }
            },
            "Step 5": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 11 = 8 (left: 7 8 90) -> 8 - 7 = 1 (left: 1 8 90) -> 8 * 1 = 8 (left: 8 90) -> 3 + 6 = 9 (left: 9 9 12) -> 12 - 9 = 3 (left: 3 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 11 = 8 (left: 7 8 90) -> 8 - 7 = 1 (left: 1 8 90) -> 8 * 1 = 8 (left: 8 90) -> 3 + 6 = 9 (left: 9 9 12) -> 12 - 9 = 3 (left: 3 9) -> Input: 4 16",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "11 - 10 = 1 (left: 7 9 1)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "7 11 90"
                }
            },
            "Step 1": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 11 * 7 = 77 (left: 77 90)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 11 * 7 = 77 (left: 77 90) -> 77 + 90 = 167 (left: 167)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 8 90"
                }
            },
            "Step 3": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 11 = 8 (left: 7 8 90) -> 8 - 7 = 1 (left: 1 8 90) -> 8 * 1 = 8 (left: 8 90)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 11 = 8 (left: 7 8 90) -> 8 - 7 = 1 (left: 1 8 90) -> 8 * 1 = 8 (left: 8 90) -> 3 + 6 = 9 (left: 9 9 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "9 9 12"
                }
            },
            "Step 5": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 11 = 8 (left: 7 8 90) -> 8 - 7 = 1 (left: 1 8 90) -> 8 * 1 = 8 (left: 8 90) -> 3 + 6 = 9 (left: 9 9 12) -> 12 + 9 = 21 (left: 9 21)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 11 = 8 (left: 7 8 90) -> 8 - 7 = 1 (left: 1 8 90) -> 8 * 1 = 8 (left: 8 90) -> 3 + 6 = 9 (left: 9 9 12) -> 12 + 9 = 21 (left: 9 21) -> 21 - 9 = 12 (left: 9 12)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "7 + 9 = 16 (left: 10 11 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "7 11 90"
                }
            },
            "Step 1": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 - 11 = 79 (left: 11 79)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 - 11 = 79 (left: 11 79) -> 11 * 79 = 869 (left: 869)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 8 90"
                }
            },
            "Step 3": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 11 = 8 (left: 7 8 90) -> 8 - 7 = 1 (left: 1 8 90) -> 8 * 1 = 8 (left: 8 90)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 11 = 8 (left: 7 8 90) -> 8 - 7 = 1 (left: 1 8 90) -> 8 * 1 = 8 (left: 8 90) -> 90 / 8 = 11.25 (left: 11.25)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "167"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "9 9 12"
                }
            },
            "Step 5": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 11 = 8 (left: 7 8 90) -> 8 - 7 = 1 (left: 1 8 90) -> 8 * 1 = 8 (left: 8 90) -> 3 + 6 = 9 (left: 9 9 12) -> 9 * 9 = 81 (left: 12 81)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 11 = 8 (left: 7 8 90) -> 8 - 7 = 1 (left: 1 8 90) -> 8 * 1 = 8 (left: 8 90) -> 3 + 6 = 9 (left: 9 9 12) -> 9 * 9 = 81 (left: 12 81) -> 81 - 12 = 69 (left: 69)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "9 9 12"
                }
            }
        },
        "Input": "7 9 10 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1064": {
        "puzzle": "1 4 5 7",
        "Agent 0": {
            "Step 0": {
                "Step": "7 - 1 = 6 (left: 4 5 ",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 5 "
                }
            },
            "Step 1": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 4 + 5 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 4 + 5 = 9 (left: 9) -> There is only one possible next step with the input 9:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 3": {
                "Step": "7 - 1 = 6 (left: 4 5  -> Input: 10 2 -> 10 + 2 = 12 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "7"
                }
            },
            "Step 4": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 7 - 5 = 2 (left: 2 5) -> 2 + 5 = 7 (left: 7) -> 7 + 8 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "1.42857142857"
                },
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "8 56"
                }
            },
            "Step 5": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 7 - 5 = 2 (left: 2 5) -> 2 + 5 = 7 (left: 7) -> 7 * 8 = 56 (left: 8 56) -> 8 * 7 = 56 (left: 56)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "There is only one possible next step with the input 9:"
                }
            },
            "Step 6": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 4 + 5 = 9 (left: 9) -> There is only one possible next step with the input 9: -> 9 + 9 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "8 56"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "1 + 4 = 5 (left: 5 5 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 5 7"
                }
            },
            "Step 1": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10) -> 10 / 7 = 1.42857142857 (left: 1.42857142857)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 3": {
                "Step": "7 - 1 = 6 (left: 4 5  -> Input: 10 2 -> 10 + 2 = 12 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "7"
                }
            },
            "Step 4": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 7 - 5 = 2 (left: 2 5) -> 2 + 5 = 7 (left: 7) -> 7 * 8 = 56 (left: 8 56)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "8 56"
                }
            },
            "Step 5": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 7 - 5 = 2 (left: 2 5) -> 2 + 5 = 7 (left: 7) -> 7 * 8 = 56 (left: 8 56) -> 8 * 7 = 56 (left: 56)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "1.42857142857"
                }
            },
            "Step 6": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10) -> 10 / 7 = 1.42857142857 (left: 1.42857142857) -> 1.42857142857 * 2 = 2.85714285714",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 1 = 5 (left: 5 5 7)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 5 7"
                }
            },
            "Step 1": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 7 - 5 = 2 (left: 2 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 7 - 5 = 2 (left: 2 5) -> 2 + 5 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 3": {
                "Step": "7 - 1 = 6 (left: 4 5  -> Input: 10 2 -> 10 + 2 = 12 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "1.42857142857"
                }
            },
            "Step 4": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10) -> 10 / 7 = 1.42857142857 (left: 1.42857142857) -> There are no possible next steps for 1.42857142857 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "8 56"
                }
            },
            "Step 5": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 7 - 5 = 2 (left: 2 5) -> 2 + 5 = 7 (left: 7) -> 7 * 8 = 56 (left: 8 56) -> 56 / 8 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "There are no possible next steps with the input 6.4."
                }
            },
            "Step 6": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 7 / 5 = 1.4 (left: 1.4 5) -> 1.4 + 5 = 6.4 (left: 6.4) -> There are no possible next steps with the input 6.4. -> There are no possible next steps with the input 6.4.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 + 2 = 7 (left: 4 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 5 7"
                }
            },
            "Step 1": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 7 / 5 = 1.4 (left: 1.4 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 7 / 5 = 1.4 (left: 1.4 5) -> 1.4 + 5 = 6.4 (left: 6.4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 3": {
                "Step": "7 - 1 = 6 (left: 4 5  -> Input: 10 2 -> 10 + 2 = 12 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "6.4"
                }
            },
            "Step 4": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 7 / 5 = 1.4 (left: 1.4 5) -> 1.4 + 5 = 6.4 (left: 6.4) -> There are no possible next steps with the input 6.4.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "8 56"
                }
            },
            "Step 5": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 7 - 5 = 2 (left: 2 5) -> 2 + 5 = 7 (left: 7) -> 7 * 8 = 56 (left: 8 56) -> 56 - 8 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "8 56"
                }
            },
            "Step 6": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 7 - 5 = 2 (left: 2 5) -> 2 + 5 = 7 (left: 7) -> 7 * 8 = 56 (left: 8 56) -> 8 * 7 = 56 (left: 56)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "There are no possible next steps with the input 6.4."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 + 4 = 5 (left: 5 5 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 5 "
                }
            },
            "Step 1": {
                "Step": "7 - 1 = 6 (left: 4 5  -> Input: 10 2",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 1 = 6 (left: 4 5  -> Input: 10 2 -> 10 + 2 = 12 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 3": {
                "Step": "7 - 1 = 6 (left: 4 5  -> Input: 10 2 -> 10 + 2 = 12 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "5 5 7"
                }
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "8 56"
                }
            },
            "Step 5": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 7 - 5 = 2 (left: 2 5) -> 2 + 5 = 7 (left: 7) -> 7 * 8 = 56 (left: 8 56) -> 56 - 8 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "There are no possible next steps with the input 6.4."
                }
            },
            "Step 6": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 7 / 5 = 1.4 (left: 1.4 5) -> 1.4 + 5 = 6.4 (left: 6.4) -> There are no possible next steps with the input 6.4. -> There are no possible next steps with the input 6.4.",
                "Pruning": null
            }
        },
        "Input": "1 4 5 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1065": {
        "puzzle": "3 4 9 9",
        "Agent 0": {
            "Step 0": {
                "Step": "9 - 4 = 5 (left: 3 5 9)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 5 9"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 5 + 9 = 14 (left: 3 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 5 + 9 = 14 (left: 3 14) -> 14 / 3 = 4.67 (left: 3 4.67)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 27"
                }
            },
            "Step 3": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 + 9 = 15 (left: 4 15) -> 9 / 3 = 3 (left: 3 27) -> 27 - 3 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "3 5 9"
                }
            },
            "Step 4": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 5 * 3 = 15 (left: 15 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "15 9"
                }
            },
            "Step 5": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 5 * 3 = 15 (left: 15 9) -> 9 * 15 = 135 (",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 5 * 3 = 15 (left: 15 9) -> 9 * 15 = 135 ( -> 9 - 15 = -6",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 4 9 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 1": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 + 9 = 15 (left: 4 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 + 9 = 15 (left: 4 15) -> 9 / 3 = 3 (left: 3 27)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "3 4.67"
                }
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 5 + 9 = 14 (left: 3 14) -> 14 / 3 = 4.67 (left: 3 4.67) -> 3 * 4.67 = 14.01 (left: 14.01)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "4 9 9"
                }
            },
            "Step 4": {
                "Step": "9 / 3 = 3 (left: 4 9 9) -> 4 + 9 = 13 (left: 9 9 13)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "15 9"
                }
            },
            "Step 5": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 5 * 3 = 15 (left: 15 9) -> 9 + 15 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 5 * 3 = 15 (left: 15 9) -> 9 + 15 = 24 (left: 24) -> Answer: (9 + (9 - 4)) * 3 = 24",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "There are no possible next steps for the input 2.67."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 9 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 1": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 4 + 6 = 10 (left: 10 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 4 + 6 = 10 (left: 10 9) -> 10 / 9 = 1.111... (left: 1.111...)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 27"
                }
            },
            "Step 3": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 + 9 = 15 (left: 4 15) -> 9 / 3 = 3 (left: 3 27) -> 27 - 3 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "7 9 9"
                }
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 7 9 9) -> 9 / 7 = 1.2857 (left: 1.2857 9)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "15 9"
                }
            },
            "Step 5": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 5 * 3 = 15 (left: 15 9) -> Possible next steps:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 5 * 3 = 15 (left: 15 9) -> Possible next steps: -> There are no more possible next steps with the given input.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 3 = 6 (left: 4 6 9)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 1": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 9 / 4 = 2.25 (left: 2.25 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 9 / 4 = 2.25 (left: 2.25 6) -> 6 / 2.25 = 2.67 (left: 2.67)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 27"
                }
            },
            "Step 3": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 + 9 = 15 (left: 4 15) -> 9 / 3 = 3 (left: 3 27) -> 3 * 27 = 81 (left: 81)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "7 9 9"
                }
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 7 9 9) -> 9 - 7 = 2 (left: 2 9)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "15 9"
                }
            },
            "Step 5": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 5 * 3 = 15 (left: 15 9) -> 9 * 15 = 135 (",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 5 * 3 = 15 (left: 15 9) -> 9 * 15 = 135 ( -> 9 / 15 = 0.6",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 * 3 = 12 (left: 9 9 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 5 9"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> Input: 4 6 10",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> Input: 4 6 10 -> 10 / 4 = 2.5 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 27"
                }
            },
            "Step 3": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 + 9 = 15 (left: 4 15) -> 9 / 3 = 3 (left: 3 27) -> 3 * 27 = 81 (left: 81)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "2.67"
                }
            },
            "Step 4": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 9 / 4 = 2.25 (left: 2.25 6) -> 6 / 2.25 = 2.67 (left: 2.67) -> There are no possible next steps for the input 2.67.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "15 9"
                }
            },
            "Step 5": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 5 * 3 = 15 (left: 15 9) -> 15 / 9 = 1.6666666666666667 (left: 1.6666666666666667)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 5 * 3 = 15 (left: 15 9) -> 15 / 9 = 1.6666666666666667 (left: 1.6666666666666667) -> There are no possible next steps for the input 1.6666666666666667 as it is already a single number.",
                "Pruning": null
            }
        },
        "Input": "3 4 9 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1066": {
        "puzzle": "3 3 6 8",
        "Agent 0": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 6 6 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 6 8"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8) -> 1.5 / 8 = 0.1875 (left: 0.1875)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "0.1875"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8) -> 1.5 / 8 = 0.1875 (left: 0.1875) -> There are no possible next steps for the input 0.1875.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8) -> 1.5 / 8 = 0.1875 (left: 0.1875) -> There are no possible next steps for the input 0.1875. -> There are no possible next steps for the input 0.1875.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "0.3333333333333333 8"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8) -> 1.5 * 8 = 12 (left: 12) -> 12 * 2 = 24 (left: 8 24) -> 8 / 24 = 0.3333333333333333 (left: 0.3333333333333333 8) -> 0.3333333333333333 * 8 = 2.6666666666666665 (left: 2.6666666666666665)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "120"
                }
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 + 6 = 15 (left: 8 15) -> 8 * 15 = 120 (left: 120) -> 120 / 2 = 60",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 - 6 = 2 (left: 3 6 2)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 6 8"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8) -> 1.5 * 8 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "12"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8) -> 1.5 * 8 = 12 (left: 12) -> 12 * 2 = 24 (left: 8 24)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8) -> 1.5 * 8 = 12 (left: 12) -> 12 * 2 = 24 (left: 8 24) -> 8 / 24 = 0.3333333333333333 (left: 0.3333333333333333 8)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "0.3333333333333333 8"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8) -> 1.5 * 8 = 12 (left: 12) -> 12 * 2 = 24 (left: 8 24) -> 8 / 24 = 0.3333333333333333 (left: 0.3333333333333333 8) -> 8 / 0.3333333333333333 = 24 (left: 24 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8) -> 1.5 * 8 = 12 (left: 12) -> 12 * 2 = 24 (left: 8 24) -> 8 / 24 = 0.3333333333333333 (left: 0.3333333333333333 8) -> 8 / 0.3333333333333333 = 24 (left: 24 8) -> 24 + 8 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "0.3333333333333333 8"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 6 8)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 6 8"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 8 - 6 = 2 (left: 2 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 8 - 6 = 2 (left: 2 8) -> 8 - 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "6"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 8 - 6 = 2 (left: 2 8) -> 8 - 2 = 6 (left: 6) -> 8 / 2 = 4 (left: 4 6)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 8 - 6 = 2 (left: 2 8) -> 8 - 2 = 6 (left: 6) -> 8 / 2 = 4 (left: 4 6) -> 4 + 6 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "0.1875"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "0.3333333333333333 8"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8) -> 1.5 * 8 = 12 (left: 12) -> 12 * 2 = 24 (left: 8 24) -> 8 / 24 = 0.3333333333333333 (left: 0.3333333333333333 8) -> 8 / 0.3333333333333333 = 24 (left: 24 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8) -> 1.5 * 8 = 12 (left: 12) -> 12 * 2 = 24 (left: 8 24) -> 8 / 24 = 0.3333333333333333 (left: 0.3333333333333333 8) -> 8 / 0.3333333333333333 = 24 (left: 24 8) -> 24 / 8 = 3 (left: 3 8)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 3 9 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 6 8"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8) -> 1.5 * 8 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "12"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8) -> 1.5 * 8 = 12 (left: 12) -> 12 + 2 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "3 6 2"
                }
            },
            "Step 4": {
                "Step": "8 - 6 = 2 (left: 3 6 2) -> 3 + 6 = 9 (left: 9 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "0.3333333333333333 8"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8) -> 1.5 * 8 = 12 (left: 12) -> 12 * 2 = 24 (left: 8 24) -> 8 / 24 = 0.3333333333333333 (left: 0.3333333333333333 8) -> 8 / 0.3333333333333333 = 24 (left: 24 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8) -> 1.5 * 8 = 12 (left: 12) -> 12 * 2 = 24 (left: 8 24) -> 8 / 24 = 0.3333333333333333 (left: 0.3333333333333333 8) -> 8 / 0.3333333333333333 = 24 (left: 24 8) -> 8 * ",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "8 - 6 = 2 (left: 2 6 ",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 6 8"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 + 6 = 15 (left: 8 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 + 6 = 15 (left: 8 15) -> 8 * 15 = 120 (left: 120)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "6"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 8 - 6 = 2 (left: 2 8) -> 8 - 2 = 6 (left: 6) -> 6 - 2 = 4 (left: 2)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "3 6 2"
                }
            },
            "Step 4": {
                "Step": "8 - 6 = 2 (left: 3 6 2) -> 3 + 6 = 9 (left: 2 9 2)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "0.3333333333333333 8"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8) -> 1.5 * 8 = 12 (left: 12) -> 12 * 2 = 24 (left: 8 24) -> 8 / 24 = 0.3333333333333333 (left: 0.3333333333333333 8) -> 8 / 0.3333333333333333 = 24 (left: 24 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8) -> 1.5 * 8 = 12 (left: 12) -> 12 * 2 = 24 (left: 8 24) -> 8 / 24 = 0.3333333333333333 (left: 0.3333333333333333 8) -> 8 / 0.3333333333333333 = 24 (left: 24 8) -> 24 / 8 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "0.3333333333333333 8"
                }
            }
        },
        "Input": "3 3 6 8",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1067": {
        "puzzle": "4 4 7 8",
        "Agent 0": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 7 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 7 8"
                }
            },
            "Step 1": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 1 * 7 = 7 (left: 7 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 1 * 7 = 7 (left: 7 8) -> 7 / 8 = 0.875 (left: 0.875)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "56"
                }
            },
            "Step 3": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 / 1 = 8 (left: 7 8) -> 7 * 8 = 56 (left: 56) -> There are no possible next steps with the input of 56.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 / 1 = 8 (left: 7 8) -> 7 * 8 = 56 (left: 56) -> There are no possible next steps with the input of 56. -> There are no possible next steps with the input of 56.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "No possible next steps."
                }
            },
            "Step 5": {
                "Step": "8 - 4 = 4 (left: 4 4  -> 4 - 4 = 0 (left: 0) -> There are no possible next steps as there are no numbers provided to perform operations on. -> No possible next steps. -> No possible next steps. -> There are no more possible next steps.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 4 = 4 (left: 4 4  -> 4 - 4 = 0 (left: 0) -> There are no possible next steps as there are no numbers provided to perform operations on. -> No possible next steps. -> No possible next steps. -> There are no more possible next steps. -> No more possible next steps.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 7 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 4 "
                }
            },
            "Step 1": {
                "Step": "8 - 4 = 4 (left: 4 4  -> 4 - 4 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 4 = 4 (left: 4 4  -> 4 - 4 = 0 (left: 0) -> There are no possible next steps as there are no numbers provided to perform operations on.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "0.875"
                }
            },
            "Step 3": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 1 * 7 = 7 (left: 7 8) -> 7 / 8 = 0.875 (left: 0.875) -> There are no possible next steps for the input 0.875.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 1 * 7 = 7 (left: 7 8) -> 7 / 8 = 0.875 (left: 0.875) -> There are no possible next steps for the input 0.875. -> There are no possible next steps for the input 0.875.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "There are no possible next steps for the input 0.875."
                }
            },
            "Step 5": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 1 * 7 = 7 (left: 7 8) -> 7 / 8 = 0.875 (left: 0.875) -> There are no possible next steps for the input 0.875. -> There are no possible next steps for the input 0.875. -> There are no possible next steps for the input 0.875.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 1 * 7 = 7 (left: 7 8) -> 7 / 8 = 0.875 (left: 0.875) -> There are no possible next steps for the input 0.875. -> There are no possible next steps for the input 0.875. -> There are no possible next steps for the input 0.875. -> There are no possible next steps for the input 0.875.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 4 = 8 (left: 7 8 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 7 8"
                }
            },
            "Step 1": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 / 1 = 8 (left: 7 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 / 1 = 8 (left: 7 8) -> 7 * 8 = 56 (left: 56)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "47"
                }
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 7 8 8) -> 1 + 8 = 9 (left: 56 9) -> 56 - 9 = 47 (left: 47) -> 47 / 2 = 23.5 (left: 2 23.5)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 7 8 8) -> 1 + 8 = 9 (left: 56 9) -> 56 - 9 = 47 (left: 47) -> 47 / 2 = 23.5 (left: 2 23.5) -> 23.5 / 2 = 11.75 (left: 11.75)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "47"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "There are no possible next steps for the input 0.875."
                }
            },
            "Step 5": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 1 * 7 = 7 (left: 7 8) -> 7 / 8 = 0.875 (left: 0.875) -> There are no possible next steps for the input 0.875. -> There are no possible next steps for the input 0.875. -> 0.875 / 2 = 0.4375 (left: 0.4375)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "47"
                }
            },
            "Step 6": {
                "Step": "4 + 4 = 8 (left: 7 8 8) -> 1 + 8 = 9 (left: 56 9) -> 56 - 9 = 47 (left: 47) -> 47 * 8 = 376 (left: 8)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "There are no possible next steps for the input 0.875."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 7 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "7 8 8"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 7 8 8) -> 1 + 8 = 9 (left: 56 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 7 8 8) -> 1 + 8 = 9 (left: 56 9) -> 56 - 9 = 47 (left: 47)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "There are no possible next steps as there are no numbers provided to perform operations on."
                }
            },
            "Step 3": {
                "Step": "8 - 4 = 4 (left: 4 4  -> 4 - 4 = 0 (left: 0) -> There are no possible next steps as there are no numbers provided to perform operations on. -> No possible next steps.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 - 4 = 4 (left: 4 4  -> 4 - 4 = 0 (left: 0) -> There are no possible next steps as there are no numbers provided to perform operations on. -> No possible next steps. -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "There are no possible next steps for the input 64 as it is only one number."
                }
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 7 8 8) -> 8 * 8 = 64 (left: 64) -> There are no possible next steps for the input 64 as it is only one number. -> There are no possible next steps for the input 64 as it is only one number.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 4 = 8 (left: 7 8 8) -> 8 * 8 = 64 (left: 64) -> There are no possible next steps for the input 64 as it is only one number. -> There are no possible next steps for the input 64 as it is only one number. -> There are no possible next steps for the input 64 as it is only one number.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "8 - 4 = 4 (left: 4 4 ",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "7 8 8"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 7 8 8) -> 8 * 8 = 64 (left: 64)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 7 8 8) -> 8 * 8 = 64 (left: 64) -> There are no possible next steps for the input 64 as it is only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "There are no possible next steps for the input 64 as it is only one number."
                }
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 7 8 8) -> 8 * 8 = 64 (left: 64) -> There are no possible next steps for the input 64 as it is only one number. -> None",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "47"
                }
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 7 8 8) -> 1 + 8 = 9 (left: 56 9) -> 56 - 9 = 47 (left: 47) -> 47 - 2 = 45 (left: 2)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "There are no possible next steps for the input 64 as it is only one number."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "There are no possible next steps for the input 64 as it is only one number."
                }
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 7 8 8) -> 8 * 8 = 64 (left: 64) -> There are no possible next steps for the input 64 as it is only one number. -> There are no possible next steps for the input 64 as it is only one number.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 4 = 8 (left: 7 8 8) -> 8 * 8 = 64 (left: 64) -> There are no possible next steps for the input 64 as it is only one number. -> There are no possible next steps for the input 64 as it is only one number. -> There are no possible next steps for the input 64 as it is only one number.",
                "Pruning": null
            }
        },
        "Input": "4 4 7 8",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1068": {
        "puzzle": "3 5 11 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 5 = 7 (left: 3 7 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 16 12"
                }
            },
            "Step 1": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 3 = 5.33 (left: 5.33 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 3 = 5.33 (left: 5.33 12) -> 12 - 5.33 = 6.67 (left: 6.67)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "25"
                }
            },
            "Step 3": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 - 3 = 13 (left: 13 12) -> 13 + 12 = 25 (left: 25) -> 25 * 8 = 200 (left: 8)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "3 16 12"
                }
            },
            "Step 4": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 3 * 16 = 48 (left: 12 48)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "0 50"
                }
            },
            "Step 5": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 - 3 = 13 (left: 13 12) -> 13 + 12 = 25 (left: 25) -> 25 + 25 = 50 -> 25 - 25 = 0 (left: 0 50) -> 0 + 50 = 50 (left: 50)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "60"
                }
            },
            "Step 6": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 3 * 16 = 48 (left: 12 48) -> 12 + 48 = 60 (left: 60) -> There are no possible next steps for the number 60.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "11 - 5 = 6 (left: 3 6 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 16 12"
                }
            },
            "Step 1": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 - 3 = 13 (left: 13 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 - 3 = 13 (left: 13 12) -> 13 + 12 = 25 (left: 25)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "25"
                }
            },
            "Step 3": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 - 3 = 13 (left: 13 12) -> 13 + 12 = 25 (left: 25) -> 25 + 25 = 50",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 - 3 = 13 (left: 13 12) -> 13 + 12 = 25 (left: 25) -> 25 + 25 = 50 -> 25 - 25 = 0 (left: 0 50)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "12 48"
                }
            },
            "Step 5": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 3 * 16 = 48 (left: 12 48) -> Input: 36 56",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 3 * 16 = 48 (left: 12 48) -> Input: 36 56 -> 36 - 56 = -20 (left: -20)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "21 + 2 = 23"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 * 5 = 15 (left: 15 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 16 12"
                }
            },
            "Step 1": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 3 * 16 = 48 (left: 12 48)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 3 * 16 = 48 (left: 12 48) -> 12 + 48 = 60 (left: 60)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "25"
                }
            },
            "Step 3": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 - 3 = 13 (left: 13 12) -> 13 + 12 = 25 (left: 25) -> 25 + 2 = 27 (left: 27)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "3 7 "
                }
            },
            "Step 4": {
                "Step": "12 - 5 = 7 (left: 3 7  -> 7 / 3 = 2.33333 (left: 2.33) ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "12 48"
                }
            },
            "Step 5": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 3 * 16 = 48 (left: 12 48) -> 48 - 12 = 36 (left: 36)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 3 * 16 = 48 (left: 12 48) -> 48 - 12 = 36 (left: 36) -> None, as 36 is the final result.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "3 * 5 = 15 (left: 15 11 12)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 6 12"
                }
            },
            "Step 1": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 3 + 6 = 9 (left: 9 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 3 + 6 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "25"
                }
            },
            "Step 3": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 - 3 = 13 (left: 13 12) -> 13 + 12 = 25 (left: 25) -> 25 - 2 = 23 (left: 2)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "3 6 12"
                }
            },
            "Step 4": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 3 + 6 = 9 (left:",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "0 50"
                }
            },
            "Step 5": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 - 3 = 13 (left: 13 12) -> 13 + 12 = 25 (left: 25) -> 25 + 25 = 50 -> 25 - 25 = 0 (left: 0 50) -> 50 - 0 = 50 (left: 50)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "6.67"
                }
            },
            "Step 6": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 3 = 5.33 (left: 5.33 12) -> 12 - 5.33 = 6.67 (left: 6.67) -> There are no possible next steps with the input 6.67.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 + 11 = 16 (left: 3 16 12)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "15 11 12"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 15 11 12) -> 12 / 11",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 15 11 12) -> 12 / 11 -> 12 / 11 = 1.0909090909090908",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "25"
                }
            },
            "Step 3": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 - 3 = 13 (left: 13 12) -> 13 + 12 = 25 (left: 25) -> 25 + 8 = 33 (left: 8)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "21"
                }
            },
            "Step 4": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 3 + 6 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21) -> 21 + 2 = 23",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "0 50"
                }
            },
            "Step 5": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 - 3 = 13 (left: 13 12) -> 13 + 12 = 25 (left: 25) -> 25 + 25 = 50 -> 25 - 25 = 0 (left: 0 50) -> 50 + 0 = 50 (left: 50)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "12 / 11 = 1.0909090909090908"
                }
            },
            "Step 6": {
                "Step": "3 * 5 = 15 (left: 15 11 12) -> 12 / 11 -> 12 / 11 = 1.0909090909090908 -> There are no possible next steps for the expression 12 / 11 = 1.0909090909090908 as it is already in its simplest form.",
                "Pruning": null
            }
        },
        "Input": "3 5 11 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1069": {
        "puzzle": "4 4 6 10",
        "Agent 0": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 6 10)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 4 10"
                }
            },
            "Step 1": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 + 4 = 10 (left: 4 10 10) -> 4 + 10 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24) -> Answer: ((6 + 4) + 10) + 4 = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 4 = 10 (left: 4 10 10)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 4 10"
                }
            },
            "Step 1": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 4 / 4 = 1 (left: 1 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 4 / 4 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 + 4 = 10 (left: 4 10 10) -> 4 + 10 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24) -> Answer: ((6 + 4) + 10) + 14 = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 6 = 4 (left: 4 4 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 10 10"
                }
            },
            "Step 1": {
                "Step": "6 + 4 = 10 (left: 4 10 10) -> 4 + 10 = 14 (left: 10 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 4 = 10 (left: 4 10 10) -> 4 + 10 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 + 4 = 10 (left: 4 10 10) -> 4 + 10 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24) -> Answer: ((6 + 4) + 10) + 14 = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 + 4 = 8 (left: 6 8 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 10 10"
                }
            },
            "Step 1": {
                "Step": "6 + 4 = 10 (left: 4 10 10) -> 10 / 4 = 2.5 (left: 2.5 10 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 4 = 10 (left: 4 10 10) -> 10 / 4 = 2.5 (left: 2.5 10 10) -> 2.5 + 10 = 12.5 (left: 10 12.5)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 + 4 = 10 (left: 4 10 10) -> 4 + 10 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24) -> Answer: ((4 + 6) + 4) + 10 = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "10 / 4 = 2.5 (left: 4 6 2.5)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 4 10"
                }
            },
            "Step 1": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 4 + 6 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 + 4 = 10 (left: 4 10 10) -> 4 + 10 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24) -> Answer: ((6 + 4) + 10) + 14 = 24"
            }
        },
        "Input": "4 4 6 10",
        "Verifications": [
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 1
            },
            {
                "r": -1
            }
        ]
    },
    "1070": {
        "puzzle": "4 6 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 9 10 13)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 4"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2) -> 2 + 2 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2 2"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2 4 4) -> 4 - 2 = 2 (left: 2 2) -> 2 + 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "2 2"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2 4 4) -> 4 - 2 = 2 (left: 2 2) -> 2 + 2 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "2 = 2"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2 4 4) -> 4 - 2 = 2 (left: 2 2) -> 2 + 2 = 4 -> 4 / 2 = 2 (left: 2 = 2) -> 2 / 2 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "2 + 2 = 4"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2) -> 2 + 2 = 4 -> 2 * 2 = 4 (left: 4 = 4)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 6 = 24 (left: 9 13 24)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 4"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2 4 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2 4 4) -> 4 - 2 = 2 (left: 2 2)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2 2"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2 4 4) -> 4 - 2 = 2 (left: 2 2) -> 2 / 2 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "4 15 13"
                }
            },
            "Step 4": {
                "Step": "6 + 9 = 15 (left: 4 15 13) -> 13 + 4 = 17 (left: 15 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "2 = 2"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2 4 4) -> 4 - 2 = 2 (left: 2 2) -> 2 + 2 = 4 -> 4 / 2 = 2 (left: 2 = 2) -> 2 - 2 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "2 2"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2 4 4) -> 4 - 2 = 2 (left: 2 2) -> 2 * 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "2 + 2 = 4"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 4 6 4)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 4"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 / 4 = 1.5 (left: 1.5 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 / 4 = 1.5 (left: 1.5 4) -> 4 / 1.5 = 2.66666666667 (left: 2.66666666667)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2 2"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2 4 4) -> 4 - 2 = 2 (left: 2 2) -> 2 - 2 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "2.66666666667"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 / 4 = 1.5 (left: 1.5 4) -> 4 / 1.5 = 2.66666666667 (left: 2.66666666667) -> There are no possible next steps with the input 2.66666666667 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "2 = 2"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2 4 4) -> 4 - 2 = 2 (left: 2 2) -> 2 + 2 = 4 -> 4 / 2 = 2 (left: 2 = 2) -> 2 + 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "2.66666666667"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 / 4 = 1.5 (left: 1.5 4) -> 4 / 1.5 = 2.66666666667 (left: 2.66666666667) -> There are no possible next steps for 2.66666666667 using the numbers 2, 8, 8, and 14.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 9 10 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 4"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 4 6 4) ->  -> It appears that the input is missing. Could you please provide the numbers for the next steps?",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2 2"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2 4 4) -> 4 - 2 = 2 (left: 2 2) -> 2 + 2 = 4",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2 4 4) -> 4 - 2 = 2 (left: 2 2) -> 2 + 2 = 4 -> 4 / 2 = 2 (left: 2 = 2)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "2 = 2"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2 4 4) -> 4 - 2 = 2 (left: 2 2) -> 2 + 2 = 4 -> 4 / 2 = 2 (left: 2 = 2) -> 2 / 2 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "2 + 2 = 4"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2 4 4) -> 4 - 2 = 2 (left: 2 2) -> 2 + 2 = 4 -> 4 - 2 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "2 + 2 = 4"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 4 15 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 4"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 / 4 = 1.5 (left: 1.5 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 / 4 = 1.5 (left: 1.5 4) -> 4 - 1.5 = 2.5 (left: 2.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2 2"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2 4 4) -> 4 - 2 = 2 (left: 2 2) -> 2 - 2 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "9 13 24"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 9 13 24) -> 13 - 9 = 4 (left: 4 13 24)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "2 = 2"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2 4 4) -> 4 - 2 = 2 (left: 2 2) -> 2 + 2 = 4 -> 4 / 2 = 2 (left: 2 = 2) -> There are no possible next steps as there is only one number given.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2 4 4) -> 4 - 2 = 2 (left: 2 2) -> 2 + 2 = 4 -> 4 / 2 = 2 (left: 2 = 2) -> There are no possible next steps as there is only one number given. -> There are no possible next steps as there is only one number given.",
                "Pruning": null
            }
        },
        "Input": "4 6 9 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1071": {
        "puzzle": "3 5 6 11",
        "Agent 0": {
            "Step 0": {
                "Step": "11 - 5 = 6 (left: 3 6 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 6 11"
                }
            },
            "Step 1": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 3 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "2"
                }
            },
            "Step 3": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 3 + 6 = 9 (left: 9 11) -> 11 - 9 = 2 (left: 2) -> There are no possible next steps with just the number 2.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 3 + 6 = 9 (left: 9 11) -> 11 - 9 = 2 (left: 2) -> There are no possible next steps with just the number 2. -> - 2 + 8 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "5.3333"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "-8"
                }
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 3 11) -> 3 - 11 = -8 (left: -8) -> -8 * 2 = -16 (left: -16)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 3 11) -> 3 - 11 = -8 (left: -8) -> -8 * 2 = -16 (left: -16) -> -16 * 2 = -32",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 * 6 = 30 (left: 3 30)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 5 11"
                }
            },
            "Step 1": {
                "Step": "6 - 3 = 3 (left: 3 5 11) -> 5 + 11 = 16 (left: 3 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 3 = 3 (left: 3 5 11) -> 5 + 11 = 16 (left: 3 16) -> 3 / 16 = 0.19 (left: 0.19 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "2"
                }
            },
            "Step 3": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 3 + 6 = 9 (left: 9 11) -> 11 - 9 = 2 (left: 2) -> 2 + 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "3 6 11"
                }
            },
            "Step 4": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 11 - 6 = 5 (left: 3 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "15 11"
                }
            },
            "Step 5": {
                "Step": "6 - 3 = 3 (left: 3 5 11) -> 3 * 5 = 15 (left: 15 11) -> 15 * 11 = 165 (left: 165)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 3 = 3 (left: 3 5 11) -> 3 * 5 = 15 (left: 15 11) -> 15 * 11 = 165 (left: 165) -> 165 / 5 = 33 (left: 33)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 3 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 6 11"
                }
            },
            "Step 1": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 6 * 3 = 18 (left: 18 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 6 * 3 = 18 (left: 18 11) -> 18 - 11 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "0.19 16"
                }
            },
            "Step 3": {
                "Step": "6 - 3 = 3 (left: 3 5 11) -> 5 + 11 = 16 (left: 3 16) -> 3 / 16 = 0.19 (left: 0.19 16) -> 0.19 * 16 = 3.04 (left: 3.04)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "3 5 11"
                }
            },
            "Step 4": {
                "Step": "6 - 3 = 3 (left: 3 5 11) -> 3 * 5 = 15 (left: 15 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "-8"
                }
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 3 11) -> 3 - 11 = -8 (left: -8) -> There are no possible next steps with the input of -8.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 3 11) -> 3 - 11 = -8 (left: -8) -> There are no possible next steps with the input of -8. -> There are no possible next steps with the input of -8.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "11 - 5 = 6 (left: 3 6 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 5 11"
                }
            },
            "Step 1": {
                "Step": "6 - 3 = 3 (left: 3 5 11) -> 5 + 11 = 16 (left: 3 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 3 = 3 (left: 3 5 11) -> 5 + 11 = 16 (left: 3 16) -> 16 / 3 = 5.3333 (left: 5.3333)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "7"
                }
            },
            "Step 3": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 6 * 3 = 18 (left: 18 11) -> 18 - 11 = 7 (left: 7) -> 7 / 8 = 0.875 (left: 0.875)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "0.19 16"
                }
            },
            "Step 4": {
                "Step": "6 - 3 = 3 (left: 3 5 11) -> 5 + 11 = 16 (left: 3 16) -> 3 / 16 = 0.19 (left: 0.19 16) -> 16 * 0.19 = 3.04 (left: 3.04)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "5.3333"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "-8"
                }
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 3 11) -> 3 - 11 = -8 (left: -8) -> -8 / -8 = 1 (left: )",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 3 11) -> 3 - 11 = -8 (left: -8) -> -8 / -8 = 1 (left: ) -> There are no more possible next steps.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 - 3 = 3 (left: 3 5 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 6 11"
                }
            },
            "Step 1": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 3 + 6 = 9 (left: 9 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 3 + 6 = 9 (left: 9 11) -> 11 - 9 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "0.19 16"
                }
            },
            "Step 3": {
                "Step": "6 - 3 = 3 (left: 3 5 11) -> 5 + 11 = 16 (left: 3 16) -> 3 / 16 = 0.19 (left: 0.19 16) -> 16 / 0.19 = 84.21 (left: 84.21)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "3 11"
                }
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 3 11) -> 3 - 11 = -8 (left: -8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "15 11"
                }
            },
            "Step 5": {
                "Step": "6 - 3 = 3 (left: 3 5 11) -> 3 * 5 = 15 (left: 15 11) -> 11 + 15 = 26 (left: 26)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 3 = 3 (left: 3 5 11) -> 3 * 5 = 15 (left: 15 11) -> 11 + 15 = 26 (left: 26) -> 26 + 8 = 34",
                "Pruning": null
            }
        },
        "Input": "3 5 6 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1072": {
        "puzzle": "1 5 8 13",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 5 = 6 (left: 6 8 13)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 40 13"
                }
            },
            "Step 1": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 - 1 = 39 (left: 39 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 - 1 = 39 (left: 39 13) -> 39 + 13 = 52 (left: 52)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "10"
                }
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 1 3 13) -> 13 - 3 = 10 (left: 1 10) -> 1 * 10 = 10 (left: 10) -> 10 + 2 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "1 40 13"
                }
            },
            "Step 4": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 - 1 = 39 (left: 39 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1 10"
                }
            },
            "Step 5": {
                "Step": "8 - 5 = 3 (left: 1 3 13) -> 13 - 3 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 5 = 3 (left: 1 3 13) -> 13 - 3 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 2 = 20 (left: 2 20)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 - 5 = 3 (left: 1 3 13)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 40 13"
                }
            },
            "Step 1": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 13 - 1 = 12 (left: 40 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 13 - 1 = 12 (left: 40 12) -> 40 * 12 = 480 (left: 480)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "53"
                }
            },
            "Step 3": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 / 13 = 3 (left: -> 40 + 13 = 53 (left: 53) -> 5 - 3 = 2 (left: 2 53)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 / 13 = 3 (left: -> 40 + 13 = 53 (left: 53) -> 5 - 3 = 2 (left: 2 53) -> 2 + 53 = 55 (left: 55)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "52"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1 10"
                }
            },
            "Step 5": {
                "Step": "8 - 5 = 3 (left: 1 3 13) -> 13 - 3 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 5 = 3 (left: 1 3 13) -> 13 - 3 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> None, the input is already a single number.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 + 5 = 6 (left: 6 8 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 40 13"
                }
            },
            "Step 1": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 13 + 1 = 14 (left: 40 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 13 + 1 = 14 (left: 40 14) -> 40 / 14 = 2.85714285714 (left: 2.85714285714)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "10"
                }
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 1 3 13) -> 13 - 3 = 10 (left: 1 10) -> 1 * 10 = 10 (left: 10) -> 10 + 8 = 18 (left: 8) ",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "480"
                }
            },
            "Step 4": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 13 - 1 = 12 (left: 40 12) -> 40 * 12 = 480 (left: 480) -> 48 * 10 = 480 (left: 480)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "10"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1 10"
                }
            },
            "Step 5": {
                "Step": "8 - 5 = 3 (left: 1 3 13) -> 13 - 3 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 5 = 3 (left: 1 3 13) -> 13 - 3 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 9) -> 9 * 8 = 72 (left: 72)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "None, the equation is already solved."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 * 8 = 40 (left: 1 40 13)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 3 13"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 1 3 13) -> 13 - 3 = 10 (left: 1 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 1 3 13) -> 13 - 3 = 10 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "52"
                }
            },
            "Step 3": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 - 1 = 39 (left: 39 13) -> 39 + 13 = 52 (left: 52) -> 5 + 2 = 7",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 - 1 = 39 (left: 39 13) -> 39 + 13 = 52 (left: 52) -> 5 + 2 = 7 -> None, the equation is already solved.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1 10"
                }
            },
            "Step 5": {
                "Step": "8 - 5 = 3 (left: 1 3 13) -> 13 - 3 = 10 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 5 = 3 (left: 1 3 13) -> 13 - 3 = 10 (left: 1 10) -> 1 + 10 = 11 (left: 11) -> There are no possible next steps with the input of 11.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "8 * 5 = 40 (left: 1 13 40)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 40 13"
                }
            },
            "Step 1": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 / 13 = 3 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 / 13 = 3 (left: -> 40 + 13 = 53 (left: 53)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "52"
                }
            },
            "Step 3": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 - 1 = 39 (left: 39 13) -> 39 + 13 = 52 (left: 52) -> 52 + 2 = 54 (left: 2)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "1 3 13"
                }
            },
            "Step 4": {
                "Step": "8 - 5 = 3 (left: 1 3 13) -> 13 - 3 = 10 (left: 1 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1 10"
                }
            },
            "Step 5": {
                "Step": "8 - 5 = 3 (left: 1 3 13) -> 13 - 3 = 10 (left: 1 10) -> 10 + 1 = 11 (left: 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 5 = 3 (left: 1 3 13) -> 13 - 3 = 10 (left: 1 10) -> 10 + 1 = 11 (left: 10) -> There is only one possible next step with the input of 10.",
                "Pruning": null
            }
        },
        "Input": "1 5 8 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1073": {
        "puzzle": "3 3 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 9 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "9 9 13"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 - 9 = 0 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 - 9 = 0 (left: -> 9 - 9 = 0 (left: )",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "Possible next steps:"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 + 3 = 6 (left: 4 6) -> Possible next steps: -> There are no possible next steps with the input provided.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 + 3 = 6 (left: 4 6) -> Possible next steps: -> There are no possible next steps with the input provided. -> There are no possible next steps with the input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "There are no more possible next steps."
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 + 3 = 6 (left: 4 6) -> Possible next steps: -> There are no more possible next steps with the given numbers. -> There are no more possible next steps. -> There are no possible next steps.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 + 3 = 6 (left: 4 6) -> Possible next steps: -> There are no more possible next steps with the given numbers. -> There are no more possible next steps. -> There are no possible next steps. -> There are no possible next steps.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 9 13)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "9 9 13"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 * 9 = 81 (left: 81 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 * 9 = 81 (left: 81 13) -> 81 / 13 = 6.23 (left: 6.23)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "6.23"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 * 9 = 81 (left: 81 13) -> 81 / 13 = 6.23 (left: 6.23) -> There is only one number provided, so there are no possible next steps to perform any operations.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 * 9 = 81 (left: 81 13) -> 81 / 13 = 6.23 (left: 6.23) -> There is only one number provided, so there are no possible next steps to perform any operations. -> No possible next steps as there is only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "There are no possible next steps with the input provided."
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 + 3 = 6 (left: 4 6) -> Possible next steps: -> There are no possible next steps with the input provided. -> There are no possible next steps with the input provided. -> There are no possible next steps with the input provided.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 + 3 = 6 (left: 4 6) -> Possible next steps: -> There are no possible next steps with the input provided. -> There are no possible next steps with the input provided. -> There are no possible next steps with the input provided. -> There are no possible next steps with the input provided.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 3 3 4)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 3 4"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 / 3 = 1 (left: 1 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 / 3 = 1 (left: 1 4) -> 1 + 4 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "5"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 / 3 = 1 (left: 1 4) -> 1 + 4 = 5 (left: 5) -> There is only one possible next step: ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 / 3 = 1 (left: 1 4) -> 1 + 4 = 5 (left: 5) -> There is only one possible next step:  -> 8 + 8 = 16 (left: 2 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "No possible next steps as there is only one number provided."
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 * 9 = 81 (left: 81 13) -> 81 / 13 = 6.23 (left: 6.23) -> There is only one number provided, so there are no possible next steps to perform any operations. -> No possible next steps as there is only one number provided. -> No possible next steps as there is only one number provided.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 * 9 = 81 (left: 81 13) -> 81 / 13 = 6.23 (left: 6.23) -> There is only one number provided, so there are no possible next steps to perform any operations. -> No possible next steps as there is only one number provided. -> No possible next steps as there is only one number provided. -> No possible next steps as there is only one number provided.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 3 = 6 (left: 3 6 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "9 9 13"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 / 9 = 1 (left: 1 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 / 9 = 1 (left: 1 13) -> 1 + 13 = 14 (left: 14) ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "Possible next steps:"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 + 3 = 6 (left: 4 6) -> Possible next steps: -> There are no more possible next steps with the given numbers.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 + 3 = 6 (left: 4 6) -> Possible next steps: -> There are no more possible next steps with the given numbers. -> There are no more possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "2 16"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 / 3 = 1 (left: 1 4) -> 1 + 4 = 5 (left: 5) -> There is only one possible next step:  -> 8 + 8 = 16 (left: 2 16) -> 16 - 2 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": ""
                }
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 - 9 = 0 (left: -> 9 - 9 = 0 (left: ) -> Please provide a set of numbers for the next step calculation.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 9 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 3 4"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 + 3 = 6 (left: 4 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 + 3 = 6 (left: 4 6) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "5"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 / 3 = 1 (left: 1 4) -> 1 + 4 = 5 (left: 5) -> There are no possible next steps with the input 5.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 / 3 = 1 (left: 1 4) -> 1 + 4 = 5 (left: 5) -> There are no possible next steps with the input 5. -> There are no possible next steps with the input 5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "There are no possible next steps with the input provided."
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 + 3 = 6 (left: 4 6) -> Possible next steps: -> There are no possible next steps with the input provided. -> There are no possible next steps with the input provided. -> There are no possible next steps with the input provided.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 + 3 = 6 (left: 4 6) -> Possible next steps: -> There are no possible next steps with the input provided. -> There are no possible next steps with the input provided. -> There are no possible next steps with the input provided. -> There are no possible next steps with the input provided.",
                "Pruning": null
            }
        },
        "Input": "3 3 9 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1074": {
        "puzzle": "7 7 9 10",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 7 = 3 (left: 3 7 ",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "7 2 10"
                }
            },
            "Step 1": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 7 + 2 = 9 (left: 9 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 7 + 2 = 9 (left: 9 10) -> 10 - 9 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2 18 14"
                }
            },
            "Step 3": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 2 + 10 = 12 (left: -> 10 + 8 = 18 (left: 2 18 14) -> Input: 10 5 25",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 2 + 10 = 12 (left: -> 10 + 8 = 18 (left: 2 18 14) -> Input: 10 5 25 -> 25 - 5 = 20 (left: 10 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "2 18 14"
                }
            },
            "Step 5": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 2 + 10 = 12 (left: -> 10 + 8 = 18 (left: 2 18 14) -> 2 * 18 = 36 (left: 36 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 2 + 10 = 12 (left: -> 10 + 8 = 18 (left: 2 18 14) -> 2 * 18 = 36 (left: 36 14) -> 36 + 14 = 50 (left: 50)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "10 20"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 * 9 = 63 (left: 10 10 63)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "7 2 10"
                }
            },
            "Step 1": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 2 + 10 = 12 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 2 + 10 = 12 (left: -> 10 + 8 = 18 (left: 2 18 14)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2 18 14"
                }
            },
            "Step 3": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 2 + 10 = 12 (left: -> 10 + 8 = 18 (left: 2 18 14) -> 18 / 2 = 9 (left: 9 14)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 2 + 10 = 12 (left: -> 10 + 8 = 18 (left: 2 18 14) -> 18 / 2 = 9 (left: 9 14) -> 14 / 9 = 1.5555555555555556 (left: 1.5555555555555556)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "12"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "2 18 14"
                }
            },
            "Step 5": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 2 + 10 = 12 (left: -> 10 + 8 = 18 (left: 2 18 14) -> 18 - 14 = 4 (left: 2 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 2 + 10 = 12 (left: -> 10 + 8 = 18 (left: 2 18 14) -> 18 - 14 = 4 (left: 2 4) -> 2 + 4 = 6",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 - 7 = 2 (left: 7 2 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 7 "
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 3 7  -> 9 / 5 = 1 (left: 1 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 3 7  -> 9 / 5 = 1 (left: 1 9) -> 9 - 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2 18 14"
                }
            },
            "Step 3": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 2 + 10 = 12 (left: -> 10 + 8 = 18 (left: 2 18 14) -> 18 - 14 = 4 (left: 2 4)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 2 + 10 = 12 (left: -> 10 + 8 = 18 (left: 2 18 14) -> 18 - 14 = 4 (left: 2 4) -> 2 + 4 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "12"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "2 18 14"
                }
            },
            "Step 5": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 2 + 10 = 12 (left: -> 10 + 8 = 18 (left: 2 18 14) -> 18 - 14 = 4 (left: 2 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 2 + 10 = 12 (left: -> 10 + 8 = 18 (left: 2 18 14) -> 18 - 14 = 4 (left: 2 4) -> 2 + 4 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "10 20"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 * 9 = 63 (left: 10 63)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "7 2 10"
                }
            },
            "Step 1": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 2 + 10 = 12 (left: 7 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 2 + 10 = 12 (left: 7 12) -> 7 * 12 = 84 (left: 84)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2 18 14"
                }
            },
            "Step 3": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 2 + 10 = 12 (left: -> 10 + 8 = 18 (left: 2 18 14) -> 18 / 2 = 9 (left: 9 14)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 2 + 10 = 12 (left: -> 10 + 8 = 18 (left: 2 18 14) -> 18 / 2 = 9 (left: 9 14) -> 14 - 9 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "2 18 14"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "2 18 14"
                }
            },
            "Step 5": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 2 + 10 = 12 (left: -> 10 + 8 = 18 (left: 2 18 14) -> 18 / 2 = 9 (left: 9 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 2 + 10 = 12 (left: -> 10 + 8 = 18 (left: 2 18 14) -> 18 / 2 = 9 (left: 9 14) -> 9 * 14 = 126 (left: 126)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "10 20"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "7 * 7 = 49 (left: 9 10 49)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 7 "
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 3 7  -> 3 + 7 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 3 7  -> 3 + 7 = 10 (left: 10) -> 10 + 2 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2 18 14"
                }
            },
            "Step 3": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 2 + 10 = 12 (left: -> 10 + 8 = 18 (left: 2 18 14) -> 18 - 2 = 16 (left: 16 14)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 2 + 10 = 12 (left: -> 10 + 8 = 18 (left: 2 18 14) -> 18 - 2 = 16 (left: 16 14) -> 16 - 14 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "84"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "2 18 14"
                }
            },
            "Step 5": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 2 + 10 = 12 (left: -> 10 + 8 = 18 (left: 2 18 14) -> 18 - 14 = 4 (left: 2 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 2 + 10 = 12 (left: -> 10 + 8 = 18 (left: 2 18 14) -> 18 - 14 = 4 (left: 2 4) -> 4 - 2 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "10 20"
                }
            }
        },
        "Input": "7 7 9 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "Cost": {
        "input_tokens": 408507,
        "output_tokens": 158872.7722222223,
        "total_cost": 0.4425626583333334
    }
}