{
    "875": {
        "puzzle": "5 6 9 12",
        "Agent 0": {
            "Step 0": {
                "Step": "6 - 5 = 1 (left: 1 9 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 9 12"
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 6 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 6 "
                }
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 9 12"
                }
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 9 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 6 "
                }
            },
            "Step 4": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 6 "
                }
            },
            "Step 5": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 * 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 6 "
                }
            },
            "Step 6": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 + 6 = 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "7"
                }
            },
            "Step 7": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 + 6 = 7 (left: 7) -> 7 - 8 = -1 (left: -1 8)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "-1 8"
                }
            },
            "Step 8": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 + 6 = 7 (left: 7) -> 7 - 8 = -1 (left: -1 8) -> -1 / 8 = -0.125 (left: -0.125)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 9 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 9 12"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 3 3 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 6 "
                }
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 6 "
                }
            },
            "Step 3": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 6 "
                }
            },
            "Step 4": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 6 "
                }
            },
            "Step 5": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 * 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 6 "
                }
            },
            "Step 6": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 + 6 = 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "5"
                }
            },
            "Step 7": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 6 - 1 = 5 (left: 5) -> 8 - 5 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "-1 8"
                }
            },
            "Step 8": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 + 6 = 7 (left: 7) -> 7 - 8 = -1 (left: -1 8) -> -1 + 8 = 7 (left: 7)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 9 = 3 (left: 3 6 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 9 12"
                }
            },
            "Step 1": {
                "Step": "12 - 9 = 3 (left: 5 3 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 6 "
                }
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 * 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 9 12"
                }
            },
            "Step 3": {
                "Step": "5 * 6 = 30 (left: 9 30 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 6 "
                }
            },
            "Step 4": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 * 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 6 "
                }
            },
            "Step 5": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 6 "
                }
            },
            "Step 6": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "5"
                }
            },
            "Step 7": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 6 - 1 = 5 (left: 5) -> 5 * 5 = 25 (left: 25)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "-1 8"
                }
            },
            "Step 8": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 + 6 = 7 (left: 7) -> 7 - 8 = -1 (left: -1 8) -> 8 - (-1) = 9 (left: 9)",
                "Pruning": "NA"
            }
        },
        "Input": "5 6 9 12",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "876": {
        "puzzle": "6 9 10 11",
        "Agent 0": {
            "Step 0": {
                "Step": "9 + 10 = 19 (left: 6 11 19)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 1": {
                "Step": "6 * 9 = 54 (left: 10 11 54)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 2": {
                "Step": "10 + 11 = 21 (left: 6 9 21)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 3": {
                "Step": "10 * 11 = 110 (left: 6 9 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 4": {
                "Step": "10 + 11 = 21 (left: 6 9 21)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 5": {
                "Step": "10 * 11 = 110 (left: 6 9 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "6 11 19"
                }
            },
            "Step 6": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 11 + 6 = 17 (left: 17 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "6 3"
                }
            },
            "Step 7": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 21 / 9 = 3 (left: 6 3) -> 6 + 3 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "48"
                }
            },
            "Step 8": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 19 - 11 = 8 (left: 6 8  -> 6 * 8 = 48 (left: 48) -> There are no possible next steps with the input 48.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 10 11 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 1": {
                "Step": "10 + 11 = 21 (left: 6 9 21)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 2": {
                "Step": "10 + 11 = 21 (left: 6 9 21)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 3": {
                "Step": "6 * 9 = 54 (left: 10 11 54)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 4": {
                "Step": "9 + 10 = 19 (left: 6 11 19)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 5": {
                "Step": "9 + 10 = 19 (left: 6 11 19)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "6 9 21"
                }
            },
            "Step 6": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 21 / 9 = 3 (left: 6 3)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "6 8 "
                }
            },
            "Step 7": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 19 - 11 = 8 (left: 6 8  -> 6 * 8 = 48 (left: 48)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "48"
                }
            },
            "Step 8": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 19 - 11 = 8 (left: 6 8  -> 6 * 8 = 48 (left: 48) -> There are no possible next steps with the input of 48.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 * 9 = 54 (left: 10 11 54)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 9 11 16)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 2": {
                "Step": "6 + 9 = 15 (left: 10 11 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 11 19"
                }
            },
            "Step 3": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 19 - 11 = 8 (left: 6 8 ",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 4": {
                "Step": "6 + 9 = 15 (left: 10 11 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 5": {
                "Step": "6 * 9 = 54 (left: 10 11 54)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "6 8 "
                }
            },
            "Step 6": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 19 - 11 = 8 (left: 6 8  -> 6 / 8 = 0.75 (left: 0.75)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "6 3"
                }
            },
            "Step 7": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 21 / 9 = 3 (left: 6 3) -> 6 / 3 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "48"
                }
            },
            "Step 8": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 19 - 11 = 8 (left: 6 8  -> 6 * 8 = 48 (left: 48) -> There is only one number, so no possible next steps.",
                "Pruning": null
            }
        },
        "Input": "6 9 10 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "877": {
        "puzzle": "2 4 5 11",
        "Agent 0": {
            "Step 0": {
                "Step": "5 + 11 = 16 (left: 2 4 16)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 5 11"
                }
            },
            "Step 1": {
                "Step": "2 * 4 = 8 (left: 5 8 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "5 8 11"
                }
            },
            "Step 2": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 5 * 8 = 40 (left: 40 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 5 11"
                }
            },
            "Step 3": {
                "Step": "11 - 4 = 7 (left: 2 7 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 5 + 8 = 13 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (2 * 4) + (5 + 11) = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 * 4 = 8 (left: 5 8 11)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "5 8 11"
                }
            },
            "Step 1": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 5 + 8 = 13 (left: 11 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "11 13"
                }
            },
            "Step 2": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 5 + 8 = 13 (left: 11 13) -> 11 - 13 = -2 (left: -2)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 5 11"
                }
            },
            "Step 3": {
                "Step": "5 * 11 = 55 (left: 2 4 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 4 16"
                }
            },
            "Step 4": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 16 - 2 = 14 (left: 4 14)"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 5 = 9 (left: 2 9 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 5 11"
                }
            },
            "Step 1": {
                "Step": "4 + 5 = 9 (left: 2 9 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 5 11"
                }
            },
            "Step 2": {
                "Step": "11 - 5 = 6 (left: 2 4 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "11 13"
                }
            },
            "Step 3": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 5 + 8 = 13 (left: 11 13) -> 11 + 13 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 5 11"
                }
            },
            "Step 4": {
                "Step": "5 * 11 = 55 (left: 2 4 "
            }
        },
        "Input": "2 4 5 11",
        "Verifications": [
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "878": {
        "puzzle": "1 2 5 10",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 5 = 7 (left: 1 7 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 5 10"
                }
            },
            "Step 1": {
                "Step": "10 / 2 = 5 (left: 1 5 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 5 10"
                }
            },
            "Step 2": {
                "Step": "10 / 2 = 5 (left: 1 5 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 30"
                }
            },
            "Step 3": {
                "Step": "5 + 10 = 15 (left: 1 2 15) -> 2 * 15 = 30 (left: 1 30) -> 1 + 30 = 31 (left: 30)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "1 2 15"
                }
            },
            "Step 4": {
                "Step": "5 + 10 = 15 (left: 1 2 15) -> 2 * 15 = 30 (left: 1 30)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1 30"
                }
            },
            "Step 5": {
                "Step": "5 + 10 = 15 (left: 1 2 15) -> 2 * 15 = 30 (left: 1 30) -> 1 + 30 = 31 (left: 31)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "30 30"
                }
            },
            "Step 6": {
                "Step": "5 + 10 = 15 (left: 1 2 15) -> 2 * 15 = 30 (left: 1 30) -> 30 / 1 = 30 (left: 30 30) -> 30 + 30 = 60",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1 30"
                }
            },
            "Step 7": {
                "Step": "5 + 10 = 15 (left: 1 2 15) -> 2 * 15 = 30 (left: 1 30) -> 1 + 30 = 31 (left: 30)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "30 30"
                }
            },
            "Step 8": {
                "Step": "5 + 10 = 15 (left: 1 2 15) -> 2 * 15 = 30 (left: 1 30) -> 30 / 1 = 30 (left: 30 30) -> 30 / 30 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "30 + 30 = 60"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 - 2 = 3 (left: 1 3 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 5 10"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 5 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "1 2 15"
                }
            },
            "Step 2": {
                "Step": "5 + 10 = 15 (left: 1 2 15) -> 2 * 15 = 30 (left: 1 30)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "1 2 15"
                }
            },
            "Step 3": {
                "Step": "5 + 10 = 15 (left: 1 2 15) -> 1 * 2 = 2 (left: 2 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 5 10"
                }
            },
            "Step 4": {
                "Step": "10 - 5 = 5 (left: 1 2 5)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "1 2 15"
                }
            },
            "Step 5": {
                "Step": "5 + 10 = 15 (left: 1 2 15) -> 1 * 2 = 2 (left: 2 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "1 2 15"
                }
            },
            "Step 6": {
                "Step": "5 + 10 = 15 (left: 1 2 15) -> 15 - 1 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "30 30"
                }
            },
            "Step 7": {
                "Step": "5 + 10 = 15 (left: 1 2 15) -> 2 * 15 = 30 (left: 1 30) -> 30 / 1 = 30 (left: 30 30) -> 30 - 30 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "30 30"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "30 30"
                }
            },
            "Step 8": {
                "Step": "5 + 10 = 15 (left: 1 2 15) -> 2 * 15 = 30 (left: 1 30) -> 30 / 1 = 30 (left: 30 30) -> 30 - 30 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "30 + 30 = 60"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 + 10 = 15 (left: 1 2 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 5 10"
                }
            },
            "Step 1": {
                "Step": "5 + 10 = 15 (left: 1 2 15)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 5 10"
                }
            },
            "Step 2": {
                "Step": "2 * 5 = 10 (left: 1 10 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 5 10"
                }
            },
            "Step 3": {
                "Step": "2 * 5 = 10 (left: 1 10 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 30"
                }
            },
            "Step 4": {
                "Step": "5 + 10 = 15 (left: 1 2 15) -> 2 * 15 = 30 (left: 1 30) -> 30 / 1 = 30 (left: 30 30)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1 30"
                }
            },
            "Step 5": {
                "Step": "5 + 10 = 15 (left: 1 2 15) -> 2 * 15 = 30 (left: 1 30) -> 1 / 30 = 0.0333333 (left: 30)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 30"
                }
            },
            "Step 6": {
                "Step": "5 + 10 = 15 (left: 1 2 15) -> 2 * 15 = 30 (left: 1 30) -> 30 * 1 = 30 (left: 30)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "30 30"
                }
            },
            "Step 7": {
                "Step": "5 + 10 = 15 (left: 1 2 15) -> 2 * 15 = 30 (left: 1 30) -> 30 / 1 = 30 (left: 30 30) -> 30 - 30 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "30 30"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "30 30"
                }
            },
            "Step 8": {
                "Step": "5 + 10 = 15 (left: 1 2 15) -> 2 * 15 = 30 (left: 1 30) -> 30 / 1 = 30 (left: 30 30) -> 30 + 30 = 60",
                "Pruning": null
            }
        },
        "Input": "1 2 5 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "879": {
        "puzzle": "2 2 2 5",
        "Agent 0": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 2 5)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 5"
                }
            },
            "Step 1": {
                "Step": "2 / 2 = 1 (left: 1 2 5)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 5"
                }
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 2 5)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "4 2 5"
                }
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 / 2 = 2 (left: 2 5)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 5"
                }
            },
            "Step 4": {
                "Step": "2 * 2 = 4 (left: 4 2 5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "2 5"
                }
            },
            "Step 5": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 / 2 = 2 (left: 2 5) -> 5 - 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "2 5"
                }
            },
            "Step 6": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 / 2 = 2 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "2 5"
                }
            },
            "Step 7": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 / 2 = 2 (left: 2 5) -> 5 - 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "10"
                }
            },
            "Step 8": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 / 2 = 2 (left: 2 5) -> 2 * 5 = 10 (left: 10) -> 10 - 10 = 0 (left: 0)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 - 2 = 3 (left: 2 3 5)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 5"
                }
            },
            "Step 1": {
                "Step": "Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 5"
                }
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 2 5)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 5"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 2 4 5)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 5"
                }
            },
            "Step 4": {
                "Step": "5 - 2 = 3 (left: 2 3 3)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 5"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 2 4 5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "2 5"
                }
            },
            "Step 6": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 / 2 = 2 (left: 2 5) -> 2 * 5 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "2 5"
                }
            },
            "Step 7": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 / 2 = 2 (left: 2 5) -> 2 * 5 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "10 * 3 = 30"
                }
            },
            "Step 8": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 / 2 = 2 (left: 2 5) -> 10 * 3 = 30 -> 30 / 10 = 3 (left: 3 3 30)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 2 5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 5"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 2 5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 5"
                }
            },
            "Step 2": {
                "Step": "2 * 5 = 10 (left: 2 2 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 5"
                }
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 2 5)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 5"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 2 5)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "2 5"
                }
            },
            "Step 5": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 / 2 = 2 (left: 2 5) -> 2 + 5 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "4 2 5"
                }
            },
            "Step 6": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 5 - 2 = 3 (left: 4 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "2 5"
                }
            },
            "Step 7": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 / 2 = 2 (left: 2 5) -> 10 * 3 = 30",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "10 * 3 = 30"
                }
            },
            "Step 8": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 / 2 = 2 (left: 2 5) -> 10 * 3 = 30 -> 10 / 3 = 3.33 (left: 3.33 10 30)",
                "Pruning": null
            }
        },
        "Input": "2 2 2 5",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "880": {
        "puzzle": "6 12 13 13",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 6 13 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 12 13 13"
                }
            },
            "Step 1": {
                "Step": "13 + 6 = 19 (left: 12 13 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 12 13 13"
                }
            },
            "Step 2": {
                "Step": "13 - 6 = 7 (left: 6 7 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 12 13 13"
                }
            },
            "Step 3": {
                "Step": "12 - 6 = 6 (left: 6 13 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 12 13 13"
                }
            },
            "Step 4": {
                "Step": "12 / 6 = 2 (left: 2 13 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "6 13 13"
                }
            },
            "Step 5": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 6 + 13 = 19 (left: 13 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "6 13 13"
                }
            },
            "Step 6": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 - 6 = 7 (left: 7 13)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "7 13"
                }
            },
            "Step 7": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 - 6 = 7 (left: 7 13) -> 7 - 13 = -6 (left: -6)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "1.857"
                }
            },
            "Step 8": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 - 6 = 7 (left: 7 13) -> 13 / 7 = 1.857 (left: 1.857) -> 1.857 + 2 = 3.857",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 7 12 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 12 13 13"
                }
            },
            "Step 1": {
                "Step": "13 - 6 = 7 (left: 6 13 7)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 12 13 13"
                }
            },
            "Step 2": {
                "Step": "6 * 12 = 72 (left: 13 13 72)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 12 13 13"
                }
            },
            "Step 3": {
                "Step": "13 - 12 = 1 (left: 12 1 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 12 13 13"
                }
            },
            "Step 4": {
                "Step": "12 - 6 = 6 (left: 6 13 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 12 13 13"
                }
            },
            "Step 5": {
                "Step": "6 * 12 = 72 (left: 13 13 72)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "6 13 7"
                }
            },
            "Step 6": {
                "Step": "13 - 6 = 7 (left: 6 13 7) -> 13 / 6 = 2.16667 (left: 2.16667 7)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "7 13"
                }
            },
            "Step 7": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 - 6 = 7 (left: 7 13) -> 13 - 7 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "6"
                }
            },
            "Step 8": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 - 6 = 7 (left: 7 13) -> 13 - 7 = 6 (left: 6) -> 8 / 6 = 1.33 (left: 1.33 8)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 12 = 18 (left: 13 18 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 12 13 13"
                }
            },
            "Step 1": {
                "Step": "12 - 6 = 6 (left: 6 13 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "6 13 7"
                }
            },
            "Step 2": {
                "Step": "13 - 6 = 7 (left: 6 13 7) -> 13 - 6 = 7 (left: 7 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 12 13 13"
                }
            },
            "Step 3": {
                "Step": "13 / 6 = 2.16667 (left: 2.16667 13 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "6 13 7"
                }
            },
            "Step 4": {
                "Step": "13 - 6 = 7 (left: 6 13 7) -> 13 / 6 = 2.16666666667 (left: 2.16666666667 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "6 13 7"
                }
            },
            "Step 5": {
                "Step": "13 - 6 = 7 (left: 6 13 7) -> 6 * 7 = 42 (left: 13 42)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "6 13 13"
                }
            },
            "Step 6": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 - 6 = 7 (left: 7 13)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "7 13"
                }
            },
            "Step 7": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 - 6 = 7 (left: 7 13) -> 13 / 7 = 1.857 (left: 1.857)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "1.857"
                }
            },
            "Step 8": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 - 6 = 7 (left: 7 13) -> 13 / 7 = 1.857 (left: 1.857) -> 1.857 + 2 = 3.857",
                "Pruning": null
            }
        },
        "Input": "6 12 13 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "881": {
        "puzzle": "3 3 6 10",
        "Agent 0": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 9 6 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 6 10"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 * 6 = 60 (left: 6 60)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 2": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 7 / 3 = 2 (left:",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 6 10"
                }
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 6 * 6 = 36 (left: 10 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "4 10"
                }
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 - 6 = 4 (left: 4 10) -> 2 + 5 = 7 (left: 7 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "4 10"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 - 6 = 4 (left: 4 10) -> 10 - 4 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 6 10"
                }
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 + 6 = 16 (left: 6 16)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "4 6"
                }
            },
            "Step 7": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 - 6 = 4 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "6"
                }
            },
            "Step 8": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 - 6 = 4 (left: 4 10) -> 10 - 4 = 6 (left: 6) -> 8 - 6 = 2 (left: 2 8)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 6 6 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 6 10"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 / 6 = 1.66666666667 (left: 6 1.66666666667)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 6 10"
                }
            },
            "Step 2": {
                "Step": "10 / 3 = 3 (left: 3 6 ",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 6 10"
                }
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 - 6 = 4 (left: 4 10)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 6 "
                }
            },
            "Step 4": {
                "Step": "10 / 3 = 3 (left: 3 6  -> 6 - 3 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 6 10"
                }
            },
            "Step 5": {
                "Step": "6 * 3 = 18 (left: 3 10 18)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "1 10"
                }
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 6 / 6 = 1 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "1 10"
                }
            },
            "Step 7": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 6 / 6 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "7 9"
                }
            },
            "Step 8": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 - 6 = 4 (left: 4 10) -> 2 + 5 = 7 (left: 7 9) -> 7 + 9 = 16 (left: 16)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 3 = 7 (left: 3 6 7)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 6 10"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 + 6 = 16 (left: 6 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 6 10"
                }
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 6 * 6 = 36 (left: 10 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 6 10"
                }
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 6 6 10)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "4 10"
                }
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 - 6 = 4 (left: 4 10) -> 4 * 10 = 40 (left: 40)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "6 6 10"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 6 / 6 = 1 (left: 1 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 6 10"
                }
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 - 6 = 4 (left: 4 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "4 6"
                }
            },
            "Step 7": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 - 6 = 4 (left: 4 6) -> 3 + 9 = 12 (left: 12 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "40"
                }
            },
            "Step 8": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 - 6 = 4 (left: 4 10) -> 4 * 10 = 40 (left: 40) -> None - since there is only one number provided, there are no possible operations to perform.",
                "Pruning": null
            }
        },
        "Input": "3 3 6 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            }
        ]
    },
    "882": {
        "puzzle": "3 4 8 11",
        "Agent 0": {
            "Step 0": {
                "Step": "8 + 3 = 11 (left: 4 8 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 8 11"
                }
            },
            "Step 1": {
                "Step": "11 - 4 = 7 (left: 3 7 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 8 11"
                }
            },
            "Step 2": {
                "Step": "11 - 4 = 7 (left: 3 7 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "8 12 11"
                }
            },
            "Step 3": {
                "Step": "4 * 3 = 12 (left: 8 12 11) -> 12 - 8 = 4 (left: 4 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 8 11"
                }
            },
            "Step 4": {
                "Step": "4 * 3 = 12 (left: 8 12 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 8 11"
                }
            },
            "Step 5": {
                "Step": "3 + 4 = 7 (left: 7 8 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "8 12 11"
                }
            },
            "Step 6": {
                "Step": "4 * 3 = 12 (left: 8 12 11) -> 8 * 12 = 96 (left: 11 96)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "3 + 4 = 7 (left: 7 8 11) -> 11 - 8 = 3 (left: 3 8) -> 8 / 3 = 2.66666666666667 (left: 2.66666666666667)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "1056"
                }
            },
            "Step 8": {
                "Step": "4 * 3 = 12 (left: 8 12 11) -> 8 * 12 = 96 (left: 11 96) -> 11 * 96 = 1056 (left: 1056) -> 10 + 56 = 66 (left: 66)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 + 3 = 11 (left: 4 11 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 8 11"
                }
            },
            "Step 1": {
                "Step": "8 - 4 = 4 (left: 3 4 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 8 11"
                }
            },
            "Step 2": {
                "Step": "4 * 3 = 12 (left: 8 12 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 8 11"
                }
            },
            "Step 3": {
                "Step": "11 - 4 = 7 (left: 3 7 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "3 4 11"
                }
            },
            "Step 4": {
                "Step": "8 - 4 = 4 (left: 3 4 11) -> 4 / 3 = 1.33 (left: 1.33 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 8 11"
                }
            },
            "Step 5": {
                "Step": "8 + 3 = 11 (left: 4 8 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 8 11"
                }
            },
            "Step 6": {
                "Step": "8 + 3 = 11 (left: 4 8 11) -> 8 / 4 = 2 (left: 2 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "3 + 4 = 7 (left: 7 8 11) -> 11 - 8 = 3 (left: 3 8) -> 8 / 3 = 2.67 (left: 2.67)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "2.66666666666667"
                }
            },
            "Step 8": {
                "Step": "3 + 4 = 7 (left: 7 8 11) -> 11 - 8 = 3 (left: 3 8) -> 8 / 3 = 2.66666666666667 (left: 2.66666666666667) -> 2.66666666666667 + 2 = 4.66666666666667",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 3 7 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 8 11"
                }
            },
            "Step 1": {
                "Step": "11 - 4 = 7 (left: 3 7 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 8 11"
                }
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 4 8 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 8 11"
                }
            },
            "Step 3": {
                "Step": "11 - 4 = 7 (left: 3 7 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 8 11"
                }
            },
            "Step 4": {
                "Step": "8 - 4 = 4 (left: 3 4 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 8 11"
                }
            },
            "Step 5": {
                "Step": "11 - 4 = 7 (left: 3 7 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "7 8 11"
                }
            },
            "Step 6": {
                "Step": "3 + 4 = 7 (left: 7 8 11) -> 11 - 8 = 3 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "11 96"
                }
            },
            "Step 7": {
                "Step": "4 * 3 = 12 (left: 8 12 11) -> 8 * 12 = 96 (left: 11 96) -> 11 * 96 = 1056 (left: 1056)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "2.67"
                }
            },
            "Step 8": {
                "Step": "3 + 4 = 7 (left: 7 8 11) -> 11 - 8 = 3 (left: 3 8) -> 8 / 3 = 2.67 (left: 2.67) -> There is only one number provided, so there are no possible next steps.",
                "Pruning": null
            }
        },
        "Input": "3 4 8 11",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "883": {
        "puzzle": "4 4 6 13",
        "Agent 0": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 6 16 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 13"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 6 8 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 13"
                }
            },
            "Step 2": {
                "Step": "6 + 4 = 10 (left: 10 4 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 13"
                }
            },
            "Step 3": {
                "Step": "6 + 4 = 10 (left: 4 10 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 13"
                }
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left: 4 6 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 5": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 4 * 6 = 24 (left: 9 24)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 6": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 4 + 6 = 10 (left: 9 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 3"
                }
            },
            "Step 7": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 13 - 10 = 3 (left: 4 3) -> 4 - 3 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "1"
                }
            },
            "Step 8": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 13 - 10 = 3 (left: 4 3) -> 4 - 3 = 1 (left: 1) -> There are no possible next steps with just one number provided. Please provide more numbers for calculations.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 4 = 10 (left: 4 10 13)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 13"
                }
            },
            "Step 1": {
                "Step": "4 / 4 = 1 (left: 1 6 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 13"
                }
            },
            "Step 2": {
                "Step": "4 / 4 = 1 (left: 1 6 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 13"
                }
            },
            "Step 3": {
                "Step": "4 / 4 = 1 (left: 1 6 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 13"
                }
            },
            "Step 4": {
                "Step": "6 + 4 = 10 (left: 4 10 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "10 4 13"
                }
            },
            "Step 5": {
                "Step": "6 + 4 = 10 (left: 10 4 13) -> 10 + 4 = 14 (left: 14 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 10 13"
                }
            },
            "Step 6": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 13 - 4 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 3"
                }
            },
            "Step 7": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 13 - 10 = 3 (left: 4 3) -> 4 * 3 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "12"
                }
            },
            "Step 8": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 13 - 10 = 3 (left: 4 3) -> 4 * 3 = 12 (left: 12) -> 12 * 2 = 24 (left: 8 24)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 6 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 10 13"
                }
            },
            "Step 1": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> Input: 5 15",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 13"
                }
            },
            "Step 2": {
                "Step": "6 - 4 = 2 (left: 2 4 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "10 4 13"
                }
            },
            "Step 3": {
                "Step": "6 + 4 = 10 (left: 10 4 13) -> 10 / 4 = 2.5 (left: 2.5 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 10 13"
                }
            },
            "Step 4": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 13 - 10 = 3 (left: 4 3)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "2 4 13"
                }
            },
            "Step 5": {
                "Step": "6 - 4 = 2 (left: 2 4 13) -> 13 / 4 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 10 13"
                }
            },
            "Step 6": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 4 * 10 = 40 (left: 40 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 3"
                }
            },
            "Step 7": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 13 - 10 = 3 (left: 4 3) -> 4 + 3 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "7"
                }
            },
            "Step 8": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 13 - 10 = 3 (left: 4 3) -> 4 + 3 = 7 (left: 7) -> 7 - 2 = 5 (left: 5)",
                "Pruning": "NA"
            }
        },
        "Input": "4 4 6 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            }
        ]
    },
    "884": {
        "puzzle": "4 6 7 10",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 7 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "2 3"
                }
            },
            "Step 2": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 10 - 7 = 3 (left: 2 3) -> 2 * 3 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 6 7 10"
                }
            },
            "Step 3": {
                "Step": "6 + 4 = 10 (left: 7 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 4": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 7 / 2 = 3.5 (left: 3.5 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 6 7 10"
                }
            },
            "Step 5": {
                "Step": "7 * 4 = 28 (left: 6 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "2 3"
                }
            },
            "Step 6": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 10 - 7 = 3 (left: 2 3) -> Input: 5 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "2 3"
                }
            },
            "Step 7": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 10 - 7 = 3 (left: 2 3) -> 2 + 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "Input: 5 7"
                }
            },
            "Step 8": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 10 - 7 = 3 (left: 2 3) -> Input: 5 7 -> 27",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 - 4 = 2 (left: 2 7 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 10 - 7 = 3 (left: 2 3)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 7 10"
                }
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 6 7 10) -> 7 + 10 = 17 (left: 6 17)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 6 7 10"
                }
            },
            "Step 3": {
                "Step": "4 + 10 = 14 (left:",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 6 7 10"
                }
            },
            "Step 4": {
                "Step": "10 - 6 = 4 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 5": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 10 / 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 6": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 10 - 7 = 3 (left: 2 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "2 3"
                }
            },
            "Step 7": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 10 - 7 = 3 (left: 2 3) -> 2 + 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "Input: 5 7"
                }
            },
            "Step 8": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 10 - 7 = 3 (left: 2 3) -> Input: 5 7 -> 7 - 5 = 2 (left: 2)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 / 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 / 7 = 0.285714 (left: 0.285714 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 2": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 7 + 2 = 9 (left: 9 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 6 7 10"
                }
            },
            "Step 3": {
                "Step": "6 * 4 = 24 (left: 7 10 24)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "2 3"
                }
            },
            "Step 4": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 10 - 7 = 3 (left: 2 3) -> 3 / 2 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 5": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 7 / 2 = 3.5 (left: 3.5 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 6": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 7 + 2 = 9 (left: 9 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "0.285714 10"
                }
            },
            "Step 7": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 / 7 = 0.285714 (left: 0.285714 10) -> 0.285714 / 10 = 0.0285714 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "5"
                }
            },
            "Step 8": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 10 - 7 = 3 (left: 2 3) -> 2 + 3 = 5 (left: 5) -> There are no possible next steps with only one number provided.",
                "Pruning": null
            }
        },
        "Input": "4 6 7 10",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            }
        ]
    },
    "885": {
        "puzzle": "6 11 11 12",
        "Agent 0": {
            "Step 0": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 11 11 12"
                }
            },
            "Step 1": {
                "Step": "6 + 11 = 17 (left: 11 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1.83333 11 12"
                }
            },
            "Step 2": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 11 + 12 = 23 (left: 1.83333 23)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 11 12"
                }
            },
            "Step 3": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 12 - 1 = 11 (left: 1 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 11 11 12"
                }
            },
            "Step 4": {
                "Step": "11 - 6 = 5 (left: 5 11 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 11 12"
                }
            },
            "Step 5": {
                "Step": "12 - 6 = 6 (left: 6 11 12) -> 11 * 6 = 66 (left: 66 12)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1.83333 11 12"
                }
            },
            "Step 6": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 11 - 1.83333 = 9.16667 (left: 9.16667 12)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "9.16667 12"
                }
            },
            "Step 7": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 11 - 1.83333 = 9.16667 (left: 9.16667 12) -> 9.16667 / 12 = 0.76389 (left: 0.76389)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "1.83333 12.541"
                }
            },
            "Step 8": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 11 + 12 = 23 (left: 1.83333 23) -> 23 / 1.83333 = 12.54167 (left: 1.83333 12.541 -> 12.541 - 1.83333 = 10.70767 (left: 10.70767)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 6 11 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 11 12"
                }
            },
            "Step 1": {
                "Step": "12 - 6 = 6 (left: 6 11 12) -> 11 / 6 = 1.83 (left: 1.83 12)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 11 12"
                }
            },
            "Step 2": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 11 - 1 = 10 (left: 10 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 11 11 12"
                }
            },
            "Step 3": {
                "Step": "11 / 6 = 1.83 (left: 1.83 11 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 11 12"
                }
            },
            "Step 4": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 11 / 1 = 11 (left: 11 12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 11 11 12"
                }
            },
            "Step 5": {
                "Step": "6 + 11 = 17 (left: 11 11 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "5 11 12"
                }
            },
            "Step 6": {
                "Step": "11 - 6 = 5 (left: 5 11 12) -> 5 * 11 = 55 (left: 12 55)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "66 12"
                }
            },
            "Step 7": {
                "Step": "12 - 6 = 6 (left: 6 11 12) -> 11 * 6 = 66 (left: 66 12) -> 66 * 12 = 792 (left: 792)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "1.83333 12.541"
                }
            },
            "Step 8": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 11 + 12 = 23 (left: 1.83333 23) -> 23 / 1.83333 = 12.54167 (left: 1.83333 12.541 -> 12.541 / 1.83333 = 6.84052 (left: 6.84052)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "11 / 6 = 1 (left: 1 11 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 11 11 12"
                }
            },
            "Step 1": {
                "Step": "11 / 6 = 1.83 (left: 1.83 11 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 11 11 12"
                }
            },
            "Step 2": {
                "Step": "11 - 6 = 5 (left: 5 11 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1.83333 11 12"
                }
            },
            "Step 3": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 1.83333 * 11 = 20.16663 (left: 20.16663 12)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 11 11 12"
                }
            },
            "Step 4": {
                "Step": "12 + 6 = 18 (left: 11 11 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 11 11 12"
                }
            },
            "Step 5": {
                "Step": "6 + 11 = 17 (left: 11 11 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "5 11 12"
                }
            },
            "Step 6": {
                "Step": "11 - 6 = 5 (left: 5 11 12) -> 11 - 5 = 6 (left: 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1.83333 23"
                }
            },
            "Step 7": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 11 + 12 = 23 (left: 1.83333 23) -> 23 / 1.83333 = 12.54167 (left: 1.83333 12.541",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "1.83333 12.541"
                }
            },
            "Step 8": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 11 + 12 = 23 (left: 1.83333 23) -> 23 / 1.83333 = 12.54167 (left: 1.83333 12.541 -> 1.83333 * 12.541 = 22.99749293 (left: 22.99749293)",
                "Pruning": "NA"
            }
        },
        "Input": "6 11 11 12",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "886": {
        "puzzle": "3 6 9 11",
        "Agent 0": {
            "Step 0": {
                "Step": "6 / 3 = 2 (left: 2 9 11)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 6 9 11"
                }
            },
            "Step 1": {
                "Step": "11 - 9 = 2 (left: 3 6 ",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 6 9 11"
                }
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 6 8 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 6 9 11"
                }
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 3 8 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "3 8 "
                }
            },
            "Step 4": {
                "Step": "11 - 3 = 8 (left: 3 8  -> 3 * 8 = 24 (left: 8 24)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 6 9 11"
                }
            },
            "Step 5": {
                "Step": "11 - 9 = 2 (left: 3 6 ",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "8 24"
                }
            },
            "Step 6": {
                "Step": "11 - 3 = 8 (left: 3 8  -> 3 * 8 = 24 (left: 8 24) -> 24 - 8 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "8 24"
                }
            },
            "Step 7": {
                "Step": "11 - 3 = 8 (left: 3 8  -> 3 * 8 = 24 (left: 8 24) -> 8 * 3 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "11 - 3 = 8 (left: 3 8  -> 3 * 8 = 24 (left: 8 24) -> 8 * 3 = 24 (left: 24) -> Answer: (11 - 3) * (6 + 9) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 9 9 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 9 11"
                }
            },
            "Step 1": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> Input: 3 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 9 11"
                }
            },
            "Step 2": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 9 + 2 = 11 (left: 11 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 6 9 11"
                }
            },
            "Step 3": {
                "Step": "9 + 3 = 12 (left: 6 12 11)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 6 9 11"
                }
            },
            "Step 4": {
                "Step": "9 - 3 = 6 (left: 6 9 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "3 8 "
                }
            },
            "Step 5": {
                "Step": "11 - 3 = 8 (left: 3 8  -> 3 + 8 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "3 6 "
                }
            },
            "Step 6": {
                "Step": "11 - 9 = 2 (left: 3 6  -> 6 - 3 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "8 24"
                }
            },
            "Step 7": {
                "Step": "11 - 3 = 8 (left: 3 8  -> 3 * 8 = 24 (left: 8 24) -> 8 / 24 = 0.3333333333333333 (left: 0.3333333333333333)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "11 - 3 = 8 (left: 3 8  -> 3 * 8 = 24 (left: 8 24) -> 8 * 3 = 24 (left: 24) -> Answer: 3 * (11 - 3) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 / 3 = 2 (left: 2 9 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 6 9 11"
                }
            },
            "Step 1": {
                "Step": "9 - 3 = 6 (left: 6 6 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 6 9 11"
                }
            },
            "Step 2": {
                "Step": "3 + 6 = 9 (left: 9 9 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 6 9 11"
                }
            },
            "Step 3": {
                "Step": "6 - 3 = 3 (left: 3 9 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 6 9 11"
                }
            },
            "Step 4": {
                "Step": "9 * 3 = 27 (left: 6 27 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 6 9 11"
                }
            },
            "Step 5": {
                "Step": "6 - 3 = 3 (left: 3 9 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 9 11"
                }
            },
            "Step 6": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 9 - 2 = 7 (left: 7 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "8 24"
                }
            },
            "Step 7": {
                "Step": "11 - 3 = 8 (left: 3 8  -> 3 * 8 = 24 (left: 8 24) -> 24 - 8 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "11 - 3 = 8 (left: 3 8  -> 3 * 8 = 24 (left: 8 24) -> 8 * 3 = 24 (left: 24) -> Answer: (11 - 3) * (6 * 9) = 24",
                "Pruning": "NA"
            }
        },
        "Input": "3 6 9 11",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "887": {
        "puzzle": "5 7 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "9 + 7 = 16 (left: 5 16 ",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 7 9 13"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 4 5 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 2": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "7 17"
                }
            },
            "Step 3": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> 5 + 5 = 10 (left: 5 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "7 17"
                }
            },
            "Step 4": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> 17 / 7 = 2.4285714285714284 (left: 2.4285714285714284)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "7 17"
                }
            },
            "Step 5": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> 7 * 17 = 119 (left: 119)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "7 17"
                }
            },
            "Step 6": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> 17 - 7 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> 7 + 17 = 24 (left: 24) -> Answer: ((13 - 5) + 9) + 7 = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 + 7 = 12 (left: 9 12 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 7 9 13"
                }
            },
            "Step 1": {
                "Step": "7 - 5 = 2 (left: 2 9 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 7 9 13"
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 5 7 4)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 3": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 7 * 8 = 56 (left: 9 56)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 7 9 13"
                }
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 5 6 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "7 17"
                }
            },
            "Step 5": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> 7 + 17 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "7 17"
                }
            },
            "Step 6": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> 7 + 17 = 24",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "7 17"
                }
            },
            "Step 7": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> 17 / 7 = 2.43 (left: 2.43)"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 - 7 = 2 (left: 5 2 13)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 7 9 13"
                }
            },
            "Step 1": {
                "Step": "13 - 5 = 8 (left: 7 8 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 2": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 3": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 8 - 7 = 1 (left: 1 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "7 17"
                }
            },
            "Step 4": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> 7 * 17 = 119 (left: 119)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "7 17"
                }
            },
            "Step 5": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> 17 / 7 = 2.43 (left: 2.43)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1 9"
                }
            },
            "Step 6": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 8 - 7 = 1 (left: 1 9) -> 9 - 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> 7 + 17 = 24 (left: 24) -> Answer: ((13 - 5) + 9) + 7 = 24"
            }
        },
        "Input": "5 7 9 13",
        "Verifications": [
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 1
            }
        ]
    },
    "888": {
        "puzzle": "2 4 12 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 / 4 = 3 (left: 2 3 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 12 12"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "2 48 12"
                }
            },
            "Step 2": {
                "Step": "4 * 12 = 48 (left: 2 48 12) -> 48 / 12 = 4 (left: 2 4)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 12 12"
                }
            },
            "Step 5": {
                "Step": "12 / 2 = 6 (left: 6 12 12)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "6 12 12"
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "2 12"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "12 / 2 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (12 / 2) * (12 / 6) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 6 12 12)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 12 12"
                }
            },
            "Step 1": {
                "Step": "4 * 12 = 48 (left: 2 48 12)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12) -> 2 + 12 = 14",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 12 12"
                }
            },
            "Step 4": {
                "Step": "12 - 2 = 10 (left: 4 10 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 12 12"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 6 + 12 = 18 (left: 12 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "6 12 12"
                }
            },
            "Step 6": {
                "Step": "12 / 2 = 6 (left: 6 12 12) -> 12 - 6 = 6 (left: 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "12 / 2 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (12 / 2) * (12 / 6) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 2 = 10 (left: 4 10 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 12 12"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 12 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 12 12"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 - 6 = 6 (left: 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6 12",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 12 12"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 - 6 = 6 (left: 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "6 12 12"
                }
            },
            "Step 6": {
                "Step": "12 / 2 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2 12"
                }
            },
            "Step 7": {
                "Step": "12 / 2 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "12 / 2 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: 2 * (12 / (12 / 2)) = 24",
                "Pruning": "NA"
            }
        },
        "Input": "2 4 12 12",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "889": {
        "puzzle": "4 9 11 12",
        "Agent 0": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 11 12 36)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 11 12"
                }
            },
            "Step 1": {
                "Step": "4 + 9 = 13 (left: 11 12 13)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 11 12"
                }
            },
            "Step 2": {
                "Step": "4 + 9 = 13 (left: 11 12 13)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 3": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 + 13 = 25 (left: 11 25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 11 12"
                }
            },
            "Step 4": {
                "Step": "9 - 4 = 5 (left: 5 11 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "11 12 36"
                }
            },
            "Step 5": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 11 * 12 = 132 (left: 132 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "2.25 11 12"
                }
            },
            "Step 6": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 2.25 + 11 = 13.25 (left: 12 13.25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "13 132"
                }
            },
            "Step 7": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132) -> 132 - 13 = 119 (left: 119)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "145"
                }
            },
            "Step 8": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132) -> 13 + 132 = 145 (left: 145) -> Input: 3 6 9",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "11 + 4 = 15 (left: 9 12 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 11 12"
                }
            },
            "Step 1": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 2": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 / 12 = 0.9166666666666666 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 3": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 11 12"
                }
            },
            "Step 4": {
                "Step": "4 * 9 = 36 (left: 11 12 36)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 5": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 6": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 / 11 = 1.0909090909090908 (left: 1.0909090909090908 13)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "13 132"
                }
            },
            "Step 7": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132) -> 13 - 132 = -119 (left: -119)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "145"
                }
            },
            "Step 8": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132) -> 13 + 132 = 145 (left: 145) -> 14 + 5 = 19 (left: 19)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 9 = 3 (left: 3 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 11 12"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 5 11 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 2": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 11 12"
                }
            },
            "Step 3": {
                "Step": "4 * 9 = 36 (left: 11 12 36)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 4": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 / 11 = 1.09 (left: 1.09 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 5": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 13 - 12 = 1 (left: 1 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "2.25 11 12"
                }
            },
            "Step 6": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 11 - 2.25 = 8.75 (left: 8.75 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "13 132"
                }
            },
            "Step 7": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132) -> 13 + 132 = 145 (left: 145)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "119"
                }
            },
            "Step 8": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132) -> 132 - 13 = 119 (left: 119) -> 9 / 1",
                "Pruning": null
            }
        },
        "Input": "4 9 11 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            }
        ]
    },
    "890": {
        "puzzle": "7 8 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 7 = 6 (left: 6 8 9)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 9 13"
                }
            },
            "Step 1": {
                "Step": "7 / 8 = 0.875 (left: 0.875 9 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 9 13"
                }
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 9 13 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 9 13"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 7 8 4)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 9 13"
                }
            },
            "Step 4": {
                "Step": "9 + 8 = 17 (left: 7 9 17)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 9 13"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 4 8 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "7 8 4"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 7 8 4) -> 8 - 7 = 1 (left: 1 8 4)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1 8 4"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 7 8 4) -> 8 - 7 = 1 (left: 1 8 4) -> 4 * 8 = 32 (left:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "3 8"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 7 8 4) -> 8 - 7 = 1 (left: 1 8 4) -> 4 - 1 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 + 8 = 15 (left: 9 13 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 9 13"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 7 8 4)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 9 13"
                }
            },
            "Step 2": {
                "Step": "8 / 7 = 1.14285714285714 (left: 1.14285714285714 9 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 9 13"
                }
            },
            "Step 3": {
                "Step": "7 + 8 = 15 (left: 9 13 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 9 13"
                }
            },
            "Step 4": {
                "Step": "9 + 8 = 17 (left: 7 13 17)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 9 13"
                }
            },
            "Step 5": {
                "Step": "9 + 13 = 22 (left: 7 8 22)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "9 13 56"
                }
            },
            "Step 6": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 9 + 13 = 22 (left: 22 56)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1 8 4"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 7 8 4) -> 8 - 7 = 1 (left: 1 8 4) -> 4 - 1 = 3 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "3 8"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 7 8 4) -> 8 - 7 = 1 (left: 1 8 4) -> 4 - 1 = 3 (left: 3 8) -> 4 + 7 = 11 (left: 11)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 + 8 = 17 (left: 7 13 17)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 9 13"
                }
            },
            "Step 1": {
                "Step": "7 * 8 = 56 (left: 9 13 56)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "7 8 4"
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 7 8 4) -> 8 / 4 = 2 (left: 7 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "9 13 15"
                }
            },
            "Step 3": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 9 * 13 = 117 (left: 15 117)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 9 13"
                }
            },
            "Step 4": {
                "Step": "7 * 8 = 56 (left: 9 13 56)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1.14285714285714 9 13"
                }
            },
            "Step 5": {
                "Step": "8 / 7 = 1.14285714285714 (left: 1.14285714285714 9 13) -> 1.14285714285714 * ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "7 8 22"
                }
            },
            "Step 6": {
                "Step": "9 + 13 = 22 (left: 7 8 22) -> 8 * 7 = 56 (left: 56 22)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1 8 4"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 7 8 4) -> 8 - 7 = 1 (left: 1 8 4) -> 8 - 4 = 4 (left: 1 4)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "1 4"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 7 8 4) -> 8 - 7 = 1 (left: 1 8 4) -> 8 - 4 = 4 (left: 1 4) -> 4 - 1 = 3 (left: 3)",
                "Pruning": "NA"
            }
        },
        "Input": "7 8 9 13",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "891": {
        "puzzle": "2 6 12 12",
        "Agent 0": {
            "Step 0": {
                "Step": "6 * 2 = 12 (left: 12 12 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 12 12"
                }
            },
            "Step 1": {
                "Step": "2 + 6 = 8 (left: 8 12 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "12 12 12"
                }
            },
            "Step 2": {
                "Step": "2 * 6 = 12 (left: 12 12 12) -> 12 - 12 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 12 12"
                }
            },
            "Step 3": {
                "Step": "12 - 6 = 6 (left: 2 6 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "12 12 12"
                }
            },
            "Step 4": {
                "Step": "2 * 6 = 12 (left: 12 12 12) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "2 12 12"
                }
            },
            "Step 5": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 12 / 2 = 6 (left: 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "3 12 "
                }
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 3 12  -> 12 / 3 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "2 + 2 = 4"
                }
            },
            "Step 7": {
                "Step": "12 / 6 = 2 (left: 2 2  -> 2 + 2 = 4 -> 2 + 4 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "There are no possible next steps as the calculation has been completed."
                }
            },
            "Step 8": {
                "Step": "2 * 6 = 12 (left: 12 12 12) -> Possible next steps: -> There are no possible next steps as the calculation has been completed. -> Calculation has been completed.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 / 6 = 2 (left: 2 2 ",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 12 12"
                }
            },
            "Step 1": {
                "Step": "12 - 6 = 6 (left: 2 6 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 12 12"
                }
            },
            "Step 2": {
                "Step": "12 - 2 = 10 (left: 6 10 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 12 12"
                }
            },
            "Step 3": {
                "Step": "12 - 6 = 6 (left: 2 6 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "2 6 12"
                }
            },
            "Step 4": {
                "Step": "12 - 6 = 6 (left: 2 6 12) -> 12 / 2 = 6 (left: 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 12 12"
                }
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 12 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "12 12 12"
                }
            },
            "Step 6": {
                "Step": "2 * 6 = 12 (left: 12 12 12) -> 12 - 12 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "0"
                }
            },
            "Step 7": {
                "Step": "12 / 6 = 2 (left: 2 2  -> 2 - 2 = 0 (left: 0) -> There are no possible next steps as there is no input given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "There are no possible next steps as the calculation has been completed."
                }
            },
            "Step 8": {
                "Step": "2 * 6 = 12 (left: 12 12 12) -> Possible next steps: -> There are no possible next steps as the calculation has been completed. -> Calculation completed. No further steps.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 / 6 = 2 (left: 2 12 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 12 12"
                }
            },
            "Step 1": {
                "Step": "2 * 6 = 12 (left: 12 12 12)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 12 12"
                }
            },
            "Step 2": {
                "Step": "2 * 6 = 12 (left: 12 12 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 2 "
                }
            },
            "Step 3": {
                "Step": "12 / 6 = 2 (left: 2 2  -> 2 - 2 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 2 "
                }
            },
            "Step 4": {
                "Step": "12 / 6 = 2 (left: 2 2  -> 2 + 2 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "2 12 12"
                }
            },
            "Step 5": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 + 12 = 14 (left: 12 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "3 12 "
                }
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 3 12  -> 3 * 4 = 12 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "Possible next steps:"
                }
            },
            "Step 7": {
                "Step": "2 * 6 = 12 (left: 12 12 12) -> Possible next steps: -> There are no possible next steps as the calculation has been completed.",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "There are no possible next steps as the calculation has been completed."
                }
            },
            "Step 8": {
                "Step": "2 * 6 = 12 (left: 12 12 12) -> Possible next steps: -> There are no possible next steps as the calculation has been completed. -> N/A",
                "Pruning": "NA"
            }
        },
        "Input": "2 6 12 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            }
        ]
    },
    "892": {
        "puzzle": "3 4 5 6",
        "Agent 0": {
            "Step 0": {
                "Step": "3 * 4 = 12 (left: 5 6 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 5 6"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 3 4 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 6 20"
                }
            },
            "Step 2": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 3 * 6 = 18 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 5 6"
                }
            },
            "Step 3": {
                "Step": "5 * 6 = 30 (left: 3 4 ",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 5 6"
                }
            },
            "Step 4": {
                "Step": "4 * 5 = 20 (left: 3 6 20)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "4 6 8"
                }
            },
            "Step 5": {
                "Step": "5 + 3 = 8 (left: 4 6 8) -> 8 - 4 = 4 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "4 6 8"
                }
            },
            "Step 6": {
                "Step": "5 + 3 = 8 (left: 4 6 8) -> 4 + 6 = 10 (left: 8 10)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "8 10"
                }
            },
            "Step 7": {
                "Step": "5 + 3 = 8 (left: 4 6 8) -> 4 + 6 = 10 (left: 8 10) -> 8 * 10 = 80 (left: 80)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "80"
                }
            },
            "Step 8": {
                "Step": "5 + 3 = 8 (left: 4 6 8) -> 4 + 6 = 10 (left: 8 10) -> 8 * 10 = 80 (left: 80) -> There are no possible next steps with just the input of 80.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 5 = 20 (left: 3 6 20)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 20"
                }
            },
            "Step 1": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 3 * 6 = 18 (left: 18 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 5 6"
                }
            },
            "Step 2": {
                "Step": "4 / 3 = 1.33333 (left: 1.33333 5 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "4 6 8"
                }
            },
            "Step 3": {
                "Step": "5 + 3 = 8 (left: 4 6 8) -> 4 / 6 = 0.6666666666666666 (left: 8 0.666666666",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 5 6"
                }
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 3 4 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "3 4 11"
                }
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 3 4 11) -> 11 - 3 = 8 (left:",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "4 6 8"
                }
            },
            "Step 6": {
                "Step": "5 + 3 = 8 (left: 4 6 8) -> 4 * 6 = 24 (left: 8 24)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "8 24"
                }
            },
            "Step 7": {
                "Step": "5 + 3 = 8 (left: 4 6 8) -> 4 * 6 = 24 (left: 8 24) -> 24 - 8 = 16 (left: 16 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "80"
                }
            },
            "Step 8": {
                "Step": "5 + 3 = 8 (left: 4 6 8) -> 4 + 6 = 10 (left: 8 10) -> 8 * 10 = 80 (left: 80) -> 80 * 2 = 160 (left: 160)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 * 5 = 20 (left: 3 6 20)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 6 20"
                }
            },
            "Step 1": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 6 + 3 = 9 (left: 9 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 5 6"
                }
            },
            "Step 2": {
                "Step": "5 + 3 = 8 (left: 4 6 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 6 20"
                }
            },
            "Step 3": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 20 / 6 = 3.33 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "3 4 "
                }
            },
            "Step 4": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 4 / 3 = 1.33 (left: 1.33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "3 4 "
                }
            },
            "Step 5": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 3 - 4 = -1 (left: -1)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "4 6 8"
                }
            },
            "Step 6": {
                "Step": "5 + 3 = 8 (left: 4 6 8) -> 4 + 6 = 10 (left: 8 10)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "8 0.666666666"
                }
            },
            "Step 7": {
                "Step": "5 + 3 = 8 (left: 4 6 8) -> 4 / 6 = 0.6666666666666666 (left: 8 0.666666666 -> 8 + 0.666666666 = 8.666666666 (left: 8.666666666)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "80"
                }
            },
            "Step 8": {
                "Step": "5 + 3 = 8 (left: 4 6 8) -> 4 + 6 = 10 (left: 8 10) -> 8 * 10 = 80 (left: 80) -> 80 - 2 = 78",
                "Pruning": null
            }
        },
        "Input": "3 4 5 6",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            }
        ]
    },
    "893": {
        "puzzle": "6 10 12 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 6 10 ",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1.66666666667 12 12"
                }
            },
            "Step 1": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 12 / 1.66666666667 = 7.2 (left: 7.2 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1.66666666667 12 12"
                }
            },
            "Step 2": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 12 - 1.66666666667 = 10.3333333333 (left: 10.3333333333 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 10 12 12"
                }
            },
            "Step 3": {
                "Step": "12 / 6 = 2 (left: 2 10 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 4": {
                "Step": "10 - 6 = 4 (left: 4 6 12) -> 12 - 4 = 8 (left: 8 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 5": {
                "Step": "10 - 6 = 4 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 6": {
                "Step": "10 - 6 = 4 (left: 4 6 12) -> 6 + 12 = 18 (left: 4 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "24 12"
                }
            },
            "Step 7": {
                "Step": "10 - 6 = 4 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 / 12 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "2"
                }
            },
            "Step 8": {
                "Step": "10 - 6 = 4 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 / 12 = 2 (left: 2) -> No possible next steps as there is only one number provided.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 / 2 = 6 (left: 6 10 ",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1.66666666667 12 12"
                }
            },
            "Step 1": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 1.66666666667 * 12 = 20 (left: 12 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 10 12 12"
                }
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 4 6 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 10 12 12"
                }
            },
            "Step 3": {
                "Step": "12 / 6 = 2 (left: 6 10 2)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "6 10 2"
                }
            },
            "Step 4": {
                "Step": "12 / 6 = 2 (left: 6 10 2) -> 2 * 6 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 10 12 12"
                }
            },
            "Step 5": {
                "Step": "10 / 6 = 1.6666666666666667 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 6": {
                "Step": "10 - 6 = 4 (left: 4 6 12) -> 12 / 4 = 3 (left: 3 6)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "12 13.66666666667"
                }
            },
            "Step 7": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 12 + 1.66666666667 = 13.66666666667 (left: 12 13.66666666667) -> 12 - 13.66666666667 = -1.66666666667 (left: -1.66666666667)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "2"
                }
            },
            "Step 8": {
                "Step": "10 - 6 = 4 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 / 12 = 2 (left: 2) -> No possible next steps with just one number.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1.66666666667 12 12"
                }
            },
            "Step 1": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 1.66666666667 * 12 = 20 (left: 12 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 10 12 12"
                }
            },
            "Step 2": {
                "Step": "6 * 10 = 60 (left: 12 12 60)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1.66666666667 12 12"
                }
            },
            "Step 3": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 12 / 1.66666666667 = 7.2 (left: 7.2 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1.66666666667 12 12"
                }
            },
            "Step 4": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 12 + 1.66666666667 = 13.66666666667 (left: 12 13.66666666667)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 5": {
                "Step": "10 - 6 = 4 (left: 4 6 12) -> 4 + 6 = 10 (left: 10 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 6": {
                "Step": "10 - 6 = 4 (left: 4 6 12) -> 12 - 4 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "24 12"
                }
            },
            "Step 7": {
                "Step": "10 - 6 = 4 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 - 12 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "12"
                }
            },
            "Step 8": {
                "Step": "10 - 6 = 4 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 - 12 = 12 (left: 12) -> 12 / 2 = 6 (left: 6 8)",
                "Pruning": null
            }
        },
        "Input": "6 10 12 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "894": {
        "puzzle": "5 5 5 9",
        "Agent 0": {
            "Step 0": {
                "Step": "5 / 5 = 1 (left: 1 5 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "5 5 4"
                }
            },
            "Step 1": {
                "Step": "9 - 5 = 4 (left: 5 5 4) -> 5 * 5 = 25 (left: 4 25)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 5 9"
                }
            },
            "Step 2": {
                "Step": "5 * 5 = 25 (left: 25 5 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 5 9"
                }
            },
            "Step 3": {
                "Step": "5 / 5 = 1 (left: 1 5 9)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "4 25"
                }
            },
            "Step 4": {
                "Step": "9 - 5 = 4 (left: 5 5 4) -> 5 * 5 = 25 (left: 4 25) -> 25 - 4 = 21 (left: 21)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 5 9"
                }
            },
            "Step 5": {
                "Step": "9 - 5 = 4 (left: 5 5 4)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "25 5 9"
                }
            },
            "Step 6": {
                "Step": "5 * 5 = 25 (left: 25 5 9) -> 25 / 5 = 5 (left: 5 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "1 4"
                }
            },
            "Step 7": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> 9 - 5 = 4 (left: 1 4) -> 4 - 1 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "21"
                }
            },
            "Step 8": {
                "Step": "9 - 5 = 4 (left: 5 5 4) -> 5 * 5 = 25 (left: 4 25) -> 25 - 4 = 21 (left: 21) -> 21 + 2 = 23",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 - 5 = 4 (left: 5 5 4)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 5 9"
                }
            },
            "Step 1": {
                "Step": "5 + 5 = 10 (left: 10 5 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "4 25"
                }
            },
            "Step 2": {
                "Step": "9 - 5 = 4 (left: 5 5 4) -> 5 * 5 = 25 (left: 4 25) -> 4 * 25 = 100 (left: 100)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "4 25"
                }
            },
            "Step 3": {
                "Step": "9 - 5 = 4 (left: 5 5 4) -> 5 * 5 = 25 (left: 4 25) -> 9 * 3 = 27 (left: 27 27)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "4 25"
                }
            },
            "Step 4": {
                "Step": "9 - 5 = 4 (left: 5 5 4) -> 5 * 5 = 25 (left: 4 25) -> 4 + 25 = 29 (left: 29)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 5 9"
                }
            },
            "Step 5": {
                "Step": "5 * 5 = 25 (left: 25 5 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "4 25"
                }
            },
            "Step 6": {
                "Step": "9 - 5 = 4 (left: 5 5 4) -> 5 * 5 = 25 (left: 4 25) -> 25 - 4 = 21 (left: 21)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "4 25"
                }
            },
            "Step 7": {
                "Step": "9 - 5 = 4 (left: 5 5 4) -> 5 * 5 = 25 (left: 4 25) -> 25 / 4 = 6.25 (left: 6.25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "21"
                }
            },
            "Step 8": {
                "Step": "9 - 5 = 4 (left: 5 5 4) -> 5 * 5 = 25 (left: 4 25) -> 25 - 4 = 21 (left: 21) -> 21 / 2 = 10.5 (left: 10.5)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 + 5 = 10 (left: 5 10 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 5 9"
                }
            },
            "Step 1": {
                "Step": "5 * 5 = 25 (left: 25 5 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "4 25"
                }
            },
            "Step 2": {
                "Step": "9 - 5 = 4 (left: 5 5 4) -> 5 * 5 = 25 (left: 4 25) -> 25 + 4 = 29 (left: 29)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "4 25"
                }
            },
            "Step 3": {
                "Step": "9 - 5 = 4 (left: 5 5 4) -> 5 * 5 = 25 (left: 4 25) -> 4 * 25 = 100 (left: 100)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 5 9"
                }
            },
            "Step 4": {
                "Step": "9 - 5 = 4 (left: 5 5 4)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1 5 9"
                }
            },
            "Step 5": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> 9 / 5 = 1.8 (left: 1 1.8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1 5 9"
                }
            },
            "Step 6": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> 9 - 5 = 4 (left: 1 4)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "1 4"
                }
            },
            "Step 7": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> 9 - 5 = 4 (left: 1 4) -> 1 * 4 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "21"
                }
            },
            "Step 8": {
                "Step": "9 - 5 = 4 (left: 5 5 4) -> 5 * 5 = 25 (left: 4 25) -> 25 - 4 = 21 (left: 21) -> No possible next steps.",
                "Pruning": null
            }
        },
        "Input": "5 5 5 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            }
        ]
    },
    "895": {
        "puzzle": "5 5 6 11",
        "Agent 0": {
            "Step 0": {
                "Step": "5 + 5 = 10 (left: 6 10 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 6 11"
                }
            },
            "Step 1": {
                "Step": "11 - 6 = 5 (left: 5 6 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 6 11"
                }
            },
            "Step 2": {
                "Step": "11 - 5 = 6 (left: 6 6 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 6 11"
                }
            },
            "Step 3": {
                "Step": "5 + 5 = 10 (left: 6 10 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "6 6 11"
                }
            },
            "Step 4": {
                "Step": "11 - 5 = 6 (left: 6 6 11) -> 11 / 6 = 1 (left: 1 6)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "6 10 11"
                }
            },
            "Step 5": {
                "Step": "5 + 5 = 10 (left: 6 10 11) -> 6 + 10 = 16 (left: 11 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1 6"
                }
            },
            "Step 6": {
                "Step": "11 - 5 = 6 (left: 6 6 11) -> 11 / 6 = 1 (left: 1 6) -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1 6"
                }
            },
            "Step 7": {
                "Step": "11 - 5 = 6 (left: 6 6 11) -> 11 / 6 = 1 (left: 1 6) -> 1 + 6 = 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "6"
                }
            },
            "Step 8": {
                "Step": "11 - 5 = 6 (left: 6 6 11) -> 11 / 6 = 1 (left: 1 6) -> 6 / 1 = 6 (left: 6) -> There are no possible next steps with the input 6.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 * 5 = 25 (left: 6 11 25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 6 11"
                }
            },
            "Step 1": {
                "Step": "5 * 6 = 30 (left: 30 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 11 11"
                }
            },
            "Step 2": {
                "Step": "6 + 5 = 11 (left: 5 11 11) -> 6 - 4 = 2 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 6 11"
                }
            },
            "Step 3": {
                "Step": "11 / 5 = 2.2 (left: 5 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 6 11"
                }
            },
            "Step 4": {
                "Step": "5 * 5 = 25 (left: 6 11 25)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "6 6 11"
                }
            },
            "Step 5": {
                "Step": "11 - 5 = 6 (left: 6 6 11) -> 6 * 6 = 36 (left: 11 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1 6"
                }
            },
            "Step 6": {
                "Step": "11 - 5 = 6 (left: 6 6 11) -> 11 / 6 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1 6"
                }
            },
            "Step 7": {
                "Step": "11 - 5 = 6 (left: 6 6 11) -> 11 / 6 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "6"
                }
            },
            "Step 8": {
                "Step": "11 - 5 = 6 (left: 6 6 11) -> 11 / 6 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6) -> 6 * 8 = 48 (left: 48)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 5 = 11 (left: 5 11 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 6 11"
                }
            },
            "Step 1": {
                "Step": "5 + 5 = 10 (left: 6 10 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 6 11"
                }
            },
            "Step 2": {
                "Step": "11 / 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "6 10 11"
                }
            },
            "Step 3": {
                "Step": "5 + 5 = 10 (left: 6 10 11) -> 10 + 11 = 21 (left: 6 21)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 6 11"
                }
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 5 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "6 10 11"
                }
            },
            "Step 5": {
                "Step": "5 + 5 = 10 (left: 6 10 11) -> 6 -",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1 6"
                }
            },
            "Step 6": {
                "Step": "11 - 5 = 6 (left: 6 6 11) -> 11 / 6 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1 6"
                }
            },
            "Step 7": {
                "Step": "11 - 5 = 6 (left: 6 6 11) -> 11 / 6 = 1 (left: 1 6) -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "1 + 6 = 7"
                }
            },
            "Step 8": {
                "Step": "11 - 5 = 6 (left: 6 6 11) -> 11 / 6 = 1 (left: 1 6) -> 1 + 6 = 7 -> 7 * 1 = 7 (left:",
                "Pruning": null
            }
        },
        "Input": "5 5 6 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            }
        ]
    },
    "896": {
        "puzzle": "6 8 9 9",
        "Agent 0": {
            "Step 0": {
                "Step": "6 + 8 = 14 (left: 9 9 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 9"
                }
            },
            "Step 1": {
                "Step": "6 * 8 = 48 (left: 9 9 48)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 9"
                }
            },
            "Step 2": {
                "Step": "9 + 6 = 15 (left: 8 9 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 9"
                }
            },
            "Step 3": {
                "Step": "6 + 8 = 14 (left: 9 9 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 4": {
                "Step": "9 - 6 = 3 (left: 3 8 9) -> 3 + 8 = 11 (left: 9 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 5": {
                "Step": "9 - 6 = 3 (left: 3 8 9) -> 9 - 3 = 6 (left: 6 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "9 24"
                }
            },
            "Step 6": {
                "Step": "9 - 6 = 3 (left: 3 8 9) -> 3 * 8 = 24 (left: 9 24) -> 24 / 9 = 2.6666666666666665 (left: 2.6666666666666665)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "2.6667 8 9"
                }
            },
            "Step 7": {
                "Step": "9 - 6 = 3 (left: 3 8 9) -> 8 / 3 = 2.6667 (left: 2.6667 8 9) -> 9 + 2.6667 = 11.6667 (left: 8 11.6667)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "8 11.6667"
                }
            },
            "Step 8": {
                "Step": "9 - 6 = 3 (left: 3 8 9) -> 8 / 3 = 2.6667 (left: 2.6667 8 9) -> 9 + 2.6667 = 11.6667 (left: 8 11.6667) -> 8 + 11.6667 = 19.6667",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 / 6 = 1.33 (left: 1.",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 9"
                }
            },
            "Step 1": {
                "Step": "6 + 8 = 14 (left: 9 9 14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 9"
                }
            },
            "Step 2": {
                "Step": "9 - 6 = 3 (left: 3 8 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 3": {
                "Step": "9 - 6 = 3 (left: 3 8 9) -> 8 / 3 = 2.6667 (left: 2.6667 8 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 4": {
                "Step": "9 - 6 = 3 (left: 3 8 9) -> 9 - 3 = 6 (left: 6 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 5": {
                "Step": "9 - 6 = 3 (left: 3 8 9) -> 3 * 8 = 24 (left: 9 24)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 6": {
                "Step": "9 - 6 = 3 (left: 3 8 9) -> 8 + 3 = 11 (left: 11 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "48 81"
                }
            },
            "Step 7": {
                "Step": "6 * 8 = 48 (left: 9 9 48) -> 9 * 9 = 81 (left: 48 81) -> 48 + 81 = 129 (left: 129)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "8 11.6667"
                }
            },
            "Step 8": {
                "Step": "9 - 6 = 3 (left: 3 8 9) -> 8 / 3 = 2.6667 (left: 2.6667 8 9) -> 9 + 2.6667 = 11.6667 (left: 8 11.6667) -> 8 / 11.6667 \u2248 0.6865 (left: 0.6865)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 + 6 = 15 (left: 8 9 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 9"
                }
            },
            "Step 1": {
                "Step": "9 + 6 = 15 (left: 8 9 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 9"
                }
            },
            "Step 2": {
                "Step": "6 + 8 = 14 (left: 9 9 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 9 15"
                }
            },
            "Step 3": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 15 - 8 = 7 (left: 8 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 4": {
                "Step": "9 - 6 = 3 (left: 3 8 9) -> 9 / 3 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 5": {
                "Step": "9 - 6 = 3 (left: 3 8 9) -> 9 + 3 = 12 (left: 8 9 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "9 9 48"
                }
            },
            "Step 6": {
                "Step": "6 * 8 = 48 (left: 9 9 48) -> 9 * 9 = 81 (left: 48 81)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "9 11"
                }
            },
            "Step 7": {
                "Step": "9 - 6 = 3 (left: 3 8 9) -> 3 + 8 = 11 (left: 9 11) -> 9 * 11 = 99 (left: 99)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "8 11.6667"
                }
            },
            "Step 8": {
                "Step": "9 - 6 = 3 (left: 3 8 9) -> 8 / 3 = 2.6667 (left: 2.6667 8 9) -> 9 + 2.6667 = 11.6667 (left: 8 11.6667) -> 8 * 11.6667 = 93.3336 (left: 93.3336)",
                "Pruning": "NA"
            }
        },
        "Input": "6 8 9 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "897": {
        "puzzle": "3 3 6 13",
        "Agent 0": {
            "Step 0": {
                "Step": "6 * 3 = 18 (left: 18 6 ",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 6 13"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 6 6 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 6 13"
                }
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 6 13)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "9 6 13"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 6 - 13 = -7 (left: -7 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "9 6 13"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 * 6 = 54 (left: 54 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "18 6 "
                }
            },
            "Step 6": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 - 6 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 4 6\nSteps:\n3 * 4 = 12 (left: 2 6 12)\n6 * 2 = 12 (left: 12 12)\n12 * 12 = 24 (left: 24)\nAnswer: (3 * 4) * (6 * 2) = 24",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 5 7\nSteps:\n3 + 5 = 8 (left: 2 7 8)\n2 * 7 = 14 (left: 14 8)\n14 - 8 = 6 (left: 6)\n6 * 4 = 24\nAnswer: (2 * 7) - (3 + 5) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 3 7 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "18 6 "
                }
            },
            "Step 1": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "18 6 "
                }
            },
            "Step 2": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 6 13"
                }
            },
            "Step 3": {
                "Step": "13 - 3 = 10 (left: 3 6 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "18 6 "
                }
            },
            "Step 4": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 * 6 = 108 (left: 108)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 5 5\nSteps:\n5 + 5 = 10 (left: 2 3 10)\n2 * 3 = 6 (left: 6 10)\n6 * 10 = 60 (left: 60)\nAnswer: (2 * 3) * (5 + 5) = 24",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 6 9\nSteps:\n3 * 9 = 27 (left: 2 6 27)\n27 - 6 = 21 (left: 2 21)\n21 - 2 = 19 (left: 19)\nAnswer: ((2 * 3) + 9) * 6 = 24",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 4 4\nSteps:\n3 + 4 = 7 (left: 2 4 7)\n4 * 2 = 8 (left: 8 7)\n8 * 7 = 56 (left: 56)\nAnswer: (2 * 4) * (3 + 4) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 6 6 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "18 6 "
                }
            },
            "Step 1": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 / 6 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "24"
                }
            },
            "Step 2": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 7 3 5 2\nSteps:\n7 - 2 = 5 (left: 3 5 5)\n5 * 5 = 25 (left: 3 25)\n25 - 3 = 22 (left: 22)\nAnswer: (7 - 2) * (5 * 5) = 24",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 4 6\nSteps:\n2 * 3 = 6 (left: 4 6 6)\n6 + 4 = 10 (left: 10 6)\n10 + 6 = 16 (left: 16)\n16 + 8 = 24 (left: 24)\nAnswer: ((2 * 3) + 4) + 6 = 24",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "18 6 "
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "18 6 "
                }
            },
            "Step 6": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 * 6 = 108 (left: 108)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 5 7\nSteps:\n2 + 3 = 5 (left: 5 7 5)\n5 + 5 = 10 (left: 7 10)\n10 * 7 = 70 (left: 70)\n70 / 5 = 14 (left: 14)\n14 - 10 = 4 (left: 4)\n4 * 5 = 20 (left: 20)\n20 + ",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 5 6\nSteps:\n5 + 3 = 8 (left: 2 6 8)\n8 * 2 = 16 (left: 6 16)\n16 + 6 = 22 (left: 22)\n22 + 2 = 24 (left: 24)\nAnswer: ((5 + 3) * 2) + 6 + 2 = 24",
                "Pruning": "NA"
            }
        },
        "Input": "3 3 6 13",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "898": {
        "puzzle": "6 8 9 11",
        "Agent 0": {
            "Step 0": {
                "Step": "6 * 8 = 48 (left: 9 11 48)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 11"
                }
            },
            "Step 1": {
                "Step": "9 + 6 = 15 (left: 8 11 15)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 11"
                }
            },
            "Step 2": {
                "Step": "9 + 6 = 15 (left: 8 11 15)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "9 11 "
                }
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 9 11  -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 11"
                }
            },
            "Step 4": {
                "Step": "8 - 6 = 2 (left: 2 9 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "9 11 "
                }
            },
            "Step 5": {
                "Step": "6 * 8 = 48 (left: 9 11  -> 11 / 9 = 1.2222 (left: 1.2222)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "9 11 48"
                }
            },
            "Step 6": {
                "Step": "6 * 8 = 48 (left: 9 11 48) -> 9 * 11 = 99 (left: 99 48)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "99 48"
                }
            },
            "Step 7": {
                "Step": "6 * 8 = 48 (left: 9 11 48) -> 9 * 11 = 99 (left: 99 48) -> 99 * 48 = 4752 (left: 4752)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "48 4752"
                }
            },
            "Step 8": {
                "Step": "6 * 8 = 48 (left: 9 11 48) -> 9 * 11 = 99 (left: 99 48) -> 99 * 48 = 4752 (left: 48 4752) -> 4752 / 48 = 99 (left: 99)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 + 6 = 15 (left: 8 11 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 11"
                }
            },
            "Step 1": {
                "Step": "6 * 8 = 48 (left: 9 11 48)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 11"
                }
            },
            "Step 2": {
                "Step": "8 / 6 = 1.33 (left: 1.",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 11"
                }
            },
            "Step 3": {
                "Step": "11 - 6 = 5 (left: 5 8 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "9 11 "
                }
            },
            "Step 4": {
                "Step": "6 * 8 = 48 (left: 9 11  -> 9 - 11 = -2 (left: -2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 11"
                }
            },
            "Step 5": {
                "Step": "6 + 8 = 14 (left: 9 11 14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "8 11 15"
                }
            },
            "Step 6": {
                "Step": "9 + 6 = 15 (left: 8 11 15) -> 8 * 11 = 88 (left: 88 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "99 48"
                }
            },
            "Step 7": {
                "Step": "6 * 8 = 48 (left: 9 11 48) -> 9 * 11 = 99 (left: 99 48) -> 99 * 48 = 4752 (left: 4752)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "48 4752"
                }
            },
            "Step 8": {
                "Step": "6 * 8 = 48 (left: 9 11 48) -> 9 * 11 = 99 (left: 99 48) -> 99 * 48 = 4752 (left: 48 4752) -> 4752 - 48 = 4704 (left: 48 4704)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 8 = 14 (left: 9 11 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 11"
                }
            },
            "Step 1": {
                "Step": "6 * 8 = 48 (left: 9 11 ",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 11"
                }
            },
            "Step 2": {
                "Step": "8 + 9 = 17 (left: 6 11 17)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "9 11 48"
                }
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 9 11 48) -> 48 - 9 = 39 (left: 9 39)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 11"
                }
            },
            "Step 4": {
                "Step": "9 + 6 = 15 (left: 8 11 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 11"
                }
            },
            "Step 5": {
                "Step": "6 + 8 = 14 (left: 9 11 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "5 8 9"
                }
            },
            "Step 6": {
                "Step": "11 - 6 = 5 (left: 5 8 9) -> 8 + 9 = 17 (left: 5 17)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "99 48"
                }
            },
            "Step 7": {
                "Step": "6 * 8 = 48 (left: 9 11 48) -> 9 * 11 = 99 (left: 99 48) -> 99 * 48 = 4752 (left: 48 4752)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "48 4752"
                }
            },
            "Step 8": {
                "Step": "6 * 8 = 48 (left: 9 11 48) -> 9 * 11 = 99 (left: 99 48) -> 99 * 48 = 4752 (left: 48 4752) -> 48 / 4752 = 0.01 (left: 0.01)",
                "Pruning": "NA"
            }
        },
        "Input": "6 8 9 11",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            }
        ]
    },
    "899": {
        "puzzle": "1 3 3 11",
        "Agent 0": {
            "Step 0": {
                "Step": "11 - 1 = 10 (left: 3 3 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 3 11"
                }
            },
            "Step 1": {
                "Step": "3 - 1 = 2 (left: 2 3 11)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 3 11"
                }
            },
            "Step 2": {
                "Step": "1 + 3 = 4 (left: 3 4 11)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "3 4 11"
                }
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> Input: 7 9 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 3 11"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 1 9 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "3 / 1 = 3 (left: 3 3 11) -> 11 - 3 = 8 (left: 3 8) -> 6 / 6 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "3 4 11"
                }
            },
            "Step 6": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 4 / 3 = 1.33 (left: 1.33 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1 11"
                }
            },
            "Step 7": {
                "Step": "3 / 1 = 3 (left: 3 3 11) -> 3 / 3 = 1 (left: 1 11) -> 11 + 1 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "11"
                }
            },
            "Step 8": {
                "Step": "3 / 1 = 3 (left: 3 3 11) -> 3 / 3 = 1 (left: 1 11) -> 11 / 1 = 11 (left: 11) -> 11 + 2 = 13 (left: 2 13)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 1 9 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 3 11"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 1 9 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 3 11"
                }
            },
            "Step 2": {
                "Step": "3 / 1 = 3 (left: 3 3 11)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 3 11"
                }
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 3 4 11)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 3 11"
                }
            },
            "Step 4": {
                "Step": "3 / 1 = 3 (left: 3 3 11) -> 3 / 3 = 1 (left: 1 11)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 3 11"
                }
            },
            "Step 5": {
                "Step": "3 / 1 = 3 (left: 3 3 11) -> 3 * 3 = 9 (left: 9 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3 8"
                }
            },
            "Step 6": {
                "Step": "3 / 1 = 3 (left: 3 3 11) -> 11 - 3 = 8 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "3 / 1 = 3 (left: 3 3 11) -> 11 - 3 = 8 (left: 3 8) -> 8 / 3 = 2.67 (left: 2.67)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "2.67"
                }
            },
            "Step 8": {
                "Step": "3 / 1 = 3 (left: 3 3 11) -> 11 - 3 = 8 (left: 3 8) -> 8 / 3 = 2.67 (left: 2.67) -> There are no possible next steps with just the number 2.67.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 3 4 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 3 11"
                }
            },
            "Step 1": {
                "Step": "3 - 1 = 2 (left: 2 3 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 3 11"
                }
            },
            "Step 2": {
                "Step": "3 - 1 = 2 (left: 2 3 11)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 3 10"
                }
            },
            "Step 3": {
                "Step": "11 - 1 = 10 (left: 3 3 10) -> 3 * 3 = 9 (left: 9 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 3 11"
                }
            },
            "Step 4": {
                "Step": "3 / 1 = 3 (left: 3 3 11) -> 11 - 3 = 8 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1 11"
                }
            },
            "Step 5": {
                "Step": "3 / 1 = 3 (left: 3 3 11) -> 3 / 3 = 1 (left: 1 11) -> 11 / 1 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1 11"
                }
            },
            "Step 6": {
                "Step": "3 / 1 = 3 (left: 3 3 11) -> 3 / 3 = 1 (left: 1 11) -> 11 / 1 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1 11"
                }
            },
            "Step 7": {
                "Step": "3 / 1 = 3 (left: 3 3 11) -> 3 / 3 = 1 (left: 1 11) -> 11 / 1 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "11"
                }
            },
            "Step 8": {
                "Step": "3 / 1 = 3 (left: 3 3 11) -> 3 / 3 = 1 (left: 1 11) -> 11 / 1 = 11 (left: 11) -> 11 + 2 = 13",
                "Pruning": null
            }
        },
        "Input": "1 3 3 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1050": {
        "puzzle": "4 10 11 13",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 11 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 11 13"
                }
            },
            "Step 1": {
                "Step": "10 - 4 = 6 (left: 6 11 13) -> 11 / 6 = 1.83 (left: 1.83 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 11 13"
                }
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 6 11 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 11 13"
                }
            },
            "Step 3": {
                "Step": "4 + 10 = 14 (left: 11 13 14)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 11 13"
                }
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 6 11 13) -> 6 * 11 = 66 (left: 13 66)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "4 10 2"
                }
            },
            "Step 5": {
                "Step": "13 - 11 = 2 (left: 4 10 2) -> 4 * 10 = 40 (left: 40 2)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "6 11 13"
                }
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 6 11 13) -> 11 + 13 = 24 (left: 6 24)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "40 2"
                }
            },
            "Step 7": {
                "Step": "13 - 11 = 2 (left: 4 10 2) -> 4 * 10 = 40 (left: 40 2) -> 40 - 2 = 38 (left: 38)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "10 - 4 = 6 (left: 6 11 13) -> 11 + 13 = 24 (left: 6 24) -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (10 - 4) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 10 = 3 (left: 3 11 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 11 13"
                }
            },
            "Step 1": {
                "Step": "4 * 10 = 40 (left: 40 11 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 11 13"
                }
            },
            "Step 2": {
                "Step": "10 / 4 = 2.5 (left: 2.5 11 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 11 13"
                }
            },
            "Step 3": {
                "Step": "13 - 11 = 2 (left: 4 10 2)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "6 11 13"
                }
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 6 11 13) -> 13 - 6 = 7 (left: 7 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "11 13 14"
                }
            },
            "Step 5": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 11 - 13 = -2 (left: -2 14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "40 2"
                }
            },
            "Step 6": {
                "Step": "13 - 11 = 2 (left: 4 10 2) -> 4 * 10 = 40 (left: 40 2) -> 40 - 2 = 38 (left: 38)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "40 2"
                }
            },
            "Step 7": {
                "Step": "13 - 11 = 2 (left: 4 10 2) -> 4 * 10 = 40 (left: 40 2) -> 40 / 2 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "10 - 4 = 6 (left: 6 11 13) -> 11 + 13 = 24 (left: 6 24) -> 6 * 4 = 24 (left: 24) -> Answer: (10 - 4) + (11 + 13) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "11 + 4 = 15 (left: 10 13 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 11 13"
                }
            },
            "Step 1": {
                "Step": "11 + 4 = 15 (left: 10 13 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 11 13"
                }
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 6 11 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 11 13"
                }
            },
            "Step 3": {
                "Step": "13 - 11 = 2 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "11 13 14"
                }
            },
            "Step 4": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 13 / 11 = 1.1818181818181819 (left: 1.1818181818181819 14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "11 13 14"
                }
            },
            "Step 5": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 14 / 11 = 1.272727272",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "40 2"
                }
            },
            "Step 6": {
                "Step": "13 - 11 = 2 (left: 4 10 2) -> 4 * 10 = 40 (left: 40 2) -> 40 + 2 = 42 (left: 42)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "6 24"
                }
            },
            "Step 7": {
                "Step": "10 - 4 = 6 (left: 6 11 13) -> 11 + 13 = 24 (left: 6 24) -> 6 * 4 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "10 - 4 = 6 (left: 6 11 13) -> 11 + 13 = 24 (left: 6 24) -> 6 * 4 = 24 (left: 24) -> Answer: (10 - 4) * (11 + 13) = 24",
                "Pruning": "NA"
            }
        },
        "Input": "4 10 11 13",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "1051": {
        "puzzle": "2 6 6 7",
        "Agent 0": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 5 6 6)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 6 7) -> 3 * 6 = 18 (left: 7 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 6 7"
                }
            },
            "Step 3": {
                "Step": "2 + 6 = 8 (left: 6 7 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 6 7) -> 6 + 7 = 13 (left: 3 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24 7"
                }
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 4 * 6 = 24 (left: 24 7) -> 24 + 7 = 31 (left: 7 31)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24 7"
                }
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 4 * 6 = 24 (left: 24 7) -> Input: 5 10",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 6"
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "-17"
                }
            },
            "Step 8": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 4 * 6 = 24 (left: 24 7) -> 7 - 24 = -17 (left: -17) -> -17 * 2 = -34 (left: -34)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 - 6 = 1 (left: 2 1 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 6 7"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 6 7)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 4 * 6 = 24 (left: 24 7)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 6"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 6 7) -> 6 / 3 = 2 (left: 2 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24 7"
                }
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 4 * 6 = 24 (left: 24 7) -> 24 - 7 = 17 (left: 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24 7"
                }
            },
            "Step 7": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 4 * 6 = 24 (left: 24 7) -> 7 - 24 = -17 (left: -17)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "Input: 5 10"
                }
            },
            "Step 8": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 4 * 6 = 24 (left: 24 7) -> Input: 5 10 -> 10 - 5 = 5 (left: 5 10)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 4 6 7)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 6 7"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 6 6 5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 6 7"
                }
            },
            "Step 2": {
                "Step": "2 + 6 = 8 (left: 6 7 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 4 * 6 = 24 (left: 7 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 6 7) -> Input: 4 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 5 + 6 = 11 (left: 6 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 6"
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "-17"
                }
            },
            "Step 8": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 4 * 6 = 24 (left: 24 7) -> 7 - 24 = -17 (left: -17) -> -17 * 2 = -34 (left: -34)",
                "Pruning": "NA"
            }
        },
        "Input": "2 6 6 7",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            }
        ]
    },
    "1052": {
        "puzzle": "7 10 10 12",
        "Agent 0": {
            "Step 0": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 10 10 12"
                }
            },
            "Step 1": {
                "Step": "10 + 10 = 20 (left: 7 20 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 10 10 12"
                }
            },
            "Step 2": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1.42857142857 10 12"
                }
            },
            "Step 3": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 1.42857142857 * 12 =",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 10 10 12"
                }
            },
            "Step 4": {
                "Step": "7 + 10 = 17 (left: 10 10 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 10 10 12"
                }
            },
            "Step 5": {
                "Step": "7 * 10 = 70 (left: 10 12 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "7 10 2"
                }
            },
            "Step 6": {
                "Step": "12 - 10 = 2 (left: 7 10 2) -> 7 + 10 = 17 (left: 2 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "1.42857142857 2"
                }
            },
            "Step 7": {
                "Step": "12 - 10 = 2 (left: 7 10 2) -> 10 / 7 = 1.42857142857 (left: 1.42857142857 2) -> 2 - 1.42857142857 = 0.571428571",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "3.42857142857"
                }
            },
            "Step 8": {
                "Step": "12 - 10 = 2 (left: 7 10 2) -> 10 / 7 = 1.42857142857 (left: 1.42857142857 2) -> 1.42857142857 + 2 = 3.42857142857 (left: 3.42857142857) -> 3.42857142857 + 2 = 5.42857142857",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 - 7 = 3 (left: 3 10 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 10 10 12"
                }
            },
            "Step 1": {
                "Step": "10 * 7 = 70 (left: 70 10 12)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "70 10 12"
                }
            },
            "Step 2": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 10 + 12 = 22 (left: 70 22)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 10 10 12"
                }
            },
            "Step 3": {
                "Step": "7 + 10 = 17 (left: 10 10 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 10 10 12"
                }
            },
            "Step 4": {
                "Step": "12 - 10 = 2 (left: 7 10 2)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "7 10 2"
                }
            },
            "Step 5": {
                "Step": "12 - 10 = 2 (left: 7 10 2) -> 10 - 2 = 8 (left: 7 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "7 10 2"
                }
            },
            "Step 6": {
                "Step": "12 - 10 = 2 (left: 7 10 2) -> 7 - 2 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "1.42857142857 2"
                }
            },
            "Step 7": {
                "Step": "12 - 10 = 2 (left: 7 10 2) -> 10 / 7 = 1.42857142857 (left: 1.42857142857 2) -> 1.42857142857 + 2 = 3.42857142857 (left: 3.42857142857)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "3.42857142857"
                }
            },
            "Step 8": {
                "Step": "12 - 10 = 2 (left: 7 10 2) -> 10 / 7 = 1.42857142857 (left: 1.42857142857 2) -> 1.42857142857 + 2 = 3.42857142857 (left: 3.42857142857) -> Possible next steps:",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 / 10 = 1 (left: 7 1 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 10 10 12"
                }
            },
            "Step 1": {
                "Step": "12 - 7 = 5 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 10 10 12"
                }
            },
            "Step 2": {
                "Step": "7 / 10 = 0.7 (left: 0.7 10 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 10 10 12"
                }
            },
            "Step 3": {
                "Step": "10 / 7 = 1.43 (left: 1.43 10 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 10 10 12"
                }
            },
            "Step 4": {
                "Step": "10 / 7 = 1.43 (left: 1.43 10 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "7 10 2"
                }
            },
            "Step 5": {
                "Step": "12 - 10 = 2 (left: 7 10 2) -> 10 / 7 = 1.42857142857 (left: 1.42857142857 2)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "7 10 2"
                }
            },
            "Step 6": {
                "Step": "12 - 10 = 2 (left: 7 10 2) -> 10 + 2 = 12 (left: 7 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "1.42857142857 2"
                }
            },
            "Step 7": {
                "Step": "12 - 10 = 2 (left: 7 10 2) -> 10 / 7 = 1.42857142857 (left: 1.42857142857 2) -> 1.42857142857 + 2 = 3.42857142857 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "3.42857142857"
                }
            },
            "Step 8": {
                "Step": "12 - 10 = 2 (left: 7 10 2) -> 10 / 7 = 1.42857142857 (left: 1.42857142857 2) -> 1.42857142857 + 2 = 3.42857142857 (left: 3.42857142857) -> 3.42857142857 / 3 =",
                "Pruning": null
            }
        },
        "Input": "7 10 10 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1053": {
        "puzzle": "2 5 7 11",
        "Agent 0": {
            "Step 0": {
                "Step": "5 * 2 = 10 (left: 10 7 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 7 11"
                }
            },
            "Step 1": {
                "Step": "2 * 5 = 10 (left: 10 7 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 7 11"
                }
            },
            "Step 2": {
                "Step": "2 + 5 = 7 (left: 7 7 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 7 11"
                }
            },
            "Step 3": {
                "Step": "11 - 5 = 6 (left: 2 6 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "2 12 11"
                }
            },
            "Step 4": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 2 + 12 = 14 (left: 11 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "2 5"
                }
            },
            "Step 5": {
                "Step": "11 - 5 = 6 (left: 2 6 11) -> 11 - 6 = 5 (left: 2 5) -> 5 - 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "2 12 11"
                }
            },
            "Step 6": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 - 2 = 10 (left: 10 11)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "2 5"
                }
            },
            "Step 7": {
                "Step": "11 - 5 = 6 (left: 2 6 11) -> 11 - 6 = 5 (left: 2 5) -> 5 - 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "3"
                }
            },
            "Step 8": {
                "Step": "11 - 5 = 6 (left: 2 6 11) -> 11 - 6 = 5 (left: 2 5) -> 5 - 2 = 3 (left: 3) -> 3 * 8 = 24 (left: 8 24)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 + 7 = 12 (left: 2 12 11)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 7 11"
                }
            },
            "Step 1": {
                "Step": "2 + 5 = 7 (left: 7 7 11)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 7 11"
                }
            },
            "Step 2": {
                "Step": "5 + 7 = 12 (left: 2 12 11)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 7 11"
                }
            },
            "Step 3": {
                "Step": "5 + 7 = 12 (left: 2 12 11)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 7 11"
                }
            },
            "Step 4": {
                "Step": "5 * 7 = 35 (left: 2 35 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 12 11"
                }
            },
            "Step 5": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 2 * 12 = 24 (left: 11 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2 12 11"
                }
            },
            "Step 6": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 - 2 = 10 (left: 10 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "2 5"
                }
            },
            "Step 7": {
                "Step": "11 - 5 = 6 (left: 2 6 11) -> 11 - 6 = 5 (left: 2 5) -> 2 * 5 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "10"
                }
            },
            "Step 8": {
                "Step": "11 - 5 = 6 (left: 2 6 11) -> 11 - 6 = 5 (left: 2 5) -> 2 * 5 = 10 (left: 10) -> 10 / 10 = 1 (left: 1)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "11 - 5 = 6 (left: 2 6 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 7 11"
                }
            },
            "Step 1": {
                "Step": "2 + 5 = 7 (left: 7 7 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 7 11"
                }
            },
            "Step 2": {
                "Step": "5 * 7 = 35 (left: 2 35 11)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "2 35 11"
                }
            },
            "Step 3": {
                "Step": "5 * 7 = 35 (left: 2 35 11) -> 35 / 2 = 17.5 (left: 17.5 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "2 6 11"
                }
            },
            "Step 4": {
                "Step": "11 - 5 = 6 (left: 2 6 11) -> 11 - 6 = 5 (left: 2 5)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "2 5"
                }
            },
            "Step 5": {
                "Step": "11 - 5 = 6 (left: 2 6 11) -> 11 - 6 = 5 (left: 2 5) -> 5 - 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2 12 11"
                }
            },
            "Step 6": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 2 * 12 = 24 (left: 11 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "2 5"
                }
            },
            "Step 7": {
                "Step": "11 - 5 = 6 (left: 2 6 11) -> 11 - 6 = 5 (left: 2 5) -> 2 + 5 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "3"
                }
            },
            "Step 8": {
                "Step": "11 - 5 = 6 (left: 2 6 11) -> 11 - 6 = 5 (left: 2 5) -> 5 - 2 = 3 (left: 3) -> There are no possible next steps with the input 3.",
                "Pruning": null
            }
        },
        "Input": "2 5 7 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            }
        ]
    },
    "1054": {
        "puzzle": "4 4 6 9",
        "Agent 0": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 9"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 6 16 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "4 6 5"
                }
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 4 6 5) -> 5 + 4 = 9 (left: 6 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2 5"
                }
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 4 6 5) -> 6 - 4 = 2 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "2 4 "
                }
            },
            "Step 4": {
                "Step": "6 - 4 = 2 (left: 2 4  -> 4 - 2 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "4 6 5"
                }
            },
            "Step 5": {
                "Step": "9 - 4 = 5 (left: 4 6 5) -> 5 + 4 = 9 (left: 6 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 10 9"
                }
            },
            "Step 6": {
                "Step": "6 + 4 = 10 (left: 4 10 9) -> 10 - 4 = 6 (left: 6 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2 5"
                }
            },
            "Step 7": {
                "Step": "9 - 4 = 5 (left: 4 6 5) -> 6 - 4 = 2 (left: 2 5) -> 2 - 5 = -3 (left: -3)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "-3"
                }
            },
            "Step 8": {
                "Step": "9 - 4 = 5 (left: 4 6 5) -> 6 - 4 = 2 (left: 2 5) -> 2 - 5 = -3 (left: -3) -> There are no possible next steps as the input is not a valid operation.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 6 16 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 9"
                }
            },
            "Step 1": {
                "Step": "6 - 4 = 2 (left: 2 4 ",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "4 6 5"
                }
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 4 6 5) -> 6 - 4 = 2 (left: 2 5)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2 5"
                }
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 4 6 5) -> 6 - 4 = 2 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 9"
                }
            },
            "Step 4": {
                "Step": "4 * 4 = 16 (left: 6 16 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "9 96"
                }
            },
            "Step 5": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 6 * 16 = 96 (left: 9 96) -> 9 + 96 = 105 (left: 105)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "9 96"
                }
            },
            "Step 6": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 6 * 16 = 96 (left: 9 96) -> 9 * 10 = 90 (left: 90 96)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2 5"
                }
            },
            "Step 7": {
                "Step": "9 - 4 = 5 (left: 4 6 5) -> 6 - 4 = 2 (left: 2 5) -> 2 * 5 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "-3"
                }
            },
            "Step 8": {
                "Step": "9 - 4 = 5 (left: 4 6 5) -> 6 - 4 = 2 (left: 2 5) -> 2 - 5 = -3 (left: -3) -> There are no possible next steps with the input -3.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 6 16 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 9"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 4 6 5)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 16 9"
                }
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 6 * 16 = 96 (left: 9 96)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 9"
                }
            },
            "Step 3": {
                "Step": "4 * 4 = 16 (left: 6 9 16)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 9"
                }
            },
            "Step 4": {
                "Step": "6 + 4 = 10 (left: 4 10 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2 5"
                }
            },
            "Step 5": {
                "Step": "9 - 4 = 5 (left: 4 6 5) -> 6 - 4 = 2 (left: 2 5) -> 2 + 5 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2 5"
                }
            },
            "Step 6": {
                "Step": "9 - 4 = 5 (left: 4 6 5) -> 6 - 4 = 2 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2 5"
                }
            },
            "Step 7": {
                "Step": "9 - 4 = 5 (left: 4 6 5) -> 6 - 4 = 2 (left: 2 5) -> 2 * 5 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "-3"
                }
            },
            "Step 8": {
                "Step": "9 - 4 = 5 (left: 4 6 5) -> 6 - 4 = 2 (left: 2 5) -> 2 - 5 = -3 (left: -3) -> There are no possible next steps with the input of -3.",
                "Pruning": null
            }
        },
        "Input": "4 4 6 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1055": {
        "puzzle": "6 9 10 12",
        "Agent 0": {
            "Step 0": {
                "Step": "10 + 12 = 22 (left: 6 9 22)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 12"
                }
            },
            "Step 1": {
                "Step": "6 + 9 = 15 (left: 10 12 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 12"
                }
            },
            "Step 2": {
                "Step": "6 * 9 = 54 (left: 10 12 54)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 12"
                }
            },
            "Step 3": {
                "Step": "9 * 10 = 90 (left: 6 12 90)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 12"
                }
            },
            "Step 4": {
                "Step": "6 * 9 = 54 (left: 10 12 54)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "0.67 9 10 12"
                }
            },
            "Step 5": {
                "Step": "6 / 9 = 0.67 (left: 0.67 9 10 12) -> 12 - 0.67 = 11.33 (left: 10 11.33 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "10 11.33 12"
                }
            },
            "Step 6": {
                "Step": "6 / 9 = 0.67 (left: 0.67 9 10 12) -> 12 - 0.67 = 11.33 (left: 10 11.33 12) -> 11.33 + 12 = 23.33 (left: 10 23.33)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "10 11.33 12"
                }
            },
            "Step 7": {
                "Step": "6 / 9 = 0.67 (left: 0.67 9 10 12) -> 12 - 0.67 = 11.33 (left: 10 11.33 12) -> 10 / 11.33 = 0.88 (left: 0.88 12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "10 23.33"
                }
            },
            "Step 8": {
                "Step": "6 / 9 = 0.67 (left: 0.67 9 10 12) -> 12 - 0.67 = 11.33 (left: 10 11.33 12) -> 11.33 + 12 = 23.33 (left: 10 23.33) -> 10 * 23.33 = 233.3 (left: 233.3)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 * 12 = 120 (left: 6 9 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 12"
                }
            },
            "Step 1": {
                "Step": "6 / 9 = 0.67 (left: 0.67 9 10 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 12"
                }
            },
            "Step 2": {
                "Step": "9 * 10 = 90 (left: 6 12 90)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 12"
                }
            },
            "Step 3": {
                "Step": "9 * 10 = 90 (left: 6 12 90)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "6 12 90"
                }
            },
            "Step 4": {
                "Step": "9 * 10 = 90 (left: 6 12 90) -> 90 / 6 = 15 (left: 12 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "6 12 90"
                }
            },
            "Step 5": {
                "Step": "9 * 10 = 90 (left: 6 12 90) -> 90 - 12 = 78 (left: 6 78)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "10 12 54"
                }
            },
            "Step 6": {
                "Step": "6 * 9 = 54 (left: 10 12 54) -> 54 / 12 = 4.5 (left: 10 4.5)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "18 90"
                }
            },
            "Step 7": {
                "Step": "9 * 10 = 90 (left: 6 12 90) -> 6 + 12 = 18 (left: 18 90) -> 90 - 18 = 72 (left: 72)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "10 23.33"
                }
            },
            "Step 8": {
                "Step": "6 / 9 = 0.67 (left: 0.67 9 10 12) -> 12 - 0.67 = 11.33 (left: 10 11.33 12) -> 11.33 + 12 = 23.33 (left: 10 23.33) -> 10 * 23.33 = 233.3 (left: 233.3)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 + 12 = 22 (left: 6 9 22)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 12"
                }
            },
            "Step 1": {
                "Step": "9 + 10 = 19 (left: 6 12 19)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 12"
                }
            },
            "Step 2": {
                "Step": "6 * 9 = 54 (left: 10 12 54)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 12"
                }
            },
            "Step 3": {
                "Step": "9 + 10 = 19 (left: 6 12 19)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "6 12 90"
                }
            },
            "Step 4": {
                "Step": "9 * 10 = 90 (left: 6 12 90) -> 6 + 12 = 18 (left: 18 90)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 12"
                }
            },
            "Step 5": {
                "Step": "6 + 9 = 15 (left: 10 12 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "18 90"
                }
            },
            "Step 6": {
                "Step": "9 * 10 = 90 (left: 6 12 90) -> 6 + 12 = 18 (left: 18 90) -> 18 + 90 = 108 (left: 108)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "10 11.33 12"
                }
            },
            "Step 7": {
                "Step": "6 / 9 = 0.67 (left: 0.67 9 10 12) -> 12 - 0.67 = 11.33 (left: 10 11.33 12) -> 12",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "12"
                }
            },
            "Step 8": {
                "Step": "6 / 9 = 0.67 (left: 0.67 9 10 12) -> 12 - 0.67 = 11.33 (left: 10 11.33 12) -> 12 -> 12 + 8 = 20 (left: 20)",
                "Pruning": "NA"
            }
        },
        "Input": "6 9 10 12",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "1056": {
        "puzzle": "6 9 9 12",
        "Agent 0": {
            "Step 0": {
                "Step": "9 + 9 = 18 (left: 6 18 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 12"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 6 3 12)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 12"
                }
            },
            "Step 2": {
                "Step": "9 - 6 = 3 (left: 3 9 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 12 27"
                }
            },
            "Step 3": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 * 9 = 108 (left: 108 27)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "6 9 12"
                }
            },
            "Step 4": {
                "Step": "9 / 3 = 3 (left: 6 9 12) -> 6 * 9 = 54 (left: 54 12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "6 9 12"
                }
            },
            "Step 5": {
                "Step": "9 / 3 = 3 (left: 6 9 12) -> 9 - 6 = 3 (left: 3 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "6 9 12"
                }
            },
            "Step 6": {
                "Step": "9 / 3 = 3 (left: 6 9 12) -> 9 - 6 = 3 (left: 3 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "3 27"
                }
            },
            "Step 7": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 - 9 = 3 (left: 3 27) -> 3 * 3 = 9 (left: 9 27)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "18 108"
                }
            },
            "Step 8": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 27 - 9 = 18 (left: 9 12 18) -> 9 * 12 = 108 (left: 18 108) -> 108 / 18 = 6 (left: 6)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: 3 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 12"
                }
            },
            "Step 1": {
                "Step": "9 - 6 = 3 (left: 3 9 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 12"
                }
            },
            "Step 2": {
                "Step": "9 - 6 = 3 (left: 6 3 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 12"
                }
            },
            "Step 3": {
                "Step": "9 / 3 = 3 (left: 6 9 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 12 27"
                }
            },
            "Step 4": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 27 - 9 = 18 (left: 9 12 18)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 12"
                }
            },
            "Step 5": {
                "Step": "9 / 3 = 3 (left: 6 9 12)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "6 9 12"
                }
            },
            "Step 6": {
                "Step": "9 / 3 = 3 (left: 6 9 12) -> 6 + 9 = 15 (left: 15 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "9 12 18"
                }
            },
            "Step 7": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 27 - 9 = 18 (left: 9 12 18) -> 9 * 12 = 108 (left: 18 108)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "9 27"
                }
            },
            "Step 8": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 - 9 = 3 (left: 3 27) -> 3 * 3 = 9 (left: 9 27) -> 6 / ",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 * 3 = 27 (left: 9 12 27)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 12"
                }
            },
            "Step 1": {
                "Step": "6 * 9 = 54 (left: 9 12 54)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 12 27"
                }
            },
            "Step 2": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 9 * 12 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 12 27"
                }
            },
            "Step 3": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 * 9 = 108 (left: 108 27)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 12 27"
                }
            },
            "Step 4": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 - 9 = 3 (left: 3 12 27)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 12 27"
                }
            },
            "Step 5": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 - 9 = 3 (left: 3 27)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "3 27"
                }
            },
            "Step 6": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 - 9 = 3 (left: 3 27) -> 27 - 3 = 24 (left: 24 27)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "3 27"
                }
            },
            "Step 7": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 - 9 = 3 (left: 3 27) -> 27 / 3 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "18 108"
                }
            },
            "Step 8": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 27 - 9 = 18 (left: 9 12 18) -> 9 * 12 = 108 (left: 18 108) -> 18 + 108 = 126 (left: 126)",
                "Pruning": "NA"
            }
        },
        "Input": "6 9 9 12",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            }
        ]
    },
    "1057": {
        "puzzle": "2 3 6 12",
        "Agent 0": {
            "Step 0": {
                "Step": "3 * 2 = 6 (left: 6 6 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> Possible",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 12 + 6 = 18 (left: 6 18)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 - 6 = 0 (left: 0 12)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "36 12"
                }
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 * 12 = 432 (left: 432)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 6 12"
                }
            },
            "Step 5": {
                "Step": "12 - 6 = 6 (left: 2 6 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "0 12"
                }
            },
            "Step 6": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 - 6 = 0 (left: 0 12) -> 12 * 0 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "6 18"
                }
            },
            "Step 7": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 12 + 6 = 18 (left: 6 18) -> 18 / 6 = 3 (left: 3 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "432"
                }
            },
            "Step 8": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 * 12 = 432 (left: 432) -> 4 * 3 = 12 (left: 12 2)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 * 2 = 6 (left: 6 6 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 6 12"
                }
            },
            "Step 4": {
                "Step": "12 - 6 = 6 (left: 2 6 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "12 12"
                }
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 - 12 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3 6 12"
                }
            },
            "Step 6": {
                "Step": "12 / 2 = 6 (left: 3 6 12) -> 12 - 6 = 6 (left: 3 6 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "36 12"
                }
            },
            "Step 7": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 / 12 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "432"
                }
            },
            "Step 8": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 * 12 = 432 (left: 432) -> 4 + 3 = 7 (left: 7 2)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 2 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 6 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 6 6 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 12 - 6 = 6 (left: 6 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 6 12"
                }
            },
            "Step 4": {
                "Step": "12 / 2 = 6 (left: 3 6 12)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 6": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 12 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "36 12"
                }
            },
            "Step 7": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 * 12 = 432 (left: 432)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "3 18"
                }
            },
            "Step 8": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 12 + 6 = 18 (left: 6 18) -> 18 / 6 = 3 (left: 3 18) -> 3 * 18 = 54 (left: 54)",
                "Pruning": "NA"
            }
        },
        "Input": "2 3 6 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            }
        ]
    },
    "1058": {
        "puzzle": "2 4 4 5",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 4 4 5)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 4 5"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 5 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 4 5"
                }
            },
            "Step 2": {
                "Step": "5 - 4 = 1 (left: 1 4 5)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 4 5"
                }
            },
            "Step 3": {
                "Step": "5 - 2 = 3 (left: 3 4 ",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 4 5"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 4 5 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1 4 4"
                }
            },
            "Step 5": {
                "Step": "5 - 4 = 1 (left: 1 4 4) -> 6 / 3 = 2 (left: 2",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1 4 "
                }
            },
            "Step 6": {
                "Step": "5 - 4 = 1 (left: 1 4  -> 1 + 4 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "4 30"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30) -> 30 - 4 = 26 (left: 26)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "26"
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30) -> 30 - 4 = 26 (left: 26) -> There are no possible next steps with the input 26.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 - 4 = 1 (left: 2 4 1)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 4 5"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 5 6)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 4 5"
                }
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 4 5 6)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 4 5"
                }
            },
            "Step 3": {
                "Step": "4 / 2 = 2 (left: 2 4 5)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 4 5"
                }
            },
            "Step 4": {
                "Step": "5 - 4 = 1 (left: 1 4 4)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 4 5"
                }
            },
            "Step 5": {
                "Step": "2 * 4 = 8 (left: 4 5 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1 4 "
                }
            },
            "Step 6": {
                "Step": "5 - 4 = 1 (left: 1 4  -> 4 / 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "4 30"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30) -> 4 + 30 = 34 (left: 34)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "34"
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30) -> 4 + 30 = 34 (left: 34) -> 34 + 2 = 36 (left: 2)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 4 5 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 5 6"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 4 5"
                }
            },
            "Step 2": {
                "Step": "5 - 4 = 1 (left: 2 4 1)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 4 5"
                }
            },
            "Step 3": {
                "Step": "5 - 4 = 1 (left: 1 4 ",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1 4 "
                }
            },
            "Step 4": {
                "Step": "5 - 4 = 1 (left: 1 4  -> 4 / 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 4 5"
                }
            },
            "Step 5": {
                "Step": "4 / 2 = 2 (left: 2 4 5)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1 4 "
                }
            },
            "Step 6": {
                "Step": "5 - 4 = 1 (left: 1 4  -> 4 / 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "4 30"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30) -> 30 / 4 = 7.5 (left: 7.5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "34"
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30) -> 4 + 30 = 34 (left: 34) -> There are no possible next steps with the input 34.",
                "Pruning": null
            }
        },
        "Input": "2 4 4 5",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            }
        ]
    },
    "1059": {
        "puzzle": "2 4 4 10",
        "Agent 0": {
            "Step 0": {
                "Step": "4 / 2 = 2 (left: 2 4 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 4 10"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 6 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 + 6 = 10 (left: 10 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "4 4 8"
                }
            },
            "Step 3": {
                "Step": "10 - 2 = 8 (left: 4 4 8) -> Input: 3 5 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "4 8 10"
                }
            },
            "Step 4": {
                "Step": "4 * 2 = 8 (left: 4 8 10) -> 8 / 4 = 2 (left: 2 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 + 6 = 10 (left: 10 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 / 4 = 2.5 (left: 2.5 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "2 10"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 6 - 4 = 2 (left: 2 10) -> 10 - 2 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "8"
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 6 - 4 = 2 (left: 2 10) -> 10 - 2 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 / 2 = 2 (left: 2 4 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 4 10"
                }
            },
            "Step 1": {
                "Step": "4 * 2 = 8 (left: 4 8 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "4 8 10"
                }
            },
            "Step 2": {
                "Step": "4 * 2 = 8 (left: 4 8 10) -> 8 - 4 = 4 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 4 10"
                }
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 2 4 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "8 4 10"
                }
            },
            "Step 4": {
                "Step": "2 * 4 = 8 (left: 8 4 10) -> 10 / 4 = 2.5 (left: 2.5 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 4 10"
                }
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 4 6 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 6 - 4 = 2 (left: 2 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "2 10"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 6 - 4 = 2 (left: 2 10) -> 10 / 2 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "8"
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 6 - 4 = 2 (left: 2 10) -> 10 - 2 = 8 (left: 8) -> 8 - 8 = 0 (left: 0)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 / 2 = 2 (left: 2 4 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 4 10"
                }
            },
            "Step 1": {
                "Step": "10 - 2 = 8 (left: 4 4 8)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 4 10"
                }
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 2 4 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 4 10"
                }
            },
            "Step 3": {
                "Step": "2 * 4 = 8 (left: 8 4 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 / 4 = 2.5 (left: 6 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 4 10"
                }
            },
            "Step 5": {
                "Step": "4 * 2 = 8 (left: 4 8 10)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "10 10"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 + 6 = 10 (left: 10 10) -> 10 * 10 = 100 (left: 100)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "8"
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 6 - 4 = 2 (left: 2 10) -> 10 - 2 = 8 (left: 8) -> No possible next steps with just one number.",
                "Pruning": null
            }
        },
        "Input": "2 4 4 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            }
        ]
    },
    "1060": {
        "puzzle": "3 3 3 4",
        "Agent 0": {
            "Step 0": {
                "Step": "4 / 3 = 1.33 (left: 1.33 3 3)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 3 4"
                }
            },
            "Step 1": {
                "Step": "3 / 3 = 1 (left: 1 3 4)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "3 4 9"
                }
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 - 3 = 6 (left: 4 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "1 3 4"
                }
            },
            "Step 3": {
                "Step": "3 / 3 = 1 (left: 1 3 4) -> 1 + 3 = 4 (left: 4 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "3 4 9"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 - 4 = 5 (left:",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 3 4"
                }
            },
            "Step 5": {
                "Step": "3 * 4 = 12 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "3 4 9"
                }
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 4 * 3 = 12 (left: 12 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "4 6"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 - 3 = 6 (left: 4 6) -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "Input: 5 10 15 20 "
                }
            },
            "Step 8": {
                "Step": "4 / 3 = 1.33 (left: 1.33 3 3) -> 1.33 + 3 = 4.33 (left: -> Input: 5 10 15 20  -> 15 + 10 = 25 (left: 5 25 20)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 / 3 = 1 (left: 1 3 4)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 3 4"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 3 4 9)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1.33 3 3"
                }
            },
            "Step 2": {
                "Step": "4 / 3 = 1.33 (left: 1.33 3 3) -> 1.33 + 3 = 4.33 (left:",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "4 6"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 - 3 = 6 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "4 6"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 - 3 = 6 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "3 4 9"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 4 + 9 = 13 (left: 3 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "4 6"
                }
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 - 3 = 6 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1.33 + 3 = 4.33 (left:"
                }
            },
            "Step 7": {
                "Step": "4 / 3 = 1.33 (left: 1.33 3 3) -> 1.33 + 3 = 4.33 (left: -> 3.33 + 1 = 4.33 (left: 4.33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "2"
                }
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 - 3 = 6 (left: 4 6) -> 6 - 4 = 2 (left: 2) -> There are no possible next steps as there is only one number provided.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 3 6 4)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 3 4"
                }
            },
            "Step 1": {
                "Step": "3 / 3 = 1 (left: 1 3 4)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "3 4 9"
                }
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 3 + 4 = 7 (left: 7 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "4 6"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 - 3 = 6 (left: 4 6) -> 4 + 6 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 4"
                }
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 3 6 4) -> 6 - 3 = 3 (left: 3 4)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "9 - 4 = 5 (left:"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 - 4 = 5 (left: -> 9 + 4 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "3 4 9"
                }
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 3 + 4 = 7 (left: 7 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1.33 + 3 = 4.33 (left:"
                }
            },
            "Step 7": {
                "Step": "4 / 3 = 1.33 (left: 1.33 3 3) -> 1.33 + 3 = 4.33 (left: -> Input: 5 10 15 20 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "13"
                }
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 - 4 = 5 (left: -> 9 + 4 = 13 (left: 13) -> 13 * 2 = 26 (left: 26)",
                "Pruning": "NA"
            }
        },
        "Input": "3 3 3 4",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            }
        ]
    },
    "1061": {
        "puzzle": "2 2 2 7",
        "Agent 0": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 2 2 5)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 7"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 2 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 2 5"
                }
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 5 - 2 = 3 (left: 2 3)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "2 2 14"
                }
            },
            "Step 3": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 2 * 2 = 4 (left: 4 14)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 7"
                }
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 2 4 5)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "4 2 7"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 4 2 7) -> 4 + 2 = 6 (left: 6 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "4 2 7"
                }
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 4 2 7) -> 7 - 2 = 5 (left: 4 5)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 14"
                }
            },
            "Step 7": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 2 / 2 = 1 (left: 1 14) -> 14 - 1 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "0.8"
                }
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 4 2 7) -> 7 - 2 = 5 (left: 4 5) -> 4 / 5 = 0.8 (left: 0.8) -> There are no possible next steps with 0.8 as the input.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 2 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 7"
                }
            },
            "Step 1": {
                "Step": "2 * 7 = 14 (left: 2 2 14)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "2 2 14"
                }
            },
            "Step 2": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 2 / 2 = 1 (left: 1 14)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "2 2 14"
                }
            },
            "Step 3": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 2 + 2 = 4 (left: 4 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "2 2 14"
                }
            },
            "Step 4": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 14 - 2 = 12 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 7"
                }
            },
            "Step 5": {
                "Step": "7 / 2 = 3 (left: 2 3 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "2 2 5"
                }
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 5 / 2 = 2.5 (left: 2.5 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "4 5"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 4 2 7) -> 7 - 2 = 5 (left: 4 5) -> 4 / 5 = 0.8 (left: 0.8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "13"
                }
            },
            "Step 8": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 2 / 2 = 1 (left: 1 14) -> 14 - 1 = 13 (left: 13) -> 13 + 2 = 15 (left: 15)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 2 2 5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 7"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 2 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 2 5"
                }
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 * 2 = 4 (left: 4 5)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 7"
                }
            },
            "Step 3": {
                "Step": "2 / 2 = 1 (left: 1 2 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "2 3"
                }
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 5 - 2 = 3 (left: 2 3) -> 2 * 3 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "2 2 14"
                }
            },
            "Step 5": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 2 + 2 = 4 (left: 4 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "2 2 14"
                }
            },
            "Step 6": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> Input: 4 4 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 7": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 14 - 2 = 12 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "6"
                }
            },
            "Step 8": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 14 - 2 = 12 (left: 2 12) -> 12 / 2 = 6 (left: 6) -> There are no more possible next steps with the input of 6.",
                "Pruning": null
            }
        },
        "Input": "2 2 2 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            }
        ]
    },
    "1062": {
        "puzzle": "4 9 10 11",
        "Agent 0": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 10 11 36)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 10 11"
                }
            },
            "Step 1": {
                "Step": "10 + 11 = 21 (left: 4 9 21)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 10 11"
                }
            },
            "Step 2": {
                "Step": "10 + 4 = 14 (left: 9 11 14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 10 11"
                }
            },
            "Step 3": {
                "Step": "10 + 11 = 21 (left: 4 9 21)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 10 11"
                }
            },
            "Step 4": {
                "Step": "11 - 10 = 1 (left: ",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 10 11"
                }
            },
            "Step 5": {
                "Step": "9 * 10 = 90 (left: 4 11 90)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "4 9 21"
                }
            },
            "Step 6": {
                "Step": "10 + 11 = 21 (left: 4 9 21) -> Possible",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "110 36"
                }
            },
            "Step 7": {
                "Step": "4 * 9 = 36 (left: 10 11 36) -> 11 * 10 = 110 (left: 110 36) -> 110 / 36 = 3.0555555555555554 (left: 3.0555555555555554)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "630"
                }
            },
            "Step 8": {
                "Step": "9 * 10 = 90 (left: 4 11 90) -> 11 - 4 = 7 (left: 7 90) -> 7 * 90 = 630 (left: 630) -> 6 + 3 + 0 = 9 (left: 9 30)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 / 4 = 2.25 (left: 2.25 10 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 10 11"
                }
            },
            "Step 1": {
                "Step": "11 - 4 = 7 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 10 11"
                }
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 5 10 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "10 11 36"
                }
            },
            "Step 3": {
                "Step": "4 * 9 = 36 (left: 10 11 36) -> 11 * 10 = 110 (left: 110 36)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 10 11"
                }
            },
            "Step 4": {
                "Step": "9 + 10 = 19 (left: 4 11 19)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 10 11"
                }
            },
            "Step 5": {
                "Step": "9 * 10 = 90 (left: 4 11 90)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "4 11 90"
                }
            },
            "Step 6": {
                "Step": "9 * 10 = 90 (left: 4 11 90) -> 11 - 4 = 7 (left: 7 90)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "7 90"
                }
            },
            "Step 7": {
                "Step": "9 * 10 = 90 (left: 4 11 90) -> 11 - 4 = 7 (left: 7 90) -> 90 - 7 = 83 (left: 83)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "630"
                }
            },
            "Step 8": {
                "Step": "9 * 10 = 90 (left: 4 11 90) -> 11 - 4 = 7 (left: 7 90) -> 7 * 90 = 630 (left: 630) -> 6 - 3 = 3 (left: 3 6 30)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 9 = 13 (left: 10 11 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 10 11"
                }
            },
            "Step 1": {
                "Step": "9 * 10 = 90 (left: 4 11 90)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 10 11"
                }
            },
            "Step 2": {
                "Step": "10 + 4 = 14 (left: 9 11 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 10 11"
                }
            },
            "Step 3": {
                "Step": "4 * 9 = 36 (left: 10 11 36)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 10 11"
                }
            },
            "Step 4": {
                "Step": "9 + 10 = 19 (left: 4 11 19)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 10 11"
                }
            },
            "Step 5": {
                "Step": "10 + 11 = 21 (left: 4 9 21)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": ""
                }
            },
            "Step 6": {
                "Step": "11 - 10 = 1 (left:  -> There is no input provided to generate possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "7 90"
                }
            },
            "Step 7": {
                "Step": "9 * 10 = 90 (left: 4 11 90) -> 11 - 4 = 7 (left: 7 90) -> 7 * 90 = 630 (left: 630)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "83"
                }
            },
            "Step 8": {
                "Step": "9 * 10 = 90 (left: 4 11 90) -> 11 - 4 = 7 (left: 7 90) -> 90 - 7 = 83 (left: 83) -> 8 + 3 = 11",
                "Pruning": null
            }
        },
        "Input": "4 9 10 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1063": {
        "puzzle": "7 9 10 11",
        "Agent 0": {
            "Step 0": {
                "Step": "7 * 9 = 63 (left: 10 11 63)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 10 11"
                }
            },
            "Step 1": {
                "Step": "7 * 9 = 63 (left: 10 11 63)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 10 11"
                }
            },
            "Step 2": {
                "Step": "10 * 11 = 110 (left: 7 9 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 10 11"
                }
            },
            "Step 3": {
                "Step": "9 + 10 = 19 (left: 7 11 19)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 10 11"
                }
            },
            "Step 4": {
                "Step": "9 * 10 = 90 (left: 7 11 90)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "7 11 19"
                }
            },
            "Step 5": {
                "Step": "9 + 10 = 19 (left: 7 11 19) -> 7 + 11 = 18 (left: 18 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "10 11 63"
                }
            },
            "Step 6": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 * 11 = 110 (left: 110 63)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "10 52"
                }
            },
            "Step 7": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 63 - 11 = 52 (left: 10 52) -> 10 + 52 = 62 (left: 62)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "63"
                }
            },
            "Step 8": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 11 - 10 = 1 (left: 1 63) -> 1 * 63 = 63 (left: 63) -> None. The input is only one number, so there are no possible operations to perform.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 * 11 = 110 (left: 7 9 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 10 11"
                }
            },
            "Step 1": {
                "Step": "9 * 10 = 90 (left: 7 11 90)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 10 11"
                }
            },
            "Step 2": {
                "Step": "7 * 9 = 63 (left: 10 11 63)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 10 11"
                }
            },
            "Step 3": {
                "Step": "10 * 11 = 110 (left: 7 9 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 10 11"
                }
            },
            "Step 4": {
                "Step": "9 + 10 = 19 (left: 7 11 19)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 10 11"
                }
            },
            "Step 5": {
                "Step": "7 * 9 = 63 (left: 10 11 63)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "10 11 63"
                }
            },
            "Step 6": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 63 - 11 = 52 (left: 10 52)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "1 63"
                }
            },
            "Step 7": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 11 - 10 = 1 (left: 1 63) -> 63 - 1 = 62 (left: 62)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "62"
                }
            },
            "Step 8": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 11 - 10 = 1 (left: 1 63) -> 63 - 1 = 62 (left: 62) -> 6 - 2 = 4 (left: 4)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 * 10 = 90 (left: 7 11 90)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 10 11"
                }
            },
            "Step 1": {
                "Step": "9 * 10 = 90 (left: 7 11 90)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 10 11"
                }
            },
            "Step 2": {
                "Step": "9 + 10 = 19 (left: 7 11 19)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 10 11"
                }
            },
            "Step 3": {
                "Step": "9 * 10 = 90 (left: 7 11 90)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "10 11 63"
                }
            },
            "Step 4": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 63 - 10 = 53 (left: 11 53)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "10 11 63"
                }
            },
            "Step 5": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 11 - 10 = 1 (left: 1 63)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "10 11 63"
                }
            },
            "Step 6": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 63 / 11 = 5.72727272727 (left: 10 5.727",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "1 63"
                }
            },
            "Step 7": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 11 - 10 = 1 (left: 1 63) -> 1 * 63 = 63 (left: 63)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "63"
                }
            },
            "Step 8": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 11 - 10 = 1 (left: 1 63) -> 1 * 63 = 63 (left: 63) -> 6 + 3 = 9",
                "Pruning": null
            }
        },
        "Input": "7 9 10 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            }
        ]
    },
    "1064": {
        "puzzle": "1 4 5 7",
        "Agent 0": {
            "Step 0": {
                "Step": "7 - 1 = 6 (left: 4 5 ",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 5 7"
                }
            },
            "Step 1": {
                "Step": "1 + 4 = 5 (left: 5 5 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 5 7"
                }
            },
            "Step 2": {
                "Step": "5 + 2 = 7 (left: 4 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 5 7"
                }
            },
            "Step 3": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> Input: 3 9 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 5 7"
                }
            },
            "Step 4": {
                "Step": "7 - 4 = 3 (left: 1 3)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 5 7"
                }
            },
            "Step 5": {
                "Step": "7 - 4 = 3 (left: 3 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1 3"
                }
            },
            "Step 6": {
                "Step": "7 - 4 = 3 (left: 1 3) -> 1 * 3 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "5 2"
                }
            },
            "Step 7": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 7 - 5 = 2 (left: 5 2) -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "2.5"
                }
            },
            "Step 8": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 7 - 5 = 2 (left: 5 2) -> 5 / 2 = 2.5 (left: 2.5) -> There are no possible next steps with the input of 2.5.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "1 + 4 = 5 (left: 5 5 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 5 7"
                }
            },
            "Step 1": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 5 7"
                }
            },
            "Step 2": {
                "Step": "7 - 5 = 2 (left: 1 4 2)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 5 "
                }
            },
            "Step 3": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 4 * 5 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 5 7"
                }
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 5 5 7)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 5 7"
                }
            },
            "Step 5": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 7 - 5 = 2 (left: 2 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 5 7"
                }
            },
            "Step 6": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 7 - 5 = 2 (left: 5 2)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "5 2"
                }
            },
            "Step 7": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 7 - 5 = 2 (left: 5 2) -> 5 - 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "2.5"
                }
            },
            "Step 8": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 7 - 5 = 2 (left: 5 2) -> 5 / 2 = 2.5 (left: 2.5) -> There are no possible next steps with the input 2.5 as it is a single number.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 1 = 5 (left: 5 5 7)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 5 "
                }
            },
            "Step 1": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 4 * 5 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 5 7"
                }
            },
            "Step 2": {
                "Step": "7 - 1 = 6 (left: 4 6)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "5 5 7"
                }
            },
            "Step 3": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 5 7"
                }
            },
            "Step 4": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 5 * 5 = 25 (left: 7 25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1 3"
                }
            },
            "Step 5": {
                "Step": "7 - 4 = 3 (left: 1 3) -> 3 / 1 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1 3"
                }
            },
            "Step 6": {
                "Step": "7 - 4 = 3 (left: 1 3) -> 1 * 3 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "5 2"
                }
            },
            "Step 7": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 7 - 5 = 2 (left: 5 2) -> 5 - 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "3"
                }
            },
            "Step 8": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 7 - 5 = 2 (left: 5 2) -> 5 - 2 = 3 (left: 3) -> 8 - 3 = 5 (left: 5)",
                "Pruning": "NA"
            }
        },
        "Input": "1 4 5 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            }
        ]
    },
    "1065": {
        "puzzle": "3 4 9 9",
        "Agent 0": {
            "Step 0": {
                "Step": "9 - 4 = 5 (left: 3 5 9)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 9 9"
                }
            },
            "Step 1": {
                "Step": "4 + 9 = 13 (left: 3 13 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 5 9"
                }
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 3 + 5 = 8 (left: 8 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 5 9"
                }
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 3 + 5 = 8 (left: 8 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 9 9"
                }
            },
            "Step 4": {
                "Step": "9 - 4 = 5 (left: 3 5 9)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "3 5 9"
                }
            },
            "Step 5": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 5 * 9 = 45 (left: 3 45)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "3 5 9"
                }
            },
            "Step 6": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 9 - 3 = 6 (left: 6 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "5 3"
                }
            },
            "Step 7": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 9 / 3 = 3 (left: 5 3) -> 5 / 3 = 1.67 (left: 1.67)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "2"
                }
            },
            "Step 8": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 9 / 3 = 3 (left: 5 3) -> 5 - 3 = 2 (left: 2) -> 2 * 2 = 4 (left: 4)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 4 9 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 9 9"
                }
            },
            "Step 1": {
                "Step": "9 - 3 = 6 (left: 4 6 9)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 9 9"
                }
            },
            "Step 2": {
                "Step": "9 + 4 = 13 (left: 3 9 ",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 3": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 4 * 6 = 24 (left: 9 24)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "7 9 9"
                }
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 7 9 9) -> 7 * 9 = 63 (left: 9 9 63)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 9 "
                }
            },
            "Step 5": {
                "Step": "9 + 4 = 13 (left: 3 9  -> 9 + 3 = 12 (left: 3 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 5 9"
                }
            },
            "Step 6": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 9 / 3 = 3 (left: 5 3)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "5 3"
                }
            },
            "Step 7": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 9 / 3 = 3 (left: 5 3) -> 5 / 3 = 1.67 (left: 1.67)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "2"
                }
            },
            "Step 8": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 9 / 3 = 3 (left: 5 3) -> 5 - 3 = 2 (left: 2) -> 2 - 2 = 0",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 9 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 5 9"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 3 + 5 = 8 (left: 8 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 9 9"
                }
            },
            "Step 2": {
                "Step": "9 - 3 = 6 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 9 "
                }
            },
            "Step 3": {
                "Step": "9 + 4 = 13 (left: 3 9  -> 9 - 3 = 6 (left: 6 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 4": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 * 4 = 24 (left: 9 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 9 9"
                }
            },
            "Step 5": {
                "Step": "3 + 4 = 7 (left: 7 9 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 5 9"
                }
            },
            "Step 6": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 9 - 5 = 4 (left: 3 4)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "5 3"
                }
            },
            "Step 7": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 9 / 3 = 3 (left: 5 3) -> 5 - 3 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "1.67"
                }
            },
            "Step 8": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 9 / 3 = 3 (left: 5 3) -> 5 / 3 = 1.67 (left: 1.67) -> 1.67 * 2 = 3.34",
                "Pruning": null
            }
        },
        "Input": "3 4 9 9",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1066": {
        "puzzle": "3 3 6 8",
        "Agent 0": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 6 6 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 6 8"
                }
            },
            "Step 1": {
                "Step": "3 * 6 = 18 (left: 18 6 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "18 6 8"
                }
            },
            "Step 2": {
                "Step": "3 * 6 = 18 (left: 18 6 8) -> 6 * 8 = 48 (left: 18 48)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "18 6 8"
                }
            },
            "Step 3": {
                "Step": "3 * 6 = 18 (left: 18 6 8) -> 18 / 6 = 3 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 6 8"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 * 6 = 54 (left: 8 54)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "3 * 6 = 18 (left: 18 6 8) -> 18 / 6 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 6": {
                "Step": "3 * 6 = 18 (left: 18 6 8) -> 18 / 6 = 3 (left: 3 8) -> 8 / 3 = 2.6666666666666665 (left: 2.6666666666666665)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "3 * 6 = 18 (left: 18 6 8) -> 18 / 6 = 3 (left: 3 8) -> 8 / 3 = 2.6666666666666665 (left: 2.6666666666666665)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "3 * 6 = 18 (left: 18 6 8) -> 18 / 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (3 * 6) / (8 / 3) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 - 6 = 2 (left: 3 6 2)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 6 2"
                }
            },
            "Step 1": {
                "Step": "8 - 6 = 2 (left: 3 6 2) -> 3 * 6 = 18 (left: 18 2)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 6 8"
                }
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "18 6 8"
                }
            },
            "Step 3": {
                "Step": "3 * 6 = 18 (left: 18 6 8) -> 18 / 6 = 3 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 6 8"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 6 * 8 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "3 * 6 = 18 (left: 18 6 8) -> 18 / 6 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 6": {
                "Step": "3 * 6 = 18 (left: 18 6 8) -> 18 / 6 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "3 * 6 = 18 (left: 18 6 8) -> 18 / 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "3 * 6 = 18 (left: 18 6 8) -> 18 / 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (3 * 6) / (8 / 3) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 6 8)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 6 8"
                }
            },
            "Step 1": {
                "Step": "8 - 6 = 2 (left: 3 6 2)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 6 8"
                }
            },
            "Step 2": {
                "Step": "6 + 3 = 9 (left: 3 9 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 6 8"
                }
            },
            "Step 3": {
                "Step": "8 - 3 = 5 (left: 3 6 5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 6 8"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 8 - 9 = -1 (left: 6 -1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "3 * 6 = 18 (left: 18 6 8) -> 18 / 6 = 3 (left: 3 8) -> Input: 6 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 6": {
                "Step": "3 * 6 = 18 (left: 18 6 8) -> 18 / 6 = 3 (left: 3 8) -> 8 / 3 = 2.67 (left: 2.67)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "3 * 6 = 18 (left: 18 6 8) -> 18 / 6 = 3 (left: 3 8) -> 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "3 * 6 = 18 (left: 18 6 8) -> 18 / 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (3 * 6) + (8 / 3) = 24",
                "Pruning": "NA"
            }
        },
        "Input": "3 3 6 8",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "1067": {
        "puzzle": "4 4 7 8",
        "Agent 0": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 7 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 8"
                }
            },
            "Step 1": {
                "Step": "7 + 4 = 11 (left: 4 8 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 8"
                }
            },
            "Step 2": {
                "Step": "7 + 4 = 11 (left: 4 8 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 8"
                }
            },
            "Step 3": {
                "Step": "7 + 4 = 11 (left: 4 8 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 8"
                }
            },
            "Step 4": {
                "Step": "7 - 4 = 3 (left: 3 4 ",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 8"
                }
            },
            "Step 5": {
                "Step": "8 - 4 = 4 (left: 4 4 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "7 8 8"
                }
            },
            "Step 6": {
                "Step": "4 + 4 = 8 (left: 7 8 8) -> 7 / 8 = 0.875 (left: 0.875 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "0 8"
                }
            },
            "Step 7": {
                "Step": "8 - 4 = 4 (left: 4 4 8) -> 4 - 4 = 0 (left: 0 8) -> 5 - 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "Input: 3 6 9 12"
                }
            },
            "Step 8": {
                "Step": "7 - 4 = 3 (left: 3 4  -> Input: 5 9 -> Input: 3 6 9 12 -> 6 - 3 = 3 (left: 3 9 12)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 7 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "7 8 8"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 7 8 8) -> Input: 1 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "7 8 8"
                }
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 7 8 8) -> 8 / 7 = 1.14 (left: 1.14 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 8"
                }
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 7 8 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 8"
                }
            },
            "Step 4": {
                "Step": "4 - 4 = 0 (left: 0 7 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 8"
                }
            },
            "Step 5": {
                "Step": "4 * 4 = 16 (left: 7 8 16)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "4 4 8"
                }
            },
            "Step 6": {
                "Step": "8 - 4 = 4 (left: 4 4 8) -> 4 - 4 = 0 (left: 0 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "0.875 8"
                }
            },
            "Step 7": {
                "Step": "4 + 4 = 8 (left: 7 8 8) -> 7 / 8 = 0.875 (left: 0.875 8) -> 0.875 + 8 = 8.875 (left: 8.875)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "8.875"
                }
            },
            "Step 8": {
                "Step": "4 + 4 = 8 (left: 7 8 8) -> 7 / 8 = 0.875 (left: 0.875 8) -> 0.875 + 8 = 8.875 (left: 8.875) -> 8 + 8 = 16.875",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 4 = 8 (left: 7 8 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 8"
                }
            },
            "Step 1": {
                "Step": "8 / 4 = 2 (left: 2 4 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 8"
                }
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 7 8 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 8"
                }
            },
            "Step 3": {
                "Step": "4 / 4 = 1 (left: 1 7 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 8"
                }
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 7 8 8)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 8"
                }
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 8 7 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "3 4 "
                }
            },
            "Step 6": {
                "Step": "7 - 4 = 3 (left: 3 4  -> Input: 5 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "Input: 5 9"
                }
            },
            "Step 7": {
                "Step": "7 - 4 = 3 (left: 3 4  -> Input: 5 9 -> Input: 3 6 9 12",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "5 - 3"
                }
            },
            "Step 8": {
                "Step": "8 - 4 = 4 (left: 4 4 8) -> 4 - 4 = 0 (left: 0 8) -> 5 - 3 -> 5 - 3 = 2",
                "Pruning": null
            }
        },
        "Input": "4 4 7 8",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1068": {
        "puzzle": "3 5 11 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 5 = 7 (left: 3 7 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 6 12"
                }
            },
            "Step 1": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 11 12"
                }
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 15 11 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 11 12"
                }
            },
            "Step 3": {
                "Step": "12 - 3 = 9 (left: 5 11 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "5 11 9"
                }
            },
            "Step 4": {
                "Step": "12 - 3 = 9 (left: 5 11 9) -> 9 + 5 = 14 (left: 11 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 11 12"
                }
            },
            "Step 5": {
                "Step": "5 + 11 = 16 (left: 3 16 12)"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "11 - 5 = 6 (left: 3 6 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 6 12"
                }
            },
            "Step 1": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 6 12"
                }
            },
            "Step 2": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 6 / 3 = 2 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 3": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 6 / 3 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "8 11 12"
                }
            },
            "Step 4": {
                "Step": "3 + 5 = 8 (left: 8 11 12) -> 12 / 8 = 1.5 (left: 1.5 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 6 / 3 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (11 - 5) / (3 / 12) = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 * 5 = 15 (left: 15 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 11 12"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 15 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 11 12"
                }
            },
            "Step 2": {
                "Step": "3 + 5 = 8 (left: 8 11 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 11 12"
                }
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 11 15 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 4": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 6 / 3 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 6 / 3 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (11 - 5) / (3 / 2) = 24"
            }
        },
        "Input": "3 5 11 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": -1
            }
        ]
    },
    "1069": {
        "puzzle": "4 4 6 10",
        "Agent 0": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 6 10)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 10"
                }
            },
            "Step 1": {
                "Step": "4 / 4 = 1 (left: 1 4 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 4 10"
                }
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 4 / 4 = 1 (left: 1 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "4 6"
                }
            },
            "Step 3": {
                "Step": "4 / 4 = 1 (left: 1 4 6) -> 4 * 1 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 4 6"
                }
            },
            "Step 4": {
                "Step": "4 / 4 = 1 (left: 1 4 6) -> 1 / 4 = 0.25 (left: 0.25 6)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "4 6"
                }
            },
            "Step 5": {
                "Step": "4 / 4 = 1 (left: 1 4 6) -> 4 * 1 = 4 (left: 4 6) -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "4 6"
                }
            },
            "Step 6": {
                "Step": "4 / 4 = 1 (left: 1 4 6) -> 4 * 1 = 4 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 7": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 4 / 4 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "4 / 4 = 1 (left: 1 4 6) -> 4 * 1 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (4 * 4) * 6 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 4 = 10 (left: 4 10 10)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 4 10"
                }
            },
            "Step 1": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 4 / 4 = 1 (left: 1 10)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 10"
                }
            },
            "Step 2": {
                "Step": "10 / 4 = 2.5 (left: 4 ",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 10"
                }
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 4 / 4 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "4 6"
                }
            },
            "Step 4": {
                "Step": "4 / 4 = 1 (left: 1 4 6) -> 4 * 1 = 4 (left: 4 6) -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 10"
                }
            },
            "Step 5": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 4 / 4 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 4 10"
                }
            },
            "Step 6": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 4 / 4 = 1 (left: 1 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "4 / 4 = 1 (left: 1 4 6) -> 4 * 1 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (4 * 6) = 24",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "4 / 4 = 1 (left: 1 4 6) -> 4 * 1 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (4 * (4 / 4)) * 6 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 6 = 4 (left: 4 4 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 10"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 6 8 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 4 6"
                }
            },
            "Step 2": {
                "Step": "4 / 4 = 1 (left: 1 4 6) -> 4 * 1 = 4 (left: 4 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 4 / 4 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 4 6"
                }
            },
            "Step 4": {
                "Step": "4 / 4 = 1 (left: 1 4 6) -> 6 / 4 = 1.5 (left: 1 1.5)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "4 / 4 = 1 (left: 1 4 6) -> 4 * 1 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (4 * (4 / 4)) = 24",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "0.25 6"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 10 10"
                }
            },
            "Step 6": {
                "Step": "6 + 4 = 10 (left: 4 10 10) -> 4 * 10 = 40 (left: 10 10 40)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 10"
                }
            },
            "Step 7": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 4 / 4 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "4 / 4 = 1 (left: 1 4 6) -> 4 * 1 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (4 * 4) * 6 = 24",
                "Pruning": "NA"
            }
        },
        "Input": "4 4 6 10",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "1070": {
        "puzzle": "4 6 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 9 10 13)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 6 9 13"
                }
            },
            "Step 1": {
                "Step": "9 + 13 = 22 (left: 4 6 ",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 4"
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> Input: 3 12 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 6 9 13"
                }
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 6 9 13"
                }
            },
            "Step 4": {
                "Step": "4 + 6 = 10 (left: 9 10 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "4 6 "
                }
            },
            "Step 5": {
                "Step": "9 + 13 = 22 (left: 4 6  -> 4 + 6 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 4"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 4 + 4 = 8 (left: 6 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "Possible"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> Possible -> It seems like the input is missing. Could you please provide the input for me to generate the possible next steps?",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "It seems like the input is missing. Could you please provide the input for me to generate the possible next steps?"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> Possible -> It seems like the input is missing. Could you please provide the input for me to generate the possible next steps? -> Without the input values, I am unable to generate the possible next steps. Please provide the input values so I can assist you further.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 6 = 24 (left: 9 13 24)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 6 9 13"
                }
            },
            "Step 1": {
                "Step": "6 / 4 = 1.5 (left: 1.5 9 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 4"
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "3 9 13"
                }
            },
            "Step 3": {
                "Step": "9 - 6 = 3 (left: 3 9 13) -> 13 / 3 = 4 (left:",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 6 9 13"
                }
            },
            "Step 4": {
                "Step": "6 / 4 = 1.5 (left: 1.5 9 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "4 6 "
                }
            },
            "Step 5": {
                "Step": "9 + 13 = 22 (left: 4 6  -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "4 6 "
                }
            },
            "Step 6": {
                "Step": "9 + 13 = 22 (left: 4 6  -> 4 / 6 = 0.6666666666666666 (left: 0.6666666666666666)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2 4"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2 4) -> 12 - 3 = 9 (left",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "It seems like the input is missing. Could you please provide the input for me to generate the possible next steps?"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> Possible -> It seems like the input is missing. Could you please provide the input for me to generate the possible next steps? -> Without the input, I am unable to generate the possible next steps. Please provide the input for me to proceed.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 4 6 4)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 6 9 13"
                }
            },
            "Step 1": {
                "Step": "4 + 6 = 10 (left: 9 10 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 6 9 13"
                }
            },
            "Step 2": {
                "Step": "9 - 6 = 3 (left: 3 9 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "4 6 "
                }
            },
            "Step 3": {
                "Step": "9 + 13 = 22 (left: 4 6  -> 4 + 6 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 6 9 13"
                }
            },
            "Step 4": {
                "Step": "9 - 6 = 3 (left: 3 9 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 6 9 13"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 4"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> Possible",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "6 8"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 4 + 4 = 8 (left: 6 8) -> 8 - 6 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "It seems like the input is missing. Could you please provide the input for me to generate the possible next steps?"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> Possible -> It seems like the input is missing. Could you please provide the input for me to generate the possible next steps? -> Without the input, I am unable to generate possible next steps. Please provide the input numbers so I can assist you further.",
                "Pruning": null
            }
        },
        "Input": "4 6 9 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1071": {
        "puzzle": "3 5 6 11",
        "Agent 0": {
            "Step 0": {
                "Step": "11 - 5 = 6 (left: 3 6 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 6 11"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 6 11 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 6 11"
                }
            },
            "Step 2": {
                "Step": "3 + 5 = 8 (left: 6 8 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 6 11"
                }
            },
            "Step 3": {
                "Step": "11 - 6 = 5 (left: 3 5 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "3 6 11"
                }
            },
            "Step 4": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left:",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 6 11"
                }
            },
            "Step 5": {
                "Step": "3 * 5 = 15 (left: 6 11 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "3 8"
                }
            },
            "Step 6": {
                "Step": "3 + 5 = 8 (left: 6 8 11) -> 11 - 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "3 + 5 = 8 (left: 6 8 11) -> 11 - 8 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "3 + 5 = 8 (left: 6 8 11) -> 11 - 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (3 + 5) * (6 + 11) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 * 6 = 30 (left: 3 30)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 6 11"
                }
            },
            "Step 1": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 6 - 3 = 3 (left: 3 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 6 11"
                }
            },
            "Step 2": {
                "Step": "6 + 5 = 11 (left: 3 11 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 6 11"
                }
            },
            "Step 3": {
                "Step": "6 - 3 = 3 (left: 3 5 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "6 8 11"
                }
            },
            "Step 4": {
                "Step": "3 + 5 = 8 (left: 6 8 11) -> 6 * 8 = 48 (left: 48 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "6 8 11"
                }
            },
            "Step 5": {
                "Step": "3 + 5 = 8 (left: 6 8 11) -> 11 - 8 = 3 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "3 8"
                }
            },
            "Step 6": {
                "Step": "3 + 5 = 8 (left: 6 8 11) -> 11 - 8 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "3 + 5 = 8 (left: 6 8 11) -> 11 - 8 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "3 + 5 = 8 (left: 6 8 11) -> 11 - 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (3 * (5 + 6)) - 11 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 3 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 6 11"
                }
            },
            "Step 1": {
                "Step": "6 - 3 = 3 (left: 3 5 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 6 11"
                }
            },
            "Step 2": {
                "Step": "11 - 5 = 6 (left: 3 6 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 6 11"
                }
            },
            "Step 3": {
                "Step": "6 - 3 = 3 (left: 3 5 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 6 11"
                }
            },
            "Step 4": {
                "Step": "3 + 5 = 8 (left: 6 8 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 6 11"
                }
            },
            "Step 5": {
                "Step": "3 * 5 = 15 (left: 6 11 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "3 8"
                }
            },
            "Step 6": {
                "Step": "3 + 5 = 8 (left: 6 8 11) -> 11 - 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "3 + 5 = 8 (left: 6 8 11) -> 11 - 8 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "3 + 5 = 8 (left: 6 8 11) -> 11 - 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (3 + 5) * (6 + 11) = 24",
                "Pruning": "NA"
            }
        },
        "Input": "3 5 6 11",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "1072": {
        "puzzle": "1 5 8 13",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 5 = 6 (left: 6 8 13)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 8 13"
                }
            },
            "Step 1": {
                "Step": "13 - 5 = 8 (left: 1 8 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 8 13"
                }
            },
            "Step 2": {
                "Step": "5 / 1 = 5 (left: 5 8 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 8 13"
                }
            },
            "Step 3": {
                "Step": "1 + 5 = 6 (left: 6 8 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1 40 13"
                }
            },
            "Step 4": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 1 * 40 = 40 (left: 40 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 8 13"
                }
            },
            "Step 5": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 13 + 6 = 19 (left: 8 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1 40 13"
                }
            },
            "Step 6": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 13 - 1 = 12 (left: 12 40)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "8 19"
                }
            },
            "Step 7": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 13 + 6 = 19 (left: 8 19) -> 8 - 19 = -11 (left: -11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "53"
                }
            },
            "Step 8": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 1 * 40 = 40 (left: 40 13) -> 40 + 13 = 53 (left: 53) -> 5 + 3 = 8",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 - 5 = 3 (left: 1 3 13)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 8 13"
                }
            },
            "Step 1": {
                "Step": "8 - 1 = 7 (left: 7 8 ",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "5 8 13"
                }
            },
            "Step 2": {
                "Step": "1 * 5 = 5 (left: 5 8 13) -> 5 * 8 = 40 (left: 40)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 8 13"
                }
            },
            "Step 3": {
                "Step": "5 * 8 = 40 (left: 1 40 13)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1 40 13"
                }
            },
            "Step 4": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 / 1 = 40 (left: 40 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1 40 13"
                }
            },
            "Step 5": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 - 1 = 39 (left: 39 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1 40 13"
                }
            },
            "Step 6": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 13 * 1 = 13 (left: 13 40)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "8 19"
                }
            },
            "Step 7": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 13 + 6 = 19 (left: 8 19) -> 8 + 19 = 27 (left: 27)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "53"
                }
            },
            "Step 8": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 1 * 40 = 40 (left: 40 13) -> 40 + 13 = 53 (left: 53) -> 53 / 53 = ",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 + 5 = 6 (left: 6 8 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 8 13"
                }
            },
            "Step 1": {
                "Step": "1 * 5 = 5 (left: 5 8 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 8 13"
                }
            },
            "Step 2": {
                "Step": "1 + 5 = 6 (left: 6 8 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 8 13"
                }
            },
            "Step 3": {
                "Step": "13 - 1 = 12 (left: 5 8 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 8 13"
                }
            },
            "Step 4": {
                "Step": "13 - 8 = 5 (left: 1 5 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 8 13"
                }
            },
            "Step 5": {
                "Step": "13 - 1 = 12 (left: 5 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1 40 13"
                }
            },
            "Step 6": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 - 1 = 39 (left: 39 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "40 13"
                }
            },
            "Step 7": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 1 * 40 = 40 (left: 40 13) -> 40 + 13 = 53 (left: 53)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "53"
                }
            },
            "Step 8": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 1 * 40 = 40 (left: 40 13) -> 40 + 13 = 53 (left: 53) -> 53 + 2 = 55",
                "Pruning": null
            }
        },
        "Input": "1 5 8 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1073": {
        "puzzle": "3 3 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 9 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 9 13"
                }
            },
            "Step 1": {
                "Step": "9 + 3 = 12 (left: 3 12 13)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 3 4"
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 4 - 3 = 1 (left: 3 1)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 9 13"
                }
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 6 9 13)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "9 9 13"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 13 + 9 = 22 (left: 9 22)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "3 1"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 4 - 3 = 1 (left: 3 1) -> 3 * 1 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "9 9 13"
                }
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 + 9 = 18 (left: 18 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "3 1"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 4 - 3 = 1 (left: 3 1) -> 3 + 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "3"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 4 - 3 = 1 (left: 3 1) -> 3 * 1 = 3 (left: 3) -> There are no possible next steps as there are no other numbers provided.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 9 13)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 9 13"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 9 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "9 9 13"
                }
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 * 9 = 81 (left:",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "3 1"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 4 - 3 = 1 (left: 3 1) -> 3 / 1 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "6 9 13"
                }
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 6 9 13) -> 9 / 6 = 1.5 (left: 1.5 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 9 13"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 6 9 13)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "3 1"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 4 - 3 = 1 (left: 3 1) -> 3 * 1 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "3 1"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 4 - 3 = 1 (left: 3 1) -> 3 * 1 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "3"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 4 - 3 = 1 (left: 3 1) -> 3 * 1 = 3 (left: 3) -> There are no possible next steps with just the number 3.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 3 3 4)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 9 13"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 9 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 3 4"
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 4 * 3 = 12 (left: 3 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "9 9 13"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 / 9 = 1 (left: 1 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 9 13"
                }
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 6 9 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 9 13"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 9 13)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "9 9 13"
                }
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 + 9 = 18 (left: 13 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "3 1"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 4 - 3 = 1 (left: 3 1) -> 3 * 1 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "3"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 4 - 3 = 1 (left: 3 1) -> 3 * 1 = 3 (left: 3) -> There are no possible next steps with only one number given.",
                "Pruning": null
            }
        },
        "Input": "3 3 9 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1074": {
        "puzzle": "7 7 9 10",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 7 = 3 (left: 3 7 ",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 7 "
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 3 7  -> 7 - 3 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 9 10"
                }
            },
            "Step 2": {
                "Step": "7 / 7 = 1 (left: 1 9 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 9 10"
                }
            },
            "Step 3": {
                "Step": "7 - 7 = 0 (left: 0 9 10)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 9 10"
                }
            },
            "Step 4": {
                "Step": "10 - 7 = 3 (left: 7 9 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 9 10"
                }
            },
            "Step 5": {
                "Step": "7 / 7 = 1 (left: 1 9 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "5 2"
                }
            },
            "Step 6": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 10 / 2 = 5 (left: 5 2) -> 5 - 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "10 - 2 = 8 (left:"
                }
            },
            "Step 7": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 10 - 2 = 8 (left: -> 10 + 2 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "12"
                }
            },
            "Step 8": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 10 - 2 = 8 (left: -> 10 + 2 = 12 (left: 12) -> There are no possible next steps as there is only one number left. The final result is 12.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 * 9 = 63 (left: 10 10 63)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 9 10"
                }
            },
            "Step 1": {
                "Step": "",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 9 10"
                }
            },
            "Step 2": {
                "Step": "7 + 7 = 14 (left: 9 10 14)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "7 2 10"
                }
            },
            "Step 3": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 10 / 2 = 5 (left: 5 2)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 7 "
                }
            },
            "Step 4": {
                "Step": "10 - 7 = 3 (left: 3 7  -> Input: 4 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "7 2 10"
                }
            },
            "Step 5": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 10 - 2 = 8 (left:",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "10 - 2 = 8 (left:"
                }
            },
            "Step 6": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 10 - 2 = 8 (left: -> 10 / 2 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "5 2"
                }
            },
            "Step 7": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 10 / 2 = 5 (left: 5 2) -> 5 - 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "10"
                }
            },
            "Step 8": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 10 / 2 = 5 (left: 5 2) -> 5 * 2 = 10 (left: 10) -> 10 + 10 = 20",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 - 7 = 2 (left: 7 2 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 9 10"
                }
            },
            "Step 1": {
                "Step": "9 + 1 = 10 (left: 7 10 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 9 10"
                }
            },
            "Step 2": {
                "Step": "7 * 7 = 49 (left: 9 10 49)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 9 10"
                }
            },
            "Step 3": {
                "Step": "7 * 7 = 49 (left: 9 10 49)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "9 10 49"
                }
            },
            "Step 4": {
                "Step": "7 * 7 = 49 (left: 9 10 49) -> 49 / 9 = 5.44 (left: 10 5.44)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 9 10"
                }
            },
            "Step 5": {
                "Step": "7 + 7 = 14 (left: 9 10 14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "5 2"
                }
            },
            "Step 6": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 10 / 2 = 5 (left: 5 2) -> 5 * 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "5 2"
                }
            },
            "Step 7": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 10 / 2 = 5 (left: 5 2) -> 5 * 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "10"
                }
            },
            "Step 8": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 10 / 2 = 5 (left: 5 2) -> 5 * 2 = 10 (left: 10) -> 10 + 10 = 20",
                "Pruning": null
            }
        },
        "Input": "7 7 9 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "Cost": {
        "input_tokens": 541812,
        "output_tokens": 195408.74999999988,
        "total_cost": 0.5640191249999998
    }
}