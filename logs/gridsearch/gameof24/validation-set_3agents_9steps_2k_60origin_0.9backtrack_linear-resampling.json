{
    "875": {
        "puzzle": "5 6 9 12",
        "Agent 0": {
            "Step 0": {
                "Step": "6 - 5 = 1 (left: 1 9 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 9 12"
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 6 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 9 12"
                }
            },
            "Step 3": {
                "Step": "12 - 9 = 3 (left: 5 3 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 9 = 3 (left: 5 3 12) -> 5 * 3 = 15 (left: 15 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 9 12"
                }
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 9 11 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 9 11 12) -> 11 / 9 = 1.22222222222 (left: 1.22222222222 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "9 11"
                }
            },
            "Step 7": {
                "Step": "6 - 5 = 1 (left: 1 9 12) -> 12 - 1 = 11 (left: 9 11) -> 9 + 11 = 20 (left: 20)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 - 5 = 1 (left: 1 9 12) -> 12 - 1 = 11 (left: 9 11) -> 9 + 11 = 20 (left: 20) -> None, as there is only one number provided.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 9 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 9 12"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 3 3 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 3 3 12) -> 12 - 3 = 9 (left: 3 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 9 12"
                }
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 9 11 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 9 11 12) -> 9 + 11 = 20 (left: 12 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 9 12"
                }
            },
            "Step 5": {
                "Step": "6 - 5 = 1 (left: 1 9 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 5 = 1 (left: 1 9 12) -> 12 - 1 = 11 (left: 9 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "9 11"
                }
            },
            "Step 7": {
                "Step": "6 - 5 = 1 (left: 1 9 12) -> 12 - 1 = 11 (left: 9 11) -> 11 / 9 = 1.2222222222222223 (left: 1.222",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 - 5 = 1 (left: 1 9 12) -> 12 - 1 = 11 (left: 9 11) -> 11 / 9 = 1.2222222222222223 (left: 1.222 -> There are no possible next steps with the given input of 1.222.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 9 = 3 (left: 3 6 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 9 12"
                }
            },
            "Step 1": {
                "Step": "12 - 9 = 3 (left: 5 3 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 9 = 3 (left: 5 3 12) -> 5 + 3 = 8 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 9 12"
                }
            },
            "Step 3": {
                "Step": "9 - 6 = 3 (left: 3 6 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 6 = 3 (left: 3 6 12) -> 3 * 6 = 18 (left: 18 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 9 12"
                }
            },
            "Step 5": {
                "Step": "5 * 6 = 30 (left: 30 9 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 6 = 30 (left: 30 9 12) -> 30 - 9 = 21 (left: 21 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1.22222222222 12"
                }
            },
            "Step 7": {
                "Step": "5 + 6 = 11 (left: 9 11 12) -> 11 / 9 = 1.22222222222 (left: 1.22222222222 12) -> 12 + 1.22222222222 = 13.222222222",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 6 = 11 (left: 9 11 12) -> 11 / 9 = 1.22222222222 (left: 1.22222222222 12) -> 12 + 1.22222222222 = 13.222222222 -> 12 - 1 = 11.22222222222 (left: 11.22222222222 1.22222222222 13.222222222)",
                "Pruning": null
            }
        },
        "Input": "5 6 9 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "876": {
        "puzzle": "6 9 10 11",
        "Agent 0": {
            "Step 0": {
                "Step": "9 + 10 = 19 (left: 6 11 19)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 1": {
                "Step": "6 * 9 = 54 (left: 10 11 54)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 11 * 10 = 110 (left: 110 54)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 3": {
                "Step": "9 * 10 = 90 (left: 6 11 90)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 * 10 = 90 (left: 6 11 90) -> 11 / 6 = 1.83 (left: 1.83 6 90)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 5": {
                "Step": "10 * 11 = 110 (left: 6 9 ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 * 11 = 110 (left: 6 9  -> 6 + 9 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1.83 6 90"
                }
            },
            "Step 7": {
                "Step": "9 * 10 = 90 (left: 6 11 90) -> 11 / 6 = 1.83 (left: 1.83 6 90) -> 90 - 1.83 = 88.17 (left: 6 88.17)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 * 10 = 90 (left: 6 11 90) -> 11 / 6 = 1.83 (left: 1.83 6 90) -> 90 - 1.83 = 88.17 (left: 6 88.17) -> 88.17 / 6 = 14.695 (left: 14.695)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 10 11 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 1": {
                "Step": "10 + 11 = 21 (left: 6 9 21)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 6 * 9 = 54 (left: 54 21)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 3": {
                "Step": "10 + 11 = 21 (left: 6 9 21)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 21 / 3 = 7 (left: 6 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 5": {
                "Step": "6 * 9 = 54 (left: 10 11 54)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> Input: 4 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1.83 6 90"
                }
            },
            "Step 7": {
                "Step": "9 * 10 = 90 (left: 6 11 90) -> 11 / 6 = 1.83 (left: 1.83 6 90) -> 6 * 1.83 = 10.98 (left: 10.98 90)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 * 10 = 90 (left: 6 11 90) -> 11 / 6 = 1.83 (left: 1.83 6 90) -> 6 * 1.83 = 10.98 (left: 10.98 90) -> 3 + 5 = 8 (left",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 * 9 = 54 (left: 10 11 54)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 9 11 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 10 = 16 (left: 9 11 16) -> 16 - 9 = 7 (left: 7 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 3": {
                "Step": "6 + 9 = 15 (left: 10 11 15)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 11 + 15 = 26 (left: 10 26)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 5": {
                "Step": "10 * 11 = 110 (left: 6 9 ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 * 11 = 110 (left: 6 9  -> 9 / 6 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1.83 6 90"
                }
            },
            "Step 7": {
                "Step": "9 * 10 = 90 (left: 6 11 90) -> 11 / 6 = 1.83 (left: 1.83 6 90) -> 1.83 + 6 = 7.83 (left: 7.83 90)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 * 10 = 90 (left: 6 11 90) -> 11 / 6 = 1.83 (left: 1.83 6 90) -> 1.83 + 6 = 7.83 (left: 7.83 90) -> 7.83 * 90 = 704.7 (left: 704.7)",
                "Pruning": "NA"
            }
        },
        "Input": "6 9 10 11",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            }
        ]
    },
    "877": {
        "puzzle": "2 4 5 11",
        "Agent 0": {
            "Step 0": {
                "Step": "5 + 11 = 16 (left: 2 4 16)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 5 11"
                }
            },
            "Step 1": {
                "Step": "2 * 4 = 8 (left: 5 8 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 11 - 5 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 5 11"
                }
            },
            "Step 3": {
                "Step": "5 + 2 = 7 (left: 4 7 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 2 = 7 (left: 4 7 11) -> 7 - 4 = 3 (left: 3 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 5 11"
                }
            },
            "Step 5": {
                "Step": "11 - 5 = 6 (left: 4 6 ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 5 = 6 (left: 4 6  -> Input: 7 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "143"
                }
            },
            "Step 7": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 5 + 8 = 13 (left: 11 13) -> 11 * 13 = 143 (left: 143) -> 14 * 3 = 42 (left: 42)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "10"
                }
            },
            "Step 8": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 16 - 2 = 14 (left: 4 14) -> 14 - 4 = 10 (left: 10) -> No possible next steps with just one number.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 * 4 = 8 (left: 5 8 11)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "5 8 11"
                }
            },
            "Step 1": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 5 + 8 = 13 (left: 11 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 5 + 8 = 13 (left: 11 13) -> 11 / 13 = 0.846 (left: 0.846)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 4 16"
                }
            },
            "Step 3": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 16 - 2 = 14 (left: 4 14)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 16 - 2 = 14 (left: 4 14) -> 14 - 4 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 5 11"
                }
            },
            "Step 5": {
                "Step": "5 * 11 = 55 (left: 2 4 ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 11 = 55 (left: 2 4  -> 4 / 2 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "11"
                }
            },
            "Step 7": {
                "Step": "4 + 5 = 9 (left: 2 9 11) -> 2 + 9 = 11 (left: 11) -> There are no possible next steps with the input of 11.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 5 = 9 (left: 2 9 11) -> 2 + 9 = 11 (left: 11) -> There are no possible next steps with the input of 11. -> There are no possible next steps with the input of 11.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 5 = 9 (left: 2 9 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 5 11"
                }
            },
            "Step 1": {
                "Step": "4 + 5 = 9 (left: 2 9 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 5 = 9 (left: 2 9 11) -> 2 + 9 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 5 11"
                }
            },
            "Step 3": {
                "Step": "11 - 4 = 7 (left: 2 7 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 4 = 7 (left: 2 7  -> 2 * 7 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "5 8 11"
                }
            },
            "Step 5": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 5 + 8 = 13 (left: 11 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 5 + 8 = 13 (left: 11 13) -> 11 * 13 = 143 (left: 143)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "11 - 5 = "
                }
            },
            "Step 7": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 11 - 5 =  -> 11 - 5 = 6",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 11 - 5 =  -> 11 - 5 = 6 -> 11 - 5 = 6 (left: 6)",
                "Pruning": "NA"
            }
        },
        "Input": "2 4 5 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            }
        ]
    },
    "878": {
        "puzzle": "1 2 5 10",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 5 = 7 (left: 1 7 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 5 10"
                }
            },
            "Step 1": {
                "Step": "10 / 2 = 5 (left: 1 5 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 2 = 5 (left: 1 5 10) -> 1 * 5 = 5 (left:",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 3 10"
                }
            },
            "Step 3": {
                "Step": "5 - 2 = 3 (left: 1 3 10) -> 1 * 3 = 3 (left: 3 3)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 - 2 = 3 (left: 1 3 10) -> 1 * 3 = 3 (left: 3 3) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "15 / 2 = 7.5 (left:"
                }
            },
            "Step 5": {
                "Step": "5 + 10 = 15 (left: 1 2 15) -> 15 / 2 = 7.5 (left: -> 15 - 2 = 13 (left: 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 10 = 15 (left: 1 2 15) -> 15 / 2 = 7.5 (left: -> 15 - 2 = 13 (left: 13) -> 13 + 2 = 15 (left: 2 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "15 / 2 = 7.5 (left:"
                }
            },
            "Step 7": {
                "Step": "5 + 10 = 15 (left: 1 2 15) -> 15 / 2 = 7.5 (left: -> 15 * 2 = 30 (left: 30)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 10 = 15 (left: 1 2 15) -> 15 / 2 = 7.5 (left: -> 15 * 2 = 30 (left: 30) -> None. The input number is the final result.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 - 2 = 3 (left: 1 3 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 5 10"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 5 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 5 10) -> 10 + 3 = 13 (left:",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "15 / 2 = 7.5 (left:"
                }
            },
            "Step 3": {
                "Step": "5 + 10 = 15 (left: 1 2 15) -> 15 / 2 = 7.5 (left: -> 15 * 2 = 30 (left: 30)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 10 = 15 (left: 1 2 15) -> 15 / 2 = 7.5 (left: -> 15 * 2 = 30 (left: 30) -> There are no possible next steps with the input 30.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "10 + 3 = 13 (left:"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 5 10) -> 10 + 3 = 13 (left: -> 10 + 3 = 13 (left: 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 5 10) -> 10 + 3 = 13 (left: -> 10 + 3 = 13 (left: 13) -> 13 - 8 = 5 (left: 8)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "15 / 2 = 7.5 (left:"
                },
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "15 / 2 = 7.5 (left:"
                }
            },
            "Step 7": {
                "Step": "5 + 10 = 15 (left: 1 2 15) -> 15 / 2 = 7.5 (left: -> 2 + 15 = 17 (left: 17)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 10 = 15 (left: 1 2 15) -> 15 / 2 = 7.5 (left: -> 2 + 15 = 17 (left: 17) -> There are no possible next steps with the input 17.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 + 10 = 15 (left: 1 2 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 5 10"
                }
            },
            "Step 1": {
                "Step": "5 + 10 = 15 (left: 1 2 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 10 = 15 (left: 1 2 15) -> 15 / 2 = 7.5 (left:",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 5 10"
                }
            },
            "Step 3": {
                "Step": "2 * 5 = 10 (left: 1 10 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 5 = 10 (left: 1 10 10) -> 10 / 1 = 10 (left: 10 10 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 5 10"
                }
            },
            "Step 5": {
                "Step": "2 * 5 = 10 (left: 1 10 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 5 = 10 (left: 1 10 10) -> 3 + 6 = 9 (left: 9 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "15 / 2 = 7.5 (left:"
                }
            },
            "Step 7": {
                "Step": "5 + 10 = 15 (left: 1 2 15) -> 15 / 2 = 7.5 (left: -> None. The equation is already solved.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 10 = 15 (left: 1 2 15) -> 15 / 2 = 7.5 (left: -> None. The equation is already solved. -> None. The equation is already solved.",
                "Pruning": null
            }
        },
        "Input": "1 2 5 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "879": {
        "puzzle": "2 2 2 5",
        "Agent 0": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 2 5)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 5"
                }
            },
            "Step 1": {
                "Step": "2 / 2 = 1 (left: 1 2 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 / 2 = 1 (left: 1 2 5) -> 2 * 5 = 10 (left: 1 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 5"
                }
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 2 5)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 / 5 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 10"
                }
            },
            "Step 5": {
                "Step": "2 / 2 = 1 (left: 1 2 5) -> 2 * 5 = 10 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 / 2 = 1 (left: 1 2 5) -> 2 * 5 = 10 (left: 1 10) -> 1 * 10 = 10 (left: 10) -> 10 + 8 = 18 (left: 8)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "1 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1 10"
                }
            },
            "Step 7": {
                "Step": "2 / 2 = 1 (left: 1 2 5) -> 2 * 5 = 10 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 / 2 = 1 (left: 1 2 5) -> 2 * 5 = 10 (left: 1 10) -> 1 + 10 = 11 (left: 11) -> There are no possible next steps with the input of 11.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 - 2 = 3 (left: 2 3 5)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 5"
                }
            },
            "Step 1": {
                "Step": "Possible next steps:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "Possible next steps: -> There are no possible next steps for the input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 5"
                }
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 2 5)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 + 2 = 6 (left: 6 5)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 10"
                }
            },
            "Step 5": {
                "Step": "2 / 2 = 1 (left: 1 2 5) -> 2 * 5 = 10 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 / 2 = 1 (left: 1 2 5) -> 2 * 5 = 10 (left: 1 10) -> 1 + 10 = 11 (left: 11) -> No possible next steps as there are not enough numbers provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "1 10"
                }
            },
            "Step 7": {
                "Step": "2 / 2 = 1 (left: 1 2 5) -> 2 * 5 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 / 2 = 1 (left: 1 2 5) -> 2 * 5 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 9) -> 8 - 9 = -1 (left: -1)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "No possible next steps as there are not enough numbers provided."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 2 5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 5"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 2 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 4 * 2 = 8 (left: 8 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 2 5"
                }
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 5 + 2 = 7 (left: 4 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 5 + 2 = 7 (left: 4 7) -> 4 * 7 = 28 (left: 28)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 10"
                }
            },
            "Step 5": {
                "Step": "2 / 2 = 1 (left: 1 2 5) -> 2 * 5 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 / 2 = 1 (left: 1 2 5) -> 2 * 5 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 + 8 = 18 (left: 8)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "1 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1 10"
                }
            },
            "Step 7": {
                "Step": "2 / 2 = 1 (left: 1 2 5) -> 2 * 5 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 / 2 = 1 (left: 1 2 5) -> 2 * 5 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 + 10 = 20",
                "Pruning": null
            }
        },
        "Input": "2 2 2 5",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "880": {
        "puzzle": "6 12 13 13",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 6 13 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 12 13 13"
                }
            },
            "Step 1": {
                "Step": "13 + 6 = 19 (left: 12 13 19)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 + 6 = 19 (left: 12 13 19) -> 12 * 13 = 156 (left: 19 156)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 12 13 13"
                }
            },
            "Step 3": {
                "Step": "13 - 12 = 1 (left: 6 1 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 12 = 1 (left: 6 1  -> 6 + 1 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 12 13 13"
                }
            },
            "Step 5": {
                "Step": "12 / 6 = 2 (left: 2 13 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 6 = 2 (left: 2 13 13) -> 2 * 13 = 26 (left: 13 26)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "13 26"
                }
            },
            "Step 7": {
                "Step": "12 / 6 = 2 (left: 2 13 13) -> 2 * 13 = 26 (left: 13 26) -> 13 - 26 = -13 (left: -13)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 / 6 = 2 (left: 2 13 13) -> 2 * 13 = 26 (left: 13 26) -> 13 - 26 = -13 (left: -13) -> There are no possible next steps for the input -13.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 7 12 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 12 13 13"
                }
            },
            "Step 1": {
                "Step": "13 - 6 = 7 (left: 6 13 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 6 = 7 (left: 6 13 7) -> 13 - 6 = 7 (left: 7 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 12 13 13"
                }
            },
            "Step 3": {
                "Step": "13 - 12 = 1 (left: 6 1 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 12 = 1 (left: 6 1 13) -> 1 * 6 = 6 (left: 6 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 12 13 13"
                }
            },
            "Step 5": {
                "Step": "12 / 6 = 2 (left: 2 13 ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 6 = 2 (left: 2 13  -> 13 / 2 = 6.5 (left: 6.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "13 26"
                }
            },
            "Step 7": {
                "Step": "12 / 6 = 2 (left: 2 13 13) -> 2 * 13 = 26 (left: 13 26) -> 13 * 26 = 338 (left: 338)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 / 6 = 2 (left: 2 13 13) -> 2 * 13 = 26 (left: 13 26) -> 13 * 26 = 338 (left: 338) -> 3 * 8 = 24 (left: 24)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 12 = 18 (left: 13 18 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 12 13 13"
                }
            },
            "Step 1": {
                "Step": "12 - 6 = 6 (left: 6 13 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 - 6 = 7 (left: 7 13)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 12 13 13"
                }
            },
            "Step 3": {
                "Step": "12 - 6 = 6 (left: 6 13 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 6 * 13 = 78 (left: 13 78)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 12 13 13"
                }
            },
            "Step 5": {
                "Step": "12 - 6 = 6 (left: 6 13 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 - 6 = 7 (left: 7 13)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "7 13"
                }
            },
            "Step 7": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 - 6 = 7 (left: 7 13) -> 13 / 7 = 1.857 (left: 1.857)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 - 6 = 7 (left: 7 13) -> 13 / 7 = 1.857 (left: 1.857) -> 1.857 * 2 = 3.714",
                "Pruning": null
            }
        },
        "Input": "6 12 13 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            }
        ]
    },
    "881": {
        "puzzle": "3 3 6 10",
        "Agent 0": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 9 6 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 6 10"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 * 6 = 60 (left: 6 60)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 * 6 = 60 (left: 6 60) -> 6 + 60 = 66 (left: 66)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "22"
                }
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 + 6 = 16 (left: 6 16) -> 6 + 16 = 22 (left: 22) -> There are no possible next steps with the input of 22.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 + 6 = 16 (left: 6 16) -> 6 + 16 = 22 (left: 22) -> There are no possible next steps with the input of 22. -> None",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "3 6 7"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "22"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 + 6 = 16 (left: 6 16) -> 6 + 16 = 22 (left: 22) -> 22 + 2 = 24",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 + 6 = 16 (left: 6 16) -> 6 + 16 = 22 (left: 22) -> 22 + 2 = 24 -> None",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "22"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "22"
                }
            },
            "Step 7": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 + 6 = 16 (left: 6 16) -> 6 + 16 = 22 (left: 22) -> There are no possible next steps as there are no other numbers given to perform operations with. The input of 22 is already a single number.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 + 6 = 16 (left: 6 16) -> 6 + 16 = 22 (left: 22) -> There are no possible next steps as there are no other numbers given to perform operations with. The input of 22 is already a single number. -> None",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "There are no valid operations that can be performed with the numbers provided in the input \"22\"."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 6 6 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 6 10"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 / 6 = 1.66666666667 (left: 6 1.66666666667)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 / 6 = 1.66666666667 (left: 6 1.66666666667) -> 6 - 1.66666666667 = 4.33333333333 (left: 4.33333333333)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "9 6 10"
                }
            },
            "Step 3": {
                "Step": "6 + 3 = 9 (left: 9 6 10) -> 9 * 6 = 54 (left: 10 54)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 3 = 9 (left: 9 6 10) -> 9 * 6 = 54 (left: 10 54) -> 54 / 10 = 5.4 (left: 5.4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 5": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 3 * 6 = 18 (left: 7 18)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 3 * 6 = 18 (left: 7 18) -> 18 / 7 = 2.57 (left: 2.57)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "22"
                }
            },
            "Step 7": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 + 6 = 16 (left: 6 16) -> 6 + 16 = 22 (left: 22) -> None, as there is only one number given.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 + 6 = 16 (left: 6 16) -> 6 + 16 = 22 (left: 22) -> None, as there is only one number given. -> There are no possible next steps as there is only one number given.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 3 = 7 (left: 3 6 7)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 6 10"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 + 6 = 16 (left: 6 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 + 6 = 16 (left: 6 16) -> 6 + 16 = 22 (left: 22)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 6 10"
                }
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 6 * 6 = 36 (left: 10 36)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 6 * 6 = 36 (left: 10 36) -> 10 + 36 = 46 (left: 46)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "22"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 + 6 = 16 (left: 6 16) -> 6 + 16 = 22 (left: 22) -> There are no possible next steps with the input \"22\".",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 + 6 = 16 (left: 6 16) -> 6 + 16 = 22 (left: 22) -> There are no possible next steps with the input \"22\". -> There are no valid operations that can be performed with the numbers provided in the input \"22\".",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "22"
                }
            },
            "Step 7": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 + 6 = 16 (left: 6 16) -> 6 + 16 = 22 (left: 22) -> 22 + 2 = 24",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 + 6 = 16 (left: 6 16) -> 6 + 16 = 22 (left: 22) -> 22 + 2 = 24 -> 24 - 2 = 22 (left: 22)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "There are no valid operations that can be performed with the numbers provided in the input \"22\"."
                }
            }
        },
        "Input": "3 3 6 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "882": {
        "puzzle": "3 4 8 11",
        "Agent 0": {
            "Step 0": {
                "Step": "8 + 3 = 11 (left: 4 8 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 8 11"
                }
            },
            "Step 1": {
                "Step": "11 - 4 = 7 (left: 3 7 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 4 = 7 (left: 3 7 8) -> 3 / 7 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 8 11"
                }
            },
            "Step 3": {
                "Step": "8 + 3 = 11 (left: 4 8 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 + 3 = 11 (left: 4 8 11) -> 8 / 4 = 2 (left: 2 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "8 7"
                }
            },
            "Step 5": {
                "Step": "11 - 3 = 8 (left: 8 4 11) -> 11 - 4 = 7 (left: 8 7) -> 8 * 7 = 56 (left: 56)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 3 = 8 (left: 8 4 11) -> 11 - 4 = 7 (left: 8 7) -> 8 * 7 = 56 (left: 56) -> There are no possible next steps as there are no other numbers given to perform operations on.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "8 7"
                }
            },
            "Step 7": {
                "Step": "11 - 3 = 8 (left: 8 4 11) -> 11 - 4 = 7 (left: 8 7) -> 8 * 7 = 56 (left: 56)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 3 = 8 (left: 8 4 11) -> 11 - 4 = 7 (left: 8 7) -> 8 * 7 = 56 (left: 56) -> There are no possible next steps with the input of 56.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 + 3 = 11 (left: 4 11 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 8 11"
                }
            },
            "Step 1": {
                "Step": "8 - 4 = 4 (left: 3 4 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 4 = 4 (left: 3 4 11) -> 11 - 4 = 7 (left: 3 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 8 11"
                }
            },
            "Step 3": {
                "Step": "4 * 3 = 12 (left: 12 8 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 * 3 = 12 (left: 12 8 11) -> 12 / 8 = 1.5 (left: 1.5 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 8 11"
                }
            },
            "Step 5": {
                "Step": "11 - 3 = 8 (left: 8 4 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 3 = 8 (left: 8 4 11) -> 8 / 4 = 2 (left: 2 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "8 7"
                }
            },
            "Step 7": {
                "Step": "11 - 3 = 8 (left: 8 4 11) -> 11 - 4 = 7 (left: 8 7) -> 8 / 7 = 1.142857 (left: 1.142857)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 3 = 8 (left: 8 4 11) -> 11 - 4 = 7 (left: 8 7) -> 8 / 7 = 1.142857 (left: 1.142857) -> 1.142857 * 1.142857 = ",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 3 7 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 8 11"
                }
            },
            "Step 1": {
                "Step": "11 - 4 = 7 (left: 3 7 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 4 = 7 (left: 3 7 11) -> 11 - 3 = 8 (left: 7 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 8 11"
                }
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 8 4 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 3 = 8 (left: 8 4 11) -> 11 - 4 = 7 (left: 8 7)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 8 11"
                }
            },
            "Step 5": {
                "Step": "11 - 4 = 7 (left: 3 7 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 4 = 7 (left: 3 7 8) -> 3 + 7 = 10 (left: 8 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "8 7"
                }
            },
            "Step 7": {
                "Step": "11 - 3 = 8 (left: 8 4 11) -> 11 - 4 = 7 (left: 8 7) -> 8 / 7 = 1.14 (left: 1.14)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 3 = 8 (left: 8 4 11) -> 11 - 4 = 7 (left: 8 7) -> 8 / 7 = 1.14 (left: 1.14) -> 1 - 1 = 0 (left: 0.14)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "There are no possible next steps as there are no other numbers given to perform operations on."
                }
            }
        },
        "Input": "3 4 8 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "883": {
        "puzzle": "4 4 6 13",
        "Agent 0": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 6 16 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 13"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 6 8 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 6 8 13) -> 8 / 6 = 1.33 (left: 1.33 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 13"
                }
            },
            "Step 3": {
                "Step": "6 + 4 = 10 (left: 4 10 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 13 - 4 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 13"
                }
            },
            "Step 5": {
                "Step": "6 + 4 = 10 (left: 4 10 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 10 - 4 = 6 (left: 6 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "1 7"
                }
            },
            "Step 7": {
                "Step": "4 / 4 = 1 (left: 1 6 13) -> 13 - 6 = 7 (left: 1 7) -> 1 + 7 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 / 4 = 1 (left: 1 6 13) -> 13 - 6 = 7 (left: 1 7) -> 1 + 7 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 4 = 10 (left: 4 10 13)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 13"
                }
            },
            "Step 1": {
                "Step": "4 / 4 = 1 (left: 1 6 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 4 = 1 (left: 1 6 13) -> 13 - 1 = 12 (left: 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 13"
                }
            },
            "Step 3": {
                "Step": "4 / 4 = 1 (left: 1 6 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 / 4 = 1 (left: 1 6 13) -> 13 / 6 = 2.16667",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 13"
                }
            },
            "Step 5": {
                "Step": "4 / 4 = 1 (left: 1 6 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 4 = 1 (left: 1 6 13) -> 13 - 6 = 7 (left: 1 7)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "1 7"
                }
            },
            "Step 7": {
                "Step": "4 / 4 = 1 (left: 1 6 13) -> 13 - 6 = 7 (left: 1 7) -> Possible next steps:",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 / 4 = 1 (left: 1 6 13) -> 13 - 6 = 7 (left: 1 7) -> Possible next steps: -> Input needed for possible next steps.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 6 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 10 13"
                }
            },
            "Step 1": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> Input: 5 15",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> Input: 5 15 -> 5 * 15 = 75 (left: 75)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 13"
                }
            },
            "Step 3": {
                "Step": "6 * 4 = 24 (left: 24 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 * 4 = 24 (left: 24 13) -> 13 + 24 = 37 (left: 37)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 10 13"
                }
            },
            "Step 5": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 13 - 4 = 9 (left: 4 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 13 - 4 = 9 (left: 4 9) -> 9 - 4 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "1 7"
                }
            },
            "Step 7": {
                "Step": "4 / 4 = 1 (left: 1 6 13) -> 13 - 6 = 7 (left: 1 7) -> 1 + 7 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 / 4 = 1 (left: 1 6 13) -> 13 - 6 = 7 (left: 1 7) -> 1 + 7 = 8 (left: 8) -> 8 / 8 = 1 (left: 1)",
                "Pruning": "NA"
            }
        },
        "Input": "4 4 6 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            }
        ]
    },
    "884": {
        "puzzle": "4 6 7 10",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 7 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10) -> 9 * 10 = 90 (left: 90)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 3": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 10 / 2 = 5 (left: 5 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 10 / 2 = 5 (left: 5 10) -> 3 * 9 = 27 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 6 7 10"
                }
            },
            "Step 5": {
                "Step": "6 * 4 = 24 (",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 4 = 24 ( -> 6 * 4 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 * 4 = 24 ( -> 6 * 4 = 24 (left: 24) -> Answer: 6 * 4 = 24",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 * 4 = 24 ( -> 6 * 4 = 24 (left: 24) -> Answer: 6 * 4 = 24 -> Input: 3 3 8 9\nSteps:\n3 * 8 = 24 (left: 3 9 24)\n9 - 3 = 6 (left: 6 24)\n6 * 4 = 24 (left: 24)\nAnswer: (3 * 8) - (9 - 3) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 - 4 = 2 (left: 2 7 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 10 - 7 = 3 (left: 2 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 10 - 7 = 3 (left: 2 3) -> 3 / 2 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 6 7 10"
                }
            },
            "Step 3": {
                "Step": "6 + 7 = 13 (left: 4 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 7 = 13 (left: 4 10) -> 9 * 3 = 27 (left: 27 27)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 6 7 10"
                }
            },
            "Step 5": {
                "Step": "4 *",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * -> 16 - 8 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 * 4 = 24 ( -> 6 * 4 = 24 (left: 24) -> Answer: 6 * 4 = 24",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 * 4 = 24 ( -> 6 * 4 = 24 (left: 24) -> Answer: 6 * 4 = 24 -> All possible combinations of the numbers inputted have been exhausted and no solution for obtaining 24 using basic arithmetic operations was found.",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 / 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 / 7 = 0.285714 (left: 0.285714 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 / 7 = 0.285714 (left: 0.285714 10) -> 0.285714 * 10 = 2.85714 (left: 2.85714)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 3": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 7 + 2 = 9 (left: 9 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 7 + 2 = 9 (left: 9 10) -> 10 - 9 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 6 7 10"
                }
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 7 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 7 10) -> 10 - 7 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 * 4 = 24 ( -> 6 * 4 = 24 (left: 24) -> Answer: 6 * 4 = 24",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 * 4 = 24 ( -> 6 * 4 = 24 (left: 24) -> Answer: 6 * 4 = 24 -> Input: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n9 * 1 = 9 (left: 9)\n9 * 9 = 24 (left: 24)\nAnswer: ((3 * 3) - 8) * (9 * 1) = 24",
                "Pruning": "NA"
            }
        },
        "Input": "4 6 7 10",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "885": {
        "puzzle": "6 11 11 12",
        "Agent 0": {
            "Step 0": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 11 11 12"
                }
            },
            "Step 1": {
                "Step": "6 + 11 = 17 (left: 11 11 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 11 = 17 (left: 11 11 12) -> 11 - 11 = 0 (left: 0 12)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 11 12"
                }
            },
            "Step 3": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 11 - 1 = 10 (left: 10 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 11 - 1 = 10 (left: 10 12) -> 10 + 12 = 22 (left: 22)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 11 12"
                }
            },
            "Step 5": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 1 * 11 = 11 (left: 11 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 1 * 11 = 11 (left: 11 12) -> 11 + 12 = 23 (left: 23)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "0 12"
                }
            },
            "Step 7": {
                "Step": "6 + 11 = 17 (left: 11 11 12) -> 11 - 11 = 0 (left: 0 12) -> 12 - 0 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 11 = 17 (left: 11 11 12) -> 11 - 11 = 0 (left: 0 12) -> 12 - 0 = 12 (left: 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 6 11 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 11 12"
                }
            },
            "Step 1": {
                "Step": "12 - 6 = 6 (left: 6 11 12) -> 11 / 6 = 1.83 (left: 1.83 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 6 = 6 (left: 6 11 12) -> 11 / 6 = 1.83 (left: 1.83 12) -> 1.83 * 12 = 21.96 (left: 21.96)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 11 12"
                }
            },
            "Step 3": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 11 / 1 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 11 / 1 = 11 (left: 11) -> No valid next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1.83333 11 12"
                }
            },
            "Step 5": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 11 / 1.83333 = 5.99999 (left: 6 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 11 / 1.83333 = 5.99999 (left: 6 12) -> 12 / 6 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "0 12"
                }
            },
            "Step 7": {
                "Step": "6 + 11 = 17 (left: 11 11 12) -> 11 - 11 = 0 (left: 0 12) -> 0 + 12 = 12",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 11 = 17 (left: 11 11 12) -> 11 - 11 = 0 (left: 0 12) -> 0 + 12 = 12 -> 12 / 0 = undefined (left: 12)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "11 / 6 = 1 (left: 1 11 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 11 11 12"
                }
            },
            "Step 1": {
                "Step": "11 / 6 = 1.83 (left: 1.83 11 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 / 6 = 1.83 (left: 1.83 11 12) -> 11 - 1.83 = 9.17 (left: 9.17 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 11 11 12"
                }
            },
            "Step 3": {
                "Step": "11 - 6 = 5 (left: 5 11 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 6 = 5 (left: 5 11 12) -> 5 * 11 = 55 (left: 12 55)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 11 12"
                }
            },
            "Step 5": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 11 + 1 = 12 (left: 12 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 11 + 1 = 12 (left: 12 12) -> 12 - 12 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "0 12"
                }
            },
            "Step 7": {
                "Step": "6 + 11 = 17 (left: 11 11 12) -> 11 - 11 = 0 (left: 0 12) -> 0 - 12 = -12 (left: -12)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 11 = 17 (left: 11 11 12) -> 11 - 11 = 0 (left: 0 12) -> 0 - 12 = -12 (left: -12) -> There are no possible next steps for the input -12.",
                "Pruning": null
            }
        },
        "Input": "6 11 11 12",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            }
        ]
    },
    "886": {
        "puzzle": "3 6 9 11",
        "Agent 0": {
            "Step 0": {
                "Step": "6 / 3 = 2 (left: 2 9 11)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 6 9 11"
                }
            },
            "Step 1": {
                "Step": "11 - 9 = 2 (left: 3 6 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 9 = 2 (left: 3 6  -> 6 - 3 = 3 (left: 3 6)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 6 9 11"
                }
            },
            "Step 3": {
                "Step": "3 * 6 = 18 (left: 9 18 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 6 = 18 (left: 9 18 11) -> 18 - 9 = 9 (left: 9 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 9 11"
                }
            },
            "Step 5": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 11 - 9 = 2 (left: 2 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 11 - 9 = 2 (left: 2 11) -> 2 + 11 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "0 11"
                }
            },
            "Step 7": {
                "Step": "3 + 6 = 9 (left: 9 9 11) -> 9 - 9 = 0 (left: 0 11) -> 0 * 11 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 + 6 = 9 (left: 9 9 11) -> 9 - 9 = 0 (left: 0 11) -> 0 * 11 = 0 (left: 0) -> There are no possible next steps as there are no numbers to operate on.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 9 9 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 9 11"
                }
            },
            "Step 1": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> Input: 3 5",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> Input: 3 5 -> 5 / 3 = 1.67 (left: 1.67)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 9 11"
                }
            },
            "Step 3": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 9 - 2 = 7 (left: 7 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 9 - 2 = 7 (left: 7 11) -> 7 + 11 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 6 9 11"
                }
            },
            "Step 5": {
                "Step": "9 + 2 = 11 (left: 3 9 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 2 = 11 (left: 3 9 11) -> 3 + 9 = 12 (left: 11 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "18"
                }
            },
            "Step 7": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 9 - 2 = 7 (left: 7 11) -> 7 + 11 = 18 (left: 18) -> None",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "18"
                }
            },
            "Step 8": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 9 - 2 = 7 (left: 7 11) -> 7 + 11 = 18 (left: 18) -> None. The input has only one number.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 / 3 = 2 (left: 2 9 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 6 9 11"
                }
            },
            "Step 1": {
                "Step": "9 - 3 = 6 (left: 6 6 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 3 = 6 (left: 6 6  -> 6 / 6 = 1 (left: 1) ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 6 9 11"
                }
            },
            "Step 3": {
                "Step": "3 + 6 = 9 (left: 9 9 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 + 6 = 9 (left: 9 9 11) -> 9 - 9 = 0 (left: 0 11)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 9 11"
                }
            },
            "Step 5": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 11 - 2 = 9 (left: 9 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 11 - 2 = 9 (left: 9 11) -> 11 / 9 = 1.2222222222222223 (left: 1.2222222222222223)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "3 6"
                }
            },
            "Step 7": {
                "Step": "11 - 9 = 2 (left: 3 6  -> 6 - 3 = 3 (left: 3 6) -> 6 - 3 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 9 = 2 (left: 3 6  -> 6 - 3 = 3 (left: 3 6) -> 6 - 3 = 3 (left: 3) -> 3 + 3 = 6 (left: 6)",
                "Pruning": "NA"
            }
        },
        "Input": "3 6 9 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            }
        ]
    },
    "887": {
        "puzzle": "5 7 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "9 + 7 = 16 (left: 5 16 ",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 7 9 13"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 4 5 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 4 5 7) -> 5 * 7 = 35 (left: 4 35)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 7 9 13"
                }
            },
            "Step 3": {
                "Step": "7 + 9 = 16 (left: 5 16 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 + 9 = 16 (left: 5 16 13) -> 5 + 16 = 21 (left: 13 21)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 16 "
                }
            },
            "Step 5": {
                "Step": "9 + 7 = 16 (left: 5 16  -> 16 / 5 = 3.2 (left: 3.2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 7 = 16 (left: 5 16  -> 16 / 5 = 3.2 (left: 3.2) -> 3.2 + 2 = 5.2 (left: 5.2)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "-2 9"
                }
            },
            "Step 7": {
                "Step": "13 - 5 = 8 (left: 8 7 9) -> 7 - 9 = -2 (left: -2 9) -> -2 / 9 \u2248 -0.2222 (left: -0.2222)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 5 = 8 (left: 8 7 9) -> 7 - 9 = -2 (left: -2 9) -> -2 / 9 \u2248 -0.2222 (left: -0.2222) -> -0.2222 + 2 = 1.7778",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 + 7 = 12 (left: 9 12 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 7 9 13"
                }
            },
            "Step 1": {
                "Step": "7 - 5 = 2 (left: 2 9 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 5 = 2 (left: 2 9 13) -> 13 - 9 = 4 (left: 2 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 7 9 13"
                }
            },
            "Step 3": {
                "Step": "9 + 13 = 22 (left: 5 7 22)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 + 13 = 22 (left: 5 7 22) -> 7 - 5 = 2 (left: 2 22)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 7 9 13"
                }
            },
            "Step 5": {
                "Step": "13 - 5 = 8 (left: 8 7 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 5 = 8 (left: 8 7 9) -> 7 - 9 = -2 (left: -2 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "4 35"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 4 5 7) -> 5 * 7 = 35 (left: 4 35) -> 35 / 4 = 8.75 (left: 8.75)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 4 5 7) -> 5 * 7 = 35 (left: 4 35) -> 35 / 4 = 8.75 (left: 8.75) -> There are no possible next steps for the input 8.75.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 - 7 = 2 (left: 5 2 13)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 7 9 13"
                }
            },
            "Step 1": {
                "Step": "13 - 5 = 8 (left: 7 8 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 9 / 8 = 1.125 (left: 7 1.125)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 7 9 13"
                }
            },
            "Step 3": {
                "Step": "7 / 5 = 1.4 (left: 1.4 9 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 / 5 = 1.4 (left: 1.4 9 13) -> 13 - 1.4 = 11.6 (left: 9 11.6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 7 9 13"
                }
            },
            "Step 5": {
                "Step": "7 + 9 = 16 (left: 5 16 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 9 = 16 (left: 5 16 13) -> 13 - 5 = 8 (left: 8 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "4 35"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 4 5 7) -> 5 * 7 = 35 (left: 4 35) -> 4 * 35 = 140 (left: 140)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 4 5 7) -> 5 * 7 = 35 (left: 4 35) -> 4 * 35 = 140 (left: 140) -> There are no possible next steps for the number 140 as it is a single number and cannot be combined with any other numbers in the input.",
                "Pruning": null
            }
        },
        "Input": "5 7 9 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "888": {
        "puzzle": "2 4 12 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 / 4 = 3 (left: 2 3 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 12 12"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 12 12"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 - 6 = 6 (left: 6 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 - 6 = 6 (left: 6 12) -> 12 - 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 12 12"
                }
            },
            "Step 5": {
                "Step": "12 / 2 = 6 (left: 6 12 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 2 = 6 (left: 6 12 12) -> 12 + 6 = 18 (left: 12 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2 10"
                }
            },
            "Step 7": {
                "Step": "12 / 4 = 3 (left: 2 3 12) -> 12 - 2 = 10 (left: 2 10) -> 2 + 10 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 / 4 = 3 (left: 2 3 12) -> 12 - 2 = 10 (left: 2 10) -> 2 + 10 = 12 (left: 12) -> 12 * 2 = 24 (left: 8 24)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 6 12 12)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 12 12"
                }
            },
            "Step 1": {
                "Step": "4 * 12 = 48 (left: 2 48 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 12 = 48 (left: 2 48 12) -> 48 / 2 = 24 (left: 12 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 12 12"
                }
            },
            "Step 3": {
                "Step": "12 - 4 = 8 (left: 2 8 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 4 = 8 (left: 2 8 12) -> 2 + 8 = 10 (left: 10 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 12 12"
                }
            },
            "Step 5": {
                "Step": "12 + 4 = 16 (left: 2 12 16)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 + 4 = 16 (left: 2 12 16) -> 2 + 12 = 14 (left: 14 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2 10"
                }
            },
            "Step 7": {
                "Step": "12 / 4 = 3 (left: 2 3 12) -> 12 - 2 = 10 (left: 2 10) -> 10 - 2 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 / 4 = 3 (left: 2 3 12) -> 12 - 2 = 10 (left: 2 10) -> 10 - 2 = 8 (left: 8) -> No possible next steps with just one number.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 2 = 10 (left: 4 10 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 12 12"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 12 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 12 12"
                }
            },
            "Step 3": {
                "Step": "4 * 12 = 48 (left: 2 48 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 * 12 = 48 (left: 2 48 12) -> 2 + 48 = 50 (left: 12 50)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 12 12"
                }
            },
            "Step 5": {
                "Step": "12 / 4 = 3 (left: 2 3 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 4 = 3 (left: 2 3 12) -> 12 - 2 = 10 (left: 2 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2 10"
                }
            },
            "Step 7": {
                "Step": "12 / 4 = 3 (left: 2 3 12) -> 12 - 2 = 10 (left: 2 10) -> 2 * 10 = 20 (left: 20)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 / 4 = 3 (left: 2 3 12) -> 12 - 2 = 10 (left: 2 10) -> 2 * 10 = 20 (left: 20) -> 20 + 2 = 22 (left: 22)",
                "Pruning": "NA"
            }
        },
        "Input": "2 4 12 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            }
        ]
    },
    "889": {
        "puzzle": "4 9 11 12",
        "Agent 0": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 11 12 36)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 11 12"
                }
            },
            "Step 1": {
                "Step": "4 + 9 = 13 (left: 11 12 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 / 11 = 1.09 (left: 1.09 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 11 12"
                }
            },
            "Step 3": {
                "Step": "4 + 9 = 13 (left: 11 12 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> Input: 3 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "13 132"
                }
            },
            "Step 5": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132) -> Possible next steps:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132) -> Possible next steps: -> There are no possible next steps with the given input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "13 132"
                }
            },
            "Step 7": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132) -> 132 - 13 = 119 (left: 119)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132) -> 132 - 13 = 119 (left: 119) -> 119 - 9 = 110 (left: 110)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "There are no possible next steps with the given input."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "11 + 4 = 15 (left: 9 12 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 11 12"
                }
            },
            "Step 1": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 11 / 2.25 = 4.89 (left: 4",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 11 12"
                }
            },
            "Step 3": {
                "Step": "4 * 9 = 36 (left: 11 12 36)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 11 + 12 = 23 (left: 23 36)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "9 12 15"
                }
            },
            "Step 5": {
                "Step": "11 + 4 = 15 (left: 9 12 15) -> 12 - 9 = 3 (left: 3 15)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 + 4 = 15 (left: 9 12 15) -> 12 - 9 = 3 (left: 3 15) -> 3 * 5 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "4"
                }
            },
            "Step 7": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 11 / 2.25 = 4.89 (left: 4 -> There is only one possible step: 4 + 0 = 4",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 11 / 2.25 = 4.89 (left: 4 -> There is only one possible step: 4 + 0 = 4 -> 4 * 0 = 0 (left: 0 4)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 9 = 3 (left: 3 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 11 12"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 5 11 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 5 11 12) -> 5 * 11 = 55 (left: 12 55)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 11 12"
                }
            },
            "Step 3": {
                "Step": "4 + 9 = 13 (left: 11 12 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 11 12"
                }
            },
            "Step 5": {
                "Step": "4 * 9 = 36 (left: 11 12 36)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 36 / 12 = 3 (left: 11 3)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "13 132"
                }
            },
            "Step 7": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132) -> 132 / 13 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132) -> 132 / 13 = 10 (left: 10) -> 10 / 2 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "There are no possible next steps with the given input."
                }
            }
        },
        "Input": "4 9 11 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "890": {
        "puzzle": "7 8 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 7 = 6 (left: 6 8 9)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 9 13"
                }
            },
            "Step 1": {
                "Step": "7 / 8 = 0.875 (left: 0.875 9 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 / 8 = 0.875 (left: 0.875 9 13) -> 13 - 9 = 4 (left: 0.875 4)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 9 13"
                }
            },
            "Step 3": {
                "Step": "7 + 8 = 15 (left: 9 13 15)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 13 - 9 = 4 (left: 4 15)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 9 13"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 4 8 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 4 8 13) -> 4 * 8 = 32 (left: 32 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "4 4"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 7 8 4) -> 8 - 4 = 4 (left: 4 4) -> 4 - 4 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 7 8 4) -> 8 - 4 = 4 (left: 4 4) -> 4 - 4 = 0 (left: 0) -> There are no possible next steps as there are no numbers provided in the input.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 + 8 = 15 (left: 9 13 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 9 13"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 7 8 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 7 8 4) -> 8 - 4 = 4 (left: 4 4)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 9 13"
                }
            },
            "Step 3": {
                "Step": "8 + 9 = 17 (left: 7 13 17)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 + 9 = 17 (left: 7 13 17) -> 7 * 13 = 91 (left: 91 17)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 9 13"
                }
            },
            "Step 5": {
                "Step": "7 + 8 = 15 (left: 9 13 15)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 15 - 13 = 2 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "4 4"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 7 8 4) -> 8 - 4 = 4 (left: 4 4) -> 4 * 4 = 16 (left: 16)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 7 8 4) -> 8 - 4 = 4 (left: 4 4) -> 4 * 4 = 16 (left: 16) -> 16 - 2 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "3 9.375"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 + 8 = 17 (left: 7 13 17)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 9 13"
                }
            },
            "Step 1": {
                "Step": "7 * 8 = 56 (left: 9 13 56)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 * 9 = 117 (left: 117 56)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "0.875 4"
                }
            },
            "Step 3": {
                "Step": "7 / 8 = 0.875 (left: 0.875 9 13) -> 13 - 9 = 4 (left: 0.875 4) -> 4 - 0.875 = 3.125 (left: 3.125)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 / 8 = 0.875 (left: 0.875 9 13) -> 13 - 9 = 4 (left: 0.875 4) -> 4 - 0.875 = 3.125 (left: 3.125) -> 3.125 * 3 = 9.375 (left: 3 9.375)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 9 13"
                }
            },
            "Step 5": {
                "Step": "7 * 8 = 56 (left: 9 13 56)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 9 * 13 = 117 (left: 117 56)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "0.875 4"
                }
            },
            "Step 7": {
                "Step": "7 / 8 = 0.875 (left: 0.875 9 13) -> 13 - 9 = 4 (left: 0.875 4) -> 4 / 0.875 = 4.57142857143 (left: 4.57142857143)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 / 8 = 0.875 (left: 0.875 9 13) -> 13 - 9 = 4 (left: 0.875 4) -> 4 / 0.875 = 4.57142857143 (left: 4.57142857143) -> 4.57142857143 * 2 = 9.14285714286",
                "Pruning": null
            }
        },
        "Input": "7 8 9 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "891": {
        "puzzle": "2 6 12 12",
        "Agent 0": {
            "Step 0": {
                "Step": "6 * 2 = 12 (left: 12 12 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 12 12"
                }
            },
            "Step 1": {
                "Step": "2 + 6 = 8 (left: 8 12 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 6 = 8 (left: 8 12 12) -> 8 + 12 = 20 (left: 12 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "2 12 12"
                }
            },
            "Step 3": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 12 / 2 = 6 (left: 6 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 12 / 2 = 6 (left: 6 12) -> 12 / 6 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 12 12"
                }
            },
            "Step 5": {
                "Step": "12 - 6 = 6 (left: 2 6 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 6 = 6 (left: 2 6 12) -> 6 * 12 = 72",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "1 12 144"
                }
            },
            "Step 7": {
                "Step": "6 * 2 = 12 (left: 12 12 12) -> 0 + 1 = 1 (left: 1 12 144) -> 12 * 12 = 144 (left: 1)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 * 2 = 12 (left: 12 12 12) -> 0 + 1 = 1 (left: 1 12 144) -> 12 * 12 = 144 (left: 1) -> There is only one number given, so there are no possible next steps.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 / 6 = 2 (left: 2 2 ",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 12 12"
                }
            },
            "Step 1": {
                "Step": "12 - 6 = 6 (left: 2 6 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 6 = 6 (left: 2 6 12) -> 12 - 6 = 6 (left: 2 6)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 12 12"
                }
            },
            "Step 3": {
                "Step": "12 - 2 = 10 (left: 6 10 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 2 = 10 (left: 6 10 12) -> 6 + 10 = 16 (left: 12 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 12 12"
                }
            },
            "Step 5": {
                "Step": "12 - 6 = 6 (left: 6 12 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 6 = 6 (left: 6 12 6) -> 6 - 12 = -",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "1 12 144"
                }
            },
            "Step 7": {
                "Step": "6 * 2 = 12 (left: 12 12 12) -> 0 + 1 = 1 (left: 1 12 144) -> 144 / 12 = 12 (left: 1 12)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 * 2 = 12 (left: 12 12 12) -> 0 + 1 = 1 (left: 1 12 144) -> 144 / 12 = 12 (left: 1 12) -> 12 + 1 = 13 (left: 13)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 / 6 = 2 (left: 2 12 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 12 12"
                }
            },
            "Step 1": {
                "Step": "2 * 6 = 12 (left: 12 12 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 6 = 12 (left: 12 12 12) -> 12 / 12 = 1 (left: 1 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 12 12"
                }
            },
            "Step 3": {
                "Step": "12 - 6 = 6 (left: 2 6 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 6 = 6 (left: 2 6 12) -> 6 + 6 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 12 12"
                }
            },
            "Step 5": {
                "Step": "6 * 2 = 12 (left: 12 12 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 2 = 12 (left: 12 12 12) -> 0 + 1 = 1 (left: 1 12 144)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "1 12 144"
                }
            },
            "Step 7": {
                "Step": "6 * 2 = 12 (left: 12 12 12) -> 0 + 1 = 1 (left: 1 12 144) -> 144 / 1 = 144 (left: 12 144)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 * 2 = 12 (left: 12 12 12) -> 0 + 1 = 1 (left: 1 12 144) -> 144 / 1 = 144 (left: 12 144) -> 12 * 12 = 144 (left: 144)",
                "Pruning": "NA"
            }
        },
        "Input": "2 6 12 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "892": {
        "puzzle": "3 4 5 6",
        "Agent 0": {
            "Step 0": {
                "Step": "3 * 4 = 12 (left: 5 6 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 5 6"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 3 4 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 3 4 11) -> 11 - 4 = 7 (left: 3 7)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "3 7"
                }
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 3 4 11) -> 11 - 4 = 7 (left: 3 7) -> 5 + 10 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 3 4 11) -> 11 - 4 = 7 (left: 3 7) -> 5 + 10 = 15 (left: 15) -> There are no possible next steps with the input 15 as there are no other numbers to combine or operate with.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 5 6"
                }
            },
            "Step 5": {
                "Step": "5 * 6 = 30 (left: 3 4 ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 3 / 4 = 0.75 (left: 0.75)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "3 7"
                }
            },
            "Step 7": {
                "Step": "5 + 6 = 11 (left: 3 4 11) -> 11 - 4 = 7 (left: 3 7) -> 7 - 3 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 6 = 11 (left: 3 4 11) -> 11 - 4 = 7 (left: 3 7) -> 7 - 3 = 4 (left: 4) -> There is only one possible next step: 4 + 4 = 8",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 5 = 20 (left: 3 6 20)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 20"
                }
            },
            "Step 1": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 3 * 6 = 18 (left: 18 20)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 3 * 6 = 18 (left: 18 20) -> 18 + 20 = 38 (left: 38)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 5 6"
                }
            },
            "Step 3": {
                "Step": "4 + 5 = 9 (left: 3 6 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 5 = 9 (left: 3 6 9) -> 9 / 3 = 3 (left: 6 3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 20"
                }
            },
            "Step 5": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 6 - 3 = 3 (left: 3 20)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 6 - 3 = 3 (left: 3 20) -> 20 / 3 = 6.67 (left: 6.67)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "3 7"
                }
            },
            "Step 7": {
                "Step": "5 + 6 = 11 (left: 3 4 11) -> 11 - 4 = 7 (left: 3 7) -> 3 * 7 = 21 (left: 21)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 6 = 11 (left: 3 4 11) -> 11 - 4 = 7 (left: 3 7) -> 3 * 7 = 21 (left: 21) -> 21 * 2 = 42 (left: 42)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "There are no possible next steps with the input 15 as there are no other numbers to combine or operate with."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 * 5 = 20 (left: 3 6 20)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 6 20"
                }
            },
            "Step 1": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 6 + 3 = 9 (left: 9 20)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 6 + 3 = 9 (left: 9 20) -> 20 - 9 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 5 6"
                }
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 3 4 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 3 4 11) -> 3 + 4 = 7 (left: 7 11)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 5 6"
                }
            },
            "Step 5": {
                "Step": "3 * 4 = 12 (left: 5 6 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 4 = 12 (left: 5 6 12) -> 5 + 6 = 11 (left: 11 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "3 7"
                }
            },
            "Step 7": {
                "Step": "5 + 6 = 11 (left: 3 4 11) -> 11 - 4 = 7 (left: 3 7) -> 7 / 3 = 2.33333 (left: 2.33333)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 6 = 11 (left: 3 4 11) -> 11 - 4 = 7 (left: 3 7) -> 7 / 3 = 2.33333 (left: 2.33333) -> 2 + 2.33333 = 4.33333 (left: 4.33333)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "There are no possible next steps with the input 15 as there are no other numbers to combine or operate with."
                }
            }
        },
        "Input": "3 4 5 6",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "893": {
        "puzzle": "6 10 12 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 6 10 ",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1.66666666667 12 12"
                }
            },
            "Step 1": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 12 / 1.66666666667 = 7.2 (left: 7.2 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 12 / 1.66666666667 = 7.2 (left: 7.2 12) -> 12 - 7.2 = 4.8 (left: 4.8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "240"
                }
            },
            "Step 3": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 1.66666666667 * 12 = 20 (left: 12 20) -> 12 * 20 = 240 (left: 240) -> 240 / 8 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "1.66666666667 12 12"
                }
            },
            "Step 4": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 12 + 1.66666666667 = 13.6666666667 (left: 13.666666666",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "240"
                }
            },
            "Step 5": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 1.66666666667 * 12 = 20 (left: 12 20) -> 12 * 20 = 240 (left: 240) -> 240 / 3 = 80 (left: 80)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "240"
                }
            },
            "Step 6": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 1.66666666667 * 12 = 20 (left: 12 20) -> 12 * 20 = 240 (left: 240) -> 240 / 2 = 120",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "240"
                }
            },
            "Step 7": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 1.66666666667 * 12 = 20 (left: 12 20) -> 12 * 20 = 240 (left: 240) -> There is only one possible next step for the input 240:",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 1.66666666667 * 12 = 20 (left: 12 20) -> 12 * 20 = 240 (left: 240) -> There is only one possible next step for the input 240: -> 240 / 2 = 120",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 / 2 = 6 (left: 6 10 ",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1.66666666667 12 12"
                }
            },
            "Step 1": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 1.66666666667 * 12 = 20 (left: 12 20)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 1.66666666667 * 12 = 20 (left: 12 20) -> 12 - 20 = -8 (left: -8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 10 12 12"
                }
            },
            "Step 3": {
                "Step": "12 - 10 = 2 (left: 6 2 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 10 = 2 (left: 6 2 12) -> 6 / 2 = 3 (left: 3 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 10 12 12"
                }
            },
            "Step 5": {
                "Step": "10 / 6 = 1.6666666666666667 (",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 / 6 = 1.6666666666666667 ( -> Not enough numbers provided to generate possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "16 144"
                }
            },
            "Step 7": {
                "Step": "6 + 10 = 16 (left: 12 12 16) -> 12 * 12 = 144 (left: 16 144) -> 144 / 16 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 10 = 16 (left: 12 12 16) -> 12 * 12 = 144 (left: 16 144) -> 144 / 16 = 9 (left: 9) -> 9 + 9 = 18 (left: 9)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "240 / 2 = 120"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1.66666666667 12 12"
                }
            },
            "Step 1": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 1.66666666667 * 12 = 20 (left: 12 20)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 1.66666666667 * 12 = 20 (left: 12 20) -> 12 * 20 = 240 (left: 240)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 10 12 12"
                }
            },
            "Step 3": {
                "Step": "6 * 10 = 60 (left: 12 12 60)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 * 10 = 60 (left: 12 12 60) -> Input: 48 12",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 10 12 12"
                }
            },
            "Step 5": {
                "Step": "6 + 10 = 16 (left: 12 12 16)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 10 = 16 (left: 12 12 16) -> 12 * 12 = 144 (left: 16 144)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "16 144"
                }
            },
            "Step 7": {
                "Step": "6 + 10 = 16 (left: 12 12 16) -> 12 * 12 = 144 (left: 16 144) -> 16 + 144 = 160 (left: 160)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 10 = 16 (left: 12 12 16) -> 12 * 12 = 144 (left: 16 144) -> 16 + 144 = 160 (left: 160) -> 160 - 2 = 158 (left: 2)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "240 / 2 = 120"
                }
            }
        },
        "Input": "6 10 12 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "894": {
        "puzzle": "5 5 5 9",
        "Agent 0": {
            "Step 0": {
                "Step": "5 / 5 = 1 (left: 1 5 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "5 5 4"
                }
            },
            "Step 1": {
                "Step": "9 - 5 = 4 (left: 5 5 4) -> 5 * 5 = 25 (left: 4 25)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 5 = 4 (left: 5 5 4) -> 5 * 5 = 25 (left: 4 25) -> 25 - 4 = 21 (left: 21)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 5 9"
                }
            },
            "Step 3": {
                "Step": "5 / 5 = 1 (left: 1 5 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> 9 - 1 = 8 (left: 5 8)"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 - 5 = 4 (left: 5 5 4)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 5 9"
                }
            },
            "Step 1": {
                "Step": "5 + 5 = 10 (left: 10 5 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 10 + 5 = 15 (left: 15 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "15 9"
                }
            },
            "Step 3": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 10 + 5 = 15 (left: 15 9) -> 15 - 9 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 10 + 5 = 15 (left: 15 9) -> 15 - 9 = 6 (left: 6) -> 6 * 2 = 12 (left: 12)"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 + 5 = 10 (left: 5 10 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 5 9"
                }
            },
            "Step 1": {
                "Step": "5 * 5 = 25 (left: 25 5 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 5 = 25 (left: 25 5 9) -> 25 / 9 = 2.7777777777777777 (left: 2.777777777777777",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "15 9"
                }
            },
            "Step 3": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 10 + 5 = 15 (left: 15 9) -> 15 + 9 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 10 + 5 = 15 (left: 15 9) -> 15 + 9 = 24 (left: 24) -> Answer: ((5 + 5) + 5) + 9 = 24"
            }
        },
        "Input": "5 5 5 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 1
            }
        ]
    },
    "895": {
        "puzzle": "5 5 6 11",
        "Agent 0": {
            "Step 0": {
                "Step": "5 + 5 = 10 (left: 6 10 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 6 11"
                }
            },
            "Step 1": {
                "Step": "11 - 6 = 5 (left: 5 6 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 6 = 5 (left: 5 6  -> 6 - 5 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 6 11"
                }
            },
            "Step 3": {
                "Step": "5 * 5 = 25 (left: 6 11 25)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 5 = 25 (left: 6 11 25) -> 11 / 6 = 1.83 (left: 1.83 25)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 6 11"
                }
            },
            "Step 5": {
                "Step": "5 + 5 = 10 (left: 6 10 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 5 = 10 (left: 6 10 11) -> 6 + 10 = 16 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "8 24"
                }
            },
            "Step 7": {
                "Step": "5 + 5 = 10 (left: 6 10 11) -> 20 - 5 = 15 (left: 3) -> 3 * 8 = 24 (left: 8 24) -> 8 + 24 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "8 24"
                }
            },
            "Step 8": {
                "Step": "5 + 5 = 10 (left: 6 10 11) -> 20 - 5 = 15 (left: 3) -> 3 * 8 = 24 (left: 8 24) -> 8 * 3 = 24 (left: 24)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 * 5 = 25 (left: 6 11 25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 6 11"
                }
            },
            "Step 1": {
                "Step": "5 * 6 = 30 (left: 30 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 6 = 30 (left: 30 11) -> 30 * 11 = 330 (left: 330)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 10 11"
                }
            },
            "Step 3": {
                "Step": "5 + 5 = 10 (left: 6 10 11) -> 20 - 5 = 15 (left: 3)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 5 = 10 (left: 6 10 11) -> 20 - 5 = 15 (left: 3) -> 3 * 8 = 24 (left: 8 24)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 6 11"
                }
            },
            "Step 5": {
                "Step": "5 * 6 = 30 (left: 11 30)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 6 = 30 (left: 11 30) -> 11 * 30 = 330 (left: 330)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "8 24"
                }
            },
            "Step 7": {
                "Step": "5 + 5 = 10 (left: 6 10 11) -> 20 - 5 = 15 (left: 3) -> 3 * 8 = 24 (left: 8 24) -> 24 - 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "8 24"
                }
            },
            "Step 8": {
                "Step": "5 + 5 = 10 (left: 6 10 11) -> 20 - 5 = 15 (left: 3) -> 3 * 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 5 = 11 (left: 5 11 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 6 11"
                }
            },
            "Step 1": {
                "Step": "5 + 5 = 10 (left: 6 10 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 5 = 10 (left: 6 10 11) -> 10 / 6 = 1.67 (left: 1.67 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 6 11"
                }
            },
            "Step 3": {
                "Step": "6 - 5 = 1 (left: 1 5 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 - 5 = 1 (left: 1 5  -> 1 * 5 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 10 11"
                }
            },
            "Step 5": {
                "Step": "5 + 5 = 10 (left: 6 10 11) -> 10 + 11 = 21 (left: 6 21)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 5 = 10 (left: 6 10 11) -> 10 + 11 = 21 (left: 6 21) -> Input: 3.5 7 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "8 24"
                }
            },
            "Step 7": {
                "Step": "5 + 5 = 10 (left: 6 10 11) -> 20 - 5 = 15 (left: 3) -> 3 * 8 = 24 (left: 8 24) -> 24 - 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "8 24"
                }
            },
            "Step 8": {
                "Step": "5 + 5 = 10 (left: 6 10 11) -> 20 - 5 = 15 (left: 3) -> 3 * 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8)",
                "Pruning": null
            }
        },
        "Input": "5 5 6 11",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "896": {
        "puzzle": "6 8 9 9",
        "Agent 0": {
            "Step 0": {
                "Step": "6 + 8 = 14 (left: 9 9 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 9"
                }
            },
            "Step 1": {
                "Step": "6 * 8 = 48 (left: 9 9 48)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 8 = 48 (left: 9 9 48) -> 9 * 9 = 81 (left: 48 81)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 9"
                }
            },
            "Step 3": {
                "Step": "9 - 6 = 3 (left: 3 8 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 6 = 3 (left: 3 8 9) -> 8 - 3 = 5 (left: 5 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 9"
                }
            },
            "Step 5": {
                "Step": "6 + 8 = 14 (left: 9 9 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 8 = 14 (left: 9 9 14) -> 14 / 9 = 1.555555",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "1 8 15"
                }
            },
            "Step 7": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 9 - 8 = 1 (left: 1 8 15) -> 8 - 1 = 7 (left: 7 15)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 9 - 8 = 1 (left: 1 8 15) -> 8 - 1 = 7 (left: 7 15) -> 7 * 15 = 105 (left: 105)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 / 6 = 1.33 (left: 1.",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 9"
                }
            },
            "Step 1": {
                "Step": "6 + 8 = 14 (left: 9 9 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 8 = 14 (left: 9 9 14) -> 9 * 9 = 81 (left: 14 81)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 9"
                }
            },
            "Step 3": {
                "Step": "9 - 8 = 1 (left: 6 1 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 8 = 1 (left: 6 1 9) -> 9 / 1 = 9 (left: 6 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 9"
                }
            },
            "Step 5": {
                "Step": "8 / 6 = 1.33 (left: 1.33 9 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 / 6 = 1.33 (left: 1.33 9 9) -> 9 - 1.33 = 7.67 (left: 7.67 9)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "1 8 15"
                }
            },
            "Step 7": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 9 - 8 = 1 (left: 1 8 15) -> 15 / 8 = 1 (left: 1 1)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 9 - 8 = 1 (left: 1 8 15) -> 15 / 8 = 1 (left: 1 1) -> 1 * 1 = 1 (left: 1)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 + 6 = 15 (left: 8 9 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 9"
                }
            },
            "Step 1": {
                "Step": "9 + 6 = 15 (left: 8 9 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 15 - 8 = 7 (left: 8 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 9"
                }
            },
            "Step 3": {
                "Step": "6 + 8 = 14 (left: 9 9 14)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 8 = 14 (left: 9 9 14) -> 9 - 9 = 0 (left: 0 14)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 9"
                }
            },
            "Step 5": {
                "Step": "9 + 6 = 15 (left: 8 9 15)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 9 - 8 = 1 (left: 1 8 15)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "1 8 15"
                }
            },
            "Step 7": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 9 - 8 = 1 (left: 1 8 15) -> 8 - 1 = 7 (left:",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 9 - 8 = 1 (left: 1 8 15) -> 8 - 1 = 7 (left: -> 1 + 8 = 9 (left: 9)",
                "Pruning": "NA"
            }
        },
        "Input": "6 8 9 9",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "897": {
        "puzzle": "3 3 6 13",
        "Agent 0": {
            "Step 0": {
                "Step": "6 * 3 = 18 (left: 18 6 ",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 6 13"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 6 6 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 6 6 13) -> 6 / 6 = 1 (left: 1 13)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 6 13"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 6 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 * 6 = 54 (left: 54 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 5 7\nSteps:\n3 + 7 = 10 (left: 2 5 10)\n2 * 5 = 10 (left: 10 10)\n10 * 10 = 100 (left: 100)\n100 / 4 = 24 (left: 24)\nAnswer: ((2 * 5) + (3 + 7)) / 4 = 24",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 4 6\nSteps:\n3 * 4 = 12 (left: 2 6 12)\n6 * 2 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (3 * 4) + (6 * 2) = 24",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (3 * 6) + (13 - 3) = 24 -> Input: 1 2 3 8\nSteps:\n2 * 8 = 16 (left: 1 3 16)\n16 - 3 = 13 (left: 1 13)\n13 + 1 = 14 (left: 14)\n14 * 2 = 28 (left: 28)\n28 - 14 = 14 (left: 14)\n14 + 3 = 17 (left: 17)\n17 * ",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "24"
                }
            },
            "Step 8": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 5 7\nSteps:\n3 + 5 = 8 (left: 2 7 8)\n2 * 7 = 14 (left: 14 8)\n14 - 8 = 6 (left: 6)\n6 * 4 = 24\nAnswer: (2 * 7) - (3 + 5) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 3 7 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "18 6 "
                }
            },
            "Step 1": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "18 6 "
                }
            },
            "Step 3": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (3 * 6) + (13 - 3) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 6 13"
                }
            },
            "Step 5": {
                "Step": "13 - 6 = 7 (left: 3 7 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 6 = 7 (left: 3 7 13) -> 7 - 3 = 4 (left: 4 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 6 8\nSteps:\n3 * 8 = 24 (left: 2 6 24)\n2 * 6 = 12 (left: 12 24)\n12 + 24 = 36 (left: 36)\nAnswer: (2 * 3) * (8 - 6) = 24",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "24"
                }
            },
            "Step 8": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (3 * 6) + (13 - 3) = 24 -> Input: 2 3 4 6\nSteps:\n3 + 6 = 9 (left: 2 4 9)\n9 * 2 = 18 (left: 4 18)\n18 - 4 = 14 (left: 14)\n14 + 4 = 18 (left: 18)\n18 + 6 = 24 (left: 24)\nAnswer: ((3 + 6) * 2) + 4 +",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 6 6 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "18 6 "
                }
            },
            "Step 1": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 / 6 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 / 6 = 3 (left: 3) -> There are no possible next steps with the input of 3.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 4 6\nSteps:\n2 * 3 = 6 (left: 4 6 6)\n6 + 4 = 10 (left: 10 6)\n10 * 6 = 60 (left: 60)\nAnswer: (2 * 3) * (4 + 6) = 24",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "24"
                }
            },
            "Step 4": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 7 3 5 2\nSteps:\n7 - 2 = 5 (left: 3 5 5)\n5 * 5 = 25 (left: 3 25)\n25 - 3 = 22 (left: 22)\nAnswer: (7 - 2) * (5 * 5) = 24",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 4 6\nSteps:\n2 * 3 = 6 (left: 4 6 6)\n6 + 4 = 10 (left: 10 6)\n10 + 6 = 16 (left: 16)\n16 + 8 = 24 (left: 24)\nAnswer: ((2 * 3) + 4) + 6 = 24",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (3 * 6) + (13 - 3) = 24 -> Input: 2 3 4 6\nSteps:\n2 * 3 = 6 (left: 4 6 6)\n6 + 4 = 10 (left: 10 6)\n10 * 6 = 60 (left: 60)\nAnswer: (2 * 3) * (4 + 6) = 60",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 5 7\nSteps:\n2 + 3 = 5 (left: 5 7 5)\n5 + 5 = 10 (left: 7 10)\n10 * 7 = 70 (left: 70)\n70 / 5 = 14 (left: 14)\n14 - 10 = 4 (left: 4)\n4 * 5 = 20 (left: 20)\n20 + ",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "24"
                }
            },
            "Step 8": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 5 6\nSteps:\n5 + 3 = 8 (left: 2 6 8)\n8 * 2 = 16 (left: 6 16)\n16 + 6 = 22 (left: 22)\n22 + 2 = 24 (left: 24)\nAnswer: ((5 + 3) * 2) + 6 + 2 = 24",
                "Pruning": "NA"
            }
        },
        "Input": "3 3 6 13",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "898": {
        "puzzle": "6 8 9 11",
        "Agent 0": {
            "Step 0": {
                "Step": "6 * 8 = 48 (left: 9 11 48)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 11"
                }
            },
            "Step 1": {
                "Step": "9 + 6 = 15 (left: 8 11 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 6 = 15 (left: 8 11 15) -> 15 - 8 = 7 (left: 7 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 11"
                }
            },
            "Step 3": {
                "Step": "11 - 6 = 5 (left: 5 8 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 6 = 5 (left: 5 8 9) -> 8 - 5 = 3 (left: 3 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "8 24"
                }
            },
            "Step 5": {
                "Step": "9 - 6 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 8 24) -> 24 - 8 = 16 (left: 16)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 6 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 8 24) -> 24 - 8 = 16 (left: 16) -> No possible next steps, as there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "8 24"
                }
            },
            "Step 7": {
                "Step": "9 - 6 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 8 24) -> 24 - 8 = 16 (left: 16 8)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 6 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 8 24) -> 24 - 8 = 16 (left: 16 8) -> 16 - 8 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "3 - 14 is not a valid operation"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 + 6 = 15 (left: 8 11 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 11"
                }
            },
            "Step 1": {
                "Step": "6 * 8 = 48 (left: 9 11 48)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 8 = 48 (left: 9 11 48) -> 48 / 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 11"
                }
            },
            "Step 3": {
                "Step": "9 - 6 = 3 (left: 3 8 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 6 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 8 24)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 11"
                }
            },
            "Step 5": {
                "Step": "6 * 8 = 48 (left: 9 11 48)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 8 = 48 (left: 9 11 48) -> 48 / 9 = 5 (left: 5 48)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "5 48"
                }
            },
            "Step 7": {
                "Step": "6 * 8 = 48 (left: 9 11 48) -> 48 / 9 = 5 (left: 5 48) -> 48 / 5 = 9.6 (left: 9.6)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 * 8 = 48 (left: 9 11 48) -> 48 / 9 = 5 (left: 5 48) -> 48 / 5 = 9.6 (left: 9.6) -> There are no possible next steps with the current input of 9.6.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 8 = 14 (left: 9 11 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 11"
                }
            },
            "Step 1": {
                "Step": "6 * 8 = 48 (left: 9 11 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 8 = 48 (left: 9 11  -> 9 - 11 = -2 (left: -2 11)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 11"
                }
            },
            "Step 3": {
                "Step": "8 - 6 = 2 (left: 2 9 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 - 6 = 2 (left: 2 9 11) -> 11 - 2 = 9 (left: 9 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "8 24"
                }
            },
            "Step 5": {
                "Step": "9 - 6 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 6 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3) -> 3 - 14 is not a valid operation",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "8 24"
                }
            },
            "Step 7": {
                "Step": "9 - 6 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 8 24) -> 24 - 8 = 16 (left: 16)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 6 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 8 24) -> 24 - 8 = 16 (left: 16) -> There are no possible next steps with just the number 16.",
                "Pruning": null
            }
        },
        "Input": "6 8 9 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "899": {
        "puzzle": "1 3 3 11",
        "Agent 0": {
            "Step 0": {
                "Step": "11 - 1 = 10 (left: 3 3 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 3 11"
                }
            },
            "Step 1": {
                "Step": "3 - 1 = 2 (left: 2 3 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 - 1 = 2 (left: 2 3 11) -> 2 + 3 = 5 (left: 5 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 3 11"
                }
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 3 4 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 4 - 3 = 1 (left: 1 11)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1 11"
                }
            },
            "Step 5": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 4 - 3 = 1 (left: 1 11) -> 11 * 1 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 4 - 3 = 1 (left: 1 11) -> 11 * 1 = 11 (left: 11) -> 11 * 8 = 88 (left: 8)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "1 11"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1 11"
                }
            },
            "Step 7": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 4 - 3 = 1 (left: 1 11) -> 1 / 11 = 0.09090909090909091 (left: 0.090909",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 4 - 3 = 1 (left: 1 11) -> 1 / 11 = 0.09090909090909091 (left: 0.090909 -> 0.090909 * 0.090909 = 0.00826446",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 1 9 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 3 11"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 1 9 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 1 9 11) -> 9 / 1 = 9 (left: 9 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 3 11"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 1 9 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 1 9 11) -> 9 - 1 = 8 (left: 8 11)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 3 11"
                }
            },
            "Step 5": {
                "Step": "1 + 3 = 4 (left: 3 4 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 11 / 3 = 3 with a remainder of 2 (left: 2 4 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1 11"
                }
            },
            "Step 7": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 4 - 3 = 1 (left: 1 11) -> 1 * 11 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 4 - 3 = 1 (left: 1 11) -> 1 * 11 = 11 (left: 11) -> There are no possible next steps with the input of 11.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 3 4 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 3 11"
                }
            },
            "Step 1": {
                "Step": "3 - 1 = 2 (left: 2 3 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 - 1 = 2 (left: 2 3 11) -> 11 - 2 = 9 (left: 3 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 3 11"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 1 9 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 1 9 11) -> 1 * 9 = 9 (left: 9 11)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 4 11"
                }
            },
            "Step 5": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 4 * 3 = 12 (left: 12 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 4 * 3 = 12 (left: 12 11) -> 12 / 11 = 1.0909090909090908 (left: 1.0909090909090908)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1 11"
                }
            },
            "Step 7": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 4 - 3 = 1 (left: 1 11) -> 1 * 11 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 4 - 3 = 1 (left: 1 11) -> 1 * 11 = 11 (left: 11) -> 11 + 2 = 13",
                "Pruning": null
            }
        },
        "Input": "1 3 3 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1050": {
        "puzzle": "4 10 11 13",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 11 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 11 13"
                }
            },
            "Step 1": {
                "Step": "10 - 4 = 6 (left: 6 11 13) -> 11 / 6 = 1.83 (left: 1.83 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 6 11 13) -> 11 / 6 = 1.83 (left: 1.83 13) -> 1.83 * 13 = 23.79 (left: 23.79)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 11 13"
                }
            },
            "Step 3": {
                "Step": "10 / 4 = 2.5 (left: 2.5 11 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 / 4 = 2.5 (left: 2.5 11 13) -> 2.5 + 11 = 13.5 (left: 13.5 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 11 13"
                }
            },
            "Step 5": {
                "Step": "4 + 10 = 14 (left: 11 13 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 14 / 11 = 1 (left:",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "13.5 13"
                }
            },
            "Step 7": {
                "Step": "10 / 4 = 2.5 (left: 2.5 11 13) -> 2.5 + 11 = 13.5 (left: 13.5 13) -> 13.5 / 13 = 1.0384615384615385 (left: 1.0384615384615385 13)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 / 4 = 2.5 (left: 2.5 11 13) -> 2.5 + 11 = 13.5 (left: 13.5 13) -> 13.5 / 13 = 1.0384615384615385 (left: 1.0384615384615385 13) -> 1.0384615384615385 * 13 = 13.5 (left: 13.5)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 10 = 3 (left: 3 11 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 11 13"
                }
            },
            "Step 1": {
                "Step": "4 * 10 = 40 (left: 40 11 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 10 = 40 (left: 40 11 13) -> 40 - 11 = 29 (left: 29 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 11 13"
                }
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 6 10 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 6 10 13) -> Input: 4 7 9 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 11 13"
                }
            },
            "Step 5": {
                "Step": "13 - 11 = 2 (left: 4 10 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 11 = 2 (left: 4 10 2) -> 10 - 4 = 6 (left: 6 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "Input: 4 7 9 5"
                }
            },
            "Step 7": {
                "Step": "10 - 4 = 6 (left: 6 10 13) -> Input: 4 7 9 5 -> 9 - 7 = 2 (left: 4 2 5)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 4 = 6 (left: 6 10 13) -> Input: 4 7 9 5 -> 9 - 7 = 2 (left: 4 2 5) -> 2 + 5 = 7 (left: 4 7)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "11 + 4 = 15 (left: 10 13 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 11 13"
                }
            },
            "Step 1": {
                "Step": "11 + 4 = 15 (left: 10 13 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 + 4 = 15 (left: 10 13 15) -> 15 / 10 = 1.5 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 11 13"
                }
            },
            "Step 3": {
                "Step": "10 / 4 = 2.5 (left: 2.5 11 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 / 4 = 2.5 (left: 2.5 11 13) -> 2.5 * 11 = 27.5 (left: 27.5 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 11 13"
                }
            },
            "Step 5": {
                "Step": "13 - 4 = 9 (left: ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 4 = 9 (left:  -> It seems like the input was not provided. Could you please provide the numbers so we can generate possible next steps?",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "14 / 11 = 1 (left:"
                }
            },
            "Step 7": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 14 / 11 = 1 (left: -> 11 + 2 = 13 (left: 3 5 13)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 14 / 11 = 1 (left: -> 11 + 2 = 13 (left: 3 5 13) -> 5 + 13 = 18 (left: 3 18)",
                "Pruning": null
            }
        },
        "Input": "4 10 11 13",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1051": {
        "puzzle": "2 6 6 7",
        "Agent 0": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 5 6 6)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "5 36"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 6 6 5) -> 6 * 6 = 36 (left: 5 36) -> Possible next steps:",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 6 6 5) -> 6 * 6 = 36 (left: 5 36) -> Possible next steps: -> There are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 6 7"
                }
            },
            "Step 5": {
                "Step": "2 + 6 = 8 (left: 6 7 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 6 = 8 (left: 6 7 8) -> 6 / 7 = 0.857 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": ""
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 / 5 = 1.2 (left: 1.2 6) ->  -> It seems like the input is missing. Could you please provide the input for me to generate the possible next steps?",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 / 5 = 1.2 (left: 1.2 6) ->  -> It seems like the input is missing. Could you please provide the input for me to generate the possible next steps? -> Without knowing the input numbers, I am unable to generate the possible next steps. Please provide the input numbers for me to proceed.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 - 6 = 1 (left: 2 1 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 6 7"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 6 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 6 7) -> 6 / 3 = 2 (left: 2 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 * 5 = 30 (left: 30)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 * 5 = 30 (left: 30) -> 30 * 2 = 60 (left: 60)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 / 5 = 1.2 (left: 1.2 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 / 5 = 1.2 (left: 1.2 6) -> ",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": ""
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 / 5 = 1.2 (left: 1.2 6) ->  -> It seems like you did not provide an input for the next step. Please provide the input numbers so that I can generate possible next steps for you.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 / 5 = 1.2 (left: 1.2 6) ->  -> It seems like you did not provide an input for the next step. Please provide the input numbers so that I can generate possible next steps for you. -> There are no possible next steps because no input was provided. Please enter numbers to continue.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 4 6 7)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 6 7"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 6 6 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 6 6 5) -> 6 * 6 = 36 (left: 5 36)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 6 7"
                }
            },
            "Step 3": {
                "Step": "2 + 6 = 8 (left: 6 7 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 6 = 8 (left: 6 7 8) -> 8 - 6 = 2 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 / 5 = 1.2 (left: 1.2 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 / 5 = 1.2 (left: 1.2 6) -> 1.2 * 6 = 7.2 (left: 7.2)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": ""
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 / 5 = 1.2 (left: 1.2 6) ->  -> There are no more possible next steps as all combinations have been exhausted.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 / 5 = 1.2 (left: 1.2 6) ->  -> There are no more possible next steps as all combinations have been exhausted. -> There are no more possible next steps as all combinations have been exhausted.",
                "Pruning": null
            }
        },
        "Input": "2 6 6 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1052": {
        "puzzle": "7 10 10 12",
        "Agent 0": {
            "Step 0": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 10 10 12"
                }
            },
            "Step 1": {
                "Step": "10 + 10 = 20 (left: 7 20 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 10 = 20 (left: 7 20  -> 7 * 20 = 140 (left: 140)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 10 10 12"
                }
            },
            "Step 3": {
                "Step": "7 * 10 = 70 (left: 10 70 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 * 10 = 70 (left: 10 70 12) -> 70 - 10 = 60 (left: 60 12)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "60 12"
                }
            },
            "Step 5": {
                "Step": "7 * 10 = 70 (left: 10 70 12) -> 70 - 10 = 60 (left: 60 12) -> 60 / 12 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 10 = 70 (left: 10 70 12) -> 70 - 10 = 60 (left: 60 12) -> 60 / 12 = 5 (left: 5) -> There are no possible next steps with just the number 5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "22"
                }
            },
            "Step 7": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 12 + 10 = 22 (left: 22) -> No further steps can be taken with the number 22.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 12 + 10 = 22 (left: 22) -> No further steps can be taken with the number 22. -> No further steps can be taken with the number 22.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 - 7 = 3 (left: 3 10 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 10 10 12"
                }
            },
            "Step 1": {
                "Step": "10 * 7 = 70 (left: 70 10 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 12 + 10 = 22 (left: 22)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "22"
                }
            },
            "Step 3": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 12 + 10 = 22 (left: 22) -> 22 + 8 = 30 (left: 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 12 + 10 = 22 (left: 22) -> 22 + 8 = 30 (left: 8) -> 8 + 8 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 10 10 12"
                }
            },
            "Step 5": {
                "Step": "7 + 10 = 17 (left: 10 10 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 10 = 17 (left: 10 10 12) -> 12 - 10 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "22"
                }
            },
            "Step 7": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 12 + 10 = 22 (left: 22) -> There are no possible next steps with the input 22.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 12 + 10 = 22 (left: 22) -> There are no possible next steps with the input 22. -> There are no possible next steps with the input 22.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 / 10 = 1 (left: 7 1 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 10 10 12"
                }
            },
            "Step 1": {
                "Step": "12 - 7 = 5 (left: ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 7 = 5 (left:  -> It seems there was no input provided. If you could provide the numbers, I can generate the possible next steps for you.",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 10 10 12"
                }
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 3 10 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 10 / 3 = 3.33 (left: 3 12 3.33)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 10 10 12"
                }
            },
            "Step 5": {
                "Step": "10 / 10 = 1 (left: 7 1 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 / 10 = 1 (left: 7 1 12) -> 12 + 7 = 19 (left: 7 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "60 12"
                }
            },
            "Step 7": {
                "Step": "7 * 10 = 70 (left: 10 70 12) -> 70 - 10 = 60 (left: 60 12) -> 60 - 12 = 48 (left: 48)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 * 10 = 70 (left: 10 70 12) -> 70 - 10 = 60 (left: 60 12) -> 60 - 12 = 48 (left: 48) -> 48 / 2 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "8 + 8 = 16"
                }
            }
        },
        "Input": "7 10 10 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1053": {
        "puzzle": "2 5 7 11",
        "Agent 0": {
            "Step 0": {
                "Step": "5 * 2 = 10 (left: 10 7 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 7 11"
                }
            },
            "Step 1": {
                "Step": "2 * 5 = 10 (left: 10 7 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 5 = 10 (left: 10 7 11) -> 7 - 10 = -3 (left: -3 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 7 11"
                }
            },
            "Step 3": {
                "Step": "2 + 5 = 7 (left: 7 7 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 5 = 7 (left: 7 7 11) -> 7 - 7 = 0 (left: 0 11)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 7 11"
                }
            },
            "Step 5": {
                "Step": "11 - 5 = 6 (left: 2 6 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 5 = 6 (left: 2 6 7) -> 2 * 6 = 12 (left: 7 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "2 13"
                }
            },
            "Step 7": {
                "Step": "11 - 5 = 6 (left: 2 6 7) -> 6 + 7 = 13 (left: 2 13) -> 2 + 13 = 15 (left: 15) ",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 5 = 6 (left: 2 6 7) -> 6 + 7 = 13 (left: 2 13) -> 2 + 13 = 15 (left: 15)  -> 15 - 8 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "There are no possible next steps with the input of 0."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 + 7 = 12 (left: 2 12 11)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 7 11"
                }
            },
            "Step 1": {
                "Step": "2 + 5 = 7 (left: 7 7 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 5 = 7 (left: 7 7 11) -> 11 + 7 = 18 (left: 7 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 7 11"
                }
            },
            "Step 3": {
                "Step": "5 + 7 = 12 (left: 2 12 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 11 - 2 = 9 (left: 9 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 7 11"
                }
            },
            "Step 5": {
                "Step": "5 + 7 = 12 (left: 2 12 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 11 + 2 = 13 (left: 12 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "0 11"
                }
            },
            "Step 7": {
                "Step": "2 + 5 = 7 (left: 7 7 11) -> 7 - 7 = 0 (left: 0 11) -> 11 + 0 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 5 = 7 (left: 7 7 11) -> 7 - 7 = 0 (left: 0 11) -> 11 + 0 = 11 (left: 11) -> There are no possible next steps with the input \"11\".",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "11 - 5 = 6 (left: 2 6 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 7 11"
                }
            },
            "Step 1": {
                "Step": "2 + 5 = 7 (left: 7 7 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 5 = 7 (left: 7 7 11) -> 7 - 7 = 0 (left: 0 11)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 7 11"
                }
            },
            "Step 3": {
                "Step": "11 - 5 = 6 (left: 2 6 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 5 = 6 (left: 2 6 7) -> 6 + 7 = 13 (left: 2 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "0 11"
                }
            },
            "Step 5": {
                "Step": "2 + 5 = 7 (left: 7 7 11) -> 7 - 7 = 0 (left: 0 11) -> 0 / 11 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 5 = 7 (left: 7 7 11) -> 7 - 7 = 0 (left: 0 11) -> 0 / 11 = 0 (left: 0) -> There are no possible next steps with the input of 0.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "0 11"
                }
            },
            "Step 7": {
                "Step": "2 + 5 = 7 (left: 7 7 11) -> 7 - 7 = 0 (left: 0 11) -> 0 / 11 = 0 (left: 11)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 5 = 7 (left: 7 7 11) -> 7 - 7 = 0 (left: 0 11) -> 0 / 11 = 0 (left: 11) -> 11 / 8 = 1.375 (left: 8)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "There are no possible next steps with the input of 0."
                }
            }
        },
        "Input": "2 5 7 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1054": {
        "puzzle": "4 4 6 9",
        "Agent 0": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 9"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 6 16 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 16 - 9 = 7 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 9"
                }
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 4 5 6)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 4 = 5 (left: 4 5 6) -> 5 + 6 = 11 (left: 4 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 9"
                }
            },
            "Step 5": {
                "Step": "4 * 4 = 16 (left: 6 9 16)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 4 = 16 (left: 6 9 16) -> 6 * 9 = 54 (left: 54 16)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "54 16"
                }
            },
            "Step 7": {
                "Step": "4 * 4 = 16 (left: 6 9 16) -> 6 * 9 = 54 (left: 54 16) -> 54 * 16 = 864 (left: 864)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 * 4 = 16 (left: 6 9 16) -> 6 * 9 = 54 (left: 54 16) -> 54 * 16 = 864 (left: 864) -> 86 - 4 = 82 (left: 82)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 6 16 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 9"
                }
            },
            "Step 1": {
                "Step": "6 - 4 = 2 (left: 2 4 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 4 = 2 (left: 2 4  -> 2 * 4 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 9"
                }
            },
            "Step 3": {
                "Step": "4 * 4 = 16 (left: 6 16 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 9 * 6 = 54 (left: 16 54)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 9"
                }
            },
            "Step 5": {
                "Step": "4 * 4 = 16 (left: 6 16 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 9 / 6 = 1.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "10 13"
                }
            },
            "Step 7": {
                "Step": "6 + 4 = 10 (left: 4 10 9) -> 9 + 4 = 13 (left: 10 13) -> 10 / 13 = 0.769230769 (left: 0.769230769)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 4 = 10 (left: 4 10 9) -> 9 + 4 = 13 (left: 10 13) -> 10 / 13 = 0.769230769 (left: 0.769230769) -> 0.769230769 + 0.769230769 = 1.538461538",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 6 16 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 9"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 4 6 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 4 6 5) -> 5 * 4 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 9"
                }
            },
            "Step 3": {
                "Step": "6 + 4 = 10 (left: 4 10 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 4 = 10 (left: 4 10 9) -> 9 + 4 = 13 (left: 10 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 9"
                }
            },
            "Step 5": {
                "Step": "9 - 6 = 3 (left: 4 4 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 6 = 3 (left: 4 4 3) -> 4 * 3 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "10 13"
                }
            },
            "Step 7": {
                "Step": "6 + 4 = 10 (left: 4 10 9) -> 9 + 4 = 13 (left: 10 13) -> 10 * 13 = 130 (left: 130)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 4 = 10 (left: 4 10 9) -> 9 + 4 = 13 (left: 10 13) -> 10 * 13 = 130 (left: 130) -> 130 + 2 = 132 (left: 2)",
                "Pruning": "NA"
            }
        },
        "Input": "4 4 6 9",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            }
        ]
    },
    "1055": {
        "puzzle": "6 9 10 12",
        "Agent 0": {
            "Step 0": {
                "Step": "10 + 12 = 22 (left: 6 9 22)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 12"
                }
            },
            "Step 1": {
                "Step": "6 + 9 = 15 (left: 10 12 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 9 = 15 (left: 10 12 15) -> Input: 5 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 12"
                }
            },
            "Step 3": {
                "Step": "6 * 9 = 54 (left: 10 12 54)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 * 9 = 54 (left: 10 12 54) -> 54 / 12 = 4.5 (left: 10 4.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 12"
                }
            },
            "Step 5": {
                "Step": "9 * 10 = 90 (left: 6 12 90)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 * 10 = 90 (left: 6 12 90) -> 12 * 6 = 72 (left: 72 90)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "18 90"
                }
            },
            "Step 7": {
                "Step": "9 * 10 = 90 (left: 6 12 90) -> 12 + 6 = 18 (left: 18 90) -> 90 - 18 = 72 (left: 72)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 * 10 = 90 (left: 6 12 90) -> 12 + 6 = 18 (left: 18 90) -> 90 - 18 = 72 (left: 72) -> There are no possible next steps for the number 72 since it is already a single number and cannot be combined with any other numbers in the input.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 * 12 = 120 (left: 6 9 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 12"
                }
            },
            "Step 1": {
                "Step": "6 / 9 = 0.67 (left: 0.67 9 10 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 9 = 0.67 (left: 0.67 9 10 12) -> 12 - 0.67 = 11.33 (left: 9 10 11.33)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 12"
                }
            },
            "Step 3": {
                "Step": "9 * 10 = 90 (left: 6 12 90)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 * 10 = 90 (left: 6 12 90) -> 12 + 6 = 18 (left: 18 90)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 12"
                }
            },
            "Step 5": {
                "Step": "6 * 9 = 54 (left: 10 12 54)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 9 = 54 (left: 10 12 54) -> 12 * 54 = 648 (left: 648)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "18 90"
                }
            },
            "Step 7": {
                "Step": "9 * 10 = 90 (left: 6 12 90) -> 12 + 6 = 18 (left: 18 90) -> 90 * 18 = 1620 (left: 1620)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 * 10 = 90 (left: 6 12 90) -> 12 + 6 = 18 (left: 18 90) -> 90 * 18 = 1620 (left: 1620) -> 1 * 6",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 + 12 = 22 (left: 6 9 22)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 12"
                }
            },
            "Step 1": {
                "Step": "9 + 10 = 19 (left: 6 12 19)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 6 + 12 = 18 (left: 18 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 12"
                }
            },
            "Step 3": {
                "Step": "6 * 9 = 54 (left: 10 12 54)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 * 9 = 54 (left: 10 12 54) -> 54 - 12 = 42 (left: 10 42)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 12"
                }
            },
            "Step 5": {
                "Step": "9 - 6 = 3 (left: 3 10 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 6 = 3 (left: 3 10 12) -> 12 - 3 = 9 (left: 9 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "18 90"
                }
            },
            "Step 7": {
                "Step": "9 * 10 = 90 (left: 6 12 90) -> 12 + 6 = 18 (left: 18 90) -> 18 / 90 = 0.2 (left: 0.2 18)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 * 10 = 90 (left: 6 12 90) -> 12 + 6 = 18 (left: 18 90) -> 18 / 90 = 0.2 (left: 0.2 18) -> 18 * 0.2 = 3.6 (left: 3.6)",
                "Pruning": "NA"
            }
        },
        "Input": "6 9 10 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            }
        ]
    },
    "1056": {
        "puzzle": "6 9 9 12",
        "Agent 0": {
            "Step 0": {
                "Step": "9 + 9 = 18 (left: 6 18 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 12"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 6 3 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 6 3 12) -> 6 + 3 = 9 (left: 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 12"
                }
            },
            "Step 3": {
                "Step": "6 * 9 = 54 (left: 9 12 54)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 * 9 = 54 (left: 9 12 54) -> 54 / 9 = 6 (left: 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 18 12"
                }
            },
            "Step 5": {
                "Step": "9 + 9 = 18 (left: 6 18 12) -> 18 / 6 = 3 (left: 3 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 9 = 18 (left: 6 18 12) -> 18 / 6 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "2 12"
                }
            },
            "Step 7": {
                "Step": "9 / 3 = 3 (left: 6 3 12) -> 6 / 3 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 / 3 = 3 (left: 6 3 12) -> 6 / 3 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10) -> 10 + 10 = 20 (left: 10 20)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: 3 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 12"
                }
            },
            "Step 1": {
                "Step": "9 - 6 = 3 (left: 3 9 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 6 = 3 (left: 3 9 12) -> 9 / 3 = 3 (left: 3 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 12"
                }
            },
            "Step 3": {
                "Step": "12 / 3 = 4 (left: 6 9 4)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 / 3 = 4 (left: 6 9 4) -> 9 + 4 = 13 (left: 6 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 12"
                }
            },
            "Step 5": {
                "Step": "9 / 3 = 3 (left: 6 3 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 / 3 = 3 (left: 6 3 12) -> 6 / 3 = 2 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "2 12"
                }
            },
            "Step 7": {
                "Step": "9 / 3 = 3 (left: 6 3 12) -> 6 / 3 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 / 3 = 3 (left: 6 3 12) -> 6 / 3 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10) -> 10 / 8 = 1.25 (left: 8)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 * 3 = 27 (left: 9 12 27)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 12"
                }
            },
            "Step 1": {
                "Step": "6 * 9 = 54 (left: 9 12 54)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 9 = 54 (left: 9 12 54) -> 54 - 9 = 45 (left: 12 45)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 12"
                }
            },
            "Step 3": {
                "Step": "6 * 9 = 54 (left: 9 9 54)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 * 9 = 54 (left: 9 9 54) -> 54 - 9 = 45 (left: 9 45)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 12"
                }
            },
            "Step 5": {
                "Step": "9 / 3 = 3 (left: 6 9 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 / 3 = 3 (left: 6 9 12) -> 12 - 6 = 6 (left: 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "2 12"
                }
            },
            "Step 7": {
                "Step": "9 / 3 = 3 (left: 6 3 12) -> 6 / 3 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 / 3 = 3 (left: 6 3 12) -> 6 / 3 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6) -> 6 - 8 = -2 (left: -2)",
                "Pruning": "NA"
            }
        },
        "Input": "6 9 9 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "1057": {
        "puzzle": "2 3 6 12",
        "Agent 0": {
            "Step 0": {
                "Step": "3 * 2 = 6 (left: 6 6 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> Possible",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> Possible -> It appears that the input is not clear. Please provide a valid input for the next steps to be determined.",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 12 - 6 = 6 (left: 6 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 12 - 6 = 6 (left: 6 12) -> 12 / 6 = 2 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 * 12 = 72 (left: 72)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 * 12 = 72 (left: 72) -> 7 + 2 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 7": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 12 - 6 = 6 (left: 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "2 12"
                }
            },
            "Step 8": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 12 - 6 = 6 (left: 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 + 12 = 14",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 * 2 = 6 (left: 6 6 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12) -> 12 / 1 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "0"
                }
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 6 6  -> 6 - 6 = 0 (left: 0)  -> There are no possible next steps with the input of 0.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 / 2 = 6 (left: 6 6  -> 6 - 6 = 0 (left: 0)  -> There are no possible next steps with the input of 0. -> There are no possible next steps with the input of 0.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12) -> 1 + 12 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "0"
                }
            },
            "Step 7": {
                "Step": "12 / 2 = 6 (left: 6 6  -> 6 - 6 = 0 (left: 0)  -> Invalid input. Please enter a valid list of numbers.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 / 2 = 6 (left: 6 6  -> 6 - 6 = 0 (left: 0)  -> Invalid input. Please enter a valid list of numbers. -> Please enter a valid list of numbers to continue.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 2 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 6 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 6 6 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 6 6  -> 6 - 6 = 0 (left: 0) ",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 * 12 = 144 (left: 144) ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 12 / 6 = 2 (left: 2 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "0"
                }
            },
            "Step 7": {
                "Step": "12 / 2 = 6 (left: 6 6  -> 6 - 6 = 0 (left: 0)  -> There are no possible next steps with the input of 0.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 / 2 = 6 (left: 6 6  -> 6 - 6 = 0 (left: 0)  -> There are no possible next steps with the input of 0. -> There are no possible next steps with the input of 0.",
                "Pruning": null
            }
        },
        "Input": "2 3 6 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1058": {
        "puzzle": "2 4 4 5",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 4 4 5)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 4 5"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 5 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 + 6 = 11 (left: 4 11)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "15 2"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30) -> 10 + 5 = 15 (left: 15 2) -> 15 * 2 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "4 11"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 + 6 = 11 (left: 4 11) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 4 5"
                }
            },
            "Step 5": {
                "Step": "4 * 4 = 16 (left: 5 16)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 4 = 16 (left: 5 16) -> 3 + 9 = 12 (left: 12 27)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "4 11"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 + 6 = 11 (left: 4 11) -> 11 - 4 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 + 6 = 11 (left: 4 11) -> 11 - 4 = 7 (left: 7) -> 7 / 8 = 0.875 (left: 0.875 8)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 - 4 = 1 (left: 2 4 1)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 4 5"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 5 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 4 5"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 4 5 6)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 4 / 5 = 0.8 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "4 11"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 + 6 = 11 (left: 4 11) -> 9 - 3 = 6 (left: 6 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 + 6 = 11 (left: 4 11) -> 9 - 3 = 6 (left: 6 5) -> 6 + 5 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "15 2"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "15 2"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30) -> 10 + 5 = 15 (left: 15 2) -> 15 - 2 = 13 (left: 13)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "15 2"
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30) -> 10 + 5 = 15 (left: 15 2) -> 15 * 2 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "There are no possible next steps for the input 2.75 as it is already a single number."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 4 5 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 5 6"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30) -> 10 + 5 = 15 (left: 15 2)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "15 2"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30) -> 10 + 5 = 15 (left: 15 2) -> 15 * 2 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "4 11"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 + 6 = 11 (left: 4 11) -> 11 - 4 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "4 11"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 + 6 = 11 (left: 4 11) -> 11 / 4 = 2.75 (left: 2.75)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 + 6 = 11 (left: 4 11) -> 11 / 4 = 2.75 (left: 2.75) -> There are no possible next steps for the input 2.75 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "4 11"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 + 6 = 11 (left: 4 11) -> 4 * 11 = 44 (left: 44)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 + 6 = 11 (left: 4 11) -> 4 * 11 = 44 (left: 44) -> There are no possible next steps for the input 44.",
                "Pruning": null
            }
        },
        "Input": "2 4 4 5",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1059": {
        "puzzle": "2 4 4 10",
        "Agent 0": {
            "Step 0": {
                "Step": "4 / 2 = 2 (left: 2 4 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 4 10"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 6 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 -",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 4 10"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 4 6 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 6 / 4 = 1.5 (left: 1.5 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 4 10"
                }
            },
            "Step 5": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 10 - 2 = 8 (left: 4 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 10 - 2 = 8 (left: 4 8) -> 8 - 4 = 4 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "16 8"
                }
            },
            "Step 7": {
                "Step": "10 - 2 = 8 (left: 4 4 8) -> 4 * 4 = 16 (left: 16 8) -> 16 - 8 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 2 = 8 (left: 4 4 8) -> 4 * 4 = 16 (left: 16 8) -> 16 - 8 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 / 2 = 2 (left: 2 4 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 4 10"
                }
            },
            "Step 1": {
                "Step": "4 * 2 = 8 (left: 4 8 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 2 = 8 (left: 4 8 10) -> Input: 6 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 4 10"
                }
            },
            "Step 3": {
                "Step": "10 - 2 = 8 (left: 4 4 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 2 = 8 (left: 4 4 8) -> 8 / 4 = 2 (left: 4 2)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 4 10"
                }
            },
            "Step 5": {
                "Step": "10 - 2 = 8 (left: 4 4 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 2 = 8 (left: 4 4 8) -> 4 * 4 = 16 (left: 16 8)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "16 8"
                }
            },
            "Step 7": {
                "Step": "10 - 2 = 8 (left: 4 4 8) -> 4 * 4 = 16 (left: 16 8) -> 16 * 8 = 128 (left: 128)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 2 = 8 (left: 4 4 8) -> 4 * 4 = 16 (left: 16 8) -> 16 * 8 = 128 (left: 128) -> 8 * 2 = 16 (left: 14 16)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 / 2 = 2 (left: 2 4 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 4 10"
                }
            },
            "Step 1": {
                "Step": "10 - 2 = 8 (left: 4 4 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 2 = 8 (left: 4 4 8) -> 8 - 4 = 4 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 4 10"
                }
            },
            "Step 3": {
                "Step": "10 + 2 = 12 (left: 4 4 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 + 2 = 12 (left: 4 4 12) -> 4 / 4 = 1 (left: 1 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 4 10"
                }
            },
            "Step 5": {
                "Step": "4 * 2 = 8 (left: 4 8 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 2 = 8 (left: 4 8 10) -> 4 + 8 = 12 (left: 10 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "16 8"
                }
            },
            "Step 7": {
                "Step": "10 - 2 = 8 (left: 4 4 8) -> 4 * 4 = 16 (left: 16 8) -> 16 * 8 = 128 (left: 8 128)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 2 = 8 (left: 4 4 8) -> 4 * 4 = 16 (left: 16 8) -> 16 * 8 = 128 (left: 8 128) -> 8 + 128 = 136 (left: 136)",
                "Pruning": "NA"
            }
        },
        "Input": "2 4 4 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            }
        ]
    },
    "1060": {
        "puzzle": "3 3 3 4",
        "Agent 0": {
            "Step 0": {
                "Step": "4 / 3 = 1.33 (left: 1.33 3 3)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 3 4"
                }
            },
            "Step 1": {
                "Step": "3 / 3 = 1 (left: 1 3 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 / 3 = 1 (left: 1 3 4) -> 3 + 1 = 4 (left: 4 4)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 4"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 3 4) -> 3 * 4 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 3 4) -> 3 * 4 = 12 (left: 12) -> 12 / 8 = 1.5 (left: 1.5)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "3 4"
                },
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 4"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 3 4) -> 4 - 3 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 3 4) -> 4 - 3 = 1 (left: 1) -> 1 * 1 = 1 (left: 1) ",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "3 4"
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 4"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 3 4) -> 5 + 10 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 3 4) -> 5 + 10 = 15 (left: 15) -> 15 + 2 = 17 (left: 15 17)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 / 3 = 1 (left: 1 3 4)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 3 4"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 3 4 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 3 4)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1.33 3 3"
                }
            },
            "Step 3": {
                "Step": "4 / 3 = 1.33 (left: 1.33 3 3) -> 1.33 + 3 = 4.33 (left: 3 4.33)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 / 3 = 1.33 (left: 1.33 3 3) -> 1.33 + 3 = 4.33 (left: 3 4.33) -> 3 / 4.33 = 0.69 (left: 0.69)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 3 4"
                }
            },
            "Step 5": {
                "Step": "3 - 3 = 0 (left: 0 3 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 - 3 = 0 (left: 0 3 4) -> 4 / 0 = undefined",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "3 4"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 3 4) -> 4 - 3 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 3 4) -> 4 - 3 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 3 6 4)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 3 4"
                }
            },
            "Step 1": {
                "Step": "3 / 3 = 1 (left: 1 3 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 / 3 = 1 (left: 1 3 4) -> 4 - 3 = 1 (left: 1 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 4"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 3 4) -> 3 * 4 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 3 4) -> 3 * 4 = 12 (left: 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "3 4"
                },
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 3 4"
                }
            },
            "Step 5": {
                "Step": "3 * 4 = 12 (left: ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 4 = 12 (left:  -> There are no possible next steps with the given input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "3 4"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 3 4) -> 3 * 4 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 3 4) -> 3 * 4 = 12 (left: 12) -> 12 - 8 = 4 (left: 4 8)",
                "Pruning": null
            }
        },
        "Input": "3 3 3 4",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1061": {
        "puzzle": "2 2 2 7",
        "Agent 0": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 2 2 5)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 7"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 2 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 2 7) -> 7 - 4 = 3 (left: 3 2)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 7"
                }
            },
            "Step 3": {
                "Step": "2 / 2 = 1 (left: 1 2 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 / 2 = 1 (left: 1 2 7) -> 7 / 2 = 3.5 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 7"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 2 4 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 2 4 7) -> 7 - 2 = 5 (left: 4 5)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 14"
                }
            },
            "Step 7": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 2 / 2 = 1 (left: 1 14) -> 14 - 1 = 13 (left: 13)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 2 / 2 = 1 (left: 1 14) -> 14 - 1 = 13 (left: 13) -> There are no possible next steps with the number 13.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 2 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 7"
                }
            },
            "Step 1": {
                "Step": "2 * 7 = 14 (left: 2 2 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 2 / 2 = 1 (left: 1 14)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 14"
                }
            },
            "Step 3": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 2 / 2 = 1 (left: 1 14) -> 14 - 1 = 13 (left: 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 2 / 2 = 1 (left: 1 14) -> 14 - 1 = 13 (left: 13) -> 13 - 2 = 11 (left: 11) ",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "1 14"
                },
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 7"
                }
            },
            "Step 5": {
                "Step": "7 / 2 = 3 (left: 2 3 ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 / 2 = 3 (left: 2 3  -> 2 * 3 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 14"
                }
            },
            "Step 7": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 2 / 2 = 1 (left: 1 14) -> 14 - 1 = 13 (left: 1 13)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 2 / 2 = 1 (left: 1 14) -> 14 - 1 = 13 (left: 1 13) -> 1 / 13 = 0.076923 (left: 0.076923)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "14 / 2 = 7"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 2 2 5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 7"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 2 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 2 7) -> 7 - 2 = 5 (left: 4 5)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 7"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 2 4 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 2 4 7) -> 7 / 2 = 3.5 (left: 3.5 4)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3.5 4"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 2 4 7) -> 7 / 2 = 3.5 (left: 3.5 4) -> 3.5 * 4 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 2 4 7) -> 7 / 2 = 3.5 (left: 3.5 4) -> 3.5 * 4 = 14 (left: 14) -> 14 / 2 = 7",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "14 / 2 = 7"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 2 4 7) -> 7 / 2 = 3.5 (left: 3.5 4) -> 3.5 * 4 = 14 (left: 14) -> 14 / 2 = 7 -> 7 + 2 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "14 / 2 = 7"
                }
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 2 4 7) -> 7 / 2 = 3.5 (left: 3.5 4) -> 3.5 * 4 = 14 (left: 14) -> 14 / 2 = 7 -> 7 + 2 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "14 / 2 = 7"
                }
            }
        },
        "Input": "2 2 2 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1062": {
        "puzzle": "4 9 10 11",
        "Agent 0": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 10 11 36)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 10 11"
                }
            },
            "Step 1": {
                "Step": "10 + 11 = 21 (left: 4 9 21)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 11 = 21 (left: 4 9 21) -> 21 - 4 = 17 (left: 9 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 10 11"
                }
            },
            "Step 3": {
                "Step": "10 + 11 = 21 (left: 4 9 21)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 + 11 = 21 (left: 4 9 21) -> 9 / 4 = 2.25 (left: 2.25 21)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 10 11"
                }
            },
            "Step 5": {
                "Step": "10 + 11 = 21 (left: 4 9 21)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 + 11 = 21 (left: 4 9 21) -> Input: 3 5 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "44 19"
                }
            },
            "Step 7": {
                "Step": "9 + 10 = 19 (left: 4 11 19) -> 4 * 11 = 44 (left: 44 19) -> 44 * 19 = 836 (left: 836)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 + 10 = 19 (left: 4 11 19) -> 4 * 11 = 44 (left: 44 19) -> 44 * 19 = 836 (left: 836) -> 83 * 6 = 498 (left: 498)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 / 4 = 2.25 (left: 2.25 10 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 10 11"
                }
            },
            "Step 1": {
                "Step": "11 - 4 = 7 (left: ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 4 = 7 (left:  -> Please provide a set of numbers to determine the possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 10 11"
                }
            },
            "Step 3": {
                "Step": "9 / 4 = 2.25 (left: 2.25 10 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 / 4 = 2.25 (left: 2.25 10 11) -> 2.25 * 10 = 22.5 (left: 11 22.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 10 11"
                }
            },
            "Step 5": {
                "Step": "9 + 10 = 19 (left: 4 11 19)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 10 = 19 (left: 4 11 19) -> 4 * 11 = 44 (left: 44 19)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "44 19"
                }
            },
            "Step 7": {
                "Step": "9 + 10 = 19 (left: 4 11 19) -> 4 * 11 = 44 (left: 44 19) -> 44 / 19 = 2.315789 (left: 2.315789)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 + 10 = 19 (left: 4 11 19) -> 4 * 11 = 44 (left: 44 19) -> 44 / 19 = 2.315789 (left: 2.315789) -> 3 - 2 = 1.315789 (left: 1.315789)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 9 = 13 (left: 10 11 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 10 11"
                }
            },
            "Step 1": {
                "Step": "9 * 10 = 90 (left: 4 11 90)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 * 10 = 90 (left: 4 11 90) -> 90 / 4 = 22.5 (left: 11 22.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 10 11"
                }
            },
            "Step 3": {
                "Step": "10 + 4 = 14 (left: 9 11 14)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 + 4 = 14 (left: 9 11 14) -> 9 + 11 = 20 (left: 20 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 10 11"
                }
            },
            "Step 5": {
                "Step": "4 * 9 = 36 (left: 10 11 36)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 9 = 36 (left: 10 11 36) -> 36 / 11 = 3.27272727273 (left: 10 3.272",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "44 19"
                }
            },
            "Step 7": {
                "Step": "9 + 10 = 19 (left: 4 11 19) -> 4 * 11 = 44 (left: 44 19) -> 44 - 19 = 25 (left: 25)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 + 10 = 19 (left: 4 11 19) -> 4 * 11 = 44 (left: 44 19) -> 44 - 19 = 25 (left: 25) -> 25 + 5 = 30 (left: 30)",
                "Pruning": "NA"
            }
        },
        "Input": "4 9 10 11",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "1063": {
        "puzzle": "7 9 10 11",
        "Agent 0": {
            "Step 0": {
                "Step": "7 * 9 = 63 (left: 10 11 63)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 10 11"
                }
            },
            "Step 1": {
                "Step": "7 * 9 = 63 (left: 10 11 63)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 10 11"
                }
            },
            "Step 3": {
                "Step": "10 * 11 = 110 (left: 7 9 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 * 11 = 110 (left: 7 9  -> 9 - 7 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 10 11"
                }
            },
            "Step 5": {
                "Step": "7 * 9 = 63 (left: 10 11 63)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 63 / 10 = 6.3 (left: 6.3 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "21 63"
                }
            },
            "Step 7": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 63 / 21 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 63 / 21 = 3 (left: 3) -> 8 - 3 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "No possible next steps as there is only one number provided."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 * 11 = 110 (left: 7 9 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 10 11"
                }
            },
            "Step 1": {
                "Step": "9 * 10 = 90 (left: 7 11 90)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 7 = 12.857 (left: 12.857 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "21 63"
                }
            },
            "Step 3": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 63 - 21 = 42 (left: 42)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 63 - 21 = 42 (left: 42) -> No possible next steps as there is only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "21 63"
                }
            },
            "Step 5": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 63 - 21 = 42 (left: 42)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 63 - 21 = 42 (left: 42) -> 42 - 2 = 40",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "6.3 11"
                }
            },
            "Step 7": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 63 / 10 = 6.3 (left: 6.3 11) -> 11 - 6.3 = 4.7 (left: 6.3 4.7)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 63 / 10 = 6.3 (left: 6.3 11) -> 11 - 6.3 = 4.7 (left: 6.3 4.7) -> 6.3 + 4.7 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "42 - 2 = 40"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 * 10 = 90 (left: 7 11 90)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 10 11"
                }
            },
            "Step 1": {
                "Step": "9 * 10 = 90 (left: 7 11 90)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 11 * 7 = 77 (left: 77 90)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "21 63"
                }
            },
            "Step 3": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 21 * 63 = 1323 (left: 1323)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 21 * 63 = 1323 (left: 1323) -> 132 * 3 = 396 (left: 396)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "21 63"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 10 11"
                }
            },
            "Step 5": {
                "Step": "10 - 11 = -1 (left: ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 11 = -1 (left:  -> It seems like you did not provide an input. Could you please provide the numbers again for me to generate possible next steps?",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "21 63"
                }
            },
            "Step 7": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 21 * 63 = 1323 (left: 1323)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 21 * 63 = 1323 (left: 1323) -> 1 + 3 + 2 + 3 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "No possible next steps as there is only one number provided."
                }
            }
        },
        "Input": "7 9 10 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1064": {
        "puzzle": "1 4 5 7",
        "Agent 0": {
            "Step 0": {
                "Step": "7 - 1 = 6 (left: 4 5 ",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 5 7"
                }
            },
            "Step 1": {
                "Step": "1 + 4 = 5 (left: 5 5 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> 5 * 5 = 25 (left: 7 25)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 5 7"
                }
            },
            "Step 3": {
                "Step": "5 - 1 = 4 (left: 4 5 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 - 1 = 4 (left: 4 5 7) -> 5 + 7 = 12 (left: 4 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "2 5"
                }
            },
            "Step 5": {
                "Step": "7 - 4 = 3 (left: 1 3 5) -> 3 - 1 = 2 (left: 2 5) -> Possible next steps:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 4 = 3 (left: 1 3 5) -> 3 - 1 = 2 (left: 2 5) -> Possible next steps: -> There are no more possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2 5"
                }
            },
            "Step 7": {
                "Step": "7 - 5 = 2 (left: 1 4 2) -> 1 + 4 = 5 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 - 5 = 2 (left: 1 4 2) -> 1 + 4 = 5 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5) -> There are no possible next steps with the input of 2.5.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "1 + 4 = 5 (left: 5 5 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 5 7"
                }
            },
            "Step 1": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10) -> 10 / 7 = 1.42857142857 (left: 1.42857142857)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 5 7"
                }
            },
            "Step 3": {
                "Step": "7 - 5 = 2 (left: 1 4 2)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 5 = 2 (left: 1 4 2) -> 1 + 4 = 5 (left: 2 5)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "2 5"
                }
            },
            "Step 5": {
                "Step": "7 - 4 = 3 (left: 1 3 5) -> 3 - 1 = 2 (left: 2 5) -> 5 - 2 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 4 = 3 (left: 1 3 5) -> 3 - 1 = 2 (left: 2 5) -> 5 - 2 = 3 (left: 3) -> There are no more possible next steps with the input of 3.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "2 5"
                }
            },
            "Step 7": {
                "Step": "7 - 5 = 2 (left: 1 4 2) -> 1 + 4 = 5 (left: 2 5) -> Possible next steps:",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 - 5 = 2 (left: 1 4 2) -> 1 + 4 = 5 (left: 2 5) -> Possible next steps: -> There are no possible next steps for the given input.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 1 = 5 (left: 5 5 7)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 5 "
                }
            },
            "Step 1": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 4 * 5 = 20 (left: 20)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 4 * 5 = 20 (left: 20) -> 20 * 2 = 40 (left: 40)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 5 7"
                }
            },
            "Step 3": {
                "Step": "7 - 4 = 3 (left: 1 3 5)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 4 = 3 (left: 1 3 5) -> 3 - 1 = 2 (left: 2 5)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "2 5"
                }
            },
            "Step 5": {
                "Step": "7 - 4 = 3 (left: 1 3 5) -> 3 - 1 = 2 (left: 2 5) -> 2 + 5 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 4 = 3 (left: 1 3 5) -> 3 - 1 = 2 (left: 2 5) -> 2 + 5 = 7 (left: 7) -> 7 / 8 = 0.875 (left: 0.875)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "2 5"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2 5"
                }
            },
            "Step 7": {
                "Step": "7 - 5 = 2 (left: 1 4 2) -> 1 + 4 = 5 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 - 5 = 2 (left: 1 4 2) -> 1 + 4 = 5 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5) -> There are no possible next steps with the input of 2.5.",
                "Pruning": null
            }
        },
        "Input": "1 4 5 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1065": {
        "puzzle": "3 4 9 9",
        "Agent 0": {
            "Step 0": {
                "Step": "9 - 4 = 5 (left: 3 5 9)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 9 9"
                }
            },
            "Step 1": {
                "Step": "4 + 9 = 13 (left: 3 13 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 9 = 13 (left: 3 13 9) -> 13 - 3 = 10 (left: 10 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 9 9"
                }
            },
            "Step 3": {
                "Step": "3 + 4 = 7 (left: 7 9 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 7 9 9) -> 9 - 9 = 0 (left: 7 0 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 9 9"
                }
            },
            "Step 5": {
                "Step": "3 + 4 = 7 (left: 7 9 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 4 = 7 (left: 7 9 9) -> 9 - 7 = 2 (left: 2 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2.25 6"
                }
            },
            "Step 7": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 9 / 4 = 2.25 (left: 2.25 6) -> 2.25 * 6 = 13.5 (left: 13.5)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 9 / 4 = 2.25 (left: 2.25 6) -> 2.25 * 6 = 13.5 (left: 13.5) -> There are no possible next steps for the input 13.5.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 4 9 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 9 9"
                }
            },
            "Step 1": {
                "Step": "9 - 3 = 6 (left: 4 6 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 9 / 4 = 2.25 (left: 2.25 6)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 9 9"
                }
            },
            "Step 3": {
                "Step": "9 / 3 = 3 (left",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 / 3 = 3 (left -> 9 * 3 = 27 (left: 27)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 9 9"
                }
            },
            "Step 5": {
                "Step": "9 - 3 = 6 (left: 4 6 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 9 / 3 = 3 (left: 4 3)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "7 0 9"
                }
            },
            "Step 7": {
                "Step": "3 + 4 = 7 (left: 7 9 9) -> 9 - 9 = 0 (left: 7 0 9) -> 9 / 7 = 1 (left: 1 9)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 + 4 = 7 (left: 7 9 9) -> 9 - 9 = 0 (left: 7 0 9) -> 9 / 7 = 1 (left: 1 9) -> 1 + 9 = 10 (left: 10)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 9 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 5 9"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 3 + 5 = 8 (left: 8 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 3 + 5 = 8 (left: 8 9) -> 8 / 9 = 0.8888888888888888 (left: 0.8888888888888888)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 9 9"
                }
            },
            "Step 3": {
                "Step": "9 / 3 = 3 (left",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 / 3 = 3 (left -> 3 + 3 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "7 9 9"
                }
            },
            "Step 5": {
                "Step": "3 + 4 = 7 (left: 7 9 9) -> 9 - 7 = 2 (left: 7 2 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 4 = 7 (left: 7 9 9) -> 9 - 7 = 2 (left: 7 2 9) -> 9 - 7 = 2 (left: 2 9)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "7 0 9"
                }
            },
            "Step 7": {
                "Step": "3 + 4 = 7 (left: 7 9 9) -> 9 - 9 = 0 (left: 7 0 9) -> 7 * 0 = 0 (left: 0 9)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 + 4 = 7 (left: 7 9 9) -> 9 - 9 = 0 (left: 7 0 9) -> 7 * 0 = 0 (left: 0 9) -> 9 - 0 = 9 (left: 9)",
                "Pruning": "NA"
            }
        },
        "Input": "3 4 9 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "1066": {
        "puzzle": "3 3 6 8",
        "Agent 0": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 6 6 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 6 8"
                }
            },
            "Step 1": {
                "Step": "3 * 6 = 18 (left: 18 6 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 6 = 18 (left: 18 6 8) -> 6 * 8 = 48 (left: 18 48)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "8 - 6 = 2 (left: 3 6 2) -> 3 * 6 = 18 (left: 18 2) -> 18 * 2 = 36 (left: 36) -> 36 - 3 = 33 (left: 33)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "36"
                }
            },
            "Step 4": {
                "Step": "8 - 6 = 2 (left: 3 6 2) -> 3 * 6 = 18 (left: 18 2) -> 18 * 2 = 36 (left: 36) -> No possible next steps as there are no other numbers to perform operations with.",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 6 8"
                }
            },
            "Step 5": {
                "Step": "6 + 3 = 9 (left: 3 9 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 3 = 9 (left: 3 9 8) -> 3 + 9 = 12 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "8 - 6 = 2 (left: 3 6 2) -> 3 * 6 = 18 (left: 18 2) -> 18 * 2 = 36 (left: 36) -> There are no possible next steps with the number 36 as it is already a single number.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 - 6 = 2 (left: 3 6 2) -> 3 * 6 = 18 (left: 18 2) -> 18 * 2 = 36 (left: 36) -> There are no possible next steps with the number 36 as it is already a single number. -> There are no possible next steps with the number 36 as it is already a single number.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 - 6 = 2 (left: 3 6 2)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 6 2"
                }
            },
            "Step 1": {
                "Step": "8 - 6 = 2 (left: 3 6 2) -> 3 * 6 = 18 (left: 18 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 6 = 2 (left: 3 6 2) -> 3 * 6 = 18 (left: 18 2) -> 18 * 2 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 6 8"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 6 + 9 = 15",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 6 + 9 = 15 -> 15 + 6 = 21 (left: 6 9 21)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "No possible next steps as there are no other numbers to perform operations with."
                }
            },
            "Step 5": {
                "Step": "8 - 6 = 2 (left: 3 6 2) -> 3 * 6 = 18 (left: 18 2) -> 18 * 2 = 36 (left: 36) -> No possible next steps as there are no other numbers to perform operations with. -> None",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "9 6 8"
                }
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 6 - 8 = -2 (left: -2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "No possible next steps as there are no other numbers to perform operations with."
                }
            },
            "Step 7": {
                "Step": "8 - 6 = 2 (left: 3 6 2) -> 3 * 6 = 18 (left: 18 2) -> 18 * 2 = 36 (left: 36) -> No possible next steps as there are no other numbers to perform operations with. -> There are no possible next steps as there are no other numbers to perform operations with.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 - 6 = 2 (left: 3 6 2) -> 3 * 6 = 18 (left: 18 2) -> 18 * 2 = 36 (left: 36) -> No possible next steps as there are no other numbers to perform operations with. -> There are no possible next steps as there are no other numbers to perform operations with. -> None",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "No possible next steps as there are no other numbers to perform operations with."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 6 8)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 6 8"
                }
            },
            "Step 1": {
                "Step": "8 - 6 = 2 (left: 3 6 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 6 = 2 (left: 3 6 2) -> 6 - 3 = 3 (left: 3 6 2)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 6 8"
                }
            },
            "Step 3": {
                "Step": "6 + 3 = 9 (left: 3 9 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 3 = 9 (left: 3 9 8) -> 3 + 9 = 12 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 6 8"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8) -> 8 / 1.5 = 5.33 (left: 5.33 8)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "No possible next steps as there are no other numbers to perform operations with."
                }
            },
            "Step 7": {
                "Step": "8 - 6 = 2 (left: 3 6 2) -> 3 * 6 = 18 (left: 18 2) -> 18 * 2 = 36 (left: 36) -> No possible next steps as there are no other numbers to perform operations with. -> No possible next steps as there are no other numbers to perform operations with.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 - 6 = 2 (left: 3 6 2) -> 3 * 6 = 18 (left: 18 2) -> 18 * 2 = 36 (left: 36) -> No possible next steps as there are no other numbers to perform operations with. -> No possible next steps as there are no other numbers to perform operations with. -> No possible next steps as there are no other numbers to perform operations with.",
                "Pruning": null
            }
        },
        "Input": "3 3 6 8",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1067": {
        "puzzle": "4 4 7 8",
        "Agent 0": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 7 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 8"
                }
            },
            "Step 1": {
                "Step": "7 + 4 = 11 (left: 4 8 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 4 = 11 (left: 4 8 11) -> 4 * 8 = 32 (left: 32 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 8"
                }
            },
            "Step 3": {
                "Step": "4 * 4 = 16 (left: 7 8 16)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 * 4 = 16 (left: 7 8 16) -> 8 - 7 = 1 (left: 1 8 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 8"
                }
            },
            "Step 5": {
                "Step": "7 - 4 = 3 (left: 3 4 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 4 = 3 (left: 3 4 8) -> 8 / ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "8 44"
                }
            },
            "Step 7": {
                "Step": "4 + 7 = 11 (left: 4 11 8) -> 11 * 4 = 44 (left: 8 44) -> 44 / 8 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 7 = 11 (left: 4 11 8) -> 11 * 4 = 44 (left: 8 44) -> 44 / 8 = 5 (left: 5) -> There are no possible next steps with the input of 5.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 7 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "7 8 8"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 7 8 8) -> Input: 1 8",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 7 8 8) -> Input: 1 8 -> 1 * 8 = 8 (left: 8 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 7 8"
                }
            },
            "Step 3": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 7 / 1 = 7 (left: 7 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 7 / 1 = 7 (left: 7 8) -> 8 - 7 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 8"
                }
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 7 8 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 4 = 8 (left: 7 8 8) -> 8 / 7 = 1.1428571428571428 (left: 1.1428571428571428 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "8 44"
                }
            },
            "Step 7": {
                "Step": "4 + 7 = 11 (left: 4 11 8) -> 11 * 4 = 44 (left: 8 44) -> 44 - 8 = 36 (left: 36)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 7 = 11 (left: 4 11 8) -> 11 * 4 = 44 (left: 8 44) -> 44 - 8 = 36 (left: 36) -> 36 + 2 = 38",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 4 = 8 (left: 7 8 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 8"
                }
            },
            "Step 1": {
                "Step": "8 / 4 = 2 (left: 2 4 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 / 4 = 2 (left: 2 4  -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 8"
                }
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 7 8 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 7 8 8) -> 8 / 7 = 1.1428571428571428 (left: 1.1428571428571428 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 8"
                }
            },
            "Step 5": {
                "Step": "4 + 7 = 11 (left: 4 11 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 7 = 11 (left: 4 11 8) -> 11 * 4 = 44 (left: 8 44)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "8 44"
                }
            },
            "Step 7": {
                "Step": "4 + 7 = 11 (left: 4 11 8) -> 11 * 4 = 44 (left: 8 44) -> 8 + 44 = 52 (left: 52)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 7 = 11 (left: 4 11 8) -> 11 * 4 = 44 (left: 8 44) -> 8 + 44 = 52 (left: 52) -> 52 / 2 = 26 (left: 26)",
                "Pruning": "NA"
            }
        },
        "Input": "4 4 7 8",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            }
        ]
    },
    "1068": {
        "puzzle": "3 5 11 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 5 = 7 (left: 3 7 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 6 12"
                }
            },
            "Step 1": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 12 / 3 = 4 (left: 4 12) -> 4 * 12 = 48 (left: 48)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 11 12"
                }
            },
            "Step 3": {
                "Step": "12 - 3 = 9 (left: 5 11 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 3 = 9 (left: 5 11 9) -> 11 - 5 = 6 (left: 6 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 11 12"
                }
            },
            "Step 5": {
                "Step": "12 - 11 = 1 (left: 3 5 1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 11 = 1 (left: 3 5 1) -> 5 * 3 = 15 (left: 1 15)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "4 12"
                }
            },
            "Step 7": {
                "Step": "3 * 5 = 15 (left: 15 11 12) -> 15 - 11 = 4 (left: 4 12) -> 4 + 12 = 16 (left: 16)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 5 = 15 (left: 15 11 12) -> 15 - 11 = 4 (left: 4 12) -> 4 + 12 = 16 (left: 16) -> There are no possible next steps as there is only one number left.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "11 - 5 = 6 (left: 3 6 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 6 12"
                }
            },
            "Step 1": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 12 / 3 = 4 (left: 4 12) -> 12 - 4 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 6 12"
                }
            },
            "Step 3": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 6 * 3 = 18 (left: 18 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 6 * 3 = 18 (left: 18 12) -> 18 + 12 = 30 (left: 30)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 11 12"
                }
            },
            "Step 5": {
                "Step": "3 * 5 = 15 (left: 15 11 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 5 = 15 (left: 15 11 12) -> 11 - 12 = -1 (left: 15 -1)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "4 12"
                }
            },
            "Step 7": {
                "Step": "3 * 5 = 15 (left: 15 11 12) -> 15 - 11 = 4 (left: 4 12) -> 4 * 12 = 48",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 5 = 15 (left: 15 11 12) -> 15 - 11 = 4 (left: 4 12) -> 4 * 12 = 48 -> 12 * 4 = 48",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 * 5 = 15 (left: 15 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 11 12"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 15 11 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 15 11 12) -> 15 + 11 = 26 (left: 12 26)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 11 12"
                }
            },
            "Step 3": {
                "Step": "3 + 5 = 8 (left: 8 11 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 + 5 = 8 (left: 8 11 12) -> ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 11 12"
                }
            },
            "Step 5": {
                "Step": "3 * 5 = 15 (left: 15 11 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 5 = 15 (left: 15 11 12) -> 15 - 11 = 4 (left: 4 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": ""
                }
            },
            "Step 7": {
                "Step": "3 + 5 = 8 (left: 8 11 12) ->  -> There are no possible next steps as there are no numbers provided in the input.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 + 5 = 8 (left: 8 11 12) ->  -> There are no possible next steps as there are no numbers provided in the input. -> Please provide numbers in the input in order to generate possible next steps.",
                "Pruning": null
            }
        },
        "Input": "3 5 11 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1069": {
        "puzzle": "4 4 6 10",
        "Agent 0": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 6 10)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 10"
                }
            },
            "Step 1": {
                "Step": "4 / 4 = 1 (left: 1 4 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 4 = 1 (left: 1 4 6) -> 6 - 1 = 5 (left: 4 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 10 10"
                }
            },
            "Step 3": {
                "Step": "6 + 4 = 10 (left: 4 10 10) -> 10 / 4 = 2.5 (left: 2.5 10 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 4 = 10 (left: 4 10 10) -> 10 / 4 = 2.5 (left: 2.5 10 10) -> 10 - 2.5 = 7.5 (left: 7.5 10)"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 4 = 10 (left: 4 10 10)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 4 10"
                }
            },
            "Step 1": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 4 / 4 = 1 (left: 1 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 4 / 4 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 10"
                }
            },
            "Step 3": {
                "Step": "10 * 4 = 40 (left: 6 40 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 * 4 = 40 (left: 6 40  -> Input: 8 2 4"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 6 = 4 (left: 4 4 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 10"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 6 8 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "10 14"
                }
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24) -> Answer: ((4 + 4) + 6) + 10 = 24"
            }
        },
        "Input": "4 4 6 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            }
        ]
    },
    "1070": {
        "puzzle": "4 6 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 9 10 13)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 6 9 13"
                }
            },
            "Step 1": {
                "Step": "9 + 13 = 22 (left: 4 6 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 13 = 22 (left: 4 6  -> 4 * 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 4"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left:  -> There are multiple possible next steps depending on the operations allowed. To provide a more specific answer, please specify the operations that can be used (e.g. addition, subtraction, multiplication, division).",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 6 9 13"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 4 6 ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 4 6  -> 9 / 3 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "6 4"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 4 2 4) -> 4 + 2 = 6 (left: 6 4) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "6 4"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 4 2 4) -> 4 + 2 = 6 (left: 6 4) -> 6 + 4 = 10 (left: 10)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 6 = 24 (left: 9 13 24)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 6 9 13"
                }
            },
            "Step 1": {
                "Step": "6 / 4 = 1.5 (left: 1.5 9 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 4 = 1.5 (left: 1.5 9 13) -> 9 / 1.5 = 6 (left: 6 13",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 4"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 4 2 4)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 4 2 4) -> 4 + 2 = 6 (left: 6 4)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "6 4"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 4 2 4) -> 4 + 2 = 6 (left: 6 4) -> 6 - 4 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "4 6 4"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 4 + 6 = 10 (left: 4 10 4)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "4 10 4"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 4 + 6 = 10 (left: 4 10 4) -> 10 / 4 = 2.5 (left: 2.5 4)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 4 + 6 = 10 (left: 4 10 4) -> 10 / 4 = 2.5 (left: 2.5 4) -> 4 - 2.5 = 1.5 (left: 1.5)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 4 6 4)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 6 9 13"
                }
            },
            "Step 1": {
                "Step": "4 + 6 = 10 (left: 9 10 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 6 = 10 (left: 9 10 13) -> 10 + 9 = 19 (left: 13 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 6 9 13"
                }
            },
            "Step 3": {
                "Step": "4 + 9 = 13 (left: 6 13 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 9 = 13 (left: 6 13 13) -> 6 * 13 = 78 (left: 13 78)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "6 4"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 4 2 4) -> 4 + 2 = 6 (left: 6 4) -> 6 + 4 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "4 6 4"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 4 * 6 = 24 (left: 4 24)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "4 10 4"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 4 + 6 = 10 (left: 4 10 4) -> 4 + 10 = 14 (left: 4 14)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 4 + 6 = 10 (left: 4 10 4) -> 4 + 10 = 14 (left: 4 14) -> 14 / 4 = 3.5 (left: 3.5)",
                "Pruning": "NA"
            }
        },
        "Input": "4 6 9 13",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "1071": {
        "puzzle": "3 5 6 11",
        "Agent 0": {
            "Step 0": {
                "Step": "11 - 5 = 6 (left: 3 6 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 6 11"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 6 11 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 6 11 15) -> 6 + 11 = 17 (left: 15 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 6 11"
                }
            },
            "Step 3": {
                "Step": "3 + 5 = 8 (left: 6 8 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 + 5 = 8 (left: 6 8 11) -> 11 - 6 = 5 (left: 6 5)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 6 11"
                }
            },
            "Step 5": {
                "Step": "11 - 3 = 8 (left: 5 6 ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 3 = 8 (left: 5 6  -> 5 + 6 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "66 15"
                }
            },
            "Step 7": {
                "Step": "3 * 5 = 15 (left: 6 11 15) -> 6 * 11 = 66 (left: 66 15) -> 66 / 15 = 4.4 (left: 4.4)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 5 = 15 (left: 6 11 15) -> 6 * 11 = 66 (left: 66 15) -> 66 / 15 = 4.4 (left: 4.4) -> 4.4 * 4 = 17.6 (left: 4.4 17.6)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 * 6 = 30 (left: 3 30)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 6 11"
                }
            },
            "Step 1": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 6 - 3 = 3 (left: 3 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 6 - 3 = 3 (left: 3 11) -> 4 + 16 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 6 11"
                }
            },
            "Step 3": {
                "Step": "6 + 5 = 11 (left: 3 11 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 5 = 11 (left: 3 11  -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 6 11"
                }
            },
            "Step 5": {
                "Step": "6 - 3 = 3 (left: 3 5 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 3 = 3 (left: 3 5 11) -> 3 + 11 = 14 (left: 5 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "66 15"
                }
            },
            "Step 7": {
                "Step": "3 * 5 = 15 (left: 6 11 15) -> 6 * 11 = 66 (left: 66 15) -> 66 / 15 = 4.4 (left: 4.4)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 5 = 15 (left: 6 11 15) -> 6 * 11 = 66 (left: 66 15) -> 66 / 15 = 4.4 (left: 4.4) -> 4.4 + 2 = 6.4",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 3 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 6 11"
                }
            },
            "Step 1": {
                "Step": "6 - 3 = 3 (left: 3 5 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 3 = 3 (left: 3 5 11) -> 5 - 3 = 2 (left: 2 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 6 11"
                }
            },
            "Step 3": {
                "Step": "5 * 6 = 30 (left: 3 11 30)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 6 = 30 (left: 3 11 30) -> 11 + 3 = 14 (left: 14 30)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 6 11"
                }
            },
            "Step 5": {
                "Step": "3 * 5 = 15 (left: 6 11 15)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 5 = 15 (left: 6 11 15) -> 6 * 11 = 66 (left: 66 15)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "6 5"
                }
            },
            "Step 7": {
                "Step": "3 + 5 = 8 (left: 6 8 11) -> 11 - 6 = 5 (left: 6 5) -> 6 + 5 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 + 5 = 8 (left: 6 8 11) -> 11 - 6 = 5 (left: 6 5) -> 6 + 5 = 11 (left: 11) -> 11 + 2 = 13",
                "Pruning": null
            }
        },
        "Input": "3 5 6 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1072": {
        "puzzle": "1 5 8 13",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 5 = 6 (left: 6 8 13)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 8 13"
                }
            },
            "Step 1": {
                "Step": "13 - 5 = 8 (left: 1 8 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 5 = 8 (left: 1 8 8) -> 1 + 8 = 9 (left: 8 9)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 8 13"
                }
            },
            "Step 3": {
                "Step": "13 - 8 = 5 (left: 1 5 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 8 = 5 (left: 1 5  -> 5 / 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 8 13"
                }
            },
            "Step 5": {
                "Step": "1 + 5 = 6 (left: 6 8 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 13 / 6 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "4 13"
                }
            },
            "Step 7": {
                "Step": "5 - 1 = 4 (left: 4 8 13) -> 8 - 4 = 4 (left: 4 13) -> 4 + 13 = 17 (left: 17)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 - 1 = 4 (left: 4 8 13) -> 8 - 4 = 4 (left: 4 13) -> 4 + 13 = 17 (left: 17) -> There are no possible next steps as there are no other numbers to operate with.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 - 5 = 3 (left: 1 3 13)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 8 13"
                }
            },
            "Step 1": {
                "Step": "8 - 1 = 7 (left: 7 8 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 1 = 7 (left: 7 8  -> 8 - 7 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "8 9"
                }
            },
            "Step 3": {
                "Step": "13 - 5 = 8 (left: 1 8 8) -> 1 + 8 = 9 (left: 8 9) -> 8 - 9 = -1 (left: -1)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 5 = 8 (left: 1 8 8) -> 1 + 8 = 9 (left: 8 9) -> 8 - 9 = -1 (left: -1) -> There are no possible next steps as the input is invalid.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 8 13"
                }
            },
            "Step 5": {
                "Step": "5 - 1 = 4 (left: 4 8 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 - 1 = 4 (left: 4 8 13) -> 8 - 4 = 4 (left: 4 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "4 13"
                }
            },
            "Step 7": {
                "Step": "5 - 1 = 4 (left: 4 8 13) -> 8 - 4 = 4 (left: 4 13) -> 13 / 4 = 3.25 (left: 3.25)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 - 1 = 4 (left: 4 8 13) -> 8 - 4 = 4 (left: 4 13) -> 13 / 4 = 3.25 (left: 3.25) -> There are no possible next steps for the input 3.25 as it is already a single number.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 + 5 = 6 (left: 6 8 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 8 13"
                }
            },
            "Step 1": {
                "Step": "1 * 5 = 5 (left: 5 8 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 * 5 = 5 (left: 5 8 13) -> 5 * 8 = 40 (left: 40)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 8 13"
                }
            },
            "Step 3": {
                "Step": "1 + 5 = 6 (left: 6 8 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 6 + 8 = 14 (left: 14 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 8 13"
                }
            },
            "Step 5": {
                "Step": "13 - 1 = 12 (left: 5 8 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 1 = 12 (left: 5 8 12) -> 12 / 8 = 1.5 (left: 5 1.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "8 9"
                }
            },
            "Step 7": {
                "Step": "13 - 5 = 8 (left: 1 8 8) -> 1 + 8 = 9 (left: 8 9) -> 8 * 9 = 72 (left: 72)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 5 = 8 (left: 1 8 8) -> 1 + 8 = 9 (left: 8 9) -> 8 * 9 = 72 (left: 72) -> 7 * 2 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "There are no possible next steps as the input is invalid."
                }
            }
        },
        "Input": "1 5 8 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1073": {
        "puzzle": "3 3 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 9 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 9 13"
                }
            },
            "Step 1": {
                "Step": "9 + 3 = 12 (left: 3 12 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 3 = 12 (left: 3 12 13) -> 3 + 12 = 15 (left: 15 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 3 4"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 4 / 3 = 1.33 (left: 1.33)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 4 / 3 = 1.33 (left: 1.33) -> There are no possible next steps for the input 1.33.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 9 13"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 6 9 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 6 9 13) -> 6 + 9 = 15 (left: 13 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "3.33 10"
                }
            },
            "Step 7": {
                "Step": "13 - 3 = 10 (left: 3 9 10) -> 10 / 3 = 3.33 (left: 3.33 10) -> 10 - 3 = 7 (left: 7 10)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 3 = 10 (left: 3 9 10) -> 10 / 3 = 3.33 (left: 3.33 10) -> 10 - 3 = 7 (left: 7 10) -> 10 - 7 = 3 (left: 3)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 9 13)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 9 13"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 9 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 - 9 = 0 (left: 0 13)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 9 13"
                }
            },
            "Step 3": {
                "Step": "13 - 3 = 10 (left: 3 9 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 3 = 10 (left: 3 9 10) -> 10 / 3 = 3.33 (left: 3.33 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 3 4"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 4 / 3 = 1.33 (",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 4 / 3 = 1.33 ( -> 4 - 3 = 1",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "3 13"
                }
            },
            "Step 7": {
                "Step": "9 + 3 = 12 (left: 9 12 13) -> 12 - 9 = 3 (left: 3 13) -> 13 / 3 = 4.33 (left: 4.33)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 + 3 = 12 (left: 9 12 13) -> 12 - 9 = 3 (left: 3 13) -> 13 / 3 = 4.33 (left: 4.33) -> There are no possible next steps with just the number 4.33.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 3 3 4)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 9 13"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 9 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 - 9 = 0 (left: 0 13)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 3 4"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 4 / 3 = 1.33 (left: 1.33 3)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 4 / 3 = 1.33 (left: 1.33 3) -> 1.33 + 3 = 4.33 (left: 4.33)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 9 13"
                }
            },
            "Step 5": {
                "Step": "9 + 3 = 12 (left: 9 12 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 3 = 12 (left: 9 12 13) -> 12 - 9 = 3 (left: 3 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "15 13"
                }
            },
            "Step 7": {
                "Step": "9 + 3 = 12 (left: 3 12 13) -> 3 + 12 = 15 (left: 15 13) -> 15 + 13 = 28 (left: 28)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 + 3 = 12 (left: 3 12 13) -> 3 + 12 = 15 (left: 15 13) -> 15 + 13 = 28 (left: 28) -> 28 - 2 = 26 (left: 26)",
                "Pruning": "NA"
            }
        },
        "Input": "3 3 9 13",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            }
        ]
    },
    "1074": {
        "puzzle": "7 7 9 10",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 7 = 3 (left: 3 7 ",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 7 "
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 3 7  -> 7 - 3 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 3 7  -> 7 - 3 = 4 (left: 4) -> 4 + 4 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 9 10"
                }
            },
            "Step 3": {
                "Step": "7 / 7 = 1 (left: 1 9 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 / 7 = 1 (left: 1 9 10) -> 10 / 1 = 10 (left: 10 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 9 10"
                }
            },
            "Step 5": {
                "Step": "9 + 1 = 10 (left: 7 10 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 1 = 10 (left: 7 10 10) -> 7 * 10 = 70 (left: 10 70)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "1.43 10"
                }
            },
            "Step 7": {
                "Step": "9 + 1 = 10 (left: 7 10 10) -> 10 / 7 = 1.43 (left: 1.43 10) -> 1.43 * 10 = 14.3 (left: 14.3)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 + 1 = 10 (left: 7 10 10) -> 10 / 7 = 1.43 (left: 1.43 10) -> 1.43 * 10 = 14.3 (left: 14.3) -> There are no possible next steps for the input 14.3 as it is a single number and not an equation.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 * 9 = 63 (left: 10 10 63)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 9 10"
                }
            },
            "Step 1": {
                "Step": "",
                "Pruning": null
            },
            "Step 2": {
                "Step": " -> There are no more possible next steps with the given numbers.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 9 10"
                }
            },
            "Step 3": {
                "Step": "7 + 7 = 14 (left: 9 10 14)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 + 7 = 14 (left: 9 10 14) -> 14 - 9 = 5 (left: 5 14)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "7 2 10"
                }
            },
            "Step 5": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 7 - 2 = 5 (left: 5 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 7 - 2 = 5 (left: 5 10) -> 5 * 10 = 50 (left: 50)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "1.43 10"
                }
            },
            "Step 7": {
                "Step": "9 + 1 = 10 (left: 7 10 10) -> 10 / 7 = 1.43 (left: 1.43 10) -> 10 - 1.43 = 8.57 (left: 8.57)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 + 1 = 10 (left: 7 10 10) -> 10 / 7 = 1.43 (left: 1.43 10) -> 10 - 1.43 = 8.57 (left: 8.57) -> 8 / 5 = 1.6 (left: 1.6)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 - 7 = 2 (left: 7 2 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 9 10"
                }
            },
            "Step 1": {
                "Step": "9 + 1 = 10 (left: 7 10 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 1 = 10 (left: 7 10 10) -> 10 / 7 = 1.43 (left: 1.43 10)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 9 10"
                }
            },
            "Step 3": {
                "Step": "7 * 7 = 49 (left: 9 10 49)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 * 7 = 49 (left: 9 10 49) -> 10 * 9 = 90 (left: 90 49)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 9 10"
                }
            },
            "Step 5": {
                "Step": "10 - 9 = 1 (left: 7 1 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 9 = 1 (left: 7 1 10) -> 10 - 1 = 9 (left: 7 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "10 10"
                }
            },
            "Step 7": {
                "Step": "7 / 7 = 1 (left: 1 9 10) -> 10 / 1 = 10 (left: 10 10) -> 10 - 10 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 / 7 = 1 (left: 1 9 10) -> 10 / 1 = 10 (left: 10 10) -> 10 - 10 = 0 (left: 0) -> There are no possible next steps as there is no input provided.",
                "Pruning": null
            }
        },
        "Input": "7 7 9 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            }
        ]
    },
    "Cost": {
        "input_tokens": 365193,
        "output_tokens": 142055.4166666666,
        "total_cost": 0.39567962499999987
    }
}