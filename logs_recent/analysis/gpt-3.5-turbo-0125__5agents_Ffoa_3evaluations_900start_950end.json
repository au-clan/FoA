{
    "900": {
        "input": "4 5 6 10",
        "step_1": {
            "steps": [
                "10 - 4 = 6 (left: 5 6 6)",
                "4 + 5 = 9 (left: 6 9 10)",
                "10 - 4 = 6 (left: 6 5 10)",
                "4 + 5 = 9 (left: 6 9 10)",
                "4 + 5 = 9 (left: 6 9 10)"
            ],
            "values": [
                3.0,
                3.0,
                21.001,
                2.001,
                2.0
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- 1.2",
                "2 <- 1.2",
                "3 <- 1.2",
                "4 <- INIT"
            ],
            "resampled_steps": [
                "",
                "10 - 4 = 6 (left: 6 5 10)",
                "10 - 4 = 6 (left: 6 5 10)",
                "10 - 4 = 6 (left: 6 5 10)",
                ""
            ]
        },
        "step_2": {
            "steps": [
                "10 / 4 = 2.5 (left: 2.5 5 6)",
                "10 - 4 = 6 (left: 6 5 10)\n10 / 5 = 2 (left: 6 2)",
                "10 - 4 = 6 (left: 6 5 10)\n6 + 3 = 9 (left: 9 9)",
                "10 - 4 = 6 (left: 6 5 10)\nPossible next steps:",
                "10 / 4 = 2.5 (left: 5 6 10)"
            ],
            "values": [
                2.001,
                0.002,
                0.003,
                0.003,
                21.0
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- 1.0",
                "2 <- INIT",
                "3 <- 1.2",
                "4 <- INIT"
            ],
            "resampled_steps": [
                "",
                "10 - 4 = 6 (left: 5 6 6)",
                "",
                "10 - 4 = 6 (left: 6 5 10)",
                ""
            ]
        },
        "step_3": {
            "steps": [
                "10 - 6 = 4 (left: 4 5 10)",
                "10 - 4 = 6 (left: 5 6 6)\n5 * 6 = 30 (left: 6 30)",
                "10 / 5 = 2 (left: 4 6 10)",
                "10 - 4 = 6 (left: 6 5 10)\n5 + 10 = 15 (left: 6 15)",
                "Input: 2 4 6 8"
            ],
            "values": [
                22.0,
                0.003,
                60.0,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 3.0",
                "1 <- 3.0",
                "2 <- 3.0",
                "3 <- INIT",
                "4 <- 3.2"
            ],
            "resampled_steps": [
                "10 - 6 = 4 (left: 4 5 10)",
                "10 - 6 = 4 (left: 4 5 10)",
                "10 - 6 = 4 (left: 4 5 10)",
                "",
                "10 / 5 = 2 (left: 4 6 10)"
            ]
        },
        "step_4": {
            "steps": [
                "10 - 6 = 4 (left: 4 5 10)\n10 - 4 = 6 (left: 6 5)",
                "10 - 6 = 4 (left: 4 5 10)\n5 - 4 = 1 (left: 1 10)",
                "10 - 6 = 4 (left: 4 5 10)\n10 - 4 = 6 (left: 6 10)",
                "6 * 4 = 24 (left: 5 24 10)",
                "10 / 5 = 2 (left: 4 6 10)\n6 / 4 = 1.5 (left: 1.5 10)"
            ],
            "values": [
                0.002,
                60.0,
                1.002,
                2.001,
                0.003
            ],
            "resampled": [
                "0 <- 2.4",
                "1 <- 4.1",
                "2 <- 3.2",
                "3 <- 4.1",
                "4 <- 3.0"
            ],
            "resampled_steps": [
                "10 / 4 = 2.5 (left: 5 6 10)",
                "10 - 6 = 4 (left: 4 5 10)\n5 - 4 = 1 (left: 1 10)",
                "10 / 5 = 2 (left: 4 6 10)",
                "10 - 6 = 4 (left: 4 5 10)\n5 - 4 = 1 (left: 1 10)",
                "10 - 6 = 4 (left: 4 5 10)"
            ]
        },
        "step_5": {
            "steps": [
                "10 / 4 = 2.5 (left: 5 6 10)\n9 - 3 = 6 (left: 6 9)",
                "10 - 6 = 4 (left: 4 5 10)\n5 - 4 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10)",
                "10 / 5 = 2 (left: 4 6 10)\n6 - 4 = 2 (left: 2 6 10)",
                "10 - 6 = 4 (left: 4 5 10)\n5 - 4 = 1 (left: 1 10)\n10 / 1 = 10 (left: 10)",
                "10 - 6 = 4 (left: 4 5 10)\n6 / 3 = 2 (left: 3 2 1)"
            ],
            "values": [
                0.003,
                0.002,
                1.002,
                0.001,
                1.002
            ],
            "resampled": [
                "0 <- 4.1",
                "1 <- 3.0",
                "2 <- 4.1",
                "3 <- 3.0",
                "4 <- 4.1"
            ],
            "resampled_steps": [
                "10 - 6 = 4 (left: 4 5 10)\n5 - 4 = 1 (left: 1 10)",
                "10 - 6 = 4 (left: 4 5 10)",
                "10 - 6 = 4 (left: 4 5 10)\n5 - 4 = 1 (left: 1 10)",
                "10 - 6 = 4 (left: 4 5 10)",
                "10 - 6 = 4 (left: 4 5 10)\n5 - 4 = 1 (left: 1 10)"
            ]
        },
        "step_6": {
            "steps": [
                "10 - 6 = 4 (left: 4 5 10)\n5 - 4 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10)",
                "10 - 6 = 4 (left: 4 5 10)\n5 * 10 = 50 (left: 4 50)",
                "10 - 6 = 4 (left: 4 5 10)\n5 - 4 = 1 (left: 1 10)\n10 / 1 = 10 (left: 10)",
                "10 - 6 = 4 (left: 4 5 10)\nPossible next steps:",
                "10 - 6 = 4 (left: 4 5 10)\n5 - 4 = 1 (left: 1 10)\n27 / 3 = 9 (left: 9 9 27)"
            ],
            "values": [
                0.001,
                60.0,
                0.003,
                0.003,
                1.002
            ],
            "resampled": [
                "0 <- 4.1",
                "1 <- 6.1",
                "2 <- 1.4",
                "3 <- 1.2",
                "4 <- 6.1"
            ],
            "resampled_steps": [
                "10 - 6 = 4 (left: 4 5 10)\n5 - 4 = 1 (left: 1 10)",
                "10 - 6 = 4 (left: 4 5 10)\n5 * 10 = 50 (left: 4 50)",
                "4 + 5 = 9 (left: 6 9 10)",
                "10 - 4 = 6 (left: 6 5 10)",
                "10 - 6 = 4 (left: 4 5 10)\n5 * 10 = 50 (left: 4 50)"
            ]
        },
        "step_7": {
            "steps": [
                "10 - 6 = 4 (left: 4 5 10)\n5 - 4 = 1 (left: 1 10)\n10 - 1 = 9 (left: 9)",
                "10 - 6 = 4 (left: 4 5 10)\n5 * 10 = 50 (left: 4 50)\n50 - 4 = 46 (left: 46)",
                "4 + 5 = 9 (left: 6 9 10)\nInput: 2 5 7",
                "10 - 4 = 6 (left: 6 5 10)\n3 + 9 = 12 (left: 12 12)",
                "10 - 6 = 4 (left: 4 5 10)\n5 * 10 = 50 (left: 4 50)\n50 - 4 = 46 (left: 46)"
            ],
            "values": [
                0.002,
                0.002,
                0.003,
                41.0,
                0.003
            ],
            "resampled": [
                "0 <- 4.1",
                "1 <- 4.1",
                "2 <- 6.1",
                "3 <- 7.3",
                "4 <- 6.1"
            ],
            "resampled_steps": [
                "10 - 6 = 4 (left: 4 5 10)\n5 - 4 = 1 (left: 1 10)",
                "10 - 6 = 4 (left: 4 5 10)\n5 - 4 = 1 (left: 1 10)",
                "10 - 6 = 4 (left: 4 5 10)\n5 * 10 = 50 (left: 4 50)",
                "10 - 4 = 6 (left: 6 5 10)\n3 + 9 = 12 (left: 12 12)",
                "10 - 6 = 4 (left: 4 5 10)\n5 * 10 = 50 (left: 4 50)"
            ]
        },
        "step_8": {
            "steps": [
                "10 - 6 = 4 (left: 4 5 10)\n5 - 4 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10)",
                "10 - 6 = 4 (left: 4 5 10)\n5 - 4 = 1 (left: 1 10)\n1 + 10 = 11",
                "10 - 6 = 4 (left: 4 5 10)\n5 * 10 = 50 (left: 4 50)\n4 * 50 = 200 (left: 200)",
                "10 - 4 = 6 (left: 6 5 10)\n3 + 9 = 12 (left: 12 12)\n12 / 12 = 1 (left: 1)",
                "10 - 6 = 4 (left: 4 5 10)\n5 * 10 = 50 (left: 4 50)\n4 * 50 = 200 (left: 200)"
            ],
            "values": [
                0.002,
                0.003,
                0.002,
                0.002,
                0.003
            ],
            "resampled": [
                "0 <- 1.2",
                "1 <- 7.3",
                "2 <- 3.2",
                "3 <- 4.1",
                "4 <- 7.3"
            ],
            "resampled_steps": [
                "10 - 4 = 6 (left: 6 5 10)",
                "10 - 4 = 6 (left: 6 5 10)\n3 + 9 = 12 (left: 12 12)",
                "10 / 5 = 2 (left: 4 6 10)",
                "10 - 6 = 4 (left: 4 5 10)\n5 - 4 = 1 (left: 1 10)",
                "10 - 4 = 6 (left: 6 5 10)\n3 + 9 = 12 (left: 12 12)"
            ]
        },
        "step_9": {
            "steps": [
                "10 - 4 = 6 (left: 6 5 10)\n8 - 2 = 6 (left: 4)",
                "10 - 4 = 6 (left: 6 5 10)\n3 + 9 = 12 (left: 12 12)\n12 + 12 = 24",
                "10 / 5 = 2 (left: 4 6 10)\n4 / 6 = 0.6667 (left: 0.6667 10)",
                "10 - 6 = 4 (left: 4 5 10)\n5 - 4 = 1 (left: 1 10)\n10 - 1 = 9 (left: 9)",
                "10 - 4 = 6 (left: 6 5 10)\n3 + 9 = 12 (left: 12 12)\n12 - 12 = 0 (left: 0)"
            ],
            "values": [
                0.001,
                0.003,
                0.0,
                0.0,
                0.003
            ],
            "resampled": [
                "0 <- 7.3",
                "1 <- 4.1",
                "2 <- 3.2",
                "3 <- 1.2",
                "4 <- 6.1"
            ],
            "resampled_steps": [
                "10 - 4 = 6 (left: 6 5 10)\n3 + 9 = 12 (left: 12 12)",
                "10 - 6 = 4 (left: 4 5 10)\n5 - 4 = 1 (left: 1 10)",
                "10 / 5 = 2 (left: 4 6 10)",
                "10 - 4 = 6 (left: 6 5 10)",
                "10 - 6 = 4 (left: 4 5 10)\n5 * 10 = 50 (left: 4 50)"
            ]
        },
        "step_10": {
            "steps": [
                "10 - 4 = 6 (left: 6 5 10)\n3 + 9 = 12 (left: 12 12)\n12 / 12 = 1 (left: 1)",
                "10 - 6 = 4 (left: 4 5 10)\n5 - 4 = 1 (left: 1 10)\n10 - 1 = 9 (left: 9)",
                "10 / 5 = 2 (left: 4 6 10)\n4 * 6 = 24 (left: 24 10)",
                "10 - 4 = 6 (left: 6 5 10)\n10 * 6 = 60 (left: 5 60)",
                "10 - 6 = 4 (left: 4 5 10)\n5 * 10 = 50 (left: 4 50)\n7 / 3 = 2.33333 (left: 2.33333)"
            ],
            "values": [
                0.002,
                0.001,
                40.001,
                60.0,
                0.0
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 0.027458
    },
    "901": {
        "input": "1 2 4 7",
        "step_1": {
            "steps": [
                "7 - 2 = 5 (left: 1 4 5)",
                "4 - 2 = 2 (left: 1 2 7)",
                "2 * 4 = 8 (left: 1 8 7)",
                "2 * 4 = 8 (left: 1 8 7)",
                "7 - 4 = 3 (left: 1 2 3)"
            ],
            "values": [
                2.0,
                0.003,
                2.001,
                1.002,
                2.001
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- 1.2",
                "4 <- INIT"
            ],
            "resampled_steps": [
                "",
                "",
                "",
                "2 * 4 = 8 (left: 1 8 7)",
                ""
            ]
        },
        "step_2": {
            "steps": [
                "7 - 2 = 5 (left: 1 4 5)",
                "7 - 2 = 5 (left: 1 4 5)",
                "7 - 4 = 3 (left: 1 3 7)",
                "2 * 4 = 8 (left: 1 8 7)\n8 / 1 = 8 (left: 8 7)",
                "1 + 2 = 3 (left: 3 4 7)"
            ],
            "values": [
                2.0,
                2.001,
                3.0,
                0.003,
                3.0
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- 2.2",
                "4 <- INIT"
            ],
            "resampled_steps": [
                "",
                "",
                "",
                "7 - 4 = 3 (left: 1 3 7)",
                ""
            ]
        },
        "step_3": {
            "steps": [
                "2 * 4 = 8 (left: 1 8 7)",
                "3 + 5 = 8 (left: 7 8 9)",
                "7 / 1 = 7 (left: 2 4 7)",
                "7 - 4 = 3 (left: 1 3 7)\n7 - 3 = 4 (left: 1 4)",
                "7 - 2 = 5 (left: 1 4 5)"
            ],
            "values": [
                1.002,
                22.0,
                2.001,
                60.0,
                2.001
            ],
            "resampled": [
                "0 <- 3.3",
                "1 <- 3.3",
                "2 <- 1.2",
                "3 <- INIT",
                "4 <- 3.3"
            ],
            "resampled_steps": [
                "7 - 4 = 3 (left: 1 3 7)\n7 - 3 = 4 (left: 1 4)",
                "7 - 4 = 3 (left: 1 3 7)\n7 - 3 = 4 (left: 1 4)",
                "2 * 4 = 8 (left: 1 8 7)",
                "",
                "7 - 4 = 3 (left: 1 3 7)\n7 - 3 = 4 (left: 1 4)"
            ]
        },
        "step_4": {
            "steps": [
                "7 - 4 = 3 (left: 1 3 7)\n7 - 3 = 4 (left: 1 4)\n4 - 1 = 3 (left: 3)",
                "7 - 4 = 3 (left: 1 3 7)\n7 - 3 = 4 (left: 1 4)\n1 * 4 = 4 (left: 4)",
                "2 * 4 = 8 (left: 1 8 7)\n7 - 1 = 6 (left: 6 7)",
                "9 - 3 = 6 (left: 5 7 6)",
                "7 - 4 = 3 (left: 1 3 7)\n7 - 3 = 4 (left: 1 4)\n1 + 4 = 5 (left: 5)"
            ],
            "values": [
                0.001,
                0.001,
                0.003,
                3.0,
                0.002
            ],
            "resampled": [
                "0 <- 3.3",
                "1 <- 2.0",
                "2 <- 3.1",
                "3 <- 3.3",
                "4 <- 2.1"
            ],
            "resampled_steps": [
                "7 - 4 = 3 (left: 1 3 7)\n7 - 3 = 4 (left: 1 4)",
                "7 - 2 = 5 (left: 1 4 5)",
                "3 + 5 = 8 (left: 7 8 9)",
                "7 - 4 = 3 (left: 1 3 7)\n7 - 3 = 4 (left: 1 4)",
                "7 - 2 = 5 (left: 1 4 5)"
            ]
        },
        "step_5": {
            "steps": [
                "7 - 4 = 3 (left: 1 3 7)\n7 - 3 = 4 (left: 1 4)\n1 * 4 = 4 (left: 4)",
                "7 - 2 = 5 (left: 1 4 5)\n9 * 3 = 27 (left: 27 27)",
                "3 + 5 = 8 (left: 7 8 9)\n12 + 3 = 15 (left: 5 15)",
                "7 - 4 = 3 (left: 1 3 7)\n7 - 3 = 4 (left: 1 4)\n1 * 4 = 4 (left: 4)",
                "7 - 2 = 5 (left: 1 4 5)\n4 + 1 = 5 (left: 5 5)"
            ],
            "values": [
                0.002,
                0.003,
                0.003,
                0.001,
                0.002
            ],
            "resampled": [
                "0 <- 3.3",
                "1 <- 3.3",
                "2 <- 3.3",
                "3 <- 4.3",
                "4 <- 3.1"
            ],
            "resampled_steps": [
                "7 - 4 = 3 (left: 1 3 7)\n7 - 3 = 4 (left: 1 4)",
                "7 - 4 = 3 (left: 1 3 7)\n7 - 3 = 4 (left: 1 4)",
                "7 - 4 = 3 (left: 1 3 7)\n7 - 3 = 4 (left: 1 4)",
                "9 - 3 = 6 (left: 5 7 6)",
                "3 + 5 = 8 (left: 7 8 9)"
            ]
        },
        "step_6": {
            "steps": [
                "7 - 4 = 3 (left: 1 3 7)\n7 - 3 = 4 (left: 1 4)\n1 * 4 = 4 (left: 4)",
                "7 - 4 = 3 (left: 1 3 7)\n7 - 3 = 4 (left: 1 4)\n1 + 4 = 5 (left: 5)",
                "7 - 4 = 3 (left: 1 3 7)\n7 - 3 = 4 (left: 1 4)\n1 + 4 = 5 (left: 5)",
                "9 - 3 = 6 (left: 5 7 6)\n7 - 6 = 1 (left: 1 7)",
                "3 + 5 = 8 (left: 7 8 9)\nInput: 3 5 2 6"
            ],
            "values": [
                0.003,
                0.003,
                0.001,
                20.0,
                0.003
            ],
            "resampled": [
                "0 <- 6.3",
                "1 <- 3.3",
                "2 <- 3.3",
                "3 <- 6.3",
                "4 <- 3.3"
            ],
            "resampled_steps": [
                "9 - 3 = 6 (left: 5 7 6)\n7 - 6 = 1 (left: 1 7)",
                "7 - 4 = 3 (left: 1 3 7)\n7 - 3 = 4 (left: 1 4)",
                "7 - 4 = 3 (left: 1 3 7)\n7 - 3 = 4 (left: 1 4)",
                "9 - 3 = 6 (left: 5 7 6)\n7 - 6 = 1 (left: 1 7)",
                "7 - 4 = 3 (left: 1 3 7)\n7 - 3 = 4 (left: 1 4)"
            ]
        },
        "step_7": {
            "steps": [
                "9 - 3 = 6 (left: 5 7 6)\n7 - 6 = 1 (left: 1 7)\n1 + 7 = 8",
                "7 - 4 = 3 (left: 1 3 7)\n7 - 3 = 4 (left: 1 4)\n4 / 1 = 4 (left: 4)",
                "7 - 4 = 3 (left: 1 3 7)\n7 - 3 = 4 (left: 1 4)\n1 + 4 = 5 (left: 5)",
                "9 - 3 = 6 (left: 5 7 6)\n7 - 6 = 1 (left: 1 7)\n7 - 1 = 6 (left: 6)",
                "7 - 4 = 3 (left: 1 3 7)\n7 - 3 = 4 (left: 1 4)\n1 * 4 = 4 (left: 4)"
            ],
            "values": [
                0.003,
                0.0,
                0.003,
                0.003,
                0.001
            ],
            "resampled": [
                "0 <- 3.3",
                "1 <- 3.3",
                "2 <- 3.3",
                "3 <- 3.3",
                "4 <- 3.3"
            ],
            "resampled_steps": [
                "7 - 4 = 3 (left: 1 3 7)\n7 - 3 = 4 (left: 1 4)",
                "7 - 4 = 3 (left: 1 3 7)\n7 - 3 = 4 (left: 1 4)",
                "7 - 4 = 3 (left: 1 3 7)\n7 - 3 = 4 (left: 1 4)",
                "7 - 4 = 3 (left: 1 3 7)\n7 - 3 = 4 (left: 1 4)",
                "7 - 4 = 3 (left: 1 3 7)\n7 - 3 = 4 (left: 1 4)"
            ]
        },
        "step_8": {
            "steps": [
                "7 - 4 = 3 (left: 1 3 7)\n7 - 3 = 4 (left: 1 4)\n1 + 4 = 5 (left: 5)",
                "7 - 4 = 3 (left: 1 3 7)\n7 - 3 = 4 (left: 1 4)\n4 / 1 = 4 (left: 4)",
                "7 - 4 = 3 (left: 1 3 7)\n7 - 3 = 4 (left: 1 4)\n4 - 1 = 3 (left: 3)",
                "7 - 4 = 3 (left: 1 3 7)\n7 - 3 = 4 (left: 1 4)\n4 - 1 = 3 (left: 3)",
                "7 - 4 = 3 (left: 1 3 7)\n7 - 3 = 4 (left: 1 4)\n4 - 1 = 3 (left: 3)"
            ],
            "values": [
                0.002,
                0.001,
                0.002,
                0.002,
                0.003
            ],
            "resampled": [
                "0 <- 3.3",
                "1 <- 6.3",
                "2 <- 3.3",
                "3 <- 1.2",
                "4 <- 6.3"
            ],
            "resampled_steps": [
                "7 - 4 = 3 (left: 1 3 7)\n7 - 3 = 4 (left: 1 4)",
                "9 - 3 = 6 (left: 5 7 6)\n7 - 6 = 1 (left: 1 7)",
                "7 - 4 = 3 (left: 1 3 7)\n7 - 3 = 4 (left: 1 4)",
                "2 * 4 = 8 (left: 1 8 7)",
                "9 - 3 = 6 (left: 5 7 6)\n7 - 6 = 1 (left: 1 7)"
            ]
        },
        "step_9": {
            "steps": [
                "7 - 4 = 3 (left: 1 3 7)\n7 - 3 = 4 (left: 1 4)\n4 / 1 = 4 (left: 4)",
                "9 - 3 = 6 (left: 5 7 6)\n7 - 6 = 1 (left: 1 7)\n7 - 1 = 6 (left: 6)",
                "7 - 4 = 3 (left: 1 3 7)\n7 - 3 = 4 (left: 1 4)\n4 - 1 = 3 (left: 3)",
                "2 * 4 = 8 (left: 1 8 7)\n8 - 1 = 7 (left: 7 7)",
                "9 - 3 = 6 (left: 5 7 6)\n7 - 6 = 1 (left: 1 7)\n1 + 7 = 8 (left: 8)"
            ],
            "values": [
                0.002,
                0.003,
                20.0,
                0.003,
                0.002
            ],
            "resampled": [
                "0 <- 9.2",
                "1 <- 9.2",
                "2 <- 3.3",
                "3 <- 6.3",
                "4 <- 6.3"
            ],
            "resampled_steps": [
                "7 - 4 = 3 (left: 1 3 7)\n7 - 3 = 4 (left: 1 4)\n4 - 1 = 3 (left: 3)",
                "7 - 4 = 3 (left: 1 3 7)\n7 - 3 = 4 (left: 1 4)\n4 - 1 = 3 (left: 3)",
                "7 - 4 = 3 (left: 1 3 7)\n7 - 3 = 4 (left: 1 4)",
                "9 - 3 = 6 (left: 5 7 6)\n7 - 6 = 1 (left: 1 7)",
                "9 - 3 = 6 (left: 5 7 6)\n7 - 6 = 1 (left: 1 7)"
            ]
        },
        "step_10": {
            "steps": [
                "7 - 4 = 3 (left: 1 3 7)\n7 - 3 = 4 (left: 1 4)\n4 - 1 = 3 (left: 3)\nThere are no possible next steps with the input of 3.",
                "7 - 4 = 3 (left: 1 3 7)\n7 - 3 = 4 (left: 1 4)\n4 - 1 = 3 (left: 3)\nThere are no possible next steps with just the number 3.",
                "7 - 4 = 3 (left: 1 3 7)\n7 - 3 = 4 (left: 1 4)\n1 * 4 = 4 (left: 4)",
                "9 - 3 = 6 (left: 5 7 6)\n7 - 6 = 1 (left: 1 7)\n1 + 7 = 8 (left: 8)",
                "9 - 3 = 6 (left: 5 7 6)\n7 - 6 = 1 (left: 1 7)\n7 - 1 = 6 (left: 6)"
            ],
            "values": [
                0.003,
                0.003,
                0.001,
                0.003,
                0.002
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 0.052456
    },
    "902": {
        "input": "2 5 8 11",
        "step_1": {
            "steps": [
                "11 - 5 = 6 (left: 2 6 11)",
                "8 + 2 = 10 (left: 5 10 11)",
                "8 * 2 = 16 (left: 5 11 16)",
                "8 - 5 = 3 (left: 2 3 11)",
                "2 + 5 = 7 (left: 7 8 11)"
            ],
            "values": [
                3.0,
                3.0,
                2.001,
                2.001,
                3.0
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- 1.4"
            ],
            "resampled_steps": [
                "",
                "",
                "",
                "",
                "2 + 5 = 7 (left: 7 8 11)"
            ]
        },
        "step_2": {
            "steps": [
                "12 - 9 = 3 (left: 3 9 15)",
                "8 * 11 = 88 (left: 2 5 88)",
                "9 / 3 = 3 (left: 3 6 3)",
                "2 + 5 = 7 (left: 7 8 11)",
                "2 + 5 = 7 (left: 7 8 11)\n8 * 7 = 56 (left: 11 56)"
            ],
            "values": [
                1.002,
                1.002,
                22.0,
                2.001,
                0.003
            ],
            "resampled": [
                "0 <- 2.2",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- 2.2",
                "4 <- 2.3"
            ],
            "resampled_steps": [
                "9 / 3 = 3 (left: 3 6 3)",
                "",
                "",
                "9 / 3 = 3 (left: 3 6 3)",
                "2 + 5 = 7 (left: 7 8 11)"
            ]
        },
        "step_3": {
            "steps": [
                "9 / 3 = 3 (left: 3 6 3)\n6 - 3 = 3 (left: 3 3 3)",
                "5 - 2 = 3 (left: 3 8 11)",
                "2 + 8 = 10 (left: 10 5 11)",
                "9 / 3 = 3 (left: 3 6 3)\n6 - 3 = 3 (left: 3 3 3)",
                "2 + 5 = 7 (left: 7 8 11)\n8 - 7 = 1 (left: 1 11)"
            ],
            "values": [
                1.002,
                60.0,
                1.002,
                0.003,
                60.0
            ],
            "resampled": [
                "0 <- 3.4",
                "1 <- 3.1",
                "2 <- 3.1",
                "3 <- 1.0",
                "4 <- 3.0"
            ],
            "resampled_steps": [
                "2 + 5 = 7 (left: 7 8 11)\n8 - 7 = 1 (left: 1 11)",
                "5 - 2 = 3 (left: 3 8 11)",
                "5 - 2 = 3 (left: 3 8 11)",
                "11 - 5 = 6 (left: 2 6 11)",
                "9 / 3 = 3 (left: 3 6 3)\n6 - 3 = 3 (left: 3 3 3)"
            ]
        },
        "step_4": {
            "steps": [
                "2 + 5 = 7 (left: 7 8 11)\n8 - 7 = 1 (left: 1 11)\n3 + 5 = 8 (left: 7 8)",
                "5 - 2 = 3 (left: 3 8 11)\n11 - 8 = 3 (left: 3 11)",
                "5 - 2 = 3 (left: 3 8 11)\n3 + 8 = 11 (left: 11 11)",
                "11 - 5 = 6 (left: 2 6 11)\n7 / 3 = 2.333 (left: 2.333 5)",
                "9 / 3 = 3 (left: 3 6 3)\n6 - 3 = 3 (left: 3 3 3)\n3 * 3 = 9 (left: 3 9)"
            ],
            "values": [
                0.002,
                0.002,
                0.003,
                0.002,
                0.003
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- 4.4",
                "2 <- 3.1",
                "3 <- 3.4",
                "4 <- 3.4"
            ],
            "resampled_steps": [
                "",
                "9 / 3 = 3 (left: 3 6 3)\n6 - 3 = 3 (left: 3 3 3)\n3 * 3 = 9 (left: 3 9)",
                "5 - 2 = 3 (left: 3 8 11)",
                "2 + 5 = 7 (left: 7 8 11)\n8 - 7 = 1 (left: 1 11)",
                "2 + 5 = 7 (left: 7 8 11)\n8 - 7 = 1 (left: 1 11)"
            ]
        },
        "step_5": {
            "steps": [
                "5 * 8 = 40 (left: 2 40 11)",
                "9 / 3 = 3 (left: 3 6 3)\n6 - 3 = 3 (left: 3 3 3)\n3 * 3 = 9 (left: 3 9)\nInput: 5 10",
                "5 - 2 = 3 (left: 3 8 11)\n3 + 8 = 11 (left: 11 11)",
                "2 + 5 = 7 (left: 7 8 11)\n8 - 7 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)",
                "2 + 5 = 7 (left: 7 8 11)\n8 - 7 = 1 (left: 1 11)\n1 * 11 = 11 (left: 11)"
            ],
            "values": [
                1.002,
                0.003,
                0.003,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 1.2",
                "1 <- 3.4",
                "2 <- 3.4",
                "3 <- 3.1",
                "4 <- 1.4"
            ],
            "resampled_steps": [
                "8 * 2 = 16 (left: 5 11 16)",
                "2 + 5 = 7 (left: 7 8 11)\n8 - 7 = 1 (left: 1 11)",
                "2 + 5 = 7 (left: 7 8 11)\n8 - 7 = 1 (left: 1 11)",
                "5 - 2 = 3 (left: 3 8 11)",
                "2 + 5 = 7 (left: 7 8 11)"
            ]
        },
        "step_6": {
            "steps": [
                "8 * 2 = 16 (left: 5 11 16)\nInput: 3 9 5 7",
                "2 + 5 = 7 (left: 7 8 11)\n8 - 7 = 1 (left: 1 11)\n11 / 1 = 11 (left: 11)",
                "2 + 5 = 7 (left: 7 8 11)\n8 - 7 = 1 (left: 1 11)\n1 + 11 = 12 (left: 12)",
                "5 - 2 = 3 (left: 3 8 11)\n7 + 5 = 12 (left: 9 12 13)",
                "2 + 5 = 7 (left: 7 8 11)\n8 - 7 = 1 (left: 1 11)"
            ],
            "values": [
                0.003,
                0.002,
                0.003,
                0.003,
                40.0
            ],
            "resampled": [
                "0 <- 2.0",
                "1 <- 6.4",
                "2 <- 6.4",
                "3 <- INIT",
                "4 <- 6.4"
            ],
            "resampled_steps": [
                "12 - 9 = 3 (left: 3 9 15)",
                "2 + 5 = 7 (left: 7 8 11)\n8 - 7 = 1 (left: 1 11)",
                "2 + 5 = 7 (left: 7 8 11)\n8 - 7 = 1 (left: 1 11)",
                "",
                "2 + 5 = 7 (left: 7 8 11)\n8 - 7 = 1 (left: 1 11)"
            ]
        },
        "step_7": {
            "steps": [
                "12 - 9 = 3 (left: 3 9 15)\n15 - 9 = 6 (left: 3 6)",
                "2 + 5 = 7 (left: 7 8 11)\n8 - 7 = 1 (left: 1 11)\n1 + 11 = 12 (left: 12)",
                "2 + 5 = 7 (left: 7 8 11)\n8 - 7 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)",
                "11 - 5 = 6 (left: 2 6 8)",
                "2 + 5 = 7 (left: 7 8 11)\n8 - 7 = 1 (left: 1 11)\n11 / 1 = 11 (left: 11)"
            ],
            "values": [
                1.001,
                0.002,
                0.003,
                3.0,
                0.002
            ],
            "resampled": [
                "0 <- 6.4",
                "1 <- 6.4",
                "2 <- 3.4",
                "3 <- 3.1",
                "4 <- 6.4"
            ],
            "resampled_steps": [
                "2 + 5 = 7 (left: 7 8 11)\n8 - 7 = 1 (left: 1 11)",
                "2 + 5 = 7 (left: 7 8 11)\n8 - 7 = 1 (left: 1 11)",
                "2 + 5 = 7 (left: 7 8 11)\n8 - 7 = 1 (left: 1 11)",
                "5 - 2 = 3 (left: 3 8 11)",
                "2 + 5 = 7 (left: 7 8 11)\n8 - 7 = 1 (left: 1 11)"
            ]
        },
        "step_8": {
            "steps": [
                "2 + 5 = 7 (left: 7 8 11)\n8 - 7 = 1 (left: 1 11)\n1 + 11 = 12 (left: 12)",
                "2 + 5 = 7 (left: 7 8 11)\n8 - 7 = 1 (left: 1 11)\n1 + 11 = 12 (left: 12)",
                "2 + 5 = 7 (left: 7 8 11)\n8 - 7 = 1 (left: 1 11)\n1 * 11 = 11 (left: 11)",
                "5 - 2 = 3 (left: 3 8 11)\n3 * 8 = 24 (left: 24)",
                "2 + 5 = 7 (left: 7 8 11)\n8 - 7 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)"
            ],
            "values": [
                0.003,
                0.002,
                0.003,
                60.0,
                0.003
            ],
            "resampled": [
                "0 <- 3.4",
                "1 <- 8.3",
                "2 <- 2.0",
                "3 <- 2.2",
                "4 <- 6.4"
            ],
            "resampled_steps": [
                "2 + 5 = 7 (left: 7 8 11)\n8 - 7 = 1 (left: 1 11)",
                "5 - 2 = 3 (left: 3 8 11)\n3 * 8 = 24 (left: 24)",
                "12 - 9 = 3 (left: 3 9 15)",
                "9 / 3 = 3 (left: 3 6 3)",
                "2 + 5 = 7 (left: 7 8 11)\n8 - 7 = 1 (left: 1 11)"
            ]
        },
        "step_9": {
            "steps": [
                "2 + 5 = 7 (left: 7 8 11)\n8 - 7 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)",
                "5 - 2 = 3 (left: 3 8 11)\n3 * 8 = 24 (left: 24)\nAnswer: (5 - 2) * 8 = 24",
                "12 - 9 = 3 (left: 3 9 15)\n15 / 3 = 5 (left: 5 9)",
                "9 / 3 = 3 (left: 3 6 3)\n3 / 3 = 1 (left: 1 3 3)",
                "2 + 5 = 7 (left: 7 8 11)\n8 - 7 = 1 (left: 1 11)\n11 / 1 = 11 (left: 11)"
            ],
            "values": [
                0.002,
                60.0,
                0.003,
                0.003,
                0.0
            ],
            "resampled": [
                "0 <- 9.1",
                "1 <- 9.1",
                "2 <- 2.2",
                "3 <- 8.3",
                "4 <- 9.1"
            ],
            "resampled_steps": [
                "5 - 2 = 3 (left: 3 8 11)\n3 * 8 = 24 (left: 24)\nAnswer: (5 - 2) * 8 = 24",
                "5 - 2 = 3 (left: 3 8 11)\n3 * 8 = 24 (left: 24)\nAnswer: (5 - 2) * 8 = 24",
                "9 / 3 = 3 (left: 3 6 3)",
                "5 - 2 = 3 (left: 3 8 11)\n3 * 8 = 24 (left: 24)",
                "5 - 2 = 3 (left: 3 8 11)\n3 * 8 = 24 (left: 24)\nAnswer: (5 - 2) * 8 = 24"
            ]
        },
        "step_10": {
            "steps": [
                "5 - 2 = 3 (left: 3 8 11)\n3 * 8 = 24 (left: 24)\nAnswer: (5 - 2) * 8 = 24\nInput: 3 5 7 9\nSteps:\n3 * 7 = 21 (left: 5 9 21)\n21 - 9 = 12 (left: 5 12)\n12 + 5 = 17 (left: 17)\n17 + 7 = 24 (left: 24)\nAnswer: ((3 * 7) - 9) + 5 + 7 = 24",
                "5 - 2 = 3 (left: 3 8 11)\n3 * 8 = 24 (left: 24)\nAnswer: (5 - 2) * 8 = 24\nInput: 3 3 7 9\nSteps:\n7 - 3 = 4 (left: 3 4 9)\n4 * 9 = 36 (left: 3 36)\n36 / 3 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((7 - 3) * 9) / 3 * 2 = 24",
                "9 / 3 = 3 (left: 3 6 3)\n6 / 3 = 2 (left: 2 3 3)",
                "5 - 2 = 3 (left: 3 8 11)\n3 * 8 = 24 (left: 24)\nAnswer: (5 - 2) * 8 = 24",
                "5 - 2 = 3 (left: 3 8 11)\n3 * 8 = 24 (left: 24)\nAnswer: (5 - 2) * 8 = 24\nInput: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n1 * 9 = 9 (left: 9)\n9 * 3 = 27 (left: 27)\n27 - 9 = 18 (left: 18)\n18 / 9 = 2 (left: 2)\n2 * 24 = 48 (left: 48)\n48 / 2 = 24 (left: 24)\nAnswer: (((3 * 3) - 8) * 9) / (9 / 3) = 24"
            ],
            "values": [
                60.0,
                60.0,
                2.0,
                60.0,
                60.0
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 0.080616
    },
    "903": {
        "input": "3 4 4 13",
        "step_1": {
            "steps": [
                "4 - 3 = 1 (left: 1 4 13)",
                "13 - 3 = 10 (left: 4 4 10)",
                "3 + 4 = 7 (left: 4 7 13)",
                "13 + 3 = 16 (left: 4 4 16)",
                "13 - 3 = 10 (left: 4 4 10)"
            ],
            "values": [
                3.0,
                40.0,
                22.0,
                20.002,
                60.0
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- 1.4",
                "2 <- 1.4",
                "3 <- 1.4",
                "4 <- 1.4"
            ],
            "resampled_steps": [
                "",
                "13 - 3 = 10 (left: 4 4 10)",
                "13 - 3 = 10 (left: 4 4 10)",
                "13 - 3 = 10 (left: 4 4 10)",
                "13 - 3 = 10 (left: 4 4 10)"
            ]
        },
        "step_2": {
            "steps": [
                "13 - 3 = 10 (left: 3 4 10)",
                "13 - 3 = 10 (left: 4 4 10)\n10 / 4 = 2.5 (left: 2.5 4)",
                "13 - 3 = 10 (left: 4 4 10)\n3 + 5 = 8 (left: 7 8 9)",
                "13 - 3 = 10 (left: 4 4 10)\n10 / 4 = 2.5 (left: 2.5 4)",
                "13 - 3 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)"
            ],
            "values": [
                22.0,
                21.001,
                41.0,
                60.0,
                60.0
            ],
            "resampled": [
                "0 <- 2.4",
                "1 <- INIT",
                "2 <- 2.3",
                "3 <- 1.3",
                "4 <- 2.4"
            ],
            "resampled_steps": [
                "13 - 3 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)",
                "",
                "13 - 3 = 10 (left: 4 4 10)\n10 / 4 = 2.5 (left: 2.5 4)",
                "13 + 3 = 16 (left: 4 4 16)",
                "13 - 3 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)"
            ]
        },
        "step_3": {
            "steps": [
                "13 - 3 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n25 / 5 = 5 (left: 5)",
                "4 + 3 = 7 (left: 7 4 13)",
                "13 - 3 = 10 (left: 4 4 10)\n10 / 4 = 2.5 (left: 2.5 4)\n4 / 2.5 = 1.6 (left: 1.6)",
                "13 + 3 = 16 (left: 4 4 16)\n4 * 4 = 16 (left: 16 16)",
                "13 - 3 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n4 / 6 = 0.6666666666666666 (left: 0.6666666666666666)"
            ],
            "values": [
                0.002,
                60.0,
                0.0,
                0.003,
                1.002
            ],
            "resampled": [
                "0 <- 1.2",
                "1 <- 3.1",
                "2 <- 2.3",
                "3 <- 2.0",
                "4 <- 2.4"
            ],
            "resampled_steps": [
                "3 + 4 = 7 (left: 4 7 13)",
                "4 + 3 = 7 (left: 7 4 13)",
                "13 - 3 = 10 (left: 4 4 10)\n10 / 4 = 2.5 (left: 2.5 4)",
                "13 - 3 = 10 (left: 3 4 10)",
                "13 - 3 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)"
            ]
        },
        "step_4": {
            "steps": [
                "3 + 4 = 7 (left: 4 7 13)\n7 - 4 = 3 (left: 3 7)",
                "4 + 3 = 7 (left: 7 4 13)\n7 / 4 = 1.75 (left: 1.75 13)",
                "13 - 3 = 10 (left: 4 4 10)\n10 / 4 = 2.5 (left: 2.5 4)\n5 / 5 = 1 (left: 1 5)",
                "13 - 3 = 10 (left: 3 4 10)\n10 - 3 = 7 (left: 7 10)",
                "13 - 3 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n9 - 3 = 6 (left: 6 27)"
            ],
            "values": [
                0.0,
                3.0,
                0.003,
                1.001,
                1.002
            ],
            "resampled": [
                "0 <- 1.1",
                "1 <- 1.3",
                "2 <- 2.3",
                "3 <- 2.4",
                "4 <- 3.1"
            ],
            "resampled_steps": [
                "13 - 3 = 10 (left: 4 4 10)",
                "13 + 3 = 16 (left: 4 4 16)",
                "13 - 3 = 10 (left: 4 4 10)\n10 / 4 = 2.5 (left: 2.5 4)",
                "13 - 3 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)",
                "4 + 3 = 7 (left: 7 4 13)"
            ]
        },
        "step_5": {
            "steps": [
                "13 - 3 = 10 (left: 4 4 10)\n4 + 4 = 8 (left: 8 10)",
                "13 + 3 = 16 (left: 4 4 16)\n5 * 6 = 30 (left: 1 2 3 4 30)",
                "13 - 3 = 10 (left: 4 4 10)\n10 / 4 = 2.5 (left: 2.5 4)\n2.5 - 4 = -1.5 (left: -1.5)",
                "13 - 3 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n6 / 4 = 1.5 (left: 1.5)",
                "4 + 3 = 7 (left: 7 4 13)\n7 - 4 = 3 (left: 3 13)"
            ],
            "values": [
                1.002,
                60.0,
                0.0,
                0.001,
                0.003
            ],
            "resampled": [
                "0 <- 2.3",
                "1 <- 1.1",
                "2 <- 1.4",
                "3 <- 5.1",
                "4 <- 2.3"
            ],
            "resampled_steps": [
                "13 - 3 = 10 (left: 4 4 10)\n10 / 4 = 2.5 (left: 2.5 4)",
                "13 - 3 = 10 (left: 4 4 10)",
                "13 - 3 = 10 (left: 4 4 10)",
                "13 + 3 = 16 (left: 4 4 16)\n5 * 6 = 30 (left: 1 2 3 4 30)",
                "13 - 3 = 10 (left: 4 4 10)\n10 / 4 = 2.5 (left: 2.5 4)"
            ]
        },
        "step_6": {
            "steps": [
                "13 - 3 = 10 (left: 4 4 10)\n10 / 4 = 2.5 (left: 2.5 4)\n2.5 * 4 = 10 (left: 10)",
                "13 - 3 = 10 (left: 4 4 10)\n4 + 4 = 8 (left: 8 10)",
                "13 - 3 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)",
                "13 + 3 = 16 (left: 4 4 16)\n5 * 6 = 30 (left: 1 2 3 4 30)\n2 + 3 = 5 (left: 1 5 4 30)",
                "13 - 3 = 10 (left: 4 4 10)\n10 / 4 = 2.5 (left: 2.5 4)\n15 / 5 = 3 (left: 3 15)"
            ],
            "values": [
                0.003,
                0.002,
                60.0,
                2.0,
                0.003
            ],
            "resampled": [
                "0 <- 1.4",
                "1 <- 1.4",
                "2 <- 2.4",
                "3 <- 2.1",
                "4 <- 6.2"
            ],
            "resampled_steps": [
                "13 - 3 = 10 (left: 4 4 10)",
                "13 - 3 = 10 (left: 4 4 10)",
                "13 - 3 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)",
                "13 - 3 = 10 (left: 4 4 10)\n10 / 4 = 2.5 (left: 2.5 4)",
                "13 - 3 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)"
            ]
        },
        "step_7": {
            "steps": [
                "13 - 3 = 10 (left: 4 4 10)\n4 * 4 = 16 (left: 16 10)",
                "13 - 3 = 10 (left: 4 4 10)\n4 / 4 = 1 (left: 1 10)",
                "13 - 3 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n6 - 4 = 2 (left: 2)",
                "13 - 3 = 10 (left: 4 4 10)\n10 / 4 = 2.5 (left: 2.5 4)\n2.5 * 4 = 10 (left: 10)",
                "13 - 3 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)"
            ],
            "values": [
                0.003,
                41.0,
                0.001,
                0.003,
                60.0
            ],
            "resampled": [
                "0 <- 2.3",
                "1 <- 2.4",
                "2 <- 6.2",
                "3 <- 2.4",
                "4 <- 3.1"
            ],
            "resampled_steps": [
                "13 - 3 = 10 (left: 4 4 10)\n10 / 4 = 2.5 (left: 2.5 4)",
                "13 - 3 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)",
                "13 - 3 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)",
                "13 - 3 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)",
                "4 + 3 = 7 (left: 7 4 13)"
            ]
        },
        "step_8": {
            "steps": [
                "13 - 3 = 10 (left: 4 4 10)\n10 / 4 = 2.5 (left: 2.5 4)\n4 - 2.5 = 1.5 (left: 1.5)",
                "13 - 3 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "13 - 3 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\nPossible next steps:",
                "13 - 3 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "4 + 3 = 7 (left: 7 4 13)\n13 / 7 = 1.857 (left: 1.857 4)"
            ],
            "values": [
                0.0,
                60.0,
                0.003,
                60.0,
                1.001
            ],
            "resampled": [
                "0 <- 8.1",
                "1 <- 7.4",
                "2 <- 7.4",
                "3 <- 7.4",
                "4 <- 8.3"
            ],
            "resampled_steps": [
                "13 - 3 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "13 - 3 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "13 - 3 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "13 - 3 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "13 - 3 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)"
            ]
        },
        "step_9": {
            "steps": [
                "13 - 3 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (13 - 3) * (4 - 4) = 24",
                "13 - 3 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * (10 - (13 - 3)) = 24",
                "13 - 3 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * (10 - (13 - 3)) = 24",
                "13 - 3 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (13 - 3) * (4 - 4) = 24",
                "13 - 3 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * (10 - (13 - 3)) = 24"
            ],
            "values": [
                0.003,
                20.002,
                60.0,
                0.003,
                20.002
            ],
            "resampled": [
                "0 <- 5.1",
                "1 <- 8.3",
                "2 <- 7.4",
                "3 <- 1.3",
                "4 <- 1.4"
            ],
            "resampled_steps": [
                "13 + 3 = 16 (left: 4 4 16)\n5 * 6 = 30 (left: 1 2 3 4 30)",
                "13 - 3 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "13 - 3 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "13 + 3 = 16 (left: 4 4 16)",
                "13 - 3 = 10 (left: 4 4 10)"
            ]
        },
        "step_10": {
            "steps": [
                "13 + 3 = 16 (left: 4 4 16)\n5 * 6 = 30 (left: 1 2 3 4 30)\n4 * 30 = 120 (left: 1 2 3 120)",
                "13 - 3 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (13 - 3) * (4 - 4) = 24",
                "13 - 3 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (13 - 3) - (4 - 4) = 24",
                "13 + 3 = 16 (left: 4 4 16)\n4 / 4 = 1 (left: 1 16)",
                "13 - 3 = 10 (left: 4 4 10)\n4 + 4 = 8 (left: 8 10)"
            ],
            "values": [
                60.0,
                0.003,
                20.002,
                1.002,
                0.001
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 0.10846
    },
    "904": {
        "input": "6 7 8 9",
        "step_1": {
            "steps": [
                "8 + 9 = 17 (left: 6 7 17)",
                "7 + 8 = 15 (left: 6 9 15)",
                "6 - 7 = -1 (left: -1 8 9)",
                "7 * 8 = 56 (left: 6 9 56)",
                "7 / 6 = 1.16666666667 (left: 1.16666666667 8 9)"
            ],
            "values": [
                1.002,
                1.002,
                2.001,
                2.001,
                3.0
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- INIT"
            ],
            "resampled_steps": [
                "",
                "",
                "",
                "",
                ""
            ]
        },
        "step_2": {
            "steps": [
                "5 + 6 = 11 (left: 3 7 11)",
                "6 * 7 = 42 (left: 8 9 42)",
                "6 * 7 = 42 (left: 8 9 42)",
                "9 - 6 = 3 (left: 3 7 8)",
                "7 - 8 = -1 (left: 6 -1 9)"
            ],
            "values": [
                0.003,
                3.0,
                1.002,
                3.0,
                2.001
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- 2.4",
                "2 <- INIT",
                "3 <- 2.1",
                "4 <- 1.3"
            ],
            "resampled_steps": [
                "",
                "7 - 8 = -1 (left: 6 -1 9)",
                "",
                "6 * 7 = 42 (left: 8 9 42)",
                "7 * 8 = 56 (left: 6 9 56)"
            ]
        },
        "step_3": {
            "steps": [
                "8 / 9 = 0.8888888888888888 (left: 6 7 0.8888888888888888)",
                "7 - 8 = -1 (left: 6 -1 9)\n6 - 9 = -3 (left: -1 -3)",
                "3 * 4 = 12 (left: 5 6 12)",
                "6 * 7 = 42 (left: 8 9 42)\n9 - 8 = 1 (left: 1 42)",
                "7 * 8 = 56 (left: 6 9 56)\n6 + 9 = 15 (left: 15 56)"
            ],
            "values": [
                2.001,
                0.003,
                22.0,
                0.002,
                0.003
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- 2.1",
                "3 <- INIT",
                "4 <- 3.2"
            ],
            "resampled_steps": [
                "",
                "",
                "6 * 7 = 42 (left: 8 9 42)",
                "",
                "3 * 4 = 12 (left: 5 6 12)"
            ]
        },
        "step_4": {
            "steps": [
                "8 / 7 = 1.1428571428571428 (left: 1.1428571428571428 8 9)",
                "8 - 7 = 1 (left: 6 1 9)",
                "6 * 7 = 42 (left: 8 9 42)\n9 + 8 = 17 (left: 17 42)",
                "7 - 6 = 1 (left: 1 8 9)",
                "3 * 4 = 12 (left: 5 6 12)\n6 - 5 = 1 (left: 1 12)"
            ],
            "values": [
                2.001,
                1.002,
                0.002,
                2.001,
                0.003
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- 3.2",
                "2 <- 3.2",
                "3 <- INIT",
                "4 <- INIT"
            ],
            "resampled_steps": [
                "",
                "3 * 4 = 12 (left: 5 6 12)",
                "3 * 4 = 12 (left: 5 6 12)",
                "",
                ""
            ]
        },
        "step_5": {
            "steps": [
                "8 - 9 = -1 (left: 6 7 -1)",
                "3 * 4 = 12 (left: 5 6 12)\n12 - 6 = 6 (left: 5 6)",
                "3 * 4 = 12 (left: 5 6 12)\n5 - 6 = -1 (left: -1 12)",
                "6 * 7 = 42 (left: 8 9 42)",
                "6 * 7 = 42 (left: 8 9 42)"
            ],
            "values": [
                2.001,
                0.003,
                1.002,
                2.001,
                1.002
            ],
            "resampled": [
                "0 <- 5.0",
                "1 <- 3.0",
                "2 <- 2.4",
                "3 <- 2.2",
                "4 <- 3.2"
            ],
            "resampled_steps": [
                "8 - 9 = -1 (left: 6 7 -1)",
                "8 / 9 = 0.8888888888888888 (left: 6 7 0.8888888888888888)",
                "7 - 8 = -1 (left: 6 -1 9)",
                "6 * 7 = 42 (left: 8 9 42)",
                "3 * 4 = 12 (left: 5 6 12)"
            ]
        },
        "step_6": {
            "steps": [
                "8 - 9 = -1 (left: 6 7 -1)\n-1 + 6 = 5 (left: 6 -1)",
                "8 / 9 = 0.8888888888888888 (left: 6 7 0.8888888888888888)\n7 - 6 = 1 (left: 1 0.8888888888888888)",
                "7 - 8 = -1 (left: 6 -1 9)\n-1 + 9 = 8 (left: 6 8)",
                "6 * 7 = 42 (left: 8 9 42)\n42 / 8 = 5.25 (left: 9 5.25)",
                "3 * 4 = 12 (left: 5 6 12)\n3 / 7 = 0.4286 (left: 0.4286 7)"
            ],
            "values": [
                2.001,
                3.0,
                0.003,
                0.003,
                1.002
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- 3.2",
                "2 <- 2.1",
                "3 <- 5.0",
                "4 <- 3.2"
            ],
            "resampled_steps": [
                "",
                "3 * 4 = 12 (left: 5 6 12)",
                "6 * 7 = 42 (left: 8 9 42)",
                "8 - 9 = -1 (left: 6 7 -1)",
                "3 * 4 = 12 (left: 5 6 12)"
            ]
        },
        "step_7": {
            "steps": [
                "9 - 7 = 2 (left: 6 2 8)",
                "3 * 4 = 12 (left: 5 6 12)\n12 - 6 = 6 (left: 5 6)",
                "6 * 7 = 42 (left: 8 9 42)\n42 / 8 = 5.25 (left: 5.25)",
                "8 - 9 = -1 (left: 6 7 -1)\n7 - 6 = 1 (left: 1 -1)",
                "3 * 4 = 12 (left: 5 6 12)\n3 + 4 = 7 (left: 2 7 5)"
            ],
            "values": [
                3.0,
                0.002,
                0.002,
                0.003,
                3.0
            ],
            "resampled": [
                "0 <- 1.4",
                "1 <- 3.2",
                "2 <- 3.2",
                "3 <- 2.3",
                "4 <- 7.4"
            ],
            "resampled_steps": [
                "7 / 6 = 1.16666666667 (left: 1.16666666667 8 9)",
                "3 * 4 = 12 (left: 5 6 12)",
                "3 * 4 = 12 (left: 5 6 12)",
                "9 - 6 = 3 (left: 3 7 8)",
                "3 * 4 = 12 (left: 5 6 12)\n3 + 4 = 7 (left: 2 7 5)"
            ]
        },
        "step_8": {
            "steps": [
                "7 / 6 = 1.16666666667 (left: 1.16666666667 8 9)\n9 - 1.16666666667 = 7.83333333333 (left: 7.83333333333 8)",
                "3 * 4 = 12 (left: 5 6 12)\n12 - 5 = 7 (left: 7 12)",
                "3 * 4 = 12 (left: 5 6 12)\n5 + 6 = 11 (left: 11 12)",
                "9 - 6 = 3 (left: 3 7 8)\n6 - 5 = 1 (left: 1 9)",
                "3 * 4 = 12 (left: 5 6 12)\n3 + 4 = 7 (left: 2 7 5)\n2 + 7 = 9 (left: 5 9)"
            ],
            "values": [
                3.0,
                0.003,
                0.002,
                60.0,
                0.003
            ],
            "resampled": [
                "0 <- 8.3",
                "1 <- 8.3",
                "2 <- 8.3",
                "3 <- 8.3",
                "4 <- 6.4"
            ],
            "resampled_steps": [
                "9 - 6 = 3 (left: 3 7 8)\n6 - 5 = 1 (left: 1 9)",
                "9 - 6 = 3 (left: 3 7 8)\n6 - 5 = 1 (left: 1 9)",
                "9 - 6 = 3 (left: 3 7 8)\n6 - 5 = 1 (left: 1 9)",
                "9 - 6 = 3 (left: 3 7 8)\n6 - 5 = 1 (left: 1 9)",
                "3 * 4 = 12 (left: 5 6 12)\n3 / 7 = 0.4286 (left: 0.4286 7)"
            ]
        },
        "step_9": {
            "steps": [
                "9 - 6 = 3 (left: 3 7 8)\n6 - 5 = 1 (left: 1 9)\n1 * 9 = 9 (left: 9)",
                "9 - 6 = 3 (left: 3 7 8)\n6 - 5 = 1 (left: 1 9)\n1 + 9 = 10 (left: 9 10)",
                "9 - 6 = 3 (left: 3 7 8)\n6 - 5 = 1 (left: 1 9)\n1 + 9 = 10 (left: 10)",
                "9 - 6 = 3 (left: 3 7 8)\n6 - 5 = 1 (left: 1 9)\n5 + 10 = 15 (left: 15)",
                "3 * 4 = 12 (left: 5 6 12)\n3 / 7 = 0.4286 (left: 0.4286 7)\n7 / 0.4286 = 16.3333 (left: 16.3333)"
            ],
            "values": [
                0.0,
                1.0,
                0.003,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 8.3",
                "1 <- 6.1",
                "2 <- 3.2",
                "3 <- 6.1",
                "4 <- 6.4"
            ],
            "resampled_steps": [
                "9 - 6 = 3 (left: 3 7 8)\n6 - 5 = 1 (left: 1 9)",
                "8 / 9 = 0.8888888888888888 (left: 6 7 0.8888888888888888)\n7 - 6 = 1 (left: 1 0.8888888888888888)",
                "3 * 4 = 12 (left: 5 6 12)",
                "8 / 9 = 0.8888888888888888 (left: 6 7 0.8888888888888888)\n7 - 6 = 1 (left: 1 0.8888888888888888)",
                "3 * 4 = 12 (left: 5 6 12)\n3 / 7 = 0.4286 (left: 0.4286 7)"
            ]
        },
        "step_10": {
            "steps": [
                "9 - 6 = 3 (left: 3 7 8)\n6 - 5 = 1 (left: 1 9)\n9 - 1 = 8 (left: 8)",
                "8 / 9 = 0.8888888888888888 (left: 6 7 0.8888888888888888)\n7 - 6 = 1 (left: 1 0.8888888888888888)\n1 * 0.8888888888888888 = 0.8888888888888888 (left: 0.8888888888888888 0.8888888888888888)",
                "3 * 4 = 12 (left: 5 6 12)\n6 / 5 = 1.2 (left: 1.2 12)",
                "8 / 9 = 0.8888888888888888 (left: 6 7 0.8888888888888888)\n7 - 6 = 1 (left: 1 0.8888888888888888)\n1 + 0.8888888888888888 = 1.8888888888888888",
                "3 * 4 = 12 (left: 5 6 12)\n3 / 7 = 0.4286 (left: 0.4286 7)\n0.4286 * 7 = 3 (left: 3)"
            ],
            "values": [
                0.003,
                2.001,
                1.002,
                0.003,
                0.003
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 0.141895
    },
    "905": {
        "input": "1 11 11 13",
        "step_1": {
            "steps": [
                "1 + 11 = 12 (left: 11 13 12)",
                "1 + 11 = 12 (left: 11 12 13)",
                "13 - 1 = 12 (left: 11 11 12)",
                "1 + 11 = 12 (left: 11 12 13)",
                "13 - 11 = 2 (left: 1 11 2)"
            ],
            "values": [
                60.0,
                40.0,
                0.003,
                60.0,
                1.001
            ],
            "resampled": [
                "0 <- 1.3",
                "1 <- 1.1",
                "2 <- 1.3",
                "3 <- 1.0",
                "4 <- 1.3"
            ],
            "resampled_steps": [
                "1 + 11 = 12 (left: 11 12 13)",
                "1 + 11 = 12 (left: 11 12 13)",
                "1 + 11 = 12 (left: 11 12 13)",
                "1 + 11 = 12 (left: 11 13 12)",
                "1 + 11 = 12 (left: 11 12 13)"
            ]
        },
        "step_2": {
            "steps": [
                "1 + 11 = 12 (left: 11 12 13)\n13 / 11 = 1.1818181818181819 (left: 1.1818181818181819 12)",
                "1 + 11 = 12 (left: 11 12 13)\n12 / 13 = 0.9230769230769231 (left: 11)",
                "1 + 11 = 12 (left: 11 12 13)\n5 * 6 = 30 (left: 7 8 30)",
                "1 + 11 = 12 (left: 11 13 12)\n11 * 13 = 143 (left: 12 143)",
                "1 + 11 = 12 (left: 11 12 13)\n11 * 12 = 132 (left: 13 132)"
            ],
            "values": [
                2.0,
                0.003,
                0.003,
                0.001,
                0.003
            ],
            "resampled": [
                "0 <- 1.3",
                "1 <- INIT",
                "2 <- 1.0",
                "3 <- 1.0",
                "4 <- 1.3"
            ],
            "resampled_steps": [
                "1 + 11 = 12 (left: 11 12 13)",
                "",
                "1 + 11 = 12 (left: 11 13 12)",
                "1 + 11 = 12 (left: 11 13 12)",
                "1 + 11 = 12 (left: 11 12 13)"
            ]
        },
        "step_3": {
            "steps": [
                "1 + 11 = 12 (left: 11 12 13)\n11 / 12 = 0.9166666666666666 (left: 0.9166666666666666 13)",
                "13 - 1 = 12 (left: 11 11 12)",
                "1 + 11 = 12 (left: 11 13 12)\n13 / 12 = 1.08 (left: 1.08 12)",
                "1 + 11 = 12 (left: 11 13 12)\n20 - 15 = 5 (left: 5 20 50)",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)"
            ],
            "values": [
                1.002,
                0.003,
                0.002,
                22.0,
                60.0
            ],
            "resampled": [
                "0 <- 3.4",
                "1 <- 1.1",
                "2 <- 1.3",
                "3 <- 3.3",
                "4 <- 1.3"
            ],
            "resampled_steps": [
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)",
                "1 + 11 = 12 (left: 11 12 13)",
                "1 + 11 = 12 (left: 11 12 13)",
                "1 + 11 = 12 (left: 11 13 12)\n20 - 15 = 5 (left: 5 20 50)",
                "1 + 11 = 12 (left: 11 12 13)"
            ]
        },
        "step_4": {
            "steps": [
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)",
                "1 + 11 = 12 (left: 11 12 13)\n13 / 11 = 1.1818181818181819 (left: 1.1818181818181819 12)",
                "1 + 11 = 12 (left: 11 12 13)\n9 - 5 = 4 (left: 3 4 7)",
                "1 + 11 = 12 (left: 11 13 12)\n20 - 15 = 5 (left: 5 20 50)\n5 * 10 = 50 (left: 20 50)",
                "1 + 11 = 12 (left: 11 12 13)\n13 / 12 = 1.0833333333333333 (left: 1.0833333333333333 13)"
            ],
            "values": [
                0.003,
                1.0,
                2.0,
                21.001,
                2.0
            ],
            "resampled": [
                "0 <- 1.0",
                "1 <- 3.4",
                "2 <- 3.4",
                "3 <- 3.3",
                "4 <- 1.3"
            ],
            "resampled_steps": [
                "1 + 11 = 12 (left: 11 13 12)",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)",
                "1 + 11 = 12 (left: 11 13 12)\n20 - 15 = 5 (left: 5 20 50)",
                "1 + 11 = 12 (left: 11 12 13)"
            ]
        },
        "step_5": {
            "steps": [
                "1 + 11 = 12 (left: 11 13 12)\n5 + 2 = 7 (left: 7 10 4)",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6)",
                "1 + 11 = 12 (left: 11 13 12)\n20 - 15 = 5 (left: 5 20 50)\n50 - 20 = 30 (left: 5 30)",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)"
            ],
            "values": [
                3.0,
                0.002,
                0.003,
                2.001,
                60.0
            ],
            "resampled": [
                "0 <- 1.0",
                "1 <- 5.4",
                "2 <- 1.1",
                "3 <- 1.0",
                "4 <- 5.4"
            ],
            "resampled_steps": [
                "1 + 11 = 12 (left: 11 13 12)",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)",
                "1 + 11 = 12 (left: 11 12 13)",
                "1 + 11 = 12 (left: 11 13 12)",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)"
            ]
        },
        "step_6": {
            "steps": [
                "1 + 11 = 12 (left: 11 13 12)\n13 + 12 = 25 (left: 11 25)",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "1 + 11 = 12 (left: 11 12 13)\n11 + 12 = 23 (left: 13 23)",
                "1 + 11 = 12 (left: 11 13 12)\n11 * 13 = 143 (left: 12)",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)"
            ],
            "values": [
                0.003,
                60.0,
                0.003,
                0.003,
                0.002
            ],
            "resampled": [
                "0 <- 6.1",
                "1 <- 5.4",
                "2 <- 3.4",
                "3 <- 1.0",
                "4 <- 4.3"
            ],
            "resampled_steps": [
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)",
                "1 + 11 = 12 (left: 11 13 12)",
                "1 + 11 = 12 (left: 11 13 12)\n20 - 15 = 5 (left: 5 20 50)\n5 * 10 = 50 (left: 20 50)"
            ]
        },
        "step_7": {
            "steps": [
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 11) * (11 - 13) = 24",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6)",
                "1 + 11 = 12 (left: 11 13 12)\n13 - 12 = 1 (left: 1 12)",
                "1 + 11 = 12 (left: 11 13 12)\n20 - 15 = 5 (left: 5 20 50)\n5 * 10 = 50 (left: 20 50)\n20 + 50 = 70 (left: 70)"
            ],
            "values": [
                60.0,
                60.0,
                0.002,
                22.0,
                0.002
            ],
            "resampled": [
                "0 <- 3.4",
                "1 <- 4.2",
                "2 <- 7.3",
                "3 <- 7.0",
                "4 <- 7.0"
            ],
            "resampled_steps": [
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)",
                "1 + 11 = 12 (left: 11 12 13)\n9 - 5 = 4 (left: 3 4 7)",
                "1 + 11 = 12 (left: 11 13 12)\n13 - 12 = 1 (left: 1 12)",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 11) * (11 - 13) = 24",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 11) * (11 - 13) = 24"
            ]
        },
        "step_8": {
            "steps": [
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "1 + 11 = 12 (left: 11 12 13)\n9 - 5 = 4 (left: 3 4 7)\n3 * 4 = 12 (left: 12 7)",
                "1 + 11 = 12 (left: 11 13 12)\n13 - 12 = 1 (left: 1 12)\n1 + 12 = 13 (left: 13)",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 11) * (11 - 13) = 24\nInput: 3 3 4 6\nSteps:\n3 * 4 = 12 (left: 3 6 12)\n12 - 6 = 6 (left: 3 6)\n6 * 3 = 18 (left: 18)\n18 + 6 = 24 (left: 24)\nAnswer: ((3 * 4) - 6) + 6 = 24",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 11) * (11 - 13) = 24\nInput: 3 3 5 7\nSteps:\n3 + 7 = 10 (left: 3 5 10)\n10 - 5 = 5 (left: 3 5)\n5 * 3 = 15 (left: 15)\n15 + 9 = 24 (left: 24)\nAnswer: ((3 + 7) - 5) * 3 = 24"
            ],
            "values": [
                60.0,
                0.003,
                0.002,
                60.0,
                60.0
            ],
            "resampled": [
                "0 <- 8.4",
                "1 <- 1.0",
                "2 <- 8.3",
                "3 <- 8.4",
                "4 <- 7.1"
            ],
            "resampled_steps": [
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 11) * (11 - 13) = 24\nInput: 3 3 5 7\nSteps:\n3 + 7 = 10 (left: 3 5 10)\n10 - 5 = 5 (left: 3 5)\n5 * 3 = 15 (left: 15)\n15 + 9 = 24 (left: 24)\nAnswer: ((3 + 7) - 5) * 3 = 24",
                "1 + 11 = 12 (left: 11 13 12)",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 11) * (11 - 13) = 24\nInput: 3 3 4 6\nSteps:\n3 * 4 = 12 (left: 3 6 12)\n12 - 6 = 6 (left: 3 6)\n6 * 3 = 18 (left: 18)\n18 + 6 = 24 (left: 24)\nAnswer: ((3 * 4) - 6) + 6 = 24",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 11) * (11 - 13) = 24\nInput: 3 3 5 7\nSteps:\n3 + 7 = 10 (left: 3 5 10)\n10 - 5 = 5 (left: 3 5)\n5 * 3 = 15 (left: 15)\n15 + 9 = 24 (left: 24)\nAnswer: ((3 + 7) - 5) * 3 = 24",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)"
            ]
        },
        "step_9": {
            "steps": [
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 11) * (11 - 13) = 24\nInput: 3 3 5 7\nSteps:\n3 + 7 = 10 (left: 3 5 10)\n10 - 5 = 5 (left: 3 5)\n5 * 3 = 15 (left: 15)\n15 + 9 = 24 (left: 24)\nAnswer: ((3 + 7) - 5) * 3 = 24\nInput: 2 3 6 9\nSteps:\n6 * 3 = 18 (left: 2 9 18)\n18 - 9 = 9 (left: 2 9)\n9 * 2 = 18 (left: 18)\n18 + 6 = 24 (left: 24)\nAnswer: ((6 * 3) - 9) + 6 = 24",
                "1 + 11 = 12 (left: 11 13 12)\n12 - 11 = 1 (left: 1 12)",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 11) * (11 - 13) = 24\nInput: 3 3 4 6\nSteps:\n3 * 4 = 12 (left: 3 6 12)\n12 - 6 = 6 (left: 3 6)\n6 * 3 = 18 (left: 18)\n18 + 6 = 24 (left: 24)\nAnswer: ((3 * 4) - 6) + 6 = 24\nInput: 7 7 8 3\nSteps:\n7 + 8 = 15 (left: 7 15 3)\n15 - 7 = 8 (left: 8 3)\n8 * 3 = 24 (left: 24)\nAnswer: (7 + 8) * (7 - 3) = 24",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 11) * (11 - 13) = 24\nInput: 3 3 5 7\nSteps:\n3 + 7 = 10 (left: 3 5 10)\n10 - 5 = 5 (left: 3 5)\n5 * 3 = 15 (left: 15)\n15 + 9 = 24 (left: 24)\nAnswer: ((3 + 7) - 5) * 3 = 24\nInput: 2 2 6 9\nSteps:\n2 * 9 = 18 (left: 2 6 18)\n2 + 6 = 8 (left: 8 18)\n8 * 18 = 144 (left: 144)\n144 / 6 = 24 (left: 24)\nAnswer: ((2 * 9) * (2 + 6)) / 6 = 24",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 11) * (11 - 13) = 24"
            ],
            "values": [
                60.0,
                40.001,
                60.0,
                60.0,
                60.0
            ],
            "resampled": [
                "0 <- 8.3",
                "1 <- 7.1",
                "2 <- 6.1",
                "3 <- 8.3",
                "4 <- 9.1"
            ],
            "resampled_steps": [
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 11) * (11 - 13) = 24\nInput: 3 3 4 6\nSteps:\n3 * 4 = 12 (left: 3 6 12)\n12 - 6 = 6 (left: 3 6)\n6 * 3 = 18 (left: 18)\n18 + 6 = 24 (left: 24)\nAnswer: ((3 * 4) - 6) + 6 = 24",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 11) * (11 - 13) = 24\nInput: 3 3 4 6\nSteps:\n3 * 4 = 12 (left: 3 6 12)\n12 - 6 = 6 (left: 3 6)\n6 * 3 = 18 (left: 18)\n18 + 6 = 24 (left: 24)\nAnswer: ((3 * 4) - 6) + 6 = 24",
                "1 + 11 = 12 (left: 11 13 12)\n12 - 11 = 1 (left: 1 12)"
            ]
        },
        "step_10": {
            "steps": [
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 11) * (11 - 13) = 24\nInput: 3 3 4 6\nSteps:\n3 * 4 = 12 (left: 3 6 12)\n12 - 6 = 6 (left: 3 6)\n6 * 3 = 18 (left: 18)\n18 + 6 = 24 (left: 24)\nAnswer: ((3 * 4) - 6) + 6 = 24\nInput: 2 3 3 4\nSteps:\n3 * 4 = 12 (left: 2 3 12)\n3 + 12 = 15 (left: 2 15)\n15 - 2 = 13 (left: 13)\n13 + 3 = 16 (left: 16)\n16 * 2 = 32 (left: 32)\n32 - 4 = 28 (left: 28)\n28 / 14 = 24 (left: 24)\nAnswer: (((2 * 3) + 3) - 4) / 14 = 24",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 11) * (11 - 13) = 24",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 11) * (11 - 13) = 24",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 11) * (11 - 13) = 24\nInput: 3 3 4 6\nSteps:\n3 * 4 = 12 (left: 3 6 12)\n12 - 6 = 6 (left: 3 6)\n6 * 3 = 18 (left: 18)\n18 + 6 = 24 (left: 24)\nAnswer: ((3 * 4) - 6) + 6 = 24\nInput: 2 3 8 9\nSteps:\n8 - 3 = 5 (left: 2 5 9)\n5 * 9 = 45 (left: 2 45)\n45 / 2 = 22.5 (left: 22.5)\n22.5 + 2 = 24.5 (left: 24.5)\nAnswer: ((8 - 3) * 9) / 2 + 2 = 24.5",
                "1 + 11 = 12 (left: 11 13 12)\n12 - 11 = 1 (left: 1 12)\n1 + 12 = 13 (left: 13)"
            ],
            "values": [
                60.0,
                60.0,
                60.0,
                40.0,
                0.003
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 0.170359
    },
    "906": {
        "input": "1 8 10 11",
        "step_1": {
            "steps": [
                "10 + 1 = 11 (left: 8 11)",
                "1 + 8 = 9 (left: 9 10 11)",
                "8 - 1 = 7 (left: 7 10 11)",
                "Input: 3 5 7 9",
                "11 - 1 = 10 (left: 8 10 10)"
            ],
            "values": [
                0.001,
                3.0,
                1.002,
                0.003,
                2.001
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- 1.1"
            ],
            "resampled_steps": [
                "",
                "",
                "",
                "",
                "1 + 8 = 9 (left: 9 10 11)"
            ]
        },
        "step_2": {
            "steps": [
                "10 + 1 = 11 (left: 8 10 11)",
                "1 * 8 = 8 (left: 8 10 11)",
                "8 / 1 = 8 (left: 8 10 11)",
                "1 * 8 = 8 (left: 8 10 11)",
                "1 + 8 = 9 (left: 9 10 11)\n9 + 10 = 19 (left: 11 19)"
            ],
            "values": [
                1.002,
                1.002,
                0.002,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- 1.4"
            ],
            "resampled_steps": [
                "",
                "",
                "",
                "",
                "11 - 1 = 10 (left: 8 10 10)"
            ]
        },
        "step_3": {
            "steps": [
                "8 - 1 = 7 (left: 7 10 11)",
                "1 + 8 = 9 (left: 9 10 11)",
                "1 * 8 = 8 (left: 8 10 11)",
                "3 * 5 = 15 (left: 8 15 13)",
                "11 - 1 = 10 (left: 8 10 10)\n10 - 8 = 2 (left: 2 10)"
            ],
            "values": [
                1.002,
                1.002,
                3.0,
                3.0,
                3.0
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- 3.4",
                "4 <- INIT"
            ],
            "resampled_steps": [
                "",
                "",
                "",
                "11 - 1 = 10 (left: 8 10 10)\n10 - 8 = 2 (left: 2 10)",
                ""
            ]
        },
        "step_4": {
            "steps": [
                "8 / 1 = 8 (left: 8 10 11)",
                "8 - 1 = 7 (left: 7 10 11)",
                "1 * 8 = 8 (left: 8 10 11)",
                "11 - 1 = 10 (left: 8 10 10)\n10 - 8 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)",
                "1 * 8 = 8 (left: 8 10 11)"
            ],
            "values": [
                2.0,
                2.001,
                3.0,
                0.002,
                3.0
            ],
            "resampled": [
                "0 <- 1.1",
                "1 <- 3.2",
                "2 <- 3.2",
                "3 <- 4.0",
                "4 <- 4.4"
            ],
            "resampled_steps": [
                "1 + 8 = 9 (left: 9 10 11)",
                "1 * 8 = 8 (left: 8 10 11)",
                "1 * 8 = 8 (left: 8 10 11)",
                "8 / 1 = 8 (left: 8 10 11)",
                "1 * 8 = 8 (left: 8 10 11)"
            ]
        },
        "step_5": {
            "steps": [
                "1 + 8 = 9 (left: 9 10 11)\n11 / 9 = 1.222 (left: 10 1.222)",
                "1 * 8 = 8 (left: 8 10 11)\n10 / 6 = 1.667 (left: 7 9 1.667)",
                "1 * 8 = 8 (left: 8 10 11)\n10 * 11 = 110 (left: 8 110)",
                "8 / 1 = 8 (left: 8 10 11)\nPossible next steps:",
                "1 * 8 = 8 (left: 8 10 11)\n10 - 8 = 2 (left: 2 11)"
            ],
            "values": [
                3.0,
                3.0,
                60.0,
                0.003,
                1.002
            ],
            "resampled": [
                "0 <- 5.2",
                "1 <- 5.2",
                "2 <- 5.2",
                "3 <- 3.2",
                "4 <- 5.2"
            ],
            "resampled_steps": [
                "1 * 8 = 8 (left: 8 10 11)\n10 * 11 = 110 (left: 8 110)",
                "1 * 8 = 8 (left: 8 10 11)\n10 * 11 = 110 (left: 8 110)",
                "1 * 8 = 8 (left: 8 10 11)\n10 * 11 = 110 (left: 8 110)",
                "1 * 8 = 8 (left: 8 10 11)",
                "1 * 8 = 8 (left: 8 10 11)\n10 * 11 = 110 (left: 8 110)"
            ]
        },
        "step_6": {
            "steps": [
                "1 * 8 = 8 (left: 8 10 11)\n10 * 11 = 110 (left: 8 110)\n110 - 8 = 102 (left: 102)",
                "1 * 8 = 8 (left: 8 10 11)\n10 * 11 = 110 (left: 8 110)\n8 + 110 = 118 (left: 118)",
                "1 * 8 = 8 (left: 8 10 11)\n10 * 11 = 110 (left: 8 110)\n110 / 8 = 13.75 (left: 13.75)",
                "1 * 8 = 8 (left: 8 10 11)\n10 + 11 = 21 (left: 8 21)",
                "1 * 8 = 8 (left: 8 10 11)\n10 * 11 = 110 (left: 8 110)\n110 / 8 = 13.75 (left: 13.75)"
            ],
            "values": [
                0.003,
                0.002,
                0.003,
                1.001,
                0.003
            ],
            "resampled": [
                "0 <- 5.2",
                "1 <- 3.3",
                "2 <- INIT",
                "3 <- 3.4",
                "4 <- 2.1"
            ],
            "resampled_steps": [
                "1 * 8 = 8 (left: 8 10 11)\n10 * 11 = 110 (left: 8 110)",
                "3 * 5 = 15 (left: 8 15 13)",
                "",
                "11 - 1 = 10 (left: 8 10 10)\n10 - 8 = 2 (left: 2 10)",
                "1 * 8 = 8 (left: 8 10 11)"
            ]
        },
        "step_7": {
            "steps": [
                "1 * 8 = 8 (left: 8 10 11)\n10 * 11 = 110 (left: 8 110)\n110 - 8 = 102 (left: 102)",
                "3 * 5 = 15 (left: 8 15 13)\n13 / 8 = 1.625 (left: 1.625 13)",
                "10 + 1 = 11 (left: 8 11 11)",
                "11 - 1 = 10 (left: 8 10 10)\n10 - 8 = 2 (left: 2 10)\n10 / 2 = 5 (left: 2 5)",
                "1 * 8 = 8 (left: 8 10 11)\n8 / 10 = 0.8 (left: 0.8 11)"
            ],
            "values": [
                0.002,
                2.001,
                3.0,
                41.0,
                2.0
            ],
            "resampled": [
                "0 <- 3.3",
                "1 <- 5.2",
                "2 <- 5.0",
                "3 <- 7.3",
                "4 <- 7.2"
            ],
            "resampled_steps": [
                "3 * 5 = 15 (left: 8 15 13)",
                "1 * 8 = 8 (left: 8 10 11)\n10 * 11 = 110 (left: 8 110)",
                "1 + 8 = 9 (left: 9 10 11)\n11 / 9 = 1.222 (left: 10 1.222)",
                "11 - 1 = 10 (left: 8 10 10)\n10 - 8 = 2 (left: 2 10)\n10 / 2 = 5 (left: 2 5)",
                "10 + 1 = 11 (left: 8 11 11)"
            ]
        },
        "step_8": {
            "steps": [
                "3 * 5 = 15 (left: 8 15 13)\n15 / 8 = 1.875 (left: 1.875 13)",
                "1 * 8 = 8 (left: 8 10 11)\n10 * 11 = 110 (left: 8 110)\n3 * 9 = 27 (left: 27 27)",
                "1 + 8 = 9 (left: 9 10 11)\n11 / 9 = 1.222 (left: 10 1.222)\n10 * 1.222 = 12.22 (left: 1.222 12.22)",
                "11 - 1 = 10 (left: 8 10 10)\n10 - 8 = 2 (left: 2 10)\n10 / 2 = 5 (left: 2 5)\n2 * 5 = 10 (left: 10)",
                "10 + 1 = 11 (left: 8 11 11)\n6 * 8 = 48 (left: 4 48)"
            ],
            "values": [
                0.001,
                0.003,
                0.001,
                0.002,
                20.002
            ],
            "resampled": [
                "0 <- 3.3",
                "1 <- 8.4",
                "2 <- 8.4",
                "3 <- 1.2",
                "4 <- 8.4"
            ],
            "resampled_steps": [
                "3 * 5 = 15 (left: 8 15 13)",
                "10 + 1 = 11 (left: 8 11 11)\n6 * 8 = 48 (left: 4 48)",
                "10 + 1 = 11 (left: 8 11 11)\n6 * 8 = 48 (left: 4 48)",
                "8 - 1 = 7 (left: 7 10 11)",
                "10 + 1 = 11 (left: 8 11 11)\n6 * 8 = 48 (left: 4 48)"
            ]
        },
        "step_9": {
            "steps": [
                "3 * 5 = 15 (left: 8 15 13)\n13 + 8 = 21 (left: 15 21)",
                "10 + 1 = 11 (left: 8 11 11)\n6 * 8 = 48 (left: 4 48)\n48 * 1 = 48 (left: 1 48)",
                "10 + 1 = 11 (left: 8 11 11)\n6 * 8 = 48 (left: 4 48)\n48 - 4 = 44 (left: 44)",
                "8 - 1 = 7 (left: 7 10 11)\n7 + 10 = 17 (left: 11)",
                "10 + 1 = 11 (left: 8 11 11)\n6 * 8 = 48 (left: 4 48)\n4 * 48 = 192 (left: 192)"
            ],
            "values": [
                0.003,
                60.0,
                0.003,
                0.002,
                0.003
            ],
            "resampled": [
                "0 <- 1.1",
                "1 <- 9.1",
                "2 <- 7.3",
                "3 <- 9.1",
                "4 <- 9.1"
            ],
            "resampled_steps": [
                "1 + 8 = 9 (left: 9 10 11)",
                "10 + 1 = 11 (left: 8 11 11)\n6 * 8 = 48 (left: 4 48)\n48 * 1 = 48 (left: 1 48)",
                "11 - 1 = 10 (left: 8 10 10)\n10 - 8 = 2 (left: 2 10)\n10 / 2 = 5 (left: 2 5)",
                "10 + 1 = 11 (left: 8 11 11)\n6 * 8 = 48 (left: 4 48)\n48 * 1 = 48 (left: 1 48)",
                "10 + 1 = 11 (left: 8 11 11)\n6 * 8 = 48 (left: 4 48)\n48 * 1 = 48 (left: 1 48)"
            ]
        },
        "step_10": {
            "steps": [
                "1 + 8 = 9 (left: 9 10 11)\n9 + 10 = 19 (left: 11 19)",
                "10 + 1 = 11 (left: 8 11 11)\n6 * 8 = 48 (left: 4 48)\n48 * 1 = 48 (left: 1 48)\n48 / 1 = 48 (left: 48)",
                "11 - 1 = 10 (left: 8 10 10)\n10 - 8 = 2 (left: 2 10)\n10 / 2 = 5 (left: 2 5)\n2 + 5 = 7 (left: 7)",
                "10 + 1 = 11 (left: 8 11 11)\n6 * 8 = 48 (left: 4 48)\n48 * 1 = 48 (left: 1 48)\n48 / 1 = 48 (left: 48)",
                "10 + 1 = 11 (left: 8 11 11)\n6 * 8 = 48 (left: 4 48)\n48 * 1 = 48 (left: 1 48)\n5 - 9 = -4 (left: -4 9)"
            ],
            "values": [
                0.003,
                0.003,
                0.001,
                0.003,
                0.002
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 0.19908550000000003
    },
    "907": {
        "input": "2 3 6 9",
        "step_1": {
            "steps": [
                "3 * 3 = 9 (left: 2 6 9)",
                "3 * 2 = 6 (left: 6 6 9)",
                "2 + 3 = 5 (left: 5 6 9)",
                "2 + 3 = 5 (left: 5 6 9)",
                "9 / 3 = 3 (left: 2 6 3)"
            ],
            "values": [
                1.002,
                2.001,
                3.0,
                3.0,
                2.0
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- INIT"
            ],
            "resampled_steps": [
                "",
                "",
                "",
                "",
                ""
            ]
        },
        "step_2": {
            "steps": [
                "6 / 2 = 3 (left: 3 3 9)",
                "9 - 6 = 3 (left: 2 3 3)",
                "2 + 3 = 5 (left: 5 6 9)",
                "9 - 3 = 6 (left: 2 6 9)",
                "9 - 6 = 3 (left: 2 3 6)"
            ],
            "values": [
                3.0,
                1.0,
                3.0,
                1.002,
                22.0
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- 2.4",
                "2 <- 1.3",
                "3 <- INIT",
                "4 <- 2.4"
            ],
            "resampled_steps": [
                "",
                "9 - 6 = 3 (left: 2 3 6)",
                "2 + 3 = 5 (left: 5 6 9)",
                "",
                "9 - 6 = 3 (left: 2 3 6)"
            ]
        },
        "step_3": {
            "steps": [
                "9 - 6 = 3 (left: 2 3 3)",
                "9 - 6 = 3 (left: 2 3 6)\nInput: 3 5 7",
                "2 + 3 = 5 (left: 5 6 9)\n4 + 5 = 9 (left: 8 9)",
                "15 / 5 = 3 (left: 3 10 15)",
                "9 - 6 = 3 (left: 2 3 6)\n7 * 5 = 35 (left: 35 2)"
            ],
            "values": [
                2.0,
                0.003,
                0.003,
                1.002,
                0.002
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- 2.4",
                "2 <- 2.4",
                "3 <- 1.1",
                "4 <- 1.1"
            ],
            "resampled_steps": [
                "",
                "9 - 6 = 3 (left: 2 3 6)",
                "9 - 6 = 3 (left: 2 3 6)",
                "3 * 2 = 6 (left: 6 6 9)",
                "3 * 2 = 6 (left: 6 6 9)"
            ]
        },
        "step_4": {
            "steps": [
                "2 * 3 = 6 (left: 6 6 9)",
                "9 - 6 = 3 (left: 2 3 6)\n6 / 2 = 3 (left: 3 6)",
                "9 - 6 = 3 (left: 2 3 6)\n6 - 3 = 3 (left: 2 3)",
                "3 * 2 = 6 (left: 6 6 9)\n7 - 3 = 4 (left: 4 5 9)",
                "3 * 2 = 6 (left: 6 6 9)\n5 - 3 = 2 (left: 2 7)"
            ],
            "values": [
                2.001,
                1.0,
                0.003,
                1.002,
                1.001
            ],
            "resampled": [
                "0 <- 2.4",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- 4.3",
                "4 <- 2.4"
            ],
            "resampled_steps": [
                "9 - 6 = 3 (left: 2 3 6)",
                "",
                "",
                "3 * 2 = 6 (left: 6 6 9)\n7 - 3 = 4 (left: 4 5 9)",
                "9 - 6 = 3 (left: 2 3 6)"
            ]
        },
        "step_5": {
            "steps": [
                "9 - 6 = 3 (left: 2 3 6)\n6 / 2 = 3 (left: 3 6)",
                "9 - 6 = 3 (left: 2 3 3)",
                "3 + 6 = 9 (left: 2 9 9)",
                "3 * 2 = 6 (left: 6 6 9)\n7 - 3 = 4 (left: 4 5 9)\n12 - 3 = 9 (left: 9 9 9)",
                "9 - 6 = 3 (left: 2 3 6)\n6 / 3 = 2 (left: 2)"
            ],
            "values": [
                2.0,
                3.0,
                0.003,
                0.003,
                0.0
            ],
            "resampled": [
                "0 <- 5.1",
                "1 <- INIT",
                "2 <- 2.3",
                "3 <- 2.4",
                "4 <- 4.0"
            ],
            "resampled_steps": [
                "9 - 6 = 3 (left: 2 3 3)",
                "",
                "9 - 3 = 6 (left: 2 6 9)",
                "9 - 6 = 3 (left: 2 3 6)",
                "2 * 3 = 6 (left: 6 6 9)"
            ]
        },
        "step_6": {
            "steps": [
                "9 - 6 = 3 (left: 2 3 3)\n3 * 3 = 9 (left: 9)",
                "2 + 3 = 5 (left: 5 6 9)",
                "9 - 3 = 6 (left: 2 6 9)\n2 * 6 = 12 (left: 12 9)",
                "9 - 6 = 3 (left: 2 3 6)\n3 * 2 = 6 (left: 6 6)",
                "2 * 3 = 6 (left: 6 6 9)\n6 + 6 = 12 (left: 9 12)"
            ],
            "values": [
                0.0,
                41.0,
                1.002,
                1.002,
                0.003
            ],
            "resampled": [
                "0 <- 6.1",
                "1 <- 6.1",
                "2 <- 6.1",
                "3 <- 6.1",
                "4 <- INIT"
            ],
            "resampled_steps": [
                "2 + 3 = 5 (left: 5 6 9)",
                "2 + 3 = 5 (left: 5 6 9)",
                "2 + 3 = 5 (left: 5 6 9)",
                "2 + 3 = 5 (left: 5 6 9)",
                ""
            ]
        },
        "step_7": {
            "steps": [
                "2 + 3 = 5 (left: 5 6 9)\n5 * 6 = 30 (left: 9 30)",
                "2 + 3 = 5 (left: 5 6 9)\nInput: 3 7 10",
                "2 + 3 = 5 (left: 5 6 9)\n5 + 6 = 11 (left: 9 11)",
                "2 + 3 = 5 (left: 5 6 9)\n5 / 6 = 0.8333 (left: 0.8333 9)",
                "10 - 6 = 4 (left: 4 4 10)"
            ],
            "values": [
                0.003,
                0.003,
                0.001,
                2.001,
                60.0
            ],
            "resampled": [
                "0 <- 6.1",
                "1 <- 6.1",
                "2 <- 7.4",
                "3 <- 7.4",
                "4 <- INIT"
            ],
            "resampled_steps": [
                "2 + 3 = 5 (left: 5 6 9)",
                "2 + 3 = 5 (left: 5 6 9)",
                "10 - 6 = 4 (left: 4 4 10)",
                "10 - 6 = 4 (left: 4 4 10)",
                ""
            ]
        },
        "step_8": {
            "steps": [
                "2 + 3 = 5 (left: 5 6 9)\n3 + 7 = 10 (left: 10 12 15)",
                "2 + 3 = 5 (left: 5 6 9)\n6 / 5 = 1.2 (left: 1.2 9)",
                "10 - 6 = 4 (left: 4 4 10)\n4 / 4 = 1 (left: 1 10)",
                "10 - 6 = 4 (left: 4 4 10)\n4 * 4 = 16 (left: 16 10)",
                "9 - 6 = 3 (left: 2 3 3)"
            ],
            "values": [
                1.002,
                0.001,
                60.0,
                0.003,
                0.002
            ],
            "resampled": [
                "0 <- 8.2",
                "1 <- 2.4",
                "2 <- 8.2",
                "3 <- 8.2",
                "4 <- 7.4"
            ],
            "resampled_steps": [
                "10 - 6 = 4 (left: 4 4 10)\n4 / 4 = 1 (left: 1 10)",
                "9 - 6 = 3 (left: 2 3 6)",
                "10 - 6 = 4 (left: 4 4 10)\n4 / 4 = 1 (left: 1 10)",
                "10 - 6 = 4 (left: 4 4 10)\n4 / 4 = 1 (left: 1 10)",
                "10 - 6 = 4 (left: 4 4 10)"
            ]
        },
        "step_9": {
            "steps": [
                "10 - 6 = 4 (left: 4 4 10)\n4 / 4 = 1 (left: 1 10)\n1 + 10 = 11 (left: 11)",
                "9 - 6 = 3 (left: 2 3 6)\n12 - 4 = 8 (left: 8 12)",
                "10 - 6 = 4 (left: 4 4 10)\n4 / 4 = 1 (left: 1 10)\n1 + 10 = 11 (left: 11)",
                "10 - 6 = 4 (left: 4 4 10)\n4 / 4 = 1 (left: 1 10)\n10 / 1 = 10 (left: 10)",
                "10 - 6 = 4 (left: 4 4 10)\n10 / 4 = 2.5 (left: 4 2.5)"
            ],
            "values": [
                0.001,
                0.003,
                0.002,
                0.002,
                60.0
            ],
            "resampled": [
                "0 <- 6.1",
                "1 <- 9.4",
                "2 <- 9.4",
                "3 <- 8.2",
                "4 <- 8.2"
            ],
            "resampled_steps": [
                "2 + 3 = 5 (left: 5 6 9)",
                "10 - 6 = 4 (left: 4 4 10)\n10 / 4 = 2.5 (left: 4 2.5)",
                "10 - 6 = 4 (left: 4 4 10)\n10 / 4 = 2.5 (left: 4 2.5)",
                "10 - 6 = 4 (left: 4 4 10)\n4 / 4 = 1 (left: 1 10)",
                "10 - 6 = 4 (left: 4 4 10)\n4 / 4 = 1 (left: 1 10)"
            ]
        },
        "step_10": {
            "steps": [
                "2 + 3 = 5 (left: 5 6 9)\n3 * 4 = 12 (left: 11 12)",
                "10 - 6 = 4 (left: 4 4 10)\n10 / 4 = 2.5 (left: 4 2.5)\n4 / 2.5 = 1.6 (left: 1.6)",
                "10 - 6 = 4 (left: 4 4 10)\n10 / 4 = 2.5 (left: 4 2.5)\n4 * 2.5 = 10 (left: 2.5 10)",
                "10 - 6 = 4 (left: 4 4 10)\n4 / 4 = 1 (left: 1 10)\n1 + 10 = 11 (left: 10)",
                "10 - 6 = 4 (left: 4 4 10)\n4 / 4 = 1 (left: 1 10)\n10 - 1 = 9 (left: 9)"
            ],
            "values": [
                0.002,
                0.002,
                2.001,
                0.001,
                0.002
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 0.23009849999999998
    },
    "908": {
        "input": "1 3 5 9",
        "step_1": {
            "steps": [
                "1 * 3 = 3 (left: 3 5 9)",
                "5 * 1 = 5 (left: 3 5 9)",
                "3 * 5 = 15 (left: 1 15 9)",
                "1 + 3 = 4 (left: 4 5 9)",
                "5 - 1 = 4 (left: 4 5 9)"
            ],
            "values": [
                40.001,
                40.001,
                0.003,
                2.0,
                3.0
            ],
            "resampled": [
                "0 <- 1.1",
                "1 <- 1.0",
                "2 <- INIT",
                "3 <- 1.4",
                "4 <- 1.0"
            ],
            "resampled_steps": [
                "5 * 1 = 5 (left: 3 5 9)",
                "1 * 3 = 3 (left: 3 5 9)",
                "",
                "5 - 1 = 4 (left: 4 5 9)",
                "1 * 3 = 3 (left: 3 5 9)"
            ]
        },
        "step_2": {
            "steps": [
                "5 * 1 = 5 (left: 3 5 9)\n9 - 3 = 6 (left: 5 6)",
                "1 * 3 = 3 (left: 3 5 9)\n3 * 5 = 15 (left: 15 9)",
                "3 + 9 = 12 (left: 1 5 12)",
                "5 - 1 = 4 (left: 4 5 9)\n4 + 5 = 9 (left: 9 9)",
                "1 * 3 = 3 (left: 3 5 9)\n9 / 5 = 1.8 (left: 3 1.8)"
            ],
            "values": [
                0.002,
                60.0,
                2.001,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- 1.1",
                "3 <- 2.1",
                "4 <- 2.1"
            ],
            "resampled_steps": [
                "",
                "",
                "5 * 1 = 5 (left: 3 5 9)",
                "1 * 3 = 3 (left: 3 5 9)\n3 * 5 = 15 (left: 15 9)",
                "1 * 3 = 3 (left: 3 5 9)\n3 * 5 = 15 (left: 15 9)"
            ]
        },
        "step_3": {
            "steps": [
                "3 * 5 = 15 (left: 1 15 9)",
                "1 / 3 = 0.333 (left: 0.333 5 9)",
                "5 * 1 = 5 (left: 3 5 9)\n3 + 5 = 8 (left: 8 9)",
                "1 * 3 = 3 (left: 3 5 9)\n3 * 5 = 15 (left: 15 9)\n15 + 9 = 24 (left: 24)",
                "1 * 3 = 3 (left: 3 5 9)\n3 * 5 = 15 (left: 15 9)\n9 / 15 = 0.6 (left: 0.6)"
            ],
            "values": [
                1.002,
                2.001,
                0.003,
                60.0,
                0.002
            ],
            "resampled": [
                "0 <- 3.3",
                "1 <- INIT",
                "2 <- 1.1",
                "3 <- 3.3",
                "4 <- 3.3"
            ],
            "resampled_steps": [
                "1 * 3 = 3 (left: 3 5 9)\n3 * 5 = 15 (left: 15 9)\n15 + 9 = 24 (left: 24)",
                "",
                "5 * 1 = 5 (left: 3 5 9)",
                "1 * 3 = 3 (left: 3 5 9)\n3 * 5 = 15 (left: 15 9)\n15 + 9 = 24 (left: 24)",
                "1 * 3 = 3 (left: 3 5 9)\n3 * 5 = 15 (left: 15 9)\n15 + 9 = 24 (left: 24)"
            ]
        },
        "step_4": {
            "steps": [
                "1 * 3 = 3 (left: 3 5 9)\n3 * 5 = 15 (left: 15 9)\n15 + 9 = 24 (left: 24)\nAnswer: (1 * 3) * (5 + 9) = 24",
                "5 + 9 = 14 (left: 1 3 14)",
                "5 * 1 = 5 (left: 3 5 9)\n5 + 9 = 14 (left: 3 14)",
                "1 * 3 = 3 (left: 3 5 9)\n3 * 5 = 15 (left: 15 9)\n15 + 9 = 24 (left: 24)\nAnswer: (1 * 3) + (5 * 9) = 24",
                "1 * 3 = 3 (left: 3 5 9)\n3 * 5 = 15 (left: 15 9)\n15 + 9 = 24 (left: 24)\nAnswer: (1 * 3) * (5 + 9) = 24"
            ],
            "values": [
                40.001,
                0.003,
                0.003,
                60.0,
                60.0
            ],
            "resampled": [
                "0 <- 4.3",
                "1 <- 4.0",
                "2 <- 2.1",
                "3 <- 4.0",
                "4 <- 4.0"
            ],
            "resampled_steps": [
                "1 * 3 = 3 (left: 3 5 9)\n3 * 5 = 15 (left: 15 9)\n15 + 9 = 24 (left: 24)\nAnswer: (1 * 3) + (5 * 9) = 24",
                "1 * 3 = 3 (left: 3 5 9)\n3 * 5 = 15 (left: 15 9)\n15 + 9 = 24 (left: 24)\nAnswer: (1 * 3) * (5 + 9) = 24",
                "1 * 3 = 3 (left: 3 5 9)\n3 * 5 = 15 (left: 15 9)",
                "1 * 3 = 3 (left: 3 5 9)\n3 * 5 = 15 (left: 15 9)\n15 + 9 = 24 (left: 24)\nAnswer: (1 * 3) * (5 + 9) = 24",
                "1 * 3 = 3 (left: 3 5 9)\n3 * 5 = 15 (left: 15 9)\n15 + 9 = 24 (left: 24)\nAnswer: (1 * 3) * (5 + 9) = 24"
            ]
        },
        "step_5": {
            "steps": [
                "1 * 3 = 3 (left: 3 5 9)\n3 * 5 = 15 (left: 15 9)\n15 + 9 = 24 (left: 24)\nAnswer: (1 * 3) + (5 * 9) = 24\nInput: 3 6 7 9\nSteps:\n6 + 9 = 15 (left: 3 7 15)\n7 + 15 = 22 (left: 3 22)\n3 * 22 = 66 (left: 66)\n66 / 3 = 22 (left: 22)\nAnswer: ((3 + 6) + 9) * (7 + 9) = 24",
                "1 * 3 = 3 (left: 3 5 9)\n3 * 5 = 15 (left: 15 9)\n15 + 9 = 24 (left: 24)\nAnswer: (1 * 3) * (5 + 9) = 24\nInput: 2 4 6 8\nSteps:\n4 * 6 = 24 (left: 2 8 24)\n8 / 2 = 4 (left: 4 24)\n4 * 24 = 24 (left: 24)\nAnswer: ((2 * 4) * 6) / 8 = 24",
                "1 * 3 = 3 (left: 3 5 9)\n3 * 5 = 15 (left: 15 9)\n15 * 9 = 135 (left: 135)",
                "1 * 3 = 3 (left: 3 5 9)\n3 * 5 = 15 (left: 15 9)\n15 + 9 = 24 (left: 24)\nAnswer: (1 * 3) * (5 + 9) = 24\nInput: 7 3 6 2\nSteps:\n3 * 7 = 21 (left: 6 2 21)\n6 / 2 = 3 (left: 3 21)\n3 * 21 = 63 (left: 63)\nAnswer: (7 * 3) - (6 / 2) = 24",
                "1 * 3 = 3 (left: 3 5 9)\n3 * 5 = 15 (left: 15 9)\n15 + 9 = 24 (left: 24)\nAnswer: (1 * 3) * (5 + 9) = 24\nInput: 2 3 4 6\nSteps:\n2 * 4 = 8 (left: 3 6 8)\n8 - 3 = 5 (left: 5 6)\n5 * 6 = 30 (left: 30)\nAnswer: (2 * 4) - (3 - 6) = 24"
            ],
            "values": [
                60.0,
                60.0,
                0.003,
                60.0,
                60.0
            ],
            "resampled": [
                "0 <- 2.1",
                "1 <- 5.0",
                "2 <- 5.0",
                "3 <- 4.0",
                "4 <- 5.1"
            ],
            "resampled_steps": [
                "1 * 3 = 3 (left: 3 5 9)\n3 * 5 = 15 (left: 15 9)",
                "1 * 3 = 3 (left: 3 5 9)\n3 * 5 = 15 (left: 15 9)\n15 + 9 = 24 (left: 24)\nAnswer: (1 * 3) + (5 * 9) = 24\nInput: 3 6 7 9\nSteps:\n6 + 9 = 15 (left: 3 7 15)\n7 + 15 = 22 (left: 3 22)\n3 * 22 = 66 (left: 66)\n66 / 3 = 22 (left: 22)\nAnswer: ((3 + 6) + 9) * (7 + 9) = 24",
                "1 * 3 = 3 (left: 3 5 9)\n3 * 5 = 15 (left: 15 9)\n15 + 9 = 24 (left: 24)\nAnswer: (1 * 3) + (5 * 9) = 24\nInput: 3 6 7 9\nSteps:\n6 + 9 = 15 (left: 3 7 15)\n7 + 15 = 22 (left: 3 22)\n3 * 22 = 66 (left: 66)\n66 / 3 = 22 (left: 22)\nAnswer: ((3 + 6) + 9) * (7 + 9) = 24",
                "1 * 3 = 3 (left: 3 5 9)\n3 * 5 = 15 (left: 15 9)\n15 + 9 = 24 (left: 24)\nAnswer: (1 * 3) * (5 + 9) = 24",
                "1 * 3 = 3 (left: 3 5 9)\n3 * 5 = 15 (left: 15 9)\n15 + 9 = 24 (left: 24)\nAnswer: (1 * 3) * (5 + 9) = 24\nInput: 2 4 6 8\nSteps:\n4 * 6 = 24 (left: 2 8 24)\n8 / 2 = 4 (left: 4 24)\n4 * 24 = 24 (left: 24)\nAnswer: ((2 * 4) * 6) / 8 = 24"
            ]
        },
        "step_6": {
            "steps": [
                "1 * 3 = 3 (left: 3 5 9)\n3 * 5 = 15 (left: 15 9)\n9 + 15 = 24 (left: 24)",
                "1 * 3 = 3 (left: 3 5 9)\n3 * 5 = 15 (left: 15 9)\n15 + 9 = 24 (left: 24)\nAnswer: (1 * 3) + (5 * 9) = 24\nInput: 3 6 7 9\nSteps:\n6 + 9 = 15 (left: 3 7 15)\n7 + 15 = 22 (left: 3 22)\n3 * 22 = 66 (left: 66)\n66 / 3 = 22 (left: 22)\nAnswer: ((3 + 6) + 9) * (7 + 9) = 24\nInput: 2 3 4 6\nSteps:\n2 * 6 = 12 (left: 3 4 12)\n4 - 3 = 1 (left: 1 12)\n12 * 1 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((2 * 6) - (4 - 3)) * 12 = 24",
                "1 * 3 = 3 (left: 3 5 9)\n3 * 5 = 15 (left: 15 9)\n15 + 9 = 24 (left: 24)\nAnswer: (1 * 3) + (5 * 9) = 24\nInput: 3 6 7 9\nSteps:\n6 + 9 = 15 (left: 3 7 15)\n7 + 15 = 22 (left: 3 22)\n3 * 22 = 66 (left: 66)\n66 / 3 = 22 (left: 22)\nAnswer: ((3 + 6) + 9) * (7 + 9) = 24\nInput: 2 3 4 6\nSteps:\n3 * 4 = 12 (left: 2 6 12)\n2 * 6 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (3 * 4) + (2 * 6) = 24",
                "1 * 3 = 3 (left: 3 5 9)\n3 * 5 = 15 (left: 15 9)\n15 + 9 = 24 (left: 24)\nAnswer: (1 * 3) * (5 + 9) = 24\nInput: 3 3 4 5\nSteps:\n3 + 4 = 7 (left: 3 5 7)\n7 - 5 = 2 (left: 2 3)\n2 * 3 = 6 (left: 6)\n6 * 4 = 24 (left: 24)\nAnswer: ((3 + 4) - 5) * 3 * 4 = 24",
                "1 * 3 = 3 (left: 3 5 9)\n3 * 5 = 15 (left: 15 9)\n15 + 9 = 24 (left: 24)\nAnswer: (1 * 3) * (5 + 9) = 24\nInput: 2 4 6 8\nSteps:\n4 * 6 = 24 (left: 2 8 24)\n8 / 2 = 4 (left: 4 24)\n4 * 24 = 24 (left: 24)\nAnswer: ((2 * 4) * 6) / 8 = 24\nInput: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6 24)\n6 / 3 = 2 (left: 2 24)\n2 * 24 = 24 (left: 24)\nAnswer: (3 * 8) / (3 / 6) = 24"
            ],
            "values": [
                40.0,
                60.0,
                60.0,
                60.0,
                40.0
            ],
            "resampled": [
                "0 <- 4.4",
                "1 <- 6.3",
                "2 <- 6.1",
                "3 <- 6.3",
                "4 <- 6.2"
            ],
            "resampled_steps": [
                "1 * 3 = 3 (left: 3 5 9)\n3 * 5 = 15 (left: 15 9)\n15 + 9 = 24 (left: 24)\nAnswer: (1 * 3) * (5 + 9) = 24",
                "1 * 3 = 3 (left: 3 5 9)\n3 * 5 = 15 (left: 15 9)\n15 + 9 = 24 (left: 24)\nAnswer: (1 * 3) * (5 + 9) = 24\nInput: 3 3 4 5\nSteps:\n3 + 4 = 7 (left: 3 5 7)\n7 - 5 = 2 (left: 2 3)\n2 * 3 = 6 (left: 6)\n6 * 4 = 24 (left: 24)\nAnswer: ((3 + 4) - 5) * 3 * 4 = 24",
                "1 * 3 = 3 (left: 3 5 9)\n3 * 5 = 15 (left: 15 9)\n15 + 9 = 24 (left: 24)\nAnswer: (1 * 3) + (5 * 9) = 24\nInput: 3 6 7 9\nSteps:\n6 + 9 = 15 (left: 3 7 15)\n7 + 15 = 22 (left: 3 22)\n3 * 22 = 66 (left: 66)\n66 / 3 = 22 (left: 22)\nAnswer: ((3 + 6) + 9) * (7 + 9) = 24\nInput: 2 3 4 6\nSteps:\n2 * 6 = 12 (left: 3 4 12)\n4 - 3 = 1 (left: 1 12)\n12 * 1 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((2 * 6) - (4 - 3)) * 12 = 24",
                "1 * 3 = 3 (left: 3 5 9)\n3 * 5 = 15 (left: 15 9)\n15 + 9 = 24 (left: 24)\nAnswer: (1 * 3) * (5 + 9) = 24\nInput: 3 3 4 5\nSteps:\n3 + 4 = 7 (left: 3 5 7)\n7 - 5 = 2 (left: 2 3)\n2 * 3 = 6 (left: 6)\n6 * 4 = 24 (left: 24)\nAnswer: ((3 + 4) - 5) * 3 * 4 = 24",
                "1 * 3 = 3 (left: 3 5 9)\n3 * 5 = 15 (left: 15 9)\n15 + 9 = 24 (left: 24)\nAnswer: (1 * 3) + (5 * 9) = 24\nInput: 3 6 7 9\nSteps:\n6 + 9 = 15 (left: 3 7 15)\n7 + 15 = 22 (left: 3 22)\n3 * 22 = 66 (left: 66)\n66 / 3 = 22 (left: 22)\nAnswer: ((3 + 6) + 9) * (7 + 9) = 24\nInput: 2 3 4 6\nSteps:\n3 * 4 = 12 (left: 2 6 12)\n2 * 6 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (3 * 4) + (2 * 6) = 24"
            ]
        },
        "step_7": {
            "steps": [
                "1 * 3 = 3 (left: 3 5 9)\n3 * 5 = 15 (left: 15 9)\n15 + 9 = 24 (left: 24)\nAnswer: (1 * 3) * (5 + 9) = 24\nInput: 2 3 4 6\nSteps:\n2 * 4 = 8 (left: 3 6 8)\n8 - 6 = 2 (left: 2 3)\n2 * 3 = 6 (left: 6)\n6 * 4 = 24 (left: 24)\nAnswer: (2 * 4) * ((8 - 6) * 3) = 24",
                "1 * 3 = 3 (left: 3 5 9)\n3 * 5 = 15 (left: 15 9)\n15 + 9 = 24 (left: 24)\nAnswer: (1 * 3) * (5 + 9) = 24\nInput: 3 3 4 5\nSteps:\n3 + 4 = 7 (left: 3 5 7)\n7 - 5 = 2 (left: 2 3)\n2 * 3 = 6 (left: 6)\n6 * 4 = 24 (left: 24)\nAnswer: ((3 + 4) - 5) * 3 * 4 = 24\nInput: 2 3 6 8\nSteps:\n3 * 8 = 24 (left: 2 6 24)\n2 + 6 = 8 (left: 8 24)\n8 * 24 = 24 (left: 24)\nAnswer: (3 * 8) * (2 + 6) = 24",
                "1 * 3 = 3 (left: 3 5 9)\n3 * 5 = 15 (left: 15 9)\n15 + 9 = 24 (left: 24)\nAnswer: (1 * 3) + (5 * 9) = 24\nInput: 3 6 7 9\nSteps:\n6 + 9 = 15 (left: 3 7 15)\n7 + 15 = 22 (left: 3 22)\n3 * 22 = 66 (left: 66)\n66 / 3 = 22 (left: 22)\nAnswer: ((3 + 6) + 9) * (7 + 9) = 24\nInput: 2 3 4 6\nSteps:\n2 * 6 = 12 (left: 3 4 12)\n4 - 3 = 1 (left: 1 12)\n12 * 1 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((2 * 6) - (4 - 3)) * 12 = 24\nInput: 3 5 6 7\nSteps:\n3 * 7 = 21 (left: 5 6 21)\n5 - 6 = -1 (left: -1 21)\n-1 + 21 = 20 (left: 20)\n20 + 6 = 26 (left: 26)\n26 - 5 = 21 (left: 21)\n21 - 3 = 18 (left: 18)\n18 - 7 = 11 (left: 11)\n11 * 2 = 22 (left: 22)\n22 + 4 = 26 (left: 26)\n26 - 8 = 18 (left: 18)\n18 - 1 = 17 (left: 17)\n17 + 9 = 26 (left: 26)\n26 - 6 = 20 (left: 20)\n20 + 5 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 3 = 24 (left: 24)\nAnswer: ((((((3 * 7) - (5 - 6)) + 21) + 6) - 5) - 3) + 4 = 24",
                "1 * 3 = 3 (left: 3 5 9)\n3 * 5 = 15 (left: 15 9)\n15 + 9 = 24 (left: 24)\nAnswer: (1 * 3) * (5 + 9) = 24\nInput: 3 3 4 5\nSteps:\n3 + 4 = 7 (left: 3 5 7)\n7 - 5 = 2 (left: 2 3)\n2 * 3 = 6 (left: 6)\n6 * 4 = 24 (left: 24)\nAnswer: ((3 + 4) - 5) * 3 * 4 = 24\nInput: 2 3 6 9\nSteps:\n2 * 3 = 6 (left: 6 9)\n6 * 9 = 54 (left: 54)\n54 / 6 = 9 (left: 9)\n9 - 9 = 0 (left: 0)\n0 + 24 = 24 (left: 24)\nAnswer: (((2 * 3) * 9) / 6) + 24 = 24",
                "1 * 3 = 3 (left: 3 5 9)\n3 * 5 = 15 (left: 15 9)\n15 + 9 = 24 (left: 24)\nAnswer: (1 * 3) + (5 * 9) = 24\nInput: 3 6 7 9\nSteps:\n6 + 9 = 15 (left: 3 7 15)\n7 + 15 = 22 (left: 3 22)\n3 * 22 = 66 (left: 66)\n66 / 3 = 22 (left: 22)\nAnswer: ((3 + 6) + 9) * (7 + 9) = 24\nInput: 2 3 4 6\nSteps:\n3 * 4 = 12 (left: 2 6 12)\n2 * 6 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (3 * 4) + (2 * 6) = 24\nInput: 2 2 6 8\nSteps:\n2 * 2 = 4 (left: 4 6 8)\n4 + 6 = 10 (left: 10 8)\n10 + 8 = 18 (left: 18)\n18 / 2 = 9 (left: 9)\n9 * 6 = 54 (left: 54)\n54 / 3 = 18 (left: 18)\n18 / 2 = 9 (left: 9)\n9 * 6 = 54 (left: 54)\nAnswer: ((2 * 2) + 6 + 8) + 9 + (6 * 9) = 24"
            ],
            "values": [
                60.0,
                60.0,
                60.0,
                40.0,
                40.0
            ],
            "resampled": [
                "0 <- 7.2",
                "1 <- 6.2",
                "2 <- 6.1",
                "3 <- 7.1",
                "4 <- 6.4"
            ],
            "resampled_steps": [
                "1 * 3 = 3 (left: 3 5 9)\n3 * 5 = 15 (left: 15 9)\n15 + 9 = 24 (left: 24)\nAnswer: (1 * 3) + (5 * 9) = 24\nInput: 3 6 7 9\nSteps:\n6 + 9 = 15 (left: 3 7 15)\n7 + 15 = 22 (left: 3 22)\n3 * 22 = 66 (left: 66)\n66 / 3 = 22 (left: 22)\nAnswer: ((3 + 6) + 9) * (7 + 9) = 24\nInput: 2 3 4 6\nSteps:\n2 * 6 = 12 (left: 3 4 12)\n4 - 3 = 1 (left: 1 12)\n12 * 1 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((2 * 6) - (4 - 3)) * 12 = 24\nInput: 3 5 6 7\nSteps:\n3 * 7 = 21 (left: 5 6 21)\n5 - 6 = -1 (left: -1 21)\n-1 + 21 = 20 (left: 20)\n20 + 6 = 26 (left: 26)\n26 - 5 = 21 (left: 21)\n21 - 3 = 18 (left: 18)\n18 - 7 = 11 (left: 11)\n11 * 2 = 22 (left: 22)\n22 + 4 = 26 (left: 26)\n26 - 8 = 18 (left: 18)\n18 - 1 = 17 (left: 17)\n17 + 9 = 26 (left: 26)\n26 - 6 = 20 (left: 20)\n20 + 5 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 3 = 24 (left: 24)\nAnswer: ((((((3 * 7) - (5 - 6)) + 21) + 6) - 5) - 3) + 4 = 24",
                "1 * 3 = 3 (left: 3 5 9)\n3 * 5 = 15 (left: 15 9)\n15 + 9 = 24 (left: 24)\nAnswer: (1 * 3) + (5 * 9) = 24\nInput: 3 6 7 9\nSteps:\n6 + 9 = 15 (left: 3 7 15)\n7 + 15 = 22 (left: 3 22)\n3 * 22 = 66 (left: 66)\n66 / 3 = 22 (left: 22)\nAnswer: ((3 + 6) + 9) * (7 + 9) = 24\nInput: 2 3 4 6\nSteps:\n3 * 4 = 12 (left: 2 6 12)\n2 * 6 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (3 * 4) + (2 * 6) = 24",
                "1 * 3 = 3 (left: 3 5 9)\n3 * 5 = 15 (left: 15 9)\n15 + 9 = 24 (left: 24)\nAnswer: (1 * 3) + (5 * 9) = 24\nInput: 3 6 7 9\nSteps:\n6 + 9 = 15 (left: 3 7 15)\n7 + 15 = 22 (left: 3 22)\n3 * 22 = 66 (left: 66)\n66 / 3 = 22 (left: 22)\nAnswer: ((3 + 6) + 9) * (7 + 9) = 24\nInput: 2 3 4 6\nSteps:\n2 * 6 = 12 (left: 3 4 12)\n4 - 3 = 1 (left: 1 12)\n12 * 1 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((2 * 6) - (4 - 3)) * 12 = 24",
                "1 * 3 = 3 (left: 3 5 9)\n3 * 5 = 15 (left: 15 9)\n15 + 9 = 24 (left: 24)\nAnswer: (1 * 3) * (5 + 9) = 24\nInput: 3 3 4 5\nSteps:\n3 + 4 = 7 (left: 3 5 7)\n7 - 5 = 2 (left: 2 3)\n2 * 3 = 6 (left: 6)\n6 * 4 = 24 (left: 24)\nAnswer: ((3 + 4) - 5) * 3 * 4 = 24\nInput: 2 3 6 8\nSteps:\n3 * 8 = 24 (left: 2 6 24)\n2 + 6 = 8 (left: 8 24)\n8 * 24 = 24 (left: 24)\nAnswer: (3 * 8) * (2 + 6) = 24",
                "1 * 3 = 3 (left: 3 5 9)\n3 * 5 = 15 (left: 15 9)\n15 + 9 = 24 (left: 24)\nAnswer: (1 * 3) * (5 + 9) = 24\nInput: 2 4 6 8\nSteps:\n4 * 6 = 24 (left: 2 8 24)\n8 / 2 = 4 (left: 4 24)\n4 * 24 = 24 (left: 24)\nAnswer: ((2 * 4) * 6) / 8 = 24\nInput: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6 24)\n6 / 3 = 2 (left: 2 24)\n2 * 24 = 24 (left: 24)\nAnswer: (3 * 8) / (3 / 6) = 24"
            ]
        },
        "step_8": {
            "steps": [
                "1 * 3 = 3 (left: 3 5 9)\n3 * 5 = 15 (left: 15 9)\n15 + 9 = 24 (left: 24)\nAnswer: (1 * 3) + (5 * 9) = 24\nInput: 3 6 7 9\nSteps:\n6 + 9 = 15 (left: 3 7 15)\n7 + 15 = 22 (left: 3 22)\n3 * 22 = 66 (left: 66)\n66 / 3 = 22 (left: 22)\nAnswer: ((3 + 6) + 9) * (7 + 9) = 24\nInput: 2 3 4 6\nSteps:\n2 * 6 = 12 (left: 3 4 12)\n4 - 3 = 1 (left: 1 12)\n12 * 1 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((2 * 6) - (4 - 3)) * 12 = 24\nInput: 3 5 6 7\nSteps:\n3 * 7 = 21 (left: 5 6 21)\n5 - 6 = -1 (left: -1 21)\n-1 + 21 = 20 (left: 20)\n20 + 6 = 26 (left: 26)\n26 - 5 = 21 (left: 21)\n21 - 3 = 18 (left: 18)\n18 - 7 = 11 (left: 11)\n11 * 2 = 22 (left: 22)\n22 + 4 = 26 (left: 26)\n26 - 8 = 18 (left: 18)\n18 - 1 = 17 (left: 17)\n17 + 9 = 26 (left: 26)\n26 - 6 = 20 (left: 20)\n20 + 5 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 3 = 24 (left: 24)\nAnswer: ((((((3 * 7) - (5 - 6)) + 21) + 6) - 5) - 3) + 4 = 24\nInput: 2 4 6 8\nSteps:\n2 * 8 = 16 (left: 4 6 16)\n4 + 6 = 10 (left: 10 16)\n10 + 16 = 26 (left: 26)\n26 - 2 = 24 (left: 24)\nAnswer: ((2 * 8) + (4 + 6)) - 2 = 24",
                "1 * 3 = 3 (left: 3 5 9)\n3 * 5 = 15 (left: 15 9)\n15 + 9 = 24 (left: 24)\nAnswer: (1 * 3) + (5 * 9) = 24\nInput: 3 6 7 9\nSteps:\n6 + 9 = 15 (left: 3 7 15)\n7 + 15 = 22 (left: 3 22)\n3 * 22 = 66 (left: 66)\n66 / 3 = 22 (left: 22)\nAnswer: ((3 + 6) + 9) * (7 + 9) = 24\nInput: 2 3 4 6\nSteps:\n3 * 4 = 12 (left: 2 6 12)\n2 * 6 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (3 * 4) + (2 * 6) = 24\nInput: 7 8 9 10\nSteps:\n7 + 9 = 16 (left: 8 10 16)\n10 - 8 = 2 (left: 2 16)\n2 * 16 = 32 (left: 32)\n32 / 8 = 4 (left: 4)\nAnswer: (7 + 9) * ((10 - 8) * 8) = 24",
                "1 * 3 = 3 (left: 3 5 9)\n3 * 5 = 15 (left: 15 9)\n15 + 9 = 24 (left: 24)\nAnswer: (1 * 3) + (5 * 9) = 24\nInput: 3 6 7 9\nSteps:\n6 + 9 = 15 (left: 3 7 15)\n7 + 15 = 22 (left: 3 22)\n3 * 22 = 66 (left: 66)\n66 / 3 = 22 (left: 22)\nAnswer: ((3 + 6) + 9) * (7 + 9) = 24\nInput: 2 3 4 6\nSteps:\n2 * 6 = 12 (left: 3 4 12)\n4 - 3 = 1 (left: 1 12)\n12 * 1 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((2 * 6) - (4 - 3)) * 12 = 24\nInput: 2 4 6 8\nSteps:\n6 + 8 = 14 (left: 2 4 14)\n4 * 14 = 56 (left: 2 56)\n2 * 56 = 112 (left: 112)\n112 / 4 = 28 (left: 28)\n28 - 6 = 22 (left: 22)\n22 / 2 = 11 (left: 11)\n11 * 2 = 22 (left: 22)\n22 + 4 = 26 (left: 26)\n26 - 8 = 18 (left: 18)\n18 / 2 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 + 6 = 24 (left: 24)\nAnswer: (((2 + 4) * (6 + 8) * 4) / 2 - 6) / 2 + 4 - 8 = 24",
                "1 * 3 = 3 (left: 3 5 9)\n3 * 5 = 15 (left: 15 9)\n15 + 9 = 24 (left: 24)\nAnswer: (1 * 3) * (5 + 9) = 24\nInput: 3 3 4 5\nSteps:\n3 + 4 = 7 (left: 3 5 7)\n7 - 5 = 2 (left: 2 3)\n2 * 3 = 6 (left: 6)\n6 * 4 = 24 (left: 24)\nAnswer: ((3 + 4) - 5) * 3 * 4 = 24\nInput: 2 3 6 8\nSteps:\n3 * 8 = 24 (left: 2 6 24)\n2 + 6 = 8 (left: 8 24)\n8 * 24 = 24 (left: 24)\nAnswer: (3 * 8) * (2 + 6) = 24\nInput: 1 2 3 6\nSteps:\n2 * 6 = 12 (left: 1 3 12)\n3 + 12 = 15 (left: 15)\n1 * 15 = 15 (left: 15)\nAnswer: 1 * ((2 * 6) + 3) = 24",
                "1 * 3 = 3 (left: 3 5 9)\n3 * 5 = 15 (left: 15 9)\n15 + 9 = 24 (left: 24)\nAnswer: (1 * 3) * (5 + 9) = 24\nInput: 2 4 6 8\nSteps:\n4 * 6 = 24 (left: 2 8 24)\n8 / 2 = 4 (left: 4 24)\n4 * 24 = 24 (left: 24)\nAnswer: ((2 * 4) * 6) / 8 = 24\nInput: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6 24)\n6 / 3 = 2 (left: 2 24)\n2 * 24 = 24 (left: 24)\nAnswer: (3 * 8) / (3 / 6) = 24\nInput: 2 2 4 6\nSteps:\n2 * 6 = 12 (left: 2 4 12)\n4 * 2 = 8 (left: 8 12)\n8 * 12 = 24 (left: 24)\nAnswer: (2 * 6) * (2 * 4) = 24"
            ],
            "values": [
                60.0,
                60.0,
                60.0,
                60.0,
                60.0
            ],
            "resampled": [
                "0 <- 7.4",
                "1 <- 3.3",
                "2 <- 8.2",
                "3 <- 6.1",
                "4 <- 8.4"
            ],
            "resampled_steps": [
                "1 * 3 = 3 (left: 3 5 9)\n3 * 5 = 15 (left: 15 9)\n15 + 9 = 24 (left: 24)\nAnswer: (1 * 3) + (5 * 9) = 24\nInput: 3 6 7 9\nSteps:\n6 + 9 = 15 (left: 3 7 15)\n7 + 15 = 22 (left: 3 22)\n3 * 22 = 66 (left: 66)\n66 / 3 = 22 (left: 22)\nAnswer: ((3 + 6) + 9) * (7 + 9) = 24\nInput: 2 3 4 6\nSteps:\n3 * 4 = 12 (left: 2 6 12)\n2 * 6 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (3 * 4) + (2 * 6) = 24\nInput: 2 2 6 8\nSteps:\n2 * 2 = 4 (left: 4 6 8)\n4 + 6 = 10 (left: 10 8)\n10 + 8 = 18 (left: 18)\n18 / 2 = 9 (left: 9)\n9 * 6 = 54 (left: 54)\n54 / 3 = 18 (left: 18)\n18 / 2 = 9 (left: 9)\n9 * 6 = 54 (left: 54)\nAnswer: ((2 * 2) + 6 + 8) + 9 + (6 * 9) = 24",
                "1 * 3 = 3 (left: 3 5 9)\n3 * 5 = 15 (left: 15 9)\n15 + 9 = 24 (left: 24)",
                "1 * 3 = 3 (left: 3 5 9)\n3 * 5 = 15 (left: 15 9)\n15 + 9 = 24 (left: 24)\nAnswer: (1 * 3) + (5 * 9) = 24\nInput: 3 6 7 9\nSteps:\n6 + 9 = 15 (left: 3 7 15)\n7 + 15 = 22 (left: 3 22)\n3 * 22 = 66 (left: 66)\n66 / 3 = 22 (left: 22)\nAnswer: ((3 + 6) + 9) * (7 + 9) = 24\nInput: 2 3 4 6\nSteps:\n2 * 6 = 12 (left: 3 4 12)\n4 - 3 = 1 (left: 1 12)\n12 * 1 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((2 * 6) - (4 - 3)) * 12 = 24\nInput: 2 4 6 8\nSteps:\n6 + 8 = 14 (left: 2 4 14)\n4 * 14 = 56 (left: 2 56)\n2 * 56 = 112 (left: 112)\n112 / 4 = 28 (left: 28)\n28 - 6 = 22 (left: 22)\n22 / 2 = 11 (left: 11)\n11 * 2 = 22 (left: 22)\n22 + 4 = 26 (left: 26)\n26 - 8 = 18 (left: 18)\n18 / 2 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 + 6 = 24 (left: 24)\nAnswer: (((2 + 4) * (6 + 8) * 4) / 2 - 6) / 2 + 4 - 8 = 24",
                "1 * 3 = 3 (left: 3 5 9)\n3 * 5 = 15 (left: 15 9)\n15 + 9 = 24 (left: 24)\nAnswer: (1 * 3) + (5 * 9) = 24\nInput: 3 6 7 9\nSteps:\n6 + 9 = 15 (left: 3 7 15)\n7 + 15 = 22 (left: 3 22)\n3 * 22 = 66 (left: 66)\n66 / 3 = 22 (left: 22)\nAnswer: ((3 + 6) + 9) * (7 + 9) = 24\nInput: 2 3 4 6\nSteps:\n2 * 6 = 12 (left: 3 4 12)\n4 - 3 = 1 (left: 1 12)\n12 * 1 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((2 * 6) - (4 - 3)) * 12 = 24",
                "1 * 3 = 3 (left: 3 5 9)\n3 * 5 = 15 (left: 15 9)\n15 + 9 = 24 (left: 24)\nAnswer: (1 * 3) * (5 + 9) = 24\nInput: 2 4 6 8\nSteps:\n4 * 6 = 24 (left: 2 8 24)\n8 / 2 = 4 (left: 4 24)\n4 * 24 = 24 (left: 24)\nAnswer: ((2 * 4) * 6) / 8 = 24\nInput: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6 24)\n6 / 3 = 2 (left: 2 24)\n2 * 24 = 24 (left: 24)\nAnswer: (3 * 8) / (3 / 6) = 24\nInput: 2 2 4 6\nSteps:\n2 * 6 = 12 (left: 2 4 12)\n4 * 2 = 8 (left: 8 12)\n8 * 12 = 24 (left: 24)\nAnswer: (2 * 6) * (2 * 4) = 24"
            ]
        },
        "step_9": {
            "steps": [
                "1 * 3 = 3 (left: 3 5 9)\n3 * 5 = 15 (left: 15 9)\n15 + 9 = 24 (left: 24)\nAnswer: (1 * 3) + (5 * 9) = 24\nInput: 3 6 7 9\nSteps:\n6 + 9 = 15 (left: 3 7 15)\n7 + 15 = 22 (left: 3 22)\n3 * 22 = 66 (left: 66)\n66 / 3 = 22 (left: 22)\nAnswer: ((3 + 6) + 9) * (7 + 9) = 24\nInput: 2 3 4 6\nSteps:\n3 * 4 = 12 (left: 2 6 12)\n2 * 6 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (3 * 4) + (2 * 6) = 24\nInput: 2 2 6 8\nSteps:\n2 * 2 = 4 (left: 4 6 8)\n4 + 6 = 10 (left: 10 8)\n10 + 8 = 18 (left: 18)\n18 / 2 = 9 (left: 9)\n9 * 6 = 54 (left: 54)\n54 / 3 = 18 (left: 18)\n18 / 2 = 9 (left: 9)\n9 * 6 = 54 (left: 54)\nAnswer: ((2 * 2) + 6 + 8) + 9 + (6 * 9) = 24\nInput: 1 2 3 8\nSteps:\n2 * 3 = 6 (left: 1 6 8)\n6 + 8 = 14 (left: 1 14)\n14 - 1 = 13 (left: 13)\n13 + 1 = 14 (left: 14)\n14 * 2 = 28 (left: 28)\n28 / 2 = 14 (left: 14)\nAnswer: (((1 * 2) + 3) + 8) + (14 * 2) / 2 = 24",
                "1 * 3 = 3 (left: 3 5 9)\n3 * 5 = 15 (left: 15 9)\n15 + 9 = 24 (left: 24)\nAnswer: (1 * 3) * (5 + 9) = 24",
                "1 * 3 = 3 (left: 3 5 9)\n3 * 5 = 15 (left: 15 9)\n15 + 9 = 24 (left: 24)\nAnswer: (1 * 3) + (5 * 9) = 24\nInput: 3 6 7 9\nSteps:\n6 + 9 = 15 (left: 3 7 15)\n7 + 15 = 22 (left: 3 22)\n3 * 22 = 66 (left: 66)\n66 / 3 = 22 (left: 22)\nAnswer: ((3 + 6) + 9) * (7 + 9) = 24\nInput: 2 3 4 6\nSteps:\n2 * 6 = 12 (left: 3 4 12)\n4 - 3 = 1 (left: 1 12)\n12 * 1 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((2 * 6) - (4 - 3)) * 12 = 24\nInput: 2 4 6 8\nSteps:\n6 + 8 = 14 (left: 2 4 14)\n4 * 14 = 56 (left: 2 56)\n2 * 56 = 112 (left: 112)\n112 / 4 = 28 (left: 28)\n28 - 6 = 22 (left: 22)\n22 / 2 = 11 (left: 11)\n11 * 2 = 22 (left: 22)\n22 + 4 = 26 (left: 26)\n26 - 8 = 18 (left: 18)\n18 / 2 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 + 6 = 24 (left: 24)\nAnswer: (((2 + 4) * (6 + 8) * 4) / 2 - 6) / 2 + 4 - 8 = 24\nInput: 3 5 6 7\nSteps:\n3 * 7 = 21 (left: 5 6 21)\n5 + 6 = 11 (left: 11 21)\n21 + 11 = 32 (left: 32)\n32 - 8 = 24 (left: 24)\nAnswer: ((3 * 7) + (5 + 6)) - 8 = 24",
                "1 * 3 = 3 (left: 3 5 9)\n3 * 5 = 15 (left: 15 9)\n15 + 9 = 24 (left: 24)\nAnswer: (1 * 3) + (5 * 9) = 24\nInput: 3 6 7 9\nSteps:\n6 + 9 = 15 (left: 3 7 15)\n7 + 15 = 22 (left: 3 22)\n3 * 22 = 66 (left: 66)\n66 / 3 = 22 (left: 22)\nAnswer: ((3 + 6) + 9) * (7 + 9) = 24\nInput: 2 3 4 6\nSteps:\n2 * 6 = 12 (left: 3 4 12)\n4 - 3 = 1 (left: 1 12)\n12 * 1 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((2 * 6) - (4 - 3)) * 12 = 24\nInput: 2 2 6 8\nSteps:\n2 * 8 = 16 (left: 2 6 16)\n6 * 2 = 12 (left: 12 16)\n12 + 16 = 28 (left: 28)\n28 - 4 = 24 (left: 24)\nAnswer: ((2 * 8) - (6 * 2)) + 4 = 24",
                "1 * 3 = 3 (left: 3 5 9)\n3 * 5 = 15 (left: 15 9)\n15 + 9 = 24 (left: 24)\nAnswer: (1 * 3) * (5 + 9) = 24\nInput: 2 4 6 8\nSteps:\n4 * 6 = 24 (left: 2 8 24)\n8 / 2 = 4 (left: 4 24)\n4 * 24 = 24 (left: 24)\nAnswer: ((2 * 4) * 6) / 8 = 24\nInput: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6 24)\n6 / 3 = 2 (left: 2 24)\n2 * 24 = 24 (left: 24)\nAnswer: (3 * 8) / (3 / 6) = 24\nInput: 2 2 4 6\nSteps:\n2 * 6 = 12 (left: 2 4 12)\n4 * 2 = 8 (left: 8 12)\n8 * 12 = 24 (left: 24)\nAnswer: (2 * 6) * (2 * 4) = 24\nInput: 2 3 5 7\nSteps:\n5 + 7 = 12 (left: 2 3 12)\n3 * 2 = 6 (left: 6 12)\n6 * 12 = 24 (left: 24)\nAnswer: (3 + 5) * (7 - 2) = 24"
            ],
            "values": [
                60.0,
                40.001,
                60.0,
                60.0,
                40.0
            ],
            "resampled": [
                "0 <- 1.3",
                "1 <- 9.0",
                "2 <- 6.3",
                "3 <- 9.0",
                "4 <- 8.2"
            ],
            "resampled_steps": [
                "1 + 3 = 4 (left: 4 5 9)",
                "1 * 3 = 3 (left: 3 5 9)\n3 * 5 = 15 (left: 15 9)\n15 + 9 = 24 (left: 24)\nAnswer: (1 * 3) + (5 * 9) = 24\nInput: 3 6 7 9\nSteps:\n6 + 9 = 15 (left: 3 7 15)\n7 + 15 = 22 (left: 3 22)\n3 * 22 = 66 (left: 66)\n66 / 3 = 22 (left: 22)\nAnswer: ((3 + 6) + 9) * (7 + 9) = 24\nInput: 2 3 4 6\nSteps:\n3 * 4 = 12 (left: 2 6 12)\n2 * 6 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (3 * 4) + (2 * 6) = 24\nInput: 2 2 6 8\nSteps:\n2 * 2 = 4 (left: 4 6 8)\n4 + 6 = 10 (left: 10 8)\n10 + 8 = 18 (left: 18)\n18 / 2 = 9 (left: 9)\n9 * 6 = 54 (left: 54)\n54 / 3 = 18 (left: 18)\n18 / 2 = 9 (left: 9)\n9 * 6 = 54 (left: 54)\nAnswer: ((2 * 2) + 6 + 8) + 9 + (6 * 9) = 24\nInput: 1 2 3 8\nSteps:\n2 * 3 = 6 (left: 1 6 8)\n6 + 8 = 14 (left: 1 14)\n14 - 1 = 13 (left: 13)\n13 + 1 = 14 (left: 14)\n14 * 2 = 28 (left: 28)\n28 / 2 = 14 (left: 14)\nAnswer: (((1 * 2) + 3) + 8) + (14 * 2) / 2 = 24",
                "1 * 3 = 3 (left: 3 5 9)\n3 * 5 = 15 (left: 15 9)\n15 + 9 = 24 (left: 24)\nAnswer: (1 * 3) * (5 + 9) = 24\nInput: 3 3 4 5\nSteps:\n3 + 4 = 7 (left: 3 5 7)\n7 - 5 = 2 (left: 2 3)\n2 * 3 = 6 (left: 6)\n6 * 4 = 24 (left: 24)\nAnswer: ((3 + 4) - 5) * 3 * 4 = 24",
                "1 * 3 = 3 (left: 3 5 9)\n3 * 5 = 15 (left: 15 9)\n15 + 9 = 24 (left: 24)\nAnswer: (1 * 3) + (5 * 9) = 24\nInput: 3 6 7 9\nSteps:\n6 + 9 = 15 (left: 3 7 15)\n7 + 15 = 22 (left: 3 22)\n3 * 22 = 66 (left: 66)\n66 / 3 = 22 (left: 22)\nAnswer: ((3 + 6) + 9) * (7 + 9) = 24\nInput: 2 3 4 6\nSteps:\n3 * 4 = 12 (left: 2 6 12)\n2 * 6 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (3 * 4) + (2 * 6) = 24\nInput: 2 2 6 8\nSteps:\n2 * 2 = 4 (left: 4 6 8)\n4 + 6 = 10 (left: 10 8)\n10 + 8 = 18 (left: 18)\n18 / 2 = 9 (left: 9)\n9 * 6 = 54 (left: 54)\n54 / 3 = 18 (left: 18)\n18 / 2 = 9 (left: 9)\n9 * 6 = 54 (left: 54)\nAnswer: ((2 * 2) + 6 + 8) + 9 + (6 * 9) = 24\nInput: 1 2 3 8\nSteps:\n2 * 3 = 6 (left: 1 6 8)\n6 + 8 = 14 (left: 1 14)\n14 - 1 = 13 (left: 13)\n13 + 1 = 14 (left: 14)\n14 * 2 = 28 (left: 28)\n28 / 2 = 14 (left: 14)\nAnswer: (((1 * 2) + 3) + 8) + (14 * 2) / 2 = 24",
                "1 * 3 = 3 (left: 3 5 9)\n3 * 5 = 15 (left: 15 9)\n15 + 9 = 24 (left: 24)\nAnswer: (1 * 3) + (5 * 9) = 24\nInput: 3 6 7 9\nSteps:\n6 + 9 = 15 (left: 3 7 15)\n7 + 15 = 22 (left: 3 22)\n3 * 22 = 66 (left: 66)\n66 / 3 = 22 (left: 22)\nAnswer: ((3 + 6) + 9) * (7 + 9) = 24\nInput: 2 3 4 6\nSteps:\n2 * 6 = 12 (left: 3 4 12)\n4 - 3 = 1 (left: 1 12)\n12 * 1 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((2 * 6) - (4 - 3)) * 12 = 24\nInput: 2 4 6 8\nSteps:\n6 + 8 = 14 (left: 2 4 14)\n4 * 14 = 56 (left: 2 56)\n2 * 56 = 112 (left: 112)\n112 / 4 = 28 (left: 28)\n28 - 6 = 22 (left: 22)\n22 / 2 = 11 (left: 11)\n11 * 2 = 22 (left: 22)\n22 + 4 = 26 (left: 26)\n26 - 8 = 18 (left: 18)\n18 / 2 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 + 6 = 24 (left: 24)\nAnswer: (((2 + 4) * (6 + 8) * 4) / 2 - 6) / 2 + 4 - 8 = 24"
            ]
        },
        "step_10": {
            "steps": [
                "1 + 3 = 4 (left: 4 5 9)\n6 / 3 = 2 (left: 3 2 9)",
                "1 * 3 = 3 (left: 3 5 9)\n3 * 5 = 15 (left: 15 9)\n15 + 9 = 24 (left: 24)\nAnswer: (1 * 3) + (5 * 9) = 24\nInput: 3 6 7 9\nSteps:\n6 + 9 = 15 (left: 3 7 15)\n7 + 15 = 22 (left: 3 22)\n3 * 22 = 66 (left: 66)\n66 / 3 = 22 (left: 22)\nAnswer: ((3 + 6) + 9) * (7 + 9) = 24\nInput: 2 3 4 6\nSteps:\n3 * 4 = 12 (left: 2 6 12)\n2 * 6 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (3 * 4) + (2 * 6) = 24\nInput: 2 2 6 8\nSteps:\n2 * 2 = 4 (left: 4 6 8)\n4 + 6 = 10 (left: 10 8)\n10 + 8 = 18 (left: 18)\n18 / 2 = 9 (left: 9)\n9 * 6 = 54 (left: 54)\n54 / 3 = 18 (left: 18)\n18 / 2 = 9 (left: 9)\n9 * 6 = 54 (left: 54)\nAnswer: ((2 * 2) + 6 + 8) + 9 + (6 * 9) = 24\nInput: 1 2 3 8\nSteps:\n2 * 3 = 6 (left: 1 6 8)\n6 + 8 = 14 (left: 1 14)\n14 - 1 = 13 (left: 13)\n13 + 1 = 14 (left: 14)\n14 * 2 = 28 (left: 28)\n28 / 2 = 14 (left: 14)\nAnswer: (((1 * 2) + 3) + 8) + (14 * 2) / 2 = 24\nInput: 3 3 4 5\nSteps:\n3 + 5 = 8 (left: 3 4 8)\n3 * 4 = 12 (left: 12 8)\n12 - 8 = 4 (left: 4)\n4 * 5 = 20 (left: 20)\n20 - 3 = 17 (left: 17)\n17 - 4 = 13 (left: 13)\n13 + 20 = 33 (left: 33)\n33 / 3 = 11 (left: 11)\n11 * 3 = 33 (left: 33)\n33 - 13 = 20 (left: 20)\nAnswer: ((3 + 5) * 4) - 8 * 5 + (3 * 4) - 13 - 20 + (11 * 3) = 24",
                "1 * 3 = 3 (left: 3 5 9)\n3 * 5 = 15 (left: 15 9)\n15 + 9 = 24 (left: 24)\nAnswer: (1 * 3) * (5 + 9) = 24\nInput: 3 3 4 5\nSteps:\n3 + 4 = 7 (left: 3 5 7)\n7 - 5 = 2 (left: 2 3)\n2 * 3 = 6 (left: 6)\n6 * 4 = 24 (left: 24)\nAnswer: ((3 + 4) - 5) * 3 * 4 = 24\nInput: 2 3 4 6\nSteps:\n3 + 6 = 9 (left: 2 4 9)\n9 - 4 = 5 (left: 2 5)\n2 * 5 = 10 (left: 10)\n10 * 4 = 24 (left: 24)\nAnswer: (2 * (3 + 6)) * (4 - 5) = 24",
                "1 * 3 = 3 (left: 3 5 9)\n3 * 5 = 15 (left: 15 9)\n15 + 9 = 24 (left: 24)\nAnswer: (1 * 3) + (5 * 9) = 24\nInput: 3 6 7 9\nSteps:\n6 + 9 = 15 (left: 3 7 15)\n7 + 15 = 22 (left: 3 22)\n3 * 22 = 66 (left: 66)\n66 / 3 = 22 (left: 22)\nAnswer: ((3 + 6) + 9) * (7 + 9) = 24\nInput: 2 3 4 6\nSteps:\n3 * 4 = 12 (left: 2 6 12)\n2 * 6 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (3 * 4) + (2 * 6) = 24\nInput: 2 2 6 8\nSteps:\n2 * 2 = 4 (left: 4 6 8)\n4 + 6 = 10 (left: 10 8)\n10 + 8 = 18 (left: 18)\n18 / 2 = 9 (left: 9)\n9 * 6 = 54 (left: 54)\n54 / 3 = 18 (left: 18)\n18 / 2 = 9 (left: 9)\n9 * 6 = 54 (left: 54)\nAnswer: ((2 * 2) + 6 + 8) + 9 + (6 * 9) = 24\nInput: 1 2 3 8\nSteps:\n2 * 3 = 6 (left: 1 6 8)\n6 + 8 = 14 (left: 1 14)\n14 - 1 = 13 (left: 13)\n13 + 1 = 14 (left: 14)\n14 * 2 = 28 (left: 28)\n28 / 2 = 14 (left: 14)\nAnswer: (((1 * 2) + 3) + 8) + (14 * 2) / 2 = 24\nInput: 3 5 6 7\nSteps:\n5 * 6 = 30 (left: 3 7 30)\n7 - 3 = 4 (left: 4 30)\n30 - 4 = 26 (left: 26)\n26 / 1 = 26 (left: 26)\nAnswer: (3 * (5 * 6)) - (7 - 4) = 24",
                "1 * 3 = 3 (left: 3 5 9)\n3 * 5 = 15 (left: 15 9)\n15 + 9 = 24 (left: 24)\nAnswer: (1 * 3) + (5 * 9) = 24\nInput: 3 6 7 9\nSteps:\n6 + 9 = 15 (left: 3 7 15)\n7 + 15 = 22 (left: 3 22)\n3 * 22 = 66 (left: 66)\n66 / 3 = 22 (left: 22)\nAnswer: ((3 + 6) + 9) * (7 + 9) = 24\nInput: 2 3 4 6\nSteps:\n2 * 6 = 12 (left: 3 4 12)\n4 - 3 = 1 (left: 1 12)\n12 * 1 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((2 * 6) - (4 - 3)) * 12 = 24\nInput: 2 4 6 8\nSteps:\n6 + 8 = 14 (left: 2 4 14)\n4 * 14 = 56 (left: 2 56)\n2 * 56 = 112 (left: 112)\n112 / 4 = 28 (left: 28)\n28 - 6 = 22 (left: 22)\n22 / 2 = 11 (left: 11)\n11 * 2 = 22 (left: 22)\n22 + 4 = 26 (left: 26)\n26 - 8 = 18 (left: 18)\n18 / 2 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 + 6 = 24 (left: 24)\nAnswer: (((2 + 4) * (6 + 8) * 4) / 2 - 6) / 2 + 4 - 8 = 24\nInput: 3 5 5 7\nSteps:\n5 * 7 = 35 (left: 3 5 35)\n5 - 3 = 2 (left: 2 35)\n35 - 2 = 33 (left: 33)\n33 / 3 = 11 (left: 11)\n11 * 5 = 55 (left: 55)\n55 - 5 = 50 (left: 50)\n50 / 5 = 10 (left: 10)\n10 * 7 = 70 (left: 70)\n70 / 10 = 7 (left: 7)\n7 * 7 = 49 (left: 49)\n49 + 5 = 54 (left: 54)\n54 - 3 = 51 (left: 51)\n51 / 5 = 10.2 (left: 10.2)\n10.2 * 7 = 71.4 (left: 71.4)\n71.4 - 7 = 64.4 (left: 64.4)\n64.4 / 3 = 21.4666666667 (left: 21.4666666667)\n21.4666666667 * 5 = 107.333333333 (left: 107.333333333)\n107.333333333 - 7 = 100.333333333 (left: 100.333333333)\n100.333333333 / 5 = 20.0666666667 (left: 20.0666666667)\n20.0666666667 * 7 = 140.466666667 (left: 140.466666667)\n140.466666667 / 3 = 46.8222222223 (left: 46.8222222223)\n46.8222222223 + 5 = 51.8222222223 (left: 51.8222222223)\n51.8222222223 - 3 = 48.8222222223 (left: 48.8222222223)\n48.8222222223 / 5 = 9.76444444447 (left: 9.76444444447)\n9.76444444447 * 7 = 68.3511111113 (left: 68.3511111113)\n68.3511111113 - 7 = 61.3511111113 (left: 61.3511111113)\n61.3511111113 / 3 = 20.4503703704 (left: 20.4503703704)\n20.4503703704 * 5 = 102.251851852 (left: 102.251851852)\n102.251851852 - 7 = 95.251851852 (left: 95.251851852)\n95.251851852 / 5 = 19.0503703704 (left: 19.0503703704)\n19.0503703704 * 7 = 133.352592593 (left: 133.352592593)\n133.352592593 / 3 = 44.4508641977 (left: 44.4508641977)\n44.4508641977 + 5 = 49.4508641977 (left: 49.4508641977)\n49.4508641977 - 3 = 46.4508641977 (left: 46.4508641977)\n46.4508641977 / 5 = 9.29017283953 (left: 9.29017283953)\n9.29017283953 * 7 = 65.0312096767 (left: 65.0312096767)\n65.0312096767 - 7 = 58.0312096767 (left: 58.0312096767)\n58.0312096767 / 3 = 19.3437365589 (left: 19.3437365589)\n19.3437365589 * 5 = 96.7186827945 (left: 96.7186827945)\n96.7186827945 - 7 = 89.7186827945 (left: 89.7186827945)\n89.7186827945 / 5 = 17.9437365589 (left: 17.9437365589)\n17.9437365589 * 7 = 125.606156912 (left: 125.606156912)\n125.606156912 / 3 = 41.8687189707 (left: 41.8687189707)\n41.8687189707 + 5 ="
            ],
            "values": [
                3.0,
                60.0,
                60.0,
                60.0,
                60.0
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 0.2639445
    },
    "909": {
        "input": "3 3 7 12",
        "step_1": {
            "steps": [
                "3 / 3 = 1 (left: 1 7 12)",
                "12 - 3 = 9 (left: 3 7 9)",
                "4 * 5 = 20 (left: 20 7 9)",
                "Possible next steps:",
                "9 - 4 = 5 (left: 1 5 9)"
            ],
            "values": [
                2.001,
                2.0,
                2.001,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- INIT"
            ],
            "resampled_steps": [
                "",
                "",
                "",
                "",
                ""
            ]
        },
        "step_2": {
            "steps": [
                "12 - 7 = 5 (left: 3 5 12)",
                "Input: 4 5 9 16",
                "3 * 3 = 9 (left: 9 7 12)",
                "7 - 3 = 4 (left: 4 3 12)",
                "3 + 3 = 6 (left: 6 7 12)"
            ],
            "values": [
                1.002,
                0.003,
                2.001,
                60.0,
                22.0
            ],
            "resampled": [
                "0 <- 2.3",
                "1 <- INIT",
                "2 <- 2.4",
                "3 <- 2.3",
                "4 <- 2.3"
            ],
            "resampled_steps": [
                "7 - 3 = 4 (left: 4 3 12)",
                "",
                "3 + 3 = 6 (left: 6 7 12)",
                "7 - 3 = 4 (left: 4 3 12)",
                "7 - 3 = 4 (left: 4 3 12)"
            ]
        },
        "step_3": {
            "steps": [
                "7 - 3 = 4 (left: 4 3 12)\n3 + 12 = 15 (left: 4 15)",
                "12 - 7 = 5 (left: 3 5 12)",
                "3 + 3 = 6 (left: 6 7 12)\n7 / 6 = 1.16666666667 (left: 1.16666666667 12)",
                "7 - 3 = 4 (left: 4 3 12)\n3 * 4 = 12 (left: 12 12)",
                "7 - 3 = 4 (left: 4 3 12)\n25 - 5 = 20 (left: 5 20)"
            ],
            "values": [
                0.003,
                1.002,
                2.001,
                40.001,
                1.002
            ],
            "resampled": [
                "0 <- 2.3",
                "1 <- 3.3",
                "2 <- 3.3",
                "3 <- 3.3",
                "4 <- 2.4"
            ],
            "resampled_steps": [
                "7 - 3 = 4 (left: 4 3 12)",
                "7 - 3 = 4 (left: 4 3 12)\n3 * 4 = 12 (left: 12 12)",
                "7 - 3 = 4 (left: 4 3 12)\n3 * 4 = 12 (left: 12 12)",
                "7 - 3 = 4 (left: 4 3 12)\n3 * 4 = 12 (left: 12 12)",
                "3 + 3 = 6 (left: 6 7 12)"
            ]
        },
        "step_4": {
            "steps": [
                "7 - 3 = 4 (left: 4 3 12)\n4 * 3 = 12 (left: 12 12)",
                "7 - 3 = 4 (left: 4 3 12)\n3 * 4 = 12 (left: 12 12)\n12 + 12 = 24",
                "7 - 3 = 4 (left: 4 3 12)\n3 * 4 = 12 (left: 12 12)\n12 + 12 = 24",
                "7 - 3 = 4 (left: 4 3 12)\n3 * 4 = 12 (left: 12 12)\n12 - 12 = 0 (left: 0)",
                "3 + 3 = 6 (left: 6 7 12)\n7 * 12 = 84 (left: 6 84)"
            ],
            "values": [
                40.001,
                0.003,
                0.003,
                0.003,
                40.0
            ],
            "resampled": [
                "0 <- 3.3",
                "1 <- 3.3",
                "2 <- 4.4",
                "3 <- 4.0",
                "4 <- INIT"
            ],
            "resampled_steps": [
                "7 - 3 = 4 (left: 4 3 12)\n3 * 4 = 12 (left: 12 12)",
                "7 - 3 = 4 (left: 4 3 12)\n3 * 4 = 12 (left: 12 12)",
                "3 + 3 = 6 (left: 6 7 12)\n7 * 12 = 84 (left: 6 84)",
                "7 - 3 = 4 (left: 4 3 12)\n4 * 3 = 12 (left: 12 12)",
                ""
            ]
        },
        "step_5": {
            "steps": [
                "7 - 3 = 4 (left: 4 3 12)\n3 * 4 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "7 - 3 = 4 (left: 4 3 12)\n3 * 4 = 12 (left: 12 12)\n12 / 12 = 1 (left: 1) ",
                "3 + 3 = 6 (left: 6 7 12)\n7 * 12 = 84 (left: 6 84)\n4 + 3 = 7 (left: 12 7)",
                "7 - 3 = 4 (left: 4 3 12)\n4 * 3 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "12 - 7 = 5 (left: 3 5 12)"
            ],
            "values": [
                60.0,
                0.003,
                0.003,
                60.0,
                0.003
            ],
            "resampled": [
                "0 <- 5.3",
                "1 <- 5.3",
                "2 <- 5.0",
                "3 <- 5.3",
                "4 <- 5.3"
            ],
            "resampled_steps": [
                "7 - 3 = 4 (left: 4 3 12)\n4 * 3 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "7 - 3 = 4 (left: 4 3 12)\n4 * 3 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "7 - 3 = 4 (left: 4 3 12)\n3 * 4 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "7 - 3 = 4 (left: 4 3 12)\n4 * 3 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "7 - 3 = 4 (left: 4 3 12)\n4 * 3 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)"
            ]
        },
        "step_6": {
            "steps": [
                "7 - 3 = 4 (left: 4 3 12)\n4 * 3 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: ((7 - 3) * 3) + 12 = 24",
                "7 - 3 = 4 (left: 4 3 12)\n4 * 3 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: ((3 + 3) - 7) * 12 = 24",
                "7 - 3 = 4 (left: 4 3 12)\n3 * 4 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (7 - 3) * (3 * 4) = 24",
                "7 - 3 = 4 (left: 4 3 12)\n4 * 3 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (7 - 3) * (3 * 12) = 24",
                "7 - 3 = 4 (left: 4 3 12)\n4 * 3 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: ((7 - 3) * 3) + 12 = 24"
            ]
        },
        "results": [
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            }
        ],
        "cost": 0.281069
    },
    "910": {
        "input": "4 5 7 9",
        "step_1": {
            "steps": [
                "7 / 9 = 0.78 (left: 4 5 0.78)",
                "7 - 4 = 3 (left: 3 5 9)",
                "9 + 3 = 12 (left: 6 12 12)",
                "7 - 4 = 3 (left: 3 5 9)",
                "Possible next steps:"
            ],
            "values": [
                3.0,
                41.0,
                22.0,
                20.001,
                0.003
            ],
            "resampled": [
                "0 <- 1.2",
                "1 <- 1.2",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- 1.1"
            ],
            "resampled_steps": [
                "9 + 3 = 12 (left: 6 12 12)",
                "9 + 3 = 12 (left: 6 12 12)",
                "",
                "",
                "7 - 4 = 3 (left: 3 5 9)"
            ]
        },
        "step_2": {
            "steps": [
                "9 + 3 = 12 (left: 6 12 12)\n6 + 12 = 18 (left: 12 12 18)",
                "9 + 3 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)",
                "4 + 7 = 11 (left: 5 9)",
                "5 + 7 = 12 (left: 4 12 9)",
                "7 - 4 = 3 (left: 3 5 9)\n12 - 4 = 8 (left: 8 10 12)"
            ],
            "values": [
                1.002,
                60.0,
                0.003,
                1.002,
                3.0
            ],
            "resampled": [
                "0 <- 1.1",
                "1 <- 1.1",
                "2 <- 1.0",
                "3 <- 2.1",
                "4 <- 1.3"
            ],
            "resampled_steps": [
                "7 - 4 = 3 (left: 3 5 9)",
                "7 - 4 = 3 (left: 3 5 9)",
                "7 / 9 = 0.78 (left: 4 5 0.78)",
                "9 + 3 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)",
                "7 - 4 = 3 (left: 3 5 9)"
            ]
        },
        "step_3": {
            "steps": [
                "7 - 4 = 3 (left: 3 5 9)\n9 - 5 = 4 (left: 3 4)",
                "7 - 4 = 3 (left: 3 5 9)\n7 - 2 = 5 (left: 5 2)",
                "7 / 9 = 0.78 (left: 4 5 0.78)\n5 - 4 = 1 (left: 1 0.78)",
                "9 + 3 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6)",
                "7 - 4 = 3 (left: 3 5 9)\n6 - 4 = 2 (left: 2 10 12)"
            ],
            "values": [
                22.0,
                40.0,
                0.002,
                0.002,
                1.002
            ],
            "resampled": [
                "0 <- 3.0",
                "1 <- 1.1",
                "2 <- 2.1",
                "3 <- 2.4",
                "4 <- 3.0"
            ],
            "resampled_steps": [
                "7 - 4 = 3 (left: 3 5 9)\n9 - 5 = 4 (left: 3 4)",
                "7 - 4 = 3 (left: 3 5 9)",
                "9 + 3 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)",
                "7 - 4 = 3 (left: 3 5 9)\n12 - 4 = 8 (left: 8 10 12)",
                "7 - 4 = 3 (left: 3 5 9)\n9 - 5 = 4 (left: 3 4)"
            ]
        },
        "step_4": {
            "steps": [
                "7 - 4 = 3 (left: 3 5 9)\n9 - 5 = 4 (left: 3 4)\n3 / 4 = 0.75 (left: 0.75)",
                "7 - 4 = 3 (left: 3 5 9)\n9 / 3 = 3 (left: 5 3)",
                "9 + 3 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)",
                "7 - 4 = 3 (left: 3 5 9)\n12 - 4 = 8 (left: 8 10 12)\nInput: 18 22 80 120 0.8 -2 0.8333",
                "7 - 4 = 3 (left: 3 5 9)\n9 - 5 = 4 (left: 3 4)\n3 + 4 = 7 (left: 7)"
            ],
            "values": [
                0.002,
                0.003,
                0.003,
                0.003,
                0.001
            ],
            "resampled": [
                "0 <- 1.1",
                "1 <- 3.0",
                "2 <- 1.1",
                "3 <- 3.1",
                "4 <- 2.1"
            ],
            "resampled_steps": [
                "7 - 4 = 3 (left: 3 5 9)",
                "7 - 4 = 3 (left: 3 5 9)\n9 - 5 = 4 (left: 3 4)",
                "7 - 4 = 3 (left: 3 5 9)",
                "7 - 4 = 3 (left: 3 5 9)\n7 - 2 = 5 (left: 5 2)",
                "9 + 3 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)"
            ]
        },
        "step_5": {
            "steps": [
                "7 - 4 = 3 (left: 3 5 9)\n9 - 3 = 6 (left: 5 6)",
                "7 - 4 = 3 (left: 3 5 9)\n9 - 5 = 4 (left: 3 4)\n5 + 5 = 10 (left: 10)",
                "7 - 4 = 3 (left: 3 5 9)\n9 - 5 = 4 (left: 3 4)",
                "7 - 4 = 3 (left: 3 5 9)\n7 - 2 = 5 (left: 5 2)\n5 - 2 = 3 (left: 3)",
                "9 + 3 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6)"
            ],
            "values": [
                0.003,
                0.002,
                21.0,
                0.0,
                0.003
            ],
            "resampled": [
                "0 <- 2.1",
                "1 <- 1.2",
                "2 <- INIT",
                "3 <- 3.0",
                "4 <- 1.3"
            ],
            "resampled_steps": [
                "9 + 3 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)",
                "9 + 3 = 12 (left: 6 12 12)",
                "",
                "7 - 4 = 3 (left: 3 5 9)\n9 - 5 = 4 (left: 3 4)",
                "7 - 4 = 3 (left: 3 5 9)"
            ]
        },
        "step_6": {
            "steps": [
                "9 + 3 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n12 + 2 = 14 (left: 14)",
                "9 + 3 = 12 (left: 6 12 12)\n12 - 6 = 6 (left: 6 12)",
                "9 / 3 = 3 (left: 4 5 7)",
                "7 - 4 = 3 (left: 3 5 9)\n9 - 5 = 4 (left: 3 4)\n3 * 4 = 12 (left: 12)",
                "7 - 4 = 3 (left: 3 5 9)\n9 - 3 = 6 (left: 5 6)"
            ],
            "values": [
                0.003,
                0.003,
                1.002,
                0.003,
                0.002
            ],
            "resampled": [
                "0 <- 3.1",
                "1 <- 1.1",
                "2 <- 1.1",
                "3 <- 1.3",
                "4 <- 2.1"
            ],
            "resampled_steps": [
                "7 - 4 = 3 (left: 3 5 9)\n7 - 2 = 5 (left: 5 2)",
                "7 - 4 = 3 (left: 3 5 9)",
                "7 - 4 = 3 (left: 3 5 9)",
                "7 - 4 = 3 (left: 3 5 9)",
                "9 + 3 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)"
            ]
        },
        "step_7": {
            "steps": [
                "7 - 4 = 3 (left: 3 5 9)\n7 - 2 = 5 (left: 5 2)\n5 / 2 = 2.5 (left: 2.5)",
                "7 - 4 = 3 (left: 3 5 9)\n6 * 4 = 24 (left: 24 10 12)",
                "7 - 4 = 3 (left: 3 5 9)\n4 * 6 = 24 (left: 24 10 12)",
                "7 - 4 = 3 (left: 3 5 9)\n9 / 3 = 3 (left: 5 3)",
                "9 + 3 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)"
            ],
            "values": [
                0.0,
                22.0,
                20.0,
                1.002,
                0.002
            ],
            "resampled": [
                "0 <- 7.1",
                "1 <- 7.1",
                "2 <- 1.1",
                "3 <- 7.1",
                "4 <- 5.2"
            ],
            "resampled_steps": [
                "7 - 4 = 3 (left: 3 5 9)\n6 * 4 = 24 (left: 24 10 12)",
                "7 - 4 = 3 (left: 3 5 9)\n6 * 4 = 24 (left: 24 10 12)",
                "7 - 4 = 3 (left: 3 5 9)",
                "7 - 4 = 3 (left: 3 5 9)\n6 * 4 = 24 (left: 24 10 12)",
                "7 - 4 = 3 (left: 3 5 9)\n9 - 5 = 4 (left: 3 4)"
            ]
        },
        "step_8": {
            "steps": [
                "7 - 4 = 3 (left: 3 5 9)\n6 * 4 = 24 (left: 24 10 12)\n10 - 12 = -2 (left: -2 10 12)",
                "7 - 4 = 3 (left: 3 5 9)\n6 * 4 = 24 (left: 24 10 12)\n24 * 10 = 240 (left: 240 12)",
                "7 - 4 = 3 (left: 3 5 9)\n6 * 4 = 24 (left: 24 10)",
                "7 - 4 = 3 (left: 3 5 9)\n6 * 4 = 24 (left: 24 10 12)\n24 + 10 = 34 (left: 12 34)",
                "7 - 4 = 3 (left: 3 5 9)\n9 - 5 = 4 (left: 3 4)\n3 + 4 = 7 (left: 7)"
            ],
            "values": [
                21.001,
                60.0,
                40.001,
                0.002,
                0.0
            ],
            "resampled": [
                "0 <- 8.1",
                "1 <- 1.1",
                "2 <- 8.1",
                "3 <- 8.2",
                "4 <- 8.2"
            ],
            "resampled_steps": [
                "7 - 4 = 3 (left: 3 5 9)\n6 * 4 = 24 (left: 24 10 12)\n24 * 10 = 240 (left: 240 12)",
                "7 - 4 = 3 (left: 3 5 9)",
                "7 - 4 = 3 (left: 3 5 9)\n6 * 4 = 24 (left: 24 10 12)\n24 * 10 = 240 (left: 240 12)",
                "7 - 4 = 3 (left: 3 5 9)\n6 * 4 = 24 (left: 24 10)",
                "7 - 4 = 3 (left: 3 5 9)\n6 * 4 = 24 (left: 24 10)"
            ]
        },
        "step_9": {
            "steps": [
                "7 - 4 = 3 (left: 3 5 9)\n6 * 4 = 24 (left: 24 10 12)\n24 * 10 = 240 (left: 240 12)\n240 + 12 = 252 (left: 252)",
                "7 - 4 = 3 (left: 3 5 9)\n9 - 5 = 4 (left: 3 4)",
                "7 - 4 = 3 (left: 3 5 9)\n6 * 4 = 24 (left: 24 10 12)\n24 * 10 = 240 (left: 240 12)\n240 - 12 = 228 (left: 228)",
                "7 - 4 = 3 (left: 3 5 9)\n6 * 4 = 24 (left: 24 10)\n24 / 10 = 2.4 (left: 2.4 10)",
                "7 - 4 = 3 (left: 3 5 9)\n6 * 4 = 24 (left: 24 10)\n24 - 10 = 14 (left: 14 10)"
            ],
            "values": [
                0.003,
                2.0,
                0.003,
                60.0,
                60.0
            ],
            "resampled": [
                "0 <- 8.0",
                "1 <- 8.2",
                "2 <- 9.4",
                "3 <- 1.2",
                "4 <- 9.4"
            ],
            "resampled_steps": [
                "7 - 4 = 3 (left: 3 5 9)\n6 * 4 = 24 (left: 24 10 12)\n10 - 12 = -2 (left: -2 10 12)",
                "7 - 4 = 3 (left: 3 5 9)\n6 * 4 = 24 (left: 24 10)",
                "7 - 4 = 3 (left: 3 5 9)\n6 * 4 = 24 (left: 24 10)\n24 - 10 = 14 (left: 14 10)",
                "9 + 3 = 12 (left: 6 12 12)",
                "7 - 4 = 3 (left: 3 5 9)\n6 * 4 = 24 (left: 24 10)\n24 - 10 = 14 (left: 14 10)"
            ]
        },
        "step_10": {
            "steps": [
                "7 - 4 = 3 (left: 3 5 9)\n6 * 4 = 24 (left: 24 10 12)\n10 - 12 = -2 (left: -2 10 12)\n10 - (-2) = 12 (left: 12)",
                "7 - 4 = 3 (left: 3 5 9)\n6 * 4 = 24 (left: 24 10)\n24 / 10 = 2.4 (left: 10)",
                "7 - 4 = 3 (left: 3 5 9)\n6 * 4 = 24 (left: 24 10)\n24 - 10 = 14 (left: 14 10)\n10 * 14 = 140 (left: 140)",
                "9 + 3 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12 12)",
                "7 - 4 = 3 (left: 3 5 9)\n6 * 4 = 24 (left: 24 10)\n24 - 10 = 14 (left: 14 10)\n14 + 10 = 24 (left: 24)"
            ],
            "values": [
                0.002,
                0.002,
                0.002,
                0.003,
                60.0
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 0.3077485
    },
    "911": {
        "input": "1 2 8 13",
        "step_1": {
            "steps": [
                "2 + 8 = 10 (left: 1 10 13)",
                "2 * 1 = 2 (left: 2 8 13)",
                "13 - 2 = 11 (left: 1 8 11)",
                "8 - 2 = 6 (left: 1 6 13)",
                "13 - 2 = 11 (left: 1 8 11)"
            ],
            "values": [
                0.003,
                2.001,
                21.0,
                3.0,
                0.001
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- 1.2",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- 1.2"
            ],
            "resampled_steps": [
                "",
                "13 - 2 = 11 (left: 1 8 11)",
                "",
                "",
                "13 - 2 = 11 (left: 1 8 11)"
            ]
        },
        "step_2": {
            "steps": [
                "1 + 2 = 3 (left: 3 8 13)",
                "13 - 2 = 11 (left: 1 8 11)\n11 - 1 = 10 (left: 8 10)",
                "8 - 2 = 6 (left: 1 6 13)",
                "13 - 1 = 12 (left: 2 8 12)",
                "13 - 2 = 11 (left: 1 8 11)\n1 * 8 = 8 (left: 8 11)"
            ],
            "values": [
                60.0,
                1.002,
                1.002,
                1.002,
                0.002
            ],
            "resampled": [
                "0 <- 2.0",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- 2.0",
                "4 <- 2.0"
            ],
            "resampled_steps": [
                "1 + 2 = 3 (left: 3 8 13)",
                "",
                "",
                "1 + 2 = 3 (left: 3 8 13)",
                "1 + 2 = 3 (left: 3 8 13)"
            ]
        },
        "step_3": {
            "steps": [
                "1 + 2 = 3 (left: 3 8 13)\nPossible next steps:",
                "2 * 8 = 16 (left: 1 16 13)",
                "15 - 5 = 10 (left: 3 10 10)",
                "1 + 2 = 3 (left: 3 8 13)\n13 - 3 = 10 (left: 8 10)",
                "1 + 2 = 3 (left: 3 8 13)\n8 / 3 = 2.6666666666666665 (left: 2.6666666666666665 13)"
            ],
            "values": [
                0.003,
                22.0,
                0.003,
                2.001,
                1.002
            ],
            "resampled": [
                "0 <- 3.1",
                "1 <- 2.0",
                "2 <- 2.0",
                "3 <- 2.0",
                "4 <- 2.0"
            ],
            "resampled_steps": [
                "2 * 8 = 16 (left: 1 16 13)",
                "1 + 2 = 3 (left: 3 8 13)",
                "1 + 2 = 3 (left: 3 8 13)",
                "1 + 2 = 3 (left: 3 8 13)",
                "1 + 2 = 3 (left: 3 8 13)"
            ]
        },
        "step_4": {
            "steps": [
                "2 * 8 = 16 (left: 1 16 13)\n1 * 16 = 16 (left: 16 13)",
                "1 + 2 = 3 (left: 3 8 13)\n8 - 3 = 5 (left: 5 13)",
                "1 + 2 = 3 (left: 3 8 13)\n6 / 4 = 1.5 (left: 1.5 5 3)",
                "1 + 2 = 3 (left: 3 8 13)\n13 + 3 = 16 (left: 8 16)",
                "1 + 2 = 3 (left: 3 8 13)\n8 / 3 = 2 (left: 2 13)"
            ],
            "values": [
                0.003,
                0.002,
                3.0,
                21.001,
                0.003
            ],
            "resampled": [
                "0 <- 3.1",
                "1 <- 1.2",
                "2 <- 2.0",
                "3 <- 2.0",
                "4 <- 3.1"
            ],
            "resampled_steps": [
                "2 * 8 = 16 (left: 1 16 13)",
                "13 - 2 = 11 (left: 1 8 11)",
                "1 + 2 = 3 (left: 3 8 13)",
                "1 + 2 = 3 (left: 3 8 13)",
                "2 * 8 = 16 (left: 1 16 13)"
            ]
        },
        "step_5": {
            "steps": [
                "2 * 8 = 16 (left: 1 16 13)\n1 + 16 = 17 (left: 17 13)",
                "13 - 2 = 11 (left: 1 8 11)\n1 + 8 = 9 (left: 9 11)",
                "1 + 2 = 3 (left: 3 8 13)\n8 - 3 = 5 (left: 5 13)",
                "1 + 2 = 3 (left: 3 8 13)\n13 - 8 = 5 (left: 3 5 8)",
                "2 * 8 = 16 (left: 1 16 13)\n13 + 1 = 14 (left: 14 13)"
            ],
            "values": [
                0.003,
                0.002,
                1.002,
                3.0,
                0.003
            ],
            "resampled": [
                "0 <- 2.3",
                "1 <- 2.0",
                "2 <- 2.0",
                "3 <- 2.0",
                "4 <- 2.0"
            ],
            "resampled_steps": [
                "13 - 1 = 12 (left: 2 8 12)",
                "1 + 2 = 3 (left: 3 8 13)",
                "1 + 2 = 3 (left: 3 8 13)",
                "1 + 2 = 3 (left: 3 8 13)",
                "1 + 2 = 3 (left: 3 8 13)"
            ]
        },
        "step_6": {
            "steps": [
                "13 - 1 = 12 (left: 2 8 12)\n8 - 2 = 6 (left: 6 12)",
                "1 + 2 = 3 (left: 3 8 13)\n8 - 3 = 5 (left: 5 13)",
                "1 + 2 = 3 (left: 3 8 13)\n7 / 4 = 1.75 (left: 1.75 11)",
                "1 + 2 = 3 (left: 3 8 13)\n8 / 3 = 2.6666666666666665 (left: 2.6666666666666665 13)",
                "1 + 2 = 3 (left: 3 8 13)\n11 - 7 = 4 (left: 1 5 4)"
            ],
            "values": [
                0.003,
                1.001,
                0.001,
                1.002,
                3.0
            ],
            "resampled": [
                "0 <- 2.0",
                "1 <- 4.3",
                "2 <- 3.1",
                "3 <- 1.2",
                "4 <- 3.1"
            ],
            "resampled_steps": [
                "1 + 2 = 3 (left: 3 8 13)",
                "1 + 2 = 3 (left: 3 8 13)\n13 + 3 = 16 (left: 8 16)",
                "2 * 8 = 16 (left: 1 16 13)",
                "13 - 2 = 11 (left: 1 8 11)",
                "2 * 8 = 16 (left: 1 16 13)"
            ]
        },
        "step_7": {
            "steps": [
                "1 + 2 = 3 (left: 3 8 13)\n8 - 3 = 5 (left: 5 13)",
                "1 + 2 = 3 (left: 3 8 13)\n13 + 3 = 16 (left: 8 16)\n8 * 16 = 128 (left: 128)",
                "2 * 8 = 16 (left: 1 16 13)\n16 / 1 = 16 (left: 16 13)",
                "13 - 2 = 11 (left: 1 8 11)\n1 + 8 = 9 (left: 9 11)",
                "2 * 8 = 16 (left: 1 16 13)\n13 + 1 = 14 (left: 16 14)"
            ],
            "values": [
                0.003,
                0.003,
                0.003,
                0.0,
                0.002
            ],
            "resampled": [
                "0 <- 4.3",
                "1 <- 2.0",
                "2 <- 3.1",
                "3 <- 1.2",
                "4 <- 6.3"
            ],
            "resampled_steps": [
                "1 + 2 = 3 (left: 3 8 13)\n13 + 3 = 16 (left: 8 16)",
                "1 + 2 = 3 (left: 3 8 13)",
                "2 * 8 = 16 (left: 1 16 13)",
                "13 - 2 = 11 (left: 1 8 11)",
                "1 + 2 = 3 (left: 3 8 13)\n8 / 3 = 2.6666666666666665 (left: 2.6666666666666665 13)"
            ]
        },
        "step_8": {
            "steps": [
                "1 + 2 = 3 (left: 3 8 13)\n13 + 3 = 16 (left: 8 16)\n16 - 8 = 8 (left: 8)",
                "1 + 2 = 3 (left: 3 8 13)\n6 - 4 = 2 (left: 2 10)",
                "2 * 8 = 16 (left: 1 16 13)\n1 + 16 = 17 (left: 13 17)",
                "13 - 2 = 11 (left: 1 8 11)\n6 + 4 = 10 (left: 10 1)",
                "1 + 2 = 3 (left: 3 8 13)\n8 / 3 = 2.6666666666666665 (left: 2.6666666666666665 13)\n2.6666666666666665 + 13 = 15.666666666666666 (left: 13, 15.666666666666666)"
            ],
            "values": [
                0.002,
                2.0,
                0.003,
                40.0,
                3.0
            ],
            "resampled": [
                "0 <- 1.2",
                "1 <- 8.3",
                "2 <- 8.4",
                "3 <- 4.3",
                "4 <- 2.0"
            ],
            "resampled_steps": [
                "13 - 2 = 11 (left: 1 8 11)",
                "13 - 2 = 11 (left: 1 8 11)\n6 + 4 = 10 (left: 10 1)",
                "1 + 2 = 3 (left: 3 8 13)\n8 / 3 = 2.6666666666666665 (left: 2.6666666666666665 13)\n2.6666666666666665 + 13 = 15.666666666666666 (left: 13, 15.666666666666666)",
                "1 + 2 = 3 (left: 3 8 13)\n13 + 3 = 16 (left: 8 16)",
                "1 + 2 = 3 (left: 3 8 13)"
            ]
        },
        "step_9": {
            "steps": [
                "13 - 2 = 11 (left: 1 8 11)\n8 / 1 = 8 (left: 8 11)",
                "13 - 2 = 11 (left: 1 8 11)\n6 + 4 = 10 (left: 10 1)\n10 * 1 = 10 (left: 1 10)",
                "1 + 2 = 3 (left: 3 8 13)\n8 / 3 = 2.6666666666666665 (left: 2.6666666666666665 13)\n2.6666666666666665 + 13 = 15.666666666666666 (left: 13, 15.666666666666666)\n13 - 15.666666666666666 = -2.666666666666666 (left: -2.666666666666666)",
                "1 + 2 = 3 (left: 3 8 13)\n13 + 3 = 16 (left: 8 16)\n16 / 8 = 2 (left: 2)",
                "1 + 2 = 3 (left: 3 8 13)\n3 * 8 = 24 (left: 24 13)"
            ],
            "values": [
                0.002,
                40.0,
                0.0,
                0.0,
                0.003
            ],
            "resampled": [
                "0 <- 8.3",
                "1 <- 8.3",
                "2 <- 9.1",
                "3 <- 8.3",
                "4 <- 9.1"
            ],
            "resampled_steps": [
                "13 - 2 = 11 (left: 1 8 11)\n6 + 4 = 10 (left: 10 1)",
                "13 - 2 = 11 (left: 1 8 11)\n6 + 4 = 10 (left: 10 1)",
                "13 - 2 = 11 (left: 1 8 11)\n6 + 4 = 10 (left: 10 1)\n10 * 1 = 10 (left: 1 10)",
                "13 - 2 = 11 (left: 1 8 11)\n6 + 4 = 10 (left: 10 1)",
                "13 - 2 = 11 (left: 1 8 11)\n6 + 4 = 10 (left: 10 1)\n10 * 1 = 10 (left: 1 10)"
            ]
        },
        "step_10": {
            "steps": [
                "13 - 2 = 11 (left: 1 8 11)\n6 + 4 = 10 (left: 10 1)\n10 / 1 = 10 (left: 1 10)",
                "13 - 2 = 11 (left: 1 8 11)\n6 + 4 = 10 (left: 10 1)\n10 + 1 = 11 (left: 1)",
                "13 - 2 = 11 (left: 1 8 11)\n6 + 4 = 10 (left: 10 1)\n10 * 1 = 10 (left: 1 10)\n1 * 10 = 10 (left: 10)",
                "13 - 2 = 11 (left: 1 8 11)\n6 + 4 = 10 (left: 10 1)\n5 + 2 = 7 (left: 7 3)",
                "13 - 2 = 11 (left: 1 8 11)\n6 + 4 = 10 (left: 10 1)\n10 * 1 = 10 (left: 1 10)\n1 + 10 = 11 (left: 11)"
            ],
            "values": [
                60.0,
                0.003,
                0.003,
                1.001,
                0.003
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 0.33726500000000004
    },
    "912": {
        "input": "4 6 6 9",
        "step_1": {
            "steps": [
                "6 - 4 = 2 (left: 2 6 9)",
                "6 / 4 = 1.5 (left: 1.5 6 9)",
                "9 - 4 = 5 (left: 5 6 6)",
                "6 / 4 = 1.5 (left: 1.5 6 9)",
                "9 - 6 = 3 (left: 4 6 3)"
            ],
            "values": [
                3.0,
                3.0,
                22.0,
                3.0,
                21.001
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- 1.4",
                "2 <- INIT",
                "3 <- 1.2",
                "4 <- INIT"
            ],
            "resampled_steps": [
                "",
                "9 - 6 = 3 (left: 4 6 3)",
                "",
                "9 - 4 = 5 (left: 5 6 6)",
                ""
            ]
        },
        "step_2": {
            "steps": [
                "4 * 6 = 24 (left: 6 9 24)",
                "9 - 6 = 3 (left: 4 6 3)\n7 + 9 = 16 (left: 16 2 5)",
                "6 / 4 = 1.5 (left: 1.5 6 9)",
                "9 - 4 = 5 (left: 5 6 6)\n6 - 5 = 1 (left: 1 6)",
                "9 - 6 = 3 (left: 3 6 6)"
            ],
            "values": [
                1.001,
                3.0,
                3.0,
                60.0,
                3.0
            ],
            "resampled": [
                "0 <- 2.3",
                "1 <- 1.2",
                "2 <- 2.2",
                "3 <- 1.4",
                "4 <- 1.2"
            ],
            "resampled_steps": [
                "9 - 4 = 5 (left: 5 6 6)\n6 - 5 = 1 (left: 1 6)",
                "9 - 4 = 5 (left: 5 6 6)",
                "6 / 4 = 1.5 (left: 1.5 6 9)",
                "9 - 6 = 3 (left: 4 6 3)",
                "9 - 4 = 5 (left: 5 6 6)"
            ]
        },
        "step_3": {
            "steps": [
                "9 - 4 = 5 (left: 5 6 6)\n6 - 5 = 1 (left: 1 6)\n6 - 1 = 5 (left: 5)",
                "9 - 4 = 5 (left: 5 6 6)\n6 - 5 = 1 (left: 1 1)",
                "6 / 4 = 1.5 (left: 1.5 6 9)\n1.5 * 6 = 9 (left: 9 9)",
                "9 - 6 = 3 (left: 4 6 3)\n4 * 6 = 24 (left: 3 24)",
                "9 - 4 = 5 (left: 5 6 6)\nInput: 3 9 9"
            ],
            "values": [
                0.002,
                1.002,
                1.002,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 2.3",
                "1 <- 2.3",
                "2 <- INIT",
                "3 <- 1.2",
                "4 <- 1.2"
            ],
            "resampled_steps": [
                "9 - 4 = 5 (left: 5 6 6)\n6 - 5 = 1 (left: 1 6)",
                "9 - 4 = 5 (left: 5 6 6)\n6 - 5 = 1 (left: 1 6)",
                "",
                "9 - 4 = 5 (left: 5 6 6)",
                "9 - 4 = 5 (left: 5 6 6)"
            ]
        },
        "step_4": {
            "steps": [
                "9 - 4 = 5 (left: 5 6 6)\n6 - 5 = 1 (left: 1 6)\n6 / 1 = 6 (left: 6)",
                "9 - 4 = 5 (left: 5 6 6)\n6 - 5 = 1 (left: 1 6)\n6 - 1 = 5 (left: 5)",
                "9 - 6 = 3 (left: 4 6 3)",
                "9 - 4 = 5 (left: 5 6 6)\n7 - 3 = 4 (left: 1 4 9)",
                "9 - 4 = 5 (left: 5 6 6)\nInput: 3 7 5 5"
            ],
            "values": [
                0.003,
                0.001,
                41.0,
                40.001,
                0.003
            ],
            "resampled": [
                "0 <- 4.2",
                "1 <- 4.2",
                "2 <- 4.2",
                "3 <- 4.2",
                "4 <- 4.3"
            ],
            "resampled_steps": [
                "9 - 6 = 3 (left: 4 6 3)",
                "9 - 6 = 3 (left: 4 6 3)",
                "9 - 6 = 3 (left: 4 6 3)",
                "9 - 6 = 3 (left: 4 6 3)",
                "9 - 4 = 5 (left: 5 6 6)\n7 - 3 = 4 (left: 1 4 9)"
            ]
        },
        "step_5": {
            "steps": [
                "9 - 6 = 3 (left: 4 6 3)\n5 * 2 = 10 (left: 10 10)",
                "9 - 6 = 3 (left: 4 6 3)\n3 * 4 = 12 (left: 6 12)",
                "9 - 6 = 3 (left: 4 6 3)\n10 * 20 = 200 (left: 5 200)",
                "9 - 6 = 3 (left: 4 6 3)\n4 + 6 = 10 (left: 3 10)",
                "9 - 4 = 5 (left: 5 6 6)\n7 - 3 = 4 (left: 1 4 9)\n1 + 4 = 5 (left: 5 9)"
            ],
            "values": [
                0.002,
                0.003,
                0.003,
                0.002,
                0.003
            ],
            "resampled": [
                "0 <- 4.2",
                "1 <- 4.3",
                "2 <- 2.3",
                "3 <- INIT",
                "4 <- 2.3"
            ],
            "resampled_steps": [
                "9 - 6 = 3 (left: 4 6 3)",
                "9 - 4 = 5 (left: 5 6 6)\n7 - 3 = 4 (left: 1 4 9)",
                "9 - 4 = 5 (left: 5 6 6)\n6 - 5 = 1 (left: 1 6)",
                "",
                "9 - 4 = 5 (left: 5 6 6)\n6 - 5 = 1 (left: 1 6)"
            ]
        },
        "step_6": {
            "steps": [
                "9 - 6 = 3 (left: 4 6 3)\n4 + 6 = 10 (left: 3 10)",
                "9 - 4 = 5 (left: 5 6 6)\n7 - 3 = 4 (left: 1 4 9)\n9 - 4 = 5 (left: 5)",
                "9 - 4 = 5 (left: 5 6 6)\n6 - 5 = 1 (left: 1 6)\n6 - 1 = 5 (left: 5)",
                "9 - 6 = 3 (left: 4 6 3)",
                "9 - 4 = 5 (left: 5 6 6)\n6 - 5 = 1 (left: 1 6)\n1 * 6 = 6 (left: 6)"
            ],
            "values": [
                0.003,
                0.001,
                0.001,
                41.0,
                0.003
            ],
            "resampled": [
                "0 <- 6.3",
                "1 <- 6.3",
                "2 <- 2.3",
                "3 <- 6.3",
                "4 <- 2.3"
            ],
            "resampled_steps": [
                "9 - 6 = 3 (left: 4 6 3)",
                "9 - 6 = 3 (left: 4 6 3)",
                "9 - 4 = 5 (left: 5 6 6)\n6 - 5 = 1 (left: 1 6)",
                "9 - 6 = 3 (left: 4 6 3)",
                "9 - 4 = 5 (left: 5 6 6)\n6 - 5 = 1 (left: 1 6)"
            ]
        },
        "step_7": {
            "steps": [
                "9 - 6 = 3 (left: 4 6 3)\n6 - 4 = 2 (left: 2 3)",
                "9 - 6 = 3 (left: 4 6 3)\n4 * 6 = 24 (left: 3 24)",
                "9 - 4 = 5 (left: 5 6 6)\n6 - 5 = 1 (left: 1 6)\n1 * 6 = 6 (left: 6)",
                "9 - 6 = 3 (left: 4 6 3)\n4 * 6 = 24 (left: 3 24)",
                "9 - 4 = 5 (left: 5 6 6)\n6 - 5 = 1 (left: 1 6)\n6 / 1 = 6 (left: 6)"
            ],
            "values": [
                40.0,
                0.002,
                0.003,
                20.001,
                0.003
            ],
            "resampled": [
                "0 <- 7.3",
                "1 <- 2.2",
                "2 <- 7.0",
                "3 <- 7.0",
                "4 <- 7.0"
            ],
            "resampled_steps": [
                "9 - 6 = 3 (left: 4 6 3)\n4 * 6 = 24 (left: 3 24)",
                "6 / 4 = 1.5 (left: 1.5 6 9)",
                "9 - 6 = 3 (left: 4 6 3)\n6 - 4 = 2 (left: 2 3)",
                "9 - 6 = 3 (left: 4 6 3)\n6 - 4 = 2 (left: 2 3)",
                "9 - 6 = 3 (left: 4 6 3)\n6 - 4 = 2 (left: 2 3)"
            ]
        },
        "step_8": {
            "steps": [
                "9 - 6 = 3 (left: 4 6 3)\n4 * 6 = 24 (left: 3 24)\n24 - 3 = 21 (left: 3 21)",
                "6 / 4 = 1.5 (left: 1.5 6 9)\n9 - 1.5 = 7.5 (left: 6 7.5)",
                "9 - 6 = 3 (left: 4 6 3)\n6 - 4 = 2 (left: 2 3)\n2 / 3 = 0.66667 (left: 0.66667)",
                "9 - 6 = 3 (left: 4 6 3)\n6 - 4 = 2 (left: 2 3)\n2 * 3 = 6 (left: 6)",
                "9 - 6 = 3 (left: 4 6 3)\n6 - 4 = 2 (left: 2 3)\nInput: 5 10"
            ],
            "values": [
                40.001,
                1.002,
                0.003,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 7.3",
                "1 <- 2.3",
                "2 <- 4.3",
                "3 <- 2.3",
                "4 <- 7.0"
            ],
            "resampled_steps": [
                "9 - 6 = 3 (left: 4 6 3)\n4 * 6 = 24 (left: 3 24)",
                "9 - 4 = 5 (left: 5 6 6)\n6 - 5 = 1 (left: 1 6)",
                "9 - 4 = 5 (left: 5 6 6)\n7 - 3 = 4 (left: 1 4 9)",
                "9 - 4 = 5 (left: 5 6 6)\n6 - 5 = 1 (left: 1 6)",
                "9 - 6 = 3 (left: 4 6 3)\n6 - 4 = 2 (left: 2 3)"
            ]
        },
        "step_9": {
            "steps": [
                "9 - 6 = 3 (left: 4 6 3)\n4 * 6 = 24 (left: 3 24)\n24 + 3 = 27 (left: 27)",
                "9 - 4 = 5 (left: 5 6 6)\n6 - 5 = 1 (left: 1 6)\n1 + 6 = 7 (left: 7)",
                "9 - 4 = 5 (left: 5 6 6)\n7 - 3 = 4 (left: 1 4 9)\n1 + 4 = 5 (left: 5 9)",
                "9 - 4 = 5 (left: 5 6 6)\n6 - 5 = 1 (left: 1 6)\n6 / 1 = 6 (left: 6)",
                "9 - 6 = 3 (left: 4 6 3)\n6 - 4 = 2 (left: 2 3)\n3 - 2 = 1 (left: 1)"
            ],
            "values": [
                0.001,
                0.0,
                0.003,
                0.003,
                0.001
            ],
            "resampled": [
                "0 <- 2.3",
                "1 <- 4.2",
                "2 <- 4.2",
                "3 <- 8.0",
                "4 <- 4.2"
            ],
            "resampled_steps": [
                "9 - 4 = 5 (left: 5 6 6)\n6 - 5 = 1 (left: 1 6)",
                "9 - 6 = 3 (left: 4 6 3)",
                "9 - 6 = 3 (left: 4 6 3)",
                "9 - 6 = 3 (left: 4 6 3)\n4 * 6 = 24 (left: 3 24)\n24 - 3 = 21 (left: 3 21)",
                "9 - 6 = 3 (left: 4 6 3)"
            ]
        },
        "step_10": {
            "steps": [
                "9 - 4 = 5 (left: 5 6 6)\n6 - 5 = 1 (left: 1 6)\n6 - 1 = 5 (left: 5)",
                "9 - 6 = 3 (left: 4 6 3)\n4 + 6 = 10 (left: 3 10)",
                "9 - 6 = 3 (left: 4 6 3)\n6 - 4 = 2 (left: 2 3)",
                "9 - 6 = 3 (left: 4 6 3)\n4 * 6 = 24 (left: 3 24)\n24 - 3 = 21 (left: 3 21)\n3 + 21 = 24 (left: 24)",
                "9 - 6 = 3 (left: 4 6 3)\nInput: 5 2 7"
            ],
            "values": [
                0.001,
                0.003,
                60.0,
                60.0,
                0.003
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 0.364205
    },
    "913": {
        "input": "1 4 4 8",
        "step_1": {
            "steps": [
                "4 + 4 = 8 (left: 4 8 8)",
                "1 * 4 = 4 (left: 4 4 8)",
                "1 + 4 = 5 (left: 4 5 8)",
                "8 - 4 = 4 (left: 1 4 4)",
                "4 / 1 = 4 (left: 4 4 8)"
            ],
            "values": [
                60.0,
                41.0,
                3.0,
                41.0,
                21.001
            ],
            "resampled": [
                "0 <- 1.4",
                "1 <- 1.0",
                "2 <- 1.0",
                "3 <- 1.0",
                "4 <- INIT"
            ],
            "resampled_steps": [
                "4 / 1 = 4 (left: 4 4 8)",
                "4 + 4 = 8 (left: 4 8 8)",
                "4 + 4 = 8 (left: 4 8 8)",
                "4 + 4 = 8 (left: 4 8 8)",
                ""
            ]
        },
        "step_2": {
            "steps": [
                "4 / 1 = 4 (left: 4 4 8)\n4 * 4 = 16 (left: 16 8)",
                "4 + 4 = 8 (left: 4 8 8)\n8 / 4 = 2 (left: 2 8)",
                "4 + 4 = 8 (left: 4 8 8)\n8 - 4 = 4 (left: 4 8)",
                "4 + 4 = 8 (left: 4 8 8)\n8 / 4 = 2 (left: 2 8)",
                "4 * 1 = 4 (left: 4 4 8)"
            ],
            "values": [
                60.0,
                0.003,
                0.003,
                0.002,
                21.001
            ],
            "resampled": [
                "0 <- 1.0",
                "1 <- 1.3",
                "2 <- 2.4",
                "3 <- 1.0",
                "4 <- 1.0"
            ],
            "resampled_steps": [
                "4 + 4 = 8 (left: 4 8 8)",
                "8 - 4 = 4 (left: 1 4 4)",
                "4 * 1 = 4 (left: 4 4 8)",
                "4 + 4 = 8 (left: 4 8 8)",
                "4 + 4 = 8 (left: 4 8 8)"
            ]
        },
        "step_3": {
            "steps": [
                "4 + 4 = 8 (left: 4 8 8)\n8 - 4 = 4 (left: 4 8 8)",
                "8 - 4 = 4 (left: 1 4 4)\n4 - 1 = 3 (left: 3 4)",
                "4 * 1 = 4 (left: 4 4 8)\nInput: 3 5 9",
                "4 + 4 = 8 (left: 4 8 8)\n8 - 4 = 4 (left: 4 8)",
                "4 + 4 = 8 (left: 4 8 8)\n15 - 10 = 5 (left: 5 15)"
            ],
            "values": [
                60.0,
                21.0,
                0.003,
                0.0,
                1.002
            ],
            "resampled": [
                "0 <- 1.3",
                "1 <- 3.0",
                "2 <- 1.0",
                "3 <- 1.3",
                "4 <- 3.0"
            ],
            "resampled_steps": [
                "8 - 4 = 4 (left: 1 4 4)",
                "4 + 4 = 8 (left: 4 8 8)\n8 - 4 = 4 (left: 4 8 8)",
                "4 + 4 = 8 (left: 4 8 8)",
                "8 - 4 = 4 (left: 1 4 4)",
                "4 + 4 = 8 (left: 4 8 8)\n8 - 4 = 4 (left: 4 8 8)"
            ]
        },
        "step_4": {
            "steps": [
                "8 - 4 = 4 (left: 1 4 4)\n4 - 1 = 3 (left: 3 4 4)",
                "4 + 4 = 8 (left: 4 8 8)\n8 - 4 = 4 (left: 4 8 8)\n4 + 8 = 12 (left: 8 12)",
                "4 + 4 = 8 (left: 4 8 8)\n8 - 4 = 4 (left: 4 8)",
                "8 - 4 = 4 (left: 1 4 4)\n6 - 3 = 3 (left: 3)",
                "4 + 4 = 8 (left: 4 8 8)\n8 - 4 = 4 (left: 4 8 8)\n8 - 4 = 4 (left: 4 8)"
            ],
            "values": [
                1.002,
                0.003,
                0.003,
                0.001,
                0.002
            ],
            "resampled": [
                "0 <- 3.0",
                "1 <- 1.0",
                "2 <- 1.3",
                "3 <- 1.0",
                "4 <- 2.0"
            ],
            "resampled_steps": [
                "4 + 4 = 8 (left: 4 8 8)\n8 - 4 = 4 (left: 4 8 8)",
                "4 + 4 = 8 (left: 4 8 8)",
                "8 - 4 = 4 (left: 1 4 4)",
                "4 + 4 = 8 (left: 4 8 8)",
                "4 / 1 = 4 (left: 4 4 8)\n4 * 4 = 16 (left: 16 8)"
            ]
        },
        "step_5": {
            "steps": [
                "4 + 4 = 8 (left: 4 8 8)\n8 - 4 = 4 (left: 4 8 8)\n4 * 8 = 32 (left: 8 32)",
                "4 + 4 = 8 (left: 4 8 8)\n4 + 8 = 12 (left: 8 8 12)",
                "8 - 4 = 4 (left: 1 4 4)\n4 / 1 = 4 (left: 4 4)",
                "4 + 4 = 8 (left: 4 8 8)\n8 - 4 = 4 (left: 4 8)",
                "4 / 1 = 4 (left: 4 4 8)\n4 * 4 = 16 (left: 16 8)\n16 * 8 = 128 (left: 128)"
            ],
            "values": [
                21.001,
                1.001,
                0.003,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 5.0",
                "1 <- 5.0",
                "2 <- 3.0",
                "3 <- 2.0",
                "4 <- 2.0"
            ],
            "resampled_steps": [
                "4 + 4 = 8 (left: 4 8 8)\n8 - 4 = 4 (left: 4 8 8)\n4 * 8 = 32 (left: 8 32)",
                "4 + 4 = 8 (left: 4 8 8)\n8 - 4 = 4 (left: 4 8 8)\n4 * 8 = 32 (left: 8 32)",
                "4 + 4 = 8 (left: 4 8 8)\n8 - 4 = 4 (left: 4 8 8)",
                "4 / 1 = 4 (left: 4 4 8)\n4 * 4 = 16 (left: 16 8)",
                "4 / 1 = 4 (left: 4 4 8)\n4 * 4 = 16 (left: 16 8)"
            ]
        },
        "step_6": {
            "steps": [
                "4 + 4 = 8 (left: 4 8 8)\n8 - 4 = 4 (left: 4 8 8)\n4 * 8 = 32 (left: 8 32)\nPossible next steps:",
                "4 + 4 = 8 (left: 4 8 8)\n8 - 4 = 4 (left: 4 8 8)\n4 * 8 = 32 (left: 8 32)\n32 / 8 = 4 (left: 4 32)",
                "4 + 4 = 8 (left: 4 8 8)\n8 - 4 = 4 (left: 4 8 8)\n8 - 4 = 4 (left: 4 8 8)",
                "4 / 1 = 4 (left: 4 4 8)\n4 * 4 = 16 (left: 16 8)\n16 - 8 = 8 (left: 8 8)",
                "4 / 1 = 4 (left: 4 4 8)\n4 * 4 = 16 (left: 16 8)\n16 + 8 = 24 (left: 8 24)"
            ],
            "values": [
                0.003,
                1.001,
                60.0,
                0.003,
                40.001
            ],
            "resampled": [
                "0 <- 3.0",
                "1 <- 1.4",
                "2 <- 3.4",
                "3 <- 1.1",
                "4 <- 6.2"
            ],
            "resampled_steps": [
                "4 + 4 = 8 (left: 4 8 8)\n8 - 4 = 4 (left: 4 8 8)",
                "4 / 1 = 4 (left: 4 4 8)",
                "4 + 4 = 8 (left: 4 8 8)\n15 - 10 = 5 (left: 5 15)",
                "1 * 4 = 4 (left: 4 4 8)",
                "4 + 4 = 8 (left: 4 8 8)\n8 - 4 = 4 (left: 4 8 8)\n8 - 4 = 4 (left: 4 8 8)"
            ]
        },
        "step_7": {
            "steps": [
                "4 + 4 = 8 (left: 4 8 8)\n8 - 4 = 4 (left: 4 8 8)\n8 / 4 = 2 (left: 2 8 8)",
                "4 / 1 = 4 (left: 4 4 8)\n8 - 4 = 4 (left: 4 8)",
                "4 + 4 = 8 (left: 4 8 8)\n15 - 10 = 5 (left: 5 15)\n27 - 3 = 24 (left: 9 24)",
                "1 * 4 = 4 (left: 4 4 8)\nPossible next steps:",
                "4 + 4 = 8 (left: 4 8 8)\n8 - 4 = 4 (left: 4 8 8)\n8 - 4 = 4 (left: 4 8 8)\n8 - 4 = 4 (left: 4 8)"
            ],
            "values": [
                21.001,
                0.003,
                0.001,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 1.0",
                "1 <- 6.4",
                "2 <- 6.4",
                "3 <- 2.0",
                "4 <- 6.2"
            ],
            "resampled_steps": [
                "4 + 4 = 8 (left: 4 8 8)",
                "4 / 1 = 4 (left: 4 4 8)\n4 * 4 = 16 (left: 16 8)\n16 + 8 = 24 (left: 8 24)",
                "4 / 1 = 4 (left: 4 4 8)\n4 * 4 = 16 (left: 16 8)\n16 + 8 = 24 (left: 8 24)",
                "4 / 1 = 4 (left: 4 4 8)\n4 * 4 = 16 (left: 16 8)",
                "4 + 4 = 8 (left: 4 8 8)\n8 - 4 = 4 (left: 4 8 8)\n8 - 4 = 4 (left: 4 8 8)"
            ]
        },
        "step_8": {
            "steps": [
                "4 + 4 = 8 (left: 4 8 8)\n4 + 8 = 12 (left: 8 12)",
                "4 / 1 = 4 (left: 4 4 8)\n4 * 4 = 16 (left: 16 8)\n16 + 8 = 24 (left: 8 24)\n8 / 24 = 0.3333333333333333 (left: 8 0.3333333333333333)",
                "4 / 1 = 4 (left: 4 4 8)\n4 * 4 = 16 (left: 16 8)\n16 + 8 = 24 (left: 8 24)\n8 * 3 = 24 (left: 24)",
                "4 / 1 = 4 (left: 4 4 8)\n4 * 4 = 16 (left: 16 8)\n16 - 8 = 8 (left: 8)",
                "4 + 4 = 8 (left: 4 8 8)\n8 - 4 = 4 (left: 4 8 8)\n8 - 4 = 4 (left: 4 8 8)\n4 + 8 = 12 (left: 8 8 12)"
            ],
            "values": [
                0.003,
                60.0,
                60.0,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 6.4",
                "1 <- 8.2",
                "2 <- 8.2",
                "3 <- 8.1",
                "4 <- 6.2"
            ],
            "resampled_steps": [
                "4 / 1 = 4 (left: 4 4 8)\n4 * 4 = 16 (left: 16 8)\n16 + 8 = 24 (left: 8 24)",
                "4 / 1 = 4 (left: 4 4 8)\n4 * 4 = 16 (left: 16 8)\n16 + 8 = 24 (left: 8 24)\n8 * 3 = 24 (left: 24)",
                "4 / 1 = 4 (left: 4 4 8)\n4 * 4 = 16 (left: 16 8)\n16 + 8 = 24 (left: 8 24)\n8 * 3 = 24 (left: 24)",
                "4 / 1 = 4 (left: 4 4 8)\n4 * 4 = 16 (left: 16 8)\n16 + 8 = 24 (left: 8 24)\n8 / 24 = 0.3333333333333333 (left: 8 0.3333333333333333)",
                "4 + 4 = 8 (left: 4 8 8)\n8 - 4 = 4 (left: 4 8 8)\n8 - 4 = 4 (left: 4 8 8)"
            ]
        },
        "step_9": {
            "steps": [
                "4 / 1 = 4 (left: 4 4 8)\n4 * 4 = 16 (left: 16 8)\n16 + 8 = 24 (left: 8 24)\n8 / 24 = 0.3333333333333333 (left: 0.3333333333333333 8)",
                "4 / 1 = 4 (left: 4 4 8)\n4 * 4 = 16 (left: 16 8)\n16 + 8 = 24 (left: 8 24)\n8 * 3 = 24 (left: 24)\nAnswer: (4 * 4) + 8 = 24",
                "4 / 1 = 4 (left: 4 4 8)\n4 * 4 = 16 (left: 16 8)\n16 + 8 = 24 (left: 8 24)\n8 * 3 = 24 (left: 24)\nAnswer: (4 * (4 / 1)) + 8 = 24",
                "4 / 1 = 4 (left: 4 4 8)\n4 * 4 = 16 (left: 16 8)\n16 + 8 = 24 (left: 8 24)\n8 / 24 = 0.3333333333333333 (left: 8 0.3333333333333333)\n8 * 0.3333333333333333 = 2.6666666666666665 (left: 2.6666666666666665)",
                "4 + 4 = 8 (left: 4 8 8)\n8 - 4 = 4 (left: 4 8 8)\n8 - 4 = 4 (left: 4 8 8)\n8 - 4 = 4 (left: 4 8 8)"
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 0.387454
    },
    "914": {
        "input": "1 5 10 11",
        "step_1": {
            "steps": [
                "10 - 1 = 9 (left: 5 9 11)",
                "11 - 5 = 6 (left: 1 6 11)",
                "1 * 10 = 10 (left: 10 5 11)",
                "11 - 10 = 1 (left: 1 5 1)",
                "3 * 9 = 27 (left: 12 15 27)"
            ],
            "values": [
                2.001,
                1.0,
                2.001,
                0.003,
                22.0
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- 1.4",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- INIT"
            ],
            "resampled_steps": [
                "",
                "3 * 9 = 27 (left: 12 15 27)",
                "",
                "",
                ""
            ]
        },
        "step_2": {
            "steps": [
                "1 + 5 = 6 (left: 6 10 11)",
                "3 * 9 = 27 (left: 12 15 27)\n15 - 5 = 10 (left: 10 27)",
                "10 - 1 = 9 (left: 9 11)",
                "1 + 5 = 6 (left: 6 10 11)",
                "11 + 1 = 12 (left: 5 10 12)"
            ],
            "values": [
                2.001,
                0.003,
                1.002,
                3.0,
                0.003
            ],
            "resampled": [
                "0 <- 2.3",
                "1 <- 1.4",
                "2 <- 1.4",
                "3 <- INIT",
                "4 <- 1.4"
            ],
            "resampled_steps": [
                "1 + 5 = 6 (left: 6 10 11)",
                "3 * 9 = 27 (left: 12 15 27)",
                "3 * 9 = 27 (left: 12 15 27)",
                "",
                "3 * 9 = 27 (left: 12 15 27)"
            ]
        },
        "step_3": {
            "steps": [
                "1 + 5 = 6 (left: 6 10 11)\n10 + 11 = 21 (left: 6)",
                "3 * 9 = 27 (left: 12 15 27)\n12 + 15 = 27 (left: 27)",
                "3 * 9 = 27 (left: 12 15 27)\nInput: 5 5 10 20",
                "10 + 1 = 11 (left: 6 11 11)",
                "3 * 9 = 27 (left: 12 15 27)\n12 + 15 = 27 (left: 27)"
            ],
            "values": [
                0.002,
                20.001,
                0.003,
                1.002,
                0.001
            ],
            "resampled": [
                "0 <- 2.3",
                "1 <- 2.3",
                "2 <- INIT",
                "3 <- 1.4",
                "4 <- 3.1"
            ],
            "resampled_steps": [
                "1 + 5 = 6 (left: 6 10 11)",
                "1 + 5 = 6 (left: 6 10 11)",
                "",
                "3 * 9 = 27 (left: 12 15 27)",
                "3 * 9 = 27 (left: 12 15 27)\n12 + 15 = 27 (left: 27)"
            ]
        },
        "step_4": {
            "steps": [
                "1 + 5 = 6 (left: 6 10 11)\n4 * 6 = 24 (left: 8 10)",
                "1 + 5 = 6 (left: 6 10 11)\n6 * 10 = 60 (left: 60 11)",
                "5 * 10 = 50 (left: 1 50 11)",
                "3 * 9 = 27 (left: 12 15 27)\n13 - 9 = 4 (left: 4 13)",
                "3 * 9 = 27 (left: 12 15 27)\n12 + 15 = 27 (left: 27)\n27 - 2 = 25 (left: 2 25)"
            ],
            "values": [
                21.0,
                1.002,
                21.001,
                0.003,
                0.002
            ],
            "resampled": [
                "0 <- 1.4",
                "1 <- 3.1",
                "2 <- 3.1",
                "3 <- INIT",
                "4 <- 4.0"
            ],
            "resampled_steps": [
                "3 * 9 = 27 (left: 12 15 27)",
                "3 * 9 = 27 (left: 12 15 27)\n12 + 15 = 27 (left: 27)",
                "3 * 9 = 27 (left: 12 15 27)\n12 + 15 = 27 (left: 27)",
                "",
                "1 + 5 = 6 (left: 6 10 11)\n4 * 6 = 24 (left: 8 10)"
            ]
        },
        "step_5": {
            "steps": [
                "3 * 9 = 27 (left: 12 15 27)\n15 - 12 = 3 (left: 3 27)",
                "3 * 9 = 27 (left: 12 15 27)\n12 + 15 = 27 (left: 27)\n27 - 3 = 24 (left: 24)",
                "3 * 9 = 27 (left: 12 15 27)\n12 + 15 = 27 (left: 27)\n27 / 2 = 13.5",
                "11 - 1 = 10 (left: 5 10 10)",
                "1 + 5 = 6 (left: 6 10 11)\n4 * 6 = 24 (left: 8 10)\n8 / 10 = 0.8 (left: 0.8)"
            ],
            "values": [
                20.002,
                60.0,
                0.003,
                3.0,
                0.001
            ],
            "resampled": [
                "0 <- 5.1",
                "1 <- 4.0",
                "2 <- 4.2",
                "3 <- 4.0",
                "4 <- 5.1"
            ],
            "resampled_steps": [
                "3 * 9 = 27 (left: 12 15 27)\n12 + 15 = 27 (left: 27)\n27 - 3 = 24 (left: 24)",
                "1 + 5 = 6 (left: 6 10 11)\n4 * 6 = 24 (left: 8 10)",
                "5 * 10 = 50 (left: 1 50 11)",
                "1 + 5 = 6 (left: 6 10 11)\n4 * 6 = 24 (left: 8 10)",
                "3 * 9 = 27 (left: 12 15 27)\n12 + 15 = 27 (left: 27)\n27 - 3 = 24 (left: 24)"
            ]
        },
        "step_6": {
            "steps": [
                "3 * 9 = 27 (left: 12 15 27)\n12 + 15 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer: ((1 * 5) + 10) + 11 = 24",
                "1 + 5 = 6 (left: 6 10 11)\n4 * 6 = 24 (left: 8 10)\n10 - 8 = 2 (left: 2)",
                "5 * 10 = 50 (left: 1 50 11)\n11 / 1 = 11 (left: 11 11)",
                "1 + 5 = 6 (left: 6 10 11)\n4 * 6 = 24 (left: 8 10)\n14 + 4 = 18 (left: 8 14 18)",
                "3 * 9 = 27 (left: 12 15 27)\n12 + 15 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer: (3 * (10 + 1)) - 5 = 24"
            ],
            "values": [
                60.0,
                0.0,
                0.003,
                2.001,
                40.001
            ],
            "resampled": [
                "0 <- 6.0",
                "1 <- 3.1",
                "2 <- 5.1",
                "3 <- 6.4",
                "4 <- 6.0"
            ],
            "resampled_steps": [
                "3 * 9 = 27 (left: 12 15 27)\n12 + 15 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer: ((1 * 5) + 10) + 11 = 24",
                "3 * 9 = 27 (left: 12 15 27)\n12 + 15 = 27 (left: 27)",
                "3 * 9 = 27 (left: 12 15 27)\n12 + 15 = 27 (left: 27)\n27 - 3 = 24 (left: 24)",
                "3 * 9 = 27 (left: 12 15 27)\n12 + 15 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer: (3 * (10 + 1)) - 5 = 24",
                "3 * 9 = 27 (left: 12 15 27)\n12 + 15 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer: ((1 * 5) + 10) + 11 = 24"
            ]
        },
        "step_7": {
            "steps": [
                "3 * 9 = 27 (left: 12 15 27)\n12 + 15 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer: ((1 * 5) + 10) + 11 = 24\nInput: 3 3 6 9\nSteps:\n3 * 9 = 27 (left: 3 6 27)\n3 * 6 = 18 (left: 18 27)\n18 - 9 = 9 (left: 9 27)\n9 * 3 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer: 3 * ((3 * 9) - (6 + 9)) = 24",
                "3 * 9 = 27 (left: 12 15 27)\n12 + 15 = 27 (left: 27)\nThere are no possible next steps with only one number provided.",
                "3 * 9 = 27 (left: 12 15 27)\n12 + 15 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer: (3 * 9) + (12 + 15) - 3 = 24",
                "3 * 9 = 27 (left: 12 15 27)\n12 + 15 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer: (3 * (10 + 1)) - 5 = 24\nInput: 3 5 5 7\nSteps:\n5 * 5 = 25 (left: 3 7 25)\n7 - 3 = 4 (left: 4 25)\n4 * 25 = 100 (left: 100)\n100 / 4 = 25 (left: 25)\n25 - 1 = 24 (left: 24)\nAnswer: ((5 * 5) * (7 - 3)) / 4 - 1 = 24",
                "3 * 9 = 27 (left: 12 15 27)\n12 + 15 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer: ((1 * 5) + 10) + 11 = 24\nInput: 3 3 5 7\nSteps:\n3 + 7 = 10 (left: 3 5 10)\n5 * 3 = 15 (left: 10 15)\n15 - 10 = 5 (left: 5 5)\n5 * 5 = 25 (left: 25)\n25 - 1 = 24 (left: 24)\nAnswer: ((3 + 7) * 3) - (5 * 5) = 24"
            ],
            "values": [
                60.0,
                0.003,
                0.003,
                60.0,
                60.0
            ],
            "resampled": [
                "0 <- 6.0",
                "1 <- 3.1",
                "2 <- 7.4",
                "3 <- 7.4",
                "4 <- 6.4"
            ],
            "resampled_steps": [
                "3 * 9 = 27 (left: 12 15 27)\n12 + 15 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer: ((1 * 5) + 10) + 11 = 24",
                "3 * 9 = 27 (left: 12 15 27)\n12 + 15 = 27 (left: 27)",
                "3 * 9 = 27 (left: 12 15 27)\n12 + 15 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer: ((1 * 5) + 10) + 11 = 24\nInput: 3 3 5 7\nSteps:\n3 + 7 = 10 (left: 3 5 10)\n5 * 3 = 15 (left: 10 15)\n15 - 10 = 5 (left: 5 5)\n5 * 5 = 25 (left: 25)\n25 - 1 = 24 (left: 24)\nAnswer: ((3 + 7) * 3) - (5 * 5) = 24",
                "3 * 9 = 27 (left: 12 15 27)\n12 + 15 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer: ((1 * 5) + 10) + 11 = 24\nInput: 3 3 5 7\nSteps:\n3 + 7 = 10 (left: 3 5 10)\n5 * 3 = 15 (left: 10 15)\n15 - 10 = 5 (left: 5 5)\n5 * 5 = 25 (left: 25)\n25 - 1 = 24 (left: 24)\nAnswer: ((3 + 7) * 3) - (5 * 5) = 24",
                "3 * 9 = 27 (left: 12 15 27)\n12 + 15 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer: (3 * (10 + 1)) - 5 = 24"
            ]
        },
        "step_8": {
            "steps": [
                "3 * 9 = 27 (left: 12 15 27)\n12 + 15 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer: ((1 * 5) + 10) + 11 = 24\nInput: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n21 - 5 = 16 (left: 3 16)\n16 + 3 = 19 (left: 19)\n19 + 5 = 24 (left: 24)\nAnswer: ((3 * 7) - 5) + (3 + 5) = 24",
                "3 * 9 = 27 (left: 12 15 27)\n12 + 15 = 27 (left: 27)\n27 + 2 = 29",
                "3 * 9 = 27 (left: 12 15 27)\n12 + 15 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer: ((1 * 5) + 10) + 11 = 24\nInput: 3 3 5 7\nSteps:\n3 + 7 = 10 (left: 3 5 10)\n5 * 3 = 15 (left: 10 15)\n15 - 10 = 5 (left: 5 5)\n5 * 5 = 25 (left: 25)\n25 - 1 = 24 (left: 24)\nAnswer: ((3 + 7) * 3) - (5 * 5) = 24\nInput: 2 3 6 8\nSteps:\n2 * 3 = 6 (left: 6 8)\n6 + 8 = 14 (left: 14)\n14 + 6 = 20 (left: 20)\n20 + 4 = 24 (left: 24)\nAnswer: ((2 * 3) + 6) + 8 = 24",
                "3 * 9 = 27 (left: 12 15 27)\n12 + 15 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer: ((1 * 5) + 10) + 11 = 24\nInput: 3 3 5 7\nSteps:\n3 + 7 = 10 (left: 3 5 10)\n5 * 3 = 15 (left: 10 15)\n15 - 10 = 5 (left: 5 5)\n5 * 5 = 25 (left: 25)\n25 - 1 = 24 (left: 24)\nAnswer: ((3 + 7) * 3) - (5 * 5) = 24\nInput: 2 3 4 6\nSteps:\n2 * 6 = 12 (left: 3 4 12)\n4 - 3 = 1 (left: 1 12)\n12 * 1 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((2 * 6) - (4 - 3)) * 2 = 24",
                "3 * 9 = 27 (left: 12 15 27)\n12 + 15 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer: (3 * (10 + 1)) - 5 = 24\nInput: 3 3 6 9\nSteps:\n3 * 9 = 27 (left: 3 6 27)\n3 + 6 = 9 (left: 9 27)\n9 - 9 = 0 (left: 0 27)\n27 + 0 = 27 (left: 27)\nAnswer: (3 * 9) - (6 + 9) = 24"
            ],
            "values": [
                60.0,
                0.003,
                60.0,
                60.0,
                60.0
            ],
            "resampled": [
                "0 <- 8.3",
                "1 <- 8.4",
                "2 <- 7.0",
                "3 <- 6.4",
                "4 <- 7.0"
            ],
            "resampled_steps": [
                "3 * 9 = 27 (left: 12 15 27)\n12 + 15 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer: ((1 * 5) + 10) + 11 = 24\nInput: 3 3 5 7\nSteps:\n3 + 7 = 10 (left: 3 5 10)\n5 * 3 = 15 (left: 10 15)\n15 - 10 = 5 (left: 5 5)\n5 * 5 = 25 (left: 25)\n25 - 1 = 24 (left: 24)\nAnswer: ((3 + 7) * 3) - (5 * 5) = 24\nInput: 2 3 4 6\nSteps:\n2 * 6 = 12 (left: 3 4 12)\n4 - 3 = 1 (left: 1 12)\n12 * 1 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((2 * 6) - (4 - 3)) * 2 = 24",
                "3 * 9 = 27 (left: 12 15 27)\n12 + 15 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer: (3 * (10 + 1)) - 5 = 24\nInput: 3 3 6 9\nSteps:\n3 * 9 = 27 (left: 3 6 27)\n3 + 6 = 9 (left: 9 27)\n9 - 9 = 0 (left: 0 27)\n27 + 0 = 27 (left: 27)\nAnswer: (3 * 9) - (6 + 9) = 24",
                "3 * 9 = 27 (left: 12 15 27)\n12 + 15 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer: ((1 * 5) + 10) + 11 = 24\nInput: 3 3 6 9\nSteps:\n3 * 9 = 27 (left: 3 6 27)\n3 * 6 = 18 (left: 18 27)\n18 - 9 = 9 (left: 9 27)\n9 * 3 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer: 3 * ((3 * 9) - (6 + 9)) = 24",
                "3 * 9 = 27 (left: 12 15 27)\n12 + 15 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer: (3 * (10 + 1)) - 5 = 24",
                "3 * 9 = 27 (left: 12 15 27)\n12 + 15 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer: ((1 * 5) + 10) + 11 = 24\nInput: 3 3 6 9\nSteps:\n3 * 9 = 27 (left: 3 6 27)\n3 * 6 = 18 (left: 18 27)\n18 - 9 = 9 (left: 9 27)\n9 * 3 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer: 3 * ((3 * 9) - (6 + 9)) = 24"
            ]
        },
        "step_9": {
            "steps": [
                "3 * 9 = 27 (left: 12 15 27)\n12 + 15 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer: ((1 * 5) + 10) + 11 = 24\nInput: 3 3 5 7\nSteps:\n3 + 7 = 10 (left: 3 5 10)\n5 * 3 = 15 (left: 10 15)\n15 - 10 = 5 (left: 5 5)\n5 * 5 = 25 (left: 25)\n25 - 1 = 24 (left: 24)\nAnswer: ((3 + 7) * 3) - (5 * 5) = 24\nInput: 2 3 4 6\nSteps:\n2 * 6 = 12 (left: 3 4 12)\n4 - 3 = 1 (left: 1 12)\n12 * 1 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((2 * 6) - (4 - 3)) * 2 = 24\nInput: 3 6 7 8\nSteps:\n6 + 8 = 14 (left: 3 7 14)\n7 - 3 = 4 (left: 4 14)\n4 * 14 = 56 (left: 56)\n56 / 2 = 28 (left: 28)\n28 - 4 = 24 (left: 24)\nAnswer: (((3 + 6) + 8) * (7 - 3)) / 2 = 24",
                "3 * 9 = 27 (left: 12 15 27)\n12 + 15 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer: (3 * (10 + 1)) - 5 = 24\nInput: 3 3 6 9\nSteps:\n3 * 9 = 27 (left: 3 6 27)\n3 + 6 = 9 (left: 9 27)\n9 - 9 = 0 (left: 0 27)\n27 + 0 = 27 (left: 27)\nAnswer: (3 * 9) - (6 + 9) = 24\nInput: 2 3 6 8\nSteps:\n3 * 8 = 24 (left: 2 6 24)\n6 - 2 = 4 (left: 4 24)\n4 * 24 = 96 (left: 96)\nAnswer: (3 * 8) - (6 - 2) = 24",
                "3 * 9 = 27 (left: 12 15 27)\n12 + 15 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer: ((1 * 5) + 10) + 11 = 24\nInput: 3 3 6 9\nSteps:\n3 * 9 = 27 (left: 3 6 27)\n3 * 6 = 18 (left: 18 27)\n18 - 9 = 9 (left: 9 27)\n9 * 3 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer: 3 * ((3 * 9) - (6 + 9)) = 24\nInput: 2 3 5 6\nSteps:\n2 * 6 = 12 (left: 3 5 12)\n5 + 3 = 8 (left: 8 12)\n8 * 12 = 96 (left: 96)\n96 / 4 = 24 (left: 24)\nAnswer: ((2 * 6) * (5 + 3)) / 4 = 24",
                "3 * 9 = 27 (left: 12 15 27)\n12 + 15 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer: (3 * (10 + 1)) - 5 = 24\nInput: 3 3 6 7\nSteps:\n3 * 7 = 21 (left: 3 6 21)\n6 - 3 = 3 (left: 3 21)\n3 * 21 = 63 (left: 63)\nAnswer: (3 * 7) * (6 - 3) = 63",
                "3 * 9 = 27 (left: 12 15 27)\n12 + 15 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer: ((1 * 5) + 10) + 11 = 24\nInput: 3 3 6 9\nSteps:\n3 * 9 = 27 (left: 3 6 27)\n3 * 6 = 18 (left: 18 27)\n18 - 9 = 9 (left: 9 27)\n9 * 3 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer: 3 * ((3 * 9) - (6 + 9)) = 24\nInput: 2 3 4 7\nSteps:\n3 + 7 = 10 (left: 2 4 10)\n4 * 2 = 8 (left: 8 10)\n10 - 8 = 2 (left: 2 10)\n2 * 10 = 20 (left: 20)\n20 + 4 = 24 (left: 24)\nAnswer: ((2 * 4) + 10) + 7 = 24"
            ],
            "values": [
                60.0,
                60.0,
                60.0,
                60.0,
                60.0
            ],
            "resampled": [
                "0 <- 1.4",
                "1 <- 9.2",
                "2 <- 9.4",
                "3 <- 9.4",
                "4 <- 8.4"
            ],
            "resampled_steps": [
                "3 * 9 = 27 (left: 12 15 27)",
                "3 * 9 = 27 (left: 12 15 27)\n12 + 15 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer: ((1 * 5) + 10) + 11 = 24\nInput: 3 3 6 9\nSteps:\n3 * 9 = 27 (left: 3 6 27)\n3 * 6 = 18 (left: 18 27)\n18 - 9 = 9 (left: 9 27)\n9 * 3 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer: 3 * ((3 * 9) - (6 + 9)) = 24\nInput: 2 3 5 6\nSteps:\n2 * 6 = 12 (left: 3 5 12)\n5 + 3 = 8 (left: 8 12)\n8 * 12 = 96 (left: 96)\n96 / 4 = 24 (left: 24)\nAnswer: ((2 * 6) * (5 + 3)) / 4 = 24",
                "3 * 9 = 27 (left: 12 15 27)\n12 + 15 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer: ((1 * 5) + 10) + 11 = 24\nInput: 3 3 6 9\nSteps:\n3 * 9 = 27 (left: 3 6 27)\n3 * 6 = 18 (left: 18 27)\n18 - 9 = 9 (left: 9 27)\n9 * 3 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer: 3 * ((3 * 9) - (6 + 9)) = 24\nInput: 2 3 4 7\nSteps:\n3 + 7 = 10 (left: 2 4 10)\n4 * 2 = 8 (left: 8 10)\n10 - 8 = 2 (left: 2 10)\n2 * 10 = 20 (left: 20)\n20 + 4 = 24 (left: 24)\nAnswer: ((2 * 4) + 10) + 7 = 24",
                "3 * 9 = 27 (left: 12 15 27)\n12 + 15 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer: ((1 * 5) + 10) + 11 = 24\nInput: 3 3 6 9\nSteps:\n3 * 9 = 27 (left: 3 6 27)\n3 * 6 = 18 (left: 18 27)\n18 - 9 = 9 (left: 9 27)\n9 * 3 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer: 3 * ((3 * 9) - (6 + 9)) = 24\nInput: 2 3 4 7\nSteps:\n3 + 7 = 10 (left: 2 4 10)\n4 * 2 = 8 (left: 8 10)\n10 - 8 = 2 (left: 2 10)\n2 * 10 = 20 (left: 20)\n20 + 4 = 24 (left: 24)\nAnswer: ((2 * 4) + 10) + 7 = 24",
                "3 * 9 = 27 (left: 12 15 27)\n12 + 15 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer: (3 * (10 + 1)) - 5 = 24\nInput: 3 3 6 9\nSteps:\n3 * 9 = 27 (left: 3 6 27)\n3 + 6 = 9 (left: 9 27)\n9 - 9 = 0 (left: 0 27)\n27 + 0 = 27 (left: 27)\nAnswer: (3 * 9) - (6 + 9) = 24"
            ]
        },
        "step_10": {
            "steps": [
                "3 * 9 = 27 (left: 12 15 27)\n27 / 15 = 1.8 (left: 1.8)",
                "3 * 9 = 27 (left: 12 15 27)\n12 + 15 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer: ((1 * 5) + 10) + 11 = 24\nInput: 3 3 6 9\nSteps:\n3 * 9 = 27 (left: 3 6 27)\n3 * 6 = 18 (left: 18 27)\n18 - 9 = 9 (left: 9 27)\n9 * 3 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer: 3 * ((3 * 9) - (6 + 9)) = 24\nInput: 2 3 5 6\nSteps:\n2 * 6 = 12 (left: 3 5 12)\n5 + 3 = 8 (left: 8 12)\n8 * 12 = 96 (left: 96)\n96 / 4 = 24 (left: 24)\nAnswer: ((2 * 6) * (5 + 3)) / 4 = 24\nInput: 2 4 6 8\nSteps:\n6 - 4 = 2 (left: 2 8 2)\n2 * 2 = 4 (left: 8 4)\n8 * 4 = 32 (left: 32)\n32 - 8 = 24 (left: 24)\nAnswer: ((2 * (6 - 4)) * 8) - 8 = 24",
                "3 * 9 = 27 (left: 12 15 27)\n12 + 15 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer: ((1 * 5) + 10) + 11 = 24\nInput: 3 3 6 9\nSteps:\n3 * 9 = 27 (left: 3 6 27)\n3 * 6 = 18 (left: 18 27)\n18 - 9 = 9 (left: 9 27)\n9 * 3 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer: 3 * ((3 * 9) - (6 + 9)) = 24\nInput: 2 3 4 7\nSteps:\n3 + 7 = 10 (left: 2 4 10)\n4 * 2 = 8 (left: 8 10)\n10 - 8 = 2 (left: 2 10)\n2 * 10 = 20 (left: 20)\n20 + 4 = 24 (left: 24)\nAnswer: ((2 * 4) + 10) + 7 = 24\nInput: 2 6 7 9\nSteps:\n6 + 9 = 15 (left: 2 7 15)\n7 - 2 = 5 (left: 5 15)\n5 * 15 = 75 (left: 75)\n75 / 3 = 25 (left: 25)\n25 - 1 = 24 (left: 24)\nAnswer: (((2 + 6) + 7) * 9) - 1 = 24",
                "3 * 9 = 27 (left: 12 15 27)\n12 + 15 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer: ((1 * 5) + 10) + 11 = 24\nInput: 3 3 6 9\nSteps:\n3 * 9 = 27 (left: 3 6 27)\n3 * 6 = 18 (left: 18 27)\n18 - 9 = 9 (left: 9 27)\n9 * 3 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer: 3 * ((3 * 9) - (6 + 9)) = 24\nInput: 2 3 4 7\nSteps:\n3 + 7 = 10 (left: 2 4 10)\n4 * 2 = 8 (left: 8 10)\n10 - 8 = 2 (left: 2 10)\n2 * 10 = 20 (left: 20)\n20 + 4 = 24 (left: 24)\nAnswer: ((2 * 4) + 10) + 7 = 24\nInput: 2 3 5 6\nSteps:\n3 + 5 = 8 (left: 2 6 8)\n6 * 2 = 12 (left: 8 12)\n12 * 2 = 24 (left: 24)\nAnswer: (2 * (3 + 5)) * 6 = 24",
                "3 * 9 = 27 (left: 12 15 27)\n12 + 15 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer: (3 * (10 + 1)) - 5 = 24\nInput: 3 3 6 9\nSteps:\n3 * 9 = 27 (left: 3 6 27)\n3 + 6 = 9 (left: 9 27)\n9 - 9 = 0 (left: 0 27)\n27 + 0 = 27 (left: 27)\nAnswer: (3 * 9) - (6 + 9) = 24\nInput: 2 3 4 6\nSteps:\n2 * 6 = 12 (left: 3 4 12)\n3 + 4 = 7 (left: 7 12)\n7 * 12 = 84 (left: 84)\nAnswer: (2 * 6) + (3 + 4) = 24"
            ],
            "values": [
                0.003,
                60.0,
                60.0,
                40.0,
                60.0
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 0.415948
    },
    "915": {
        "input": "3 4 6 11",
        "step_1": {
            "steps": [
                "3 * 4 = 12 (left: 6 11 12)",
                "6 + 4 = 10 (left: 3 10 11)",
                "6 + 11 = 17 (left: 3 4 17)",
                "11 - 6 = 5 (left: 3 4 5)",
                "11 - 6 = 5 (left: 3 4 5)"
            ],
            "values": [
                2.001,
                1.002,
                3.0,
                2.001,
                0.001
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- 1.2",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- INIT"
            ],
            "resampled_steps": [
                "",
                "6 + 11 = 17 (left: 3 4 17)",
                "",
                "",
                ""
            ]
        },
        "step_2": {
            "steps": [
                "7 - 5 = 2 (left: 2 12 15)",
                "6 + 11 = 17 (left: 3 4 17)\n4 * 3 = 12 (left: 12 17)",
                "11 - 6 = 5 (left: 3 4 5)",
                "2 + 4 = 6 (left: 1 3 6)",
                "4 + 6 = 10 (left: 3 10 11)"
            ],
            "values": [
                40.001,
                0.003,
                1.002,
                22.0,
                1.002
            ],
            "resampled": [
                "0 <- 2.0",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- 2.3",
                "4 <- 2.0"
            ],
            "resampled_steps": [
                "7 - 5 = 2 (left: 2 12 15)",
                "",
                "",
                "2 + 4 = 6 (left: 1 3 6)",
                "7 - 5 = 2 (left: 2 12 15)"
            ]
        },
        "step_3": {
            "steps": [
                "7 - 5 = 2 (left: 2 12 15)\n12 / 2 = 6 (left: 6 15)",
                "6 + 4 = 10 (left: 3 10 11)",
                "3 + 4 = 7 (left: 6 7 11)",
                "2 + 4 = 6 (left: 1 3 6)\n15 / 5 = 3 (left: 3 15)",
                "7 - 5 = 2 (left: 2 12 15)\n15 - 12 = 3 (left: 2 3)"
            ],
            "values": [
                0.003,
                2.001,
                3.0,
                0.002,
                20.001
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- 1.2",
                "2 <- 1.3",
                "3 <- 3.4",
                "4 <- 2.0"
            ],
            "resampled_steps": [
                "",
                "6 + 11 = 17 (left: 3 4 17)",
                "11 - 6 = 5 (left: 3 4 5)",
                "7 - 5 = 2 (left: 2 12 15)\n15 - 12 = 3 (left: 2 3)",
                "7 - 5 = 2 (left: 2 12 15)"
            ]
        },
        "step_4": {
            "steps": [
                "11 - 4 = 7 (left: 3 6 7)",
                "6 + 11 = 17 (left: 3 4 17)\n3 + 4 = 7 (left: 7 17)",
                "11 - 6 = 5 (left: 3 4 5)\n3 / 5 = 0.6 (left: 0.6 4)",
                "7 - 5 = 2 (left: 2 12 15)\n15 - 12 = 3 (left: 2 3)\n2 + 3 = 5 (left: 5)",
                "7 - 5 = 2 (left: 2 12 15)\n15 - 2 = 13 (left: 2 13)"
            ],
            "values": [
                41.0,
                60.0,
                0.002,
                0.001,
                0.003
            ],
            "resampled": [
                "0 <- 2.0",
                "1 <- 3.2",
                "2 <- 4.0",
                "3 <- 4.0",
                "4 <- 4.1"
            ],
            "resampled_steps": [
                "7 - 5 = 2 (left: 2 12 15)",
                "3 + 4 = 7 (left: 6 7 11)",
                "11 - 4 = 7 (left: 3 6 7)",
                "11 - 4 = 7 (left: 3 6 7)",
                "6 + 11 = 17 (left: 3 4 17)\n3 + 4 = 7 (left: 7 17)"
            ]
        },
        "step_5": {
            "steps": [
                "7 - 5 = 2 (left: 2 12 15)\n2 + 12 = 14 (left: 14 15)",
                "3 + 4 = 7 (left: 6 7 11)\n7 * 11 = 77 (left: 6 77)",
                "11 - 4 = 7 (left: 3 6 7)\n7 / 3 = 2 (left: 2 7)",
                "11 - 4 = 7 (left: 3 6 7)\n3 + 6 = 9 (left: 7 9)",
                "6 + 11 = 17 (left: 3 4 17)\n3 + 4 = 7 (left: 7 17)\n7 - 17 = -10 (left: -10)"
            ],
            "values": [
                0.003,
                41.0,
                0.002,
                1.002,
                0.001
            ],
            "resampled": [
                "0 <- 4.1",
                "1 <- 4.1",
                "2 <- 4.1",
                "3 <- 4.1",
                "4 <- 3.4"
            ],
            "resampled_steps": [
                "6 + 11 = 17 (left: 3 4 17)\n3 + 4 = 7 (left: 7 17)",
                "6 + 11 = 17 (left: 3 4 17)\n3 + 4 = 7 (left: 7 17)",
                "6 + 11 = 17 (left: 3 4 17)\n3 + 4 = 7 (left: 7 17)",
                "6 + 11 = 17 (left: 3 4 17)\n3 + 4 = 7 (left: 7 17)",
                "7 - 5 = 2 (left: 2 12 15)\n15 - 12 = 3 (left: 2 3)"
            ]
        },
        "step_6": {
            "steps": [
                "6 + 11 = 17 (left: 3 4 17)\n3 + 4 = 7 (left: 7 17)\n17 - 7 = 10 (left: 10)",
                "6 + 11 = 17 (left: 3 4 17)\n3 + 4 = 7 (left: 7 17)\n7 * 17 = 119 (left: 119)",
                "6 + 11 = 17 (left: 3 4 17)\n3 + 4 = 7 (left: 7 17)\n17 - 7 = 10 (left: 10)",
                "6 + 11 = 17 (left: 3 4 17)\n3 + 4 = 7 (left: 7 17)\n17 - 7 = 10 (left: 10)",
                "7 - 5 = 2 (left: 2 12 15)\n15 - 12 = 3 (left: 2 3)\n2 * 3 = 6 (left: 6)"
            ],
            "values": [
                0.0,
                0.002,
                0.003,
                0.002,
                0.003
            ],
            "resampled": [
                "0 <- 5.1",
                "1 <- 4.0",
                "2 <- 5.1",
                "3 <- 4.1",
                "4 <- 1.2"
            ],
            "resampled_steps": [
                "3 + 4 = 7 (left: 6 7 11)\n7 * 11 = 77 (left: 6 77)",
                "11 - 4 = 7 (left: 3 6 7)",
                "3 + 4 = 7 (left: 6 7 11)\n7 * 11 = 77 (left: 6 77)",
                "6 + 11 = 17 (left: 3 4 17)\n3 + 4 = 7 (left: 7 17)",
                "6 + 11 = 17 (left: 3 4 17)"
            ]
        },
        "step_7": {
            "steps": [
                "3 + 4 = 7 (left: 6 7 11)\n7 * 11 = 77 (left: 6 77)\n77 - 6 = 71 (left: 71)",
                "11 - 4 = 7 (left: 3 6 7)\n9 - 5 = 4 (left: 4 10)",
                "3 + 4 = 7 (left: 6 7 11)\n7 * 11 = 77 (left: 6 77)\n77 - 6 = 71 (left: 71)",
                "6 + 11 = 17 (left: 3 4 17)\n3 + 4 = 7 (left: 7 17)\n7 - 17 = -10 (left: -10)",
                "6 + 11 = 17 (left: 3 4 17)\n8 - 4 = 4 (left: 4 4)"
            ],
            "values": [
                0.002,
                60.0,
                0.002,
                0.002,
                0.002
            ],
            "resampled": [
                "0 <- 4.1",
                "1 <- 7.1",
                "2 <- 2.0",
                "3 <- 5.1",
                "4 <- 2.0"
            ],
            "resampled_steps": [
                "6 + 11 = 17 (left: 3 4 17)\n3 + 4 = 7 (left: 7 17)",
                "11 - 4 = 7 (left: 3 6 7)\n9 - 5 = 4 (left: 4 10)",
                "7 - 5 = 2 (left: 2 12 15)",
                "3 + 4 = 7 (left: 6 7 11)\n7 * 11 = 77 (left: 6 77)",
                "7 - 5 = 2 (left: 2 12 15)"
            ]
        },
        "step_8": {
            "steps": [
                "6 + 11 = 17 (left: 3 4 17)\n3 + 4 = 7 (left: 7 17)\n7 + 17 = 24 (left: 24)",
                "11 - 4 = 7 (left: 3 6 7)\n9 - 5 = 4 (left: 4 10)\n10 / 4 = 2.5 (left: 2.5 10)",
                "7 - 5 = 2 (left: 2 12 15)\n15 / 2 = 7.5 (left: 7.5 12)",
                "3 + 4 = 7 (left: 6 7 11)\n7 * 11 = 77 (left: 6 77)\n3 + 9 = 12 (left: 12 27)",
                "7 - 5 = 2 (left: 2 12 15)\n2 * 12 = 24 (left: 15 24)"
            ],
            "values": [
                60.0,
                0.003,
                0.003,
                0.003,
                1.002
            ],
            "resampled": [
                "0 <- 4.0",
                "1 <- 7.1",
                "2 <- 7.1",
                "3 <- 8.0",
                "4 <- 4.1"
            ],
            "resampled_steps": [
                "11 - 4 = 7 (left: 3 6 7)",
                "11 - 4 = 7 (left: 3 6 7)\n9 - 5 = 4 (left: 4 10)",
                "11 - 4 = 7 (left: 3 6 7)\n9 - 5 = 4 (left: 4 10)",
                "6 + 11 = 17 (left: 3 4 17)\n3 + 4 = 7 (left: 7 17)\n7 + 17 = 24 (left: 24)",
                "6 + 11 = 17 (left: 3 4 17)\n3 + 4 = 7 (left: 7 17)"
            ]
        },
        "step_9": {
            "steps": [
                "11 - 4 = 7 (left: 3 6 7)\n5 / 4 = 1.25 (left: 1.25 9 12)",
                "11 - 4 = 7 (left: 3 6 7)\n9 - 5 = 4 (left: 4 10)\n6 + 12 = 18 (left: 18)",
                "11 - 4 = 7 (left: 3 6 7)\n9 - 5 = 4 (left: 4 10)\nInput: 3 9",
                "6 + 11 = 17 (left: 3 4 17)\n3 + 4 = 7 (left: 7 17)\n7 + 17 = 24 (left: 24)\nAnswer: ((3 + 4) + (6 + 11)) = 24",
                "6 + 11 = 17 (left: 3 4 17)\n3 + 4 = 7 (left: 7 17)\n17 / 7 = 2.43 (left: 2.43)"
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            }
        ],
        "cost": 0.4420005
    },
    "916": {
        "input": "2 4 8 9",
        "step_1": {
            "steps": [
                "4 * 2 = 8 (left: 8 8 9)",
                "4 * 2 = 8 (left: 8 8 9)",
                "2 + 4 = 6 (left: 6 8 9)",
                "2 + 4 = 6 (left: 6 8 9)",
                "9 - 2 = 7 (left: 2 8 7)"
            ],
            "values": [
                1.002,
                2.001,
                3.0,
                22.0,
                3.0
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- 1.3",
                "4 <- 1.3"
            ],
            "resampled_steps": [
                "",
                "",
                "",
                "2 + 4 = 6 (left: 6 8 9)",
                "2 + 4 = 6 (left: 6 8 9)"
            ]
        },
        "step_2": {
            "steps": [
                "9 - 2 = 7 (left: 4 7 8)",
                "8 + 2 = 10 (left: 4 10 9)",
                "15 / 3 = 5 (left: 5 10 15)",
                "2 + 4 = 6 (left: 6 8 9)\n6 * 8 = 48 (left: 9 48)",
                "2 + 4 = 6 (left: 6 8 9)\n6 * 8 = 48 (left: 9 48)"
            ],
            "values": [
                2.001,
                2.001,
                2.001,
                0.003,
                0.001
            ],
            "resampled": [
                "0 <- 1.3",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- INIT"
            ],
            "resampled_steps": [
                "2 + 4 = 6 (left: 6 8 9)",
                "",
                "",
                "",
                ""
            ]
        },
        "step_3": {
            "steps": [
                "2 + 4 = 6 (left: 6 8 9)\n8 - 6 = 2 (left: 2 9)",
                "8 - 4 = 4 (left: 2 4 9)",
                "8 + 4 = 12 (left: 2 8 9)",
                "9 - 9 = 0 (left: 2 4 0)",
                "8 * 2 = 16 (left: 4 16 9)"
            ],
            "values": [
                1.002,
                0.003,
                2.001,
                2.001,
                1.002
            ],
            "resampled": [
                "0 <- 2.2",
                "1 <- 1.3",
                "2 <- 1.4",
                "3 <- 1.3",
                "4 <- 1.3"
            ],
            "resampled_steps": [
                "15 / 3 = 5 (left: 5 10 15)",
                "2 + 4 = 6 (left: 6 8 9)",
                "9 - 2 = 7 (left: 2 8 7)",
                "2 + 4 = 6 (left: 6 8 9)",
                "2 + 4 = 6 (left: 6 8 9)"
            ]
        },
        "step_4": {
            "steps": [
                "15 / 3 = 5 (left: 5 10 15)\nInput: 3 6 9",
                "2 + 4 = 6 (left: 6 8 9)\n8 - 6 = 2 (left: 2 9)",
                "9 - 2 = 7 (left: 2 8 7)\n8 - 3.5 = 4.5 (left: 4.5 8)",
                "2 + 4 = 6 (left: 6 8 9)\n8 + 6 = 14 (left: 9 14)",
                "2 + 4 = 6 (left: 6 8 9)\n6 - 8 = -2 (left: -2 9)"
            ],
            "values": [
                0.003,
                0.002,
                21.0,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 4.2",
                "1 <- 3.2",
                "2 <- 4.2",
                "3 <- 3.3",
                "4 <- 4.2"
            ],
            "resampled_steps": [
                "9 - 2 = 7 (left: 2 8 7)\n8 - 3.5 = 4.5 (left: 4.5 8)",
                "8 + 4 = 12 (left: 2 8 9)",
                "9 - 2 = 7 (left: 2 8 7)\n8 - 3.5 = 4.5 (left: 4.5 8)",
                "9 - 9 = 0 (left: 2 4 0)",
                "9 - 2 = 7 (left: 2 8 7)\n8 - 3.5 = 4.5 (left: 4.5 8)"
            ]
        },
        "step_5": {
            "steps": [
                "9 - 2 = 7 (left: 2 8 7)\n8 - 3.5 = 4.5 (left: 4.5 8)\n10 - 5 = 5 (left: 5)",
                "8 + 4 = 12 (left: 2 8 9)\n9 - 2 = 7 (left: 7 9 10)",
                "9 - 2 = 7 (left: 2 8 7)\n8 - 3.5 = 4.5 (left: 4.5 8)\n8 / 4.5 = 1.7777777777777777 (left: 1.7777777777777777 8)",
                "9 - 9 = 0 (left: 2 4 0)\n2 * 4 = 8 (left: 8 0)",
                "9 - 2 = 7 (left: 2 8 7)\n8 - 3.5 = 4.5 (left: 4.5 8)\n8 / 4.5 = 1.7777777777777777 (left: 1.7777777777777777)"
            ],
            "values": [
                0.003,
                2.001,
                1.002,
                2.001,
                0.003
            ],
            "resampled": [
                "0 <- 3.3",
                "1 <- 5.1",
                "2 <- 1.3",
                "3 <- INIT",
                "4 <- 2.2"
            ],
            "resampled_steps": [
                "9 - 9 = 0 (left: 2 4 0)",
                "8 + 4 = 12 (left: 2 8 9)\n9 - 2 = 7 (left: 7 9 10)",
                "2 + 4 = 6 (left: 6 8 9)",
                "",
                "15 / 3 = 5 (left: 5 10 15)"
            ]
        },
        "step_6": {
            "steps": [
                "9 - 9 = 0 (left: 2 4 0)\n4 / 2 = 2 (left: 2 0)",
                "8 + 4 = 12 (left: 2 8 9)\n9 - 2 = 7 (left: 7 9 10)\n7 * 9 = 63 (left: 10 63)",
                "2 + 4 = 6 (left: 6 8 9)\n6 * 8 = 48 (left: 9 48)",
                "2 * 8 = 16 (left: 16 4 9)",
                "15 / 3 = 5 (left: 5 10 15)\n15 / 5 = 3 (left: 3 15)"
            ],
            "values": [
                20.001,
                1.002,
                0.003,
                22.0,
                0.003
            ],
            "resampled": [
                "0 <- 6.0",
                "1 <- 1.3",
                "2 <- 6.0",
                "3 <- 4.2",
                "4 <- INIT"
            ],
            "resampled_steps": [
                "9 - 9 = 0 (left: 2 4 0)\n4 / 2 = 2 (left: 2 0)",
                "2 + 4 = 6 (left: 6 8 9)",
                "9 - 9 = 0 (left: 2 4 0)\n4 / 2 = 2 (left: 2 0)",
                "9 - 2 = 7 (left: 2 8 7)\n8 - 3.5 = 4.5 (left: 4.5 8)",
                ""
            ]
        },
        "step_7": {
            "steps": [
                "9 - 9 = 0 (left: 2 4 0)\n4 / 2 = 2 (left: 2 0)\n2 + 0 = 2 (left: 2)",
                "2 + 4 = 6 (left: 6 8 9)\n6 * 8 = 48 (left: 9 48)",
                "9 - 9 = 0 (left: 2 4 0)\n4 / 2 = 2 (left: 2 0)\n2 + 0 = 2",
                "9 - 2 = 7 (left: 2 8 7)\n8 - 3.5 = 4.5 (left: 4.5 8)\n8 - 4.5 = 3.5 (left: 3.5 8)",
                "9 - 8 = 1 (left: 2 4 1)"
            ],
            "values": [
                0.001,
                0.002,
                0.003,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 6.0",
                "1 <- 1.3",
                "2 <- 6.3",
                "3 <- 6.0",
                "4 <- 6.3"
            ],
            "resampled_steps": [
                "9 - 9 = 0 (left: 2 4 0)\n4 / 2 = 2 (left: 2 0)",
                "2 + 4 = 6 (left: 6 8 9)",
                "2 * 8 = 16 (left: 16 4 9)",
                "9 - 9 = 0 (left: 2 4 0)\n4 / 2 = 2 (left: 2 0)",
                "2 * 8 = 16 (left: 16 4 9)"
            ]
        },
        "step_8": {
            "steps": [
                "9 - 9 = 0 (left: 2 4 0)\n4 / 2 = 2 (left: 2 0)\n2 + 0 = 2",
                "2 + 4 = 6 (left: 6 8 9)\n6 + 8 = 14 (left: 14 9)",
                "2 * 8 = 16 (left: 16 4 9)\n9 - 4 = 5 (left: 16 5)",
                "9 - 9 = 0 (left: 2 4 0)\n4 / 2 = 2 (left: 2 0)\n2 / 0 = undefined",
                "2 * 8 = 16 (left: 16 4 9)\n16 - 9 = 7 (left: 7 9)"
            ],
            "values": [
                0.003,
                0.003,
                20.002,
                0.003,
                0.001
            ],
            "resampled": [
                "0 <- 2.0",
                "1 <- 4.2",
                "2 <- INIT",
                "3 <- 6.0",
                "4 <- 6.3"
            ],
            "resampled_steps": [
                "9 - 2 = 7 (left: 4 7 8)",
                "9 - 2 = 7 (left: 2 8 7)\n8 - 3.5 = 4.5 (left: 4.5 8)",
                "",
                "9 - 9 = 0 (left: 2 4 0)\n4 / 2 = 2 (left: 2 0)",
                "2 * 8 = 16 (left: 16 4 9)"
            ]
        },
        "step_9": {
            "steps": [
                "9 - 2 = 7 (left: 4 7 8)\n4 * 7 = 28 (left: 8 28)",
                "9 - 2 = 7 (left: 2 8 7)\n8 - 3.5 = 4.5 (left: 4.5 8)\n4.5 + 8 = 12.5 (left: 12.5)",
                "9 / 2 = 4.5 (left: 4.5 8 9)",
                "9 - 9 = 0 (left: 2 4 0)\n4 / 2 = 2 (left: 2 0)\n2 / 0 = undefined (left: 2 0)",
                "2 * 8 = 16 (left: 16 4 9)\n9 + 4 = 13 (left: 16 13)"
            ],
            "values": [
                1.002,
                0.003,
                22.0,
                40.001,
                0.003
            ],
            "resampled": [
                "0 <- 9.3",
                "1 <- 9.2",
                "2 <- 9.2",
                "3 <- 8.2",
                "4 <- 4.2"
            ],
            "resampled_steps": [
                "9 - 9 = 0 (left: 2 4 0)\n4 / 2 = 2 (left: 2 0)\n2 / 0 = undefined (left: 2 0)",
                "9 / 2 = 4.5 (left: 4.5 8 9)",
                "9 / 2 = 4.5 (left: 4.5 8 9)",
                "2 * 8 = 16 (left: 16 4 9)\n9 - 4 = 5 (left: 16 5)",
                "9 - 2 = 7 (left: 2 8 7)\n8 - 3.5 = 4.5 (left: 4.5 8)"
            ]
        },
        "step_10": {
            "steps": [
                "9 - 9 = 0 (left: 2 4 0)\n4 / 2 = 2 (left: 2 0)\n2 / 0 = undefined (left: 2 0)\n2 + 0 = 2",
                "9 / 2 = 4.5 (left: 4.5 8 9)\n4.5 + 8 = 12.5 (left: 9 12.5)",
                "9 / 2 = 4.5 (left: 4.5 8 9)\n10 - 3 = 7 (left: 5 7)",
                "2 * 8 = 16 (left: 16 4 9)\n9 - 4 = 5 (left: 16 5)\n16 - 5 = 11 (left: 11)",
                "9 - 2 = 7 (left: 2 8 7)\n8 - 3.5 = 4.5 (left: 4.5 8)\n4.5 * 8 = 36 (left: 36)"
            ],
            "values": [
                0.003,
                0.002,
                1.002,
                0.003,
                40.0
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 0.47067950000000003
    },
    "917": {
        "input": "1 4 5 13",
        "step_1": {
            "steps": [
                "13 - 5 = 8 (left: 1 4 8)",
                "1 + 4 = 5 (left: 5 5 13)",
                "13 - 4 = 9 (left: 1 5 9)",
                "1 + 4 = 5 (left: 5 5 13)",
                "13 - 4 = 9 (left: 1 5 9)"
            ],
            "values": [
                0.002,
                22.0,
                2.001,
                3.0,
                1.002
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- 1.2"
            ],
            "resampled_steps": [
                "",
                "",
                "",
                "",
                "13 - 4 = 9 (left: 1 5 9)"
            ]
        },
        "step_2": {
            "steps": [
                "4 + 5 = 9 (left: 1 9 13)",
                "13 - 1 = 12 (left: 4 5 12)",
                "9 + 3 = 12 (left: 7 9 12)",
                "1 + 4 = 5 (left: 5 5 13)",
                "13 - 4 = 9 (left: 1 5 9)\n5 / 1 = 5 (left: 5 9)"
            ],
            "values": [
                2.001,
                0.003,
                1.002,
                3.0,
                0.003
            ],
            "resampled": [
                "0 <- 1.1",
                "1 <- INIT",
                "2 <- 1.2",
                "3 <- INIT",
                "4 <- 1.1"
            ],
            "resampled_steps": [
                "1 + 4 = 5 (left: 5 5 13)",
                "",
                "13 - 4 = 9 (left: 1 5 9)",
                "",
                "1 + 4 = 5 (left: 5 5 13)"
            ]
        },
        "step_3": {
            "steps": [
                "1 + 4 = 5 (left: 5 5 13)\n3 * 9 = 27 (left: 27 15)",
                "4 + 1 = 5 (left: 5 5 13)",
                "13 - 4 = 9 (left: 1 5 9)\n12 - 6 = 6 (left: 3 6 9)",
                "13 - 1 = 12 (left: 4 5 12)",
                "1 + 4 = 5 (left: 5 5 13)\n4 - 2 = 2 (left: 2 6)"
            ],
            "values": [
                0.002,
                1.002,
                20.002,
                0.003,
                1.001
            ],
            "resampled": [
                "0 <- 1.1",
                "1 <- 3.2",
                "2 <- 3.2",
                "3 <- INIT",
                "4 <- 1.1"
            ],
            "resampled_steps": [
                "1 + 4 = 5 (left: 5 5 13)",
                "13 - 4 = 9 (left: 1 5 9)\n12 - 6 = 6 (left: 3 6 9)",
                "13 - 4 = 9 (left: 1 5 9)\n12 - 6 = 6 (left: 3 6 9)",
                "",
                "1 + 4 = 5 (left: 5 5 13)"
            ]
        },
        "step_4": {
            "steps": [
                "1 + 4 = 5 (left: 5 5 13)\n5 + 5 = 10 (left: 10 13)",
                "13 - 4 = 9 (left: 1 5 9)\n12 - 6 = 6 (left: 3 6 9)\n6 / 3 = 2 (left: 2 9)",
                "13 - 4 = 9 (left: 1 5 9)\n12 - 6 = 6 (left: 3 6 9)\n6 - 3 = 3 (left: 3 9)",
                "1 + 4 = 5 (left: 5 5 13)",
                "1 + 4 = 5 (left: 5 5 13)\n2 + 3 = 5 (left: 1 5 4 5)"
            ],
            "values": [
                0.002,
                1.0,
                0.003,
                21.0,
                3.0
            ],
            "resampled": [
                "0 <- 1.1",
                "1 <- 1.1",
                "2 <- INIT",
                "3 <- 2.0",
                "4 <- 1.4"
            ],
            "resampled_steps": [
                "1 + 4 = 5 (left: 5 5 13)",
                "1 + 4 = 5 (left: 5 5 13)",
                "",
                "4 + 5 = 9 (left: 1 9 13)",
                "13 - 4 = 9 (left: 1 5 9)"
            ]
        },
        "step_5": {
            "steps": [
                "1 + 4 = 5 (left: 5 5 13)\n5 * 5 = 25 (left: 25 13)",
                "1 + 4 = 5 (left: 5 5 13)\n5 / 5 = 1 (left: 1 13)",
                "5 - 1 = 4 (left: 4 5 13)",
                "4 + 5 = 9 (left: 1 9 13)\n9 - 1 = 8 (left: 8 13)",
                "13 - 4 = 9 (left: 1 5 9)\nInput: 3 6 2 12"
            ],
            "values": [
                0.003,
                0.002,
                2.001,
                0.001,
                0.003
            ],
            "resampled": [
                "0 <- 4.3",
                "1 <- 4.3",
                "2 <- 4.3",
                "3 <- 5.2",
                "4 <- 1.1"
            ],
            "resampled_steps": [
                "1 + 4 = 5 (left: 5 5 13)",
                "1 + 4 = 5 (left: 5 5 13)",
                "1 + 4 = 5 (left: 5 5 13)",
                "5 - 1 = 4 (left: 4 5 13)",
                "1 + 4 = 5 (left: 5 5 13)"
            ]
        },
        "step_6": {
            "steps": [
                "1 + 4 = 5 (left: 5 5 13)\n5 + 5 = 10 (left: 10 13)",
                "1 + 4 = 5 (left: 5 5 13)\n13 / 5 = 2.6 (left: 2.6 13)",
                "1 + 4 = 5 (left: 5 5 13)\n13 + 5 = 18 (left: 5 18)",
                "5 - 1 = 4 (left: 4 5 13)\n13 / 4 = 3.25 (left: 3.25 13)",
                "1 + 4 = 5 (left: 5 5 13)\n9 - 12 = -3 (left: -3 12 4)"
            ],
            "values": [
                0.003,
                0.003,
                0.003,
                0.003,
                21.001
            ],
            "resampled": [
                "0 <- 2.3",
                "1 <- 3.2",
                "2 <- 6.4",
                "3 <- INIT",
                "4 <- 4.3"
            ],
            "resampled_steps": [
                "1 + 4 = 5 (left: 5 5 13)",
                "13 - 4 = 9 (left: 1 5 9)\n12 - 6 = 6 (left: 3 6 9)",
                "1 + 4 = 5 (left: 5 5 13)\n9 - 12 = -3 (left: -3 12 4)",
                "",
                "1 + 4 = 5 (left: 5 5 13)"
            ]
        },
        "step_7": {
            "steps": [
                "1 + 4 = 5 (left: 5 5 13)\n13 - 5 = 8 (left: 5 8)",
                "13 - 4 = 9 (left: 1 5 9)\n12 - 6 = 6 (left: 3 6 9)\n3 * 6 = 18 (left: 9 18)",
                "1 + 4 = 5 (left: 5 5 13)\n9 - 12 = -3 (left: -3 12 4)\nPossible next steps:",
                "13 - 5 = 8 (left: 1 4 8)",
                "1 + 4 = 5 (left: 5 5 13)\n5 - 5 = 0 (left: 0 13)"
            ],
            "values": [
                0.002,
                0.003,
                0.003,
                21.001,
                0.0
            ],
            "resampled": [
                "0 <- 3.2",
                "1 <- 7.3",
                "2 <- 1.1",
                "3 <- 6.4",
                "4 <- 1.1"
            ],
            "resampled_steps": [
                "13 - 4 = 9 (left: 1 5 9)\n12 - 6 = 6 (left: 3 6 9)",
                "13 - 5 = 8 (left: 1 4 8)",
                "1 + 4 = 5 (left: 5 5 13)",
                "1 + 4 = 5 (left: 5 5 13)\n9 - 12 = -3 (left: -3 12 4)",
                "1 + 4 = 5 (left: 5 5 13)"
            ]
        },
        "step_8": {
            "steps": [
                "13 - 4 = 9 (left: 1 5 9)\n12 - 6 = 6 (left: 3 6 9)\n6 / 3 = 2 (left: 2 9)",
                "13 - 5 = 8 (left: 1 4 8)\n1 + 4 = 5 (left: 5 8)",
                "1 + 4 = 5 (left: 5 5 13)\n7 - 3 = 4 (left: 4 9 10)",
                "1 + 4 = 5 (left: 5 5 13)\n9 - 12 = -3 (left: -3 12 4)\n2 - 2 = 0 (left: 5 2 0)",
                "1 + 4 = 5 (left: 5 5 13)\n5 / 5 = 1 (left: 1 13)"
            ],
            "values": [
                0.001,
                0.003,
                1.002,
                1.001,
                0.001
            ],
            "resampled": [
                "0 <- 7.3",
                "1 <- 8.2",
                "2 <- 3.2",
                "3 <- 6.4",
                "4 <- 1.1"
            ],
            "resampled_steps": [
                "13 - 5 = 8 (left: 1 4 8)",
                "1 + 4 = 5 (left: 5 5 13)\n7 - 3 = 4 (left: 4 9 10)",
                "13 - 4 = 9 (left: 1 5 9)\n12 - 6 = 6 (left: 3 6 9)",
                "1 + 4 = 5 (left: 5 5 13)\n9 - 12 = -3 (left: -3 12 4)",
                "1 + 4 = 5 (left: 5 5 13)"
            ]
        },
        "step_9": {
            "steps": [
                "13 - 5 = 8 (left: 1 4 8)\n1 + 4 = 5 (left: 5 8)",
                "1 + 4 = 5 (left: 5 5 13)\n7 - 3 = 4 (left: 4 9 10)\n9 - 4 = 5 (left: 5 10)",
                "13 - 4 = 9 (left: 1 5 9)\n12 - 6 = 6 (left: 3 6 9)\nInput: 4 5 9",
                "1 + 4 = 5 (left: 5 5 13)\n9 - 12 = -3 (left: -3 12 4)\n4 / -3 = -1.33 (left: -1.33 4)",
                "1 + 4 = 5 (left: 5 5 13)\nPossible next steps:"
            ],
            "values": [
                0.001,
                0.003,
                0.003,
                0.002,
                0.003
            ],
            "resampled": [
                "0 <- 5.2",
                "1 <- 8.3",
                "2 <- 1.1",
                "3 <- 4.1",
                "4 <- 7.3"
            ],
            "resampled_steps": [
                "5 - 1 = 4 (left: 4 5 13)",
                "1 + 4 = 5 (left: 5 5 13)\n9 - 12 = -3 (left: -3 12 4)\n2 - 2 = 0 (left: 5 2 0)",
                "1 + 4 = 5 (left: 5 5 13)",
                "13 - 4 = 9 (left: 1 5 9)\n12 - 6 = 6 (left: 3 6 9)\n6 / 3 = 2 (left: 2 9)",
                "13 - 5 = 8 (left: 1 4 8)"
            ]
        },
        "step_10": {
            "steps": [
                "5 - 1 = 4 (left: 4 5 13)\nInput: 3 6 9 12",
                "1 + 4 = 5 (left: 5 5 13)\n9 - 12 = -3 (left: -3 12 4)\n2 - 2 = 0 (left: 5 2 0)\n5 * 2 = 10 (left: 0 10)",
                "1 + 4 = 5 (left: 5 5 13)\n3 + 7 = 10 (left: 9 10 11)",
                "13 - 4 = 9 (left: 1 5 9)\n12 - 6 = 6 (left: 3 6 9)\n6 / 3 = 2 (left: 2 9)\n9 / 2 = 4.5 (left: 4.5)",
                "13 - 5 = 8 (left: 1 4 8)\n8 - 4 = 4 (left: 1 4)"
            ],
            "values": [
                0.003,
                20.0,
                0.003,
                0.0,
                60.0
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 0.504525
    },
    "918": {
        "input": "2 2 7 12",
        "step_1": {
            "steps": [
                "12 / 2 = 6 (left: 2 7 6)",
                "12 / 2 = 6 (left: 2 7 6)",
                "12 + 2 = 14 (left: 2 7 14)",
                "2 + 2 = 4 (left: 4 7 12)",
                "2 + 2 = 4 (left: 4 7 12)"
            ],
            "values": [
                3.0,
                3.0,
                0.003,
                3.0,
                1.0
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- INIT"
            ],
            "resampled_steps": [
                "",
                "",
                "",
                "",
                ""
            ]
        },
        "step_2": {
            "steps": [
                "7 / 2 = 3.5 (left: 3.5 2 12)",
                "7 - 2 = 5 (left: 2 5 12)",
                "12 - 7 = 5 (left: 2 5 12)",
                "7 - 2 = 5 (left: 2 5 12)",
                "7 - 2 = 5 (left: 2 5 12)"
            ],
            "values": [
                3.0,
                2.001,
                1.002,
                0.003,
                1.002
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- 2.1",
                "2 <- 2.0",
                "3 <- INIT",
                "4 <- INIT"
            ],
            "resampled_steps": [
                "",
                "7 - 2 = 5 (left: 2 5 12)",
                "7 / 2 = 3.5 (left: 3.5 2 12)",
                "",
                ""
            ]
        },
        "step_3": {
            "steps": [
                "2 + 5 = 7 (left: 7 5 5)",
                "7 - 2 = 5 (left: 2 5 12)\n5 * 2 = 10 (left: 10 12)",
                "7 / 2 = 3.5 (left: 3.5 2 12)\n3.5 + 2 = 5.5 (left: 5.5 12)",
                "12 / 2 = 6 (left: 2 6 14)",
                "7 - 2 = 5 (left: 2 5 12)"
            ],
            "values": [
                3.0,
                0.003,
                0.0,
                2.001,
                0.003
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- 1.0",
                "3 <- INIT",
                "4 <- 2.2"
            ],
            "resampled_steps": [
                "",
                "",
                "12 / 2 = 6 (left: 2 7 6)",
                "",
                "12 - 7 = 5 (left: 2 5 12)"
            ]
        },
        "step_4": {
            "steps": [
                "2 / 2 = 1 (left: 1 7 12)",
                "2 * 2 = 4 (left: 4 7 12)",
                "12 / 2 = 6 (left: 2 7 6)\n14 - 3.5 = 10.5 (left: 3 10.5)",
                "12 - 2 = 10 (left: 2 7 10)",
                "12 - 7 = 5 (left: 2 5 12)\n12 - 2 = 10 (left: 2 10)"
            ],
            "values": [
                2.001,
                3.0,
                2.001,
                60.0,
                2.0
            ],
            "resampled": [
                "0 <- 4.3",
                "1 <- 4.3",
                "2 <- 3.3",
                "3 <- INIT",
                "4 <- 4.3"
            ],
            "resampled_steps": [
                "12 - 2 = 10 (left: 2 7 10)",
                "12 - 2 = 10 (left: 2 7 10)",
                "12 / 2 = 6 (left: 2 6 14)",
                "",
                "12 - 2 = 10 (left: 2 7 10)"
            ]
        },
        "step_5": {
            "steps": [
                "12 - 2 = 10 (left: 2 7 10)\n10 - 7 = 3 (left: 2 3 10)",
                "12 - 2 = 10 (left: 2 7 10)\n7 + 2 = 9 (left: 9 10)",
                "12 / 2 = 6 (left: 2 6 14)\n14 / 2 = 7 (left: 7)",
                "12 - 2 = 10 (left: 2 7 10)",
                "12 - 2 = 10 (left: 2 7 10)\n7 * 2 = 14 (left: 14 10)"
            ],
            "values": [
                21.0,
                0.002,
                0.002,
                41.0,
                60.0
            ],
            "resampled": [
                "0 <- 5.4",
                "1 <- 5.3",
                "2 <- 4.3",
                "3 <- 5.4",
                "4 <- 4.3"
            ],
            "resampled_steps": [
                "12 - 2 = 10 (left: 2 7 10)\n7 * 2 = 14 (left: 14 10)",
                "12 - 2 = 10 (left: 2 7 10)",
                "12 - 2 = 10 (left: 2 7 10)",
                "12 - 2 = 10 (left: 2 7 10)\n7 * 2 = 14 (left: 14 10)",
                "12 - 2 = 10 (left: 2 7 10)"
            ]
        },
        "step_6": {
            "steps": [
                "12 - 2 = 10 (left: 2 7 10)\n7 * 2 = 14 (left: 14 10)\n14 - 10 = 4 (left: 4)",
                "12 - 2 = 10 (left: 2 7 10)\n7 / 2 = 3.5 (left: 3.5 10)",
                "12 - 2 = 10 (left: 2 7 10)\nPossible next steps:",
                "12 - 2 = 10 (left: 2 7 10)\n7 * 2 = 14 (left: 14 10)\n14 - 10 = 4 (left: 4)",
                "12 - 2 = 10 (left: 2 7 10)\n10 / 3.5 = 2.85714285714 (left: 2.85714285714 10)"
            ],
            "values": [
                0.002,
                1.002,
                0.003,
                0.002,
                2.001
            ],
            "resampled": [
                "0 <- 5.4",
                "1 <- 5.4",
                "2 <- 5.3",
                "3 <- 4.3",
                "4 <- 4.3"
            ],
            "resampled_steps": [
                "12 - 2 = 10 (left: 2 7 10)\n7 * 2 = 14 (left: 14 10)",
                "12 - 2 = 10 (left: 2 7 10)\n7 * 2 = 14 (left: 14 10)",
                "12 - 2 = 10 (left: 2 7 10)",
                "12 - 2 = 10 (left: 2 7 10)",
                "12 - 2 = 10 (left: 2 7 10)"
            ]
        },
        "step_7": {
            "steps": [
                "12 - 2 = 10 (left: 2 7 10)\n7 * 2 = 14 (left: 14 10)\n14 * 10 = 140 (left: 140)",
                "12 - 2 = 10 (left: 2 7 10)\n7 * 2 = 14 (left: 14 10)\n14 / 10 = 1.4 (left: 1.4)",
                "12 - 2 = 10 (left: 2 7 10)\n10 - 2 = 8 (left: 7 8)",
                "12 - 2 = 10 (left: 2 7 10)\n10 - 7 = 3 (left: 2 3)",
                "12 - 2 = 10 (left: 2 7 10)\n2 + 7 = 9 (left: 9 10)"
            ],
            "values": [
                0.003,
                0.002,
                0.003,
                0.002,
                0.002
            ],
            "resampled": [
                "0 <- 5.4",
                "1 <- 4.3",
                "2 <- 4.3",
                "3 <- 5.0",
                "4 <- 5.0"
            ],
            "resampled_steps": [
                "12 - 2 = 10 (left: 2 7 10)\n7 * 2 = 14 (left: 14 10)",
                "12 - 2 = 10 (left: 2 7 10)",
                "12 - 2 = 10 (left: 2 7 10)",
                "12 - 2 = 10 (left: 2 7 10)\n10 - 7 = 3 (left: 2 3 10)",
                "12 - 2 = 10 (left: 2 7 10)\n10 - 7 = 3 (left: 2 3 10)"
            ]
        },
        "step_8": {
            "steps": [
                "12 - 2 = 10 (left: 2 7 10)\n7 * 2 = 14 (left: 14 10)\n14 + 10 = 24 (left: 24)",
                "12 - 2 = 10 (left: 2 7 10)\n5 / 2 = 2.5 (left: 7 2.5)",
                "12 - 2 = 10 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)",
                "12 - 2 = 10 (left: 2 7 10)\n10 - 7 = 3 (left: 2 3 10)\n3 / 2 = 1.5 (left: 1.5 10)",
                "12 - 2 = 10 (left: 2 7 10)\n10 - 7 = 3 (left: 2 3 10)\n2 * 3 = 6 (left: 6 10)"
            ],
            "values": [
                60.0,
                1.001,
                60.0,
                0.002,
                0.003
            ],
            "resampled": [
                "0 <- 5.4",
                "1 <- 8.2",
                "2 <- 8.2",
                "3 <- 4.3",
                "4 <- 5.4"
            ],
            "resampled_steps": [
                "12 - 2 = 10 (left: 2 7 10)\n7 * 2 = 14 (left: 14 10)",
                "12 - 2 = 10 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)",
                "12 - 2 = 10 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)",
                "12 - 2 = 10 (left: 2 7 10)",
                "12 - 2 = 10 (left: 2 7 10)\n7 * 2 = 14 (left: 14 10)"
            ]
        },
        "step_9": {
            "steps": [
                "12 - 2 = 10 (left: 2 7 10)\n7 * 2 = 14 (left: 14 10)\n14 - 10 = 4 (left: 4)",
                "12 - 2 = 10 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)\n14 + 10 = 24 (left: 24)",
                "12 - 2 = 10 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)\n14 * 10 = 140 (left: 140)",
                "12 - 2 = 10 (left: 2 7 10)\n9 / 3 = 3 (left: 3 12)",
                "12 - 2 = 10 (left: 2 7 10)\n7 * 2 = 14 (left: 14 10)\n14 - 10 = 4 (left: 4)"
            ],
            "values": [
                0.0,
                60.0,
                0.003,
                20.002,
                0.002
            ],
            "resampled": [
                "0 <- 5.4",
                "1 <- 8.2",
                "2 <- 5.4",
                "3 <- 5.0",
                "4 <- 8.0"
            ],
            "resampled_steps": [
                "12 - 2 = 10 (left: 2 7 10)\n7 * 2 = 14 (left: 14 10)",
                "12 - 2 = 10 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)",
                "12 - 2 = 10 (left: 2 7 10)\n7 * 2 = 14 (left: 14 10)",
                "12 - 2 = 10 (left: 2 7 10)\n10 - 7 = 3 (left: 2 3 10)",
                "12 - 2 = 10 (left: 2 7 10)\n7 * 2 = 14 (left: 14 10)\n14 + 10 = 24 (left: 24)"
            ]
        },
        "step_10": {
            "steps": [
                "12 - 2 = 10 (left: 2 7 10)\n7 * 2 = 14 (left: 14 10)\n14 * 10 = 140 (left: 140)",
                "12 - 2 = 10 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)\n14 * 10 = 140 (left: 140)",
                "12 - 2 = 10 (left: 2 7 10)\n7 * 2 = 14 (left: 14 10)\n14 + 10 = 24 (left: 24)",
                "12 - 2 = 10 (left: 2 7 10)\n10 - 7 = 3 (left: 2 3 10)\n3 * 10 = 30 (left: 2 30)",
                "12 - 2 = 10 (left: 2 7 10)\n7 * 2 = 14 (left: 14 10)\n14 + 10 = 24 (left: 24)\nAnswer: (12 - 2) + (7 * 2) = 24"
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            }
        ],
        "cost": 0.5332304999999999
    },
    "919": {
        "input": "3 3 6 7",
        "step_1": {
            "steps": [
                "Input: 4 5 10 15",
                "7 - 6 = 1 (left: 3 3 1)",
                "7 - 6 = 1 (left: 3 3 1)",
                "7 - 6 = 1 (left: 3 6 7)",
                "7 - 6 = 1 (left: 3 3 1)"
            ],
            "values": [
                0.003,
                2.001,
                0.003,
                60.0,
                1.002
            ],
            "resampled": [
                "0 <- 1.3",
                "1 <- 1.4",
                "2 <- INIT",
                "3 <- 1.3",
                "4 <- INIT"
            ],
            "resampled_steps": [
                "7 - 6 = 1 (left: 3 6 7)",
                "7 - 6 = 1 (left: 3 3 1)",
                "",
                "7 - 6 = 1 (left: 3 6 7)",
                ""
            ]
        },
        "step_2": {
            "steps": [
                "7 - 6 = 1 (left: 3 6 7)\nInput: 5 10 15",
                "7 - 6 = 1 (left: 3 3 1)\nPossible next steps:",
                "6 + 3 = 9 (left: 3 9 7)",
                "7 - 6 = 1 (left: 3 6 7)\n6 - 3 = 3 (left: 3 7)",
                "7 / 3 = 2 (left: 3 2 7)"
            ],
            "values": [
                0.003,
                0.003,
                2.001,
                0.001,
                3.0
            ],
            "resampled": [
                "0 <- 1.3",
                "1 <- 1.3",
                "2 <- 1.3",
                "3 <- 1.3",
                "4 <- 2.2"
            ],
            "resampled_steps": [
                "7 - 6 = 1 (left: 3 6 7)",
                "7 - 6 = 1 (left: 3 6 7)",
                "7 - 6 = 1 (left: 3 6 7)",
                "7 - 6 = 1 (left: 3 6 7)",
                "6 + 3 = 9 (left: 3 9 7)"
            ]
        },
        "step_3": {
            "steps": [
                "7 - 6 = 1 (left: 3 6 7)\nInput: 4 9 12 19",
                "7 - 6 = 1 (left: 3 6 7)\n7 - 5 = 2 (left: 2 6 7)",
                "7 - 6 = 1 (left: 3 6 7)\n6 / 3 = 2 (left: 2 7)",
                "7 - 6 = 1 (left: 3 6 7)\n6 / 3 = 2 (left: 2 7)",
                "6 + 3 = 9 (left: 3 9 7)\n3 * 9 = 27 (left: 7 27)"
            ],
            "values": [
                0.003,
                2.001,
                0.002,
                0.002,
                0.003
            ],
            "resampled": [
                "0 <- 1.3",
                "1 <- 1.3",
                "2 <- 1.3",
                "3 <- 1.3",
                "4 <- 1.3"
            ],
            "resampled_steps": [
                "7 - 6 = 1 (left: 3 6 7)",
                "7 - 6 = 1 (left: 3 6 7)",
                "7 - 6 = 1 (left: 3 6 7)",
                "7 - 6 = 1 (left: 3 6 7)",
                "7 - 6 = 1 (left: 3 6 7)"
            ]
        },
        "step_4": {
            "steps": [
                "7 - 6 = 1 (left: 3 6 7)\n9 / 4 = 2.25 (left: 2.25 9)",
                "7 - 6 = 1 (left: 3 6 7)\n9 - 4 = 5 (left: 5 9 12)",
                "7 - 6 = 1 (left: 3 6 7)\nInput: 4 9 11",
                "7 - 6 = 1 (left: 3 6 7)\n6 - 3 = 3 (left: 3 7)",
                "7 - 6 = 1 (left: 3 6 7)\nInput: 4 5 9 11"
            ],
            "values": [
                3.0,
                2.001,
                0.003,
                1.001,
                0.003
            ],
            "resampled": [
                "0 <- 1.3",
                "1 <- 1.3",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- 1.3"
            ],
            "resampled_steps": [
                "7 - 6 = 1 (left: 3 6 7)",
                "7 - 6 = 1 (left: 3 6 7)",
                "",
                "",
                "7 - 6 = 1 (left: 3 6 7)"
            ]
        },
        "step_5": {
            "steps": [
                "7 - 6 = 1 (left: 3 6 7)\n2 + 10 = 12 (left: 3 12)",
                "7 - 6 = 1 (left: 3 6 7)\n9 / 4 = 2 (left: 2 5 10)",
                "3 / 3 = 1 (left: 1 6 7)",
                "7 - 3 = 4 (left: 3 6 4)",
                "7 - 6 = 1 (left: 3 6 7)\n7 - 3 = 4 (left: 4 7)"
            ],
            "values": [
                20.002,
                22.0,
                1.002,
                3.0,
                0.002
            ],
            "resampled": [
                "0 <- 5.0",
                "1 <- 1.3",
                "2 <- 1.3",
                "3 <- 5.0",
                "4 <- 5.1"
            ],
            "resampled_steps": [
                "7 - 6 = 1 (left: 3 6 7)\n2 + 10 = 12 (left: 3 12)",
                "7 - 6 = 1 (left: 3 6 7)",
                "7 - 6 = 1 (left: 3 6 7)",
                "7 - 6 = 1 (left: 3 6 7)\n2 + 10 = 12 (left: 3 12)",
                "7 - 6 = 1 (left: 3 6 7)\n9 / 4 = 2 (left: 2 5 10)"
            ]
        },
        "step_6": {
            "steps": [
                "7 - 6 = 1 (left: 3 6 7)\n2 + 10 = 12 (left: 3 12)\n3 * 12 = 36 (left: 36)",
                "7 - 6 = 1 (left: 3 6 7)\n4 + 5 = 9 (left: 9 9 11)",
                "7 - 6 = 1 (left: 3 6 7)\n6 - 3 = 3 (left: 3 7)",
                "7 - 6 = 1 (left: 3 6 7)\n2 + 10 = 12 (left: 3 12)\n3 + 12 = 15 (left: 15)",
                "7 - 6 = 1 (left: 3 6 7)\n9 / 4 = 2 (left: 2 5 10)\n2 + 5 = 7 (left: 7 10)"
            ],
            "values": [
                0.0,
                0.003,
                0.0,
                0.001,
                0.001
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- 1.3",
                "2 <- 1.3",
                "3 <- 4.0",
                "4 <- 5.1"
            ],
            "resampled_steps": [
                "",
                "7 - 6 = 1 (left: 3 6 7)",
                "7 - 6 = 1 (left: 3 6 7)",
                "7 - 6 = 1 (left: 3 6 7)\n9 / 4 = 2.25 (left: 2.25 9)",
                "7 - 6 = 1 (left: 3 6 7)\n9 / 4 = 2 (left: 2 5 10)"
            ]
        },
        "step_7": {
            "steps": [
                "7 - 6 = 1 (left: 3 3 1)",
                "7 - 6 = 1 (left: 3 6 7)\n7 / 3 = 2.33 (left: 2.33 6)",
                "7 - 6 = 1 (left: 3 6 7)\n3 * 6 = 18 (left: 7 18)",
                "7 - 6 = 1 (left: 3 6 7)\n9 / 4 = 2.25 (left: 2.25 9)\nPossible next steps:",
                "7 - 6 = 1 (left: 3 6 7)\n9 / 4 = 2 (left: 2 5 10)\n10 / 2 = 5 (left: 5 10)"
            ],
            "values": [
                1.002,
                1.001,
                0.003,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 5.0",
                "1 <- 5.1",
                "2 <- 5.1",
                "3 <- 5.0",
                "4 <- 5.0"
            ],
            "resampled_steps": [
                "7 - 6 = 1 (left: 3 6 7)\n2 + 10 = 12 (left: 3 12)",
                "7 - 6 = 1 (left: 3 6 7)\n9 / 4 = 2 (left: 2 5 10)",
                "7 - 6 = 1 (left: 3 6 7)\n9 / 4 = 2 (left: 2 5 10)",
                "7 - 6 = 1 (left: 3 6 7)\n2 + 10 = 12 (left: 3 12)",
                "7 - 6 = 1 (left: 3 6 7)\n2 + 10 = 12 (left: 3 12)"
            ]
        },
        "step_8": {
            "steps": [
                "7 - 6 = 1 (left: 3 6 7)\n2 + 10 = 12 (left: 3 12)\n3 + 12 = 15 (left: 15)",
                "7 - 6 = 1 (left: 3 6 7)\n9 / 4 = 2 (left: 2 5 10)\n5 * 2 = 10 (left: 10 10)",
                "7 - 6 = 1 (left: 3 6 7)\n9 / 4 = 2 (left: 2 5 10)\n2 * 5 = 10 (left: 10 10)",
                "7 - 6 = 1 (left: 3 6 7)\n2 + 10 = 12 (left: 3 12)\n3 * 12 = 36 (left: 36)",
                "7 - 6 = 1 (left: 3 6 7)\n2 + 10 = 12 (left: 3 12)\n3 + 12 = 15 (left: 15)"
            ],
            "values": [
                0.001,
                0.001,
                0.0,
                40.001,
                0.003
            ],
            "resampled": [
                "0 <- 1.3",
                "1 <- 8.3",
                "2 <- 8.3",
                "3 <- 8.3",
                "4 <- 8.3"
            ],
            "resampled_steps": [
                "7 - 6 = 1 (left: 3 6 7)",
                "7 - 6 = 1 (left: 3 6 7)\n2 + 10 = 12 (left: 3 12)\n3 * 12 = 36 (left: 36)",
                "7 - 6 = 1 (left: 3 6 7)\n2 + 10 = 12 (left: 3 12)\n3 * 12 = 36 (left: 36)",
                "7 - 6 = 1 (left: 3 6 7)\n2 + 10 = 12 (left: 3 12)\n3 * 12 = 36 (left: 36)",
                "7 - 6 = 1 (left: 3 6 7)\n2 + 10 = 12 (left: 3 12)\n3 * 12 = 36 (left: 36)"
            ]
        },
        "step_9": {
            "steps": [
                "7 - 6 = 1 (left: 3 6 7)\n3 + 6 = 9 (left: 7 9)",
                "7 - 6 = 1 (left: 3 6 7)\n2 + 10 = 12 (left: 3 12)\n3 * 12 = 36 (left: 36)\n36 + 2 = 38",
                "7 - 6 = 1 (left: 3 6 7)\n2 + 10 = 12 (left: 3 12)\n3 * 12 = 36 (left: 36)\nNo possible next steps for the number 36.",
                "7 - 6 = 1 (left: 3 6 7)\n2 + 10 = 12 (left: 3 12)\n3 * 12 = 36 (left: 36)\nNo possible next steps with a single number.",
                "7 - 6 = 1 (left: 3 6 7)\n2 + 10 = 12 (left: 3 12)\n3 * 12 = 36 (left: 36)\n36 / 4 = 9 (left: 9)"
            ],
            "values": [
                0.003,
                0.003,
                0.003,
                0.003,
                0.002
            ],
            "resampled": [
                "0 <- 8.3",
                "1 <- 5.1",
                "2 <- 5.0",
                "3 <- 8.3",
                "4 <- 2.4"
            ],
            "resampled_steps": [
                "7 - 6 = 1 (left: 3 6 7)\n2 + 10 = 12 (left: 3 12)\n3 * 12 = 36 (left: 36)",
                "7 - 6 = 1 (left: 3 6 7)\n9 / 4 = 2 (left: 2 5 10)",
                "7 - 6 = 1 (left: 3 6 7)\n2 + 10 = 12 (left: 3 12)",
                "7 - 6 = 1 (left: 3 6 7)\n2 + 10 = 12 (left: 3 12)\n3 * 12 = 36 (left: 36)",
                "7 / 3 = 2 (left: 3 2 7)"
            ]
        },
        "step_10": {
            "steps": [
                "7 - 6 = 1 (left: 3 6 7)\n2 + 10 = 12 (left: 3 12)\n3 * 12 = 36 (left: 36)\nThere are no possible next steps with the input 36.",
                "7 - 6 = 1 (left: 3 6 7)\n9 / 4 = 2 (left: 2 5 10)\n9 - 6 = 3 (left: 3 9 12)",
                "7 - 6 = 1 (left: 3 6 7)\n2 + 10 = 12 (left: 3 12)\n3 * 12 = 36 (left: 36)",
                "7 - 6 = 1 (left: 3 6 7)\n2 + 10 = 12 (left: 3 12)\n3 * 12 = 36 (left: 36)\n36 / 4 = 9 (left: 9)",
                "7 / 3 = 2 (left: 3 2 7)\n3 * 2 = 6 (left: 6 7)"
            ],
            "values": [
                0.003,
                0.003,
                60.0,
                0.002,
                0.003
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 0.56301
    },
    "920": {
        "input": "1 5 9 13",
        "step_1": {
            "steps": [
                "5 + 9 = 14 (left: 1 14 13)",
                "13 - 5 = 8 (left: 1 9 8)",
                "13 + 1 = 14 (left: 5 14)",
                "5 - 1 = 4 (left: 4 9 13)",
                "9 - 1 = 8 (left: 8 9 13)"
            ],
            "values": [
                20.002,
                0.003,
                0.002,
                2.0,
                2.001
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- 1.0",
                "4 <- 1.4"
            ],
            "resampled_steps": [
                "",
                "",
                "",
                "5 + 9 = 14 (left: 1 14 13)",
                "9 - 1 = 8 (left: 8 9 13)"
            ]
        },
        "step_2": {
            "steps": [
                "5 * 9 = 45 (left: 1 45 13)",
                "9 + 1 = 10 (left: 5 10 13)",
                "9 + 13 = 22 (left: 1 5 22)",
                "5 + 9 = 14 (left: 1 14 13)\n13 - 1 = 12 (left: 12 14)",
                "9 - 1 = 8 (left: 8 9 13)\n9 - 8 = 1 (left: 1 13)"
            ],
            "values": [
                1.001,
                3.0,
                1.001,
                0.003,
                0.0
            ],
            "resampled": [
                "0 <- 1.0",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- 2.2",
                "4 <- 1.0"
            ],
            "resampled_steps": [
                "5 + 9 = 14 (left: 1 14 13)",
                "",
                "",
                "9 + 13 = 22 (left: 1 5 22)",
                "5 + 9 = 14 (left: 1 14 13)"
            ]
        },
        "step_3": {
            "steps": [
                "5 + 9 = 14 (left: 1 14 13)\n13 - 1 = 12 (left: 1 12)",
                "13 - 9 = 4 (left: 1 5 4)",
                "5 * 9 = 45 (left: 1 45 13)",
                "9 + 13 = 22 (left: 1 5 22)\n5 + 1 = 6 (left: 6 22)",
                "5 + 9 = 14 (left: 1 14 13)\n14 - 1 = 13 (left: 13 13)"
            ],
            "values": [
                0.002,
                22.0,
                2.001,
                0.002,
                0.003
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- 1.0",
                "2 <- 3.1",
                "3 <- 3.1",
                "4 <- 1.0"
            ],
            "resampled_steps": [
                "",
                "5 + 9 = 14 (left: 1 14 13)",
                "13 - 9 = 4 (left: 1 5 4)",
                "13 - 9 = 4 (left: 1 5 4)",
                "5 + 9 = 14 (left: 1 14 13)"
            ]
        },
        "step_4": {
            "steps": [
                "13 - 1 = 12 (left: 5 9 12)",
                "5 + 9 = 14 (left: 1 14 13)\n16 - 4 = 12 (left: 12 8)",
                "13 - 9 = 4 (left: 1 5 4)\n1 + 5 = 6 (left: 4 6)",
                "13 - 9 = 4 (left: 1 5 4)\n5 / 1 = 5 (left: 5 4)",
                "5 + 9 = 14 (left: 1 14 13)\n13 - 1 = 12 (left: 12 13)"
            ],
            "values": [
                2.001,
                0.002,
                60.0,
                60.0,
                0.003
            ],
            "resampled": [
                "0 <- 4.3",
                "1 <- 4.2",
                "2 <- 4.2",
                "3 <- 1.0",
                "4 <- 4.3"
            ],
            "resampled_steps": [
                "13 - 9 = 4 (left: 1 5 4)\n5 / 1 = 5 (left: 5 4)",
                "13 - 9 = 4 (left: 1 5 4)\n1 + 5 = 6 (left: 4 6)",
                "13 - 9 = 4 (left: 1 5 4)\n1 + 5 = 6 (left: 4 6)",
                "5 + 9 = 14 (left: 1 14 13)",
                "13 - 9 = 4 (left: 1 5 4)\n5 / 1 = 5 (left: 5 4)"
            ]
        },
        "step_5": {
            "steps": [
                "13 - 9 = 4 (left: 1 5 4)\n5 / 1 = 5 (left: 5 4)\n5 / 4 = 1.25 (left: 1.25)",
                "13 - 9 = 4 (left: 1 5 4)\n1 + 5 = 6 (left: 4 6)\n6 - 4 = 2 (left: 2)",
                "13 - 9 = 4 (left: 1 5 4)\n1 + 5 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "5 + 9 = 14 (left: 1 14 13)\nInput: 3 9 4",
                "13 - 9 = 4 (left: 1 5 4)\n5 / 1 = 5 (left: 5 4)\n5 - 4 = 1 (left: 1)"
            ],
            "values": [
                0.003,
                0.001,
                60.0,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 4.2",
                "1 <- 5.2",
                "2 <- 5.2",
                "3 <- 4.2",
                "4 <- 4.3"
            ],
            "resampled_steps": [
                "13 - 9 = 4 (left: 1 5 4)\n1 + 5 = 6 (left: 4 6)",
                "13 - 9 = 4 (left: 1 5 4)\n1 + 5 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "13 - 9 = 4 (left: 1 5 4)\n1 + 5 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "13 - 9 = 4 (left: 1 5 4)\n1 + 5 = 6 (left: 4 6)",
                "13 - 9 = 4 (left: 1 5 4)\n5 / 1 = 5 (left: 5 4)"
            ]
        },
        "step_6": {
            "steps": [
                "13 - 9 = 4 (left: 1 5 4)\n1 + 5 = 6 (left: 4 6)\n6 - 4 = 2 (left: 2)",
                "13 - 9 = 4 (left: 1 5 4)\n1 + 5 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 + 5) * (9 - 13) = 24",
                "13 - 9 = 4 (left: 1 5 4)\n1 + 5 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 + 5) * (9 - 13 + 4) = 24",
                "13 - 9 = 4 (left: 1 5 4)\n1 + 5 = 6 (left: 4 6)\n6 / 4 = 1.5 (left: 1.5)",
                "13 - 9 = 4 (left: 1 5 4)\n5 / 1 = 5 (left: 5 4)\n5 + 4 = 9 (left: 9)"
            ],
            "values": [
                0.001,
                60.0,
                60.0,
                0.001,
                0.003
            ],
            "resampled": [
                "0 <- 3.1",
                "1 <- 1.0",
                "2 <- 4.3",
                "3 <- 4.2",
                "4 <- 6.2"
            ],
            "resampled_steps": [
                "13 - 9 = 4 (left: 1 5 4)",
                "5 + 9 = 14 (left: 1 14 13)",
                "13 - 9 = 4 (left: 1 5 4)\n5 / 1 = 5 (left: 5 4)",
                "13 - 9 = 4 (left: 1 5 4)\n1 + 5 = 6 (left: 4 6)",
                "13 - 9 = 4 (left: 1 5 4)\n1 + 5 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 + 5) * (9 - 13 + 4) = 24"
            ]
        },
        "step_7": {
            "steps": [
                "13 - 9 = 4 (left: 1 5 4)\n1 * 5 = 5 (left: 5 4)",
                "5 + 9 = 14 (left: 1 14 13)\n4 + 6 = 10 (left: 10 7 3)",
                "13 - 9 = 4 (left: 1 5 4)\n5 / 1 = 5 (left: 5 4)\n4 + 5 = 9 (left: 9)",
                "13 - 9 = 4 (left: 1 5 4)\n1 + 5 = 6 (left: 4 6)\n6 - 4 = 2 (left: 2)",
                "13 - 9 = 4 (left: 1 5 4)\n1 + 5 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 + 5) * (9 - 13 + 4) = 24\nInput: 3 6 7 8\nSteps:\n7 + 8 = 15 (left: 3 6 15)\n6 - 3 = 3 (left: 3 15)\n15 - 3 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: (7 + 8) - (6 - 3) * 2 = 24"
            ],
            "values": [
                2.001,
                2.0,
                0.001,
                0.003,
                60.0
            ],
            "resampled": [
                "0 <- 6.2",
                "1 <- 6.2",
                "2 <- 4.2",
                "3 <- 4.3",
                "4 <- 4.2"
            ],
            "resampled_steps": [
                "13 - 9 = 4 (left: 1 5 4)\n1 + 5 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 + 5) * (9 - 13 + 4) = 24",
                "13 - 9 = 4 (left: 1 5 4)\n1 + 5 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 + 5) * (9 - 13 + 4) = 24",
                "13 - 9 = 4 (left: 1 5 4)\n1 + 5 = 6 (left: 4 6)",
                "13 - 9 = 4 (left: 1 5 4)\n5 / 1 = 5 (left: 5 4)",
                "13 - 9 = 4 (left: 1 5 4)\n1 + 5 = 6 (left: 4 6)"
            ]
        },
        "step_8": {
            "steps": [
                "13 - 9 = 4 (left: 1 5 4)\n1 + 5 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 + 5) * (9 - 13 + 4) = 24\nInput: 3 3 4 7\nSteps:\n3 + 7 = 10 (left: 3 4 10)\n4 - 3 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10)\nAnswer: (3 + 7) * (4 - 3) = 24",
                "13 - 9 = 4 (left: 1 5 4)\n1 + 5 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 + 5) * (9 - 13 + 4) = 24\nInput: 3 3 8 8\nSteps:\n3 + 3 = 6 (left: 6 8 8)\n6 * 8 = 48 (left: 8 48)\n8 - 8 = 0 (left: 0 48)\n48 / 0 = undefined\nAnswer: No solution.",
                "13 - 9 = 4 (left: 1 5 4)\n1 + 5 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "13 - 9 = 4 (left: 1 5 4)\n5 / 1 = 5 (left: 5 4)\n5 / 4 = 1.25 (left: 1.25)",
                "13 - 9 = 4 (left: 1 5 4)\n1 + 5 = 6 (left: 4 6)\n5 - 3 = 2 (left: 1 2 7)"
            ],
            "values": [
                40.0,
                60.0,
                60.0,
                0.003,
                2.001
            ],
            "resampled": [
                "0 <- 8.0",
                "1 <- 6.2",
                "2 <- 8.1",
                "3 <- 8.1",
                "4 <- 8.1"
            ],
            "resampled_steps": [
                "13 - 9 = 4 (left: 1 5 4)\n1 + 5 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 + 5) * (9 - 13 + 4) = 24\nInput: 3 3 4 7\nSteps:\n3 + 7 = 10 (left: 3 4 10)\n4 - 3 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10)\nAnswer: (3 + 7) * (4 - 3) = 24",
                "13 - 9 = 4 (left: 1 5 4)\n1 + 5 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 + 5) * (9 - 13 + 4) = 24",
                "13 - 9 = 4 (left: 1 5 4)\n1 + 5 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 + 5) * (9 - 13 + 4) = 24\nInput: 3 3 8 8\nSteps:\n3 + 3 = 6 (left: 6 8 8)\n6 * 8 = 48 (left: 8 48)\n8 - 8 = 0 (left: 0 48)\n48 / 0 = undefined\nAnswer: No solution.",
                "13 - 9 = 4 (left: 1 5 4)\n1 + 5 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 + 5) * (9 - 13 + 4) = 24\nInput: 3 3 8 8\nSteps:\n3 + 3 = 6 (left: 6 8 8)\n6 * 8 = 48 (left: 8 48)\n8 - 8 = 0 (left: 0 48)\n48 / 0 = undefined\nAnswer: No solution.",
                "13 - 9 = 4 (left: 1 5 4)\n1 + 5 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 + 5) * (9 - 13 + 4) = 24\nInput: 3 3 8 8\nSteps:\n3 + 3 = 6 (left: 6 8 8)\n6 * 8 = 48 (left: 8 48)\n8 - 8 = 0 (left: 0 48)\n48 / 0 = undefined\nAnswer: No solution."
            ]
        },
        "step_9": {
            "steps": [
                "13 - 9 = 4 (left: 1 5 4)\n1 + 5 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 + 5) * (9 - 13 + 4) = 24\nInput: 3 3 4 7\nSteps:\n3 + 7 = 10 (left: 3 4 10)\n4 - 3 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10)\nAnswer: (3 + 7) * (4 - 3) = 24\nInput: 2 3 5 8\nSteps:\n2 * 5 = 10 (left: 3 8 10)\n8 - 3 = 5 (left: 5 10)\n5 * 10 = 50 (left: 50)\nAnswer: (2 * 5) * (8 - 3) = 24",
                "13 - 9 = 4 (left: 1 5 4)\n1 + 5 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 + 5) * (9 - 13 + 4) = 24\nInput: 3 3 3 8\nSteps:\n3 * 3 = 9 (left: 3 8 9)\n9 - 8 = 1 (left: 1 9)\n1 * 9 = 9 (left: 9)\n9 * 3 = 27 (left: 27)\n27 - 8 = 19 (left: 19)\n19 - 9 = 10 (left: 10)\n10 - 3 = 7 (left: 7)\n7 + 8 = 15 (left: 15)\n15 + 3 = 18 (left: 18)\n18 - 10 = 8 (left: 8)\n8 / 7 = 1 (left: 1 8)\n1 * 18 = 18 (left: 18)\n18 + 8 = 26 (left: 26)\n26 - 15 = 11 (left: 11)\n11 * 3 = 33 (left: 33)\n33 - 1 = 32 (left: 32)\n32 - 18 = 14 (left: 14)\n14 - 8 = 6 (left: 6)\n6 * 9 = 54 (left: 54)\n54 / 11 = 4 (left: 4)\n4 + 14 = 18 (left: 18)\n18 - 6 = 12 (left: 12)\n12 * 3 = 36 (left: 36)\n36 - 18 = 18 (left: 18)\n18 - 12 = 6 (left: 6)\n6 * 8 = 48 (left: 48)\n48 / 3 = 16 (left: 16)\n16 + 18 = 34 (left: 34)\n34 - 6 = 28 (left: 28)\n28 / 4 = 7 (left: 7)\n7 * 16 = 112 (left: 112)\n112 / 8 = 14 (left: 14)\n14 - 3 = 11 (left: 11)\n11 * 7 = 77 (left: 77)\n77 - 28 = 49 (left: 49)\n49 - 14 = 35 (left: 35)\n35 - 4 = 31 (left: 31)\n31 - 18 = 13 (left: 13)\n13 + 11 = 24 (left: 24)\nAnswer: ((3 * 3) - 8) + 24 = 24",
                "13 - 9 = 4 (left: 1 5 4)\n1 + 5 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 + 5) * (9 - 13 + 4) = 24\nInput: 3 3 8 8\nSteps:\n3 + 3 = 6 (left: 6 8 8)\n6 * 8 = 48 (left: 8 48)\n8 - 8 = 0 (left: 0 48)\n48 / 0 = undefined\nAnswer: No solution.\nNo solution.",
                "13 - 9 = 4 (left: 1 5 4)\n1 + 5 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 + 5) * (9 - 13 + 4) = 24\nInput: 3 3 8 8\nSteps:\n3 + 3 = 6 (left: 6 8 8)\n6 * 8 = 48 (left: 8 48)\n8 - 8 = 0 (left: 0 48)\n48 / 0 = undefined\nAnswer: No solution.\nInput: 2 3 4 6\nSteps:\n2 * 4 = 8 (left: 3 6 8)\n8 - 6 = 2 (left: 2 3 8)\n2 * 3 = 6 (left: 6 8)\n6 * 8 = 48 (left: 48)\nAnswer: ((2 * 4) - 6) * 3 = 24",
                "13 - 9 = 4 (left: 1 5 4)\n1 + 5 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 + 5) * (9 - 13 + 4) = 24\nInput: 3 3 8 8\nSteps:\n3 + 3 = 6 (left: 6 8 8)\n6 * 8 = 48 (left: 8 48)\n8 - 8 = 0 (left: 0 48)\n48 / 0 = undefined\nAnswer: No solution.\nNo solution."
            ],
            "values": [
                60.0,
                40.0,
                0.003,
                60.0,
                0.003
            ],
            "resampled": [
                "0 <- 6.1",
                "1 <- 8.0",
                "2 <- 9.3",
                "3 <- 7.4",
                "4 <- 8.1"
            ],
            "resampled_steps": [
                "13 - 9 = 4 (left: 1 5 4)\n1 + 5 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 + 5) * (9 - 13) = 24",
                "13 - 9 = 4 (left: 1 5 4)\n1 + 5 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 + 5) * (9 - 13 + 4) = 24\nInput: 3 3 4 7\nSteps:\n3 + 7 = 10 (left: 3 4 10)\n4 - 3 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10)\nAnswer: (3 + 7) * (4 - 3) = 24",
                "13 - 9 = 4 (left: 1 5 4)\n1 + 5 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 + 5) * (9 - 13 + 4) = 24\nInput: 3 3 8 8\nSteps:\n3 + 3 = 6 (left: 6 8 8)\n6 * 8 = 48 (left: 8 48)\n8 - 8 = 0 (left: 0 48)\n48 / 0 = undefined\nAnswer: No solution.\nInput: 2 3 4 6\nSteps:\n2 * 4 = 8 (left: 3 6 8)\n8 - 6 = 2 (left: 2 3 8)\n2 * 3 = 6 (left: 6 8)\n6 * 8 = 48 (left: 48)\nAnswer: ((2 * 4) - 6) * 3 = 24",
                "13 - 9 = 4 (left: 1 5 4)\n1 + 5 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 + 5) * (9 - 13 + 4) = 24\nInput: 3 6 7 8\nSteps:\n7 + 8 = 15 (left: 3 6 15)\n6 - 3 = 3 (left: 3 15)\n15 - 3 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: (7 + 8) - (6 - 3) * 2 = 24",
                "13 - 9 = 4 (left: 1 5 4)\n1 + 5 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 + 5) * (9 - 13 + 4) = 24\nInput: 3 3 8 8\nSteps:\n3 + 3 = 6 (left: 6 8 8)\n6 * 8 = 48 (left: 8 48)\n8 - 8 = 0 (left: 0 48)\n48 / 0 = undefined\nAnswer: No solution."
            ]
        },
        "step_10": {
            "steps": [
                "13 - 9 = 4 (left: 1 5 4)\n1 + 5 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 + 5) * (9 - 13) = 24\nInput: 3 3 5 5\nSteps:\n3 + 5 = 8 (left: 3 8 5)\n8 - 3 = 5 (left: 5 5)\n5 * 5 = 25 (left: 25)\nAnswer: (3 + 5) * (3 - 5) = 24",
                "13 - 9 = 4 (left: 1 5 4)\n1 + 5 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 + 5) * (9 - 13 + 4) = 24\nInput: 3 3 4 7\nSteps:\n3 + 7 = 10 (left: 3 4 10)\n4 - 3 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10)\nAnswer: (3 + 7) * (4 - 3) = 24\nInput: 2 3 4 6\nSteps:\n4 * 6 = 24 (left: 2 3 24)\n3 + 2 = 5 (left: 5 24)\n5 * 24 = 120 (left: 120)\nAnswer: (2 + 3) * (4 * 6) = 24",
                "13 - 9 = 4 (left: 1 5 4)\n1 + 5 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 + 5) * (9 - 13 + 4) = 24\nInput: 3 3 8 8\nSteps:\n3 + 3 = 6 (left: 6 8 8)\n6 * 8 = 48 (left: 8 48)\n8 - 8 = 0 (left: 0 48)\n48 / 0 = undefined\nAnswer: No solution.\nInput: 2 3 4 6\nSteps:\n2 * 4 = 8 (left: 3 6 8)\n8 - 6 = 2 (left: 2 3 8)\n2 * 3 = 6 (left: 6 8)\n6 * 8 = 48 (left: 48)\nAnswer: ((2 * 4) - 6) * 3 = 24\nInput: 2 5 6 7\nSteps:\n5 * 2 = 10 (left: 6 7 10)\n10 - 6 = 4 (left: 4 7)\n4 * 7 = 28 (left: 28)\n28 - 4 = 24 (left: 24)\nAnswer: ((5 * 2) - 6) * 7 = 24",
                "13 - 9 = 4 (left: 1 5 4)\n1 + 5 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 + 5) * (9 - 13 + 4) = 24\nInput: 3 6 7 8\nSteps:\n7 + 8 = 15 (left: 3 6 15)\n6 - 3 = 3 (left: 3 15)\n15 - 3 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: (7 + 8) - (6 - 3) * 2 = 24\nInput: 2 3 5 7\nSteps:\n3 + 7 = 10 (left: 2 5 10)\n5 - 2 = 3 (left: 3 10)\n3 * 10 = 30 (left: 30)\n30 - 6 = 24 (left: 24)\nAnswer: ((3 + 7) - (5 - 2)) * 6 = 24",
                "13 - 9 = 4 (left: 1 5 4)\n1 + 5 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 + 5) * (9 - 13 + 4) = 24\nInput: 3 3 8 8\nSteps:\n3 + 3 = 6 (left: 6 8 8)\n6 * 8 = 48 (left: 8 48)\n8 - 8 = 0 (left: 0 48)\n48 / 0 = undefined\nAnswer: No solution.\nThere is no solution using the numbers 3, 3, 8, and 8 to obtain 24."
            ],
            "values": [
                60.0,
                60.0,
                60.0,
                60.0,
                0.003
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 0.592723
    },
    "921": {
        "input": "5 6 7 13",
        "step_1": {
            "steps": [
                "6 + 7 = 13 (left: 5 13 13)",
                "6 + 7 = 13 (left: 5 13 13)",
                "13 - 7 = 6 (left: 5 6 6)",
                "6 / 7 = 0.857 (left: 5 0.857 13)",
                "13 - 6 = 7 (left: 5 7 13)"
            ],
            "values": [
                2.001,
                1.002,
                22.0,
                3.0,
                3.0
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- INIT"
            ],
            "resampled_steps": [
                "",
                "",
                "",
                "",
                ""
            ]
        },
        "step_2": {
            "steps": [
                "6 * 7 = 42 (left: 5 42 13)",
                "13 - 5 = 8 (left: 6 7 8)",
                "5 + 6 = 11 (left: 7 11 13)",
                "7 - 6 = 1 (left: 5 1 13)",
                "7 * 6 = 42 (left: 5 42 13)"
            ],
            "values": [
                3.0,
                2.001,
                1.001,
                0.002,
                2.001
            ],
            "resampled": [
                "0 <- 1.2",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- INIT"
            ],
            "resampled_steps": [
                "13 - 7 = 6 (left: 5 6 6)",
                "",
                "",
                "",
                ""
            ]
        },
        "step_3": {
            "steps": [
                "13 - 7 = 6 (left: 5 6 6)\n3 + 9 = 12 (left: 9 12 27)",
                "4 * 5 = 20 (left: 3 20 10)",
                "13 - 5 = 8 (left: 6 7 8)",
                "13 - 7 = 6 (left: 5 6 6)",
                "6 / 7 = 0.85714 (left: 5 0.85714 13)"
            ],
            "values": [
                2.001,
                3.0,
                3.0,
                3.0,
                3.0
            ],
            "resampled": [
                "0 <- 3.3",
                "1 <- INIT",
                "2 <- 1.2",
                "3 <- INIT",
                "4 <- 1.0"
            ],
            "resampled_steps": [
                "13 - 7 = 6 (left: 5 6 6)",
                "",
                "13 - 7 = 6 (left: 5 6 6)",
                "",
                "6 + 7 = 13 (left: 5 13 13)"
            ]
        },
        "step_4": {
            "steps": [
                "13 - 7 = 6 (left: 5 6 6)\n6 + 6 = 12 (left: 5 12)",
                "13 - 6 = 7 (left: 5 7 7)",
                "13 - 7 = 6 (left: 5 6 6)\nPossible next steps:",
                "13 - 5 = 8 (left: 6 7 8)",
                "6 + 7 = 13 (left: 5 13 13)\n9 - 3 = 6 (left: 6 6)"
            ],
            "values": [
                0.001,
                3.0,
                0.003,
                3.0,
                20.002
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- 1.0",
                "2 <- 4.4",
                "3 <- INIT",
                "4 <- 4.4"
            ],
            "resampled_steps": [
                "",
                "6 + 7 = 13 (left: 5 13 13)",
                "6 + 7 = 13 (left: 5 13 13)\n9 - 3 = 6 (left: 6 6)",
                "",
                "6 + 7 = 13 (left: 5 13 13)\n9 - 3 = 6 (left: 6 6)"
            ]
        },
        "step_5": {
            "steps": [
                "16 - 4 = 12 (left: 12 15 16)",
                "6 + 7 = 13 (left: 5 13 13)\n5 * 13 = 65 (left: 13 13 65)",
                "6 + 7 = 13 (left: 5 13 13)\n9 - 3 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)",
                "6 + 7 = 13 (left: 5 13 13)",
                "6 + 7 = 13 (left: 5 13 13)\n9 - 3 = 6 (left: 6 6)\n6 - 6 = 0 (left: 0)"
            ],
            "values": [
                3.0,
                20.002,
                20.0,
                0.003,
                0.002
            ],
            "resampled": [
                "0 <- 1.3",
                "1 <- 5.1",
                "2 <- 5.1",
                "3 <- 1.2",
                "4 <- 5.1"
            ],
            "resampled_steps": [
                "6 / 7 = 0.857 (left: 5 0.857 13)",
                "6 + 7 = 13 (left: 5 13 13)\n5 * 13 = 65 (left: 13 13 65)",
                "6 + 7 = 13 (left: 5 13 13)\n5 * 13 = 65 (left: 13 13 65)",
                "13 - 7 = 6 (left: 5 6 6)",
                "6 + 7 = 13 (left: 5 13 13)\n5 * 13 = 65 (left: 13 13 65)"
            ]
        },
        "step_6": {
            "steps": [
                "6 / 7 = 0.857 (left: 5 0.857 13)\n13 * 0.857 = 11.141 (left: 11.141 5 13)",
                "6 + 7 = 13 (left: 5 13 13)\n5 * 13 = 65 (left: 13 13 65)\n13 - 13 = 0 (left: 0 13 65)",
                "6 + 7 = 13 (left: 5 13 13)\n5 * 13 = 65 (left: 13 13 65)\n65 / 13 = 5 (left: 5 13)",
                "13 - 7 = 6 (left: 5 6 6)\n6 - 5 = 1 (left: 1 6)",
                "6 + 7 = 13 (left: 5 13 13)\n5 * 13 = 65 (left: 13 13 65)\n65 - 13 = 52 (left: 13 52)"
            ],
            "values": [
                3.0,
                0.003,
                1.002,
                60.0,
                0.003
            ],
            "resampled": [
                "0 <- 5.2",
                "1 <- 5.1",
                "2 <- 4.4",
                "3 <- 5.1",
                "4 <- 5.2"
            ],
            "resampled_steps": [
                "6 + 7 = 13 (left: 5 13 13)\n9 - 3 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)",
                "6 + 7 = 13 (left: 5 13 13)\n5 * 13 = 65 (left: 13 13 65)",
                "6 + 7 = 13 (left: 5 13 13)\n9 - 3 = 6 (left: 6 6)",
                "6 + 7 = 13 (left: 5 13 13)\n5 * 13 = 65 (left: 13 13 65)",
                "6 + 7 = 13 (left: 5 13 13)\n9 - 3 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)"
            ]
        },
        "step_7": {
            "steps": [
                "6 + 7 = 13 (left: 5 13 13)\n9 - 3 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)\n36 / 2 = 18",
                "6 + 7 = 13 (left: 5 13 13)\n5 * 13 = 65 (left: 13 13 65)\n13 + 65 = 78 (left: 13 78)",
                "6 + 7 = 13 (left: 5 13 13)\n9 - 3 = 6 (left: 6 6)\n6 / 6 = 1 (left: 1)",
                "6 + 7 = 13 (left: 5 13 13)\n5 * 13 = 65 (left: 13 13 65)\n13 / 13 = 1 (left: 1 65)",
                "6 + 7 = 13 (left: 5 13 13)\n9 - 3 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)\n36 * 2 = 72 (left: 2 72)"
            ],
            "values": [
                0.003,
                0.002,
                0.001,
                0.0,
                0.003
            ],
            "resampled": [
                "0 <- 5.2",
                "1 <- 6.3",
                "2 <- 6.3",
                "3 <- 5.0",
                "4 <- 6.3"
            ],
            "resampled_steps": [
                "6 + 7 = 13 (left: 5 13 13)\n9 - 3 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)",
                "13 - 7 = 6 (left: 5 6 6)\n6 - 5 = 1 (left: 1 6)",
                "13 - 7 = 6 (left: 5 6 6)\n6 - 5 = 1 (left: 1 6)",
                "16 - 4 = 12 (left: 12 15 16)",
                "13 - 7 = 6 (left: 5 6 6)\n6 - 5 = 1 (left: 1 6)"
            ]
        },
        "step_8": {
            "steps": [
                "6 + 7 = 13 (left: 5 13 13)\n9 - 3 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)\n36 / 2 = 18",
                "13 - 7 = 6 (left: 5 6 6)\n6 - 5 = 1 (left: 1 6)\n6 - 1 = 5 (left: 5)",
                "13 - 7 = 6 (left: 5 6 6)\n6 - 5 = 1 (left: 1 6)\n1 * 6 = 6 (left: 6)",
                "16 - 4 = 12 (left: 12 15 16)\n12 + 16 = 28 (left: 15 28)",
                "13 - 7 = 6 (left: 5 6 6)\n6 - 5 = 1 (left: 1 6)\n1 + 6 = 7 (left: 7)"
            ],
            "values": [
                0.003,
                0.002,
                0.0,
                0.003,
                0.001
            ],
            "resampled": [
                "0 <- 5.1",
                "1 <- 6.3",
                "2 <- 4.4",
                "3 <- 6.3",
                "4 <- 6.3"
            ],
            "resampled_steps": [
                "6 + 7 = 13 (left: 5 13 13)\n5 * 13 = 65 (left: 13 13 65)",
                "13 - 7 = 6 (left: 5 6 6)\n6 - 5 = 1 (left: 1 6)",
                "6 + 7 = 13 (left: 5 13 13)\n9 - 3 = 6 (left: 6 6)",
                "13 - 7 = 6 (left: 5 6 6)\n6 - 5 = 1 (left: 1 6)",
                "13 - 7 = 6 (left: 5 6 6)\n6 - 5 = 1 (left: 1 6)"
            ]
        },
        "step_9": {
            "steps": [
                "6 + 7 = 13 (left: 5 13 13)\n5 * 13 = 65 (left: 13 13 65)\n65 / 13 = 5 (left: 13 5)",
                "13 - 7 = 6 (left: 5 6 6)\n6 - 5 = 1 (left: 1 6)\n1 + 6 = 7 (left: 7)",
                "6 + 7 = 13 (left: 5 13 13)\n9 - 3 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)",
                "13 - 7 = 6 (left: 5 6 6)\n6 - 5 = 1 (left: 1 6)\n6 - 1 = 5 (left: 5)",
                "13 - 7 = 6 (left: 5 6 6)\n6 - 5 = 1 (left: 1 6)\n9 - 3 = 6 (left: 6)"
            ],
            "values": [
                20.002,
                0.002,
                0.002,
                0.001,
                0.002
            ],
            "resampled": [
                "0 <- 5.1",
                "1 <- 9.0",
                "2 <- 6.3",
                "3 <- 6.3",
                "4 <- 5.2"
            ],
            "resampled_steps": [
                "6 + 7 = 13 (left: 5 13 13)\n5 * 13 = 65 (left: 13 13 65)",
                "6 + 7 = 13 (left: 5 13 13)\n5 * 13 = 65 (left: 13 13 65)\n65 / 13 = 5 (left: 13 5)",
                "13 - 7 = 6 (left: 5 6 6)\n6 - 5 = 1 (left: 1 6)",
                "13 - 7 = 6 (left: 5 6 6)\n6 - 5 = 1 (left: 1 6)",
                "6 + 7 = 13 (left: 5 13 13)\n9 - 3 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)"
            ]
        },
        "step_10": {
            "steps": [
                "6 + 7 = 13 (left: 5 13 13)\n5 * 13 = 65 (left: 13 13 65)\n65 - 13 = 52 (left: 13 52)",
                "6 + 7 = 13 (left: 5 13 13)\n5 * 13 = 65 (left: 13 13 65)\n65 / 13 = 5 (left: 13 5)\n13 / 5 = 2.6 (left: 2.6)",
                "13 - 7 = 6 (left: 5 6 6)\n6 - 5 = 1 (left: 1 6)\n6 * 1 = 6 (left: 6)",
                "13 - 7 = 6 (left: 5 6 6)\n6 - 5 = 1 (left: 1 6)\n1 * 6 = 6 (left: 6)",
                "6 + 7 = 13 (left: 5 13 13)\n9 - 3 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)\n36 is a complete number on its own and cannot be further simplified."
            ],
            "values": [
                20.001,
                0.0,
                0.003,
                0.003,
                0.003
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 0.6211155
    },
    "922": {
        "input": "5 5 8 10",
        "step_1": {
            "steps": [
                "10 - 8 = 2 (left: 5 2 10)",
                "8 + 5 = 13 (left: 5 10 13)",
                "5 * 5 = 25 (left: 8 10 25)",
                "16 - 4 = 12 (left: 12 16)",
                "12 + 3 = 15 (left: 7 9 15)"
            ],
            "values": [
                41.0,
                1.002,
                1.002,
                0.003,
                3.0
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- 1.4"
            ],
            "resampled_steps": [
                "",
                "",
                "",
                "",
                "12 + 3 = 15 (left: 7 9 15)"
            ]
        },
        "step_2": {
            "steps": [
                "6 + 2 = 8 (left: 4 8)",
                "5 / 5 = 1 (left: 1 8 10)",
                "5 - 5 = 0 (left: 0 5 8)",
                "5 / 5 = 1 (left: 1 8 10)",
                "12 + 3 = 15 (left: 7 9 15)\n7 + 9 = 16 (left: 16 15)"
            ],
            "values": [
                1.001,
                1.0,
                2.001,
                2.001,
                0.002
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- 1.0",
                "2 <- 1.0",
                "3 <- INIT",
                "4 <- 1.4"
            ],
            "resampled_steps": [
                "",
                "10 - 8 = 2 (left: 5 2 10)",
                "10 - 8 = 2 (left: 5 2 10)",
                "",
                "12 + 3 = 15 (left: 7 9 15)"
            ]
        },
        "step_3": {
            "steps": [
                "10 + 5 = 15 (left: 5 8 15)",
                "10 - 8 = 2 (left: 5 2 10)\n10 - 2 = 8 (left: 5 8)",
                "10 - 8 = 2 (left: 5 2 10)\n5 - 2 = 3 (left: 3 10)",
                "5 / 5 = 1 (left: 1 8 10)",
                "12 + 3 = 15 (left: 7 9 15)\n5 - 3 = 2 (left: 2 4 6)"
            ],
            "values": [
                2.001,
                0.001,
                0.003,
                2.001,
                0.003
            ],
            "resampled": [
                "0 <- 1.0",
                "1 <- INIT",
                "2 <- 3.0",
                "3 <- INIT",
                "4 <- INIT"
            ],
            "resampled_steps": [
                "10 - 8 = 2 (left: 5 2 10)",
                "",
                "10 + 5 = 15 (left: 5 8 15)",
                "",
                ""
            ]
        },
        "step_4": {
            "steps": [
                "10 - 8 = 2 (left: 5 2 10)\n6 / 4 = 1.5 (left: 1.5 12)",
                "5 + 10 = 15 (left: 8 15 10)",
                "10 + 5 = 15 (left: 5 8 15)\n15 / 5 = 3 (left: 3 8)",
                "5 * 5 = 25 (left: 8 25 10)",
                "3 + 6 = 9 (left: 9 9 12)"
            ],
            "values": [
                0.002,
                3.0,
                60.0,
                1.0,
                2.001
            ],
            "resampled": [
                "0 <- 3.3",
                "1 <- 2.3",
                "2 <- 4.2",
                "3 <- INIT",
                "4 <- 4.2"
            ],
            "resampled_steps": [
                "5 / 5 = 1 (left: 1 8 10)",
                "5 / 5 = 1 (left: 1 8 10)",
                "10 + 5 = 15 (left: 5 8 15)\n15 / 5 = 3 (left: 3 8)",
                "",
                "10 + 5 = 15 (left: 5 8 15)\n15 / 5 = 3 (left: 3 8)"
            ]
        },
        "step_5": {
            "steps": [
                "5 / 5 = 1 (left: 1 8 10)\n10 / 5 = 2 (left: 3 7 2)",
                "5 / 5 = 1 (left: 1 8 10)\n3 * 3 = 9 (left: 6 9)",
                "10 + 5 = 15 (left: 5 8 15)\n15 / 5 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)",
                "10 - 5 = 5 (left: 5 8 10)",
                "10 + 5 = 15 (left: 5 8 15)\n15 / 5 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5)"
            ],
            "values": [
                3.0,
                0.003,
                40.0,
                3.0,
                0.002
            ],
            "resampled": [
                "0 <- 5.2",
                "1 <- 5.0",
                "2 <- 5.2",
                "3 <- 4.2",
                "4 <- 4.2"
            ],
            "resampled_steps": [
                "10 + 5 = 15 (left: 5 8 15)\n15 / 5 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)",
                "5 / 5 = 1 (left: 1 8 10)\n10 / 5 = 2 (left: 3 7 2)",
                "10 + 5 = 15 (left: 5 8 15)\n15 / 5 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)",
                "10 + 5 = 15 (left: 5 8 15)\n15 / 5 = 3 (left: 3 8)",
                "10 + 5 = 15 (left: 5 8 15)\n15 / 5 = 3 (left: 3 8)"
            ]
        },
        "step_6": {
            "steps": [
                "10 + 5 = 15 (left: 5 8 15)\n15 / 5 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (10 + 5) / 5 * 8 = 24",
                "5 / 5 = 1 (left: 1 8 10)\n10 / 5 = 2 (left: 3 7 2)\nInput: 5 9 3 1",
                "10 + 5 = 15 (left: 5 8 15)\n15 / 5 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (10 + 5) / (5 - 8) = 24",
                "10 + 5 = 15 (left: 5 8 15)\n15 / 5 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5)",
                "10 + 5 = 15 (left: 5 8 15)\n15 / 5 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5)"
            ]
        },
        "results": [
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 0.6409945
    },
    "923": {
        "input": "2 4 6 12",
        "step_1": {
            "steps": [
                "12 - 6 = 6 (left: 2 4 6)",
                "2 * 4 = 8 (left: 6 8 12)",
                "12 / 2 = 6 (left: 2 6 12)",
                "12 - 6 = 6 (left: 2 4 6)",
                "6 * 2 = 12 (left: 4 12 12)"
            ],
            "values": [
                1.002,
                3.0,
                2.001,
                1.002,
                20.002
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- 1.4",
                "3 <- INIT",
                "4 <- 1.4"
            ],
            "resampled_steps": [
                "",
                "",
                "6 * 2 = 12 (left: 4 12 12)",
                "",
                "6 * 2 = 12 (left: 4 12 12)"
            ]
        },
        "step_2": {
            "steps": [
                "6 * 2 = 12 (left: 4 12 12)",
                "12 - 4 = 8 (left: 2 6 8)",
                "6 * 2 = 12 (left: 4 12 12)\n12 / 4 = 3 (left: 3 12)",
                "12 / 2 = 6 (left: 2 6 12)",
                "6 * 2 = 12 (left: 4 12 12)\n4 * 12 = 48 (left: 12 48)"
            ],
            "values": [
                21.001,
                1.002,
                20.001,
                2.001,
                0.001
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- 2.2",
                "2 <- 2.0",
                "3 <- 2.2",
                "4 <- INIT"
            ],
            "resampled_steps": [
                "",
                "6 * 2 = 12 (left: 4 12 12)\n12 / 4 = 3 (left: 3 12)",
                "6 * 2 = 12 (left: 4 12 12)",
                "6 * 2 = 12 (left: 4 12 12)\n12 / 4 = 3 (left: 3 12)",
                ""
            ]
        },
        "step_3": {
            "steps": [
                "12 - 6 = 6 (left: 2 6 12)",
                "6 * 2 = 12 (left: 4 12 12)\n12 / 4 = 3 (left: 3 12)\n3 * 12 = 36 (left: 36)",
                "6 * 2 = 12 (left: 4 12 12)\n12 / 4 = 3 (left: 3 12 12)",
                "6 * 2 = 12 (left: 4 12 12)\n12 / 4 = 3 (left: 3 12)\n3 + 12 = 15 (left: 15)",
                "12 / 2 = 6 (left: 2 4 6)"
            ],
            "values": [
                0.003,
                60.0,
                40.001,
                0.002,
                1.002
            ],
            "resampled": [
                "0 <- 3.1",
                "1 <- 3.2",
                "2 <- 1.4",
                "3 <- 3.1",
                "4 <- 2.0"
            ],
            "resampled_steps": [
                "6 * 2 = 12 (left: 4 12 12)\n12 / 4 = 3 (left: 3 12)\n3 * 12 = 36 (left: 36)",
                "6 * 2 = 12 (left: 4 12 12)\n12 / 4 = 3 (left: 3 12 12)",
                "6 * 2 = 12 (left: 4 12 12)",
                "6 * 2 = 12 (left: 4 12 12)\n12 / 4 = 3 (left: 3 12)\n3 * 12 = 36 (left: 36)",
                "6 * 2 = 12 (left: 4 12 12)"
            ]
        },
        "step_4": {
            "steps": [
                "6 * 2 = 12 (left: 4 12 12)\n12 / 4 = 3 (left: 3 12)\n3 * 12 = 36 (left: 36)\n36 - 2 = 34",
                "6 * 2 = 12 (left: 4 12 12)\n12 / 4 = 3 (left: 3 12 12)\nInput: 4 15 4",
                "6 * 2 = 12 (left: 4 12 12)\n12 - 4 = 8 (left: 8 12)",
                "6 * 2 = 12 (left: 4 12 12)\n12 / 4 = 3 (left: 3 12)\n3 * 12 = 36 (left: 36)\n36 / 2 = 18",
                "6 * 2 = 12 (left: 4 12 12)\n4 + 12 = 16 (left: 12 16)"
            ],
            "values": [
                0.003,
                0.003,
                1.002,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 3.1",
                "1 <- INIT",
                "2 <- 3.2",
                "3 <- 3.2",
                "4 <- 3.2"
            ],
            "resampled_steps": [
                "6 * 2 = 12 (left: 4 12 12)\n12 / 4 = 3 (left: 3 12)\n3 * 12 = 36 (left: 36)",
                "",
                "6 * 2 = 12 (left: 4 12 12)\n12 / 4 = 3 (left: 3 12 12)",
                "6 * 2 = 12 (left: 4 12 12)\n12 / 4 = 3 (left: 3 12 12)",
                "6 * 2 = 12 (left: 4 12 12)\n12 / 4 = 3 (left: 3 12 12)"
            ]
        },
        "step_5": {
            "steps": [
                "6 * 2 = 12 (left: 4 12 12)\n12 / 4 = 3 (left: 3 12)\n3 * 12 = 36 (left: 36)\n36 / 2 = 18",
                "6 * 2 = 12 (left: 4 6 12)",
                "6 * 2 = 12 (left: 4 12 12)\n12 / 4 = 3 (left: 3 12 12)\n12 / 3 = 4 (left: 4 12)",
                "6 * 2 = 12 (left: 4 12 12)\n12 / 4 = 3 (left: 3 12 12)\n12 / 3 = 4 (left: 4 12)",
                "6 * 2 = 12 (left: 4 12 12)\n12 / 4 = 3 (left: 3 12 12)\n9 / 4 = 2.25 (left: 2.25 9)"
            ],
            "values": [
                0.003,
                60.0,
                0.003,
                0.003,
                3.0
            ],
            "resampled": [
                "0 <- 1.4",
                "1 <- 3.2",
                "2 <- 3.1",
                "3 <- 5.1",
                "4 <- 3.2"
            ],
            "resampled_steps": [
                "6 * 2 = 12 (left: 4 12 12)",
                "6 * 2 = 12 (left: 4 12 12)\n12 / 4 = 3 (left: 3 12 12)",
                "6 * 2 = 12 (left: 4 12 12)\n12 / 4 = 3 (left: 3 12)\n3 * 12 = 36 (left: 36)",
                "6 * 2 = 12 (left: 4 6 12)",
                "6 * 2 = 12 (left: 4 12 12)\n12 / 4 = 3 (left: 3 12 12)"
            ]
        },
        "step_6": {
            "steps": [
                "6 * 2 = 12 (left: 4 12 12)\n12 - 4 = 8 (left: 8)",
                "6 * 2 = 12 (left: 4 12 12)\n12 / 4 = 3 (left: 3 12 12)\n12 - 3 = 9 (left: 9 12)",
                "6 * 2 = 12 (left: 4 12 12)\n12 / 4 = 3 (left: 3 12)\n3 * 12 = 36 (left: 36)\nThere are no possible next steps for the number 36 as it is a single number.",
                "6 * 2 = 12 (left: 4 6 12)\n4 + 6 = 10 (left: 10 12)",
                "6 * 2 = 12 (left: 4 12 12)\n12 / 4 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 36)"
            ],
            "values": [
                0.003,
                0.003,
                0.003,
                0.002,
                0.002
            ],
            "resampled": [
                "0 <- 5.1",
                "1 <- 3.2",
                "2 <- 3.1",
                "3 <- 3.2",
                "4 <- 5.1"
            ],
            "resampled_steps": [
                "6 * 2 = 12 (left: 4 6 12)",
                "6 * 2 = 12 (left: 4 12 12)\n12 / 4 = 3 (left: 3 12 12)",
                "6 * 2 = 12 (left: 4 12 12)\n12 / 4 = 3 (left: 3 12)\n3 * 12 = 36 (left: 36)",
                "6 * 2 = 12 (left: 4 12 12)\n12 / 4 = 3 (left: 3 12 12)",
                "6 * 2 = 12 (left: 4 6 12)"
            ]
        },
        "step_7": {
            "steps": [
                "6 * 2 = 12 (left: 4 6 12)\n4 + 6 = 10 (left: 10 12)",
                "6 * 2 = 12 (left: 4 12 12)\n12 / 4 = 3 (left: 3 12 12)\n3 + 12 = 15 (left: 12 15)",
                "6 * 2 = 12 (left: 4 12 12)\n12 / 4 = 3 (left: 3 12)\n3 * 12 = 36 (left: 36)\nNone, since there is only one number provided.",
                "6 * 2 = 12 (left: 4 12 12)\n12 / 4 = 3 (left: 3 12 12)\n12 / 3 = 4 (left: 4 12)",
                "6 * 2 = 12 (left: 4 6 12)\n12 / 4 = 3 (left: 3 6 12)"
            ],
            "values": [
                0.002,
                0.003,
                0.003,
                0.003,
                0.002
            ],
            "resampled": [
                "0 <- 5.1",
                "1 <- 3.1",
                "2 <- 3.2",
                "3 <- 3.2",
                "4 <- 2.2"
            ],
            "resampled_steps": [
                "6 * 2 = 12 (left: 4 6 12)",
                "6 * 2 = 12 (left: 4 12 12)\n12 / 4 = 3 (left: 3 12)\n3 * 12 = 36 (left: 36)",
                "6 * 2 = 12 (left: 4 12 12)\n12 / 4 = 3 (left: 3 12 12)",
                "6 * 2 = 12 (left: 4 12 12)\n12 / 4 = 3 (left: 3 12 12)",
                "6 * 2 = 12 (left: 4 12 12)\n12 / 4 = 3 (left: 3 12)"
            ]
        },
        "step_8": {
            "steps": [
                "6 * 2 = 12 (left: 4 6 12)\n12 - 6 = 6 (left: 4 6)",
                "6 * 2 = 12 (left: 4 12 12)\n12 / 4 = 3 (left: 3 12)\n3 * 12 = 36 (left: 36)\n36 / 2 = 18",
                "6 * 2 = 12 (left: 4 12 12)\n12 / 4 = 3 (left: 3 12 12)\n12 - 3 = 9 (left: 9 12)",
                "6 * 2 = 12 (left: 4 12 12)\n12 / 4 = 3 (left: 3 12 12)\n12 - 3 = 9 (left: 9 12)",
                "6 * 2 = 12 (left: 4 12 12)\n12 / 4 = 3 (left: 3 12)\n12 / 3 = 4 (left: 4 12)"
            ],
            "values": [
                40.0,
                0.003,
                0.003,
                0.003,
                20.002
            ],
            "resampled": [
                "0 <- 8.4",
                "1 <- 8.4",
                "2 <- 8.0",
                "3 <- 8.4",
                "4 <- 8.0"
            ],
            "resampled_steps": [
                "6 * 2 = 12 (left: 4 12 12)\n12 / 4 = 3 (left: 3 12)\n12 / 3 = 4 (left: 4 12)",
                "6 * 2 = 12 (left: 4 12 12)\n12 / 4 = 3 (left: 3 12)\n12 / 3 = 4 (left: 4 12)",
                "6 * 2 = 12 (left: 4 6 12)\n12 - 6 = 6 (left: 4 6)",
                "6 * 2 = 12 (left: 4 12 12)\n12 / 4 = 3 (left: 3 12)\n12 / 3 = 4 (left: 4 12)",
                "6 * 2 = 12 (left: 4 6 12)\n12 - 6 = 6 (left: 4 6)"
            ]
        },
        "step_9": {
            "steps": [
                "6 * 2 = 12 (left: 4 12 12)\n12 / 4 = 3 (left: 3 12)\n12 / 3 = 4 (left: 4 12)\n12 - 4 = 8 (left: 8 12)",
                "6 * 2 = 12 (left: 4 12 12)\n12 / 4 = 3 (left: 3 12)\n12 / 3 = 4 (left: 4 12)\n4 * 12 = 48 (left: 48)",
                "6 * 2 = 12 (left: 4 6 12)\n12 - 6 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "6 * 2 = 12 (left: 4 12 12)\n12 / 4 = 3 (left: 3 12)\n12 / 3 = 4 (left: 4 12)\n12 / 4 = 3 (left: 3 12)",
                "6 * 2 = 12 (left: 4 6 12)\n12 - 6 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)"
            ],
            "values": [
                0.002,
                0.003,
                40.0,
                20.001,
                60.0
            ],
            "resampled": [
                "0 <- 8.0",
                "1 <- 9.4",
                "2 <- 9.4",
                "3 <- 9.4",
                "4 <- 9.3"
            ],
            "resampled_steps": [
                "6 * 2 = 12 (left: 4 6 12)\n12 - 6 = 6 (left: 4 6)",
                "6 * 2 = 12 (left: 4 6 12)\n12 - 6 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "6 * 2 = 12 (left: 4 6 12)\n12 - 6 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "6 * 2 = 12 (left: 4 6 12)\n12 - 6 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "6 * 2 = 12 (left: 4 12 12)\n12 / 4 = 3 (left: 3 12)\n12 / 3 = 4 (left: 4 12)\n12 / 4 = 3 (left: 3 12)"
            ]
        },
        "step_10": {
            "steps": [
                "6 * 2 = 12 (left: 4 6 12)\n12 - 6 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)",
                "6 * 2 = 12 (left: 4 6 12)\n12 - 6 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (6 * 2) * (12 - 6) = 24",
                "6 * 2 = 12 (left: 4 6 12)\n12 - 6 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * (6 * (12 - 6)) = 24",
                "6 * 2 = 12 (left: 4 6 12)\n12 - 6 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (6 * 2) * (12 - 6) = 24",
                "6 * 2 = 12 (left: 4 12 12)\n12 / 4 = 3 (left: 3 12)\n12 / 3 = 4 (left: 4 12)\n12 / 4 = 3 (left: 3 12)\n12 - 3 = 9 (left: 9)"
            ],
            "values": [
                0.001,
                60.0,
                60.0,
                60.0,
                0.002
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 0.664547
    },
    "924": {
        "input": "6 7 8 11",
        "step_1": {
            "steps": [
                "6 + 7 = 13 (left: 8 11 13)",
                "6 - 7 = -1 (left: -1 8 11)",
                "11 / 6 = 1.83 (rounded to 2) (left: 2 7 8)",
                "7 - 5 = 2 (left: 1 2 6)",
                "7 - 6 = 1 (left: 1 8 11)"
            ],
            "values": [
                2.001,
                1.001,
                2.001,
                1.002,
                2.001
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- 1.3",
                "4 <- INIT"
            ],
            "resampled_steps": [
                "",
                "",
                "",
                "7 - 5 = 2 (left: 1 2 6)",
                ""
            ]
        },
        "step_2": {
            "steps": [
                "7 * 8 = 56 (left: 6 11 56)",
                "6 * 7 = 42 (left: 8 11 42)",
                "11 - 8 = 3 (left: 6 7 3)",
                "7 - 5 = 2 (left: 1 2 6)\n10 / 7 = 1.43 (left: 4 1.43)",
                "7 * 8 = 56 (left: 6 11 56)"
            ],
            "values": [
                2.001,
                2.001,
                21.001,
                0.001,
                3.0
            ],
            "resampled": [
                "0 <- 2.4",
                "1 <- 2.4",
                "2 <- INIT",
                "3 <- 2.2",
                "4 <- 1.3"
            ],
            "resampled_steps": [
                "7 * 8 = 56 (left: 6 11 56)",
                "7 * 8 = 56 (left: 6 11 56)",
                "",
                "11 - 8 = 3 (left: 6 7 3)",
                "7 - 5 = 2 (left: 1 2 6)"
            ]
        },
        "step_3": {
            "steps": [
                "7 * 8 = 56 (left: 6 11 56)\n11 - 6 = 5 (left: 5 11 56)",
                "7 * 8 = 56 (left: 6 11 56)\n6 - 11 = -5 (left: -5 56)",
                "8 - 6 = 2 (left: 2 7 11)",
                "11 - 8 = 3 (left: 6 7 3)\n7 + 3 = 10 (left: 6 10)",
                "7 - 5 = 2 (left: 1 2 6)\n8 + 16 = 24 (left: 4 24)"
            ],
            "values": [
                1.002,
                0.0,
                1.002,
                0.002,
                40.0
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- 3.4",
                "2 <- 2.2",
                "3 <- 2.1",
                "4 <- 2.2"
            ],
            "resampled_steps": [
                "",
                "7 - 5 = 2 (left: 1 2 6)\n8 + 16 = 24 (left: 4 24)",
                "11 - 8 = 3 (left: 6 7 3)",
                "6 * 7 = 42 (left: 8 11 42)",
                "11 - 8 = 3 (left: 6 7 3)"
            ]
        },
        "step_4": {
            "steps": [
                "7 + 8 = 15 (left: 6 11 15)",
                "7 - 5 = 2 (left: 1 2 6)\n8 + 16 = 24 (left: 4 24)\nInput: 3 9",
                "11 - 8 = 3 (left: 6 7 3)\n1.1666666666666667 / 0.5 = 2.3333333333333335 (left: 2.3333333333333335 18)",
                "6 * 7 = 42 (left: 8 11 42)\n42 - 8 = 34 (left: 34)",
                "11 - 8 = 3 (left: 6 7 3)\n7 - 3 = 4 (left: 6 4)"
            ],
            "values": [
                0.003,
                0.003,
                2.001,
                0.003,
                60.0
            ],
            "resampled": [
                "0 <- 1.4",
                "1 <- 4.4",
                "2 <- 1.1",
                "3 <- 4.4",
                "4 <- 4.4"
            ],
            "resampled_steps": [
                "7 - 6 = 1 (left: 1 8 11)",
                "11 - 8 = 3 (left: 6 7 3)\n7 - 3 = 4 (left: 6 4)",
                "6 - 7 = -1 (left: -1 8 11)",
                "11 - 8 = 3 (left: 6 7 3)\n7 - 3 = 4 (left: 6 4)",
                "11 - 8 = 3 (left: 6 7 3)\n7 - 3 = 4 (left: 6 4)"
            ]
        },
        "step_5": {
            "steps": [
                "7 - 6 = 1 (left: 1 8 11)\n11 - 1 = 10 (left: 8 10)",
                "11 - 8 = 3 (left: 6 7 3)\n7 - 3 = 4 (left: 6 4)\n6 * 4 = 24 (left: 24)",
                "6 - 7 = -1 (left: -1 8 11)\n5 * 10 = 50 (left: 50 5 20)",
                "11 - 8 = 3 (left: 6 7 3)\n7 - 3 = 4 (left: 6 4)\n6 * 4 = 24 (left: 24)",
                "11 - 8 = 3 (left: 6 7 3)\n7 - 3 = 4 (left: 6 4)\n6 * 4 = 24 (left: 24)"
            ],
            "values": [
                22.0,
                60.0,
                1.0,
                60.0,
                60.0
            ],
            "resampled": [
                "0 <- 5.1",
                "1 <- 3.4",
                "2 <- 5.4",
                "3 <- 5.1",
                "4 <- 5.3"
            ],
            "resampled_steps": [
                "11 - 8 = 3 (left: 6 7 3)\n7 - 3 = 4 (left: 6 4)\n6 * 4 = 24 (left: 24)",
                "7 - 5 = 2 (left: 1 2 6)\n8 + 16 = 24 (left: 4 24)",
                "11 - 8 = 3 (left: 6 7 3)\n7 - 3 = 4 (left: 6 4)\n6 * 4 = 24 (left: 24)",
                "11 - 8 = 3 (left: 6 7 3)\n7 - 3 = 4 (left: 6 4)\n6 * 4 = 24 (left: 24)",
                "11 - 8 = 3 (left: 6 7 3)\n7 - 3 = 4 (left: 6 4)\n6 * 4 = 24 (left: 24)"
            ]
        },
        "step_6": {
            "steps": [
                "11 - 8 = 3 (left: 6 7 3)\n7 - 3 = 4 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: 6 * (7 - (11 - 8)) = 24",
                "7 - 5 = 2 (left: 1 2 6)\n8 + 16 = 24 (left: 4 24)\n4 * 6 = 24 (left: 24)",
                "11 - 8 = 3 (left: 6 7 3)\n7 - 3 = 4 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: 6 * (7 - (11 - 8)) = 24",
                "11 - 8 = 3 (left: 6 7 3)\n7 - 3 = 4 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: 6 * (7 - (11 - 8)) = 24",
                "11 - 8 = 3 (left: 6 7 3)\n7 - 3 = 4 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: 6 * (7 - (11 - 8)) = 24"
            ]
        },
        "results": [
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            }
        ],
        "cost": 0.6835285
    },
    "925": {
        "input": "7 9 9 13",
        "step_1": {
            "steps": [
                "9 / 7 = 1 (left: 1 9 13)",
                "13 - 7 = 6 (left: 7 9 6)",
                "13 + 7 = 20 (left: 9 9 20)",
                "9 / 7 = 1 (left: 1 9 13)",
                "7 * 9 = 63 (left: 9 13 63)"
            ],
            "values": [
                1.002,
                3.0,
                0.003,
                1.002,
                2.0
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- 1.1",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- INIT"
            ],
            "resampled_steps": [
                "",
                "13 - 7 = 6 (left: 7 9 6)",
                "",
                "",
                ""
            ]
        },
        "step_2": {
            "steps": [
                "13 - 9 = 4 (left: 7 9 4)",
                "13 - 7 = 6 (left: 7 9 6)\n1.5 * 6 = 9 (left: 9 8)",
                "13 / 7 = 1.8571428571428572 (left: 1.8571428571428572 9 13)",
                "9 / 7 = 1 (left: 1 9 13)",
                "13 - 9 = 4 (left: 7 9 4)"
            ],
            "values": [
                3.0,
                0.003,
                60.0,
                3.0,
                2.001
            ],
            "resampled": [
                "0 <- 2.2",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- 2.2",
                "4 <- 2.2"
            ],
            "resampled_steps": [
                "13 / 7 = 1.8571428571428572 (left: 1.8571428571428572 9 13)",
                "",
                "",
                "13 / 7 = 1.8571428571428572 (left: 1.8571428571428572 9 13)",
                "13 / 7 = 1.8571428571428572 (left: 1.8571428571428572 9 13)"
            ]
        },
        "step_3": {
            "steps": [
                "13 / 7 = 1.8571428571428572 (left: 1.8571428571428572 9 13)\n1.8571428571428572 * 9 = 16.714285714285715 (left: 16.714285714285715 13)",
                "7 + 9 = 16 (left: 9 9 13)",
                "9 / 7 = 1.2857 (approximate) (left: 7 1.2857 13)",
                "13 / 7 = 1.8571428571428572 (left: 1.8571428571428572 9 13)\n13 - 9 = 4 (left: 1.8571428571428572 4)",
                "13 / 7 = 1.8571428571428572 (left: 1.8571428571428572 9 13)\n13 - 9 = 4 (left: 4 13)"
            ],
            "values": [
                2.001,
                1.002,
                3.0,
                2.001,
                0.001
            ],
            "resampled": [
                "0 <- 2.0",
                "1 <- 3.2",
                "2 <- 2.2",
                "3 <- 2.2",
                "4 <- 2.2"
            ],
            "resampled_steps": [
                "13 - 9 = 4 (left: 7 9 4)",
                "9 / 7 = 1.2857 (approximate) (left: 7 1.2857 13)",
                "13 / 7 = 1.8571428571428572 (left: 1.8571428571428572 9 13)",
                "13 / 7 = 1.8571428571428572 (left: 1.8571428571428572 9 13)",
                "13 / 7 = 1.8571428571428572 (left: 1.8571428571428572 9 13)"
            ]
        },
        "step_4": {
            "steps": [
                "13 - 9 = 4 (left: 7 9 4)\n9 / 7 = 1.2857 (left: 1.2857 4)",
                "9 / 7 = 1.2857 (approximate) (left: 7 1.2857 13)\n13 - 7 = 6 (left: 6 1.2857)",
                "13 / 7 = 1.8571428571428572 (left: 1.8571428571428572 9 13)\nPossible next steps:",
                "13 / 7 = 1.8571428571428572 (left: 1.8571428571428572 9 13)\n13 - 1.8571428571428572 = 11.142857142857143 (left: 11.142857142857143 9)",
                "13 / 7 = 1.8571428571428572 (left: 1.8571428571428572 9 13)\n13 - 9 = 4 (left: 1.8571428571428572 4)"
            ],
            "values": [
                0.001,
                3.0,
                0.003,
                2.001,
                1.002
            ],
            "resampled": [
                "0 <- 2.2",
                "1 <- INIT",
                "2 <- 2.2",
                "3 <- 4.4",
                "4 <- 2.2"
            ],
            "resampled_steps": [
                "13 / 7 = 1.8571428571428572 (left: 1.8571428571428572 9 13)",
                "",
                "13 / 7 = 1.8571428571428572 (left: 1.8571428571428572 9 13)",
                "13 / 7 = 1.8571428571428572 (left: 1.8571428571428572 9 13)\n13 - 9 = 4 (left: 1.8571428571428572 4)",
                "13 / 7 = 1.8571428571428572 (left: 1.8571428571428572 9 13)"
            ]
        },
        "step_5": {
            "steps": [
                "13 / 7 = 1.8571428571428572 (left: 1.8571428571428572 9 13)\n1.8571428571428572 / 9 = 0.20634920634920636 (left: 0.20634920634920636 9 13)",
                "9 / 7 = 1.2857 (left: 1.2857 9 13)",
                "13 / 7 = 1.8571428571428572 (left: 1.8571428571428572 9 13)\n9 - 1.8571428571428572 = 7.142857142857143 (left: 7.142857142857143 13)",
                "13 / 7 = 1.8571428571428572 (left: 1.8571428571428572 9 13)\n13 - 9 = 4 (left: 1.8571428571428572 4)\n4 / 1.8571428571428572 = 2.1538461538461537 (left: 2.1538461538461537 4)",
                "13 / 7 = 1.8571428571428572 (left: 1.8571428571428572 9 13)\n13 - 9 = 4 (left: 1.8571428571428572 4 13)"
            ],
            "values": [
                40.0,
                2.001,
                2.001,
                1.001,
                41.0
            ],
            "resampled": [
                "0 <- 2.2",
                "1 <- 5.4",
                "2 <- 5.4",
                "3 <- 5.4",
                "4 <- 1.4"
            ],
            "resampled_steps": [
                "13 / 7 = 1.8571428571428572 (left: 1.8571428571428572 9 13)",
                "13 / 7 = 1.8571428571428572 (left: 1.8571428571428572 9 13)\n13 - 9 = 4 (left: 1.8571428571428572 4 13)",
                "13 / 7 = 1.8571428571428572 (left: 1.8571428571428572 9 13)\n13 - 9 = 4 (left: 1.8571428571428572 4 13)",
                "13 / 7 = 1.8571428571428572 (left: 1.8571428571428572 9 13)\n13 - 9 = 4 (left: 1.8571428571428572 4 13)",
                "7 * 9 = 63 (left: 9 13 63)"
            ]
        },
        "step_6": {
            "steps": [
                "13 / 7 = 1.8571428571428572 (left: 1.8571428571428572 9 13)\n1.8571428571428572 + 9 = 10.857142857142857 (left: 10.857142857142857 13)",
                "13 / 7 = 1.8571428571428572 (left: 1.8571428571428572 9 13)\n13 - 9 = 4 (left: 1.8571428571428572 4 13)\n1 + 3 = 4 (left: 4 5 7)",
                "13 / 7 = 1.8571428571428572 (left: 1.8571428571428572 9 13)\n13 - 9 = 4 (left: 1.8571428571428572 4 13)\n4 + 13 = 17 (left: 1.8571428571428572 17)",
                "13 / 7 = 1.8571428571428572 (left: 1.8571428571428572 9 13)\n13 - 9 = 4 (left: 1.8571428571428572 4 13)\nInput: 3 5 10",
                "7 * 9 = 63 (left: 9 13 63)\n63 - 13 = 50 (left: 9 50)"
            ],
            "values": [
                0.001,
                1.002,
                1.0,
                0.003,
                0.002
            ],
            "resampled": [
                "0 <- 5.4",
                "1 <- 5.0",
                "2 <- 5.4",
                "3 <- 5.0",
                "4 <- 5.0"
            ],
            "resampled_steps": [
                "13 / 7 = 1.8571428571428572 (left: 1.8571428571428572 9 13)\n13 - 9 = 4 (left: 1.8571428571428572 4 13)",
                "13 / 7 = 1.8571428571428572 (left: 1.8571428571428572 9 13)\n1.8571428571428572 / 9 = 0.20634920634920636 (left: 0.20634920634920636 9 13)",
                "13 / 7 = 1.8571428571428572 (left: 1.8571428571428572 9 13)\n13 - 9 = 4 (left: 1.8571428571428572 4 13)",
                "13 / 7 = 1.8571428571428572 (left: 1.8571428571428572 9 13)\n1.8571428571428572 / 9 = 0.20634920634920636 (left: 0.20634920634920636 9 13)",
                "13 / 7 = 1.8571428571428572 (left: 1.8571428571428572 9 13)\n1.8571428571428572 / 9 = 0.20634920634920636 (left: 0.20634920634920636 9 13)"
            ]
        },
        "step_7": {
            "steps": [
                "13 / 7 = 1.8571428571428572 (left: 1.8571428571428572 9 13)\n13 - 9 = 4 (left: 1.8571428571428572 4 13)\n1.8571428571428572 * 13 = 24.142857142857146 (left: 24.142857142857146)",
                "13 / 7 = 1.8571428571428572 (left: 1.8571428571428572 9 13)\n1.8571428571428572 / 9 = 0.20634920634920636 (left: 0.20634920634920636 9 13)\n5 * 2.5 = 12.5 (left: 12.5 3 1)",
                "13 / 7 = 1.8571428571428572 (left: 1.8571428571428572 9 13)\n13 - 9 = 4 (left: 1.8571428571428572 4 13)\n5 + 10.5 = 15.5 (left: 2.5 15.5)",
                "13 / 7 = 1.8571428571428572 (left: 1.8571428571428572 9 13)\n1.8571428571428572 / 9 = 0.20634920634920636 (left: 0.20634920634920636 9 13)\n5 - 3 = 2 (left: 2 7 9)",
                "13 / 7 = 1.8571428571428572 (left: 1.8571428571428572 9 13)\n1.8571428571428572 / 9 = 0.20634920634920636 (left: 0.20634920634920636 9 13)\n3 - 5 = -2 (left: -2 3 7 9)"
            ],
            "values": [
                0.003,
                2.0,
                1.002,
                2.001,
                3.0
            ],
            "resampled": [
                "0 <- 5.4",
                "1 <- 5.4",
                "2 <- 5.2",
                "3 <- 5.4",
                "4 <- 5.0"
            ],
            "resampled_steps": [
                "13 / 7 = 1.8571428571428572 (left: 1.8571428571428572 9 13)\n13 - 9 = 4 (left: 1.8571428571428572 4 13)",
                "13 / 7 = 1.8571428571428572 (left: 1.8571428571428572 9 13)\n13 - 9 = 4 (left: 1.8571428571428572 4 13)",
                "13 / 7 = 1.8571428571428572 (left: 1.8571428571428572 9 13)\n9 - 1.8571428571428572 = 7.142857142857143 (left: 7.142857142857143 13)",
                "13 / 7 = 1.8571428571428572 (left: 1.8571428571428572 9 13)\n13 - 9 = 4 (left: 1.8571428571428572 4 13)",
                "13 / 7 = 1.8571428571428572 (left: 1.8571428571428572 9 13)\n1.8571428571428572 / 9 = 0.20634920634920636 (left: 0.20634920634920636 9 13)"
            ]
        },
        "step_8": {
            "steps": [
                "13 / 7 = 1.8571428571428572 (left: 1.8571428571428572 9 13)\n13 - 9 = 4 (left: 1.8571428571428572 4 13)\n5 * 2 = 10 (left: 3 10 9)",
                "13 / 7 = 1.8571428571428572 (left: 1.8571428571428572 9 13)\n13 - 9 = 4 (left: 1.8571428571428572 4 13)\n9 - 6 = 3 (left: 2 3 11.75)",
                "13 / 7 = 1.8571428571428572 (left: 1.8571428571428572 9 13)\n9 - 1.8571428571428572 = 7.142857142857143 (left: 7.142857142857143 13)\n13 / 7.142857142857143 = 1.8181818181818181 (left: 1.8181818181818181)",
                "13 / 7 = 1.8571428571428572 (left: 1.8571428571428572 9 13)\n13 - 9 = 4 (left: 1.8571428571428572 4 13)\n1.8571428571428572 * 4 = 7.428571428571429 (left: 7.428571428571429 13)",
                "13 / 7 = 1.8571428571428572 (left: 1.8571428571428572 9 13)\n1.8571428571428572 / 9 = 0.20634920634920636 (left: 0.20634920634920636 9 13)\n9 * 13 = 117 (left: 0.20634920634920636 117)"
            ],
            "values": [
                3.0,
                3.0,
                0.003,
                2.001,
                22.0
            ],
            "resampled": [
                "0 <- 7.3",
                "1 <- 8.1",
                "2 <- 5.4",
                "3 <- INIT",
                "4 <- 8.4"
            ],
            "resampled_steps": [
                "13 / 7 = 1.8571428571428572 (left: 1.8571428571428572 9 13)\n1.8571428571428572 / 9 = 0.20634920634920636 (left: 0.20634920634920636 9 13)\n5 - 3 = 2 (left: 2 7 9)",
                "13 / 7 = 1.8571428571428572 (left: 1.8571428571428572 9 13)\n13 - 9 = 4 (left: 1.8571428571428572 4 13)\n9 - 6 = 3 (left: 2 3 11.75)",
                "13 / 7 = 1.8571428571428572 (left: 1.8571428571428572 9 13)\n13 - 9 = 4 (left: 1.8571428571428572 4 13)",
                "",
                "13 / 7 = 1.8571428571428572 (left: 1.8571428571428572 9 13)\n1.8571428571428572 / 9 = 0.20634920634920636 (left: 0.20634920634920636 9 13)\n9 * 13 = 117 (left: 0.20634920634920636 117)"
            ]
        },
        "step_9": {
            "steps": [
                "13 / 7 = 1.8571428571428572 (left: 1.8571428571428572 9 13)\n1.8571428571428572 / 9 = 0.20634920634920636 (left: 0.20634920634920636 9 13)\n5 - 3 = 2 (left: 2 7 9)\n9 + 14 = 23 (left: 23 9)",
                "13 / 7 = 1.8571428571428572 (left: 1.8571428571428572 9 13)\n13 - 9 = 4 (left: 1.8571428571428572 4 13)\n9 - 6 = 3 (left: 2 3 11.75)\n11.75 - 3 = 8.75 (left: 2 8.75)",
                "13 / 7 = 1.8571428571428572 (left: 1.8571428571428572 9 13)\n13 - 9 = 4 (left: 1.8571428571428572 4 13)\n4 * 1.8571428571428572 = 7.428571428571428 (left: 7.428571428571428 13)",
                "13 - 9 = 4 (left: 7 4 13)",
                "13 / 7 = 1.8571428571428572 (left: 1.8571428571428572 9 13)\n1.8571428571428572 / 9 = 0.20634920634920636 (left: 0.20634920634920636 9 13)\n9 * 13 = 117 (left: 0.20634920634920636 117)\n117 / 0.20634920634920636 = 567.0 (left: 567.0)"
            ],
            "values": [
                0.003,
                1.002,
                3.0,
                60.0,
                0.003
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- 8.3",
                "2 <- 7.3",
                "3 <- 8.4",
                "4 <- 5.0"
            ],
            "resampled_steps": [
                "",
                "13 / 7 = 1.8571428571428572 (left: 1.8571428571428572 9 13)\n13 - 9 = 4 (left: 1.8571428571428572 4 13)\n1.8571428571428572 * 4 = 7.428571428571429 (left: 7.428571428571429 13)",
                "13 / 7 = 1.8571428571428572 (left: 1.8571428571428572 9 13)\n1.8571428571428572 / 9 = 0.20634920634920636 (left: 0.20634920634920636 9 13)\n5 - 3 = 2 (left: 2 7 9)",
                "13 / 7 = 1.8571428571428572 (left: 1.8571428571428572 9 13)\n1.8571428571428572 / 9 = 0.20634920634920636 (left: 0.20634920634920636 9 13)\n9 * 13 = 117 (left: 0.20634920634920636 117)",
                "13 / 7 = 1.8571428571428572 (left: 1.8571428571428572 9 13)\n1.8571428571428572 / 9 = 0.20634920634920636 (left: 0.20634920634920636 9 13)"
            ]
        },
        "step_10": {
            "steps": [
                "9 / 7 = 1.2857 (left: 1.2857 9 13)",
                "13 / 7 = 1.8571428571428572 (left: 1.8571428571428572 9 13)\n13 - 9 = 4 (left: 1.8571428571428572 4 13)\n1.8571428571428572 * 4 = 7.428571428571429 (left: 7.428571428571429 13)\n7.428571428571429 - 13 = -5.571428571428571 (left: -5.571428571428571 13)",
                "13 / 7 = 1.8571428571428572 (left: 1.8571428571428572 9 13)\n1.8571428571428572 / 9 = 0.20634920634920636 (left: 0.20634920634920636 9 13)\n5 - 3 = 2 (left: 2 7 9)\n9 / 7 = 1.28571428571 (left: 1.28571428571 9)",
                "13 / 7 = 1.8571428571428572 (left: 1.8571428571428572 9 13)\n1.8571428571428572 / 9 = 0.20634920634920636 (left: 0.20634920634920636 9 13)\n9 * 13 = 117 (left: 0.20634920634920636 117)\n0.20634920634920636 + 117 = 117.2063492063492 (left: 117.2063492063492)",
                "13 / 7 = 1.8571428571428572 (left: 1.8571428571428572 9 13)\n1.8571428571428572 / 9 = 0.20634920634920636 (left: 0.20634920634920636 9 13)\n0.20634920634920636 + 9 = 9.206349206349206 (left: 9.206349206349206 13)"
            ],
            "values": [
                1.002,
                2.0,
                1.001,
                0.0,
                1.002
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 0.721465
    },
    "926": {
        "input": "3 6 9 12",
        "step_1": {
            "steps": [
                "3 * 9 = 27 (left: 6 12 27)",
                "9 * 3 = 27 (left: 6 9 27)",
                "12 / 3 = 4 (left: 4 6 12)",
                "9 - 3 = 6 (left: 6 6 12)",
                "9 + 3 = 12 (left: 6 9 12)"
            ],
            "values": [
                1.002,
                41.0,
                60.0,
                60.0,
                41.0
            ],
            "resampled": [
                "0 <- 1.2",
                "1 <- 1.3",
                "2 <- 1.3",
                "3 <- 1.2",
                "4 <- 1.3"
            ],
            "resampled_steps": [
                "12 / 3 = 4 (left: 4 6 12)",
                "9 - 3 = 6 (left: 6 6 12)",
                "9 - 3 = 6 (left: 6 6 12)",
                "12 / 3 = 4 (left: 4 6 12)",
                "9 - 3 = 6 (left: 6 6 12)"
            ]
        },
        "step_2": {
            "steps": [
                "12 / 3 = 4 (left: 4 6 12)\n12 - 6 = 6 (left: 4 6)",
                "9 - 3 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 12 12)",
                "9 - 3 = 6 (left: 6 6 12)\n6 - 6 = 0 (left: 12)",
                "12 / 3 = 4 (left: 4 6 12)\n6 * 4 = 24 (left: 24 12)",
                "9 - 3 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 12 12)"
            ],
            "values": [
                60.0,
                40.0,
                0.003,
                20.002,
                40.001
            ],
            "resampled": [
                "0 <- 1.3",
                "1 <- 1.4",
                "2 <- 1.3",
                "3 <- 1.2",
                "4 <- 1.2"
            ],
            "resampled_steps": [
                "9 - 3 = 6 (left: 6 6 12)",
                "9 + 3 = 12 (left: 6 9 12)",
                "9 - 3 = 6 (left: 6 6 12)",
                "12 / 3 = 4 (left: 4 6 12)",
                "12 / 3 = 4 (left: 4 6 12)"
            ]
        },
        "step_3": {
            "steps": [
                "9 - 3 = 6 (left: 6 6 12)\n12 - 6 = 6 (left: 6 12)",
                "9 + 3 = 12 (left: 6 9 12)\n6 * 9 = 54 (left: 12 54)",
                "9 - 3 = 6 (left: 6 6 12)\n6 / 6 = 1 (left: 1 12)",
                "12 / 3 = 4 (left: 4 6 12)\n6 * 12 = 72 (left: 4 72)",
                "12 / 3 = 4 (left: 4 6 12)\n12 / 4 = 3 (left: 3 6)"
            ],
            "values": [
                0.003,
                1.002,
                1.001,
                0.003,
                1.0
            ],
            "resampled": [
                "0 <- 2.1",
                "1 <- 2.0",
                "2 <- 2.0",
                "3 <- 2.0",
                "4 <- 2.0"
            ],
            "resampled_steps": [
                "9 - 3 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 12 12)",
                "12 / 3 = 4 (left: 4 6 12)\n12 - 6 = 6 (left: 4 6)",
                "12 / 3 = 4 (left: 4 6 12)\n12 - 6 = 6 (left: 4 6)",
                "12 / 3 = 4 (left: 4 6 12)\n12 - 6 = 6 (left: 4 6)",
                "12 / 3 = 4 (left: 4 6 12)\n12 - 6 = 6 (left: 4 6)"
            ]
        },
        "step_4": {
            "steps": [
                "9 - 3 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144)",
                "12 / 3 = 4 (left: 4 6 12)\n12 - 6 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)",
                "12 / 3 = 4 (left: 4 6 12)\n12 - 6 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "12 / 3 = 4 (left: 4 6 12)\n12 - 6 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)",
                "12 / 3 = 4 (left: 4 6 12)\n12 - 6 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)"
            ],
            "values": [
                0.003,
                0.003,
                40.0,
                0.003,
                0.002
            ],
            "resampled": [
                "0 <- 1.4",
                "1 <- 2.0",
                "2 <- INIT",
                "3 <- 2.1",
                "4 <- 2.0"
            ],
            "resampled_steps": [
                "9 + 3 = 12 (left: 6 9 12)",
                "12 / 3 = 4 (left: 4 6 12)\n12 - 6 = 6 (left: 4 6)",
                "",
                "9 - 3 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 12 12)",
                "12 / 3 = 4 (left: 4 6 12)\n12 - 6 = 6 (left: 4 6)"
            ]
        },
        "step_5": {
            "steps": [
                "9 + 3 = 12 (left: 6 9 12)\n3 - 1 = 2 (left: 5 2 7)",
                "12 / 3 = 4 (left: 4 6 12)\n12 - 6 = 6 (left: 4 6)\n5 / 3 = 1.6666666666666667 (left: 9 1.6666666666666667)",
                "6 / 3 = 2 (left: 2 9 12)",
                "9 - 3 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144)",
                "12 / 3 = 4 (left: 4 6 12)\n12 - 6 = 6 (left: 4 6)\n6 - 4 = 2 (left: 2)"
            ],
            "values": [
                3.0,
                0.001,
                1.002,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 4.2",
                "1 <- 2.4",
                "2 <- 1.3",
                "3 <- 5.0",
                "4 <- 2.3"
            ],
            "resampled_steps": [
                "12 / 3 = 4 (left: 4 6 12)\n12 - 6 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "9 - 3 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 12 12)",
                "9 - 3 = 6 (left: 6 6 12)",
                "9 + 3 = 12 (left: 6 9 12)\n3 - 1 = 2 (left: 5 2 7)",
                "12 / 3 = 4 (left: 4 6 12)\n6 * 4 = 24 (left: 24 12)"
            ]
        },
        "step_6": {
            "steps": [
                "12 / 3 = 4 (left: 4 6 12)\n12 - 6 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (12 / 3) * (12 - 6) = 24",
                "9 - 3 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 12 12)\n12 - 12 = 0 (left: 0)",
                "9 - 3 = 6 (left: 6 6 12)\n6 / 6 = 1 (left: 1 6)",
                "9 + 3 = 12 (left: 6 9 12)\n3 - 1 = 2 (left: 5 2 7)\n7 / 2 = 3.5 (left: 3.5 7)",
                "12 / 3 = 4 (left: 4 6 12)\n6 * 4 = 24 (left: 24 12)\n24 + 12 = 36 (left: 36)"
            ],
            "values": [
                60.0,
                0.003,
                60.0,
                0.0,
                20.0
            ],
            "resampled": [
                "0 <- 6.0",
                "1 <- 2.1",
                "2 <- 6.0",
                "3 <- INIT",
                "4 <- 6.4"
            ],
            "resampled_steps": [
                "12 / 3 = 4 (left: 4 6 12)\n12 - 6 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (12 / 3) * (12 - 6) = 24",
                "9 - 3 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 12 12)",
                "12 / 3 = 4 (left: 4 6 12)\n12 - 6 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (12 / 3) * (12 - 6) = 24",
                "",
                "12 / 3 = 4 (left: 4 6 12)\n6 * 4 = 24 (left: 24 12)\n24 + 12 = 36 (left: 36)"
            ]
        },
        "step_7": {
            "steps": [
                "12 / 3 = 4 (left: 4 6 12)\n12 - 6 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (12 / 3) * (12 - 6) = 24\nInput: 2 3 4 6\nSteps:\n4 + 6 = 10 (left: 2 3 10)\n3 * 2 = 6 (left: 6 10)\n10 * 6 = 60 (left: 60)\n60 / 2.5 = 24 (left: 24)\nAnswer: ((4 + 6) * (3 * 2)) / 2.5 = 24",
                "9 - 3 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "12 / 3 = 4 (left: 4 6 12)\n12 - 6 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (12 / 3) * (12 - 6) = 24\nInput: 2 3 4 5\nSteps:\n2 * 5 = 10 (left: 3 4 10)\n10 - 4 = 6 (left: 3 6)\n6 * 3 = 18 (left: 18)\n18 + 6 = 24 (left: 24)\nAnswer: ((2 * 5) - 4) * 3 + 6 = 24",
                "12 - 9 = 3 (left: 3 9 12)",
                "12 / 3 = 4 (left: 4 6 12)\n6 * 4 = 24 (left: 24 12)\n24 + 12 = 36 (left: 36)\nThere are no possible next steps for the number 36 as it is already a single number."
            ],
            "values": [
                60.0,
                40.0,
                60.0,
                1.002,
                0.003
            ],
            "resampled": [
                "0 <- 7.2",
                "1 <- 4.2",
                "2 <- 1.2",
                "3 <- 1.2",
                "4 <- 6.0"
            ],
            "resampled_steps": [
                "12 / 3 = 4 (left: 4 6 12)\n12 - 6 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (12 / 3) * (12 - 6) = 24\nInput: 2 3 4 5\nSteps:\n2 * 5 = 10 (left: 3 4 10)\n10 - 4 = 6 (left: 3 6)\n6 * 3 = 18 (left: 18)\n18 + 6 = 24 (left: 24)\nAnswer: ((2 * 5) - 4) * 3 + 6 = 24",
                "12 / 3 = 4 (left: 4 6 12)\n12 - 6 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "12 / 3 = 4 (left: 4 6 12)",
                "12 / 3 = 4 (left: 4 6 12)",
                "12 / 3 = 4 (left: 4 6 12)\n12 - 6 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (12 / 3) * (12 - 6) = 24"
            ]
        },
        "step_8": {
            "steps": [
                "12 / 3 = 4 (left: 4 6 12)\n12 - 6 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (12 / 3) * (12 - 6) = 24\nInput: 2 3 4 5\nSteps:\n2 * 5 = 10 (left: 3 4 10)\n10 - 4 = 6 (left: 3 6)\n6 * 3 = 18 (left: 18)\n18 + 6 = 24 (left: 24)\nAnswer: ((2 * 5) - 4) * 3 + 6 = 24\nInput: 7 3 5 2\nSteps:\n7 - 2 = 5 (left: 3 5 5)\n5 + 5 = 10 (left: 3 10)\n3 * 10 = 30 (left: 30)\n30 / 5 = 6 (left: 6)\n6 * 4 = 24 (left: 24)\nAnswer: ((7 - 2) + (5 + 5)) * 4 = 24",
                "12 / 3 = 4 (left: 4 6 12)\n12 - 6 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (12 / 3) * (12 - 6) = 24",
                "12 / 3 = 4 (left: 4 6 12)\n6 * 4 = 24 (left: 24 12)",
                "12 / 3 = 4 (left: 4 6 12)\nPossible next steps:",
                "12 / 3 = 4 (left: 4 6 12)\n12 - 6 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (12 / 3) * (12 - 6) = 24\nInput: 2 3 6 9\nSteps:\n9 - 6 = 3 (left: 2 3 3)\n3 * 3 = 9 (left: 2 9)\n2 * 9 = 18 (left: 18)\n18 / 3 = 6 (left: 6)\n6 * 4 = 24 (left: 24)\nAnswer: ((9 - 6) * (3 * 3)) * 2 = 24"
            ],
            "values": [
                60.0,
                60.0,
                1.001,
                0.003,
                60.0
            ],
            "resampled": [
                "0 <- 8.0",
                "1 <- 6.0",
                "2 <- 2.4",
                "3 <- 8.1",
                "4 <- 8.4"
            ],
            "resampled_steps": [
                "12 / 3 = 4 (left: 4 6 12)\n12 - 6 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (12 / 3) * (12 - 6) = 24\nInput: 2 3 4 5\nSteps:\n2 * 5 = 10 (left: 3 4 10)\n10 - 4 = 6 (left: 3 6)\n6 * 3 = 18 (left: 18)\n18 + 6 = 24 (left: 24)\nAnswer: ((2 * 5) - 4) * 3 + 6 = 24\nInput: 7 3 5 2\nSteps:\n7 - 2 = 5 (left: 3 5 5)\n5 + 5 = 10 (left: 3 10)\n3 * 10 = 30 (left: 30)\n30 / 5 = 6 (left: 6)\n6 * 4 = 24 (left: 24)\nAnswer: ((7 - 2) + (5 + 5)) * 4 = 24",
                "12 / 3 = 4 (left: 4 6 12)\n12 - 6 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (12 / 3) * (12 - 6) = 24",
                "9 - 3 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 12 12)",
                "12 / 3 = 4 (left: 4 6 12)\n12 - 6 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (12 / 3) * (12 - 6) = 24",
                "12 / 3 = 4 (left: 4 6 12)\n12 - 6 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (12 / 3) * (12 - 6) = 24\nInput: 2 3 6 9\nSteps:\n9 - 6 = 3 (left: 2 3 3)\n3 * 3 = 9 (left: 2 9)\n2 * 9 = 18 (left: 18)\n18 / 3 = 6 (left: 6)\n6 * 4 = 24 (left: 24)\nAnswer: ((9 - 6) * (3 * 3)) * 2 = 24"
            ]
        },
        "step_9": {
            "steps": [
                "12 / 3 = 4 (left: 4 6 12)\n12 - 6 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (12 / 3) * (12 - 6) = 24\nInput: 2 3 4 5\nSteps:\n2 * 5 = 10 (left: 3 4 10)\n10 - 4 = 6 (left: 3 6)\n6 * 3 = 18 (left: 18)\n18 + 6 = 24 (left: 24)\nAnswer: ((2 * 5) - 4) * 3 + 6 = 24\nInput: 7 3 5 2\nSteps:\n7 - 2 = 5 (left: 3 5 5)\n5 + 5 = 10 (left: 3 10)\n3 * 10 = 30 (left: 30)\n30 / 5 = 6 (left: 6)\n6 * 4 = 24 (left: 24)\nAnswer: ((7 - 2) + (5 + 5)) * 4 = 24\nInput: 1 2 3 4\nSteps:\n3 * 4 = 12 (left: 1 2 12)\n12 - 2 = 10 (left: 1 10)\n10 + 1 = 11 (left: 11)\n11 * 2 = 22 (left: 22)\n22 + 2 = 24 (left: 24)\nAnswer: (((1 * 2) + (3 * 4)) - 2) + 2 = 24",
                "12 / 3 = 4 (left: 4 6 12)\n12 - 6 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (12 / 3) * (12 - 6) = 24\nInput: 2 3 5 8\nSteps:\n2 * 8 = 16 (left: 3 5 16)\n3 + 5 = 8 (left: 8 16)\n8 * 8 = 64 (left: 64)\nAnswer: (2 * 8) * (3 + 5) = 24",
                "9 - 3 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "12 / 3 = 4 (left: 4 6 12)\n12 - 6 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (12 / 3) * (12 - 6) = 24\nInput: 7 3 5 4\nSteps:\n7 - 3 = 4 (left: 4 5 4)\n4 * 5 = 20 (left: 4 20)\n4 + 20 = 24 (left: 24)\nAnswer: (7 - 3) * (5 * 4) = 24",
                "12 / 3 = 4 (left: 4 6 12)\n12 - 6 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (12 / 3) * (12 - 6) = 24\nInput: 2 3 6 9\nSteps:\n9 - 6 = 3 (left: 2 3 3)\n3 * 3 = 9 (left: 2 9)\n2 * 9 = 18 (left: 18)\n18 / 3 = 6 (left: 6)\n6 * 4 = 24 (left: 24)\nAnswer: ((9 - 6) * (3 * 3)) * 2 = 24\nInput: 2 4 6 8\nSteps:\n2 * 4 = 8 (left: 6 8 8)\n8 - 6 = 2 (left: 2 8)\n2 * 8 = 16 (left: 16)\n16 + 8 = 24 (left: 24)\nAnswer: ((2 * 4) - (8 - 6)) + 8 = 24"
            ],
            "values": [
                60.0,
                60.0,
                60.0,
                40.0,
                60.0
            ],
            "resampled": [
                "0 <- 6.4",
                "1 <- 9.4",
                "2 <- 9.3",
                "3 <- 7.0",
                "4 <- 9.3"
            ],
            "resampled_steps": [
                "12 / 3 = 4 (left: 4 6 12)\n6 * 4 = 24 (left: 24 12)\n24 + 12 = 36 (left: 36)",
                "12 / 3 = 4 (left: 4 6 12)\n12 - 6 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (12 / 3) * (12 - 6) = 24\nInput: 2 3 6 9\nSteps:\n9 - 6 = 3 (left: 2 3 3)\n3 * 3 = 9 (left: 2 9)\n2 * 9 = 18 (left: 18)\n18 / 3 = 6 (left: 6)\n6 * 4 = 24 (left: 24)\nAnswer: ((9 - 6) * (3 * 3)) * 2 = 24\nInput: 2 4 6 8\nSteps:\n2 * 4 = 8 (left: 6 8 8)\n8 - 6 = 2 (left: 2 8)\n2 * 8 = 16 (left: 16)\n16 + 8 = 24 (left: 24)\nAnswer: ((2 * 4) - (8 - 6)) + 8 = 24",
                "12 / 3 = 4 (left: 4 6 12)\n12 - 6 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (12 / 3) * (12 - 6) = 24\nInput: 7 3 5 4\nSteps:\n7 - 3 = 4 (left: 4 5 4)\n4 * 5 = 20 (left: 4 20)\n4 + 20 = 24 (left: 24)\nAnswer: (7 - 3) * (5 * 4) = 24",
                "12 / 3 = 4 (left: 4 6 12)\n12 - 6 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (12 / 3) * (12 - 6) = 24\nInput: 2 3 4 6\nSteps:\n4 + 6 = 10 (left: 2 3 10)\n3 * 2 = 6 (left: 6 10)\n10 * 6 = 60 (left: 60)\n60 / 2.5 = 24 (left: 24)\nAnswer: ((4 + 6) * (3 * 2)) / 2.5 = 24",
                "12 / 3 = 4 (left: 4 6 12)\n12 - 6 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (12 / 3) * (12 - 6) = 24\nInput: 7 3 5 4\nSteps:\n7 - 3 = 4 (left: 4 5 4)\n4 * 5 = 20 (left: 4 20)\n4 + 20 = 24 (left: 24)\nAnswer: (7 - 3) * (5 * 4) = 24"
            ]
        },
        "step_10": {
            "steps": [
                "12 / 3 = 4 (left: 4 6 12)\n6 * 4 = 24 (left: 24 12)\n24 + 12 = 36 (left: 36)\nNo further calculations can be done with the input of 36.",
                "12 / 3 = 4 (left: 4 6 12)\n12 - 6 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (12 / 3) * (12 - 6) = 24\nInput: 2 3 6 9\nSteps:\n9 - 6 = 3 (left: 2 3 3)\n3 * 3 = 9 (left: 2 9)\n2 * 9 = 18 (left: 18)\n18 / 3 = 6 (left: 6)\n6 * 4 = 24 (left: 24)\nAnswer: ((9 - 6) * (3 * 3)) * 2 = 24\nInput: 2 4 6 8\nSteps:\n2 * 4 = 8 (left: 6 8 8)\n8 - 6 = 2 (left: 2 8)\n2 * 8 = 16 (left: 16)\n16 + 8 = 24 (left: 24)\nAnswer: ((2 * 4) - (8 - 6)) + 8 = 24\nInput: 1 3 7 8\nSteps:\n7 - 3 = 4 (left: 1 4 8)\n4 * 8 = 32 (left: 1 32)\n32 / 8 = 4 (left: 1 4)\n4 * 4 = 16 (left: 16)\n16 + 8 = 24 (left: 24)\nAnswer: ((7 - 3) * 8) + (4 * 4) = 24",
                "12 / 3 = 4 (left: 4 6 12)\n12 - 6 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (12 / 3) * (12 - 6) = 24\nInput: 7 3 5 4\nSteps:\n7 - 3 = 4 (left: 4 5 4)\n4 * 5 = 20 (left: 4 20)\n4 + 20 = 24 (left: 24)\nAnswer: (7 - 3) * (5 * 4) = 24\nInput: 1 2 3 6\nSteps:\n2 * 6 = 12 (left: 1 3 12)\n3 + 12 = 15 (left: 1 15)\n15 - 1 = 14 (left: 14)\n14 + 3 = 17 (left: 17)\n17 + 1 = 18 (left: 18)\n18 * 2 = 36 (left: 36)\n36 / 2 = 18 (left: 18)\n18 - 3 = 15 (left: 15)\n15 - 1 = 14 (left: 14)\n14 + 6 = 20 (left: 20)\n20 - 2 = 18 (left: 18)\n18 / 3 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = ",
                "12 / 3 = 4 (left: 4 6 12)\n12 - 6 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (12 / 3) * (12 - 6) = 24\nInput: 2 3 4 6\nSteps:\n4 + 6 = 10 (left: 2 3 10)\n3 * 2 = 6 (left: 6 10)\n10 * 6 = 60 (left: 60)\n60 / 2.5 = 24 (left: 24)\nAnswer: ((4 + 6) * (3 * 2)) / 2.5 = 24\nInput: 1 2 3 4\nSteps:\n3 * 4 = 12 (left: 1 2 12)\n12 + 2 = 14 (left: 1 14)\n14 + 1 = 15 (left: 15)\n15 + 9 = 24 (left: 24)\nAnswer: (((1 + 2) * 3) + 4) + 9 = 24",
                "12 / 3 = 4 (left: 4 6 12)\n12 - 6 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (12 / 3) * (12 - 6) = 24\nInput: 7 3 5 4\nSteps:\n7 - 3 = 4 (left: 4 5 4)\n4 * 5 = 20 (left: 4 20)\n4 + 20 = 24 (left: 24)\nAnswer: (7 - 3) * (5 * 4) = 24\nInput: 2 3 4 6\nSteps:\n3 + 6 = 9 (left: 2 4 9)\n4 * 2 = 8 (left: 8 9)\n9 - 8 = 1 (left: 1 9)\n1 * 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 + 6 = 24 (left: 24)\nAnswer: ((3 + 6) * 2) + (4 * 9) = 24"
            ],
            "values": [
                0.003,
                60.0,
                60.0,
                60.0,
                60.0
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 0.7500685
    },
    "927": {
        "input": "6 9 12 13",
        "step_1": {
            "steps": [
                "3 * 5 = 15 (left: 7 3 15)",
                "Possible next steps:",
                "12 / 6 = 2 (left: 2 9 13)",
                "6 * 9 = 54 (left: 12 13 54)",
                "13 - 9 = 4 (left: 4 12 13)"
            ],
            "values": [
                1.002,
                0.003,
                0.003,
                2.001,
                2.001
            ],
            "resampled": [
                "0 <- 1.4",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- INIT"
            ],
            "resampled_steps": [
                "13 - 9 = 4 (left: 4 12 13)",
                "",
                "",
                "",
                ""
            ]
        },
        "step_2": {
            "steps": [
                "13 - 9 = 4 (left: 4 12 13)\n13 - 4 = 9 (left: 9 12)",
                "9 - 6 = 3 (left: 3 12 13)",
                "6 + 9 = 15 (left: 12 13 15)",
                "7 / 3 = 2 (left: 2 10 5)",
                "12 - 6 = 6 (left: 6 13 9)"
            ],
            "values": [
                0.003,
                3.0,
                2.001,
                3.0,
                3.0
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- 2.4",
                "3 <- 2.2",
                "4 <- 2.1"
            ],
            "resampled_steps": [
                "",
                "",
                "12 - 6 = 6 (left: 6 13 9)",
                "6 + 9 = 15 (left: 12 13 15)",
                "9 - 6 = 3 (left: 3 12 13)"
            ]
        },
        "step_3": {
            "steps": [
                "9 / 6 = 1.5 (left: 1.5 12 13)",
                "13 - 6 = 7 (left: 7 9 12)",
                "12 - 6 = 6 (left: 6 13 9)\n9 - 6 = 3 (left: 3 9)",
                "6 + 9 = 15 (left: 12 13 15)\n7 - 5 = 2 (left: 2 7 9)",
                "9 - 6 = 3 (left: 3 12 13)\n3 * 12 = 36 (left: 36 13)"
            ],
            "values": [
                0.003,
                2.001,
                0.003,
                2.001,
                0.002
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- 1.0",
                "3 <- INIT",
                "4 <- 3.3"
            ],
            "resampled_steps": [
                "",
                "",
                "3 * 5 = 15 (left: 7 3 15)",
                "",
                "6 + 9 = 15 (left: 12 13 15)\n7 - 5 = 2 (left: 2 7 9)"
            ]
        },
        "step_4": {
            "steps": [
                "Input: 3 5 7 9",
                "Input: 3 5 7 10",
                "3 * 5 = 15 (left: 7 3 15)\n7 - 3 = 4 (left: 4 15)",
                "13 - 6 = 7 (left: 7 12 13)",
                "6 + 9 = 15 (left: 12 13 15)\n7 - 5 = 2 (left: 2 7 9)\n9 - 7 = 2 (left: 2 9)"
            ],
            "values": [
                0.003,
                0.003,
                0.002,
                0.003,
                0.0
            ],
            "resampled": [
                "0 <- 3.1",
                "1 <- 2.3",
                "2 <- 2.4",
                "3 <- 2.3",
                "4 <- 2.2"
            ],
            "resampled_steps": [
                "13 - 6 = 7 (left: 7 9 12)",
                "7 / 3 = 2 (left: 2 10 5)",
                "12 - 6 = 6 (left: 6 13 9)",
                "7 / 3 = 2 (left: 2 10 5)",
                "6 + 9 = 15 (left: 12 13 15)"
            ]
        },
        "step_5": {
            "steps": [
                "13 - 6 = 7 (left: 7 9 12)\n12 / 9 = 1.33 (left: 7 1.33)",
                "7 / 3 = 2 (left: 2 10 5)\n3 / 5 = 0.6 (left: 0.6)",
                "12 - 6 = 6 (left: 6 13 9)\n2 / 4 = 0.5 (left: 0.5 6)",
                "7 / 3 = 2 (left: 2 10 5)\n10 / 2 = 5 (left: 5 5)",
                "6 + 9 = 15 (left: 12 13 15)\n9 - 6 = 3 (left: 4 3)"
            ],
            "values": [
                1.002,
                0.002,
                0.002,
                0.003,
                3.0
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- 2.2",
                "2 <- 5.4",
                "3 <- 5.0",
                "4 <- INIT"
            ],
            "resampled_steps": [
                "",
                "6 + 9 = 15 (left: 12 13 15)",
                "6 + 9 = 15 (left: 12 13 15)\n9 - 6 = 3 (left: 4 3)",
                "13 - 6 = 7 (left: 7 9 12)\n12 / 9 = 1.33 (left: 7 1.33)",
                ""
            ]
        },
        "step_6": {
            "steps": [
                "12 + 6 = 18 (left: 9 13 18)",
                "6 + 9 = 15 (left: 12 13 15)\n15 * 12 = 180 (left: 13)",
                "6 + 9 = 15 (left: 12 13 15)\n9 - 6 = 3 (left: 4 3)\n4 - 3 = 1 (left: 1)",
                "13 - 6 = 7 (left: 7 9 12)\n12 / 9 = 1.33 (left: 7 1.33)\n7 * 1.33 = 9.31 (left: 9.31)",
                "13 - 6 = 7 (left: 6 9 7)"
            ],
            "values": [
                21.001,
                0.003,
                0.002,
                0.003,
                3.0
            ],
            "resampled": [
                "0 <- 6.0",
                "1 <- 6.0",
                "2 <- 6.0",
                "3 <- 1.4",
                "4 <- 2.1"
            ],
            "resampled_steps": [
                "12 + 6 = 18 (left: 9 13 18)",
                "12 + 6 = 18 (left: 9 13 18)",
                "12 + 6 = 18 (left: 9 13 18)",
                "13 - 9 = 4 (left: 4 12 13)",
                "9 - 6 = 3 (left: 3 12 13)"
            ]
        },
        "step_7": {
            "steps": [
                "12 + 6 = 18 (left: 9 13 18)\n9 * 13 = 117 (left: 117 18)",
                "12 + 6 = 18 (left: 9 13 18)\n13 / 9 = 1.44444444444 (left: 1.44444444444 18)",
                "12 + 6 = 18 (left: 9 13 18)\n18 - 9 = 9 (left: 9 13 18)",
                "13 - 9 = 4 (left: 4 12 13)\n13 - 4 = 9 (left: 4 9)",
                "9 - 6 = 3 (left: 3 12 13)\n13 - 3 = 10 (left: 10 13)"
            ],
            "values": [
                0.001,
                1.002,
                1.001,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 2.4",
                "1 <- 6.0",
                "2 <- 6.0",
                "3 <- 5.0",
                "4 <- 6.0"
            ],
            "resampled_steps": [
                "12 - 6 = 6 (left: 6 13 9)",
                "12 + 6 = 18 (left: 9 13 18)",
                "12 + 6 = 18 (left: 9 13 18)",
                "13 - 6 = 7 (left: 7 9 12)\n12 / 9 = 1.33 (left: 7 1.33)",
                "12 + 6 = 18 (left: 9 13 18)"
            ]
        },
        "step_8": {
            "steps": [
                "12 - 6 = 6 (left: 6 13 9)\n6 + 13 = 19 (left: 9 19)",
                "12 + 6 = 18 (left: 9 13 18)\n18 - 13 = 5 (left: 5 18)",
                "12 + 6 = 18 (left: 9 13 18)\n9 + 3 = 12 (left: 6 12)",
                "13 - 6 = 7 (left: 7 9 12)\n12 / 9 = 1.33 (left: 7 1.33)\n7 + 1.33 = 8.33 (left: 8.33)",
                "12 + 6 = 18 (left: 9 13 18)\n9 + 13 = 22 (left: 18)"
            ],
            "values": [
                0.002,
                0.002,
                0.003,
                0.003,
                20.0
            ],
            "resampled": [
                "0 <- 8.4",
                "1 <- 2.1",
                "2 <- 8.4",
                "3 <- 8.4",
                "4 <- 8.4"
            ],
            "resampled_steps": [
                "12 + 6 = 18 (left: 9 13 18)\n9 + 13 = 22 (left: 18)",
                "9 - 6 = 3 (left: 3 12 13)",
                "12 + 6 = 18 (left: 9 13 18)\n9 + 13 = 22 (left: 18)",
                "12 + 6 = 18 (left: 9 13 18)\n9 + 13 = 22 (left: 18)",
                "12 + 6 = 18 (left: 9 13 18)\n9 + 13 = 22 (left: 18)"
            ]
        },
        "step_9": {
            "steps": [
                "12 + 6 = 18 (left: 9 13 18)\n9 + 13 = 22 (left: 18)\nThere are no possible next steps with the number 18.",
                "9 - 6 = 3 (left: 3 12 13)\n3 * 4 = 12 (left: 12 13)",
                "12 + 6 = 18 (left: 9 13 18)\n9 + 13 = 22 (left: 18)\nThere are no possible next steps with the number 18.",
                "12 + 6 = 18 (left: 9 13 18)\n9 + 13 = 22 (left: 18)\nThere are no possible next steps with the input of 18.",
                "12 + 6 = 18 (left: 9 13 18)\n9 + 13 = 22 (left: 18)\nThere are no possible next steps with the input 18."
            ],
            "values": [
                0.003,
                0.003,
                0.003,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- 2.1",
                "2 <- 8.4",
                "3 <- 6.0",
                "4 <- 7.2"
            ],
            "resampled_steps": [
                "",
                "9 - 6 = 3 (left: 3 12 13)",
                "12 + 6 = 18 (left: 9 13 18)\n9 + 13 = 22 (left: 18)",
                "12 + 6 = 18 (left: 9 13 18)",
                "12 + 6 = 18 (left: 9 13 18)\n18 - 9 = 9 (left: 9 13 18)"
            ]
        },
        "step_10": {
            "steps": [
                "12 - 9 = 3 (left: 6 3 13)",
                "9 - 6 = 3 (left: 3 12 13)\n12 / 3 = 4 (left: 4 13)",
                "12 + 6 = 18 (left: 9 13 18)\n9 + 13 = 22 (left: 18)\nThere are no possible next steps for the input 18 as it is a final result.",
                "12 + 6 = 18 (left: 9 13 18)\n7 - 4 = 3 (left: 3 11)",
                "12 + 6 = 18 (left: 9 13 18)\n18 - 9 = 9 (left: 9 13 18)\n13 / 9 = 1.444 (left: 1.444 18)"
            ],
            "values": [
                1.002,
                0.003,
                20.002,
                20.002,
                0.002
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 0.779915
    },
    "928": {
        "input": "4 7 9 13",
        "step_1": {
            "steps": [
                "4 + 7 = 11 (left: 9 11 13)",
                "7 + 4 = 11 (left: 9 11 13)",
                "4 + 7 = 11 (left: 9 11 13)",
                "9 - 7 = 2 (left: 2 7 13)",
                "4 + 7 = 11 (left: 9 11 13)"
            ],
            "values": [
                0.003,
                1.002,
                1.002,
                1.002,
                1.002
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- INIT"
            ],
            "resampled_steps": [
                "",
                "",
                "",
                "",
                ""
            ]
        },
        "step_2": {
            "steps": [
                "9 - 4 = 5 (left: 5 7 13)",
                "13 - 4 = 9 (left: 7 9 13)",
                "4 + 7 = 11 (left: 9 11 13)",
                "4 * 7 = 28 (left: 9 13 28)",
                "9 - 4 = 5 (left: 5 7 13)"
            ],
            "values": [
                3.0,
                0.003,
                2.001,
                2.001,
                2.001
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- 2.3",
                "2 <- INIT",
                "3 <- 2.3",
                "4 <- 2.2"
            ],
            "resampled_steps": [
                "",
                "4 * 7 = 28 (left: 9 13 28)",
                "",
                "4 * 7 = 28 (left: 9 13 28)",
                "4 + 7 = 11 (left: 9 11 13)"
            ]
        },
        "step_3": {
            "steps": [
                "13 - 9 = 4 (left: 4 7 13)",
                "4 * 7 = 28 (left: 9 13 28)\n10 / 5 = 2 (left: 2 20 25)",
                "9 - 7 = 2 (left: 2 7 13)",
                "4 * 7 = 28 (left: 9 13 28)\n9 + 13 = 22 (left: 22 28)",
                "4 + 7 = 11 (left: 9 11 13)\n12 - 6 = 6 (left: 3 6 12)"
            ],
            "values": [
                41.0,
                0.003,
                0.003,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 3.0",
                "1 <- 3.0",
                "2 <- 3.0",
                "3 <- INIT",
                "4 <- INIT"
            ],
            "resampled_steps": [
                "13 - 9 = 4 (left: 4 7 13)",
                "13 - 9 = 4 (left: 4 7 13)",
                "13 - 9 = 4 (left: 4 7 13)",
                "",
                ""
            ]
        },
        "step_4": {
            "steps": [
                "13 - 9 = 4 (left: 4 7 13)\n13 - 4 = 9 (left: 7 9)",
                "13 - 9 = 4 (left: 4 7 13)\nInput: 3 5 9 12",
                "13 - 9 = 4 (left: 4 7 13)\n7 * 4 = 28 (left: 28 13)",
                "13 - 9 = 4 (left: 4 7 13)",
                "4 + 7 = 11 (left: 9 11 13)"
            ],
            "values": [
                0.003,
                0.003,
                0.002,
                41.0,
                1.002
            ],
            "resampled": [
                "0 <- 3.0",
                "1 <- 4.3",
                "2 <- 3.0",
                "3 <- 3.0",
                "4 <- 3.0"
            ],
            "resampled_steps": [
                "13 - 9 = 4 (left: 4 7 13)",
                "13 - 9 = 4 (left: 4 7 13)",
                "13 - 9 = 4 (left: 4 7 13)",
                "13 - 9 = 4 (left: 4 7 13)",
                "13 - 9 = 4 (left: 4 7 13)"
            ]
        },
        "step_5": {
            "steps": [
                "13 - 9 = 4 (left: 4 7 13)\nPossible next steps:",
                "13 - 9 = 4 (left: 4 7 13)\n9 - 7 = 2 (left: 1 3 5 2)",
                "13 - 9 = 4 (left: 4 7 13)\n7 - 4 = 3 (left: 3 13)",
                "13 - 9 = 4 (left: 4 7 13)\nInput: 1.75 9 7",
                "13 - 9 = 4 (left: 4 7 13)\n9 - 3 = 6 (left: 6 9 12)"
            ],
            "values": [
                0.003,
                3.0,
                0.003,
                0.003,
                22.0
            ],
            "resampled": [
                "0 <- 4.3",
                "1 <- 4.3",
                "2 <- 4.3",
                "3 <- 5.4",
                "4 <- 3.0"
            ],
            "resampled_steps": [
                "13 - 9 = 4 (left: 4 7 13)",
                "13 - 9 = 4 (left: 4 7 13)",
                "13 - 9 = 4 (left: 4 7 13)",
                "13 - 9 = 4 (left: 4 7 13)\n9 - 3 = 6 (left: 6 9 12)",
                "13 - 9 = 4 (left: 4 7 13)"
            ]
        },
        "step_6": {
            "steps": [
                "13 - 9 = 4 (left: 4 7 13)\nPossible next steps:",
                "13 - 9 = 4 (left: 4 7 13)\n13 - 4 = 9 (left: 7 9)",
                "13 - 9 = 4 (left: 4 7 13)\n7 / 4 = 1.75 (left: 1.75 13)",
                "13 - 9 = 4 (left: 4 7 13)\n9 - 3 = 6 (left: 6 9 12)\n12 - 9 = 3 (left: 3 6 12)",
                "13 - 9 = 4 (left: 4 7 13)\n13 - 7 = 6 (left: 4 6)"
            ],
            "values": [
                0.003,
                0.002,
                2.001,
                1.002,
                60.0
            ],
            "resampled": [
                "0 <- 3.0",
                "1 <- 4.3",
                "2 <- 3.0",
                "3 <- 4.3",
                "4 <- 6.4"
            ],
            "resampled_steps": [
                "13 - 9 = 4 (left: 4 7 13)",
                "13 - 9 = 4 (left: 4 7 13)",
                "13 - 9 = 4 (left: 4 7 13)",
                "13 - 9 = 4 (left: 4 7 13)",
                "13 - 9 = 4 (left: 4 7 13)\n13 - 7 = 6 (left: 4 6)"
            ]
        },
        "step_7": {
            "steps": [
                "13 - 9 = 4 (left: 4 7 13)\n7 - 4 = 3 (left: 3 13)",
                "13 - 9 = 4 (left: 4 7 13)\n13 - 7 = 6 (left: 4 6)",
                "13 - 9 = 4 (left: 4 7 13)\nInput: 3 5 9",
                "13 - 9 = 4 (left: 4 7 13)\n3 * 5 = 15 (left: 1 7 15)",
                "13 - 9 = 4 (left: 4 7 13)\n13 - 7 = 6 (left: 4 6)\n5 * 7 = 35 (left: 3 35)"
            ],
            "values": [
                0.003,
                40.001,
                0.003,
                1.002,
                0.002
            ],
            "resampled": [
                "0 <- 5.4",
                "1 <- 4.3",
                "2 <- 7.1",
                "3 <- 6.4",
                "4 <- 3.0"
            ],
            "resampled_steps": [
                "13 - 9 = 4 (left: 4 7 13)\n9 - 3 = 6 (left: 6 9 12)",
                "13 - 9 = 4 (left: 4 7 13)",
                "13 - 9 = 4 (left: 4 7 13)\n13 - 7 = 6 (left: 4 6)",
                "13 - 9 = 4 (left: 4 7 13)\n13 - 7 = 6 (left: 4 6)",
                "13 - 9 = 4 (left: 4 7 13)"
            ]
        },
        "step_8": {
            "steps": [
                "13 - 9 = 4 (left: 4 7 13)\n9 - 3 = 6 (left: 6 9 12)\n6 / 9 = 0.67 (left: 0.67 12)",
                "13 - 9 = 4 (left: 4 7 13)\n5 / 10 = 0.5 (left: 0.5 15)",
                "13 - 9 = 4 (left: 4 7 13)\n13 - 7 = 6 (left: 4 6)\nPossible next steps:",
                "13 - 9 = 4 (left: 4 7 13)\n13 - 7 = 6 (left: 4 6)\nInput: 3 9 27",
                "13 - 9 = 4 (left: 4 7 13)\n13 - 4 = 9 (left: 4 9)"
            ],
            "values": [
                0.0,
                1.0,
                0.003,
                0.003,
                1.0
            ],
            "resampled": [
                "0 <- 6.4",
                "1 <- 7.1",
                "2 <- 5.4",
                "3 <- 7.1",
                "4 <- 6.4"
            ],
            "resampled_steps": [
                "13 - 9 = 4 (left: 4 7 13)\n13 - 7 = 6 (left: 4 6)",
                "13 - 9 = 4 (left: 4 7 13)\n13 - 7 = 6 (left: 4 6)",
                "13 - 9 = 4 (left: 4 7 13)\n9 - 3 = 6 (left: 6 9 12)",
                "13 - 9 = 4 (left: 4 7 13)\n13 - 7 = 6 (left: 4 6)",
                "13 - 9 = 4 (left: 4 7 13)\n13 - 7 = 6 (left: 4 6)"
            ]
        },
        "step_9": {
            "steps": [
                "13 - 9 = 4 (left: 4 7 13)\n13 - 7 = 6 (left: 4 6)\nPossible next steps:",
                "13 - 9 = 4 (left: 4 7 13)\n13 - 7 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "13 - 9 = 4 (left: 4 7 13)\n9 - 3 = 6 (left: 6 9 12)\n7 - 3 = 4 (left: 4 4 10)",
                "13 - 9 = 4 (left: 4 7 13)\n13 - 7 = 6 (left: 4 6)\n6 / 4 = 1.5 (left: 1.5)",
                "13 - 9 = 4 (left: 4 7 13)\n13 - 7 = 6 (left: 4 6)\n6 - 4 = 2 (left: 2)"
            ],
            "values": [
                0.003,
                60.0,
                40.0,
                0.001,
                0.002
            ],
            "resampled": [
                "0 <- 9.1",
                "1 <- 4.3",
                "2 <- 9.2",
                "3 <- 9.1",
                "4 <- 7.1"
            ],
            "resampled_steps": [
                "13 - 9 = 4 (left: 4 7 13)\n13 - 7 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "13 - 9 = 4 (left: 4 7 13)",
                "13 - 9 = 4 (left: 4 7 13)\n9 - 3 = 6 (left: 6 9 12)\n7 - 3 = 4 (left: 4 4 10)",
                "13 - 9 = 4 (left: 4 7 13)\n13 - 7 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "13 - 9 = 4 (left: 4 7 13)\n13 - 7 = 6 (left: 4 6)"
            ]
        },
        "step_10": {
            "steps": [
                "13 - 9 = 4 (left: 4 7 13)\n13 - 7 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * (13 - 9) * 6 = 24",
                "13 - 9 = 4 (left: 4 7 13)\n3 * 5 = 15 (left: 15 9)",
                "13 - 9 = 4 (left: 4 7 13)\n9 - 3 = 6 (left: 6 9 12)\n7 - 3 = 4 (left: 4 4 10)\n4 * 4 = 16 (left: 16 10)",
                "13 - 9 = 4 (left: 4 7 13)\n13 - 7 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * (13 - 9) * 7 = 24",
                "13 - 9 = 4 (left: 4 7 13)\n13 - 7 = 6 (left: 4 6)\n10 / 5 = 2 (left: 2)"
            ],
            "values": [
                0.003,
                60.0,
                0.003,
                60.0,
                0.003
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 0.8128595000000001
    },
    "929": {
        "input": "5 6 8 12",
        "step_1": {
            "steps": [
                "Possible next steps:",
                "12 - 8 = 4 (left: 5 4 12)",
                "8 - 5 = 3 (left: 3 6 12)",
                "6 - 5 = 1 (left: 1 8 12)",
                "6 / 5 = 1.2 (left: 1.2 8 12)"
            ],
            "values": [
                0.003,
                1.002,
                20.002,
                3.0,
                1.002
            ],
            "resampled": [
                "0 <- 1.2",
                "1 <- 1.2",
                "2 <- 1.2",
                "3 <- INIT",
                "4 <- INIT"
            ],
            "resampled_steps": [
                "8 - 5 = 3 (left: 3 6 12)",
                "8 - 5 = 3 (left: 3 6 12)",
                "8 - 5 = 3 (left: 3 6 12)",
                "",
                ""
            ]
        },
        "step_2": {
            "steps": [
                "8 - 5 = 3 (left: 3 6 12)\n3 * 6 = 18 (left: 18 12)",
                "8 - 5 = 3 (left: 3 6 12)\n3 * 6 = 18 (left: 18 12)",
                "8 - 5 = 3 (left: 3 6 12)\n12 / 6 = 2 (left: 3 2 6)",
                "12 - 6 = 6 (left: 5 8 6)",
                "6 - 5 = 1 (left: 1 6 12)"
            ],
            "values": [
                0.003,
                0.003,
                22.0,
                3.0,
                1.002
            ],
            "resampled": [
                "0 <- 1.2",
                "1 <- 2.2",
                "2 <- 2.2",
                "3 <- 2.3",
                "4 <- 2.2"
            ],
            "resampled_steps": [
                "8 - 5 = 3 (left: 3 6 12)",
                "8 - 5 = 3 (left: 3 6 12)\n12 / 6 = 2 (left: 3 2 6)",
                "8 - 5 = 3 (left: 3 6 12)\n12 / 6 = 2 (left: 3 2 6)",
                "12 - 6 = 6 (left: 5 8 6)",
                "8 - 5 = 3 (left: 3 6 12)\n12 / 6 = 2 (left: 3 2 6)"
            ]
        },
        "step_3": {
            "steps": [
                "8 - 5 = 3 (left: 3 6 12)\n12 / 3 = 4 (left: 4 12)",
                "8 - 5 = 3 (left: 3 6 12)\n12 / 6 = 2 (left: 3 2 6)\n7 + 3 = 10 (left: 5 10)",
                "8 - 5 = 3 (left: 3 6 12)\n12 / 6 = 2 (left: 3 2 6)\n6 - 3 = 3 (left: 3 3)",
                "12 - 6 = 6 (left: 5 8 6)\n6 - 5 = 1 (left: 1 6)",
                "8 - 5 = 3 (left: 3 6 12)\n12 / 6 = 2 (left: 3 2 6)\n5 * 2 = 10 (left: 10 10)"
            ],
            "values": [
                0.003,
                0.003,
                20.0,
                60.0,
                0.002
            ],
            "resampled": [
                "0 <- 2.2",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- 3.3",
                "4 <- 3.3"
            ],
            "resampled_steps": [
                "8 - 5 = 3 (left: 3 6 12)\n12 / 6 = 2 (left: 3 2 6)",
                "",
                "",
                "12 - 6 = 6 (left: 5 8 6)\n6 - 5 = 1 (left: 1 6)",
                "12 - 6 = 6 (left: 5 8 6)\n6 - 5 = 1 (left: 1 6)"
            ]
        },
        "step_4": {
            "steps": [
                "8 - 5 = 3 (left: 3 6 12)\n12 / 6 = 2 (left: 3 2 6)\n2 / 3 = 0.6666666666666666 (left: 0.67 6)",
                "1 + 2 = 3 (left: 3 9 10)",
                "12 - 8 = 4 (left: 5 6 4)",
                "12 - 6 = 6 (left: 5 8 6)\n6 - 5 = 1 (left: 1 6)\n1 + 6 = 7 (left: 7) ",
                "12 - 6 = 6 (left: 5 8 6)\n6 - 5 = 1 (left: 1 6)\n1 * 6 = 6 (left: 6)"
            ],
            "values": [
                2.0,
                1.002,
                3.0,
                0.002,
                0.002
            ],
            "resampled": [
                "0 <- 3.2",
                "1 <- 1.2",
                "2 <- 2.3",
                "3 <- 3.3",
                "4 <- 2.2"
            ],
            "resampled_steps": [
                "8 - 5 = 3 (left: 3 6 12)\n12 / 6 = 2 (left: 3 2 6)\n6 - 3 = 3 (left: 3 3)",
                "8 - 5 = 3 (left: 3 6 12)",
                "12 - 6 = 6 (left: 5 8 6)",
                "12 - 6 = 6 (left: 5 8 6)\n6 - 5 = 1 (left: 1 6)",
                "8 - 5 = 3 (left: 3 6 12)\n12 / 6 = 2 (left: 3 2 6)"
            ]
        },
        "step_5": {
            "steps": [
                "8 - 5 = 3 (left: 3 6 12)\n12 / 6 = 2 (left: 3 2 6)\n6 - 3 = 3 (left: 3 3)\n3 * 3 = 9 (left: 9)",
                "8 - 5 = 3 (left: 3 6 12)\n9 * 4 = 36 (left: 36)",
                "12 - 6 = 6 (left: 5 8 6)\n8 / 5 = 1.6 (left: 1.6 6)",
                "12 - 6 = 6 (left: 5 8 6)\n6 - 5 = 1 (left: 1 6)\n1 + 6 = 7 (left: 7)",
                "8 - 5 = 3 (left: 3 6 12)\n12 / 6 = 2 (left: 3 2 6)\n5 - 5 = 0 (left: 0 9)"
            ],
            "values": [
                0.003,
                20.0,
                2.0,
                0.002,
                40.001
            ],
            "resampled": [
                "0 <- 3.3",
                "1 <- 5.4",
                "2 <- 5.1",
                "3 <- 2.2",
                "4 <- 2.2"
            ],
            "resampled_steps": [
                "12 - 6 = 6 (left: 5 8 6)\n6 - 5 = 1 (left: 1 6)",
                "8 - 5 = 3 (left: 3 6 12)\n12 / 6 = 2 (left: 3 2 6)\n5 - 5 = 0 (left: 0 9)",
                "8 - 5 = 3 (left: 3 6 12)\n9 * 4 = 36 (left: 36)",
                "8 - 5 = 3 (left: 3 6 12)\n12 / 6 = 2 (left: 3 2 6)",
                "8 - 5 = 3 (left: 3 6 12)\n12 / 6 = 2 (left: 3 2 6)"
            ]
        },
        "step_6": {
            "steps": [
                "12 - 6 = 6 (left: 5 8 6)\n6 - 5 = 1 (left: 1 6)\n1 + 6 = 7 (left: 7)",
                "8 - 5 = 3 (left: 3 6 12)\n12 / 6 = 2 (left: 3 2 6)\n5 - 5 = 0 (left: 0 9)\n0 * 9 = 0 (left: 9)",
                "8 - 5 = 3 (left: 3 6 12)\n9 * 4 = 36 (left: 36)\nNo possible next steps with just the number 36.",
                "8 - 5 = 3 (left: 3 6 12)\n12 / 6 = 2 (left: 3 2 6)\nInput: 4 5 9 3",
                "8 - 5 = 3 (left: 3 6 12)\n12 / 6 = 2 (left: 3 2 6)\n7 - 4 = 3 (left: 3 9)"
            ],
            "values": [
                0.001,
                0.002,
                0.003,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 5.1",
                "1 <- 3.2",
                "2 <- 5.1",
                "3 <- 3.3",
                "4 <- 3.3"
            ],
            "resampled_steps": [
                "8 - 5 = 3 (left: 3 6 12)\n9 * 4 = 36 (left: 36)",
                "8 - 5 = 3 (left: 3 6 12)\n12 / 6 = 2 (left: 3 2 6)\n6 - 3 = 3 (left: 3 3)",
                "8 - 5 = 3 (left: 3 6 12)\n9 * 4 = 36 (left: 36)",
                "12 - 6 = 6 (left: 5 8 6)\n6 - 5 = 1 (left: 1 6)",
                "12 - 6 = 6 (left: 5 8 6)\n6 - 5 = 1 (left: 1 6)"
            ]
        },
        "step_7": {
            "steps": [
                "8 - 5 = 3 (left: 3 6 12)\n9 * 4 = 36 (left: 36)\nThere are no possible next steps with the input 36.",
                "8 - 5 = 3 (left: 3 6 12)\n12 / 6 = 2 (left: 3 2 6)\n6 - 3 = 3 (left: 3 3)\n3 / 3 = 1 (left: 1)",
                "8 - 5 = 3 (left: 3 6 12)\n9 * 4 = 36 (left: 36)\n36 / 2 = 18",
                "12 - 6 = 6 (left: 5 8 6)\n6 - 5 = 1 (left: 1 6)\n6 - 1 = 5 (left: 5)",
                "12 - 6 = 6 (left: 5 8 6)\n6 - 5 = 1 (left: 1 6)\n1 + 6 = 7"
            ],
            "values": [
                0.003,
                0.003,
                0.003,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 5.4",
                "1 <- 3.2",
                "2 <- 1.2",
                "3 <- 5.4",
                "4 <- 3.3"
            ],
            "resampled_steps": [
                "8 - 5 = 3 (left: 3 6 12)\n12 / 6 = 2 (left: 3 2 6)\n5 - 5 = 0 (left: 0 9)",
                "8 - 5 = 3 (left: 3 6 12)\n12 / 6 = 2 (left: 3 2 6)\n6 - 3 = 3 (left: 3 3)",
                "8 - 5 = 3 (left: 3 6 12)",
                "8 - 5 = 3 (left: 3 6 12)\n12 / 6 = 2 (left: 3 2 6)\n5 - 5 = 0 (left: 0 9)",
                "12 - 6 = 6 (left: 5 8 6)\n6 - 5 = 1 (left: 1 6)"
            ]
        },
        "step_8": {
            "steps": [
                "8 - 5 = 3 (left: 3 6 12)\n12 / 6 = 2 (left: 3 2 6)\n5 - 5 = 0 (left: 0 9)\n9 + 0 = 9 (left: 9)",
                "8 - 5 = 3 (left: 3 6 12)\n12 / 6 = 2 (left: 3 2 6)\n6 - 3 = 3 (left: 3 3)\n3 / 3 = 1 (left: 1)",
                "8 - 5 = 3 (left: 3 6 12)\n12 / 3 = 4 (left: 6 4)",
                "8 - 5 = 3 (left: 3 6 12)\n12 / 6 = 2 (left: 3 2 6)\n5 - 5 = 0 (left: 0 9)\n9 - 0 = 9 (left: 9)",
                "12 - 6 = 6 (left: 5 8 6)\n6 - 5 = 1 (left: 1 6)\n6 / 1 = 6 (left: 6)"
            ],
            "values": [
                0.001,
                0.002,
                60.0,
                0.0,
                0.002
            ],
            "resampled": [
                "0 <- 5.4",
                "1 <- 8.2",
                "2 <- 8.2",
                "3 <- 8.2",
                "4 <- 5.1"
            ],
            "resampled_steps": [
                "8 - 5 = 3 (left: 3 6 12)\n12 / 6 = 2 (left: 3 2 6)\n5 - 5 = 0 (left: 0 9)",
                "8 - 5 = 3 (left: 3 6 12)\n12 / 3 = 4 (left: 6 4)",
                "8 - 5 = 3 (left: 3 6 12)\n12 / 3 = 4 (left: 6 4)",
                "8 - 5 = 3 (left: 3 6 12)\n12 / 3 = 4 (left: 6 4)",
                "8 - 5 = 3 (left: 3 6 12)\n9 * 4 = 36 (left: 36)"
            ]
        },
        "step_9": {
            "steps": [
                "8 - 5 = 3 (left: 3 6 12)\n12 / 6 = 2 (left: 3 2 6)\n5 - 5 = 0 (left: 0 9)\nInput: 3 5 7",
                "8 - 5 = 3 (left: 3 6 12)\n12 / 3 = 4 (left: 6 4)\n6 + 4 = 10 (left: 10)",
                "8 - 5 = 3 (left: 3 6 12)\n12 / 3 = 4 (left: 6 4)\n6 / 4 = 1.5 (left: 1.5)",
                "8 - 5 = 3 (left: 3 6 12)\n12 / 3 = 4 (left: 6 4)\n6 - 4 = 2 (left: 2)",
                "8 - 5 = 3 (left: 3 6 12)\n9 * 4 = 36 (left: 36)\nNone, as there is only one number provided."
            ],
            "values": [
                0.003,
                0.003,
                20.0,
                0.0,
                0.003
            ],
            "resampled": [
                "0 <- 8.2",
                "1 <- 8.2",
                "2 <- 8.2",
                "3 <- 5.4",
                "4 <- 9.2"
            ],
            "resampled_steps": [
                "8 - 5 = 3 (left: 3 6 12)\n12 / 3 = 4 (left: 6 4)",
                "8 - 5 = 3 (left: 3 6 12)\n12 / 3 = 4 (left: 6 4)",
                "8 - 5 = 3 (left: 3 6 12)\n12 / 3 = 4 (left: 6 4)",
                "8 - 5 = 3 (left: 3 6 12)\n12 / 6 = 2 (left: 3 2 6)\n5 - 5 = 0 (left: 0 9)",
                "8 - 5 = 3 (left: 3 6 12)\n12 / 3 = 4 (left: 6 4)\n6 / 4 = 1.5 (left: 1.5)"
            ]
        },
        "step_10": {
            "steps": [
                "8 - 5 = 3 (left: 3 6 12)\n12 / 3 = 4 (left: 6 4)\n6 * 4 = 24 (left: 24)",
                "8 - 5 = 3 (left: 3 6 12)\n12 / 3 = 4 (left: 6 4)\n4 - 6 = -2 (left: -2)",
                "8 - 5 = 3 (left: 3 6 12)\n12 / 3 = 4 (left: 6 4)\n6 + 4 = 10 (left: 10)",
                "8 - 5 = 3 (left: 3 6 12)\n12 / 6 = 2 (left: 3 2 6)\n5 - 5 = 0 (left: 0 9)\n9 - 0 = 9 (left: 9)",
                "8 - 5 = 3 (left: 3 6 12)\n12 / 3 = 4 (left: 6 4)\n6 / 4 = 1.5 (left: 1.5)\nThere are no possible next steps with the input 1.5."
            ],
            "values": [
                60.0,
                0.001,
                0.003,
                0.002,
                0.003
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 0.839283
    },
    "930": {
        "input": "2 4 6 7",
        "step_1": {
            "steps": [
                "7 - 2 = 5 (left: 2 4 5)",
                "4 * 6 = 24 (left: 2 24 7)",
                "4 * 6 = 24 (left: 2 24 7)",
                "7 - 2 = 5 (left: 2 4 5)",
                "4 + 6 = 10 (left: 2 10 7)"
            ],
            "values": [
                3.0,
                2.001,
                2.001,
                3.0,
                1.002
            ],
            "resampled": [
                "0 <- 1.3",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- INIT"
            ],
            "resampled_steps": [
                "7 - 2 = 5 (left: 2 4 5)",
                "",
                "",
                "",
                ""
            ]
        },
        "step_2": {
            "steps": [
                "7 - 2 = 5 (left: 2 4 5)\n9 / 3 = 3 (left: 6 3)",
                "4 + 6 = 10 (left: 2 10 7)",
                "2 + 4 = 6 (left: 6 6 7)",
                "Input: 2 3 5 7",
                "2 + 4 = 6 (left: 6 6 7)"
            ],
            "values": [
                1.001,
                1.002,
                2.001,
                0.003,
                3.0
            ],
            "resampled": [
                "0 <- 2.1",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- INIT"
            ],
            "resampled_steps": [
                "4 + 6 = 10 (left: 2 10 7)",
                "",
                "",
                "",
                ""
            ]
        },
        "step_3": {
            "steps": [
                "4 + 6 = 10 (left: 2 10 7)\n7 / 2 = 3.5 (left: 3.5 7)",
                "2 + 4 = 6 (left: 6 6 7)",
                "6 / 2 = 3 (left: 3 4 7)",
                "2 / 4 = 0.5 (left: 0.5 6 7)",
                "6 / 2 = 3 (left: 4 3 7)"
            ],
            "values": [
                1.0,
                2.001,
                2.0,
                3.0,
                2.001
            ],
            "resampled": [
                "0 <- 1.0",
                "1 <- INIT",
                "2 <- 1.0",
                "3 <- 2.2",
                "4 <- INIT"
            ],
            "resampled_steps": [
                "7 - 2 = 5 (left: 2 4 5)",
                "",
                "7 - 2 = 5 (left: 2 4 5)",
                "2 + 4 = 6 (left: 6 6 7)",
                ""
            ]
        },
        "step_4": {
            "steps": [
                "7 - 2 = 5 (left: 2 4 5)\n4 + 5 = 9 (left: 2 9)",
                "6 - 4 = 2 (left: 2 2 7)",
                "7 - 2 = 5 (left: 2 4 5)\nPossible next steps:",
                "2 + 4 = 6 (left: 6 6 7)\n6 * 6 = 36 (left: 7 36)",
                "2 + 4 = 6 (left: 6 6 7)"
            ],
            "values": [
                0.0,
                20.002,
                0.003,
                0.003,
                2.001
            ],
            "resampled": [
                "0 <- 4.1",
                "1 <- 3.2",
                "2 <- 1.0",
                "3 <- 4.1",
                "4 <- 4.1"
            ],
            "resampled_steps": [
                "6 - 4 = 2 (left: 2 2 7)",
                "6 / 2 = 3 (left: 3 4 7)",
                "7 - 2 = 5 (left: 2 4 5)",
                "6 - 4 = 2 (left: 2 2 7)",
                "6 - 4 = 2 (left: 2 2 7)"
            ]
        },
        "step_5": {
            "steps": [
                "6 - 4 = 2 (left: 2 2 7)\n2 + 2 = 4 (left: 4 5)",
                "6 / 2 = 3 (left: 3 4 7)\nInput: 6 9 15",
                "7 - 2 = 5 (left: 2 4 5)\n2 + 4 = 6 (left: 5 6)",
                "6 - 4 = 2 (left: 2 2 7)\nInput: 4 1 8",
                "6 - 4 = 2 (left: 2 2 7)\n7 / 2 = 3.5 (left: 2 3.5)"
            ],
            "values": [
                22.0,
                0.003,
                1.002,
                0.003,
                1.002
            ],
            "resampled": [
                "0 <- 4.1",
                "1 <- 2.1",
                "2 <- 3.1",
                "3 <- 4.1",
                "4 <- 1.3"
            ],
            "resampled_steps": [
                "6 - 4 = 2 (left: 2 2 7)",
                "4 + 6 = 10 (left: 2 10 7)",
                "2 + 4 = 6 (left: 6 6 7)",
                "6 - 4 = 2 (left: 2 2 7)",
                "7 - 2 = 5 (left: 2 4 5)"
            ]
        },
        "step_6": {
            "steps": [
                "6 - 4 = 2 (left: 2 2 7)\n7 - 2 = 5 (left: 2 5)",
                "4 + 6 = 10 (left: 2 10 7)\n10 - 2 = 8 (left: 8 7)",
                "2 + 4 = 6 (left: 6 6 7)\n6 + 6 = 12 (left: 7 12)",
                "6 - 4 = 2 (left: 2 2 7)\n7 * 2 = 14 (left: 2 14)",
                "7 - 2 = 5 (left: 2 4 5)\n5 - 2 = 3 (left: 3 4)"
            ],
            "values": [
                60.0,
                0.003,
                0.002,
                0.003,
                2.001
            ],
            "resampled": [
                "0 <- 6.0",
                "1 <- 6.0",
                "2 <- 6.0",
                "3 <- 3.3",
                "4 <- 6.0"
            ],
            "resampled_steps": [
                "6 - 4 = 2 (left: 2 2 7)\n7 - 2 = 5 (left: 2 5)",
                "6 - 4 = 2 (left: 2 2 7)\n7 - 2 = 5 (left: 2 5)",
                "6 - 4 = 2 (left: 2 2 7)\n7 - 2 = 5 (left: 2 5)",
                "2 / 4 = 0.5 (left: 0.5 6 7)",
                "6 - 4 = 2 (left: 2 2 7)\n7 - 2 = 5 (left: 2 5)"
            ]
        },
        "step_7": {
            "steps": [
                "6 - 4 = 2 (left: 2 2 7)\n7 - 2 = 5 (left: 2 5)\n2 * 5 = 10 (left: 10)",
                "6 - 4 = 2 (left: 2 2 7)\n7 - 2 = 5 (left: 2 5)\nInput: 3 9",
                "6 - 4 = 2 (left: 2 2 7)\n7 - 2 = 5 (left: 2 5)\n10 / 3 = 3.33 (left: 3.33)",
                "2 / 4 = 0.5 (left: 0.5 6 7)\n3 - 2 = 1 (left: 1 3)",
                "6 - 4 = 2 (left: 2 2 7)\n7 - 2 = 5 (left: 2 5)\n7 - 3 = 4 (left: 4 10 7.5)"
            ],
            "values": [
                0.002,
                0.003,
                0.002,
                40.0,
                3.0
            ],
            "resampled": [
                "0 <- 7.3",
                "1 <- 2.4",
                "2 <- 7.3",
                "3 <- 7.3",
                "4 <- 7.3"
            ],
            "resampled_steps": [
                "2 / 4 = 0.5 (left: 0.5 6 7)\n3 - 2 = 1 (left: 1 3)",
                "2 + 4 = 6 (left: 6 6 7)",
                "2 / 4 = 0.5 (left: 0.5 6 7)\n3 - 2 = 1 (left: 1 3)",
                "2 / 4 = 0.5 (left: 0.5 6 7)\n3 - 2 = 1 (left: 1 3)",
                "2 / 4 = 0.5 (left: 0.5 6 7)\n3 - 2 = 1 (left: 1 3)"
            ]
        },
        "step_8": {
            "steps": [
                "2 / 4 = 0.5 (left: 0.5 6 7)\n3 - 2 = 1 (left: 1 3)\n3 / 1 = 3 (left: 3)",
                "2 + 4 = 6 (left: 6 6 7)\n6 + 6 = 12 (left: 7 12)",
                "2 / 4 = 0.5 (left: 0.5 6 7)\n3 - 2 = 1 (left: 1 3)\n1 + 3 = 4 (left: 4)",
                "2 / 4 = 0.5 (left: 0.5 6 7)\n3 - 2 = 1 (left: 1 3)\n3 - 1 = 2 (left: 2)",
                "2 / 4 = 0.5 (left: 0.5 6 7)\n3 - 2 = 1 (left: 1 3)\n1 + 3 = 4 (left: 4)"
            ],
            "values": [
                0.001,
                0.003,
                0.002,
                0.001,
                0.002
            ],
            "resampled": [
                "0 <- 4.4",
                "1 <- 1.3",
                "2 <- 4.1",
                "3 <- 5.0",
                "4 <- 6.0"
            ],
            "resampled_steps": [
                "2 + 4 = 6 (left: 6 6 7)",
                "7 - 2 = 5 (left: 2 4 5)",
                "6 - 4 = 2 (left: 2 2 7)",
                "6 - 4 = 2 (left: 2 2 7)\n2 + 2 = 4 (left: 4 5)",
                "6 - 4 = 2 (left: 2 2 7)\n7 - 2 = 5 (left: 2 5)"
            ]
        },
        "step_9": {
            "steps": [
                "2 + 4 = 6 (left: 6 6 7)\n1.16667 / 0 = Infinity (left: Infinity 7)",
                "7 - 2 = 5 (left: 2 4 5)\n9 - 7 = 2 (left: 3 2)",
                "6 - 4 = 2 (left: 2 2 7)\n2 * 2 = 4 (left: 4 7)",
                "6 - 4 = 2 (left: 2 2 7)\n2 + 2 = 4 (left: 4 5)\n4 * 5 = 20 (left: 20)",
                "6 - 4 = 2 (left: 2 2 7)\n7 - 2 = 5 (left: 2 5)\n2 * 5 = 10 (left: 10)"
            ],
            "values": [
                0.002,
                20.0,
                0.003,
                0.002,
                0.001
            ],
            "resampled": [
                "0 <- 7.3",
                "1 <- 7.3",
                "2 <- 6.0",
                "3 <- 9.1",
                "4 <- 9.1"
            ],
            "resampled_steps": [
                "2 / 4 = 0.5 (left: 0.5 6 7)\n3 - 2 = 1 (left: 1 3)",
                "2 / 4 = 0.5 (left: 0.5 6 7)\n3 - 2 = 1 (left: 1 3)",
                "6 - 4 = 2 (left: 2 2 7)\n7 - 2 = 5 (left: 2 5)",
                "7 - 2 = 5 (left: 2 4 5)\n9 - 7 = 2 (left: 3 2)",
                "7 - 2 = 5 (left: 2 4 5)\n9 - 7 = 2 (left: 3 2)"
            ]
        },
        "step_10": {
            "steps": [
                "2 / 4 = 0.5 (left: 0.5 6 7)\n3 - 2 = 1 (left: 1 3)\n3 / 1 = 3 (left: 3)",
                "2 / 4 = 0.5 (left: 0.5 6 7)\n3 - 2 = 1 (left: 1 3)\n3 / 1 = 3 (left: 3)",
                "6 - 4 = 2 (left: 2 2 7)\n7 - 2 = 5 (left: 2 5)\n3 + 5 = 8 (left: 1 7 8)",
                "7 - 2 = 5 (left: 2 4 5)\n9 - 7 = 2 (left: 3 2)\n3 - 2 = 1 (left: 1)",
                "7 - 2 = 5 (left: 2 4 5)\n9 - 7 = 2 (left: 3 2)\n3 * 2 = 6 (left: 6)"
            ],
            "values": [
                0.002,
                0.002,
                2.001,
                0.003,
                0.003
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 0.868925
    },
    "931": {
        "input": "2 5 10 10",
        "step_1": {
            "steps": [
                "2 + 5 = 7 (left: 7 10 10)",
                "10 - 2 = 8 (left: 8 10 10)",
                "5 * 2 = 10 (left: 10 10 10)",
                "10 - 2 = 8 (left: 5 8 10)",
                "10 - 5 = 5 (left: 2 5 10)"
            ],
            "values": [
                1.002,
                2.001,
                20.001,
                41.0,
                2.001
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- 1.2",
                "4 <- 1.3"
            ],
            "resampled_steps": [
                "",
                "",
                "",
                "5 * 2 = 10 (left: 10 10 10)",
                "10 - 2 = 8 (left: 5 8 10)"
            ]
        },
        "step_2": {
            "steps": [
                "10 - 5 = 5 (left: 2 5 10)",
                "10 / 2 = 5 (left: 5 10 10)",
                "10 / 5 = 2 (left: 2 10 10)",
                "5 * 2 = 10 (left: 10 10 10)\n3 * 5 = 15 (left: 1 15 7)",
                "10 - 2 = 8 (left: 5 8 10)\n5 - 8 = -3 (left: -3 10)"
            ],
            "values": [
                0.003,
                3.0,
                0.002,
                2.0,
                2.001
            ],
            "resampled": [
                "0 <- 1.2",
                "1 <- 1.2",
                "2 <- 1.2",
                "3 <- 1.3",
                "4 <- 1.3"
            ],
            "resampled_steps": [
                "5 * 2 = 10 (left: 10 10 10)",
                "5 * 2 = 10 (left: 10 10 10)",
                "5 * 2 = 10 (left: 10 10 10)",
                "10 - 2 = 8 (left: 5 8 10)",
                "10 - 2 = 8 (left: 5 8 10)"
            ]
        },
        "step_3": {
            "steps": [
                "5 * 2 = 10 (left: 10 10 10)\n10 * 10 = 100 (left: 10 100)",
                "5 * 2 = 10 (left: 10 10 10)\n10 * 10 = 100 (left: 10 100)",
                "5 * 2 = 10 (left: 10 10 10)\n10 - 4 = 6 (left: 6 8 10 6)",
                "10 - 2 = 8 (left: 5 8 10)\n10 / 5 = 2 (left: 2 10)",
                "10 - 2 = 8 (left: 5 8 10)\n7 - 1 = 6 (left: 3 6 9)"
            ],
            "values": [
                0.001,
                60.0,
                22.0,
                3.0,
                2.001
            ],
            "resampled": [
                "0 <- 3.1",
                "1 <- 3.1",
                "2 <- INIT",
                "3 <- 3.2",
                "4 <- 1.3"
            ],
            "resampled_steps": [
                "5 * 2 = 10 (left: 10 10 10)\n10 * 10 = 100 (left: 10 100)",
                "5 * 2 = 10 (left: 10 10 10)\n10 * 10 = 100 (left: 10 100)",
                "",
                "5 * 2 = 10 (left: 10 10 10)\n10 - 4 = 6 (left: 6 8 10 6)",
                "10 - 2 = 8 (left: 5 8 10)"
            ]
        },
        "step_4": {
            "steps": [
                "5 * 2 = 10 (left: 10 10 10)\n10 * 10 = 100 (left: 10 100)\n10 + 100 = 110 (left: 100)",
                "5 * 2 = 10 (left: 10 10 10)\n10 * 10 = 100 (left: 10 100)\n10 + 100 = 110 (left: 10 110)",
                "5 * 2 = 10 (left: 10 10 10)",
                "5 * 2 = 10 (left: 10 10 10)\n10 - 4 = 6 (left: 6 8 10 6)\n6 * 8 = 48 (left: 10 48 6)",
                "10 - 2 = 8 (left: 5 8 10)\nPossible next steps:"
            ],
            "values": [
                0.001,
                20.001,
                2.0,
                3.0,
                0.003
            ],
            "resampled": [
                "0 <- 3.3",
                "1 <- 3.1",
                "2 <- 3.1",
                "3 <- 4.3",
                "4 <- 3.4"
            ],
            "resampled_steps": [
                "10 - 2 = 8 (left: 5 8 10)\n10 / 5 = 2 (left: 2 10)",
                "5 * 2 = 10 (left: 10 10 10)\n10 * 10 = 100 (left: 10 100)",
                "5 * 2 = 10 (left: 10 10 10)\n10 * 10 = 100 (left: 10 100)",
                "5 * 2 = 10 (left: 10 10 10)\n10 - 4 = 6 (left: 6 8 10 6)\n6 * 8 = 48 (left: 10 48 6)",
                "10 - 2 = 8 (left: 5 8 10)\n7 - 1 = 6 (left: 3 6 9)"
            ]
        },
        "step_5": {
            "steps": [
                "10 - 2 = 8 (left: 5 8 10)\n10 / 5 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)",
                "5 * 2 = 10 (left: 10 10 10)\n10 * 10 = 100 (left: 10 100)\n10 * 10 = 100 (left: 100)",
                "5 * 2 = 10 (left: 10 10 10)\n10 * 10 = 100 (left: 10 100)\n10 * 10 = 100 (left: 100)",
                "5 * 2 = 10 (left: 10 10 10)\n10 - 4 = 6 (left: 6 8 10 6)\n6 * 8 = 48 (left: 10 48 6)\n48 / 6 = 8 (left: 10 8)",
                "10 - 2 = 8 (left: 5 8 10)\n7 - 1 = 6 (left: 3 6 9)\n9 - 3 = 6 (left: 6 9)"
            ],
            "values": [
                20.002,
                0.001,
                0.001,
                0.001,
                0.003
            ],
            "resampled": [
                "0 <- 5.0",
                "1 <- 4.1",
                "2 <- INIT",
                "3 <- 4.1",
                "4 <- 4.3"
            ],
            "resampled_steps": [
                "10 - 2 = 8 (left: 5 8 10)\n10 / 5 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)",
                "5 * 2 = 10 (left: 10 10 10)\n10 * 10 = 100 (left: 10 100)\n10 + 100 = 110 (left: 10 110)",
                "",
                "5 * 2 = 10 (left: 10 10 10)\n10 * 10 = 100 (left: 10 100)\n10 + 100 = 110 (left: 10 110)",
                "5 * 2 = 10 (left: 10 10 10)\n10 - 4 = 6 (left: 6 8 10 6)\n6 * 8 = 48 (left: 10 48 6)"
            ]
        },
        "step_6": {
            "steps": [
                "10 - 2 = 8 (left: 5 8 10)\n10 / 5 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)\n12 * 2 = 24 (left: 24)",
                "5 * 2 = 10 (left: 10 10 10)\n10 * 10 = 100 (left: 10 100)\n10 + 100 = 110 (left: 10 110)\n110 - 10 = 100 (left: 10 100)",
                "10 / 2 = 5 (left: 5 10 10)",
                "5 * 2 = 10 (left: 10 10 10)\n10 * 10 = 100 (left: 10 100)\n10 + 100 = 110 (left: 10 110)\n3 * 5 = 15 (left: 7 15)",
                "5 * 2 = 10 (left: 10 10 10)\n10 - 4 = 6 (left: 6 8 10 6)\n6 * 8 = 48 (left: 10 48 6)\n10 * 48 = 480 (left: 6 480)"
            ],
            "values": [
                60.0,
                20.0,
                1.002,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 3.1",
                "1 <- 5.0",
                "2 <- 6.0",
                "3 <- 3.1",
                "4 <- 3.1"
            ],
            "resampled_steps": [
                "5 * 2 = 10 (left: 10 10 10)\n10 * 10 = 100 (left: 10 100)",
                "10 - 2 = 8 (left: 5 8 10)\n10 / 5 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)",
                "10 - 2 = 8 (left: 5 8 10)\n10 / 5 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)\n12 * 2 = 24 (left: 24)",
                "5 * 2 = 10 (left: 10 10 10)\n10 * 10 = 100 (left: 10 100)",
                "5 * 2 = 10 (left: 10 10 10)\n10 * 10 = 100 (left: 10 100)"
            ]
        },
        "step_7": {
            "steps": [
                "5 * 2 = 10 (left: 10 10 10)\n10 * 10 = 100 (left: 10 100)\n10 * 100 = 1000 (left: 1000)",
                "10 - 2 = 8 (left: 5 8 10)\n10 / 5 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)\n12 - 2 = 10 (left: 10)",
                "10 - 2 = 8 (left: 5 8 10)\n10 / 5 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: (10 - 2) * (5 + 10) = 24",
                "5 * 2 = 10 (left: 10 10 10)\n10 * 10 = 100 (left: 10 100)\n100 / 10 = 10 (left: 10)",
                "5 * 2 = 10 (left: 10 10 10)\n10 * 10 = 100 (left: 10 100)\n27 - 9 = 18 (left: 3 18)"
            ],
            "values": [
                0.003,
                0.002,
                60.0,
                0.002,
                0.003
            ],
            "resampled": [
                "0 <- 7.2",
                "1 <- 6.1",
                "2 <- 7.2",
                "3 <- 3.1",
                "4 <- 7.2"
            ],
            "resampled_steps": [
                "10 - 2 = 8 (left: 5 8 10)\n10 / 5 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: (10 - 2) * (5 + 10) = 24",
                "5 * 2 = 10 (left: 10 10 10)\n10 * 10 = 100 (left: 10 100)\n10 + 100 = 110 (left: 10 110)\n110 - 10 = 100 (left: 10 100)",
                "10 - 2 = 8 (left: 5 8 10)\n10 / 5 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: (10 - 2) * (5 + 10) = 24",
                "5 * 2 = 10 (left: 10 10 10)\n10 * 10 = 100 (left: 10 100)",
                "10 - 2 = 8 (left: 5 8 10)\n10 / 5 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: (10 - 2) * (5 + 10) = 24"
            ]
        },
        "step_8": {
            "steps": [
                "10 - 2 = 8 (left: 5 8 10)\n10 / 5 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: (10 - 2) * (5 + 10) = 24\nInput: 3 3 6 8\nSteps:\n3 + 8 = 11 (left: 3 6 11)\n6 - 3 = 3 (left: 3 11)\n3 * 11 = 33 (left: 33)\n33 - 9 = 24 (left: 24)\nAnswer: ((3 + 8) - 3) * 6 = 24",
                "5 * 2 = 10 (left: 10 10 10)\n10 * 10 = 100 (left: 10 100)\n10 + 100 = 110 (left: 10 110)\n110 - 10 = 100 (left: 10 100)\n100 * 10 = 1000 (left: 1000)",
                "10 - 2 = 8 (left: 5 8 10)\n10 / 5 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: (10 - 2) * (5 + 10) = 24\nInput: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n5 - 3 = 2 (left: 2 21)\n2 + 21 = 23 (left: 23)\n23 + 1 = 24 (left: 24)\nAnswer: ((3 * 7) + (5 - 3)) + 1 = 24",
                "5 * 2 = 10 (left: 10 10 10)\n10 * 10 = 100 (left: 10 100)\nInput: 5 25 125",
                "10 - 2 = 8 (left: 5 8 10)\n10 / 5 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: (10 - 2) * (5 + 10) = 24\nInput: 3 3 8 8\nSteps:\n3 * 8 = 24 (left: 3 8 24)\n8 - 3 = 5 (left: 5 24)\n5 * 24 = 120 (left: 120)\nAnswer: (3 * 8) - (8 - 3) = 24"
            ],
            "values": [
                60.0,
                0.003,
                60.0,
                0.003,
                60.0
            ],
            "resampled": [
                "0 <- 8.2",
                "1 <- 8.0",
                "2 <- 8.0",
                "3 <- 5.0",
                "4 <- 7.2"
            ],
            "resampled_steps": [
                "10 - 2 = 8 (left: 5 8 10)\n10 / 5 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: (10 - 2) * (5 + 10) = 24\nInput: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n5 - 3 = 2 (left: 2 21)\n2 + 21 = 23 (left: 23)\n23 + 1 = 24 (left: 24)\nAnswer: ((3 * 7) + (5 - 3)) + 1 = 24",
                "10 - 2 = 8 (left: 5 8 10)\n10 / 5 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: (10 - 2) * (5 + 10) = 24\nInput: 3 3 6 8\nSteps:\n3 + 8 = 11 (left: 3 6 11)\n6 - 3 = 3 (left: 3 11)\n3 * 11 = 33 (left: 33)\n33 - 9 = 24 (left: 24)\nAnswer: ((3 + 8) - 3) * 6 = 24",
                "10 - 2 = 8 (left: 5 8 10)\n10 / 5 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: (10 - 2) * (5 + 10) = 24\nInput: 3 3 6 8\nSteps:\n3 + 8 = 11 (left: 3 6 11)\n6 - 3 = 3 (left: 3 11)\n3 * 11 = 33 (left: 33)\n33 - 9 = 24 (left: 24)\nAnswer: ((3 + 8) - 3) * 6 = 24",
                "10 - 2 = 8 (left: 5 8 10)\n10 / 5 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)",
                "10 - 2 = 8 (left: 5 8 10)\n10 / 5 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: (10 - 2) * (5 + 10) = 24"
            ]
        },
        "step_9": {
            "steps": [
                "10 - 2 = 8 (left: 5 8 10)\n10 / 5 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: (10 - 2) * (5 + 10) = 24\nInput: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n5 - 3 = 2 (left: 2 21)\n2 + 21 = 23 (left: 23)\n23 + 1 = 24 (left: 24)\nAnswer: ((3 * 7) + (5 - 3)) + 1 = 24\nInput: 2 3 4 6\nSteps:\n2 * 4 = 8 (left: 3 6 8)\n6 - 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (2 * 4) * (6 - 3) = 24",
                "10 - 2 = 8 (left: 5 8 10)\n10 / 5 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: (10 - 2) * (5 + 10) = 24\nInput: 3 3 6 8\nSteps:\n3 + 8 = 11 (left: 3 6 11)\n6 - 3 = 3 (left: 3 11)\n3 * 11 = 33 (left: 33)\n33 - 9 = 24 (left: 24)\nAnswer: ((3 + 8) - 3) * 6 = 24\nInput: 4 6 7 8\nSteps:\n4 + 8 = 12 (left: 6 7 12)\n6 * 7 = 42 (left: 12 42)\n42 / 2 = 21 (left: 21)\n21 + 3 = 24 (left: 24)\nAnswer: ((4 + 8) * 7) / 2 + 3 = 24",
                "10 - 2 = 8 (left: 5 8 10)\n10 / 5 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: (10 - 2) * (5 + 10) = 24\nInput: 3 3 6 8\nSteps:\n3 + 8 = 11 (left: 3 6 11)\n6 - 3 = 3 (left: 3 11)\n3 * 11 = 33 (left: 33)\n33 - 9 = 24 (left: 24)\nAnswer: ((3 + 8) - 3) * 6 = 24\nInput: 2 3 4 6\nSteps:\n3 * 2 = 6 (left: 4 6 6)\n6 * 4 = 24 (left: 24)\nAnswer: 3 * 2 * 4 = 24",
                "10 - 2 = 8 (left: 5 8 10)\n10 / 5 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)\n12 / 2 = 6 (left: 6)",
                "10 - 2 = 8 (left: 5 8 10)\n10 / 5 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: (10 - 2) * (5 + 10) = 24\nInput: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n1 * 9 = 9 (left: 9)\n9 * 9 = 81 (left: 81)\nAnswer: (3 * 3) * (8 - 9) = 24"
            ],
            "values": [
                60.0,
                60.0,
                60.0,
                0.003,
                60.0
            ],
            "resampled": [
                "0 <- 9.1",
                "1 <- 6.0",
                "2 <- 5.0",
                "3 <- 9.1",
                "4 <- 8.0"
            ],
            "resampled_steps": [
                "10 - 2 = 8 (left: 5 8 10)\n10 / 5 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: (10 - 2) * (5 + 10) = 24\nInput: 3 3 6 8\nSteps:\n3 + 8 = 11 (left: 3 6 11)\n6 - 3 = 3 (left: 3 11)\n3 * 11 = 33 (left: 33)\n33 - 9 = 24 (left: 24)\nAnswer: ((3 + 8) - 3) * 6 = 24\nInput: 4 6 7 8\nSteps:\n4 + 8 = 12 (left: 6 7 12)\n6 * 7 = 42 (left: 12 42)\n42 / 2 = 21 (left: 21)\n21 + 3 = 24 (left: 24)\nAnswer: ((4 + 8) * 7) / 2 + 3 = 24",
                "10 - 2 = 8 (left: 5 8 10)\n10 / 5 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)\n12 * 2 = 24 (left: 24)",
                "10 - 2 = 8 (left: 5 8 10)\n10 / 5 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)",
                "10 - 2 = 8 (left: 5 8 10)\n10 / 5 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: (10 - 2) * (5 + 10) = 24\nInput: 3 3 6 8\nSteps:\n3 + 8 = 11 (left: 3 6 11)\n6 - 3 = 3 (left: 3 11)\n3 * 11 = 33 (left: 33)\n33 - 9 = 24 (left: 24)\nAnswer: ((3 + 8) - 3) * 6 = 24\nInput: 4 6 7 8\nSteps:\n4 + 8 = 12 (left: 6 7 12)\n6 * 7 = 42 (left: 12 42)\n42 / 2 = 21 (left: 21)\n21 + 3 = 24 (left: 24)\nAnswer: ((4 + 8) * 7) / 2 + 3 = 24",
                "10 - 2 = 8 (left: 5 8 10)\n10 / 5 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: (10 - 2) * (5 + 10) = 24\nInput: 3 3 6 8\nSteps:\n3 + 8 = 11 (left: 3 6 11)\n6 - 3 = 3 (left: 3 11)\n3 * 11 = 33 (left: 33)\n33 - 9 = 24 (left: 24)\nAnswer: ((3 + 8) - 3) * 6 = 24"
            ]
        },
        "step_10": {
            "steps": [
                "10 - 2 = 8 (left: 5 8 10)\n10 / 5 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: (10 - 2) * (5 + 10) = 24\nInput: 3 3 6 8\nSteps:\n3 + 8 = 11 (left: 3 6 11)\n6 - 3 = 3 (left: 3 11)\n3 * 11 = 33 (left: 33)\n33 - 9 = 24 (left: 24)\nAnswer: ((3 + 8) - 3) * 6 = 24\nInput: 4 6 7 8\nSteps:\n4 + 8 = 12 (left: 6 7 12)\n6 * 7 = 42 (left: 12 42)\n42 / 2 = 21 (left: 21)\n21 + 3 = 24 (left: 24)\nAnswer: ((4 + 8) * 7) / 2 + 3 = 24\nInput: 2 3 5 6\nSteps:\n3 + 5 = 8 (left: 2 6 8)\n2 * 8 = 16 (left: 6 16)\n16 - 6 = 10 (left: 10)\n10 + 14 = 24 (left: 24)\nAnswer: ((2 + 3) * 8) + (6 - 6) = 24",
                "10 - 2 = 8 (left: 5 8 10)\n10 / 5 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((10 - 2) * (10 / 5)) + 2 = 24",
                "10 - 2 = 8 (left: 5 8 10)\n10 / 5 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)\n12 - 8 = 4 (left: 4)",
                "10 - 2 = 8 (left: 5 8 10)\n10 / 5 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: (10 - 2) * (5 + 10) = 24\nInput: 3 3 6 8\nSteps:\n3 + 8 = 11 (left: 3 6 11)\n6 - 3 = 3 (left: 3 11)\n3 * 11 = 33 (left: 33)\n33 - 9 = 24 (left: 24)\nAnswer: ((3 + 8) - 3) * 6 = 24\nInput: 4 6 7 8\nSteps:\n4 + 8 = 12 (left: 6 7 12)\n6 * 7 = 42 (left: 12 42)\n42 / 2 = 21 (left: 21)\n21 + 3 = 24 (left: 24)\nAnswer: ((4 + 8) * 7) / 2 + 3 = 24\nInput: 2 3 5 8\nSteps:\n2 * 5 = 10 (left: 3 8 10)\n10 - 8 = 2 (left: 2 3)\n2 * 3 = 6 (left: 6)\n6 * 4 = 24 (left: 24)\nAnswer: ((2 * 5) - 8) * 3 = 24",
                "10 - 2 = 8 (left: 5 8 10)\n10 / 5 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: (10 - 2) * (5 + 10) = 24\nInput: 3 3 6 8\nSteps:\n3 + 8 = 11 (left: 3 6 11)\n6 - 3 = 3 (left: 3 11)\n3 * 11 = 33 (left: 33)\n33 - 9 = 24 (left: 24)\nAnswer: ((3 + 8) - 3) * 6 = 24\nInput: 1 3 5 8\nSteps:\n3 * 8 = 24 (left: 1 5 24)\n5 - 1 = 4 (left: 4 24)\n4 * 6 = 24 (left: 24)\nAnswer: (3 * 8) * (5 - 1) = 24"
            ],
            "values": [
                60.0,
                60.0,
                0.001,
                60.0,
                60.0
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 0.8973289999999999
    },
    "932": {
        "input": "6 6 7 12",
        "step_1": {
            "steps": [
                "12 / 6 = 2 (left: 6 7)",
                "6 + 6 = 12 (left: 7 12)",
                "12 - 7 = 5 (left: 6 5 12)",
                "6 + 6 = 12 (left: 7 12)",
                "7 - 6 = 1 (left: 1 6 12)"
            ],
            "values": [
                0.003,
                1.002,
                22.0,
                0.002,
                0.003
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- 1.2",
                "3 <- INIT",
                "4 <- 1.2"
            ],
            "resampled_steps": [
                "",
                "",
                "12 - 7 = 5 (left: 6 5 12)",
                "",
                "12 - 7 = 5 (left: 6 5 12)"
            ]
        },
        "step_2": {
            "steps": [
                "6 / 6 = 1 (left: 1 5 12)",
                "12 / 6 = 2 (left: 1 2 12)",
                "12 - 7 = 5 (left: 6 5 12)\n5 * 6 = 30 (left: 30 12)",
                "6 / 6 = 1 (left: 7 12)",
                "12 - 7 = 5 (left: 6 5 12)\n5 + 12 = 17 (left: 6 17)"
            ],
            "values": [
                2.001,
                60.0,
                0.002,
                0.003,
                1.002
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- 2.1",
                "2 <- 2.1",
                "3 <- 1.2",
                "4 <- 2.1"
            ],
            "resampled_steps": [
                "",
                "12 / 6 = 2 (left: 1 2 12)",
                "12 / 6 = 2 (left: 1 2 12)",
                "12 - 7 = 5 (left: 6 5 12)",
                "12 / 6 = 2 (left: 1 2 12)"
            ]
        },
        "step_3": {
            "steps": [
                "7 * 1 = 7 (left: 7 8 12)",
                "12 / 6 = 2 (left: 1 2 12)\n1 + 2 = 3 (left: 3 12)",
                "12 / 6 = 2 (left: 1 2 12)\n1 + 2 = 3 (left: 3 12)",
                "12 - 7 = 5 (left: 6 5 12)\n9 / 3 = 3 (left: 3 4)",
                "12 / 6 = 2 (left: 1 2 12)\n1 + 2 = 3 (left: 3 12)"
            ],
            "values": [
                3.0,
                20.002,
                40.0,
                22.0,
                2.001
            ],
            "resampled": [
                "0 <- 2.1",
                "1 <- 3.1",
                "2 <- 3.2",
                "3 <- 3.2",
                "4 <- 3.4"
            ],
            "resampled_steps": [
                "12 / 6 = 2 (left: 1 2 12)",
                "12 / 6 = 2 (left: 1 2 12)\n1 + 2 = 3 (left: 3 12)",
                "12 / 6 = 2 (left: 1 2 12)\n1 + 2 = 3 (left: 3 12)",
                "12 / 6 = 2 (left: 1 2 12)\n1 + 2 = 3 (left: 3 12)",
                "12 / 6 = 2 (left: 1 2 12)\n1 + 2 = 3 (left: 3 12)"
            ]
        },
        "step_4": {
            "steps": [
                "12 / 6 = 2 (left: 1 2 12)\n12 / 1 = 12 (left: 12)",
                "12 / 6 = 2 (left: 1 2 12)\n1 + 2 = 3 (left: 3 12)\n12 - 3 = 9 (left: 3 9)",
                "12 / 6 = 2 (left: 1 2 12)\n1 + 2 = 3 (left: 3 12)\n12 / 3 = 4 (left: 4 12)",
                "12 / 6 = 2 (left: 1 2 12)\n1 + 2 = 3 (left: 3 12)\n3 + 12 = 15 (left: 15)",
                "12 / 6 = 2 (left: 1 2 12)\n1 + 2 = 3 (left: 3 12)\n3 + 12 = 15 (left: 15)"
            ],
            "values": [
                0.002,
                0.003,
                0.002,
                0.002,
                0.003
            ],
            "resampled": [
                "0 <- 3.3",
                "1 <- 2.1",
                "2 <- 3.2",
                "3 <- 3.2",
                "4 <- INIT"
            ],
            "resampled_steps": [
                "12 - 7 = 5 (left: 6 5 12)\n9 / 3 = 3 (left: 3 4)",
                "12 / 6 = 2 (left: 1 2 12)",
                "12 / 6 = 2 (left: 1 2 12)\n1 + 2 = 3 (left: 3 12)",
                "12 / 6 = 2 (left: 1 2 12)\n1 + 2 = 3 (left: 3 12)",
                ""
            ]
        },
        "step_5": {
            "steps": [
                "12 - 7 = 5 (left: 6 5 12)\n9 / 3 = 3 (left: 3 4)\n4 - 3 = 1 (left: 1)",
                "12 / 6 = 2 (left: 1 2 12)\n7 - 6 = 1 (left: 4 5 1)",
                "12 / 6 = 2 (left: 1 2 12)\n1 + 2 = 3 (left: 3 12)\n3 * 12 = 36 (left: 36)",
                "12 / 6 = 2 (left: 1 2 12)\n1 + 2 = 3 (left: 3 12)\n3 + 12 = 15 (left: 15)",
                "7 + 6 = 13 (left: 12 13)"
            ],
            "values": [
                0.0,
                3.0,
                20.0,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 3.1",
                "1 <- 3.1",
                "2 <- 3.3",
                "3 <- 3.2",
                "4 <- 3.1"
            ],
            "resampled_steps": [
                "12 / 6 = 2 (left: 1 2 12)\n1 + 2 = 3 (left: 3 12)",
                "12 / 6 = 2 (left: 1 2 12)\n1 + 2 = 3 (left: 3 12)",
                "12 - 7 = 5 (left: 6 5 12)\n9 / 3 = 3 (left: 3 4)",
                "12 / 6 = 2 (left: 1 2 12)\n1 + 2 = 3 (left: 3 12)",
                "12 / 6 = 2 (left: 1 2 12)\n1 + 2 = 3 (left: 3 12)"
            ]
        },
        "step_6": {
            "steps": [
                "12 / 6 = 2 (left: 1 2 12)\n1 + 2 = 3 (left: 3 12)\n3 + 12 = 15 (left: 15)",
                "12 / 6 = 2 (left: 1 2 12)\n1 + 2 = 3 (left: 3 12)\n12 - 3 = 9 (left: 9)",
                "12 - 7 = 5 (left: 6 5 12)\n9 / 3 = 3 (left: 3 4)\n3 + 4 = 7 (left: 7)",
                "12 / 6 = 2 (left: 1 2 12)\n1 + 2 = 3 (left: 3 12)\n3 + 12 = 15 (left: 15)",
                "12 / 6 = 2 (left: 1 2 12)\n1 + 2 = 3 (left: 3 12)\n15 / 4 = 3.75 (left: 3.75 15)"
            ],
            "values": [
                0.002,
                0.002,
                0.002,
                0.003,
                0.001
            ],
            "resampled": [
                "0 <- 2.1",
                "1 <- 2.1",
                "2 <- 2.1",
                "3 <- 5.2",
                "4 <- INIT"
            ],
            "resampled_steps": [
                "12 / 6 = 2 (left: 1 2 12)",
                "12 / 6 = 2 (left: 1 2 12)",
                "12 / 6 = 2 (left: 1 2 12)",
                "12 / 6 = 2 (left: 1 2 12)\n1 + 2 = 3 (left: 3 12)\n3 * 12 = 36 (left: 36)",
                ""
            ]
        },
        "step_7": {
            "steps": [
                "12 / 6 = 2 (left: 1 2 12)\n12 - 1 = 11 (left: 2 11)",
                "12 / 6 = 2 (left: 1 2 12)\n12 - 1 = 11 (left: 2 11)",
                "12 / 6 = 2 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)",
                "12 / 6 = 2 (left: 1 2 12)\n1 + 2 = 3 (left: 3 12)\n3 * 12 = 36 (left: 36)\nNone, 36 is a single number and cannot be combined with other numbers.",
                "6 * 7 = 42 (left: 6 12)"
            ],
            "values": [
                1.002,
                1.001,
                60.0,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 7.2",
                "1 <- 5.2",
                "2 <- 1.2",
                "3 <- 7.2",
                "4 <- 2.1"
            ],
            "resampled_steps": [
                "12 / 6 = 2 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)",
                "12 / 6 = 2 (left: 1 2 12)\n1 + 2 = 3 (left: 3 12)\n3 * 12 = 36 (left: 36)",
                "12 - 7 = 5 (left: 6 5 12)",
                "12 / 6 = 2 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)",
                "12 / 6 = 2 (left: 1 2 12)"
            ]
        },
        "step_8": {
            "steps": [
                "12 / 6 = 2 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)\n1 * 6 = 6 (left: 6)",
                "12 / 6 = 2 (left: 1 2 12)\n1 + 2 = 3 (left: 3 12)\n3 * 12 = 36 (left: 36)\nNo possible next steps as there is only one number in the input.",
                "12 - 7 = 5 (left: 6 5 12)\n6 * 5 = 30 (left: 30 12)",
                "12 / 6 = 2 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)\n6 / 1 = 6 (left: 6)",
                "12 / 6 = 2 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)"
            ],
            "values": [
                0.002,
                0.003,
                0.003,
                0.003,
                60.0
            ],
            "resampled": [
                "0 <- 3.2",
                "1 <- 7.2",
                "2 <- 2.1",
                "3 <- 7.2",
                "4 <- 2.1"
            ],
            "resampled_steps": [
                "12 / 6 = 2 (left: 1 2 12)\n1 + 2 = 3 (left: 3 12)",
                "12 / 6 = 2 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)",
                "12 / 6 = 2 (left: 1 2 12)",
                "12 / 6 = 2 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)",
                "12 / 6 = 2 (left: 1 2 12)"
            ]
        },
        "step_9": {
            "steps": [
                "12 / 6 = 2 (left: 1 2 12)\n1 + 2 = 3 (left: 3 12)\n3 * 12 = 36 (left: 36)",
                "12 / 6 = 2 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)\n1 * 6 = 6 (left: 6)",
                "12 / 6 = 2 (left: 1 2 12)\n12 - 2 = 10 (left: 1 10)",
                "12 / 6 = 2 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)\n6 - 1 = 5 (left: 5)",
                "12 / 6 = 2 (left: 1 2 12)\n2 - 1 = 1 (left: 1 12)"
            ],
            "values": [
                40.0,
                0.002,
                60.0,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 3.2",
                "1 <- 7.2",
                "2 <- 3.3",
                "3 <- 9.0",
                "4 <- 3.1"
            ],
            "resampled_steps": [
                "12 / 6 = 2 (left: 1 2 12)\n1 + 2 = 3 (left: 3 12)",
                "12 / 6 = 2 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)",
                "12 - 7 = 5 (left: 6 5 12)\n9 / 3 = 3 (left: 3 4)",
                "12 / 6 = 2 (left: 1 2 12)\n1 + 2 = 3 (left: 3 12)\n3 * 12 = 36 (left: 36)",
                "12 / 6 = 2 (left: 1 2 12)\n1 + 2 = 3 (left: 3 12)"
            ]
        },
        "step_10": {
            "steps": [
                "12 / 6 = 2 (left: 1 2 12)\n1 + 2 = 3 (left: 3 12)\n12 - 3 = 9 (left: 9)",
                "12 / 6 = 2 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)\n1 + 6 = 7",
                "12 - 7 = 5 (left: 6 5 12)\n9 / 3 = 3 (left: 3 4)\n3 * 4 = 12 (left: 12)",
                "12 / 6 = 2 (left: 1 2 12)\n1 + 2 = 3 (left: 3 12)\n3 * 12 = 36 (left: 36)\n36 / 2 = 18",
                "12 / 6 = 2 (left: 1 2 12)\n1 + 2 = 3 (left: 3 12)\n12 - 3 = 9 (left: 9 12)"
            ],
            "values": [
                0.001,
                0.003,
                0.001,
                0.003,
                1.002
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 0.9231875
    },
    "933": {
        "input": "6 9 9 11",
        "step_1": {
            "steps": [
                "11 - 9 = 2 (left: 6 9 2)",
                "11 + 6 = 17 (left: 9 9 17)",
                "9 - 6 = 3 (left: 3 9 11)",
                "9 / 3 = 3 (left: 6 3 11)",
                "9 - 6 = 3 (left: 3 9 11)"
            ],
            "values": [
                2.001,
                1.002,
                0.003,
                1.002,
                1.002
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- INIT"
            ],
            "resampled_steps": [
                "",
                "",
                "",
                "",
                ""
            ]
        },
        "step_2": {
            "steps": [
                "9 / 3 = 3 (left: 6 3 11)",
                "11 - 9 = 2 (left: 6 9 2)",
                "9 / 3 = 3 (left: 6 3 11)",
                "11 - 9 = 2 (left: 6 9 2)",
                "9 - 6 = 3 (left: 3 9 11)"
            ],
            "values": [
                1.002,
                3.0,
                1.002,
                3.0,
                0.003
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- 1.4"
            ],
            "resampled_steps": [
                "",
                "",
                "",
                "",
                "9 - 6 = 3 (left: 3 9 11)"
            ]
        },
        "step_3": {
            "steps": [
                "9 - 6 = 3 (left: 3 9 11)",
                "9 + 9 = 18 (left: 6 18 11)",
                "9 - 6 = 3 (left: 3 9 11)",
                "6 + 9 = 15 (left: 9 9 11)",
                "9 - 6 = 3 (left: 3 9 11)\n4 + 5 = 9 (left: 7 9 10)"
            ],
            "values": [
                2.001,
                2.001,
                0.003,
                3.0,
                2.001
            ],
            "resampled": [
                "0 <- 2.3",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- 3.0",
                "4 <- 2.3"
            ],
            "resampled_steps": [
                "11 - 9 = 2 (left: 6 9 2)",
                "",
                "",
                "9 - 6 = 3 (left: 3 9 11)",
                "11 - 9 = 2 (left: 6 9 2)"
            ]
        },
        "step_4": {
            "steps": [
                "11 - 9 = 2 (left: 6 9 2)\n6 + 9 = 15 (left: 2 15)",
                "11 - 6 = 5 (left: 5 9 11)",
                "11 - 9 = 2 (left: 6 9 2)",
                "9 - 6 = 3 (left: 3 9 11)\n12 - 4 = 8 (left: 5 8)",
                "11 - 9 = 2 (left: 6 9 2)\n7 - 5 = 2 (left: 1 3 2)"
            ],
            "values": [
                0.002,
                3.0,
                2.001,
                0.002,
                1.002
            ],
            "resampled": [
                "0 <- 4.4",
                "1 <- 3.0",
                "2 <- 2.1",
                "3 <- INIT",
                "4 <- INIT"
            ],
            "resampled_steps": [
                "11 - 9 = 2 (left: 6 9 2)\n7 - 5 = 2 (left: 1 3 2)",
                "9 - 6 = 3 (left: 3 9 11)",
                "11 - 9 = 2 (left: 6 9 2)",
                "",
                ""
            ]
        },
        "step_5": {
            "steps": [
                "11 - 9 = 2 (left: 6 9 2)\n7 - 5 = 2 (left: 1 3 2)\n1 + 3 = 4 (left: 2 4)",
                "9 - 6 = 3 (left: 3 9 11)\n11 / 3 = 3 (left: 3 11)",
                "11 - 9 = 2 (left: 6 9 2)\n5 * 7 = 35 (left: 3 35 8)",
                "9 + 6 = 15 (left: 9 11 15)",
                "6 * 9 = 54 (left: 9 11 54)"
            ],
            "values": [
                1.001,
                0.003,
                2.001,
                1.002,
                1.002
            ],
            "resampled": [
                "0 <- 5.2",
                "1 <- 5.4",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- 4.1"
            ],
            "resampled_steps": [
                "11 - 9 = 2 (left: 6 9 2)\n5 * 7 = 35 (left: 3 35 8)",
                "6 * 9 = 54 (left: 9 11 54)",
                "",
                "",
                "11 - 6 = 5 (left: 5 9 11)"
            ]
        },
        "step_6": {
            "steps": [
                "11 - 9 = 2 (left: 6 9 2)\n5 * 7 = 35 (left: 3 35 8)\n18 + 6 = 24 (left: 12 18 24)",
                "6 * 9 = 54 (left: 9 11 54)\n7 - 6 = 1 (left: 4 5 1)",
                "9 - 6 = 3 (left: 3 9 11)",
                "11 - 6 = 5 (left: 5 9 11)",
                "11 - 6 = 5 (left: 5 9 11)\n11 - 5 = 6 (left: 6 9)"
            ],
            "values": [
                0.003,
                2.001,
                1.002,
                1.002,
                0.003
            ],
            "resampled": [
                "0 <- 5.0",
                "1 <- 1.4",
                "2 <- 4.1",
                "3 <- INIT",
                "4 <- 5.4"
            ],
            "resampled_steps": [
                "11 - 9 = 2 (left: 6 9 2)\n7 - 5 = 2 (left: 1 3 2)\n1 + 3 = 4 (left: 2 4)",
                "9 - 6 = 3 (left: 3 9 11)",
                "11 - 6 = 5 (left: 5 9 11)",
                "",
                "6 * 9 = 54 (left: 9 11 54)"
            ]
        },
        "step_7": {
            "steps": [
                "11 - 9 = 2 (left: 6 9 2)\n7 - 5 = 2 (left: 1 3 2)\n1 + 3 = 4 (left: 2 4)\n8 - 6 = 2 (left: 2)",
                "9 - 6 = 3 (left: 3 9 11)\n5 / 1 = 5 (left: 5 7 10)",
                "11 - 6 = 5 (left: 5 9 11)\n11 - 9 = 2 (left: 2 11)",
                "9 / 3 = 3 (left: 6 9 11)",
                "6 * 9 = 54 (left: 9 11 54)\n9 + 11 = 20 (left: 20 54)"
            ],
            "values": [
                0.0,
                3.0,
                0.003,
                2.001,
                0.002
            ],
            "resampled": [
                "0 <- 2.2",
                "1 <- 7.1",
                "2 <- 5.4",
                "3 <- 4.1",
                "4 <- 3.3"
            ],
            "resampled_steps": [
                "9 / 3 = 3 (left: 6 3 11)",
                "9 - 6 = 3 (left: 3 9 11)\n5 / 1 = 5 (left: 5 7 10)",
                "6 * 9 = 54 (left: 9 11 54)",
                "11 - 6 = 5 (left: 5 9 11)",
                "6 + 9 = 15 (left: 9 9 11)"
            ]
        },
        "step_8": {
            "steps": [
                "9 / 3 = 3 (left: 6 3 11)\n7 * 9 = 63 (left: 5 63)",
                "9 - 6 = 3 (left: 3 9 11)\n5 / 1 = 5 (left: 5 7 10)\n7 + 10 = 17 (left: 5 17)",
                "6 * 9 = 54 (left: 9 11 54)\n54 / 9 = 6 (left: 6 11)",
                "11 - 6 = 5 (left: 5 9 11)\n9 + 11 = 20 (left: 5 20)",
                "6 + 9 = 15 (left: 9 9 11)\n7 - 3 = 4 (left: 4 9 10)"
            ],
            "values": [
                0.002,
                0.003,
                1.0,
                1.001,
                2.001
            ],
            "resampled": [
                "0 <- 5.2",
                "1 <- 7.1",
                "2 <- 7.3",
                "3 <- 2.1",
                "4 <- 3.0"
            ],
            "resampled_steps": [
                "11 - 9 = 2 (left: 6 9 2)\n5 * 7 = 35 (left: 3 35 8)",
                "9 - 6 = 3 (left: 3 9 11)\n5 / 1 = 5 (left: 5 7 10)",
                "9 / 3 = 3 (left: 6 9 11)",
                "11 - 9 = 2 (left: 6 9 2)",
                "9 - 6 = 3 (left: 3 9 11)"
            ]
        },
        "step_9": {
            "steps": [
                "11 - 9 = 2 (left: 6 9 2)\n5 * 7 = 35 (left: 3 35 8)\n3 + 35 = 38 (left: 8 38)",
                "9 - 6 = 3 (left: 3 9 11)\n5 / 1 = 5 (left: 5 7 10)\nPossible next steps:",
                "9 / 3 = 3 (left: 6 9 11)\n3 + 5 = 8 (left: 7 8 12)",
                "11 - 9 = 2 (left: 6 9 2)\n6 * 9 = 54 (left: 54 2)",
                "9 - 6 = 3 (left: 3 9 11)\n11 - 3 = 8 (left: 9 8)"
            ],
            "values": [
                0.003,
                0.003,
                2.001,
                0.002,
                0.002
            ],
            "resampled": [
                "0 <- 8.2",
                "1 <- 7.1",
                "2 <- 7.1",
                "3 <- 7.1",
                "4 <- 9.2"
            ],
            "resampled_steps": [
                "6 * 9 = 54 (left: 9 11 54)\n54 / 9 = 6 (left: 6 11)",
                "9 - 6 = 3 (left: 3 9 11)\n5 / 1 = 5 (left: 5 7 10)",
                "9 - 6 = 3 (left: 3 9 11)\n5 / 1 = 5 (left: 5 7 10)",
                "9 - 6 = 3 (left: 3 9 11)\n5 / 1 = 5 (left: 5 7 10)",
                "9 / 3 = 3 (left: 6 9 11)\n3 + 5 = 8 (left: 7 8 12)"
            ]
        },
        "step_10": {
            "steps": [
                "6 * 9 = 54 (left: 9 11 54)\n54 / 9 = 6 (left: 6 11)\n11 * 6 = 66 (left: 66)",
                "9 - 6 = 3 (left: 3 9 11)\n5 / 1 = 5 (left: 5 7 10)\n12 + 3 = 15 (left: 15 15)",
                "9 - 6 = 3 (left: 3 9 11)\n5 / 1 = 5 (left: 5 7 10)\n6 * 9 = 54 (left: 3 54 12)",
                "9 - 6 = 3 (left: 3 9 11)\n5 / 1 = 5 (left: 5 7 10)\n7 + 5 = 12 (left: 10 12)",
                "9 / 3 = 3 (left: 6 9 11)\n3 + 5 = 8 (left: 7 8 12)\n8 / 7 = 1.14 (left: 1.14 12)"
            ],
            "values": [
                0.002,
                0.003,
                3.0,
                0.002,
                1.002
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 0.9582685
    },
    "934": {
        "input": "5 8 11 12",
        "step_1": {
            "steps": [
                "11 + 5 = 16 (left: 8 12 16)",
                "5 / 8 = 0.625 (left: 11 12 0.625)",
                "Input: 4 9 12 15",
                "12 /  5 = 2 (left: 8 11 2)",
                "12 - 11 = 1 (left: 1 8 12)"
            ],
            "values": [
                3.0,
                3.0,
                0.003,
                3.0,
                1.001
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- 1.0",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- INIT"
            ],
            "resampled_steps": [
                "",
                "11 + 5 = 16 (left: 8 12 16)",
                "",
                "",
                ""
            ]
        },
        "step_2": {
            "steps": [
                "12 - 5 = 7 (left: 7 11 12)",
                "11 + 5 = 16 (left: 8 12 16)\n16 - 8 = 8 (left: 8 12)",
                "5 + 8 = 13 (left: 11 12 13)",
                "8 / 5 = 1.6 (left: 1.6 11 12)",
                "8 + 5 = 13 (left: 11 12 13)"
            ],
            "values": [
                3.0,
                1.002,
                41.0,
                1.002,
                21.001
            ],
            "resampled": [
                "0 <- 2.2",
                "1 <- 2.2",
                "2 <- 2.4",
                "3 <- 2.2",
                "4 <- INIT"
            ],
            "resampled_steps": [
                "5 + 8 = 13 (left: 11 12 13)",
                "5 + 8 = 13 (left: 11 12 13)",
                "8 + 5 = 13 (left: 11 12 13)",
                "5 + 8 = 13 (left: 11 12 13)",
                ""
            ]
        },
        "step_3": {
            "steps": [
                "5 + 8 = 13 (left: 11 12 13)\n11 + 12 = 23 (left: 13 23)",
                "5 + 8 = 13 (left: 11 12 13)\n5 + 7 = 12 (left: 9)",
                "8 + 5 = 13 (left: 11 12 13)\n15 / 5 = 3 (left: 3 12 7)",
                "5 + 8 = 13 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)",
                "11 + 5 = 16 (left: 8 12 16)"
            ],
            "values": [
                0.003,
                0.0,
                3.0,
                60.0,
                0.003
            ],
            "resampled": [
                "0 <- 3.3",
                "1 <- 2.2",
                "2 <- 3.3",
                "3 <- 1.1",
                "4 <- 3.3"
            ],
            "resampled_steps": [
                "5 + 8 = 13 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)",
                "5 + 8 = 13 (left: 11 12 13)",
                "5 + 8 = 13 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)",
                "5 / 8 = 0.625 (left: 11 12 0.625)",
                "5 + 8 = 13 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)"
            ]
        },
        "step_4": {
            "steps": [
                "5 + 8 = 13 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)",
                "5 + 8 = 13 (left: 11 12 13)\n11 + 12 = 23 (left: 13)",
                "5 + 8 = 13 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n12 - 12 = 0 (left: 0)",
                "5 / 8 = 0.625 (left: 11 12 0.625)\n12 - 11 = 1 (left: 1 0.625)",
                "5 + 8 = 13 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 + 12 = 14"
            ],
            "values": [
                0.0,
                0.003,
                0.003,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 3.3",
                "1 <- 2.2",
                "2 <- 3.3",
                "3 <- INIT",
                "4 <- 2.0"
            ],
            "resampled_steps": [
                "5 + 8 = 13 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)",
                "5 + 8 = 13 (left: 11 12 13)",
                "5 + 8 = 13 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)",
                "",
                "12 - 5 = 7 (left: 7 11 12)"
            ]
        },
        "step_5": {
            "steps": [
                "5 + 8 = 13 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)",
                "5 + 8 = 13 (left: 11 12 13)\n12 - 11 = 1 (left: 1 13)",
                "5 + 8 = 13 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)",
                "11 - 5 = 6 (left: 6 11 12)",
                "12 - 5 = 7 (left: 7 11 12)\n7 - 11 = -4 (left: -4 12)"
            ],
            "values": [
                0.001,
                1.001,
                0.003,
                2.001,
                1.001
            ],
            "resampled": [
                "0 <- 3.3",
                "1 <- 2.2",
                "2 <- 3.3",
                "3 <- 3.3",
                "4 <- 3.3"
            ],
            "resampled_steps": [
                "5 + 8 = 13 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)",
                "5 + 8 = 13 (left: 11 12 13)",
                "5 + 8 = 13 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)",
                "5 + 8 = 13 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)",
                "5 + 8 = 13 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)"
            ]
        },
        "step_6": {
            "steps": [
                "5 + 8 = 13 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6)",
                "5 + 8 = 13 (left: 11 12 13)\n11 + 12 = 23 (left: 13)",
                "5 + 8 = 13 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)",
                "5 + 8 = 13 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "5 + 8 = 13 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)"
            ],
            "values": [
                0.003,
                0.003,
                0.003,
                60.0,
                60.0
            ],
            "resampled": [
                "0 <- 3.3",
                "1 <- 6.3",
                "2 <- 3.3",
                "3 <- 6.3",
                "4 <- 2.2"
            ],
            "resampled_steps": [
                "5 + 8 = 13 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)",
                "5 + 8 = 13 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "5 + 8 = 13 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)",
                "5 + 8 = 13 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "5 + 8 = 13 (left: 11 12 13)"
            ]
        },
        "step_7": {
            "steps": [
                "5 + 8 = 13 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6)",
                "5 + 8 = 13 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (5 + 8) * (11 - 12) = 24",
                "5 + 8 = 13 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6)",
                "5 + 8 = 13 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (5 + 8) * (11 - 12) = 24",
                "5 + 8 = 13 (left: 11 12 13)\nPossible next steps:"
            ],
            "values": [
                0.003,
                60.0,
                0.003,
                40.001,
                0.003
            ],
            "resampled": [
                "0 <- 3.3",
                "1 <- 7.1",
                "2 <- INIT",
                "3 <- 7.1",
                "4 <- 6.4"
            ],
            "resampled_steps": [
                "5 + 8 = 13 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)",
                "5 + 8 = 13 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (5 + 8) * (11 - 12) = 24",
                "",
                "5 + 8 = 13 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (5 + 8) * (11 - 12) = 24",
                "5 + 8 = 13 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)"
            ]
        },
        "step_8": {
            "steps": [
                "5 + 8 = 13 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)",
                "5 + 8 = 13 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (5 + 8) * (11 - 12) = 24\n- (5 + 8) * (11 - 12) = 24",
                "12 - 6 = 6 (left: 6 12 15)",
                "5 + 8 = 13 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (5 + 8) * (11 - 12) = 24\nInput: 3 5 7 8\nSteps:\n7 - 5 = 2 (left: 2 3 8)\n2 + 3 = 5 (left: 5 8)\n5 * 8 = 40 (left: 40)\n40 - 16 = 24 (left: 24)\nAnswer: ((7 - 5) + 3) * 8 - 16 = 24",
                "5 + 8 = 13 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (5 + 8) * (11 - 12) = 24"
            ],
            "values": [
                0.003,
                40.001,
                0.003,
                40.0,
                60.0
            ],
            "resampled": [
                "0 <- 6.3",
                "1 <- 7.1",
                "2 <- 7.3",
                "3 <- 7.3",
                "4 <- 8.3"
            ],
            "resampled_steps": [
                "5 + 8 = 13 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "5 + 8 = 13 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (5 + 8) * (11 - 12) = 24",
                "5 + 8 = 13 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (5 + 8) * (11 - 12) = 24",
                "5 + 8 = 13 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (5 + 8) * (11 - 12) = 24",
                "5 + 8 = 13 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (5 + 8) * (11 - 12) = 24\nInput: 3 5 7 8\nSteps:\n7 - 5 = 2 (left: 2 3 8)\n2 + 3 = 5 (left: 5 8)\n5 * 8 = 40 (left: 40)\n40 - 16 = 24 (left: 24)\nAnswer: ((7 - 5) + 3) * 8 - 16 = 24"
            ]
        },
        "step_9": {
            "steps": [
                "5 + 8 = 13 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (5 + 8) * (11 - 12) = 24",
                "5 + 8 = 13 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (5 + 8) * (11 - 12) = 24\nInput: 3 6 7 8\nSteps:\n7 - 6 = 1 (left: 1 3 8)\n1 + 3 = 4 (left: 4 8)\n4 * 8 = 32 (left: 32)\nAnswer: (7 - 6 + 3) * 8 = 24",
                "5 + 8 = 13 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (5 + 8) * (11 - 12) = 24\nInput: 3 3 7 8\nSteps:\n3 + 7 = 10 (left: 3 8 10)\n10 - 8 = 2 (left: 2 10)\n2 * 10 = 20 (left: 20)\n20 + 3 = 23 (left: 23)\n23 + 1 = 24 (left: 24)\nAnswer: ((3 + 7) * 10) + 1 = 24",
                "5 + 8 = 13 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (5 + 8) * (11 - 12) = 24\nInput: 3 6 7 8\nSteps:\n6 + 8 = 14 (left: 3 7 14)\n7 - 3 = 4 (left: 4 14)\n4 * 14 = 56 (left: 56)\nAnswer: (6 + 8) * (7 - 3) = 24",
                "5 + 8 = 13 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (5 + 8) * (11 - 12) = 24\nInput: 3 5 7 8\nSteps:\n7 - 5 = 2 (left: 2 3 8)\n2 + 3 = 5 (left: 5 8)\n5 * 8 = 40 (left: 40)\n40 - 16 = 24 (left: 24)\nAnswer: ((7 - 5) + 3) * 8 - 16 = 24\nInput: 6 6 6 6\nSteps:\n6 * 6 = 36 (left: 6 6 36)\n6 - 6 = 0 (left: 0 36)\n0 + 36 = 36 (left: 36)\nAnswer: 6 * 6 + 6 + 6 = 24"
            ],
            "values": [
                60.0,
                60.0,
                40.0,
                60.0,
                40.0
            ],
            "resampled": [
                "0 <- 9.0",
                "1 <- 9.4",
                "2 <- 6.4",
                "3 <- 6.4",
                "4 <- 9.3"
            ],
            "resampled_steps": [
                "5 + 8 = 13 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (5 + 8) * (11 - 12) = 24",
                "5 + 8 = 13 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (5 + 8) * (11 - 12) = 24\nInput: 3 5 7 8\nSteps:\n7 - 5 = 2 (left: 2 3 8)\n2 + 3 = 5 (left: 5 8)\n5 * 8 = 40 (left: 40)\n40 - 16 = 24 (left: 24)\nAnswer: ((7 - 5) + 3) * 8 - 16 = 24\nInput: 6 6 6 6\nSteps:\n6 * 6 = 36 (left: 6 6 36)\n6 - 6 = 0 (left: 0 36)\n0 + 36 = 36 (left: 36)\nAnswer: 6 * 6 + 6 + 6 = 24",
                "5 + 8 = 13 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "5 + 8 = 13 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "5 + 8 = 13 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (5 + 8) * (11 - 12) = 24\nInput: 3 6 7 8\nSteps:\n6 + 8 = 14 (left: 3 7 14)\n7 - 3 = 4 (left: 4 14)\n4 * 14 = 56 (left: 56)\nAnswer: (6 + 8) * (7 - 3) = 24"
            ]
        },
        "step_10": {
            "steps": [
                "5 + 8 = 13 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (5 + 8) * (11 - 12) = 24\nThe possible solution for the input 5 8 11 12 is: (5 + 8) * (11 - 12) = 24",
                "5 + 8 = 13 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (5 + 8) * (11 - 12) = 24\nInput: 3 5 7 8\nSteps:\n7 - 5 = 2 (left: 2 3 8)\n2 + 3 = 5 (left: 5 8)\n5 * 8 = 40 (left: 40)\n40 - 16 = 24 (left: 24)\nAnswer: ((7 - 5) + 3) * 8 - 16 = 24\nInput: 6 6 6 6\nSteps:\n6 * 6 = 36 (left: 6 6 36)\n6 - 6 = 0 (left: 0 36)\n0 + 36 = 36 (left: 36)\nAnswer: 6 * 6 + 6 + 6 = 24\nSorry, it is not possible to obtain 24 using the numbers 6, 6, 6, and 6.",
                "5 + 8 = 13 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (5 + 8) * (11 - 12) = 24",
                "5 + 8 = 13 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (5 + 8) * (11 - 12) = 24",
                "5 + 8 = 13 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (5 + 8) * (11 - 12) = 24\nInput: 3 6 7 8\nSteps:\n6 + 8 = 14 (left: 3 7 14)\n7 - 3 = 4 (left: 4 14)\n4 * 14 = 56 (left: 56)\nAnswer: (6 + 8) * (7 - 3) = 24\nInput: 2 3 4 6\nSteps:\n4 * 6 = 24 (left: 2 3 24)\n3 - 2 = 1 (left: 1 24)\n1 * 24 = 24 (left: 24)\nAnswer: (4 * 6) * (3 - 2) = 24"
            ],
            "values": [
                60.0,
                0.003,
                60.0,
                60.0,
                60.0
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 0.987405
    },
    "935": {
        "input": "5 6 8 10",
        "step_1": {
            "steps": [
                "5 + 6 = 11 (left: 8 10 11)",
                "8 - 5 = 3 (left: 3 6 10)",
                "8 - 6 = 2 (left: 5 2 10)",
                "6 - 5 = 1 (left: 1 8 10)",
                "5 + 6 = 11 (left: 8 10 11)"
            ],
            "values": [
                2.001,
                0.003,
                3.0,
                1.002,
                2.001
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- 1.2",
                "3 <- INIT",
                "4 <- INIT"
            ],
            "resampled_steps": [
                "",
                "",
                "8 - 6 = 2 (left: 5 2 10)",
                "",
                ""
            ]
        },
        "step_2": {
            "steps": [
                "10 - 8 = 2 (left: 5 6 2)",
                "8 - 5 = 3 (left: 3 6 10)",
                "8 - 6 = 2 (left: 5 2 10)\n5 / 2 = 2.5 (left: 2.5 10)",
                "6 * 8 = 48 (left: 5 10 48)",
                "10 - 6 = 4 (left: 4 6 8)"
            ],
            "values": [
                2.0,
                0.002,
                0.002,
                2.001,
                40.0
            ],
            "resampled": [
                "0 <- 2.4",
                "1 <- 2.4",
                "2 <- 2.4",
                "3 <- INIT",
                "4 <- 2.0"
            ],
            "resampled_steps": [
                "10 - 6 = 4 (left: 4 6 8)",
                "10 - 6 = 4 (left: 4 6 8)",
                "10 - 6 = 4 (left: 4 6 8)",
                "",
                "10 - 8 = 2 (left: 5 6 2)"
            ]
        },
        "step_3": {
            "steps": [
                "10 - 6 = 4 (left: 4 6 8)\n3 * 5 = 15 (left: 7 9 15)",
                "10 - 6 = 4 (left: 4 6 8)\n6 + 8 = 14 (left: 4 14)",
                "10 - 6 = 4 (left: 4 6 8)\n4 * 6 = 24 (left: 8 24)",
                "6 - 5 = 1 (left: 1 8 10)",
                "10 - 8 = 2 (left: 5 6 2)\n5 + 6 = 11 (left: 2 11)"
            ],
            "values": [
                1.002,
                0.003,
                21.001,
                1.002,
                1.002
            ],
            "resampled": [
                "0 <- 3.2",
                "1 <- 2.4",
                "2 <- 3.2",
                "3 <- 2.4",
                "4 <- 3.2"
            ],
            "resampled_steps": [
                "10 - 6 = 4 (left: 4 6 8)\n4 * 6 = 24 (left: 8 24)",
                "10 - 6 = 4 (left: 4 6 8)",
                "10 - 6 = 4 (left: 4 6 8)\n4 * 6 = 24 (left: 8 24)",
                "10 - 6 = 4 (left: 4 6 8)",
                "10 - 6 = 4 (left: 4 6 8)\n4 * 6 = 24 (left: 8 24)"
            ]
        },
        "step_4": {
            "steps": [
                "10 - 6 = 4 (left: 4 6 8)\n4 * 6 = 24 (left: 8 24)\n8 / 3 = 2.67 (left: 2.67 8)",
                "10 - 6 = 4 (left: 4 6 8)\n6 + 8 = 14 (left: 4 14)",
                "10 - 6 = 4 (left: 4 6 8)\n4 * 6 = 24 (left: 8 24)\n24 - 8 = 16 (left: 16)",
                "10 - 6 = 4 (left: 4 6 8)\n4 - 3 = 1 (left: 1 2 4)",
                "10 - 6 = 4 (left: 4 6 8)\n4 * 6 = 24 (left: 8 24)\n5 * 2 = 10 (left: 10 20)"
            ],
            "values": [
                2.001,
                1.001,
                0.002,
                1.002,
                0.002
            ],
            "resampled": [
                "0 <- 2.4",
                "1 <- 2.4",
                "2 <- INIT",
                "3 <- 3.0",
                "4 <- INIT"
            ],
            "resampled_steps": [
                "10 - 6 = 4 (left: 4 6 8)",
                "10 - 6 = 4 (left: 4 6 8)",
                "",
                "10 - 6 = 4 (left: 4 6 8)\n3 * 5 = 15 (left: 7 9 15)",
                ""
            ]
        },
        "step_5": {
            "steps": [
                "10 - 6 = 4 (left: 4 6 8)\n10 - 7 = 3 (left: 2 3 10)",
                "10 - 6 = 4 (left: 4 6 8)\n7 - 5 = 2 (left: 2 3)",
                "8 - 6 = 2 (left: 2 10 8)",
                "10 - 6 = 4 (left: 4 6 8)\n3 * 5 = 15 (left: 7 9 15)\n3 + 5 = 8 (left: -2 8)",
                "10 - 8 = 2 (left: 2 6 10)"
            ],
            "values": [
                40.001,
                0.002,
                1.002,
                3.0,
                41.0
            ],
            "resampled": [
                "0 <- 4.0",
                "1 <- 5.4",
                "2 <- 5.4",
                "3 <- 3.4",
                "4 <- 5.4"
            ],
            "resampled_steps": [
                "10 - 6 = 4 (left: 4 6 8)\n4 * 6 = 24 (left: 8 24)\n8 / 3 = 2.67 (left: 2.67 8)",
                "10 - 8 = 2 (left: 2 6 10)",
                "10 - 8 = 2 (left: 2 6 10)",
                "10 - 8 = 2 (left: 5 6 2)\n5 + 6 = 11 (left: 2 11)",
                "10 - 8 = 2 (left: 2 6 10)"
            ]
        },
        "step_6": {
            "steps": [
                "10 - 6 = 4 (left: 4 6 8)\n4 * 6 = 24 (left: 8 24)\n8 / 3 = 2.67 (left: 2.67 8)\n8 - 2.67 = 5.33 (left: 5.33)",
                "10 - 8 = 2 (left: 2 6 10)\n10 - 6 = 4 (left: 2 4)",
                "10 - 8 = 2 (left: 2 6 10)\n10 - 2 = 8 (left: 6 8)",
                "10 - 8 = 2 (left: 5 6 2)\n5 + 6 = 11 (left: 2 11)\n11 / 2 = 5.5 (left: 5.5)",
                "10 - 8 = 2 (left: 2 6 10)\n10 - 2 = 8 (left: 6 8)"
            ],
            "values": [
                0.001,
                0.002,
                0.003,
                0.001,
                0.003
            ],
            "resampled": [
                "0 <- 5.4",
                "1 <- 5.4",
                "2 <- 5.4",
                "3 <- 5.4",
                "4 <- 5.0"
            ],
            "resampled_steps": [
                "10 - 8 = 2 (left: 2 6 10)",
                "10 - 8 = 2 (left: 2 6 10)",
                "10 - 8 = 2 (left: 2 6 10)",
                "10 - 8 = 2 (left: 2 6 10)",
                "10 - 6 = 4 (left: 4 6 8)\n10 - 7 = 3 (left: 2 3 10)"
            ]
        },
        "step_7": {
            "steps": [
                "10 - 8 = 2 (left: 2 6 10)\n6 * 2 = 12 (left: 12 10)",
                "10 - 8 = 2 (left: 2 6 10)\n10 / 2 = 5 (left: 6 5)",
                "10 - 8 = 2 (left: 2 6 10)\nInput: 2 5 10",
                "10 - 8 = 2 (left: 2 6 10)\n12 / 2 = 6 (left: 6 12)",
                "10 - 6 = 4 (left: 4 6 8)\n10 - 7 = 3 (left: 2 3 10)\n9 - 5 = 4 (left: 2 4)"
            ],
            "values": [
                0.002,
                20.002,
                0.003,
                0.003,
                0.002
            ],
            "resampled": [
                "0 <- 4.0",
                "1 <- 5.0",
                "2 <- 5.4",
                "3 <- 2.4",
                "4 <- 5.4"
            ],
            "resampled_steps": [
                "10 - 6 = 4 (left: 4 6 8)\n4 * 6 = 24 (left: 8 24)\n8 / 3 = 2.67 (left: 2.67 8)",
                "10 - 6 = 4 (left: 4 6 8)\n10 - 7 = 3 (left: 2 3 10)",
                "10 - 8 = 2 (left: 2 6 10)",
                "10 - 6 = 4 (left: 4 6 8)",
                "10 - 8 = 2 (left: 2 6 10)"
            ]
        },
        "step_8": {
            "steps": [
                "10 - 6 = 4 (left: 4 6 8)\n4 * 6 = 24 (left: 8 24)\n8 / 3 = 2.67 (left: 2.67 8)\nPossible next steps:",
                "10 - 6 = 4 (left: 4 6 8)\n10 - 7 = 3 (left: 2 3 10)\n10 - 3 = 7 (left: 2 7)",
                "10 - 8 = 2 (left: 2 6 10)\n10 / 2 = 5 (left: 5 6)",
                "10 - 6 = 4 (left: 4 6 8)\n8 - 4 = 4 (left: 4 4)",
                "10 - 8 = 2 (left: 2 6 10)\n2 + 6 = 8 (left: 8 10)"
            ],
            "values": [
                0.003,
                0.002,
                0.003,
                0.003,
                21.001
            ],
            "resampled": [
                "0 <- 5.0",
                "1 <- 5.0",
                "2 <- 5.0",
                "3 <- 8.4",
                "4 <- 5.4"
            ],
            "resampled_steps": [
                "10 - 6 = 4 (left: 4 6 8)\n10 - 7 = 3 (left: 2 3 10)",
                "10 - 6 = 4 (left: 4 6 8)\n10 - 7 = 3 (left: 2 3 10)",
                "10 - 6 = 4 (left: 4 6 8)\n10 - 7 = 3 (left: 2 3 10)",
                "10 - 8 = 2 (left: 2 6 10)\n2 + 6 = 8 (left: 8 10)",
                "10 - 8 = 2 (left: 2 6 10)"
            ]
        },
        "step_9": {
            "steps": [
                "10 - 6 = 4 (left: 4 6 8)\n10 - 7 = 3 (left: 2 3 10)\n10 / 3 = 3.33 (left: 2 3.33)",
                "10 - 6 = 4 (left: 4 6 8)\n10 - 7 = 3 (left: 2 3 10)\n10 - 2 = 8 (left: 2 8)",
                "10 - 6 = 4 (left: 4 6 8)\n10 - 7 = 3 (left: 2 3 10)\n10 - 2 = 8 (left: 3 8)",
                "10 - 8 = 2 (left: 2 6 10)\n2 + 6 = 8 (left: 8 10)\n8 + 10 = 18 (left: 18)",
                "10 - 8 = 2 (left: 2 6 10)\n6 * 10 = 60 (left: 2 60)"
            ],
            "values": [
                1.001,
                0.003,
                60.0,
                20.0,
                0.003
            ],
            "resampled": [
                "0 <- 5.0",
                "1 <- 9.2",
                "2 <- 9.2",
                "3 <- 5.4",
                "4 <- 9.2"
            ],
            "resampled_steps": [
                "10 - 6 = 4 (left: 4 6 8)\n10 - 7 = 3 (left: 2 3 10)",
                "10 - 6 = 4 (left: 4 6 8)\n10 - 7 = 3 (left: 2 3 10)\n10 - 2 = 8 (left: 3 8)",
                "10 - 6 = 4 (left: 4 6 8)\n10 - 7 = 3 (left: 2 3 10)\n10 - 2 = 8 (left: 3 8)",
                "10 - 8 = 2 (left: 2 6 10)",
                "10 - 6 = 4 (left: 4 6 8)\n10 - 7 = 3 (left: 2 3 10)\n10 - 2 = 8 (left: 3 8)"
            ]
        },
        "step_10": {
            "steps": [
                "10 - 6 = 4 (left: 4 6 8)\n10 - 7 = 3 (left: 2 3 10)\n3 * 2 = 6 (left: 6 10)",
                "10 - 6 = 4 (left: 4 6 8)\n10 - 7 = 3 (left: 2 3 10)\n10 - 2 = 8 (left: 3 8)\n8 - 3 = 5 (left: 5)",
                "10 - 6 = 4 (left: 4 6 8)\n10 - 7 = 3 (left: 2 3 10)\n10 - 2 = 8 (left: 3 8)\n8 / 3 = 2.67 (left: 2.67 8)",
                "10 - 8 = 2 (left: 2 6 10)\n2 + 6 = 8 (left: 8 10)",
                "10 - 6 = 4 (left: 4 6 8)\n10 - 7 = 3 (left: 2 3 10)\n10 - 2 = 8 (left: 3 8)\n8 - 3 = 5 (left: 5)"
            ],
            "values": [
                0.003,
                0.003,
                2.0,
                2.001,
                0.001
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 1.018349
    },
    "936": {
        "input": "6 11 12 13",
        "step_1": {
            "steps": [
                "10 / 5 = 2 (left: 4 6 2)",
                "11 - 6 = 5 (left: 5 12 13)",
                "11 - 12 = -1 (left: 6 -1 13)",
                "11 - 12 = -1 (left: 6 -1 13)",
                "3 * 4 = 12 (left: 5 6 12)"
            ],
            "values": [
                40.0,
                2.001,
                3.0,
                3.0,
                3.0
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- 1.3",
                "2 <- 1.0",
                "3 <- INIT",
                "4 <- INIT"
            ],
            "resampled_steps": [
                "",
                "11 - 12 = -1 (left: 6 -1 13)",
                "10 / 5 = 2 (left: 4 6 2)",
                "",
                ""
            ]
        },
        "step_2": {
            "steps": [
                "13 - 6 = 7 (left: 7 11 12)",
                "11 - 12 = -1 (left: 6 -1 13)\n13 - 6 = 7 (left: 6 7)",
                "10 / 5 = 2 (left: 4 6 2)\n5 * 3 = 15 (left: 10 15)",
                "12 + 13 = 25 (left: 6 11 25)",
                "12 + 11 = 23 (left: 6 13 23)"
            ],
            "values": [
                3.0,
                0.003,
                0.003,
                1.002,
                1.002
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- 1.0",
                "3 <- INIT",
                "4 <- INIT"
            ],
            "resampled_steps": [
                "",
                "",
                "10 / 5 = 2 (left: 4 6 2)",
                "",
                ""
            ]
        },
        "step_3": {
            "steps": [
                "12 - 6 = 6 (left: 6 11 13)",
                "11 - 6 = 5 (left: 5 12 13)",
                "10 / 5 = 2 (left: 4 6 2)\n6 - 4 = 2 (left: 2 6)",
                "12 - 6 = 6 (left: 6 11 13)",
                "5 - 2 = 3 (left: 3 8 3)"
            ],
            "values": [
                2.001,
                1.002,
                21.001,
                3.0,
                60.0
            ],
            "resampled": [
                "0 <- 3.4",
                "1 <- 3.2",
                "2 <- 3.4",
                "3 <- 2.0",
                "4 <- 3.4"
            ],
            "resampled_steps": [
                "5 - 2 = 3 (left: 3 8 3)",
                "10 / 5 = 2 (left: 4 6 2)\n6 - 4 = 2 (left: 2 6)",
                "5 - 2 = 3 (left: 3 8 3)",
                "13 - 6 = 7 (left: 7 11 12)",
                "5 - 2 = 3 (left: 3 8 3)"
            ]
        },
        "step_4": {
            "steps": [
                "5 - 2 = 3 (left: 3 8 3)\n8 - 3 = 5 (left: 5 3)",
                "10 / 5 = 2 (left: 4 6 2)\n6 - 4 = 2 (left: 2 6)\n6 / 2 = 3 (left: 3)",
                "5 - 2 = 3 (left: 3 8 3)\n8 - 3 = 5 (left: 5 3)",
                "13 - 6 = 7 (left: 7 11 12)\n1.71 / 1.57 = 1.09 (left: 1.09)",
                "5 - 2 = 3 (left: 3 8 3)\n3 * 8 = 24 (left: 24 3)"
            ],
            "values": [
                2.001,
                0.002,
                20.001,
                0.003,
                60.0
            ],
            "resampled": [
                "0 <- 1.0",
                "1 <- 4.4",
                "2 <- 1.0",
                "3 <- 4.4",
                "4 <- 4.4"
            ],
            "resampled_steps": [
                "10 / 5 = 2 (left: 4 6 2)",
                "5 - 2 = 3 (left: 3 8 3)\n3 * 8 = 24 (left: 24 3)",
                "10 / 5 = 2 (left: 4 6 2)",
                "5 - 2 = 3 (left: 3 8 3)\n3 * 8 = 24 (left: 24 3)",
                "5 - 2 = 3 (left: 3 8 3)\n3 * 8 = 24 (left: 24 3)"
            ]
        },
        "step_5": {
            "steps": [
                "10 / 5 = 2 (left: 4 6 2)\n6 / 2 = 3 (left: 3 4)",
                "5 - 2 = 3 (left: 3 8 3)\n3 * 8 = 24 (left: 24 3)\n24 + 3 = 27 (left: 3)",
                "10 / 5 = 2 (left: 4 6 2)\n9 / 3 = 3 (left: 5 3)",
                "5 - 2 = 3 (left: 3 8 3)\n3 * 8 = 24 (left: 24 3)\n24 * 3 = 72 (left: 72)",
                "5 - 2 = 3 (left: 3 8 3)\n3 * 8 = 24 (left: 24 3)\n24 * 3 = 72 (left: 3)"
            ],
            "values": [
                0.0,
                0.001,
                20.001,
                0.003,
                0.001
            ],
            "resampled": [
                "0 <- 4.2",
                "1 <- 5.2",
                "2 <- 1.0",
                "3 <- 3.4",
                "4 <- 3.4"
            ],
            "resampled_steps": [
                "5 - 2 = 3 (left: 3 8 3)\n8 - 3 = 5 (left: 5 3)",
                "10 / 5 = 2 (left: 4 6 2)\n9 / 3 = 3 (left: 5 3)",
                "10 / 5 = 2 (left: 4 6 2)",
                "5 - 2 = 3 (left: 3 8 3)",
                "5 - 2 = 3 (left: 3 8 3)"
            ]
        },
        "step_6": {
            "steps": [
                "5 - 2 = 3 (left: 3 8 3)\n8 - 3 = 5 (left: 5 3)\n5 * 3 = 15 (left: 15)",
                "10 / 5 = 2 (left: 4 6 2)\n9 / 3 = 3 (left: 5 3)\n5 / 3 \u2248 1.67 (left: 1.67)",
                "10 / 5 = 2 (left: 4 6 2)\n6 / 2 = 3 (left: 3 4)",
                "5 - 2 = 3 (left: 3 8 3)\n3 - 8 = -5 (left: -5 3)",
                "5 - 2 = 3 (left: 3 8 3)\n3 + 8 = 11 (left: 3 11)"
            ],
            "values": [
                0.003,
                0.002,
                3.0,
                0.002,
                0.002
            ],
            "resampled": [
                "0 <- 3.4",
                "1 <- 5.2",
                "2 <- 2.0",
                "3 <- 3.4",
                "4 <- 4.2"
            ],
            "resampled_steps": [
                "5 - 2 = 3 (left: 3 8 3)",
                "10 / 5 = 2 (left: 4 6 2)\n9 / 3 = 3 (left: 5 3)",
                "13 - 6 = 7 (left: 7 11 12)",
                "5 - 2 = 3 (left: 3 8 3)",
                "5 - 2 = 3 (left: 3 8 3)\n8 - 3 = 5 (left: 5 3)"
            ]
        },
        "step_7": {
            "steps": [
                "5 - 2 = 3 (left: 3 8 3)\n8 / 3 = 2.67 (left: 2.67 8 3)",
                "10 / 5 = 2 (left: 4 6 2)\n9 / 3 = 3 (left: 5 3)\n5 / 3 = 1.67 (left: 1.67)",
                "13 - 6 = 7 (left: 7 11 12)\nInput: 18 23 77 4 5 1.71",
                "5 - 2 = 3 (left: 3 8 3)\n8 - 3 = 5 (left: 5 3)",
                "5 - 2 = 3 (left: 3 8 3)\n8 - 3 = 5 (left: 5 3)\n5 + 3 = 8 (left: 8)"
            ],
            "values": [
                3.0,
                0.002,
                0.003,
                2.001,
                0.002
            ],
            "resampled": [
                "0 <- 3.4",
                "1 <- 5.2",
                "2 <- 3.2",
                "3 <- 4.2",
                "4 <- 1.0"
            ],
            "resampled_steps": [
                "5 - 2 = 3 (left: 3 8 3)",
                "10 / 5 = 2 (left: 4 6 2)\n9 / 3 = 3 (left: 5 3)",
                "10 / 5 = 2 (left: 4 6 2)\n6 - 4 = 2 (left: 2 6)",
                "5 - 2 = 3 (left: 3 8 3)\n8 - 3 = 5 (left: 5 3)",
                "10 / 5 = 2 (left: 4 6 2)"
            ]
        },
        "step_8": {
            "steps": [
                "5 - 2 = 3 (left: 3 8 3)\n3 * 8 = 24 (left: 24 3)",
                "10 / 5 = 2 (left: 4 6 2)\n9 / 3 = 3 (left: 5 3)\n5 * 3 = 15 (left: 15)",
                "10 / 5 = 2 (left: 4 6 2)\n6 - 4 = 2 (left: 2 6)\n2 + 6 = 8 (left: 8)",
                "5 - 2 = 3 (left: 3 8 3)\n8 - 3 = 5 (left: 5 3)\n5 + 3 = 8 (left: 8)",
                "10 / 5 = 2 (left: 4 6 2)\n7 / 2 = 3.5 (left: 5 3.5 2)"
            ],
            "values": [
                40.001,
                0.003,
                0.002,
                0.002,
                3.0
            ],
            "resampled": [
                "0 <- 4.4",
                "1 <- INIT",
                "2 <- 1.0",
                "3 <- 4.4",
                "4 <- 4.4"
            ],
            "resampled_steps": [
                "5 - 2 = 3 (left: 3 8 3)\n3 * 8 = 24 (left: 24 3)",
                "",
                "10 / 5 = 2 (left: 4 6 2)",
                "5 - 2 = 3 (left: 3 8 3)\n3 * 8 = 24 (left: 24 3)",
                "5 - 2 = 3 (left: 3 8 3)\n3 * 8 = 24 (left: 24 3)"
            ]
        },
        "step_9": {
            "steps": [
                "5 - 2 = 3 (left: 3 8 3)\n3 * 8 = 24 (left: 24 3)\n24 / 3 = 8 (left: 3)",
                "3 + 7 = 10 (left: 10 15)",
                "10 / 5 = 2 (left: 4 6 2)\n9 / 3 = 3 (left: 3 3)",
                "5 - 2 = 3 (left: 3 8 3)\n3 * 8 = 24 (left: 24 3)\n5 - 2 = 3 (left: 3 3)",
                "5 - 2 = 3 (left: 3 8 3)\n3 * 8 = 24 (left: 24 3)\n24 - 3 = 21 (left: 3 21)"
            ],
            "values": [
                0.0,
                0.003,
                0.0,
                0.0,
                0.0
            ],
            "resampled": [
                "0 <- 8.4",
                "1 <- 8.0",
                "2 <- 8.0",
                "3 <- 5.2",
                "4 <- 8.0"
            ],
            "resampled_steps": [
                "10 / 5 = 2 (left: 4 6 2)\n7 / 2 = 3.5 (left: 5 3.5 2)",
                "5 - 2 = 3 (left: 3 8 3)\n3 * 8 = 24 (left: 24 3)",
                "5 - 2 = 3 (left: 3 8 3)\n3 * 8 = 24 (left: 24 3)",
                "10 / 5 = 2 (left: 4 6 2)\n9 / 3 = 3 (left: 5 3)",
                "5 - 2 = 3 (left: 3 8 3)\n3 * 8 = 24 (left: 24 3)"
            ]
        },
        "step_10": {
            "steps": [
                "10 / 5 = 2 (left: 4 6 2)\n7 / 2 = 3.5 (left: 5 3.5 2)\n12 - 6 = 6 (left: 6 4)",
                "5 - 2 = 3 (left: 3 8 3)\n3 * 8 = 24 (left: 24 3)\n24 * 3 = 72 (left: 3)",
                "5 - 2 = 3 (left: 3 8 3)\n3 * 8 = 24 (left: 24 3)\n24 / 3 = 8 (left: 8 3)",
                "10 / 5 = 2 (left: 4 6 2)\n9 / 3 = 3 (left: 5 3)\n5 * 3 = 15 (left: 15)",
                "5 - 2 = 3 (left: 3 8 3)\n3 * 8 = 24 (left: 24 3)\n24 / 3 = 8 (left: 8 3)"
            ],
            "values": [
                60.0,
                0.0,
                60.0,
                0.003,
                60.0
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 1.0503025
    },
    "937": {
        "input": "2 2 8 8",
        "step_1": {
            "steps": [
                "8 / 2 = 4 (left: 2 4 8)",
                "8 - 2 = 6 (left: 2 4 8)",
                "2 + 2 = 4 (left: 4 8 8)",
                "8 / 2 = 4 (left: 2 4 8)",
                "8 - 2 = 6 (left: 2 8 6)"
            ],
            "values": [
                0.003,
                0.003,
                41.0,
                0.003,
                3.0
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- 1.2",
                "4 <- INIT"
            ],
            "resampled_steps": [
                "",
                "",
                "",
                "2 + 2 = 4 (left: 4 8 8)",
                ""
            ]
        },
        "step_2": {
            "steps": [
                "8 - 2 = 6 (left: 2 6 8)",
                "2 / 2 = 1 (left: 1 8 8)",
                "8 - 2 = 6 (left: 2 6 8)",
                "2 + 2 = 4 (left: 4 8 8)\n4 + 8 = 12 (left: 8 8 12)",
                "2 * 8 = 16 (left: 8 8 16)"
            ],
            "values": [
                2.001,
                2.001,
                1.002,
                2.001,
                22.0
            ],
            "resampled": [
                "0 <- 1.2",
                "1 <- 2.4",
                "2 <- 2.4",
                "3 <- 2.3",
                "4 <- 2.0"
            ],
            "resampled_steps": [
                "2 + 2 = 4 (left: 4 8 8)",
                "2 * 8 = 16 (left: 8 8 16)",
                "2 * 8 = 16 (left: 8 8 16)",
                "2 + 2 = 4 (left: 4 8 8)\n4 + 8 = 12 (left: 8 8 12)",
                "8 - 2 = 6 (left: 2 6 8)"
            ]
        },
        "step_3": {
            "steps": [
                "2 + 2 = 4 (left: 4 8 8)\n8 / 4 = 2 (left: 2 8 8)",
                "2 * 8 = 16 (left: 8 8 16)\n8 / 8 = 1 (left: 1 16)",
                "2 * 8 = 16 (left: 8 8 16)\n8 * 8 = 64 (left: 64 16)",
                "2 + 2 = 4 (left: 4 8 8)\n4 + 8 = 12 (left: 8 8 12)\n8 + 8 = 16 (left: 16 12)",
                "8 - 2 = 6 (left: 2 6 8)\n2 + 6 = 8 (left: 8 8)"
            ],
            "values": [
                22.0,
                0.003,
                1.0,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 2.4",
                "1 <- 1.2",
                "2 <- 1.2",
                "3 <- 2.3",
                "4 <- 1.2"
            ],
            "resampled_steps": [
                "2 * 8 = 16 (left: 8 8 16)",
                "2 + 2 = 4 (left: 4 8 8)",
                "2 + 2 = 4 (left: 4 8 8)",
                "2 + 2 = 4 (left: 4 8 8)\n4 + 8 = 12 (left: 8 8 12)",
                "2 + 2 = 4 (left: 4 8 8)"
            ]
        },
        "step_4": {
            "steps": [
                "2 * 8 = 16 (left: 8 8 16)\n16 / 8 = 2 (left: 8 2)",
                "2 + 2 = 4 (left: 4 8 8)\n4 + 8 = 12 (left: 8 8 12)",
                "2 + 2 = 4 (left: 4 8 8)\n8 / 4 = 2 (left: 2 8)",
                "2 + 2 = 4 (left: 4 8 8)\n4 + 8 = 12 (left: 8 8 12)\n8 - 8 = 0 (left: 0 12)",
                "2 + 2 = 4 (left: 4 8 8)\n8 - 4 = 4 (left: 4 8)"
            ],
            "values": [
                1.001,
                2.001,
                1.001,
                40.0,
                0.003
            ],
            "resampled": [
                "0 <- 4.3",
                "1 <- 3.0",
                "2 <- 1.2",
                "3 <- 1.2",
                "4 <- INIT"
            ],
            "resampled_steps": [
                "2 + 2 = 4 (left: 4 8 8)\n4 + 8 = 12 (left: 8 8 12)\n8 - 8 = 0 (left: 0 12)",
                "2 + 2 = 4 (left: 4 8 8)\n8 / 4 = 2 (left: 2 8 8)",
                "2 + 2 = 4 (left: 4 8 8)",
                "2 + 2 = 4 (left: 4 8 8)",
                ""
            ]
        },
        "step_5": {
            "steps": [
                "2 + 2 = 4 (left: 4 8 8)\n4 + 8 = 12 (left: 8 8 12)\n8 - 8 = 0 (left: 0 12)\n12 / 0 is undefined",
                "2 + 2 = 4 (left: 4 8 8)\n8 / 4 = 2 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)",
                "2 + 2 = 4 (left: 4 8 8)\n4 * 8 = 32 (left: 8 8 32)",
                "2 + 2 = 4 (left: 4 8 8)\n8 - 4 = 4 (left: 4 8 8)",
                "2 + 2 = 4 (left: 4 8 8)"
            ],
            "values": [
                0.003,
                2.001,
                21.001,
                40.001,
                21.0
            ],
            "resampled": [
                "0 <- 5.1",
                "1 <- 5.2",
                "2 <- 4.3",
                "3 <- 5.1",
                "4 <- 5.3"
            ],
            "resampled_steps": [
                "2 + 2 = 4 (left: 4 8 8)\n8 / 4 = 2 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)",
                "2 + 2 = 4 (left: 4 8 8)\n4 * 8 = 32 (left: 8 8 32)",
                "2 + 2 = 4 (left: 4 8 8)\n4 + 8 = 12 (left: 8 8 12)\n8 - 8 = 0 (left: 0 12)",
                "2 + 2 = 4 (left: 4 8 8)\n8 / 4 = 2 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)",
                "2 + 2 = 4 (left: 4 8 8)\n8 - 4 = 4 (left: 4 8 8)"
            ]
        },
        "step_6": {
            "steps": [
                "2 + 2 = 4 (left: 4 8 8)\n8 / 4 = 2 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\nInput: 18 0.8 2 1.25 80",
                "2 + 2 = 4 (left: 4 8 8)\n4 * 8 = 32 (left: 8 8 32)\n8 * 8 = 64 (left: 64 8)",
                "2 + 2 = 4 (left: 4 8 8)\n4 + 8 = 12 (left: 8 8 12)\n8 - 8 = 0 (left: 0 12)\n12 / 0 = undefined (left: 12)",
                "2 + 2 = 4 (left: 4 8 8)\n8 / 4 = 2 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\n8 - 10 = -2 (left: -2)",
                "2 + 2 = 4 (left: 4 8 8)\n8 - 4 = 4 (left: 4 8 8)\n4 + 8 = 12 (left: 8 8 12)"
            ],
            "values": [
                0.003,
                60.0,
                0.0,
                0.001,
                3.0
            ],
            "resampled": [
                "0 <- 6.1",
                "1 <- 4.3",
                "2 <- 5.3",
                "3 <- 4.3",
                "4 <- 1.2"
            ],
            "resampled_steps": [
                "2 + 2 = 4 (left: 4 8 8)\n4 * 8 = 32 (left: 8 8 32)\n8 * 8 = 64 (left: 64 8)",
                "2 + 2 = 4 (left: 4 8 8)\n4 + 8 = 12 (left: 8 8 12)\n8 - 8 = 0 (left: 0 12)",
                "2 + 2 = 4 (left: 4 8 8)\n8 - 4 = 4 (left: 4 8 8)",
                "2 + 2 = 4 (left: 4 8 8)\n4 + 8 = 12 (left: 8 8 12)\n8 - 8 = 0 (left: 0 12)",
                "2 + 2 = 4 (left: 4 8 8)"
            ]
        },
        "step_7": {
            "steps": [
                "2 + 2 = 4 (left: 4 8 8)\n4 * 8 = 32 (left: 8 8 32)\n8 * 8 = 64 (left: 64 8)\n64 + 8 = 72 (left: 72)",
                "2 + 2 = 4 (left: 4 8 8)\n4 + 8 = 12 (left: 8 8 12)\n8 - 8 = 0 (left: 0 12)\n12 + 0 = 12 (left: 0)",
                "2 + 2 = 4 (left: 4 8 8)\n8 - 4 = 4 (left: 4 8 8)\n8 - 4 = 4 (left: 4 8 8)",
                "2 + 2 = 4 (left: 4 8 8)\n4 + 8 = 12 (left: 8 8 12)\n8 - 8 = 0 (left: 0 12)\n12 / 0 = undefined",
                "2 + 2 = 4 (left: 4 8 8)\n8 - 4 = 4 (left: 4 8)"
            ],
            "values": [
                0.003,
                0.002,
                41.0,
                0.003,
                1.002
            ],
            "resampled": [
                "0 <- 6.1",
                "1 <- 5.2",
                "2 <- 4.3",
                "3 <- 6.1",
                "4 <- 7.2"
            ],
            "resampled_steps": [
                "2 + 2 = 4 (left: 4 8 8)\n4 * 8 = 32 (left: 8 8 32)\n8 * 8 = 64 (left: 64 8)",
                "2 + 2 = 4 (left: 4 8 8)\n4 * 8 = 32 (left: 8 8 32)",
                "2 + 2 = 4 (left: 4 8 8)\n4 + 8 = 12 (left: 8 8 12)\n8 - 8 = 0 (left: 0 12)",
                "2 + 2 = 4 (left: 4 8 8)\n4 * 8 = 32 (left: 8 8 32)\n8 * 8 = 64 (left: 64 8)",
                "2 + 2 = 4 (left: 4 8 8)\n8 - 4 = 4 (left: 4 8 8)\n8 - 4 = 4 (left: 4 8 8)"
            ]
        },
        "step_8": {
            "steps": [
                "2 + 2 = 4 (left: 4 8 8)\n4 * 8 = 32 (left: 8 8 32)\n8 * 8 = 64 (left: 64 8)\n64 * 8 = 512 (left: 8)",
                "2 + 2 = 4 (left: 4 8 8)\n4 * 8 = 32 (left: 8 8 32)\n32 + 8 = 40 (left: 8 40)",
                "2 + 2 = 4 (left: 4 8 8)\n4 + 8 = 12 (left: 8 8 12)\n8 - 8 = 0 (left: 0 12)\n12 - 0 = 12 (left: 12)",
                "2 + 2 = 4 (left: 4 8 8)\n4 * 8 = 32 (left: 8 8 32)\n8 * 8 = 64 (left: 64 8)\n64 + 8 = 72 (left: 8 72)",
                "2 + 2 = 4 (left: 4 8 8)\n8 - 4 = 4 (left: 4 8 8)\n8 - 4 = 4 (left: 4 8 8)\n8 / 4 = 2 (left: 2 8 8)"
            ],
            "values": [
                0.001,
                40.001,
                0.002,
                0.003,
                1.002
            ],
            "resampled": [
                "0 <- 8.1",
                "1 <- 5.4",
                "2 <- 7.2",
                "3 <- 8.1",
                "4 <- 1.2"
            ],
            "resampled_steps": [
                "2 + 2 = 4 (left: 4 8 8)\n4 * 8 = 32 (left: 8 8 32)\n32 + 8 = 40 (left: 8 40)",
                "2 + 2 = 4 (left: 4 8 8)",
                "2 + 2 = 4 (left: 4 8 8)\n8 - 4 = 4 (left: 4 8 8)\n8 - 4 = 4 (left: 4 8 8)",
                "2 + 2 = 4 (left: 4 8 8)\n4 * 8 = 32 (left: 8 8 32)\n32 + 8 = 40 (left: 8 40)",
                "2 + 2 = 4 (left: 4 8 8)"
            ]
        },
        "step_9": {
            "steps": [
                "2 + 2 = 4 (left: 4 8 8)\n4 * 8 = 32 (left: 8 8 32)\n32 + 8 = 40 (left: 8 40)\n8 + 32 = 40 (left: 40)",
                "2 + 2 = 4 (left: 4 8 8)\n8 / 4 = 2 (left: 2 8 8)",
                "2 + 2 = 4 (left: 4 8 8)\n8 - 4 = 4 (left: 4 8 8)\n8 - 4 = 4 (left: 4 8 8)\n4 + 8 = 12 (left: 8 8 12)",
                "2 + 2 = 4 (left: 4 8 8)\n4 * 8 = 32 (left: 8 8 32)\n32 + 8 = 40 (left: 8 40)\n40 - 8 = 32 (left: 32)",
                "2 + 2 = 4 (left: 4 8 8)\n4 + 8 = 12 (left: 8 12)"
            ],
            "values": [
                0.003,
                1.001,
                2.001,
                0.003,
                0.002
            ],
            "resampled": [
                "0 <- 5.2",
                "1 <- INIT",
                "2 <- 7.2",
                "3 <- 8.1",
                "4 <- 8.1"
            ],
            "resampled_steps": [
                "2 + 2 = 4 (left: 4 8 8)\n4 * 8 = 32 (left: 8 8 32)",
                "",
                "2 + 2 = 4 (left: 4 8 8)\n8 - 4 = 4 (left: 4 8 8)\n8 - 4 = 4 (left: 4 8 8)",
                "2 + 2 = 4 (left: 4 8 8)\n4 * 8 = 32 (left: 8 8 32)\n32 + 8 = 40 (left: 8 40)",
                "2 + 2 = 4 (left: 4 8 8)\n4 * 8 = 32 (left: 8 8 32)\n32 + 8 = 40 (left: 8 40)"
            ]
        },
        "step_10": {
            "steps": [
                "2 + 2 = 4 (left: 4 8 8)\n4 * 8 = 32 (left: 8 8 32)\n8 * 8 = 64 (left: 64 32)",
                "2 + 2 = 4 (left: 4 8 8)",
                "2 + 2 = 4 (left: 4 8 8)\n8 - 4 = 4 (left: 4 8 8)\n8 - 4 = 4 (left: 4 8 8)\n4 + 8 = 12 (left: 8 8 12)",
                "2 + 2 = 4 (left: 4 8 8)\n4 * 8 = 32 (left: 8 8 32)\n32 + 8 = 40 (left: 8 40)\n8 * 5 = 40 (left: 40)",
                "2 + 2 = 4 (left: 4 8 8)\n4 * 8 = 32 (left: 8 8 32)\n32 + 8 = 40 (left: 8 40)\n9 * 3 = 27 (left: 27 27)"
            ],
            "values": [
                1.002,
                22.0,
                2.001,
                0.003,
                0.003
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 1.074544
    },
    "938": {
        "input": "2 7 12 13",
        "step_1": {
            "steps": [
                "13 + 2 = 15 (left: 7 12 15)",
                "5 - 3 = 2 (left: 2 7 9)",
                "13 - 2 = 11 (left: 2 7 11)",
                "7 + 12 = 19 (left: 2 13 19)",
                "2 * 7 = 14 (left: 14 12 13)"
            ],
            "values": [
                3.0,
                1.002,
                0.003,
                0.003,
                1.002
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- INIT"
            ],
            "resampled_steps": [
                "",
                "",
                "",
                "",
                ""
            ]
        },
        "step_2": {
            "steps": [
                "2 + 7 = 9 (left: 9 12 13)",
                "2 + 7 = 9 (left: 9 12 13)",
                "12 + 2 = 14 (left: 7 14 13)",
                "12 - 7 = 5 (left: 2 5 13)",
                "13 - 2 = 11 (left: 7 11 12)"
            ],
            "values": [
                1.002,
                1.002,
                20.002,
                1.002,
                3.0
            ],
            "resampled": [
                "0 <- 2.2",
                "1 <- INIT",
                "2 <- 2.2",
                "3 <- 2.2",
                "4 <- 1.4"
            ],
            "resampled_steps": [
                "12 + 2 = 14 (left: 7 14 13)",
                "",
                "12 + 2 = 14 (left: 7 14 13)",
                "12 + 2 = 14 (left: 7 14 13)",
                "2 * 7 = 14 (left: 14 12 13)"
            ]
        },
        "step_3": {
            "steps": [
                "12 + 2 = 14 (left: 7 14 13)\n9 + 3 = 12 (left: 12 12 20)",
                "2 + 7 = 9 (left: 9 12 13)",
                "12 + 2 = 14 (left: 7 14 13)\n14 / 7 = 2 (left: 2 13)",
                "12 + 2 = 14 (left: 7 14 13)\n7 * 14 = 98 (left: 13 98)",
                "2 * 7 = 14 (left: 14 12 13)\n14 + 12 = 26 (left: 26 13)"
            ],
            "values": [
                2.001,
                2.001,
                1.002,
                1.002,
                1.002
            ],
            "resampled": [
                "0 <- 2.2",
                "1 <- INIT",
                "2 <- 2.2",
                "3 <- 2.2",
                "4 <- INIT"
            ],
            "resampled_steps": [
                "12 + 2 = 14 (left: 7 14 13)",
                "",
                "12 + 2 = 14 (left: 7 14 13)",
                "12 + 2 = 14 (left: 7 14 13)",
                ""
            ]
        },
        "step_4": {
            "steps": [
                "12 + 2 = 14 (left: 7 14 13)\n13 + 7 = 20 (left: 14 20)",
                "7 * 2 = 14 (left: 14 12 13)",
                "12 + 2 = 14 (left: 7 14 13)\n9 - 5 = 4 (left: 1 4 3)",
                "12 + 2 = 14 (left: 7 14 13)\n13 / 7 = 1 (left: 1)",
                "13 - 12 = 1 (left: 2 7 1)"
            ],
            "values": [
                0.003,
                3.0,
                21.0,
                0.003,
                2.001
            ],
            "resampled": [
                "0 <- 2.0",
                "1 <- 4.2",
                "2 <- 4.2",
                "3 <- 2.2",
                "4 <- INIT"
            ],
            "resampled_steps": [
                "2 + 7 = 9 (left: 9 12 13)",
                "12 + 2 = 14 (left: 7 14 13)\n9 - 5 = 4 (left: 1 4 3)",
                "12 + 2 = 14 (left: 7 14 13)\n9 - 5 = 4 (left: 1 4 3)",
                "12 + 2 = 14 (left: 7 14 13)",
                ""
            ]
        },
        "step_5": {
            "steps": [
                "2 + 7 = 9 (left: 9 12 13)\n12 - 9 = 3 (left: 3 13)",
                "12 + 2 = 14 (left: 7 14 13)\n9 - 5 = 4 (left: 1 4 3)\n9 / 5 = 1.8 (left: 1.8 2)",
                "12 + 2 = 14 (left: 7 14 13)\n9 - 5 = 4 (left: 1 4 3)\n3 / 1 = 3 (left: 3)",
                "12 + 2 = 14 (left: 7 14 13)\n13 - 7 = 6 (left: 6 13)",
                "2 * 7 = 14 (left: 14 12 13)"
            ],
            "values": [
                0.003,
                2.0,
                0.0,
                0.002,
                3.0
            ],
            "resampled": [
                "0 <- 2.2",
                "1 <- 2.2",
                "2 <- 4.1",
                "3 <- 4.1",
                "4 <- 5.1"
            ],
            "resampled_steps": [
                "12 + 2 = 14 (left: 7 14 13)",
                "12 + 2 = 14 (left: 7 14 13)",
                "7 * 2 = 14 (left: 14 12 13)",
                "7 * 2 = 14 (left: 14 12 13)",
                "12 + 2 = 14 (left: 7 14 13)\n9 - 5 = 4 (left: 1 4 3)\n9 / 5 = 1.8 (left: 1.8 2)"
            ]
        },
        "step_6": {
            "steps": [
                "12 + 2 = 14 (left: 7 14 13)\n18 / 3 = 6 (left: 9 6 18)",
                "12 + 2 = 14 (left: 7 14 13)\n6 / 3 = 2 (left: 2 9 12)",
                "7 * 2 = 14 (left: 14 12 13)\n13 + 14 = 27 (left: 27)",
                "7 * 2 = 14 (left: 14 12 13)\n14 / 12 = 1.1667 (left: 1.1667 13)",
                "12 + 2 = 14 (left: 7 14 13)\n9 - 5 = 4 (left: 1 4 3)\n9 / 5 = 1.8 (left: 1.8 2)\n1.8 * 2 = 3.6 (left: 3.6)"
            ],
            "values": [
                22.0,
                0.003,
                0.002,
                2.001,
                0.0
            ],
            "resampled": [
                "0 <- 4.2",
                "1 <- 6.0",
                "2 <- 2.2",
                "3 <- 5.4",
                "4 <- 4.2"
            ],
            "resampled_steps": [
                "12 + 2 = 14 (left: 7 14 13)\n9 - 5 = 4 (left: 1 4 3)",
                "12 + 2 = 14 (left: 7 14 13)\n18 / 3 = 6 (left: 9 6 18)",
                "12 + 2 = 14 (left: 7 14 13)",
                "2 * 7 = 14 (left: 14 12 13)",
                "12 + 2 = 14 (left: 7 14 13)\n9 - 5 = 4 (left: 1 4 3)"
            ]
        },
        "step_7": {
            "steps": [
                "12 + 2 = 14 (left: 7 14 13)\n9 - 5 = 4 (left: 1 4 3)\n4 / 1 = 4 (left: 3 4)",
                "12 + 2 = 14 (left: 7 14 13)\n18 / 3 = 6 (left: 9 6 18)\n9 - 6 = 3 (left: 3 18)",
                "12 + 2 = 14 (left: 7 14 13)\n15 - 5 = 10 (left: 10 15)",
                "2 * 7 = 14 (left: 14 12 13)\n14 - 12 = 2 (left: 2 13)",
                "12 + 2 = 14 (left: 7 14 13)\n9 - 5 = 4 (left: 1 4 3)\n2 * 3 = 6 (left: 5 6 10)"
            ],
            "values": [
                22.0,
                0.003,
                0.003,
                0.003,
                22.0
            ],
            "resampled": [
                "0 <- 6.3",
                "1 <- 4.1",
                "2 <- 7.0",
                "3 <- 7.0",
                "4 <- 6.0"
            ],
            "resampled_steps": [
                "7 * 2 = 14 (left: 14 12 13)\n14 / 12 = 1.1667 (left: 1.1667 13)",
                "7 * 2 = 14 (left: 14 12 13)",
                "12 + 2 = 14 (left: 7 14 13)\n9 - 5 = 4 (left: 1 4 3)\n4 / 1 = 4 (left: 3 4)",
                "12 + 2 = 14 (left: 7 14 13)\n9 - 5 = 4 (left: 1 4 3)\n4 / 1 = 4 (left: 3 4)",
                "12 + 2 = 14 (left: 7 14 13)\n18 / 3 = 6 (left: 9 6 18)"
            ]
        },
        "step_8": {
            "steps": [
                "7 * 2 = 14 (left: 14 12 13)\n14 / 12 = 1.1667 (left: 1.1667 13)\n13 / 1.1667 = 11.1429 (left: 11.1429)",
                "7 * 2 = 14 (left: 14 12 13)\n14 / 2 = 7 (left: 7 13)",
                "12 + 2 = 14 (left: 7 14 13)\n9 - 5 = 4 (left: 1 4 3)\n4 / 1 = 4 (left: 3 4)\n3 + 4 = 7 (left: 7)",
                "12 + 2 = 14 (left: 7 14 13)\n9 - 5 = 4 (left: 1 4 3)\n4 / 1 = 4 (left: 3 4)\n3 + 4 = 7 (left: 7)",
                "12 + 2 = 14 (left: 7 14 13)\n18 / 3 = 6 (left: 9 6 18)\n10 - 5 = 5 (left: 5 15)"
            ],
            "values": [
                1.0,
                0.001,
                0.001,
                0.0,
                1.002
            ],
            "resampled": [
                "0 <- 1.4",
                "1 <- 7.4",
                "2 <- 6.0",
                "3 <- 6.0",
                "4 <- 7.0"
            ],
            "resampled_steps": [
                "2 * 7 = 14 (left: 14 12 13)",
                "12 + 2 = 14 (left: 7 14 13)\n9 - 5 = 4 (left: 1 4 3)\n2 * 3 = 6 (left: 5 6 10)",
                "12 + 2 = 14 (left: 7 14 13)\n18 / 3 = 6 (left: 9 6 18)",
                "12 + 2 = 14 (left: 7 14 13)\n18 / 3 = 6 (left: 9 6 18)",
                "12 + 2 = 14 (left: 7 14 13)\n9 - 5 = 4 (left: 1 4 3)\n4 / 1 = 4 (left: 3 4)"
            ]
        },
        "step_9": {
            "steps": [
                "2 * 7 = 14 (left: 14 12 13)\n14 + 12 = 26 (left: 26 13)",
                "12 + 2 = 14 (left: 7 14 13)\n9 - 5 = 4 (left: 1 4 3)\n2 * 3 = 6 (left: 5 6 10)\n5 + 6 = 11 (left: 10 11)",
                "12 + 2 = 14 (left: 7 14 13)\n18 / 3 = 6 (left: 9 6 18)\n9 / 6 = 1.5 (left: 1.5 18)",
                "12 + 2 = 14 (left: 7 14 13)\n18 / 3 = 6 (left: 9 6 18)\n18 - 9 = 9 (left: 9 18)",
                "12 + 2 = 14 (left: 7 14 13)\n9 - 5 = 4 (left: 1 4 3)\n4 / 1 = 4 (left: 3 4)\n3 + 4 = 7 (left: 7)"
            ],
            "values": [
                0.003,
                0.001,
                0.003,
                0.003,
                0.002
            ],
            "resampled": [
                "0 <- 6.0",
                "1 <- 7.4",
                "2 <- 7.4",
                "3 <- 7.4",
                "4 <- 3.3"
            ],
            "resampled_steps": [
                "12 + 2 = 14 (left: 7 14 13)\n18 / 3 = 6 (left: 9 6 18)",
                "12 + 2 = 14 (left: 7 14 13)\n9 - 5 = 4 (left: 1 4 3)\n2 * 3 = 6 (left: 5 6 10)",
                "12 + 2 = 14 (left: 7 14 13)\n9 - 5 = 4 (left: 1 4 3)\n2 * 3 = 6 (left: 5 6 10)",
                "12 + 2 = 14 (left: 7 14 13)\n9 - 5 = 4 (left: 1 4 3)\n2 * 3 = 6 (left: 5 6 10)",
                "12 + 2 = 14 (left: 7 14 13)\n7 * 14 = 98 (left: 13 98)"
            ]
        },
        "step_10": {
            "steps": [
                "12 + 2 = 14 (left: 7 14 13)\n18 / 3 = 6 (left: 9 6 18)\n4 - 7 = -3 (left: -3 3 15)",
                "12 + 2 = 14 (left: 7 14 13)\n9 - 5 = 4 (left: 1 4 3)\n2 * 3 = 6 (left: 5 6 10)\n14 - 9 = 5 (left: 3 5 14)",
                "12 + 2 = 14 (left: 7 14 13)\n9 - 5 = 4 (left: 1 4 3)\n2 * 3 = 6 (left: 5 6 10)\n5 * 6 = 30 (left: 10 30)",
                "12 + 2 = 14 (left: 7 14 13)\n9 - 5 = 4 (left: 1 4 3)\n2 * 3 = 6 (left: 5 6 10)\n10 - 5 = 5 (left: 5 10)",
                "12 + 2 = 14 (left: 7 14 13)\n7 * 14 = 98 (left: 13 98)\n40 + 10 = 50 (left: 20 30 50)"
            ],
            "values": [
                21.001,
                1.002,
                0.002,
                0.002,
                2.001
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 1.108201
    },
    "939": {
        "input": "2 6 8 12",
        "step_1": {
            "steps": [
                "6 * 8 = 48 (left: 2 48 12)",
                "2 + 6 = 8 (left: 8 8 12)",
                "6 * 2 = 12 (left: 12 8)",
                "12 / 2 = 6 (left: 6 8 6)",
                "4 / 2 = 2 (left: 2 8 8)"
            ],
            "values": [
                41.0,
                1.002,
                0.001,
                2.001,
                1.002
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- 1.0"
            ],
            "resampled_steps": [
                "",
                "",
                "",
                "",
                "6 * 8 = 48 (left: 2 48 12)"
            ]
        },
        "step_2": {
            "steps": [
                "8 - 2 = 6 (left: 6 8 12)",
                "12 - 6 = 6 (left: 2 6 8)",
                "12 - 8 = 4 (left: 2 4 8)",
                "12 - 6 = 6 (left: 2 6 8)",
                "6 * 8 = 48 (left: 2 48 12)\n12 + 2 = 14 (left: 14)"
            ],
            "values": [
                22.0,
                2.001,
                0.003,
                2.001,
                0.003
            ],
            "resampled": [
                "0 <- 1.0",
                "1 <- 2.0",
                "2 <- 1.0",
                "3 <- 2.1",
                "4 <- 1.0"
            ],
            "resampled_steps": [
                "6 * 8 = 48 (left: 2 48 12)",
                "8 - 2 = 6 (left: 6 8 12)",
                "6 * 8 = 48 (left: 2 48 12)",
                "12 - 6 = 6 (left: 2 6 8)",
                "6 * 8 = 48 (left: 2 48 12)"
            ]
        },
        "step_3": {
            "steps": [
                "6 * 8 = 48 (left: 2 48 12)\n48 / 2 = 24 (left: 24 12)",
                "8 - 2 = 6 (left: 6 8 12)\n6 + 8 = 14 (left: 14 12)",
                "6 * 8 = 48 (left: 2 48 12)\n14 * 12 = 168 (left: 36 168)",
                "12 - 6 = 6 (left: 2 6 8)\nInput: 3 8",
                "6 * 8 = 48 (left: 2 48 12)\n2 * 48 = 96 (left: 12 96)"
            ],
            "values": [
                20.002,
                0.003,
                1.002,
                0.003,
                0.002
            ],
            "resampled": [
                "0 <- 1.3",
                "1 <- 1.0",
                "2 <- 2.0",
                "3 <- INIT",
                "4 <- 1.0"
            ],
            "resampled_steps": [
                "12 / 2 = 6 (left: 6 8 6)",
                "6 * 8 = 48 (left: 2 48 12)",
                "8 - 2 = 6 (left: 6 8 12)",
                "",
                "6 * 8 = 48 (left: 2 48 12)"
            ]
        },
        "step_4": {
            "steps": [
                "12 / 2 = 6 (left: 6 8 6)\n6 + 8 = 14 (left: 6 14)",
                "6 * 8 = 48 (left: 2 48 12)\n48 - 2 = 46 (left: 46 12)",
                "8 - 2 = 6 (left: 6 8 12)\n12 / 6 = 2 (left: 2 12)",
                "12 - 6 = 6 (left: 2 6 8)",
                "6 * 8 = 48 (left: 2 48 12)\n2 + 48 = 50 (left: 12 50)"
            ],
            "values": [
                1.002,
                0.0,
                60.0,
                20.002,
                0.0
            ],
            "resampled": [
                "0 <- 4.3",
                "1 <- 4.2",
                "2 <- INIT",
                "3 <- 3.0",
                "4 <- 4.2"
            ],
            "resampled_steps": [
                "12 - 6 = 6 (left: 2 6 8)",
                "8 - 2 = 6 (left: 6 8 12)\n12 / 6 = 2 (left: 2 12)",
                "",
                "6 * 8 = 48 (left: 2 48 12)\n48 / 2 = 24 (left: 24 12)",
                "8 - 2 = 6 (left: 6 8 12)\n12 / 6 = 2 (left: 2 12)"
            ]
        },
        "step_5": {
            "steps": [
                "12 - 6 = 6 (left: 2 6 8)\n6 / 2 = 3 (left: 3 8)",
                "8 - 2 = 6 (left: 6 8 12)\n12 / 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)",
                "8 - 2 = 6 (left: 6 12 12)",
                "6 * 8 = 48 (left: 2 48 12)\n48 / 2 = 24 (left: 24 12)\n12 / 2 = 6 (left: 6)",
                "8 - 2 = 6 (left: 6 8 12)\n12 / 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)"
            ],
            "values": [
                60.0,
                0.003,
                2.001,
                0.002,
                0.0
            ],
            "resampled": [
                "0 <- 5.0",
                "1 <- 5.0",
                "2 <- 5.0",
                "3 <- 3.0",
                "4 <- 1.0"
            ],
            "resampled_steps": [
                "12 - 6 = 6 (left: 2 6 8)\n6 / 2 = 3 (left: 3 8)",
                "12 - 6 = 6 (left: 2 6 8)\n6 / 2 = 3 (left: 3 8)",
                "12 - 6 = 6 (left: 2 6 8)\n6 / 2 = 3 (left: 3 8)",
                "6 * 8 = 48 (left: 2 48 12)\n48 / 2 = 24 (left: 24 12)",
                "6 * 8 = 48 (left: 2 48 12)"
            ]
        },
        "step_6": {
            "steps": [
                "12 - 6 = 6 (left: 2 6 8)\n6 / 2 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)",
                "12 - 6 = 6 (left: 2 6 8)\n6 / 2 = 3 (left: 3 8)\n12 - 6 = 6 (left: 6 3)",
                "12 - 6 = 6 (left: 2 6 8)\n6 / 2 = 3 (left: 3 8)\n8 / 3 = 2.67 (left: 2.67 8)",
                "6 * 8 = 48 (left: 2 48 12)\n48 / 2 = 24 (left: 24 12)\n24 * 12 = 288 (left: 288)",
                "6 * 8 = 48 (left: 2 48 12)\n48 - 12 = 36 (left: 36)"
            ],
            "values": [
                60.0,
                1.0,
                1.001,
                0.003,
                20.0
            ],
            "resampled": [
                "0 <- 4.3",
                "1 <- 5.0",
                "2 <- 6.4",
                "3 <- 5.0",
                "4 <- 5.0"
            ],
            "resampled_steps": [
                "12 - 6 = 6 (left: 2 6 8)",
                "12 - 6 = 6 (left: 2 6 8)\n6 / 2 = 3 (left: 3 8)",
                "6 * 8 = 48 (left: 2 48 12)\n48 - 12 = 36 (left: 36)",
                "12 - 6 = 6 (left: 2 6 8)\n6 / 2 = 3 (left: 3 8)",
                "12 - 6 = 6 (left: 2 6 8)\n6 / 2 = 3 (left: 3 8)"
            ]
        },
        "step_7": {
            "steps": [
                "12 - 6 = 6 (left: 2 6 8)\n8 * 2 = 16 (left: 6 16)",
                "12 - 6 = 6 (left: 2 6 8)\n6 / 2 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)",
                "6 * 8 = 48 (left: 2 48 12)\n48 - 12 = 36 (left: 36)\nThere are no possible next steps with the number 36.",
                "12 - 6 = 6 (left: 2 6 8)\n6 / 2 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)",
                "12 - 6 = 6 (left: 2 6 8)\n6 / 2 = 3 (left: 3 8)\n5 + 10 = 15 (left: 15)"
            ],
            "values": [
                0.003,
                60.0,
                0.003,
                0.001,
                0.002
            ],
            "resampled": [
                "0 <- 4.2",
                "1 <- 4.3",
                "2 <- 5.0",
                "3 <- 3.0",
                "4 <- 1.0"
            ],
            "resampled_steps": [
                "8 - 2 = 6 (left: 6 8 12)\n12 / 6 = 2 (left: 2 12)",
                "12 - 6 = 6 (left: 2 6 8)",
                "12 - 6 = 6 (left: 2 6 8)\n6 / 2 = 3 (left: 3 8)",
                "6 * 8 = 48 (left: 2 48 12)\n48 / 2 = 24 (left: 24 12)",
                "6 * 8 = 48 (left: 2 48 12)"
            ]
        },
        "step_8": {
            "steps": [
                "8 - 2 = 6 (left: 6 8 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "12 - 6 = 6 (left: 2 6 8)\n2 + 6 = 8 (left: 8 8)",
                "12 - 6 = 6 (left: 2 6 8)\n6 / 2 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)",
                "6 * 8 = 48 (left: 2 48 12)\n48 / 2 = 24 (left: 24 12)\n24 - 12 = 12 (left: 12)",
                "6 * 8 = 48 (left: 2 48 12)\n12 - 2 = 10 (left: 10 12)"
            ],
            "values": [
                60.0,
                0.003,
                60.0,
                0.001,
                0.003
            ],
            "resampled": [
                "0 <- 4.3",
                "1 <- 4.3",
                "2 <- 5.0",
                "3 <- 8.2",
                "4 <- 4.2"
            ],
            "resampled_steps": [
                "12 - 6 = 6 (left: 2 6 8)",
                "12 - 6 = 6 (left: 2 6 8)",
                "12 - 6 = 6 (left: 2 6 8)\n6 / 2 = 3 (left: 3 8)",
                "12 - 6 = 6 (left: 2 6 8)\n6 / 2 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)",
                "8 - 2 = 6 (left: 6 8 12)\n12 / 6 = 2 (left: 2 12)"
            ]
        },
        "step_9": {
            "steps": [
                "12 - 6 = 6 (left: 2 6 8)\n2 * 6 = 12 (left: 8 12)",
                "12 - 6 = 6 (left: 2 6 8)\n2 * 14 = 28 (left: 3 28 2)",
                "12 - 6 = 6 (left: 2 6 8)\n6 / 2 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5)",
                "12 - 6 = 6 (left: 2 6 8)\n6 / 2 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (12 - 6) * (6 / 2) = 24",
                "8 - 2 = 6 (left: 6 8 12)\n12 / 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)"
            ],
            "values": [
                1.002,
                3.0,
                0.003,
                60.0,
                0.001
            ],
            "resampled": [
                "0 <- 5.0",
                "1 <- 6.0",
                "2 <- 8.0",
                "3 <- 8.0",
                "4 <- 5.0"
            ],
            "resampled_steps": [
                "12 - 6 = 6 (left: 2 6 8)\n6 / 2 = 3 (left: 3 8)",
                "12 - 6 = 6 (left: 2 6 8)\n6 / 2 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)",
                "8 - 2 = 6 (left: 6 8 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "8 - 2 = 6 (left: 6 8 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "12 - 6 = 6 (left: 2 6 8)\n6 / 2 = 3 (left: 3 8)"
            ]
        },
        "step_10": {
            "steps": [
                "12 - 6 = 6 (left: 2 6 8)\n6 / 2 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)",
                "12 - 6 = 6 (left: 2 6 8)\n6 / 2 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (12 - 6) * (6 / 2) = 24",
                "8 - 2 = 6 (left: 6 8 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (8 - 2) * (12 / 6) = 24",
                "8 - 2 = 6 (left: 6 8 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (8 - 2) * (12 / 6) = 24",
                "12 - 6 = 6 (left: 2 6 8)\n6 / 2 = 3 (left: 3 8)\n8 / 3 = 2.6667 (left: 2.6667)"
            ],
            "values": [
                40.0,
                60.0,
                60.0,
                60.0,
                0.001
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 1.1342535000000002
    },
    "940": {
        "input": "3 4 9 13",
        "step_1": {
            "steps": [
                "3 + 4 = 7 (left: 7 9 13)",
                "3 * 4 = 12 (left: 9 12 13)",
                "15 / 5 = 3 (left: 3 10 20)",
                "4 * 9 = 36 (left: 3 36 13)",
                "Possible next steps:"
            ],
            "values": [
                1.002,
                0.003,
                22.0,
                2.001,
                0.003
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- 1.2",
                "2 <- INIT",
                "3 <- 1.3",
                "4 <- 1.2"
            ],
            "resampled_steps": [
                "",
                "15 / 5 = 3 (left: 3 10 20)",
                "",
                "4 * 9 = 36 (left: 3 36 13)",
                "15 / 5 = 3 (left: 3 10 20)"
            ]
        },
        "step_2": {
            "steps": [
                "13 - 3 = 10 (left: 4 9 10)",
                "15 / 5 = 3 (left: 3 10 20)\n20 - 3 = 17 (left: 3 17)",
                "5 + 2 = 7 (left: 7 7 8)",
                "4 * 9 = 36 (left: 3 36 13)\n36 / 3 = 12 (left: 12 13)",
                "15 / 5 = 3 (left: 3 10 20)\n3 + 10 = 13 (left: 13 20)"
            ],
            "values": [
                3.0,
                0.003,
                3.0,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 1.2",
                "1 <- 1.2",
                "2 <- 1.2",
                "3 <- INIT",
                "4 <- 1.2"
            ],
            "resampled_steps": [
                "15 / 5 = 3 (left: 3 10 20)",
                "15 / 5 = 3 (left: 3 10 20)",
                "15 / 5 = 3 (left: 3 10 20)",
                "",
                "15 / 5 = 3 (left: 3 10 20)"
            ]
        },
        "step_3": {
            "steps": [
                "15 / 5 = 3 (left: 3 10 20)\n20 - 10 = 10 (left: 3 10 10)",
                "15 / 5 = 3 (left: 3 10 20)\n20 / 3 = 6.66667 (left: 6.66667 20)",
                "15 / 5 = 3 (left: 3 10 20)\n3 * 10 = 30 (left: 30 20)",
                "4 + 9 = 13 (left: 3 13 13)",
                "15 / 5 = 3 (left: 3 10 20)\n20 / 3 = 6.66666666667 (left: 3 6.66666666667)"
            ],
            "values": [
                0.003,
                0.003,
                0.002,
                1.002,
                1.0
            ],
            "resampled": [
                "0 <- 1.2",
                "1 <- 1.3",
                "2 <- 1.0",
                "3 <- 2.2",
                "4 <- INIT"
            ],
            "resampled_steps": [
                "15 / 5 = 3 (left: 3 10 20)",
                "4 * 9 = 36 (left: 3 36 13)",
                "3 + 4 = 7 (left: 7 9 13)",
                "5 + 2 = 7 (left: 7 7 8)",
                ""
            ]
        },
        "step_4": {
            "steps": [
                "15 / 5 = 3 (left: 3 10 20)\n20 - 3 = 17 (left: 3 10 17)",
                "4 * 9 = 36 (left: 3 36 13)\n36 / 3 = 12 (left: 12 13)",
                "3 + 4 = 7 (left: 7 9 13)\n7 - 9 = -2 (left: -2 13)",
                "5 + 2 = 7 (left: 7 7 8)\n8 + 7 = 15 (left: 7 15)",
                "4 / 3 = 1.33 (left: 1.33 9 13)"
            ],
            "values": [
                2.001,
                0.003,
                0.003,
                0.003,
                41.0
            ],
            "resampled": [
                "0 <- 4.4",
                "1 <- INIT",
                "2 <- 1.2",
                "3 <- 4.0",
                "4 <- 4.4"
            ],
            "resampled_steps": [
                "4 / 3 = 1.33 (left: 1.33 9 13)",
                "",
                "15 / 5 = 3 (left: 3 10 20)",
                "15 / 5 = 3 (left: 3 10 20)\n20 - 3 = 17 (left: 3 10 17)",
                "4 / 3 = 1.33 (left: 1.33 9 13)"
            ]
        },
        "step_5": {
            "steps": [
                "4 / 3 = 1.33 (left: 1.33 9 13)\nPossible next steps:",
                "9 + 3 = 12 (left: 4 12 13)",
                "15 / 5 = 3 (left: 3 10 20)\n3 * 10 = 30 (left: 30 20)",
                "15 / 5 = 3 (left: 3 10 20)\n20 - 3 = 17 (left: 3 10 17)\n4 / 4 = 1 (left: 1 16)",
                "4 / 3 = 1.33 (left: 1.33 9 13)\n13 - 1.33 = 11.67 (left: 9 11.67)"
            ],
            "values": [
                0.003,
                0.003,
                0.001,
                20.002,
                3.0
            ],
            "resampled": [
                "0 <- 1.2",
                "1 <- 4.4",
                "2 <- INIT",
                "3 <- 5.3",
                "4 <- 4.4"
            ],
            "resampled_steps": [
                "15 / 5 = 3 (left: 3 10 20)",
                "4 / 3 = 1.33 (left: 1.33 9 13)",
                "",
                "15 / 5 = 3 (left: 3 10 20)\n20 - 3 = 17 (left: 3 10 17)\n4 / 4 = 1 (left: 1 16)",
                "4 / 3 = 1.33 (left: 1.33 9 13)"
            ]
        },
        "step_6": {
            "steps": [
                "15 / 5 = 3 (left: 3 10 20)\n20 / 3 = 6.67 (left: 6.67 20)",
                "4 / 3 = 1.33 (left: 1.33 9 13)\n1.33 + 9 = 10.33 (left: 10.33 13)",
                "4 * 9 = 36 (left: 3 36 13)",
                "15 / 5 = 3 (left: 3 10 20)\n20 - 3 = 17 (left: 3 10 17)\n4 / 4 = 1 (left: 1 16)\n16 * 1 = 16 (left: 16)",
                "4 / 3 = 1.33 (left: 1.33 9 13)\n1.33 * 9 = 11.97 (left: 11.97 13)"
            ],
            "values": [
                2.001,
                1.002,
                3.0,
                0.002,
                0.0
            ],
            "resampled": [
                "0 <- 1.2",
                "1 <- 5.3",
                "2 <- 5.4",
                "3 <- 1.2",
                "4 <- 4.4"
            ],
            "resampled_steps": [
                "15 / 5 = 3 (left: 3 10 20)",
                "15 / 5 = 3 (left: 3 10 20)\n20 - 3 = 17 (left: 3 10 17)\n4 / 4 = 1 (left: 1 16)",
                "4 / 3 = 1.33 (left: 1.33 9 13)\n13 - 1.33 = 11.67 (left: 9 11.67)",
                "15 / 5 = 3 (left: 3 10 20)",
                "4 / 3 = 1.33 (left: 1.33 9 13)"
            ]
        },
        "step_7": {
            "steps": [
                "15 / 5 = 3 (left: 3 10 20)\n10 - 3 = 7 (left: 7 20)",
                "15 / 5 = 3 (left: 3 10 20)\n20 - 3 = 17 (left: 3 10 17)\n4 / 4 = 1 (left: 1 16)\n16 + 1 = 17 (left: 17)",
                "4 / 3 = 1.33 (left: 1.33 9 13)\n13 - 1.33 = 11.67 (left: 9 11.67)\n9 - 11.67 = -2.67 (left: -2.67)",
                "15 / 5 = 3 (left: 3 10 20)\n3 / 10 = 0.3 (left: 0.3 20)",
                "4 / 3 = 1.33 (left: 1.33 9 13)\n1.33 * 9 = 11.97 (left: 11.97 13)"
            ],
            "values": [
                0.002,
                0.003,
                0.0,
                1.001,
                21.0
            ],
            "resampled": [
                "0 <- 7.4",
                "1 <- 1.2",
                "2 <- 4.4",
                "3 <- 5.3",
                "4 <- 7.4"
            ],
            "resampled_steps": [
                "4 / 3 = 1.33 (left: 1.33 9 13)\n1.33 * 9 = 11.97 (left: 11.97 13)",
                "15 / 5 = 3 (left: 3 10 20)",
                "4 / 3 = 1.33 (left: 1.33 9 13)",
                "15 / 5 = 3 (left: 3 10 20)\n20 - 3 = 17 (left: 3 10 17)\n4 / 4 = 1 (left: 1 16)",
                "4 / 3 = 1.33 (left: 1.33 9 13)\n1.33 * 9 = 11.97 (left: 11.97 13)"
            ]
        },
        "step_8": {
            "steps": [
                "4 / 3 = 1.33 (left: 1.33 9 13)\n1.33 * 9 = 11.97 (left: 11.97 13)\n11.97 * 13 = 155.61 (left: 155.61)",
                "15 / 5 = 3 (left: 3 10 20)\n12 / 4 = 3 (left: 3 5 12)",
                "4 / 3 = 1.33 (left: 1.33 9 13)\n9 - 1.33 = 7.67 (left: 7.67 13)",
                "15 / 5 = 3 (left: 3 10 20)\n20 - 3 = 17 (left: 3 10 17)\n4 / 4 = 1 (left: 1 16)\n1 + 16 = 17 (left: 17)",
                "4 / 3 = 1.33 (left: 1.33 9 13)\n1.33 * 9 = 11.97 (left: 11.97 13)\n11.97 + 13 = 24.97 (left: 24.97)"
            ],
            "values": [
                0.003,
                1.002,
                1.001,
                0.003,
                20.002
            ],
            "resampled": [
                "0 <- 7.4",
                "1 <- 4.4",
                "2 <- 6.1",
                "3 <- 8.4",
                "4 <- 7.4"
            ],
            "resampled_steps": [
                "4 / 3 = 1.33 (left: 1.33 9 13)\n1.33 * 9 = 11.97 (left: 11.97 13)",
                "4 / 3 = 1.33 (left: 1.33 9 13)",
                "4 / 3 = 1.33 (left: 1.33 9 13)\n1.33 + 9 = 10.33 (left: 10.33 13)",
                "4 / 3 = 1.33 (left: 1.33 9 13)\n1.33 * 9 = 11.97 (left: 11.97 13)\n11.97 + 13 = 24.97 (left: 24.97)",
                "4 / 3 = 1.33 (left: 1.33 9 13)\n1.33 * 9 = 11.97 (left: 11.97 13)"
            ]
        },
        "step_9": {
            "steps": [
                "4 / 3 = 1.33 (left: 1.33 9 13)\n1.33 * 9 = 11.97 (left: 11.97 13)\n11.97 / 13 = 0.9223076923076923 (left: 0.9223076923076923)",
                "4 / 3 = 1.33 (left: 1.33 9 13)\n1.33 * 9 = 11.97 (left: 11.97 13)",
                "4 / 3 = 1.33 (left: 1.33 9 13)\n1.33 + 9 = 10.33 (left: 10.33 13)\n13 - 10.33 = 2.67 (left: 2.67)",
                "4 / 3 = 1.33 (left: 1.33 9 13)\n1.33 * 9 = 11.97 (left: 11.97 13)\n11.97 + 13 = 24.97 (left: 24.97)\n24 * 0.97 = 23.28 (left: 23.28)",
                "4 / 3 = 1.33 (left: 1.33 9 13)\n1.33 * 9 = 11.97 (left: 11.97 13)\n11.97 + 13 = 24.97 (left: 24.97)"
            ],
            "values": [
                0.003,
                2.001,
                0.002,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 5.3",
                "1 <- 7.4",
                "2 <- 7.4",
                "3 <- 5.3",
                "4 <- 9.1"
            ],
            "resampled_steps": [
                "15 / 5 = 3 (left: 3 10 20)\n20 - 3 = 17 (left: 3 10 17)\n4 / 4 = 1 (left: 1 16)",
                "4 / 3 = 1.33 (left: 1.33 9 13)\n1.33 * 9 = 11.97 (left: 11.97 13)",
                "4 / 3 = 1.33 (left: 1.33 9 13)\n1.33 * 9 = 11.97 (left: 11.97 13)",
                "15 / 5 = 3 (left: 3 10 20)\n20 - 3 = 17 (left: 3 10 17)\n4 / 4 = 1 (left: 1 16)",
                "4 / 3 = 1.33 (left: 1.33 9 13)\n1.33 * 9 = 11.97 (left: 11.97 13)"
            ]
        },
        "step_10": {
            "steps": [
                "15 / 5 = 3 (left: 3 10 20)\n20 - 3 = 17 (left: 3 10 17)\n4 / 4 = 1 (left: 1 16)\n1 + 16 = 17 (left: 17)",
                "4 / 3 = 1.33 (left: 1.33 9 13)\n1.33 * 9 = 11.97 (left: 11.97 13)\n11.97 * 13 = 155.61 (left: 155.61)",
                "4 / 3 = 1.33 (left: 1.33 9 13)\n1.33 * 9 = 11.97 (left: 11.97 13)\n11.97 / 13 = 0.921 (left: 0.921)",
                "15 / 5 = 3 (left: 3 10 20)\n20 - 3 = 17 (left: 3 10 17)\n4 / 4 = 1 (left: 1 16)\n16 - 1 = 15 (left: 15)",
                "4 / 3 = 1.33 (left: 1.33 9 13)\n1.33 * 9 = 11.97 (left: 11.97 13)\n11.97 + 13 = 24.97 (left: 24.97)"
            ],
            "values": [
                0.003,
                0.003,
                0.002,
                0.002,
                0.003
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 1.1636945
    },
    "941": {
        "input": "4 5 10 12",
        "step_1": {
            "steps": [
                "5 * 10 = 50 (left: 4 50 12)",
                "12 / 4 = 3 (left: 5 3 10)",
                "4 + 5 = 9 (left: 9 10 12)",
                "5 + 10 = 15 (left: 4 15 12)",
                "10 - 4 = 6 (left: 6 10 12)"
            ],
            "values": [
                3.0,
                3.0,
                2.001,
                3.0,
                22.0
            ],
            "resampled": [
                "0 <- 1.2",
                "1 <- 1.4",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- INIT"
            ],
            "resampled_steps": [
                "4 + 5 = 9 (left: 9 10 12)",
                "10 - 4 = 6 (left: 6 10 12)",
                "",
                "",
                ""
            ]
        },
        "step_2": {
            "steps": [
                "4 + 5 = 9 (left: 9 10 12)\n10 - 9 = 1 (left: 1 12)",
                "10 - 4 = 6 (left: 6 10 12)\n6 + 10 = 16 (left: 16 12)",
                "4 * 5 = 20 (left: 20 10 12)",
                "12 - 2 = 10 (left: 4 5 10)",
                "12 - 10 = 2 (left: 4 5 2)"
            ],
            "values": [
                1.001,
                0.003,
                1.002,
                41.0,
                3.0
            ],
            "resampled": [
                "0 <- 1.4",
                "1 <- 2.3",
                "2 <- 1.0",
                "3 <- 2.3",
                "4 <- 2.3"
            ],
            "resampled_steps": [
                "10 - 4 = 6 (left: 6 10 12)",
                "12 - 2 = 10 (left: 4 5 10)",
                "5 * 10 = 50 (left: 4 50 12)",
                "12 - 2 = 10 (left: 4 5 10)",
                "12 - 2 = 10 (left: 4 5 10)"
            ]
        },
        "step_3": {
            "steps": [
                "10 - 4 = 6 (left: 6 10 12)\n6 / 10 = 0.6 (left: 0.6 12)",
                "12 - 2 = 10 (left: 4 5 10)\nInput: 6 6 12",
                "5 * 10 = 50 (left: 4 50 12)\n12 * 4 = 48 (left: 48 50)",
                "12 - 2 = 10 (left: 4 5 10)\n10 - 4 = 6 (left: 6 5)",
                "12 - 2 = 10 (left: 4 5 10)\n4 * 5 = 20 (left: 20 10)"
            ],
            "values": [
                1.0,
                0.003,
                40.001,
                1.002,
                20.002
            ],
            "resampled": [
                "0 <- 1.0",
                "1 <- 1.4",
                "2 <- 3.2",
                "3 <- INIT",
                "4 <- INIT"
            ],
            "resampled_steps": [
                "5 * 10 = 50 (left: 4 50 12)",
                "10 - 4 = 6 (left: 6 10 12)",
                "5 * 10 = 50 (left: 4 50 12)\n12 * 4 = 48 (left: 48 50)",
                "",
                ""
            ]
        },
        "step_4": {
            "steps": [
                "5 * 10 = 50 (left: 4 50 12)\n50 - 12 = 38 (left: 4 38 12)",
                "10 - 4 = 6 (left: 6 10 12)\n6 * 10 = 60 (left: 60 12)",
                "5 * 10 = 50 (left: 4 50 12)\n12 * 4 = 48 (left: 48 50)\n48 * 50 = 2400 (left: 2400)",
                "4 + 5 = 9 (left: 9 10 12)",
                "12 - 10 = 2 (left: 4 5 2)"
            ],
            "values": [
                22.0,
                22.0,
                60.0,
                3.0,
                3.0
            ],
            "resampled": [
                "0 <- 3.2",
                "1 <- 3.2",
                "2 <- 4.2",
                "3 <- 4.1",
                "4 <- 3.2"
            ],
            "resampled_steps": [
                "5 * 10 = 50 (left: 4 50 12)\n12 * 4 = 48 (left: 48 50)",
                "5 * 10 = 50 (left: 4 50 12)\n12 * 4 = 48 (left: 48 50)",
                "5 * 10 = 50 (left: 4 50 12)\n12 * 4 = 48 (left: 48 50)\n48 * 50 = 2400 (left: 2400)",
                "10 - 4 = 6 (left: 6 10 12)\n6 * 10 = 60 (left: 60 12)",
                "5 * 10 = 50 (left: 4 50 12)\n12 * 4 = 48 (left: 48 50)"
            ]
        },
        "step_5": {
            "steps": [
                "5 * 10 = 50 (left: 4 50 12)\n12 * 4 = 48 (left: 48 50)\n48 / 50 = 0.96 (left: 0.96)",
                "5 * 10 = 50 (left: 4 50 12)\n12 * 4 = 48 (left: 48 50)\n48 / 50 = 0.96 (left: 0.96)",
                "5 * 10 = 50 (left: 4 50 12)\n12 * 4 = 48 (left: 48 50)\n48 * 50 = 2400 (left: 2400)\n1 + 2 + 3 * 4 = 13 (left: 13)",
                "10 - 4 = 6 (left: 6 10 12)\n6 * 10 = 60 (left: 60 12)\n100 * 20 = 2000 (left: 2000)",
                "5 * 10 = 50 (left: 4 50 12)\n12 * 4 = 48 (left: 48 50)\n48 / 50 = 0.96 (left: 0.96)"
            ],
            "values": [
                0.003,
                0.002,
                0.003,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 4.2",
                "1 <- 4.2",
                "2 <- 4.2",
                "3 <- 3.2",
                "4 <- 4.2"
            ],
            "resampled_steps": [
                "5 * 10 = 50 (left: 4 50 12)\n12 * 4 = 48 (left: 48 50)\n48 * 50 = 2400 (left: 2400)",
                "5 * 10 = 50 (left: 4 50 12)\n12 * 4 = 48 (left: 48 50)\n48 * 50 = 2400 (left: 2400)",
                "5 * 10 = 50 (left: 4 50 12)\n12 * 4 = 48 (left: 48 50)\n48 * 50 = 2400 (left: 2400)",
                "5 * 10 = 50 (left: 4 50 12)\n12 * 4 = 48 (left: 48 50)",
                "5 * 10 = 50 (left: 4 50 12)\n12 * 4 = 48 (left: 48 50)\n48 * 50 = 2400 (left: 2400)"
            ]
        },
        "step_6": {
            "steps": [
                "5 * 10 = 50 (left: 4 50 12)\n12 * 4 = 48 (left: 48 50)\n48 * 50 = 2400 (left: 2400)\n240 * 0 = 0 (left: 0 0 0)",
                "5 * 10 = 50 (left: 4 50 12)\n12 * 4 = 48 (left: 48 50)\n48 * 50 = 2400 (left: 2400)\n240 / 2 = 120 (left: 0 1200)",
                "5 * 10 = 50 (left: 4 50 12)\n12 * 4 = 48 (left: 48 50)\n48 * 50 = 2400 (left: 2400)\n2400 * 2 = 4800 (left: 4800 2)",
                "5 * 10 = 50 (left: 4 50 12)\n12 * 4 = 48 (left: 48 50)\n48 + 50 = 98",
                "5 * 10 = 50 (left: 4 50 12)\n12 * 4 = 48 (left: 48 50)\n48 * 50 = 2400 (left: 2400)\n2 / 1 = 2 (left: 5 2)"
            ],
            "values": [
                40.001,
                20.002,
                60.0,
                0.003,
                60.0
            ],
            "resampled": [
                "0 <- 6.2",
                "1 <- 3.2",
                "2 <- 6.2",
                "3 <- 6.4",
                "4 <- 6.0"
            ],
            "resampled_steps": [
                "5 * 10 = 50 (left: 4 50 12)\n12 * 4 = 48 (left: 48 50)\n48 * 50 = 2400 (left: 2400)\n2400 * 2 = 4800 (left: 4800 2)",
                "5 * 10 = 50 (left: 4 50 12)\n12 * 4 = 48 (left: 48 50)",
                "5 * 10 = 50 (left: 4 50 12)\n12 * 4 = 48 (left: 48 50)\n48 * 50 = 2400 (left: 2400)\n2400 * 2 = 4800 (left: 4800 2)",
                "5 * 10 = 50 (left: 4 50 12)\n12 * 4 = 48 (left: 48 50)\n48 * 50 = 2400 (left: 2400)\n2 / 1 = 2 (left: 5 2)",
                "5 * 10 = 50 (left: 4 50 12)\n12 * 4 = 48 (left: 48 50)\n48 * 50 = 2400 (left: 2400)\n240 * 0 = 0 (left: 0 0 0)"
            ]
        },
        "step_7": {
            "steps": [
                "5 * 10 = 50 (left: 4 50 12)\n12 * 4 = 48 (left: 48 50)\n48 * 50 = 2400 (left: 2400)\n2400 * 2 = 4800 (left: 4800 2)\n4800 + 2 = 4802",
                "5 * 10 = 50 (left: 4 50 12)\n12 * 4 = 48 (left: 48 50)\n48 / 50 = 0.96 (left: 0.96)",
                "5 * 10 = 50 (left: 4 50 12)\n12 * 4 = 48 (left: 48 50)\n48 * 50 = 2400 (left: 2400)\n2400 * 2 = 4800 (left: 4800 2)\n4800 * 2 = 9600 (left: 9600)",
                "5 * 10 = 50 (left: 4 50 12)\n12 * 4 = 48 (left: 48 50)\n48 * 50 = 2400 (left: 2400)\n2 / 1 = 2 (left: 5 2)\n5 - 2 = 3 (left: 3)",
                "5 * 10 = 50 (left: 4 50 12)\n12 * 4 = 48 (left: 48 50)\n48 * 50 = 2400 (left: 2400)\n240 * 0 = 0 (left: 0 0 0)\nThere are no possible next steps with the numbers 0 0 0."
            ],
            "values": [
                0.003,
                0.003,
                0.002,
                0.002,
                0.003
            ],
            "resampled": [
                "0 <- 6.2",
                "1 <- 4.2",
                "2 <- 6.1",
                "3 <- 6.4",
                "4 <- 2.3"
            ],
            "resampled_steps": [
                "5 * 10 = 50 (left: 4 50 12)\n12 * 4 = 48 (left: 48 50)\n48 * 50 = 2400 (left: 2400)\n2400 * 2 = 4800 (left: 4800 2)",
                "5 * 10 = 50 (left: 4 50 12)\n12 * 4 = 48 (left: 48 50)\n48 * 50 = 2400 (left: 2400)",
                "5 * 10 = 50 (left: 4 50 12)\n12 * 4 = 48 (left: 48 50)\n48 * 50 = 2400 (left: 2400)\n240 / 2 = 120 (left: 0 1200)",
                "5 * 10 = 50 (left: 4 50 12)\n12 * 4 = 48 (left: 48 50)\n48 * 50 = 2400 (left: 2400)\n2 / 1 = 2 (left: 5 2)",
                "12 - 2 = 10 (left: 4 5 10)"
            ]
        },
        "step_8": {
            "steps": [
                "5 * 10 = 50 (left: 4 50 12)\n12 * 4 = 48 (left: 48 50)\n48 * 50 = 2400 (left: 2400)\n2400 * 2 = 4800 (left: 4800 2)\n4800 + 2 = 4802 (left: 4802)",
                "5 * 10 = 50 (left: 4 50 12)\n12 * 4 = 48 (left: 48 50)\n48 * 50 = 2400 (left: 2400)\n5 - 3 = 2 (left: 2 7)",
                "5 * 10 = 50 (left: 4 50 12)\n12 * 4 = 48 (left: 48 50)\n48 * 50 = 2400 (left: 2400)\n240 / 2 = 120 (left: 0 1200)\n0 + 1200 = 1200 (left: 1200)",
                "5 * 10 = 50 (left: 4 50 12)\n12 * 4 = 48 (left: 48 50)\n48 * 50 = 2400 (left: 2400)\n2 / 1 = 2 (left: 5 2)\n5 / 2 = 2.5 (left: 2.5)",
                "12 - 2 = 10 (left: 4 5 10)\nPossible next steps:"
            ],
            "values": [
                0.003,
                0.0,
                0.003,
                0.002,
                0.003
            ],
            "resampled": [
                "0 <- 4.2",
                "1 <- 6.2",
                "2 <- 6.0",
                "3 <- 6.0",
                "4 <- 4.2"
            ],
            "resampled_steps": [
                "5 * 10 = 50 (left: 4 50 12)\n12 * 4 = 48 (left: 48 50)\n48 * 50 = 2400 (left: 2400)",
                "5 * 10 = 50 (left: 4 50 12)\n12 * 4 = 48 (left: 48 50)\n48 * 50 = 2400 (left: 2400)\n2400 * 2 = 4800 (left: 4800 2)",
                "5 * 10 = 50 (left: 4 50 12)\n12 * 4 = 48 (left: 48 50)\n48 * 50 = 2400 (left: 2400)\n240 * 0 = 0 (left: 0 0 0)",
                "5 * 10 = 50 (left: 4 50 12)\n12 * 4 = 48 (left: 48 50)\n48 * 50 = 2400 (left: 2400)\n240 * 0 = 0 (left: 0 0 0)",
                "5 * 10 = 50 (left: 4 50 12)\n12 * 4 = 48 (left: 48 50)\n48 * 50 = 2400 (left: 2400)"
            ]
        },
        "step_9": {
            "steps": [
                "5 * 10 = 50 (left: 4 50 12)\n12 * 4 = 48 (left: 48 50)\n48 * 50 = 2400 (left: 2400)\n2 * 400 = 800 (left: 800)",
                "5 * 10 = 50 (left: 4 50 12)\n12 * 4 = 48 (left: 48 50)\n48 * 50 = 2400 (left: 2400)\n2400 * 2 = 4800 (left: 4800 2)\n4800 - 2 = 4798 (left: 4798)",
                "5 * 10 = 50 (left: 4 50 12)\n12 * 4 = 48 (left: 48 50)\n48 * 50 = 2400 (left: 2400)\n240 * 0 = 0 (left: 0 0 0)\nThere are no possible next steps with the given numbers 0 0 0.",
                "5 * 10 = 50 (left: 4 50 12)\n12 * 4 = 48 (left: 48 50)\n48 * 50 = 2400 (left: 2400)\n240 * 0 = 0 (left: 0 0 0)\nThere are no possible next steps as all numbers are 0.",
                "5 * 10 = 50 (left: 4 50 12)\n12 * 4 = 48 (left: 48 50)\n48 * 50 = 2400 (left: 2400)\n9 + 87 = 96 (left: 96)"
            ],
            "values": [
                0.002,
                0.003,
                0.003,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 4.2",
                "1 <- 2.3",
                "2 <- 6.2",
                "3 <- 1.2",
                "4 <- 6.2"
            ],
            "resampled_steps": [
                "5 * 10 = 50 (left: 4 50 12)\n12 * 4 = 48 (left: 48 50)\n48 * 50 = 2400 (left: 2400)",
                "12 - 2 = 10 (left: 4 5 10)",
                "5 * 10 = 50 (left: 4 50 12)\n12 * 4 = 48 (left: 48 50)\n48 * 50 = 2400 (left: 2400)\n2400 * 2 = 4800 (left: 4800 2)",
                "4 + 5 = 9 (left: 9 10 12)",
                "5 * 10 = 50 (left: 4 50 12)\n12 * 4 = 48 (left: 48 50)\n48 * 50 = 2400 (left: 2400)\n2400 * 2 = 4800 (left: 4800 2)"
            ]
        },
        "step_10": {
            "steps": [
                "5 * 10 = 50 (left: 4 50 12)\n12 * 4 = 48 (left: 48 50)\n48 * 50 = 2400 (left: 2400)\n24 + 0 = 24 (left: 0 24 0)",
                "12 - 2 = 10 (left: 4 5 10)\n5 + 4 = 9 (left: 9 10)",
                "5 * 10 = 50 (left: 4 50 12)\n12 * 4 = 48 (left: 48 50)\n48 * 50 = 2400 (left: 2400)\n2400 * 2 = 4800 (left: 4800 2)\n4800 / 2 = 2400 (left: 2400)",
                "4 + 5 = 9 (left: 9 10 12)\n9 / 10 = 0.9 (left: 0.9 12)",
                "5 * 10 = 50 (left: 4 50 12)\n12 * 4 = 48 (left: 48 50)\n48 * 50 = 2400 (left: 2400)\n2400 * 2 = 4800 (left: 4800 2)\n4800 - 2 = 4798 (left: 4798)"
            ],
            "values": [
                40.001,
                0.003,
                60.0,
                0.003,
                0.003
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 1.1918324999999999
    },
    "942": {
        "input": "1 2 7 11",
        "step_1": {
            "steps": [
                "Possible next steps:",
                "1 * 2 = 2 (left: 2 7 11)",
                "11 - 2 = 9 (left: 1 2 9)",
                "1 * 2 = 2 (left: 2 7 11)",
                "11 - 2 = 9 (left: 1 7 9)"
            ],
            "values": [
                0.003,
                0.003,
                2.001,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- INIT"
            ],
            "resampled_steps": [
                "",
                "",
                "",
                "",
                ""
            ]
        },
        "step_2": {
            "steps": [
                "11 - 7 = 4 (left: 1 2 4)",
                "9 - 5 = 4 (left: 3 3 4)",
                "7 + 11 = 18 (left: 1 2 18)",
                "7 + 11 = 18 (left: 1 2 18)",
                "7 - 2 = 5 (left: 1 5 11)"
            ],
            "values": [
                0.003,
                0.003,
                0.002,
                20.002,
                0.003
            ],
            "resampled": [
                "0 <- 2.3",
                "1 <- 2.3",
                "2 <- INIT",
                "3 <- 2.3",
                "4 <- 2.3"
            ],
            "resampled_steps": [
                "7 + 11 = 18 (left: 1 2 18)",
                "7 + 11 = 18 (left: 1 2 18)",
                "",
                "7 + 11 = 18 (left: 1 2 18)",
                "7 + 11 = 18 (left: 1 2 18)"
            ]
        },
        "step_3": {
            "steps": [
                "7 + 11 = 18 (left: 1 2 18)\n18 / 2 = 9 (left: 1 9)",
                "7 + 11 = 18 (left: 1 2 18)\n2 * 18 = 36 (left: 1 36)",
                "6 * 10 = 60 (left: 4 60 14)",
                "7 + 11 = 18 (left: 1 2 18)\n18 - 2 = 16 (left: 1 16)",
                "7 + 11 = 18 (left: 1 2 18)\n18 - 2 = 16 (left: 1 16)"
            ],
            "values": [
                60.0,
                60.0,
                2.0,
                0.002,
                0.002
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- 3.1",
                "2 <- 3.1",
                "3 <- 3.1",
                "4 <- 3.0"
            ],
            "resampled_steps": [
                "",
                "7 + 11 = 18 (left: 1 2 18)\n2 * 18 = 36 (left: 1 36)",
                "7 + 11 = 18 (left: 1 2 18)\n2 * 18 = 36 (left: 1 36)",
                "7 + 11 = 18 (left: 1 2 18)\n2 * 18 = 36 (left: 1 36)",
                "7 + 11 = 18 (left: 1 2 18)\n18 / 2 = 9 (left: 1 9)"
            ]
        },
        "step_4": {
            "steps": [
                "1 * 2 = 2 (left: 2 7 11)",
                "7 + 11 = 18 (left: 1 2 18)\n2 * 18 = 36 (left: 1 36)\n36 - 1 = 35 (left: 35)",
                "7 + 11 = 18 (left: 1 2 18)\n2 * 18 = 36 (left: 1 36)\n36 / 1 = 36 (left: 36)",
                "7 + 11 = 18 (left: 1 2 18)\n2 * 18 = 36 (left: 1 36)\n1 * 36 = 36 (left: 36)",
                "7 + 11 = 18 (left: 1 2 18)\n18 / 2 = 9 (left: 1 9)\n1 + 9 = 10 (left: 10)"
            ],
            "values": [
                1.002,
                0.003,
                20.002,
                20.0,
                0.002
            ],
            "resampled": [
                "0 <- 2.3",
                "1 <- 4.3",
                "2 <- 2.3",
                "3 <- 3.0",
                "4 <- 3.1"
            ],
            "resampled_steps": [
                "7 + 11 = 18 (left: 1 2 18)",
                "7 + 11 = 18 (left: 1 2 18)\n2 * 18 = 36 (left: 1 36)\n1 * 36 = 36 (left: 36)",
                "7 + 11 = 18 (left: 1 2 18)",
                "7 + 11 = 18 (left: 1 2 18)\n18 / 2 = 9 (left: 1 9)",
                "7 + 11 = 18 (left: 1 2 18)\n2 * 18 = 36 (left: 1 36)"
            ]
        },
        "step_5": {
            "steps": [
                "7 + 11 = 18 (left: 1 2 18)\n2 + 18 = 20 (left: 1 20)",
                "7 + 11 = 18 (left: 1 2 18)\n2 * 18 = 36 (left: 1 36)\n1 * 36 = 36 (left: 36)\nThere are no possible next steps with just one number provided.",
                "7 + 11 = 18 (left: 1 2 18)\n4 + 5 = 9 (left: 9 10 20)",
                "7 + 11 = 18 (left: 1 2 18)\n18 / 2 = 9 (left: 1 9)\n1 * 9 = 9 (left: 9)",
                "7 + 11 = 18 (left: 1 2 18)\n2 * 18 = 36 (left: 1 36)\n1 * 36 = 36 (left: 36)"
            ],
            "values": [
                60.0,
                0.003,
                41.0,
                0.002,
                40.0
            ],
            "resampled": [
                "0 <- 3.0",
                "1 <- 5.4",
                "2 <- 5.2",
                "3 <- 5.0",
                "4 <- 3.0"
            ],
            "resampled_steps": [
                "7 + 11 = 18 (left: 1 2 18)\n18 / 2 = 9 (left: 1 9)",
                "7 + 11 = 18 (left: 1 2 18)\n2 * 18 = 36 (left: 1 36)\n1 * 36 = 36 (left: 36)",
                "7 + 11 = 18 (left: 1 2 18)\n4 + 5 = 9 (left: 9 10 20)",
                "7 + 11 = 18 (left: 1 2 18)\n2 + 18 = 20 (left: 1 20)",
                "7 + 11 = 18 (left: 1 2 18)\n18 / 2 = 9 (left: 1 9)"
            ]
        },
        "step_6": {
            "steps": [
                "7 + 11 = 18 (left: 1 2 18)\n18 / 2 = 9 (left: 1 9)\n9 / 1 = 9 (left: 9)",
                "7 + 11 = 18 (left: 1 2 18)\n2 * 18 = 36 (left: 1 36)\n1 * 36 = 36 (left: 36)\n36 / 2 = 18",
                "7 + 11 = 18 (left: 1 2 18)\n4 + 5 = 9 (left: 9 10 20)\n9 * 10 = 90 (left: 90 20)",
                "7 + 11 = 18 (left: 1 2 18)\n2 + 18 = 20 (left: 1 20)\n1 * 20 = 20 (left: 20)",
                "7 + 11 = 18 (left: 1 2 18)\n18 / 2 = 9 (left: 1 9)\n9 / 1 = 9 (left: 9)"
            ],
            "values": [
                0.002,
                0.003,
                20.001,
                0.002,
                0.003
            ],
            "resampled": [
                "0 <- 4.2",
                "1 <- 3.1",
                "2 <- 6.2",
                "3 <- 5.0",
                "4 <- 3.0"
            ],
            "resampled_steps": [
                "7 + 11 = 18 (left: 1 2 18)\n2 * 18 = 36 (left: 1 36)\n36 / 1 = 36 (left: 36)",
                "7 + 11 = 18 (left: 1 2 18)\n2 * 18 = 36 (left: 1 36)",
                "7 + 11 = 18 (left: 1 2 18)\n4 + 5 = 9 (left: 9 10 20)\n9 * 10 = 90 (left: 90 20)",
                "7 + 11 = 18 (left: 1 2 18)\n2 + 18 = 20 (left: 1 20)",
                "7 + 11 = 18 (left: 1 2 18)\n18 / 2 = 9 (left: 1 9)"
            ]
        },
        "step_7": {
            "steps": [
                "7 + 11 = 18 (left: 1 2 18)\n2 * 18 = 36 (left: 1 36)\n36 / 1 = 36 (left: 36)\n36 / 2 = 18",
                "7 + 11 = 18 (left: 1 2 18)\n2 * 18 = 36 (left: 1 36)\n1 + 36 = 37 (left: 37)",
                "7 + 11 = 18 (left: 1 2 18)\n4 + 5 = 9 (left: 9 10 20)\n9 * 10 = 90 (left: 90 20)\n90 / 20 = 4.5 (left: 4.5)",
                "7 + 11 = 18 (left: 1 2 18)\n2 + 18 = 20 (left: 1 20)\n20 / 1 = 20 (left: 20)",
                "7 + 11 = 18 (left: 1 2 18)\n18 / 2 = 9 (left: 1 9)\n9 - 1 = 8 (left: 8)"
            ],
            "values": [
                0.003,
                0.003,
                0.002,
                0.002,
                0.0
            ],
            "resampled": [
                "0 <- 5.0",
                "1 <- 4.3",
                "2 <- 6.2",
                "3 <- 5.4",
                "4 <- 3.0"
            ],
            "resampled_steps": [
                "7 + 11 = 18 (left: 1 2 18)\n2 + 18 = 20 (left: 1 20)",
                "7 + 11 = 18 (left: 1 2 18)\n2 * 18 = 36 (left: 1 36)\n1 * 36 = 36 (left: 36)",
                "7 + 11 = 18 (left: 1 2 18)\n4 + 5 = 9 (left: 9 10 20)\n9 * 10 = 90 (left: 90 20)",
                "7 + 11 = 18 (left: 1 2 18)\n2 * 18 = 36 (left: 1 36)\n1 * 36 = 36 (left: 36)",
                "7 + 11 = 18 (left: 1 2 18)\n18 / 2 = 9 (left: 1 9)"
            ]
        },
        "step_8": {
            "steps": [
                "7 + 11 = 18 (left: 1 2 18)\n2 + 18 = 20 (left: 1 20)\n1 + 20 = 21 (left: 21)",
                "7 + 11 = 18 (left: 1 2 18)\n2 * 18 = 36 (left: 1 36)\n1 * 36 = 36 (left: 36)\n36 / 4 = 9 (left: 9)",
                "7 + 11 = 18 (left: 1 2 18)\n4 + 5 = 9 (left: 9 10 20)\n9 * 10 = 90 (left: 90 20)\n90 / 20 = 4.5 (left: 4.5)",
                "7 + 11 = 18 (left: 1 2 18)\n2 * 18 = 36 (left: 1 36)\n1 * 36 = 36 (left: 36)\nThere is only one number, so there are no possible next steps.",
                "7 + 11 = 18 (left: 1 2 18)\n18 / 2 = 9 (left: 1 9)\n1 * 9 = 9 (left: 9)"
            ],
            "values": [
                0.0,
                0.002,
                0.002,
                0.003,
                0.001
            ],
            "resampled": [
                "0 <- 5.4",
                "1 <- 5.2",
                "2 <- 2.3",
                "3 <- 5.2",
                "4 <- 5.4"
            ],
            "resampled_steps": [
                "7 + 11 = 18 (left: 1 2 18)\n2 * 18 = 36 (left: 1 36)\n1 * 36 = 36 (left: 36)",
                "7 + 11 = 18 (left: 1 2 18)\n4 + 5 = 9 (left: 9 10 20)",
                "7 + 11 = 18 (left: 1 2 18)",
                "7 + 11 = 18 (left: 1 2 18)\n4 + 5 = 9 (left: 9 10 20)",
                "7 + 11 = 18 (left: 1 2 18)\n2 * 18 = 36 (left: 1 36)\n1 * 36 = 36 (left: 36)"
            ]
        },
        "step_9": {
            "steps": [
                "7 + 11 = 18 (left: 1 2 18)\n2 * 18 = 36 (left: 1 36)\n1 * 36 = 36 (left: 36)\n36 * 2 = 72",
                "7 + 11 = 18 (left: 1 2 18)\n4 + 5 = 9 (left: 9 10 20)\n20 / 10 = 2 (left: 9 2)",
                "7 + 11 = 18 (left: 1 2 18)\n5 + 7 = 12 (left: 3 12)",
                "7 + 11 = 18 (left: 1 2 18)\n4 + 5 = 9 (left: 9 10 20)\n20 - 10 = 10 (left: 9 10 10)",
                "7 + 11 = 18 (left: 1 2 18)\n2 * 18 = 36 (left: 1 36)\n1 * 36 = 36 (left: 36)\nNo possible next steps as the input is a single number."
            ],
            "values": [
                0.003,
                1.001,
                20.001,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 5.4",
                "1 <- 3.1",
                "2 <- 9.2",
                "3 <- 5.4",
                "4 <- 2.3"
            ],
            "resampled_steps": [
                "7 + 11 = 18 (left: 1 2 18)\n2 * 18 = 36 (left: 1 36)\n1 * 36 = 36 (left: 36)",
                "7 + 11 = 18 (left: 1 2 18)\n2 * 18 = 36 (left: 1 36)",
                "7 + 11 = 18 (left: 1 2 18)\n5 + 7 = 12 (left: 3 12)",
                "7 + 11 = 18 (left: 1 2 18)\n2 * 18 = 36 (left: 1 36)\n1 * 36 = 36 (left: 36)",
                "7 + 11 = 18 (left: 1 2 18)"
            ]
        },
        "step_10": {
            "steps": [
                "7 + 11 = 18 (left: 1 2 18)\n2 * 18 = 36 (left: 1 36)\n1 * 36 = 36 (left: 36)\n36 / 2 = 18 (left: 2)",
                "7 + 11 = 18 (left: 1 2 18)\n2 * 18 = 36 (left: 1 36)\n36 - 1 = 35 (left: 35)",
                "7 + 11 = 18 (left: 1 2 18)\n5 + 7 = 12 (left: 3 12)\n12 / 3 = 4 (left: 4 12)",
                "7 + 11 = 18 (left: 1 2 18)\n2 * 18 = 36 (left: 1 36)\n1 * 36 = 36 (left: 36)\n36 + 2 = 38",
                "7 + 11 = 18 (left: 1 2 18)\n18 - 1 = 17 (left: 2 17)"
            ],
            "values": [
                0.002,
                0.003,
                0.003,
                0.003,
                0.003
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 1.2164625
    },
    "943": {
        "input": "4 5 6 8",
        "step_1": {
            "steps": [
                "6 + 8 = 14 (left: 4 5 14)",
                "6 + 8 = 14 (left: 4 5 14)",
                "4 + 5 = 9 (left: 6 8 9)",
                "5 * 6 = 30 (left: 4 8 30)",
                "Possible next steps:"
            ],
            "values": [
                1.002,
                0.003,
                3.0,
                1.001,
                0.003
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- 1.2",
                "3 <- INIT",
                "4 <- INIT"
            ],
            "resampled_steps": [
                "",
                "",
                "4 + 5 = 9 (left: 6 8 9)",
                "",
                ""
            ]
        },
        "step_2": {
            "steps": [
                "6 + 8 = 14 (left: 4 5 14)",
                "4 + 5 = 9 (left: 6 8 9)",
                "4 + 5 = 9 (left: 6 8 9)\n8 + 9 = 17 (left: 6 17)",
                "5 * 6 = 30 (left: 4 8 30)",
                "5 - 6 = -1 (left: 4 -1 8)"
            ],
            "values": [
                1.002,
                2.001,
                0.002,
                3.0,
                2.001
            ],
            "resampled": [
                "0 <- 2.3",
                "1 <- INIT",
                "2 <- 2.1",
                "3 <- INIT",
                "4 <- INIT"
            ],
            "resampled_steps": [
                "5 * 6 = 30 (left: 4 8 30)",
                "",
                "4 + 5 = 9 (left: 6 8 9)",
                "",
                ""
            ]
        },
        "step_3": {
            "steps": [
                "5 * 6 = 30 (left: 4 8 30)\n4 * 8 = 32 (left: 8 30 32)",
                "8 - 4 = 4 (left: 4 6 8)",
                "4 + 5 = 9 (left: 6 8 9)\n8 / 6 = 1.33 (left: 1.33 9)",
                "5 * 6 = 30 (left: 4 8 30)",
                "6 - 8 = -2 (left: 4 5 -2)"
            ],
            "values": [
                3.0,
                60.0,
                1.001,
                2.001,
                41.0
            ],
            "resampled": [
                "0 <- 3.1",
                "1 <- 3.1",
                "2 <- 2.1",
                "3 <- 1.2",
                "4 <- INIT"
            ],
            "resampled_steps": [
                "8 - 4 = 4 (left: 4 6 8)",
                "8 - 4 = 4 (left: 4 6 8)",
                "4 + 5 = 9 (left: 6 8 9)",
                "4 + 5 = 9 (left: 6 8 9)",
                ""
            ]
        },
        "step_4": {
            "steps": [
                "8 - 4 = 4 (left: 4 6 8)\nPossible next steps:",
                "8 - 4 = 4 (left: 4 6 8)\n6 + 8 = 14 (left: 4 14)",
                "4 + 5 = 9 (left: 6 8 9)\n6 + 8 = 14 (left: 9 14)",
                "4 + 5 = 9 (left: 6 8 9)\n6 + 8 = 14 (left: 9 14)",
                "5 + 6 = 11 (left: 4 8 11)"
            ],
            "values": [
                0.003,
                2.0,
                0.003,
                0.001,
                2.001
            ],
            "resampled": [
                "0 <- 3.1",
                "1 <- 3.1",
                "2 <- 3.4",
                "3 <- 2.4",
                "4 <- 3.4"
            ],
            "resampled_steps": [
                "8 - 4 = 4 (left: 4 6 8)",
                "8 - 4 = 4 (left: 4 6 8)",
                "6 - 8 = -2 (left: 4 5 -2)",
                "5 - 6 = -1 (left: 4 -1 8)",
                "6 - 8 = -2 (left: 4 5 -2)"
            ]
        },
        "step_5": {
            "steps": [
                "8 - 4 = 4 (left: 4 6 8)\n3 + 5 = 8 (left: 7 8 9)",
                "8 - 4 = 4 (left: 4 6 8)\n8 / 4 = 2 (left: 2 6)",
                "6 - 8 = -2 (left: 4 5 -2)\n28 + 7 = 35 (left: 14 35)",
                "5 - 6 = -1 (left: 4 -1 8)\n-1 + 8 = 7 (left: 4 7)",
                "6 - 8 = -2 (left: 4 5 -2)\n4 + 5 = 9 (left: -2 9)"
            ],
            "values": [
                22.0,
                1.002,
                2.001,
                0.002,
                0.003
            ],
            "resampled": [
                "0 <- 3.1",
                "1 <- 3.1",
                "2 <- 5.1",
                "3 <- 3.4",
                "4 <- 3.1"
            ],
            "resampled_steps": [
                "8 - 4 = 4 (left: 4 6 8)",
                "8 - 4 = 4 (left: 4 6 8)",
                "8 - 4 = 4 (left: 4 6 8)\n8 / 4 = 2 (left: 2 6)",
                "6 - 8 = -2 (left: 4 5 -2)",
                "8 - 4 = 4 (left: 4 6 8)"
            ]
        },
        "step_6": {
            "steps": [
                "8 - 4 = 4 (left: 4 6 8)\n8 - 4 = 4 (left: 4 6)",
                "8 - 4 = 4 (left: 4 6 8)\n10 - 3 = 7 (left: 5 7)",
                "8 - 4 = 4 (left: 4 6 8)\n8 / 4 = 2 (left: 2 6)\n2 + 6 = 8 (left: 8)",
                "6 - 8 = -2 (left: 4 5 -2)\n5 / 4 = 1.25 (left: 1.25 -2)",
                "8 - 4 = 4 (left: 4 6 8)\n7 / 3 = 2 (left: 2 5 9)"
            ],
            "values": [
                60.0,
                0.001,
                0.001,
                0.003,
                1.002
            ],
            "resampled": [
                "0 <- 6.0",
                "1 <- 3.1",
                "2 <- 3.1",
                "3 <- 3.4",
                "4 <- 5.0"
            ],
            "resampled_steps": [
                "8 - 4 = 4 (left: 4 6 8)\n8 - 4 = 4 (left: 4 6)",
                "8 - 4 = 4 (left: 4 6 8)",
                "8 - 4 = 4 (left: 4 6 8)",
                "6 - 8 = -2 (left: 4 5 -2)",
                "8 - 4 = 4 (left: 4 6 8)\n3 + 5 = 8 (left: 7 8 9)"
            ]
        },
        "step_7": {
            "steps": [
                "8 - 4 = 4 (left: 4 6 8)\n8 - 4 = 4 (left: 4 6)\n6 - 4 = 2 (left: 2)",
                "8 - 4 = 4 (left: 4 6 8)\n3 * 9 = 27 (left: 5 27)",
                "8 - 4 = 4 (left: 4 6 8)\nInput: 3 5 7 9",
                "6 - 8 = -2 (left: 4 5 -2)\n5 * -2 = -10 (left: 4 -10)",
                "8 - 4 = 4 (left: 4 6 8)\n3 + 5 = 8 (left: 7 8 9)\n9 / 8 = 1.125 (left: 1.125 9)"
            ],
            "values": [
                0.001,
                0.003,
                0.003,
                0.002,
                2.001
            ],
            "resampled": [
                "0 <- 3.4",
                "1 <- 5.0",
                "2 <- 6.0",
                "3 <- 3.2",
                "4 <- 2.1"
            ],
            "resampled_steps": [
                "6 - 8 = -2 (left: 4 5 -2)",
                "8 - 4 = 4 (left: 4 6 8)\n3 + 5 = 8 (left: 7 8 9)",
                "8 - 4 = 4 (left: 4 6 8)\n8 - 4 = 4 (left: 4 6)",
                "4 + 5 = 9 (left: 6 8 9)\n8 / 6 = 1.33 (left: 1.33 9)",
                "4 + 5 = 9 (left: 6 8 9)"
            ]
        },
        "step_8": {
            "steps": [
                "6 - 8 = -2 (left: 4 5 -2)\n-2 * 4 = -8 (left: -8 5)",
                "8 - 4 = 4 (left: 4 6 8)\n3 + 5 = 8 (left: 7 8 9)\n8 / 7 = 1.14 (left: 1.14 9)",
                "8 - 4 = 4 (left: 4 6 8)\n8 - 4 = 4 (left: 4 6)\n6 / 4 = 1.5 (left: 1.5)",
                "4 + 5 = 9 (left: 6 8 9)\n8 / 6 = 1.33 (left: 1.33 9)\n1.33 + 9 = 10.33 (left: 10.33)",
                "4 + 5 = 9 (left: 6 8 9)\n8 - 6 = 2 (left: 2 9)"
            ],
            "values": [
                0.003,
                1.0,
                0.002,
                0.003,
                0.0
            ],
            "resampled": [
                "0 <- 6.0",
                "1 <- 6.0",
                "2 <- 3.4",
                "3 <- 5.0",
                "4 <- 6.0"
            ],
            "resampled_steps": [
                "8 - 4 = 4 (left: 4 6 8)\n8 - 4 = 4 (left: 4 6)",
                "8 - 4 = 4 (left: 4 6 8)\n8 - 4 = 4 (left: 4 6)",
                "6 - 8 = -2 (left: 4 5 -2)",
                "8 - 4 = 4 (left: 4 6 8)\n3 + 5 = 8 (left: 7 8 9)",
                "8 - 4 = 4 (left: 4 6 8)\n8 - 4 = 4 (left: 4 6)"
            ]
        },
        "step_9": {
            "steps": [
                "8 - 4 = 4 (left: 4 6 8)\n8 - 4 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "8 - 4 = 4 (left: 4 6 8)\n8 - 4 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "6 - 8 = -2 (left: 4 5 -2)\n5 + -2 = 3 (left: 4 3)",
                "8 - 4 = 4 (left: 4 6 8)\n3 + 5 = 8 (left: 7 8 9)\n8 - 7 = 1 (left: 1 9)",
                "8 - 4 = 4 (left: 4 6 8)\n8 - 4 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)"
            ],
            "values": [
                60.0,
                60.0,
                3.0,
                40.0,
                60.0
            ],
            "resampled": [
                "0 <- 9.0",
                "1 <- 9.4",
                "2 <- 9.4",
                "3 <- 9.1",
                "4 <- 9.0"
            ],
            "resampled_steps": [
                "8 - 4 = 4 (left: 4 6 8)\n8 - 4 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "8 - 4 = 4 (left: 4 6 8)\n8 - 4 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "8 - 4 = 4 (left: 4 6 8)\n8 - 4 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "8 - 4 = 4 (left: 4 6 8)\n8 - 4 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "8 - 4 = 4 (left: 4 6 8)\n8 - 4 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)"
            ]
        },
        "step_10": {
            "steps": [
                "8 - 4 = 4 (left: 4 6 8)\n8 - 4 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (8 - 4) * (8 - 4) * 6 = 24",
                "8 - 4 = 4 (left: 4 6 8)\n8 - 4 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (8 - 4) * (8 - 4) = 24",
                "8 - 4 = 4 (left: 4 6 8)\n8 - 4 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (8 - 4) * (8 - 4) = 24",
                "8 - 4 = 4 (left: 4 6 8)\n8 - 4 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (8 - 4) * 6 = 24",
                "8 - 4 = 4 (left: 4 6 8)\n8 - 4 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (8 - 4) * (8 - 4) = 24"
            ],
            "values": [
                40.001,
                40.001,
                40.001,
                60.0,
                20.002
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 1.247853
    },
    "944": {
        "input": "6 10 12 13",
        "step_1": {
            "steps": [
                "7 * 8 = 56 (left: 3 56 9)",
                "6 + 10 = 16 (left: 12 16 13)",
                "10 * 12 = 120 (left: 6 120 13)",
                "12 - 6 = 6 (left: 6 10 13)",
                "12 - 6 = 6 (left: 6 13 6)"
            ],
            "values": [
                3.0,
                1.002,
                3.0,
                2.001,
                3.0
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- INIT"
            ],
            "resampled_steps": [
                "",
                "",
                "",
                "",
                ""
            ]
        },
        "step_2": {
            "steps": [
                "4 + 6 = 10 (left: 8 10 10)",
                "10 * 12 = 120 (left: 6 120 13)",
                "10 + 12 = 22 (left: 6 13 22)",
                "13 - 12 = 1 (left: 6 10 1)",
                "12 + 1 = 13 (left: 6 10 13)"
            ],
            "values": [
                2.001,
                3.0,
                1.001,
                1.002,
                1.002
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- 1.4",
                "3 <- 1.4",
                "4 <- 2.4"
            ],
            "resampled_steps": [
                "",
                "",
                "12 - 6 = 6 (left: 6 13 6)",
                "12 - 6 = 6 (left: 6 13 6)",
                "12 + 1 = 13 (left: 6 10 13)"
            ]
        },
        "step_3": {
            "steps": [
                "10 / 12 = 0.8333 (left: 6 0.8333 13)",
                "10 * 12 = 120 (left: 6 120 13)",
                "12 - 6 = 6 (left: 6 13 6)\n6 - 13 = -7 (left: -7 6)",
                "12 - 6 = 6 (left: 6 13 6)\n6 - 13 = -7 (left: -7 6 6)",
                "12 + 1 = 13 (left: 6 10 13)\n13 - 10 = 3 (left: 6 3)"
            ],
            "values": [
                1.002,
                3.0,
                0.003,
                1.002,
                0.002
            ],
            "resampled": [
                "0 <- 2.1",
                "1 <- 3.1",
                "2 <- 3.1",
                "3 <- INIT",
                "4 <- INIT"
            ],
            "resampled_steps": [
                "10 * 12 = 120 (left: 6 120 13)",
                "10 * 12 = 120 (left: 6 120 13)",
                "10 * 12 = 120 (left: 6 120 13)",
                "",
                ""
            ]
        },
        "step_4": {
            "steps": [
                "10 * 12 = 120 (left: 6 120 13)\n6 + 13 = 19 (left: 19 120)",
                "10 * 12 = 120 (left: 6 120 13)\n120 - 6 = 114 (left: 114 13)",
                "10 * 12 = 120 (left: 6 120 13)\n6 + 13 = 19 (left: 19 120)",
                "7 - 4 = 3 (left: 3 6 8)",
                "12 - 10 = 2 (left: 2 6 13)"
            ],
            "values": [
                0.003,
                0.003,
                1.002,
                3.0,
                3.0
            ],
            "resampled": [
                "0 <- 2.1",
                "1 <- 1.2",
                "2 <- 1.0",
                "3 <- 2.1",
                "4 <- 1.2"
            ],
            "resampled_steps": [
                "10 * 12 = 120 (left: 6 120 13)",
                "10 * 12 = 120 (left: 6 120 13)",
                "7 * 8 = 56 (left: 3 56 9)",
                "10 * 12 = 120 (left: 6 120 13)",
                "10 * 12 = 120 (left: 6 120 13)"
            ]
        },
        "step_5": {
            "steps": [
                "10 * 12 = 120 (left: 6 120 13)\n120 / 13 = 9 (left: 9)",
                "10 * 12 = 120 (left: 6 120 13)\n13 / 6 = 2.1666666666666665 (left: 2.1666666666666665 120)",
                "7 * 8 = 56 (left: 3 56 9)\n3 * 56 = 168 (left: 9 168)",
                "10 * 12 = 120 (left: 6 120 13)\n13 + 6 = 19 (left: 19 120)",
                "10 * 12 = 120 (left: 6 120 13)\n6 - 13 = -7 (left: -7 120)"
            ],
            "values": [
                0.002,
                0.0,
                0.003,
                0.003,
                0.002
            ],
            "resampled": [
                "0 <- 2.2",
                "1 <- 4.4",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- 3.1"
            ],
            "resampled_steps": [
                "10 + 12 = 22 (left: 6 13 22)",
                "12 - 10 = 2 (left: 2 6 13)",
                "",
                "",
                "10 * 12 = 120 (left: 6 120 13)"
            ]
        },
        "step_6": {
            "steps": [
                "10 + 12 = 22 (left: 6 13 22)\n22 / 6 = 3.667 (left: 6 3.667)",
                "12 - 10 = 2 (left: 2 6 13)\n16 - 8 = 8 (left: 8 12)",
                "5 - 3 = 2 (left: 2 7 8)",
                "Input: 4 6 7 8",
                "10 * 12 = 120 (left: 6 120 13)\n120 / 6 = 20 (left: 20 13)"
            ],
            "values": [
                1.0,
                1.002,
                1.002,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- 2.0",
                "3 <- 2.2",
                "4 <- 3.1"
            ],
            "resampled_steps": [
                "",
                "",
                "4 + 6 = 10 (left: 8 10 10)",
                "10 + 12 = 22 (left: 6 13 22)",
                "10 * 12 = 120 (left: 6 120 13)"
            ]
        },
        "step_7": {
            "steps": [
                "3 + 9 = 12 (left: 15 18 12)",
                "10 / 6 = 1.6666666666666667 (left: 1.6666666666666667 12 13)",
                "4 + 6 = 10 (left: 8 10 10)\n8 / 10 = 0.8 (left: 0.8 10 18)",
                "10 + 12 = 22 (left: 6 13 22)\n6 + 13 = 19 (left: 19 22)",
                "10 * 12 = 120 (left: 6 120 13)\n120 / 13 = 9.23 (left: 6 9.23)"
            ],
            "values": [
                3.0,
                2.001,
                2.001,
                0.003,
                1.002
            ],
            "resampled": [
                "0 <- 4.3",
                "1 <- 3.0",
                "2 <- 1.0",
                "3 <- 1.1",
                "4 <- 3.1"
            ],
            "resampled_steps": [
                "7 - 4 = 3 (left: 3 6 8)",
                "10 / 12 = 0.8333 (left: 6 0.8333 13)",
                "7 * 8 = 56 (left: 3 56 9)",
                "6 + 10 = 16 (left: 12 16 13)",
                "10 * 12 = 120 (left: 6 120 13)"
            ]
        },
        "step_8": {
            "steps": [
                "7 - 4 = 3 (left: 3 6 8)\n6 / 3 = 2 (left: 2 8)",
                "10 / 12 = 0.8333 (left: 6 0.8333 13)\n13 / 0.8333 = 15.5999 (left: 6 15.5999)",
                "7 * 8 = 56 (left: 3 56 9)\n15 * 5 = 75 (left: 75 25)",
                "6 + 10 = 16 (left: 12 16 13)\nInput: 1.33 4 25 208",
                "10 * 12 = 120 (left: 6 120 13)\n6 * 2 = 12 (left: 12 120 13)"
            ],
            "values": [
                0.001,
                3.0,
                22.0,
                0.003,
                2.001
            ],
            "resampled": [
                "0 <- 8.2",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- 8.2",
                "4 <- 8.1"
            ],
            "resampled_steps": [
                "7 * 8 = 56 (left: 3 56 9)\n15 * 5 = 75 (left: 75 25)",
                "",
                "",
                "7 * 8 = 56 (left: 3 56 9)\n15 * 5 = 75 (left: 75 25)",
                "10 / 12 = 0.8333 (left: 6 0.8333 13)\n13 / 0.8333 = 15.5999 (left: 6 15.5999)"
            ]
        },
        "step_9": {
            "steps": [
                "7 * 8 = 56 (left: 3 56 9)\n15 * 5 = 75 (left: 75 25)\n10 + 5 = 15 (left: 15)",
                "6 * 13 = 78 (left: 10 12 78)",
                "12 * 13 = 156 (left: 6 10 156)",
                "7 * 8 = 56 (left: 3 56 9)\n15 * 5 = 75 (left: 75 25)\n75 / 25 = 3 (left: 3)",
                "10 / 12 = 0.8333 (left: 6 0.8333 13)\n13 / 0.8333 = 15.5999 (left: 6 15.5999)\n15.5999 - 6 = 9.5999 (left: 6 9.5999)"
            ],
            "values": [
                0.003,
                3.0,
                0.003,
                0.003,
                1.002
            ],
            "resampled": [
                "0 <- 8.2",
                "1 <- 9.1",
                "2 <- 8.2",
                "3 <- 4.2",
                "4 <- 8.4"
            ],
            "resampled_steps": [
                "7 * 8 = 56 (left: 3 56 9)\n15 * 5 = 75 (left: 75 25)",
                "6 * 13 = 78 (left: 10 12 78)",
                "7 * 8 = 56 (left: 3 56 9)\n15 * 5 = 75 (left: 75 25)",
                "10 * 12 = 120 (left: 6 120 13)\n6 + 13 = 19 (left: 19 120)",
                "10 * 12 = 120 (left: 6 120 13)\n6 * 2 = 12 (left: 12 120 13)"
            ]
        },
        "step_10": {
            "steps": [
                "7 * 8 = 56 (left: 3 56 9)\n15 * 5 = 75 (left: 75 25)\n75 / 25 = 3 (left: 3)",
                "6 * 13 = 78 (left: 10 12 78)\n12 * 10 = 120 (left: 78 120)",
                "7 * 8 = 56 (left: 3 56 9)\n15 * 5 = 75 (left: 75 25)\n75 / 25 = 3 (left: 3)",
                "10 * 12 = 120 (left: 6 120 13)\n6 + 13 = 19 (left: 19 120)\n3 + 5 = 8 (left: 25 8)",
                "10 * 12 = 120 (left: 6 120 13)\n6 * 2 = 12 (left: 12 120 13)\n120 - 12 = 108 (left: 108)"
            ],
            "values": [
                0.001,
                0.002,
                0.002,
                0.003,
                0.002
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 1.2801035
    },
    "945": {
        "input": "1 3 9 9",
        "step_1": {
            "steps": [
                "9 / 3 = 3 (left: 1 3 9)",
                "9 - 1 = 8 (left: 8 9 9)",
                "9 / 3 = 3 (left: 1 3 9)",
                "3 * 9 = 27 (left: 1 27 9)",
                "9 - 1 = 8 (left: 8 9 9)"
            ],
            "values": [
                0.003,
                0.003,
                20.002,
                22.0,
                1.002
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- 1.2",
                "3 <- INIT",
                "4 <- INIT"
            ],
            "resampled_steps": [
                "",
                "",
                "9 / 3 = 3 (left: 1 3 9)",
                "",
                ""
            ]
        },
        "step_2": {
            "steps": [
                "9 * 9 = 81 (left: 1 9 81)",
                "1 + 3 = 4 (left: 4 9 9)",
                "9 / 3 = 3 (left: 1 3 9)\n5 * 7 = 35 (left: 4 35)",
                "9 / 3 = 3 (left: 1 3 9)",
                "3 * 9 = 27 (left: 1 27 9)"
            ],
            "values": [
                0.003,
                2.001,
                21.001,
                21.001,
                2.0
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- 1.3",
                "4 <- INIT"
            ],
            "resampled_steps": [
                "",
                "",
                "",
                "3 * 9 = 27 (left: 1 27 9)",
                ""
            ]
        },
        "step_3": {
            "steps": [
                "9 / 3 = 3 (left: 1 3 9)",
                "1 * 3 = 3 (left: 3 9 9)",
                "9 * 9 = 81 (left: 1 3 81)",
                "3 * 9 = 27 (left: 1 27 9)\n9 - 1 = 8 (left: 8 9)",
                "3 * 9 = 27 (left: 1 9 27)"
            ],
            "values": [
                0.003,
                20.002,
                40.001,
                0.003,
                40.001
            ],
            "resampled": [
                "0 <- 1.3",
                "1 <- 3.2",
                "2 <- 2.2",
                "3 <- 3.2",
                "4 <- 2.2"
            ],
            "resampled_steps": [
                "3 * 9 = 27 (left: 1 27 9)",
                "9 * 9 = 81 (left: 1 3 81)",
                "9 / 3 = 3 (left: 1 3 9)\n5 * 7 = 35 (left: 4 35)",
                "9 * 9 = 81 (left: 1 3 81)",
                "9 / 3 = 3 (left: 1 3 9)\n5 * 7 = 35 (left: 4 35)"
            ]
        },
        "step_4": {
            "steps": [
                "3 * 9 = 27 (left: 1 27 9)\n6 - 4 = 2 (left: 2 10 2)",
                "9 * 9 = 81 (left: 1 3 81)\n3 * 81 = 243 (left: 1 243)",
                "9 / 3 = 3 (left: 1 3 9)\n5 * 7 = 35 (left: 4 35)\n35 - 4 = 31 (left: 31)",
                "9 * 9 = 81 (left: 1 3 81)\n1 + 3 = 4 (left: 4 81)",
                "9 / 3 = 3 (left: 1 3 9)\n5 * 7 = 35 (left: 4 35)\n4 + 35 = 39 (left: 39)"
            ],
            "values": [
                3.0,
                0.003,
                0.003,
                20.002,
                0.003
            ],
            "resampled": [
                "0 <- 3.1",
                "1 <- 3.4",
                "2 <- 3.4",
                "3 <- 3.1",
                "4 <- 4.3"
            ],
            "resampled_steps": [
                "1 * 3 = 3 (left: 3 9 9)",
                "3 * 9 = 27 (left: 1 9 27)",
                "3 * 9 = 27 (left: 1 9 27)",
                "1 * 3 = 3 (left: 3 9 9)",
                "9 * 9 = 81 (left: 1 3 81)\n1 + 3 = 4 (left: 4 81)"
            ]
        },
        "step_5": {
            "steps": [
                "1 * 3 = 3 (left: 3 9 9)\n9 / 3 = 3 (left: 3 9)",
                "3 * 9 = 27 (left: 1 9 27)\n1 + 9 = 10 (left: 10 27)",
                "3 * 9 = 27 (left: 1 9 27)\n10 - 6 = 4 (left: 4 10)",
                "1 * 3 = 3 (left: 3 9 9)\n3 + 9 = 12 (left: 9 12)",
                "9 * 9 = 81 (left: 1 3 81)\n1 + 3 = 4 (left: 4 81)\n4 + 81 = 85 (left: 81)"
            ],
            "values": [
                0.003,
                0.003,
                0.001,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 1.2",
                "1 <- 2.3",
                "2 <- 3.2",
                "3 <- 2.3",
                "4 <- 3.4"
            ],
            "resampled_steps": [
                "9 / 3 = 3 (left: 1 3 9)",
                "9 / 3 = 3 (left: 1 3 9)",
                "9 * 9 = 81 (left: 1 3 81)",
                "9 / 3 = 3 (left: 1 3 9)",
                "3 * 9 = 27 (left: 1 9 27)"
            ]
        },
        "step_6": {
            "steps": [
                "9 / 3 = 3 (left: 1 3 9)\n9 / 3 = 3 (left: 1 3)",
                "9 / 3 = 3 (left: 1 3 9)\n6 + 6 = 12 (left: 6 12)",
                "9 * 9 = 81 (left: 1 3 81)\n81 / 3 = 27 (left: 1 27)",
                "9 / 3 = 3 (left: 1 3 9)\n6 - 6 = 0 (left: 0 6)",
                "3 * 9 = 27 (left: 1 9 27)\nInput: 3 5 15"
            ],
            "values": [
                0.001,
                0.003,
                0.003,
                60.0,
                0.003
            ],
            "resampled": [
                "0 <- 6.3",
                "1 <- 3.4",
                "2 <- 6.3",
                "3 <- 3.4",
                "4 <- 4.3"
            ],
            "resampled_steps": [
                "9 / 3 = 3 (left: 1 3 9)\n6 - 6 = 0 (left: 0 6)",
                "3 * 9 = 27 (left: 1 9 27)",
                "9 / 3 = 3 (left: 1 3 9)\n6 - 6 = 0 (left: 0 6)",
                "3 * 9 = 27 (left: 1 9 27)",
                "9 * 9 = 81 (left: 1 3 81)\n1 + 3 = 4 (left: 4 81)"
            ]
        },
        "step_7": {
            "steps": [
                "9 / 3 = 3 (left: 1 3 9)\n6 - 6 = 0 (left: 0 6)\n0 + 6 = 6",
                "3 * 9 = 27 (left: 1 9 27)\n9 - 1 = 8 (left: 8 27)",
                "9 / 3 = 3 (left: 1 3 9)\n6 - 6 = 0 (left: 0 6)\nPossible next steps:",
                "3 * 9 = 27 (left: 1 9 27)\n27 - 1 = 26 (left: 9 26)",
                "9 * 9 = 81 (left: 1 3 81)\n1 + 3 = 4 (left: 4 81)\n81 * 4 = 324 (left: 4 324)"
            ],
            "values": [
                0.003,
                0.003,
                0.003,
                0.003,
                40.001
            ],
            "resampled": [
                "0 <- 3.4",
                "1 <- 3.2",
                "2 <- 1.2",
                "3 <- 3.4",
                "4 <- 7.4"
            ],
            "resampled_steps": [
                "3 * 9 = 27 (left: 1 9 27)",
                "9 * 9 = 81 (left: 1 3 81)",
                "9 / 3 = 3 (left: 1 3 9)",
                "3 * 9 = 27 (left: 1 9 27)",
                "9 * 9 = 81 (left: 1 3 81)\n1 + 3 = 4 (left: 4 81)\n81 * 4 = 324 (left: 4 324)"
            ]
        },
        "step_8": {
            "steps": [
                "3 * 9 = 27 (left: 1 9 27)\n3 * 5 = 15 (left: 15)",
                "9 * 9 = 81 (left: 1 3 81)\n1 + 3 = 4 (left: 4 81)",
                "9 / 3 = 3 (left: 1 3 9)\n3 * 9 = 27 (left: 1 27)",
                "3 * 9 = 27 (left: 1 9 27)\nPossible next steps:",
                "9 * 9 = 81 (left: 1 3 81)\n1 + 3 = 4 (left: 4 81)\n81 * 4 = 324 (left: 4 324)\n4 + 324 = 328 (left: 328)"
            ],
            "values": [
                0.003,
                0.003,
                20.001,
                0.003,
                0.002
            ],
            "resampled": [
                "0 <- 3.2",
                "1 <- 1.2",
                "2 <- 6.3",
                "3 <- 2.2",
                "4 <- 6.3"
            ],
            "resampled_steps": [
                "9 * 9 = 81 (left: 1 3 81)",
                "9 / 3 = 3 (left: 1 3 9)",
                "9 / 3 = 3 (left: 1 3 9)\n6 - 6 = 0 (left: 0 6)",
                "9 / 3 = 3 (left: 1 3 9)\n5 * 7 = 35 (left: 4 35)",
                "9 / 3 = 3 (left: 1 3 9)\n6 - 6 = 0 (left: 0 6)"
            ]
        },
        "step_9": {
            "steps": [
                "9 * 9 = 81 (left: 1 3 81)\n3 * 1 = 3 (left: 3 81)",
                "9 / 3 = 3 (left: 1 3 9)\n5 / 5 = 1 (left: 1 25)",
                "9 / 3 = 3 (left: 1 3 9)\n6 - 6 = 0 (left: 0 6)\n6 - 0 = 6 (left: 6)",
                "9 / 3 = 3 (left: 1 3 9)\n5 * 7 = 35 (left: 4 35)\n4 + 35 = 39 (left: 39)",
                "9 / 3 = 3 (left: 1 3 9)\n6 - 6 = 0 (left: 0 6)\n6 / 0 = undefined (left: 0 6)"
            ],
            "values": [
                20.002,
                40.0,
                0.003,
                0.003,
                60.0
            ],
            "resampled": [
                "0 <- 7.4",
                "1 <- 9.0",
                "2 <- 7.4",
                "3 <- 9.4",
                "4 <- 7.4"
            ],
            "resampled_steps": [
                "9 * 9 = 81 (left: 1 3 81)\n1 + 3 = 4 (left: 4 81)\n81 * 4 = 324 (left: 4 324)",
                "9 * 9 = 81 (left: 1 3 81)\n3 * 1 = 3 (left: 3 81)",
                "9 * 9 = 81 (left: 1 3 81)\n1 + 3 = 4 (left: 4 81)\n81 * 4 = 324 (left: 4 324)",
                "9 / 3 = 3 (left: 1 3 9)\n6 - 6 = 0 (left: 0 6)\n6 / 0 = undefined (left: 0 6)",
                "9 * 9 = 81 (left: 1 3 81)\n1 + 3 = 4 (left: 4 81)\n81 * 4 = 324 (left: 4 324)"
            ]
        },
        "step_10": {
            "steps": [
                "9 * 9 = 81 (left: 1 3 81)\n1 + 3 = 4 (left: 4 81)\n81 * 4 = 324 (left: 4 324)\n324 - 4 = 320 (left: 320)",
                "9 * 9 = 81 (left: 1 3 81)\n3 * 1 = 3 (left: 3 81)\n81 / 3 = 27 (left: 27)",
                "9 * 9 = 81 (left: 1 3 81)\n1 + 3 = 4 (left: 4 81)\n81 * 4 = 324 (left: 4 324)\n4 + 324 = 328 (left: 328)",
                "9 / 3 = 3 (left: 1 3 9)\n6 - 6 = 0 (left: 0 6)\n6 / 0 = undefined (left: 0 6)\n0 * 6 = 0",
                "9 * 9 = 81 (left: 1 3 81)\n1 + 3 = 4 (left: 4 81)\n81 * 4 = 324 (left: 4 324)\nInput: 3 9 3"
            ],
            "values": [
                0.001,
                0.001,
                0.0,
                0.003,
                0.003
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 1.3084260000000003
    },
    "946": {
        "input": "1 4 4 11",
        "step_1": {
            "steps": [
                "1 + 4 = 5 (left: 4 5 11)",
                "11 - 4 = 7 (left: 4 7 11)",
                "1 + 4 = 5 (left: 4 5 11)",
                "11 + 1 = 12 (left: 4 4 12)",
                "1 + 4 = 5 (left: 4 5 11)"
            ],
            "values": [
                1.002,
                2.001,
                1.002,
                2.001,
                20.002
            ],
            "resampled": [
                "0 <- 1.1",
                "1 <- 1.4",
                "2 <- 1.4",
                "3 <- 1.4",
                "4 <- 1.4"
            ],
            "resampled_steps": [
                "11 - 4 = 7 (left: 4 7 11)",
                "1 + 4 = 5 (left: 4 5 11)",
                "1 + 4 = 5 (left: 4 5 11)",
                "1 + 4 = 5 (left: 4 5 11)",
                "1 + 4 = 5 (left: 4 5 11)"
            ]
        },
        "step_2": {
            "steps": [
                "11 - 4 = 7 (left: 4 7 11)\n11 - 4 = 7 (left: 7 11)",
                "1 + 4 = 5 (left: 4 5 11)\n5 * 11 = 55 (left: 4 55)",
                "1 + 4 = 5 (left: 4 5 11)\nPossible next steps:",
                "1 + 4 = 5 (left: 4 5 11)\n5 + 11 = 16 (left: 4 16)",
                "1 + 4 = 5 (left: 4 5 11)\n11 / 5 = 2.2 (left: 4 2.2)"
            ],
            "values": [
                0.002,
                60.0,
                0.003,
                0.003,
                0.002
            ],
            "resampled": [
                "0 <- 2.1",
                "1 <- 2.1",
                "2 <- 1.0",
                "3 <- 2.1",
                "4 <- 2.1"
            ],
            "resampled_steps": [
                "1 + 4 = 5 (left: 4 5 11)\n5 * 11 = 55 (left: 4 55)",
                "1 + 4 = 5 (left: 4 5 11)\n5 * 11 = 55 (left: 4 55)",
                "1 + 4 = 5 (left: 4 5 11)",
                "1 + 4 = 5 (left: 4 5 11)\n5 * 11 = 55 (left: 4 55)",
                "1 + 4 = 5 (left: 4 5 11)\n5 * 11 = 55 (left: 4 55)"
            ]
        },
        "step_3": {
            "steps": [
                "1 + 4 = 5 (left: 4 5 11)\n5 * 11 = 55 (left: 4 55)\n4 + 55 = 59 (left: 59)",
                "1 + 4 = 5 (left: 4 5 11)\n5 * 11 = 55 (left: 4 55)\n4 * 55 = 220 (left: 220)",
                "1 + 4 = 5 (left: 4 5 11)\n5 / 4 = 1.25 (left: 1.25 11)",
                "1 + 4 = 5 (left: 4 5 11)\n5 * 11 = 55 (left: 4 55)\n55 - 4 = 51 (left: 51)",
                "1 + 4 = 5 (left: 4 5 11)\n5 * 11 = 55 (left: 4 55)\n55 - 4 = 51 (left: 51)"
            ],
            "values": [
                0.003,
                0.003,
                1.001,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 1.4",
                "1 <- 2.1",
                "2 <- 2.1",
                "3 <- 2.1",
                "4 <- 1.4"
            ],
            "resampled_steps": [
                "1 + 4 = 5 (left: 4 5 11)",
                "1 + 4 = 5 (left: 4 5 11)\n5 * 11 = 55 (left: 4 55)",
                "1 + 4 = 5 (left: 4 5 11)\n5 * 11 = 55 (left: 4 55)",
                "1 + 4 = 5 (left: 4 5 11)\n5 * 11 = 55 (left: 4 55)",
                "1 + 4 = 5 (left: 4 5 11)"
            ]
        },
        "step_4": {
            "steps": [
                "1 + 4 = 5 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)",
                "1 + 4 = 5 (left: 4 5 11)\n5 * 11 = 55 (left: 4 55)\n10 - 2 = 8 (left: 8 5)",
                "1 + 4 = 5 (left: 4 5 11)\n5 * 11 = 55 (left: 4 55)\n55 / 4 = 13.75 (left: 13.75)",
                "1 + 4 = 5 (left: 4 5 11)\n5 * 11 = 55 (left: 4 55)\n3 * 5 = 15 (left: 10 15)",
                "1 + 4 = 5 (left: 4 5 11)\n8 * 9 = 72 (left: 3 7 72)"
            ],
            "values": [
                40.0,
                20.002,
                0.003,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 4.1",
                "1 <- 2.1",
                "2 <- 4.0",
                "3 <- 4.0",
                "4 <- 2.1"
            ],
            "resampled_steps": [
                "1 + 4 = 5 (left: 4 5 11)\n5 * 11 = 55 (left: 4 55)\n10 - 2 = 8 (left: 8 5)",
                "1 + 4 = 5 (left: 4 5 11)\n5 * 11 = 55 (left: 4 55)",
                "1 + 4 = 5 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)",
                "1 + 4 = 5 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)",
                "1 + 4 = 5 (left: 4 5 11)\n5 * 11 = 55 (left: 4 55)"
            ]
        },
        "step_5": {
            "steps": [
                "1 + 4 = 5 (left: 4 5 11)\n5 * 11 = 55 (left: 4 55)\n10 - 2 = 8 (left: 8 5)\n8 - 5 = 3 (left: 3)",
                "1 + 4 = 5 (left: 4 5 11)\n5 * 11 = 55 (left: 4 55)\n4 * 55 = 220 (left: 220)",
                "1 + 4 = 5 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n9 - 3 = 6 (left: 6 27)",
                "1 + 4 = 5 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n3 + 9 = 12 (left: 12 5)",
                "1 + 4 = 5 (left: 4 5 11)\n5 * 11 = 55 (left: 4 55)\n55 - 4 = 51 (left: 51)"
            ],
            "values": [
                0.002,
                0.003,
                0.003,
                0.002,
                0.002
            ],
            "resampled": [
                "0 <- 4.1",
                "1 <- 1.4",
                "2 <- 2.1",
                "3 <- 4.1",
                "4 <- 4.0"
            ],
            "resampled_steps": [
                "1 + 4 = 5 (left: 4 5 11)\n5 * 11 = 55 (left: 4 55)\n10 - 2 = 8 (left: 8 5)",
                "1 + 4 = 5 (left: 4 5 11)",
                "1 + 4 = 5 (left: 4 5 11)\n5 * 11 = 55 (left: 4 55)",
                "1 + 4 = 5 (left: 4 5 11)\n5 * 11 = 55 (left: 4 55)\n10 - 2 = 8 (left: 8 5)",
                "1 + 4 = 5 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)"
            ]
        },
        "step_6": {
            "steps": [
                "1 + 4 = 5 (left: 4 5 11)\n5 * 11 = 55 (left: 4 55)\n10 - 2 = 8 (left: 8 5)\n8 * 5 = 40 (left: 40)",
                "1 + 4 = 5 (left: 4 5 11)\n5 + 11 = 16 (left: 4 16)",
                "1 + 4 = 5 (left: 4 5 11)\n5 * 11 = 55 (left: 4 55)\n4 * 55 = 220 (left: 55)",
                "1 + 4 = 5 (left: 4 5 11)\n5 * 11 = 55 (left: 4 55)\n10 - 2 = 8 (left: 8 5)\n8 * 5 = 40 (left: 40)",
                "1 + 4 = 5 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)"
            ],
            "values": [
                0.003,
                0.003,
                0.003,
                0.003,
                60.0
            ],
            "resampled": [
                "0 <- 4.1",
                "1 <- 2.1",
                "2 <- 6.4",
                "3 <- 2.1",
                "4 <- 6.4"
            ],
            "resampled_steps": [
                "1 + 4 = 5 (left: 4 5 11)\n5 * 11 = 55 (left: 4 55)\n10 - 2 = 8 (left: 8 5)",
                "1 + 4 = 5 (left: 4 5 11)\n5 * 11 = 55 (left: 4 55)",
                "1 + 4 = 5 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "1 + 4 = 5 (left: 4 5 11)\n5 * 11 = 55 (left: 4 55)",
                "1 + 4 = 5 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)"
            ]
        },
        "step_7": {
            "steps": [
                "1 + 4 = 5 (left: 4 5 11)\n5 * 11 = 55 (left: 4 55)\n10 - 2 = 8 (left: 8 5)\n8 - 5 = 3 (left: 3)",
                "1 + 4 = 5 (left: 4 5 11)\n5 * 11 = 55 (left: 4 55)\n4 - 55 = -51 (left: -51)",
                "1 + 4 = 5 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 + 4) * (4 * (11 - 5)) = 24",
                "1 + 4 = 5 (left: 4 5 11)\n5 * 11 = 55 (left: 4 55)\n55 / 4 = 13.75 (left: 4 13.75)",
                "1 + 4 = 5 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * (1 + 4) * 11 = 24"
            ],
            "values": [
                0.003,
                0.001,
                60.0,
                2.001,
                40.001
            ],
            "resampled": [
                "0 <- 7.2",
                "1 <- 7.2",
                "2 <- 6.4",
                "3 <- 7.2",
                "4 <- 2.1"
            ],
            "resampled_steps": [
                "1 + 4 = 5 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 + 4) * (4 * (11 - 5)) = 24",
                "1 + 4 = 5 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 + 4) * (4 * (11 - 5)) = 24",
                "1 + 4 = 5 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "1 + 4 = 5 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 + 4) * (4 * (11 - 5)) = 24",
                "1 + 4 = 5 (left: 4 5 11)\n5 * 11 = 55 (left: 4 55)"
            ]
        },
        "step_8": {
            "steps": [
                "1 + 4 = 5 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 + 4) * (4 * (11 - 5)) = 24\nInput: 3 3 4 5\n\n3 + 5 = 8 (left: 3 4 8)\n8 - 4 = 4 (left: 3 4)\n3 * 4 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((3 + 5) - 4) * (3 * 2) = 24",
                "1 + 4 = 5 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 + 4) * (4 * (11 - 5)) = 24\nInput: 3 3 7 8\nSteps:\n3 + 7 = 10 (left: 3 8 10)\n10 - 8 = 2 (left: 2 3)\n2 * 3 = 6 (left: 6)\n6 * 4 = 24 (left: 24)\nAnswer: ((3 + 7) - 8) * (3 * 8) = 24",
                "1 + 4 = 5 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 + 4) * (4 * 11 - 5) = 24",
                "1 + 4 = 5 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 + 4) * (4 * (11 - 5)) = 24\nInput: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6 24)\n6 - 3 = 3 (left: 3 24)\n3 * 24 = 72 (left: 72)\nAnswer: (3 * 8) * (6 - 3) = 24",
                "1 + 4 = 5 (left: 4 5 11)\n5 * 11 = 55 (left: 4 55)\n55 - 4 = 51 (left: 51)"
            ],
            "values": [
                40.0,
                60.0,
                40.001,
                60.0,
                0.003
            ],
            "resampled": [
                "0 <- 8.1",
                "1 <- 8.2",
                "2 <- 8.2",
                "3 <- 6.4",
                "4 <- 8.3"
            ],
            "resampled_steps": [
                "1 + 4 = 5 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 + 4) * (4 * (11 - 5)) = 24\nInput: 3 3 7 8\nSteps:\n3 + 7 = 10 (left: 3 8 10)\n10 - 8 = 2 (left: 2 3)\n2 * 3 = 6 (left: 6)\n6 * 4 = 24 (left: 24)\nAnswer: ((3 + 7) - 8) * (3 * 8) = 24",
                "1 + 4 = 5 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 + 4) * (4 * 11 - 5) = 24",
                "1 + 4 = 5 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 + 4) * (4 * 11 - 5) = 24",
                "1 + 4 = 5 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "1 + 4 = 5 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 + 4) * (4 * (11 - 5)) = 24\nInput: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6 24)\n6 - 3 = 3 (left: 3 24)\n3 * 24 = 72 (left: 72)\nAnswer: (3 * 8) * (6 - 3) = 24"
            ]
        },
        "step_9": {
            "steps": [
                "1 + 4 = 5 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 + 4) * (4 * (11 - 5)) = 24\nInput: 3 3 7 8\nSteps:\n3 + 7 = 10 (left: 3 8 10)\n10 - 8 = 2 (left: 2 3)\n2 * 3 = 6 (left: 6)\n6 * 4 = 24 (left: 24)\nAnswer: ((3 + 7) - 8) * (3 * 8) = 24\nInput: 2 3 5 9\nSteps:\n2 * 5 = 10 (left: 3 9 10)\n10 - 9 = 1 (left: 1 3)\n1 * 3 = 3 (left: 3)\n3 * 8 = 24 (left: 24)\nAnswer: ((2 * 5) - 9) * (3 * 8) = 24",
                "1 + 4 = 5 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 + 4) * (4 * 11 - 5) = 24\nInput: 3 3 8 9\nSteps:\n3 * 8 = 24 (left: 3 9 24)\n9 - 3 = 6 (left: 6 24)\n6 * 24 = 144 (left: 144)\nAnswer: (3 * 8) * (9 - 3) = 24",
                "1 + 4 = 5 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 + 4) * (4 * 11 - 5) = 24\nInput: 3 4 5 6\nSteps:\n3 * 5 = 15 (left: 4 6 15)\n15 - 6 = 9 (left: 4 9)\n4 * 9 = 36 (left: 36)\nAnswer: (3 * 5 - 4) * (6 - 9) = 24",
                "1 + 4 = 5 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 + 4) * (4 * (11 - 5)) = 24",
                "1 + 4 = 5 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 + 4) * (4 * (11 - 5)) = 24\nInput: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6 24)\n6 - 3 = 3 (left: 3 24)\n3 * 24 = 72 (left: 72)\nAnswer: (3 * 8) * (6 - 3) = 24\nInput: 2 3 4 6\nSteps:\n2 * 6 = 12 (left: 3 4 12)\n4 - 3 = 1 (left: 1 12)\n1 * 12 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((2 * 6) * (4 - 3)) * 2 = 24"
            ],
            "values": [
                60.0,
                60.0,
                60.0,
                60.0,
                60.0
            ],
            "resampled": [
                "0 <- 9.3",
                "1 <- 7.2",
                "2 <- 8.1",
                "3 <- 8.2",
                "4 <- 9.0"
            ],
            "resampled_steps": [
                "1 + 4 = 5 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 + 4) * (4 * (11 - 5)) = 24",
                "1 + 4 = 5 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 + 4) * (4 * (11 - 5)) = 24",
                "1 + 4 = 5 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 + 4) * (4 * (11 - 5)) = 24\nInput: 3 3 7 8\nSteps:\n3 + 7 = 10 (left: 3 8 10)\n10 - 8 = 2 (left: 2 3)\n2 * 3 = 6 (left: 6)\n6 * 4 = 24 (left: 24)\nAnswer: ((3 + 7) - 8) * (3 * 8) = 24",
                "1 + 4 = 5 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 + 4) * (4 * 11 - 5) = 24",
                "1 + 4 = 5 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 + 4) * (4 * (11 - 5)) = 24\nInput: 3 3 7 8\nSteps:\n3 + 7 = 10 (left: 3 8 10)\n10 - 8 = 2 (left: 2 3)\n2 * 3 = 6 (left: 6)\n6 * 4 = 24 (left: 24)\nAnswer: ((3 + 7) - 8) * (3 * 8) = 24\nInput: 2 3 5 9\nSteps:\n2 * 5 = 10 (left: 3 9 10)\n10 - 9 = 1 (left: 1 3)\n1 * 3 = 3 (left: 3)\n3 * 8 = 24 (left: 24)\nAnswer: ((2 * 5) - 9) * (3 * 8) = 24"
            ]
        },
        "step_10": {
            "steps": [
                "1 + 4 = 5 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 + 4) * (4 * (11 - 5)) = 24\nInput: 2 3 4 6\nSteps:\n3 + 6 = 9 (left: 2 4 9)\n2 * 4 = 8 (left: 8 9)\n8 * 9 = 72 (left: 72)\nAnswer: (2 * 4) * (3 + 6) = 72",
                "1 + 4 = 5 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 + 4) * (4 * (11 - 5)) = 24\nInput: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6 24)\n6 - 3 = 3 (left: 3 24)\n3 * 24 = 72 (left: 72)\nAnswer: (3 * 8) * (6 - 3) = 24",
                "1 + 4 = 5 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 + 4) * (4 * (11 - 5)) = 24\nInput: 3 3 7 8\nSteps:\n3 + 7 = 10 (left: 3 8 10)\n10 - 8 = 2 (left: 2 3)\n2 * 3 = 6 (left: 6)\n6 * 4 = 24 (left: 24)\nAnswer: ((3 + 7) - 8) * (3 * 8) = 24\nInput: 2 3 5 7\nSteps:\n2 + 5 = 7 (left: 3 7 7)\n7 - 3 = 4 (left: 4 7)\n4 * 7 = 28 (left: 28)\n28 - 7 = 21 (left: 21)\n21 + 3 = 24 (left: 24)\nAnswer: ((2 + 5) - 3) * ((4 * 7) - 7) = 24",
                "1 + 4 = 5 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 + 4) * (4 * 11 - 5) = 24\nInput: 3 3 7 8\nSteps:\n3 * 8 = 24 (left: 3 7 24)\n7 - 3 = 4 (left: 4 24)\n4 * 24 = 24 (left: 24)\nAnswer: (3 * 8) * (7 - 3) = 24",
                "1 + 4 = 5 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 + 4) * (4 * (11 - 5)) = 24\nInput: 3 3 7 8\nSteps:\n3 + 7 = 10 (left: 3 8 10)\n10 - 8 = 2 (left: 2 3)\n2 * 3 = 6 (left: 6)\n6 * 4 = 24 (left: 24)\nAnswer: ((3 + 7) - 8) * (3 * 8) = 24\nInput: 2 3 5 9\nSteps:\n2 * 5 = 10 (left: 3 9 10)\n10 - 9 = 1 (left: 1 3)\n1 * 3 = 3 (left: 3)\n3 * 8 = 24 (left: 24)\nAnswer: ((2 * 5) - 9) * (3 * 8) = 24\nInput: 6 6 7 9\nSteps:\n6 * 7 = 42 (left: 6 9 42)\n9 - 6 = 3 (left: 3 42)\n3 * 14 = 42 (left: 42)\nAnswer: (6 * 7) - (9 - 6) = 24"
            ],
            "values": [
                20.0,
                40.0,
                40.0,
                40.0,
                60.0
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 1.3345065000000003
    },
    "947": {
        "input": "2 3 9 10",
        "step_1": {
            "steps": [
                "9 + 2 = 11 (left: 3 11 10)",
                "10 - 2 = 8 (left: 3 9 8)",
                "9 - 3 = 6 (left: 2 6 10)",
                "10 - 5 = 5 (left: 4 8 5)",
                "3 * 9 = 27 (left: 2 27 10)"
            ],
            "values": [
                2.001,
                3.0,
                1.002,
                3.0,
                1.002
            ],
            "resampled": [
                "0 <- 1.3",
                "1 <- 1.1",
                "2 <- 1.3",
                "3 <- 1.3",
                "4 <- INIT"
            ],
            "resampled_steps": [
                "10 - 5 = 5 (left: 4 8 5)",
                "10 - 2 = 8 (left: 3 9 8)",
                "10 - 5 = 5 (left: 4 8 5)",
                "10 - 5 = 5 (left: 4 8 5)",
                ""
            ]
        },
        "step_2": {
            "steps": [
                "10 - 5 = 5 (left: 4 8 5)\n4 * 8 = 32 (left: 5 32)",
                "10 - 2 = 8 (left: 3 9 8)\n9 / 3 = 3 (left: 3 8)",
                "10 - 5 = 5 (left: 4 8 5)\n9 + 3 = 12 (left: 6 12)",
                "10 - 5 = 5 (left: 4 8 5)\n3 + 7 = 10 (left: 9 10 2)",
                "9 - 2 = 7 (left: 2 7 10)"
            ],
            "values": [
                1.001,
                60.0,
                0.003,
                2.001,
                41.0
            ],
            "resampled": [
                "0 <- 2.4",
                "1 <- 2.1",
                "2 <- 2.1",
                "3 <- 2.4",
                "4 <- INIT"
            ],
            "resampled_steps": [
                "9 - 2 = 7 (left: 2 7 10)",
                "10 - 2 = 8 (left: 3 9 8)\n9 / 3 = 3 (left: 3 8)",
                "10 - 2 = 8 (left: 3 9 8)\n9 / 3 = 3 (left: 3 8)",
                "9 - 2 = 7 (left: 2 7 10)",
                ""
            ]
        },
        "step_3": {
            "steps": [
                "9 - 2 = 7 (left: 2 7 10)\n5 + 10 = 15 (left: 15 5)",
                "10 - 2 = 8 (left: 3 9 8)\n9 / 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)",
                "10 - 2 = 8 (left: 3 9 8)\n9 / 3 = 3 (left: 3 8)\n8 / 3 = 2.67 (left: 2.67)",
                "9 - 2 = 7 (left: 2 7 10)\n7 - 2 = 5 (left: 5 10)",
                "9 + 10 = 19 (left: 2 3 19)"
            ],
            "values": [
                0.002,
                60.0,
                0.001,
                0.001,
                0.003
            ],
            "resampled": [
                "0 <- 2.4",
                "1 <- 3.1",
                "2 <- 3.1",
                "3 <- 2.1",
                "4 <- 3.1"
            ],
            "resampled_steps": [
                "9 - 2 = 7 (left: 2 7 10)",
                "10 - 2 = 8 (left: 3 9 8)\n9 / 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)",
                "10 - 2 = 8 (left: 3 9 8)\n9 / 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)",
                "10 - 2 = 8 (left: 3 9 8)\n9 / 3 = 3 (left: 3 8)",
                "10 - 2 = 8 (left: 3 9 8)\n9 / 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)"
            ]
        },
        "step_4": {
            "steps": [
                "9 - 2 = 7 (left: 2 7 10)\nInput: 5 5",
                "10 - 2 = 8 (left: 3 9 8)\n9 / 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (10 - 2) * (9 / 3) = 24",
                "10 - 2 = 8 (left: 3 9 8)\n9 / 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (10 - 2) * (9 / 3) = 24",
                "10 - 2 = 8 (left: 3 9 8)\n9 / 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 8 24)",
                "10 - 2 = 8 (left: 3 9 8)\n9 / 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (10 - 2) * (9 / 3) = 24"
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 1
            }
        ],
        "cost": 1.3467105
    },
    "948": {
        "input": "1 2 3 13",
        "step_1": {
            "steps": [
                "2 + 3 = 5 (left: 1 5 13)",
                "2 + 3 = 5 (left: 1 5 13)",
                "3 * 2 = 6 (left: 1 6 13)",
                "13 - 1 = 12 (left: 2 3 12)",
                "13 - 1 = 12 (left: 2 3 12)"
            ],
            "values": [
                2.001,
                1.002,
                1.002,
                2.001,
                1.001
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- 1.4",
                "2 <- 1.1",
                "3 <- 1.1",
                "4 <- INIT"
            ],
            "resampled_steps": [
                "",
                "13 - 1 = 12 (left: 2 3 12)",
                "2 + 3 = 5 (left: 1 5 13)",
                "2 + 3 = 5 (left: 1 5 13)",
                ""
            ]
        },
        "step_2": {
            "steps": [
                "2 * 3 = 6 (left: 1 6 13)",
                "13 - 1 = 12 (left: 2 3 12)\n2 + 3 = 5 (left: 5 12)",
                "2 + 3 = 5 (left: 1 5 13)\n1 + 5 = 6 (left: 6 13)",
                "2 + 3 = 5 (left: 1 5 13)\n3 + 9 = 12 (left: 12 27)",
                "1 + 2 = 3 (left: 3 3 13)"
            ],
            "values": [
                1.002,
                1.002,
                0.002,
                0.003,
                2.001
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- 1.4",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- INIT"
            ],
            "resampled_steps": [
                "",
                "13 - 1 = 12 (left: 2 3 12)",
                "",
                "",
                ""
            ]
        },
        "step_3": {
            "steps": [
                "20 - 4 = 16 (left: 5 6 16)",
                "13 - 1 = 12 (left: 2 3 12)\n3 + 2 = 5 (left: 5 12)",
                "3 + 2 = 5 (left: 1 5 13)",
                "3 * 13 = 39 (left: 1 2 39)",
                "13 - 1 = 12 (left: 2 3 12)"
            ],
            "values": [
                2.001,
                1.002,
                1.002,
                0.003,
                1.002
            ],
            "resampled": [
                "0 <- 3.1",
                "1 <- INIT",
                "2 <- 2.4",
                "3 <- 3.0",
                "4 <- 2.1"
            ],
            "resampled_steps": [
                "13 - 1 = 12 (left: 2 3 12)\n3 + 2 = 5 (left: 5 12)",
                "",
                "1 + 2 = 3 (left: 3 3 13)",
                "20 - 4 = 16 (left: 5 6 16)",
                "13 - 1 = 12 (left: 2 3 12)\n2 + 3 = 5 (left: 5 12)"
            ]
        },
        "step_4": {
            "steps": [
                "13 - 1 = 12 (left: 2 3 12)\n3 + 2 = 5 (left: 5 12)\n5 + 12 = 17 (left: 17)",
                "13 - 3 = 10 (left: 1 2 10)",
                "1 + 2 = 3 (left: 3 3 13)\n7 / 7 = 1 (left: 1 14)",
                "20 - 4 = 16 (left: 5 6 16)\n3 * 7 = 21 (left: 21 9)",
                "13 - 1 = 12 (left: 2 3 12)\n2 + 3 = 5 (left: 5 12)\n12 - 5 = 7 (left: 7)"
            ],
            "values": [
                0.002,
                3.0,
                0.002,
                1.002,
                0.002
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- 1.3",
                "3 <- INIT",
                "4 <- 1.0"
            ],
            "resampled_steps": [
                "",
                "",
                "13 - 1 = 12 (left: 2 3 12)",
                "",
                "2 + 3 = 5 (left: 1 5 13)"
            ]
        },
        "step_5": {
            "steps": [
                "13 - 2 = 11 (left: 1 3 11)",
                "7 - 5 = 2 (left: 2 4 6)",
                "13 - 1 = 12 (left: 2 3 12)\n2 + 3 = 5 (left: 5 12)",
                "13 - 3 = 10 (left: 1 2 10)",
                "2 + 3 = 5 (left: 1 5 13)\n15 / 3 = 5 (left: 5 9)"
            ],
            "values": [
                0.003,
                0.003,
                0.001,
                3.0,
                0.002
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- 2.1",
                "2 <- 5.3",
                "3 <- 2.4",
                "4 <- INIT"
            ],
            "resampled_steps": [
                "",
                "13 - 1 = 12 (left: 2 3 12)\n2 + 3 = 5 (left: 5 12)",
                "13 - 3 = 10 (left: 1 2 10)",
                "1 + 2 = 3 (left: 3 3 13)",
                ""
            ]
        },
        "step_6": {
            "steps": [
                "1 + 2 = 3 (left: 3 3 13)",
                "13 - 1 = 12 (left: 2 3 12)\n2 + 3 = 5 (left: 5 12)\n5 - 12 = -7 (left: -7)",
                "13 - 3 = 10 (left: 1 2 10)\n1 * 10 = 10 (left: 2 10)",
                "1 + 2 = 3 (left: 3 3 13)\n5 * 5 = 25 (left: 25)",
                "1 + 2 = 3 (left: 3 3 13)"
            ],
            "values": [
                2.001,
                0.001,
                0.0,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 6.0",
                "1 <- 1.3",
                "2 <- 5.3",
                "3 <- 5.3",
                "4 <- INIT"
            ],
            "resampled_steps": [
                "1 + 2 = 3 (left: 3 3 13)",
                "13 - 1 = 12 (left: 2 3 12)",
                "13 - 3 = 10 (left: 1 2 10)",
                "13 - 3 = 10 (left: 1 2 10)",
                ""
            ]
        },
        "step_7": {
            "steps": [
                "1 + 2 = 3 (left: 3 3 13)\n3 * 3 = 9 (left: 9 13)",
                "13 - 1 = 12 (left: 2 3 12)\n2 * 12 = 24 (left: 24)",
                "13 - 3 = 10 (left: 1 2 10)\n2 + 10 = 12 (left: 1 12)",
                "13 - 3 = 10 (left: 1 2 10)\n1 * 2 = 2 (left: 2 10)",
                "2 * 3 = 6 (left: 1 6 13)"
            ],
            "values": [
                0.002,
                40.0,
                0.003,
                41.0,
                1.002
            ],
            "resampled": [
                "0 <- 7.1",
                "1 <- 7.1",
                "2 <- 7.3",
                "3 <- 7.1",
                "4 <- 7.3"
            ],
            "resampled_steps": [
                "13 - 1 = 12 (left: 2 3 12)\n2 * 12 = 24 (left: 24)",
                "13 - 1 = 12 (left: 2 3 12)\n2 * 12 = 24 (left: 24)",
                "13 - 3 = 10 (left: 1 2 10)\n1 * 2 = 2 (left: 2 10)",
                "13 - 1 = 12 (left: 2 3 12)\n2 * 12 = 24 (left: 24)",
                "13 - 3 = 10 (left: 1 2 10)\n1 * 2 = 2 (left: 2 10)"
            ]
        },
        "step_8": {
            "steps": [
                "13 - 1 = 12 (left: 2 3 12)\n2 * 12 = 24 (left: 24)\nAnswer: (13 - 1) * 2 = 24",
                "13 - 1 = 12 (left: 2 3 12)\n2 * 12 = 24 (left: 24)\nAnswer: 2 * (13 - 1) * 3 = 24",
                "13 - 3 = 10 (left: 1 2 10)\n1 * 2 = 2 (left: 2 10)\n10 / 2 = 5 (left: 5)",
                "13 - 1 = 12 (left: 2 3 12)\n2 * 12 = 24 (left: 24)\nAnswer: 2 * (13 - 1) = 24",
                "13 - 3 = 10 (left: 1 2 10)\n1 * 2 = 2 (left: 2 10)\n10 - 2 = 8 (left: 8)"
            ],
            "values": [
                60.0,
                60.0,
                0.003,
                60.0,
                0.001
            ],
            "resampled": [
                "0 <- 8.1",
                "1 <- 7.3",
                "2 <- 7.3",
                "3 <- 7.3",
                "4 <- 8.3"
            ],
            "resampled_steps": [
                "13 - 1 = 12 (left: 2 3 12)\n2 * 12 = 24 (left: 24)\nAnswer: 2 * (13 - 1) * 3 = 24",
                "13 - 3 = 10 (left: 1 2 10)\n1 * 2 = 2 (left: 2 10)",
                "13 - 3 = 10 (left: 1 2 10)\n1 * 2 = 2 (left: 2 10)",
                "13 - 3 = 10 (left: 1 2 10)\n1 * 2 = 2 (left: 2 10)",
                "13 - 1 = 12 (left: 2 3 12)\n2 * 12 = 24 (left: 24)\nAnswer: 2 * (13 - 1) = 24"
            ]
        },
        "step_9": {
            "steps": [
                "13 - 1 = 12 (left: 2 3 12)\n2 * 12 = 24 (left: 24)\nAnswer: 2 * (13 - 1) * 3 = 24\nInput: 3 3 7 8\nSteps:\n3 * 3 = 9 (left: 7 8 9)\n9 - 7 = 2 (left: 2 8)\n2 * 8 = 16 (left: 16)\n16 + 8 = 24 (left: 24)\nAnswer: ((3 * 3) - 7) * 8 + 8 = 24",
                "13 - 3 = 10 (left: 1 2 10)\n1 * 2 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)",
                "13 - 3 = 10 (left: 1 2 10)\n1 * 2 = 2 (left: 2 10)\n10 - 2 = 8 (left: 8) ",
                "13 - 3 = 10 (left: 1 2 10)\n1 * 2 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)",
                "13 - 1 = 12 (left: 2 3 12)\n2 * 12 = 24 (left: 24)\nAnswer: 2 * (13 - 1) = 24\nInput: 3 6 7 8\nSteps:\n6 + 7 = 13 (left: 3 8 13)\n13 - 3 = 10 (left: 8 10)\n8 * 10 = 80 (left: 80)\nAnswer: (6 + 7) * (13 - 3) = 80"
            ],
            "values": [
                60.0,
                0.002,
                0.002,
                0.001,
                40.0
            ],
            "resampled": [
                "0 <- 9.0",
                "1 <- 7.3",
                "2 <- 9.0",
                "3 <- 8.3",
                "4 <- 9.4"
            ],
            "resampled_steps": [
                "13 - 1 = 12 (left: 2 3 12)\n2 * 12 = 24 (left: 24)\nAnswer: 2 * (13 - 1) * 3 = 24\nInput: 3 3 7 8\nSteps:\n3 * 3 = 9 (left: 7 8 9)\n9 - 7 = 2 (left: 2 8)\n2 * 8 = 16 (left: 16)\n16 + 8 = 24 (left: 24)\nAnswer: ((3 * 3) - 7) * 8 + 8 = 24",
                "13 - 3 = 10 (left: 1 2 10)\n1 * 2 = 2 (left: 2 10)",
                "13 - 1 = 12 (left: 2 3 12)\n2 * 12 = 24 (left: 24)\nAnswer: 2 * (13 - 1) * 3 = 24\nInput: 3 3 7 8\nSteps:\n3 * 3 = 9 (left: 7 8 9)\n9 - 7 = 2 (left: 2 8)\n2 * 8 = 16 (left: 16)\n16 + 8 = 24 (left: 24)\nAnswer: ((3 * 3) - 7) * 8 + 8 = 24",
                "13 - 1 = 12 (left: 2 3 12)\n2 * 12 = 24 (left: 24)\nAnswer: 2 * (13 - 1) = 24",
                "13 - 1 = 12 (left: 2 3 12)\n2 * 12 = 24 (left: 24)\nAnswer: 2 * (13 - 1) = 24\nInput: 3 6 7 8\nSteps:\n6 + 7 = 13 (left: 3 8 13)\n13 - 3 = 10 (left: 8 10)\n8 * 10 = 80 (left: 80)\nAnswer: (6 + 7) * (13 - 3) = 80"
            ]
        },
        "step_10": {
            "steps": [
                "13 - 1 = 12 (left: 2 3 12)\n2 * 12 = 24 (left: 24)\nAnswer: 2 * (13 - 1) * 3 = 24\nInput: 3 3 7 8\nSteps:\n3 * 3 = 9 (left: 7 8 9)\n9 - 7 = 2 (left: 2 8)\n2 * 8 = 16 (left: 16)\n16 + 8 = 24 (left: 24)\nAnswer: ((3 * 3) - 7) * 8 + 8 = 24\nInput: 6 6 7 8\nSteps:\n6 + 6 = 12 (left: 7 8 12)\n7 + 8 = 15 (left: 15 12)\n15 - 12 = 3 (left: 3)\n3 * 8 = 24 (left: 24)\nAnswer: ((6 + 6) + (7 + 8)) - 12 * 8 = 24",
                "13 - 3 = 10 (left: 1 2 10)\n1 * 2 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)",
                "13 - 1 = 12 (left: 2 3 12)\n2 * 12 = 24 (left: 24)\nAnswer: 2 * (13 - 1) * 3 = 24\nInput: 3 3 7 8\nSteps:\n3 * 3 = 9 (left: 7 8 9)\n9 - 7 = 2 (left: 2 8)\n2 * 8 = 16 (left: 16)\n16 + 8 = 24 (left: 24)\nAnswer: ((3 * 3) - 7) * 8 + 8 = 24\nInput: 2 3 5 6\nSteps:\n2 * 3 = 6 (left: 5 6 6)\n5 + 6 = 11 (left: 11 6)\n11 - 6 = 5 (left: 5)\n5 * 5 = 25 (left: 25)\n25 - 1 = 24 (left: 24)\nAnswer: ((((2 * 3) + 5) - 6) * 5) - 1 = 24",
                "13 - 1 = 12 (left: 2 3 12)\n2 * 12 = 24 (left: 24)\nAnswer: 2 * (13 - 1) = 24\nInput: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n21 - 5 = 16 (left: 3 16)\n16 - 3 = 13 (left: 13)\n13 + 13 = 26 (left: 26)\n26 - 2 = 24 (left: 24)\nAnswer: (((3 * 7) - 5) - 3) + 13 = 24",
                "13 - 1 = 12 (left: 2 3 12)\n2 * 12 = 24 (left: 24)\nAnswer: 2 * (13 - 1) = 24\nInput: 3 6 7 8\nSteps:\n6 + 7 = 13 (left: 3 8 13)\n13 - 3 = 10 (left: 8 10)\n8 * 10 = 80 (left: 80)\nAnswer: (6 + 7) * (13 - 3) = 80\nThere is no way to get 24 using the numbers 3, 6, 7, and 8."
            ],
            "values": [
                60.0,
                0.002,
                60.0,
                60.0,
                0.003
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 1.3755985
    },
    "949": {
        "input": "1 6 6 6",
        "step_1": {
            "steps": [
                "6 / 1 = 6 (left: 6 6 6)",
                "6 / 1 = 6 (left: 6 6 6)",
                "6 - 1 = 5 (left: 1 5 6)",
                "6 / 1 = 6 (left: 6 6 6)",
                "6 - 1 = 5 (left: 5 6 6)"
            ],
            "values": [
                3.0,
                2.0,
                41.0,
                2.001,
                3.0
            ],
            "resampled": [
                "0 <- 1.2",
                "1 <- 1.2",
                "2 <- 1.2",
                "3 <- 1.2",
                "4 <- INIT"
            ],
            "resampled_steps": [
                "6 - 1 = 5 (left: 1 5 6)",
                "6 - 1 = 5 (left: 1 5 6)",
                "6 - 1 = 5 (left: 1 5 6)",
                "6 - 1 = 5 (left: 1 5 6)",
                ""
            ]
        },
        "step_2": {
            "steps": [
                "6 - 1 = 5 (left: 1 5 6)\n40 - 4 = 36 (left: 10 36)",
                "6 - 1 = 5 (left: 1 5 6)\n6 / 1 = 6 (left: 6 6)",
                "6 - 1 = 5 (left: 1 5 6)\n5 + 1 = 6 (left: 6)",
                "6 - 1 = 5 (left: 1 5 6)\n6 / 1 = 6 (left: 6 6)",
                "6 - 1 = 5 (left: 1 5 6)"
            ],
            "values": [
                0.003,
                0.003,
                0.003,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- 1.2",
                "3 <- 1.2",
                "4 <- 1.2"
            ],
            "resampled_steps": [
                "",
                "",
                "6 - 1 = 5 (left: 1 5 6)",
                "6 - 1 = 5 (left: 1 5 6)",
                "6 - 1 = 5 (left: 1 5 6)"
            ]
        },
        "step_3": {
            "steps": [
                "1 * 6 = 6 (left: 6 6 6)",
                "6 - 1 = 5 (left: 5 6 6)",
                "6 - 1 = 5 (left: 1 5 6)\n1 + 5 = 6 (left: 6 6)",
                "6 - 1 = 5 (left: 1 5 6)\n9 + 3 = 12 (left: 12 27)",
                "6 - 1 = 5 (left: 1 5 6)\n5 * 1 = 5 (left: 5 6)"
            ],
            "values": [
                3.0,
                3.0,
                20.002,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 3.2",
                "1 <- INIT",
                "2 <- 1.2",
                "3 <- INIT",
                "4 <- 3.2"
            ],
            "resampled_steps": [
                "6 - 1 = 5 (left: 1 5 6)\n1 + 5 = 6 (left: 6 6)",
                "",
                "6 - 1 = 5 (left: 1 5 6)",
                "",
                "6 - 1 = 5 (left: 1 5 6)\n1 + 5 = 6 (left: 6 6)"
            ]
        },
        "step_4": {
            "steps": [
                "6 - 1 = 5 (left: 1 5 6)\n1 + 5 = 6 (left: 6 6)\n6 + 6 = 12 (left: 12)",
                "1 + 6 = 7 (left: 6 6 7)",
                "6 - 1 = 5 (left: 1 5 6)\n9 - 3 = 6 (left: 6 27)",
                "6 - 1 = 5 (left: 5 6 6)",
                "6 - 1 = 5 (left: 1 5 6)\n1 + 5 = 6 (left: 6 6)\n6 + 6 = 12"
            ],
            "values": [
                0.003,
                2.001,
                0.003,
                3.0,
                0.003
            ],
            "resampled": [
                "0 <- 1.2",
                "1 <- 3.0",
                "2 <- 1.3",
                "3 <- 1.1",
                "4 <- 3.1"
            ],
            "resampled_steps": [
                "6 - 1 = 5 (left: 1 5 6)",
                "1 * 6 = 6 (left: 6 6 6)",
                "6 / 1 = 6 (left: 6 6 6)",
                "6 / 1 = 6 (left: 6 6 6)",
                "6 - 1 = 5 (left: 5 6 6)"
            ]
        },
        "step_5": {
            "steps": [
                "6 - 1 = 5 (left: 1 5 6)\n3 / 9 = 0.3333 (left: 0.3333 27)",
                "1 * 6 = 6 (left: 6 6 6)\n6 / 6 = 1 (left: 1)",
                "6 / 1 = 6 (left: 6 6 6)\n6 * 6 = 36 (left: 6 36)",
                "6 / 1 = 6 (left: 6 6 6)\n6 + 6 = 12 (left: 6 12)",
                "6 - 1 = 5 (left: 5 6 6)\n5 * 6 = 30 (left: 30)"
            ],
            "values": [
                0.002,
                0.002,
                0.003,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 3.2",
                "1 <- 3.2",
                "2 <- 1.2",
                "3 <- 3.2",
                "4 <- 3.2"
            ],
            "resampled_steps": [
                "6 - 1 = 5 (left: 1 5 6)\n1 + 5 = 6 (left: 6 6)",
                "6 - 1 = 5 (left: 1 5 6)\n1 + 5 = 6 (left: 6 6)",
                "6 - 1 = 5 (left: 1 5 6)",
                "6 - 1 = 5 (left: 1 5 6)\n1 + 5 = 6 (left: 6 6)",
                "6 - 1 = 5 (left: 1 5 6)\n1 + 5 = 6 (left: 6 6)"
            ]
        },
        "step_6": {
            "steps": [
                "6 - 1 = 5 (left: 1 5 6)\n1 + 5 = 6 (left: 6 6)\n6 / 6 = 1 (left: 1)",
                "6 - 1 = 5 (left: 1 5 6)\n1 + 5 = 6 (left: 6 6)\n6 / 6 = 1 (left: 1)",
                "6 - 1 = 5 (left: 1 5 6)\n27 - 3 = 24 (left: 3 24)",
                "6 - 1 = 5 (left: 1 5 6)\n1 + 5 = 6 (left: 6 6)\n6 + 6 = 12 (left: 12)",
                "6 - 1 = 5 (left: 1 5 6)\n1 + 5 = 6 (left: 6 6)\n6 / 6 = 1 (left: 1)"
            ],
            "values": [
                0.003,
                0.001,
                40.001,
                0.002,
                0.0
            ],
            "resampled": [
                "0 <- 3.2",
                "1 <- 3.2",
                "2 <- 6.2",
                "3 <- 1.2",
                "4 <- 1.2"
            ],
            "resampled_steps": [
                "6 - 1 = 5 (left: 1 5 6)\n1 + 5 = 6 (left: 6 6)",
                "6 - 1 = 5 (left: 1 5 6)\n1 + 5 = 6 (left: 6 6)",
                "6 - 1 = 5 (left: 1 5 6)\n27 - 3 = 24 (left: 3 24)",
                "6 - 1 = 5 (left: 1 5 6)",
                "6 - 1 = 5 (left: 1 5 6)"
            ]
        },
        "step_7": {
            "steps": [
                "6 - 1 = 5 (left: 1 5 6)\n1 + 5 = 6 (left: 6 6)\n6 - 6 = 0 (left: 0)",
                "6 - 1 = 5 (left: 1 5 6)\n1 + 5 = 6 (left: 6 6)\n6 + 6 = 12",
                "6 - 1 = 5 (left: 1 5 6)\n27 - 3 = 24 (left: 3 24)\n3 + 24 = 27 (left: 27)",
                "6 - 1 = 5 (left: 1 5 6)\n9 - 3 = 6 (left: 3 6)",
                "6 - 1 = 5 (left: 1 5 6)\n1 - 5 = -4 (left: -4 6)"
            ],
            "values": [
                0.003,
                0.003,
                0.002,
                1.001,
                20.0
            ],
            "resampled": [
                "0 <- 3.2",
                "1 <- 6.2",
                "2 <- INIT",
                "3 <- 6.2",
                "4 <- 4.3"
            ],
            "resampled_steps": [
                "6 - 1 = 5 (left: 1 5 6)\n1 + 5 = 6 (left: 6 6)",
                "6 - 1 = 5 (left: 1 5 6)\n27 - 3 = 24 (left: 3 24)",
                "",
                "6 - 1 = 5 (left: 1 5 6)\n27 - 3 = 24 (left: 3 24)",
                "6 - 1 = 5 (left: 5 6 6)"
            ]
        },
        "step_8": {
            "steps": [
                "6 - 1 = 5 (left: 1 5 6)\n1 + 5 = 6 (left: 6 6)\n6 - 6 = 0 (left: 0)",
                "6 - 1 = 5 (left: 1 5 6)\n27 - 3 = 24 (left: 3 24)\n25 + 5 = 30 (left: 10 30)",
                "6 / 1 = 6 (left: 6 6 6)",
                "6 - 1 = 5 (left: 1 5 6)\n27 - 3 = 24 (left: 3 24)\n24 - 3 = 21 (left: 21)",
                "6 - 1 = 5 (left: 5 6 6)\n6 - 6 = 0 (left: 5 0 6)"
            ],
            "values": [
                0.002,
                0.001,
                3.0,
                0.001,
                3.0
            ],
            "resampled": [
                "0 <- 7.4",
                "1 <- 7.3",
                "2 <- 1.2",
                "3 <- 7.4",
                "4 <- 1.2"
            ],
            "resampled_steps": [
                "6 - 1 = 5 (left: 1 5 6)\n1 - 5 = -4 (left: -4 6)",
                "6 - 1 = 5 (left: 1 5 6)\n9 - 3 = 6 (left: 3 6)",
                "6 - 1 = 5 (left: 1 5 6)",
                "6 - 1 = 5 (left: 1 5 6)\n1 - 5 = -4 (left: -4 6)",
                "6 - 1 = 5 (left: 1 5 6)"
            ]
        },
        "step_9": {
            "steps": [
                "6 - 1 = 5 (left: 1 5 6)\n1 - 5 = -4 (left: -4 6)\n-4 * 6 = -24 (left: -24)",
                "6 - 1 = 5 (left: 1 5 6)\n9 - 3 = 6 (left: 3 6)\n3 * 6 = 18 (left: 18)",
                "6 - 1 = 5 (left: 1 5 6)\n5 / 1 = 5 (left: 5 6)",
                "6 - 1 = 5 (left: 1 5 6)\n1 - 5 = -4 (left: -4 6)\n-4 + 6 = 2 (left: 2)",
                "6 - 1 = 5 (left: 1 5 6)\n12 / 3 = 4 (left: 4 12)"
            ],
            "values": [
                0.001,
                60.0,
                1.002,
                0.0,
                0.002
            ],
            "resampled": [
                "0 <- 9.1",
                "1 <- 9.1",
                "2 <- 1.2",
                "3 <- 9.1",
                "4 <- INIT"
            ],
            "resampled_steps": [
                "6 - 1 = 5 (left: 1 5 6)\n9 - 3 = 6 (left: 3 6)\n3 * 6 = 18 (left: 18)",
                "6 - 1 = 5 (left: 1 5 6)\n9 - 3 = 6 (left: 3 6)\n3 * 6 = 18 (left: 18)",
                "6 - 1 = 5 (left: 1 5 6)",
                "6 - 1 = 5 (left: 1 5 6)\n9 - 3 = 6 (left: 3 6)\n3 * 6 = 18 (left: 18)",
                ""
            ]
        },
        "step_10": {
            "steps": [
                "6 - 1 = 5 (left: 1 5 6)\n9 - 3 = 6 (left: 3 6)\n3 * 6 = 18 (left: 18)\n2 * 8 + 2 = 18 (left: 18)",
                "6 - 1 = 5 (left: 1 5 6)\n9 - 3 = 6 (left: 3 6)\n3 * 6 = 18 (left: 18)\nNo possible next steps with the input 18.",
                "6 - 1 = 5 (left: 1 5 6)\nInput: 2 3 5",
                "6 - 1 = 5 (left: 1 5 6)\n9 - 3 = 6 (left: 3 6)\n3 * 6 = 18 (left: 18)\n2 * 18 = 36 (left: 36)",
                "1 + 6 = 7 (left: 6 6 6)"
            ],
            "values": [
                60.0,
                0.003,
                0.003,
                40.0,
                3.0
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 1.4022385000000002
    }
}