{
    "0": {
        "input": "1 1 4 6",
        "step_1": {
            "steps": [
                "1 * 4 = 4 (left: 1 4 6)",
                "4 * 1 = 4 (left: 4 4 6)",
                "6 - 1 = 5 (left: 1 4 5)",
                "4 / 1 = 4 (left: 4 4 6)",
                "4 * 1 = 4 (left: 4 4 6)",
                "6 - 4 = 2 (left: 1 2 6)",
                "6 - 1 = 5 (left: 1 4 5)",
                "6 / 2 = 3 (left: 1 3 6)",
                "4 + 2 = 6 (left: 1 4 6)",
                "6 - 1 = 5 (left: 1 4 5)"
            ],
            "values": [
                60.0,
                2.001,
                3.0,
                3.0,
                3.0,
                1.002,
                22.0,
                2.0,
                60.0,
                2.001
            ],
            "resampled": [
                "0 <- 1.8",
                "1 <- 1.8",
                "2 <- 1.2",
                "3 <- INIT",
                "4 <- 1.8",
                "5 <- 1.8",
                "6 <- INIT",
                "7 <- 1.6",
                "8 <- 1.6",
                "9 <- INIT"
            ],
            "resampled_steps": [
                "4 + 2 = 6 (left: 1 4 6)",
                "4 + 2 = 6 (left: 1 4 6)",
                "6 - 1 = 5 (left: 1 4 5)",
                "",
                "4 + 2 = 6 (left: 1 4 6)",
                "4 + 2 = 6 (left: 1 4 6)",
                "",
                "6 - 1 = 5 (left: 1 4 5)",
                "6 - 1 = 5 (left: 1 4 5)",
                ""
            ]
        },
        "step_2": {
            "steps": [
                "4 + 2 = 6 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)",
                "4 + 2 = 6 (left: 1 4 6)\n1 * 4 = 4 (left: 4 6)",
                "6 - 1 = 5 (left: 1 4 5)\n4 + 1 = 5 (left: 5 5)",
                "6 - 1 = 5 (left: 1 4 5)",
                "4 + 2 = 6 (left: 1 4 6)\n4 - 1 = 3 (left: 3 6)",
                "4 + 2 = 6 (left: 1 4 6)\nPossible next steps:",
                "6 - 4 = 2 (left: 1 2 6)",
                "6 - 1 = 5 (left: 1 4 5)\n4 + 1 = 5 (left: 5 5)",
                "6 - 1 = 5 (left: 1 4 5)\n5 * 1 = 5 (left: 4 5)",
                "4 + 2 = 6 (left: 4 6 6)"
            ],
            "values": [
                60.0,
                60.0,
                1.002,
                3.0,
                1.0,
                0.002,
                1.002,
                0.003,
                3.0,
                22.0
            ],
            "resampled": [
                "0 <- 2.0",
                "1 <- 2.1",
                "2 <- INIT",
                "3 <- 2.0",
                "4 <- 2.0",
                "5 <- 1.8",
                "6 <- 2.0",
                "7 <- 2.0",
                "8 <- 2.1",
                "9 <- 1.0"
            ],
            "resampled_steps": [
                "4 + 2 = 6 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)",
                "4 + 2 = 6 (left: 1 4 6)\n1 * 4 = 4 (left: 4 6)",
                "",
                "4 + 2 = 6 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)",
                "4 + 2 = 6 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)",
                "4 + 2 = 6 (left: 1 4 6)",
                "4 + 2 = 6 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)",
                "4 + 2 = 6 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)",
                "4 + 2 = 6 (left: 1 4 6)\n1 * 4 = 4 (left: 4 6)",
                "1 * 4 = 4 (left: 1 4 6)"
            ]
        },
        "step_3": {
            "steps": [
                "4 + 2 = 6 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n24 * 1 = 24 (left: 1 24)",
                "4 + 2 = 6 (left: 1 4 6)\n1 * 4 = 4 (left: 4 6)\n6 - 4 = 2 (left: 2)",
                "6 - 2 = 4 (left: 1 4 6)",
                "4 + 2 = 6 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n1 + 24 = 25 (left: 25)",
                "4 + 2 = 6 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n24 - 1 = 23 (left: 23)",
                "4 + 2 = 6 (left: 1 4 6)\n1 + 4 = 5 (left: 5 6)",
                "4 + 2 = 6 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n1 + 24 = 25 (left: 25)",
                "4 + 2 = 6 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n24 / 1 = 24 (left: 24)",
                "4 + 2 = 6 (left: 1 4 6)\n1 * 4 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "1 * 4 = 4 (left: 1 4 6)\n27 - 3 = 24 (left: 9 24)"
            ],
            "values": [
                60.0,
                0.003,
                60.0,
                0.003,
                0.003,
                1.002,
                0.003,
                20.0,
                20.0,
                0.003
            ],
            "resampled": [
                "0 <- 2.1",
                "1 <- 3.2",
                "2 <- 2.1",
                "3 <- 3.0",
                "4 <- 2.8",
                "5 <- 2.8",
                "6 <- 1.0",
                "7 <- 3.0",
                "8 <- 3.2",
                "9 <- 1.8"
            ],
            "resampled_steps": [
                "4 + 2 = 6 (left: 1 4 6)\n1 * 4 = 4 (left: 4 6)",
                "6 - 2 = 4 (left: 1 4 6)",
                "4 + 2 = 6 (left: 1 4 6)\n1 * 4 = 4 (left: 4 6)",
                "4 + 2 = 6 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n24 * 1 = 24 (left: 1 24)",
                "6 - 1 = 5 (left: 1 4 5)\n5 * 1 = 5 (left: 4 5)",
                "6 - 1 = 5 (left: 1 4 5)\n5 * 1 = 5 (left: 4 5)",
                "1 * 4 = 4 (left: 1 4 6)",
                "4 + 2 = 6 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n24 * 1 = 24 (left: 1 24)",
                "6 - 2 = 4 (left: 1 4 6)",
                "4 + 2 = 6 (left: 1 4 6)"
            ]
        },
        "step_4": {
            "steps": [
                "4 + 2 = 6 (left: 1 4 6)\n1 * 4 = 4 (left: 4 6)\n6 - 4 = 2 (left: 2)",
                "6 - 2 = 4 (left: 1 4 6)\n3 + 5 = 8 (left: 8 7)",
                "4 + 2 = 6 (left: 1 4 6)\n1 * 4 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "4 + 2 = 6 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n24 * 1 = 24 (left: 1 24)\n24 / 1 = 24 (left: 24)",
                "6 - 1 = 5 (left: 1 4 5)\n5 * 1 = 5 (left: 4 5)\n4 * 5 = 20 (left: 20 5)",
                "6 - 1 = 5 (left: 1 4 5)\n5 * 1 = 5 (left: 4 5)\n5 / 4 = 1.25 (left: 1.25)",
                "1 * 4 = 4 (left: 1 4 6)\n7 / 3 = 2.3333 (left: 2.3333 5)",
                "4 + 2 = 6 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n24 * 1 = 24 (left: 1 24)\n24 - 24 = 0 (left: 0)",
                "6 - 2 = 4 (left: 1 4 6)\n1 + 4 = 5 (left: 5 6)",
                "4 + 2 = 6 (left: 1 4 6)\n1 + 4 = 5 (left: 5 6)"
            ],
            "values": [
                0.002,
                0.002,
                40.0,
                40.0,
                0.003,
                0.002,
                2.001,
                20.0,
                0.002,
                0.002
            ],
            "resampled": [
                "0 <- 3.2",
                "1 <- 1.0",
                "2 <- 2.0",
                "3 <- 2.0",
                "4 <- 1.2",
                "5 <- 1.8",
                "6 <- 2.1",
                "7 <- 1.0",
                "8 <- 4.3",
                "9 <- 1.0"
            ],
            "resampled_steps": [
                "6 - 2 = 4 (left: 1 4 6)",
                "1 * 4 = 4 (left: 1 4 6)",
                "4 + 2 = 6 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)",
                "4 + 2 = 6 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)",
                "6 - 1 = 5 (left: 1 4 5)",
                "4 + 2 = 6 (left: 1 4 6)",
                "4 + 2 = 6 (left: 1 4 6)\n1 * 4 = 4 (left: 4 6)",
                "1 * 4 = 4 (left: 1 4 6)",
                "4 + 2 = 6 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n24 * 1 = 24 (left: 1 24)\n24 / 1 = 24 (left: 24)",
                "1 * 4 = 4 (left: 1 4 6)"
            ]
        },
        "step_5": {
            "steps": [
                "6 - 2 = 4 (left: 1 4 6)\n6 - 4 = 2 (left: 1 2)",
                "1 * 4 = 4 (left: 1 4 6)\n6 - 4 = 2 (left: 1 2)",
                "4 + 2 = 6 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n24 - 1 = 23 (left: 23)",
                "4 + 2 = 6 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)",
                "6 - 1 = 5 (left: 1 4 5)\n4 + 1 = 5 (left: 5 5)",
                "4 + 2 = 6 (left: 1 4 6)\n7 / 5 = 1.4 (left: 3 1.4)",
                "4 + 2 = 6 (left: 1 4 6)\n1 * 4 = 4 (left: 4 6)\n6 / 4 = 1.5 (left: 1.5)",
                "1 * 4 = 4 (left: 1 4 6)\n15 - 12 = 3 (left: 3 3 15)",
                "4 + 2 = 6 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n24 * 1 = 24 (left: 1 24)\n24 / 1 = 24 (left: 24)\nAnswer: (4 + 2) * 6 = 24, 6 * 4 = 24, 24 * 1 = 24, 24 / 1 = 24",
                "1 * 4 = 4 (left: 1 4 6)\n6 / 4 = 1.5 (left: 1 1.5)"
            ],
            "values": [
                0.002,
                0.002,
                20.001,
                20.0,
                0.001,
                3.0,
                0.001,
                21.001,
                40.0,
                2.001
            ],
            "resampled": [
                "0 <- 3.0",
                "1 <- 2.0",
                "2 <- 3.0",
                "3 <- 4.3",
                "4 <- 5.8",
                "5 <- 5.7",
                "6 <- 2.1",
                "7 <- 3.8",
                "8 <- 1.8",
                "9 <- 5.8"
            ],
            "resampled_steps": [
                "4 + 2 = 6 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n24 * 1 = 24 (left: 1 24)",
                "4 + 2 = 6 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)",
                "4 + 2 = 6 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n24 * 1 = 24 (left: 1 24)",
                "4 + 2 = 6 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n24 * 1 = 24 (left: 1 24)\n24 / 1 = 24 (left: 24)",
                "4 + 2 = 6 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n24 * 1 = 24 (left: 1 24)\n24 / 1 = 24 (left: 24)\nAnswer: (4 + 2) * 6 = 24, 6 * 4 = 24, 24 * 1 = 24, 24 / 1 = 24",
                "1 * 4 = 4 (left: 1 4 6)\n15 - 12 = 3 (left: 3 3 15)",
                "4 + 2 = 6 (left: 1 4 6)\n1 * 4 = 4 (left: 4 6)",
                "4 + 2 = 6 (left: 1 4 6)\n1 * 4 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "4 + 2 = 6 (left: 1 4 6)",
                "4 + 2 = 6 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n24 * 1 = 24 (left: 1 24)\n24 / 1 = 24 (left: 24)\nAnswer: (4 + 2) * 6 = 24, 6 * 4 = 24, 24 * 1 = 24, 24 / 1 = 24"
            ]
        },
        "step_6": {
            "steps": [
                "4 + 2 = 6 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n24 * 1 = 24 (left: 1 24)\n24 + 1 = 25 (left: 1 25)",
                "4 + 2 = 6 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n24 - 1 = 23 (left: 23)",
                "4 + 2 = 6 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n24 * 1 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24 24)",
                "4 + 2 = 6 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n24 * 1 = 24 (left: 1 24)\n24 / 1 = 24 (left: 24)\nAnswer: (1 * 4 + 6) * 6 = 24",
                "4 + 2 = 6 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n24 * 1 = 24 (left: 1 24)\n24 / 1 = 24 (left: 24)\nAnswer: (4 + 2) * 6 = 24, 6 * 4 = 24, 24 * 1 = 24, 24 / 1 = 24\nAnswer: (4 + 2) * 6 = 24, 6 * 4 = 24, 24 * 1 = 24, 24 / 1 = 24",
                "1 * 4 = 4 (left: 1 4 6)\n15 - 12 = 3 (left: 3 3 15)\n3 * 3 = 9 (left: 9 15)",
                "4 + 2 = 6 (left: 1 4 6)\n1 * 4 = 4 (left: 4 6)\n6 / 4 = 1.5 (left: 1.5)",
                "4 + 2 = 6 (left: 1 4 6)\n1 * 4 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 + 1) * (4 * 6) = 24",
                "4 + 2 = 6 (left: 1 4 6)\n1 * 4 = 4 (left: 4 6)",
                "4 + 2 = 6 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n24 * 1 = 24 (left: 1 24)\n24 / 1 = 24 (left: 24)\nAnswer: (4 + 2) * 6 = 24, 6 * 4 = 24, 24 * 1 = 24, 24 / 1 = 24\nAnswer: (4 + 2) * 6 = 24, 6 * 4 = 24, 24 * 1 = 24, 24 / 1 = 24"
            ],
            "values": [
                21.001,
                0.003,
                40.0,
                60.0,
                20.001,
                21.001,
                0.002,
                60.0,
                60.0,
                20.002
            ],
            "resampled": [
                "0 <- 1.8",
                "1 <- 6.9",
                "2 <- 6.3",
                "3 <- 6.8",
                "4 <- 3.8",
                "5 <- 6.0",
                "6 <- 6.3",
                "7 <- 5.8",
                "8 <- 3.2",
                "9 <- 3.0"
            ],
            "resampled_steps": [
                "4 + 2 = 6 (left: 1 4 6)",
                "4 + 2 = 6 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n24 * 1 = 24 (left: 1 24)\n24 / 1 = 24 (left: 24)\nAnswer: (4 + 2) * 6 = 24, 6 * 4 = 24, 24 * 1 = 24, 24 / 1 = 24\nAnswer: (4 + 2) * 6 = 24, 6 * 4 = 24, 24 * 1 = 24, 24 / 1 = 24",
                "4 + 2 = 6 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n24 * 1 = 24 (left: 1 24)\n24 / 1 = 24 (left: 24)\nAnswer: (1 * 4 + 6) * 6 = 24",
                "4 + 2 = 6 (left: 1 4 6)\n1 * 4 = 4 (left: 4 6)",
                "4 + 2 = 6 (left: 1 4 6)\n1 * 4 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "4 + 2 = 6 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n24 * 1 = 24 (left: 1 24)\n24 + 1 = 25 (left: 1 25)",
                "4 + 2 = 6 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n24 * 1 = 24 (left: 1 24)\n24 / 1 = 24 (left: 24)\nAnswer: (1 * 4 + 6) * 6 = 24",
                "4 + 2 = 6 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n24 * 1 = 24 (left: 1 24)\n24 / 1 = 24 (left: 24)\nAnswer: (4 + 2) * 6 = 24, 6 * 4 = 24, 24 * 1 = 24, 24 / 1 = 24",
                "6 - 2 = 4 (left: 1 4 6)",
                "4 + 2 = 6 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n24 * 1 = 24 (left: 1 24)"
            ]
        },
        "step_7": {
            "steps": [
                "4 + 2 = 6 (left: 1 4 6)\n6 / 4 = 1.5 (left: 1 1.5)",
                "4 + 2 = 6 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n24 * 1 = 24 (left: 1 24)\n24 / 1 = 24 (left: 24)\nAnswer: (4 + 2) * 6 = 24, 6 * 4 = 24, 24 * 1 = 24, 24 / 1 = 24\nAnswer: (4 + 2) * 6 = 24, 6 * 4 = 24, 24 * 1 = 24, 24 / 1 = 24\n\nAll the given solutions are correct. Well done!",
                "4 + 2 = 6 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n24 * 1 = 24 (left: 1 24)\n24 / 1 = 24 (left: 24)\nAnswer: (1 * 4 + 6) * 6 = 24\nInput: 1 2 3 6\nSteps:\n2 * 3 = 6 (left: 1 6 6)\n6 + 6 = 12 (left: 1 12)\n12 * 2 = 24 (left: 24)\nAnswer: (1 * 3 + 6) * 2 = 24",
                "4 + 2 = 6 (left: 1 4 6)\n1 * 4 = 4 (left: 4 6)\n6 - 4 = 2 (left: 2)",
                "4 + 2 = 6 (left: 1 4 6)\n1 * 4 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 + 1) * 4 * 6 = 24",
                "4 + 2 = 6 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n24 * 1 = 24 (left: 1 24)\n24 + 1 = 25 (left: 1 25)\n25 - 1 = 24 (left: 24)",
                "4 + 2 = 6 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n24 * 1 = 24 (left: 1 24)\n24 / 1 = 24 (left: 24)\nAnswer: (1 * 4 + 6) * 6 = 24\nInput: 3 3 8 4\nSteps:\n8 - 4 = 4 (left: 3 3 4)\n4 * 3 = 12 (left: 3 12)\n12 * 3 = 36 (left: 36)\n36 / 3 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((8 - 4) * 3) * 3 / 3 * 2 = 24",
                "4 + 2 = 6 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n24 * 1 = 24 (left: 1 24)\n24 / 1 = 24 (left: 24)\nAnswer: (4 + 2) * 6 = 24, 6 * 4 = 24, 24 * 1 = 24, 24 / 1 = 24\n\nAll four steps lead to 24.",
                "6 - 2 = 4 (left: 1 4 6)\n6 - 1 = 5 (left: 4 5)",
                "4 + 2 = 6 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n24 * 1 = 24 (left: 1 24)\n1 + 24 = 25 (left: 25)"
            ],
            "values": [
                1.002,
                60.0,
                60.0,
                0.002,
                60.0,
                60.0,
                60.0,
                60.0,
                1.0,
                0.003
            ],
            "resampled": [
                "0 <- 7.1",
                "1 <- 2.9",
                "2 <- 7.4",
                "3 <- 6.2",
                "4 <- 6.2",
                "5 <- 6.7",
                "6 <- 6.7",
                "7 <- 7.6",
                "8 <- 7.2",
                "9 <- 6.2"
            ],
            "resampled_steps": [
                "4 + 2 = 6 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n24 * 1 = 24 (left: 1 24)\n24 / 1 = 24 (left: 24)\nAnswer: (4 + 2) * 6 = 24, 6 * 4 = 24, 24 * 1 = 24, 24 / 1 = 24\nAnswer: (4 + 2) * 6 = 24, 6 * 4 = 24, 24 * 1 = 24, 24 / 1 = 24\n\nAll the given solutions are correct. Well done!",
                "4 + 2 = 6 (left: 4 6 6)",
                "4 + 2 = 6 (left: 1 4 6)\n1 * 4 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 + 1) * 4 * 6 = 24",
                "4 + 2 = 6 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n24 * 1 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24 24)",
                "4 + 2 = 6 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n24 * 1 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24 24)",
                "4 + 2 = 6 (left: 1 4 6)\n1 * 4 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 + 1) * (4 * 6) = 24",
                "4 + 2 = 6 (left: 1 4 6)\n1 * 4 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 + 1) * (4 * 6) = 24",
                "4 + 2 = 6 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n24 * 1 = 24 (left: 1 24)\n24 / 1 = 24 (left: 24)\nAnswer: (1 * 4 + 6) * 6 = 24\nInput: 3 3 8 4\nSteps:\n8 - 4 = 4 (left: 3 3 4)\n4 * 3 = 12 (left: 3 12)\n12 * 3 = 36 (left: 36)\n36 / 3 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((8 - 4) * 3) * 3 / 3 * 2 = 24",
                "4 + 2 = 6 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n24 * 1 = 24 (left: 1 24)\n24 / 1 = 24 (left: 24)\nAnswer: (1 * 4 + 6) * 6 = 24\nInput: 1 2 3 6\nSteps:\n2 * 3 = 6 (left: 1 6 6)\n6 + 6 = 12 (left: 1 12)\n12 * 2 = 24 (left: 24)\nAnswer: (1 * 3 + 6) * 2 = 24",
                "4 + 2 = 6 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n24 * 1 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24 24)"
            ]
        },
        "step_8": {
            "steps": [
                "4 + 2 = 6 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n24 * 1 = 24 (left: 1 24)\n24 / 1 = 24 (left: 24)\nAnswer: (4 + 2) * 6 = 24, 6 * 4 = 24, 24 * 1 = 24, 24 / 1 = 24\nAnswer: (4 + 2) * 6 = 24, 6 * 4 = 24, 24 * 1 = 24, 24 / 1 = 24\n\nAll the given solutions are correct. Well done!\nGreat job! Keep practicing and you'll become a master at these number puzzles.",
                "4 + 2 = 6 (left: 4 6 6)\n6 - 4 = 2 (left: 2 6)",
                "4 + 2 = 6 (left: 1 4 6)\n1 * 4 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 + 1) * 4 * 6 = 24\nInput: 3 3 8 8\nSteps:\n3 * 3 = 9 (left: 8 8 9)\n8 - 8 = 0 (left: 0 9)\n9 * 0 = 0 (left: 0)\n8 + 8 = 16 (left: 16)\n16 * 0 = 0 (left: 0)\nAnswer: ((3 * 3) * (8 - 8)) * (8 + 8) = 24",
                "4 + 2 = 6 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n24 * 1 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24 24)\n24 + 24 = 48 (left: 48)",
                "4 + 2 = 6 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n24 * 1 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24 24)\n24 + 24 = 48",
                "4 + 2 = 6 (left: 1 4 6)\n1 * 4 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 + 1) * (4 * 6) = 24\nInput: 3 3 4 4\n\n3 * 4 = 12 (left: 3 4 12)\n4 - 3 = 1 (left: 1 12)\n1 * 12 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((3 * 4) - 3) * 4 = 24",
                "4 + 2 = 6 (left: 1 4 6)\n1 * 4 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 + 1) * (4 * 6) = 24\nInput: 6 6 6 6\nSteps:\n6 * 6 = 36 (left: 6 6 36)\n6 - 6 = 0 (left: 0 36)\n36 + 0 = 36 (left: 36)\nAnswer: (6 * 6) + (6 - 6) = 24",
                "4 + 2 = 6 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n24 * 1 = 24 (left: 1 24)\n24 / 1 = 24 (left: 24)\nAnswer: (1 * 4 + 6) * 6 = 24\nInput: 3 3 8 4\nSteps:\n8 - 4 = 4 (left: 3 3 4)\n4 * 3 = 12 (left: 3 12)\n12 * 3 = 36 (left: 36)\n36 / 3 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((8 - 4) * 3) * 3 / 3 * 2 = 24\nInput: 7 3 3 4\nSteps:\n7 - 3 = 4 (left: 4 3 3)\n4 * 3 = 12 (left: 12 3)\n12 * 3 = 36 (left: 36)\n36 / 3 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((7 - 3) * 3) * 3 / 3 * 2 = 24",
                "4 + 2 = 6 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n24 * 1 = 24 (left: 1 24)\n24 / 1 = 24 (left: 24)\nAnswer: (1 * 4 + 6) * 6 = 24\nInput: 1 2 3 6\nSteps:\n2 * 3 = 6 (left: 1 6 6)\n6 + 6 = 12 (left: 1 12)\n12 * 2 = 24 (left: 24)\nAnswer: (1 * 3 + 6) * 2 = 24\nInput: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n9 * 1 = 9 (left: 9)\n9 * 9 = 81 (left: 81)\n81 / 3 = 27 (left: 27)\n27 - 9 = 18 (left: 18)\n18 / 9 = 2 (left: 2)\n2 * 8 = 16 (left: 16)\n16 + 1 = 17 (left: 17)\n17 + 9 = 26 (left: 26)\n26 - 2 = 24 (left: 24)\nAnswer: (((3 * 3) - 8) + 9) - 2 = 24",
                "4 + 2 = 6 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n24 * 1 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24 24)\n24 + 24 = 48"
            ],
            "values": [
                0.003,
                1.001,
                60.0,
                0.002,
                0.003,
                40.0,
                20.0,
                40.0,
                20.0,
                0.003
            ],
            "resampled": [
                "0 <- 7.4",
                "1 <- 6.5",
                "2 <- 5.2",
                "3 <- 6.0",
                "4 <- 7.6",
                "5 <- 7.2",
                "6 <- 7.5",
                "7 <- 4.3",
                "8 <- 3.2",
                "9 <- 8.2"
            ],
            "resampled_steps": [
                "4 + 2 = 6 (left: 1 4 6)\n1 * 4 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 + 1) * 4 * 6 = 24",
                "1 * 4 = 4 (left: 1 4 6)\n15 - 12 = 3 (left: 3 3 15)\n3 * 3 = 9 (left: 9 15)",
                "4 + 2 = 6 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n24 - 1 = 23 (left: 23)",
                "4 + 2 = 6 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n24 * 1 = 24 (left: 1 24)\n24 + 1 = 25 (left: 1 25)",
                "4 + 2 = 6 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n24 * 1 = 24 (left: 1 24)\n24 / 1 = 24 (left: 24)\nAnswer: (1 * 4 + 6) * 6 = 24\nInput: 3 3 8 4\nSteps:\n8 - 4 = 4 (left: 3 3 4)\n4 * 3 = 12 (left: 3 12)\n12 * 3 = 36 (left: 36)\n36 / 3 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((8 - 4) * 3) * 3 / 3 * 2 = 24",
                "4 + 2 = 6 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n24 * 1 = 24 (left: 1 24)\n24 / 1 = 24 (left: 24)\nAnswer: (1 * 4 + 6) * 6 = 24\nInput: 1 2 3 6\nSteps:\n2 * 3 = 6 (left: 1 6 6)\n6 + 6 = 12 (left: 1 12)\n12 * 2 = 24 (left: 24)\nAnswer: (1 * 3 + 6) * 2 = 24",
                "4 + 2 = 6 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n24 * 1 = 24 (left: 1 24)\n24 + 1 = 25 (left: 1 25)\n25 - 1 = 24 (left: 24)",
                "4 + 2 = 6 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n24 * 1 = 24 (left: 1 24)\n24 / 1 = 24 (left: 24)",
                "6 - 2 = 4 (left: 1 4 6)",
                "4 + 2 = 6 (left: 1 4 6)\n1 * 4 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 + 1) * 4 * 6 = 24\nInput: 3 3 8 8\nSteps:\n3 * 3 = 9 (left: 8 8 9)\n8 - 8 = 0 (left: 0 9)\n9 * 0 = 0 (left: 0)\n8 + 8 = 16 (left: 16)\n16 * 0 = 0 (left: 0)\nAnswer: ((3 * 3) * (8 - 8)) * (8 + 8) = 24"
            ]
        },
        "step_9": {
            "steps": [
                "4 + 2 = 6 (left: 1 4 6)\n1 * 4 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 + 1) * 4 * 6 = 24\nInput: 3 3 8 5\nSteps:\n3 * 8 = 24 (left: 3 5 24)\n5 - 3 = 2 (left: 2 24)\n24 / 2 = 12 (left: 12)\nAnswer: (3 * 8) / (5 - 3) = 24",
                "1 * 4 = 4 (left: 1 4 6)\n15 - 12 = 3 (left: 3 3 15)\n3 * 3 = 9 (left: 9 15)\n15 / 9 = 1.67 (left: 1.67)",
                "4 + 2 = 6 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n24 - 1 = 23 (left: 23)\n23 + 1 = 24 (left: 1 23 24)",
                "4 + 2 = 6 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n24 * 1 = 24 (left: 1 24)\n24 + 1 = 25 (left: 1 25)\n1 + 25 = 26 (left: 26)",
                "4 + 2 = 6 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n24 * 1 = 24 (left: 1 24)\n24 / 1 = 24 (left: 24)\nAnswer: (1 * 4 + 6) * 6 = 24\nInput: 3 3 8 4\nSteps:\n8 - 4 = 4 (left: 3 3 4)\n4 * 3 = 12 (left: 3 12)\n12 * 3 = 36 (left: 36)\n36 / 3 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((8 - 4) * 3) * 3 / 3 * 2 = 24\nInput: 2 2 3 9\nSteps:\n2 + 2 = 4 (left: 3 4 9)\n4 * 3 = 12 (left: 12 9)\n12 * 2 = 24 (left: 24)\nAnswer: (2 + 2) * 3 * 9 = 24",
                "4 + 2 = 6 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n24 * 1 = 24 (left: 1 24)\n24 / 1 = 24 (left: 24)\nAnswer: (1 * 4 + 6) * 6 = 24\nInput: 1 2 3 6\nSteps:\n2 * 3 = 6 (left: 1 6 6)\n6 + 6 = 12 (left: 1 12)\n12 * 2 = 24 (left: 24)\nAnswer: (1 * 3 + 6) * 2 = 24\nInput: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n9 * 1 = 9 (left: 9)\n9 * 9 = 81 (left: 81)\n81 / 3 = 27 (left: 27)\n27 - 8 = 19 (left: 19)\n19 + 8 = 27 (left: 27)\nAnswer: ((3 * 3) - 8) + 9 = 24",
                "4 + 2 = 6 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n24 * 1 = 24 (left: 1 24)\n24 + 1 = 25 (left: 1 25)\n25 - 1 = 24 (left: 24)\nAnswer: (4 + 2) * 6 = 24",
                "4 + 2 = 6 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n24 * 1 = 24 (left: 1 24)\n24 / 1 = 24 (left: 24)\nAnswer: (1 + 4 + 2) * 6 = 24",
                "6 - 2 = 4 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)",
                "4 + 2 = 6 (left: 1 4 6)\n1 * 4 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 + 1) * 4 * 6 = 24\nInput: 3 3 8 8\nSteps:\n3 * 3 = 9 (left: 8 8 9)\n8 - 8 = 0 (left: 0 9)\n9 * 0 = 0 (left: 0)\n8 + 8 = 16 (left: 16)\n16 * 0 = 0 (left: 0)\nAnswer: ((3 * 3) * (8 - 8)) * (8 + 8) = 24\nInput: 2 3 4 6\nSteps:\n2 * 6 = 12 (left: 3 4 12)\n4 * 3 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144)\n144 / 6 = 24 (left: 24)\nAnswer: ((2 * 6) * (4 * 3)) / 6 = 24"
            ],
            "values": [
                20.0,
                0.003,
                40.001,
                0.002,
                40.0,
                40.0,
                0.003,
                0.003,
                60.0,
                0.0
            ],
            "resampled": [
                "0 <- 4.7",
                "1 <- 9.8",
                "2 <- 7.5",
                "3 <- 8.5",
                "4 <- 7.6",
                "5 <- 9.8",
                "6 <- 7.2",
                "7 <- 7.1",
                "8 <- 5.8",
                "9 <- 2.0"
            ],
            "resampled_steps": [
                "4 + 2 = 6 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n24 * 1 = 24 (left: 1 24)\n24 - 24 = 0 (left: 0)",
                "6 - 2 = 4 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)",
                "4 + 2 = 6 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n24 * 1 = 24 (left: 1 24)\n24 + 1 = 25 (left: 1 25)\n25 - 1 = 24 (left: 24)",
                "4 + 2 = 6 (left: 1 4 6)\n1 * 4 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 + 1) * (4 * 6) = 24\nInput: 3 3 4 4\n\n3 * 4 = 12 (left: 3 4 12)\n4 - 3 = 1 (left: 1 12)\n1 * 12 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((3 * 4) - 3) * 4 = 24",
                "4 + 2 = 6 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n24 * 1 = 24 (left: 1 24)\n24 / 1 = 24 (left: 24)\nAnswer: (1 * 4 + 6) * 6 = 24\nInput: 3 3 8 4\nSteps:\n8 - 4 = 4 (left: 3 3 4)\n4 * 3 = 12 (left: 3 12)\n12 * 3 = 36 (left: 36)\n36 / 3 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((8 - 4) * 3) * 3 / 3 * 2 = 24",
                "6 - 2 = 4 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)",
                "4 + 2 = 6 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n24 * 1 = 24 (left: 1 24)\n24 / 1 = 24 (left: 24)\nAnswer: (1 * 4 + 6) * 6 = 24\nInput: 1 2 3 6\nSteps:\n2 * 3 = 6 (left: 1 6 6)\n6 + 6 = 12 (left: 1 12)\n12 * 2 = 24 (left: 24)\nAnswer: (1 * 3 + 6) * 2 = 24",
                "4 + 2 = 6 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n24 * 1 = 24 (left: 1 24)\n24 / 1 = 24 (left: 24)\nAnswer: (4 + 2) * 6 = 24, 6 * 4 = 24, 24 * 1 = 24, 24 / 1 = 24\nAnswer: (4 + 2) * 6 = 24, 6 * 4 = 24, 24 * 1 = 24, 24 / 1 = 24\n\nAll the given solutions are correct. Well done!",
                "4 + 2 = 6 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n24 * 1 = 24 (left: 1 24)\n24 / 1 = 24 (left: 24)\nAnswer: (4 + 2) * 6 = 24, 6 * 4 = 24, 24 * 1 = 24, 24 / 1 = 24",
                "4 + 2 = 6 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)"
            ]
        },
        "step_10": {
            "steps": [
                "4 + 2 = 6 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n24 * 1 = 24 (left: 1 24)\n24 - 24 = 0 (left: 0)\nThere are no possible next steps as there are no numbers to operate on.",
                "6 - 2 = 4 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n24 - 1 = 23 (left: 23)",
                "4 + 2 = 6 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n24 * 1 = 24 (left: 1 24)\n24 + 1 = 25 (left: 1 25)\n25 - 1 = 24 (left: 24)\nAnswer: (1 + 4 + 1) * 6 = 24",
                "4 + 2 = 6 (left: 1 4 6)\n1 * 4 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 + 1) * (4 * 6) = 24\nInput: 3 3 4 4\n\n3 * 4 = 12 (left: 3 4 12)\n4 - 3 = 1 (left: 1 12)\n1 * 12 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((3 * 4) - 3) * 4 = 24\nInput: 2 3 3 4\n3 * 4 = 12 (left: 2 3 12)\n3 - 2 = 1 (left: 1 12)\n1 * 12 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((3 * 4) - 3) * 4 = 24",
                "4 + 2 = 6 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n24 * 1 = 24 (left: 1 24)\n24 / 1 = 24 (left: 24)\nAnswer: (1 * 4 + 6) * 6 = 24\nInput: 3 3 8 4\nSteps:\n8 - 4 = 4 (left: 3 3 4)\n4 * 3 = 12 (left: 3 12)\n12 * 3 = 36 (left: 36)\n36 / 3 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((8 - 4) * 3) * 3 / 3 * 2 = 24\nInput: 2 2 3 4\nSteps:\n2 * 3 = 6 (left: 2 4 6)\n6 * 4 = 24 (left: 24)\nAnswer: (2 * 3) * 4 = 24",
                "6 - 2 = 4 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n24 / 1 = 24 (left: 1 24)",
                "4 + 2 = 6 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n24 * 1 = 24 (left: 1 24)\n24 / 1 = 24 (left: 24)\nAnswer: (1 * 4 + 6) * 6 = 24\nInput: 1 2 3 6\nSteps:\n2 * 3 = 6 (left: 1 6 6)\n6 + 6 = 12 (left: 1 12)\n12 * 2 = 24 (left: 24)\nAnswer: (1 * 3 + 6) * 2 = 24\nInput: 3 3 5 7\nSteps:\n3 + 7 = 10 (left: 3 5 10)\n5 * 10 = 50 (left: 3 50)\n50 / 2 = 25 (left: 25)\n25 - 1 = 24 (left: 24)\nAnswer: ((3 + 7) * 5) / 2 - 1 = 24",
                "4 + 2 = 6 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n24 * 1 = 24 (left: 1 24)\n24 / 1 = 24 (left: 24)\nAnswer: (4 + 2) * 6 = 24, 6 * 4 = 24, 24 * 1 = 24, 24 / 1 = 24\nAnswer: (4 + 2) * 6 = 24, 6 * 4 = 24, 24 * 1 = 24, 24 / 1 = 24\n\nAll the given solutions are correct. Well done!\nGreat job! You have successfully found multiple ways to obtain 24 using the given numbers and basic arithmetic operations. Keep up the good work!",
                "4 + 2 = 6 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n24 * 1 = 24 (left: 1 24)\n24 / 1 = 24 (left: 24)\nAnswer: (4 + 2) * 6 = 24, 6 * 4 = 24, 24 * 1 = 24, 24 / 1 = 24\n\nAll of the above are valid answers for obtaining 24 using the given numbers and basic arithmetic operations.",
                "4 + 2 = 6 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n24 - 1 = 23 (left: 23)"
            ],
            "values": [
                0.003,
                0.001,
                60.0,
                40.0,
                20.0,
                60.0,
                40.0,
                60.0,
                0.003,
                0.001
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 0.084113
    },
    "1": {
        "input": "1 1 11 11",
        "step_1": {
            "steps": [
                "11 - 1 = 10 (left: 1 11 10)",
                "11 - 1 = 10 (left: 1 10 11)",
                "11 - 1 = 10 (left: 1 10 11)",
                "1 + 1 = 2 (left: 2 11 11)",
                "11 / 1 = 11 (left: 1 11 11)",
                "11 - 1 = 10 (left: 1 10 11)",
                "11 / 1 = 11 (left: 1 11 11)",
                "1 + 1 = 2 (left: 2 11 11)",
                "11 - 1 = 10 (left: 1 11 10)",
                "1 + 1 = 2 (left: 2 11 11)"
            ],
            "values": [
                1.002,
                0.002,
                1.002,
                20.002,
                0.003,
                0.003,
                0.002,
                1.002,
                1.002,
                0.003
            ],
            "resampled": [
                "0 <- 1.3",
                "1 <- INIT",
                "2 <- 1.3",
                "3 <- INIT",
                "4 <- 1.3",
                "5 <- INIT",
                "6 <- INIT",
                "7 <- INIT",
                "8 <- INIT",
                "9 <- INIT"
            ],
            "resampled_steps": [
                "1 + 1 = 2 (left: 2 11 11)",
                "",
                "1 + 1 = 2 (left: 2 11 11)",
                "",
                "1 + 1 = 2 (left: 2 11 11)",
                "",
                "",
                "",
                "",
                ""
            ]
        },
        "step_2": {
            "steps": [
                "1 + 1 = 2 (left: 2 11 11)\n11 * 2 = 22 (left: 11 22)",
                "1 + 1 = 2 (left: 2 11 11)",
                "1 + 1 = 2 (left: 2 11 11)\n2 * 11 = 22 (left: 11 22)",
                "1 + 1 = 2 (left: 2 11 11)",
                "1 + 1 = 2 (left: 2 11 11)\n2 * 11 = 22 (left: 11 22)",
                "11 - 1 = 10 (left: 1 10 11)",
                "1 * 1 = 1 (left: 1 11 11)",
                "11 - 1 = 10 (left: 1 11 10)",
                "11 / 1 = 11 (left: 1 11 11)",
                "11 - 1 = 10 (left: 1 11 10)"
            ],
            "values": [
                0.003,
                1.002,
                0.003,
                21.001,
                0.003,
                1.002,
                0.003,
                1.002,
                1.001,
                1.001
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- 1.3",
                "2 <- INIT",
                "3 <- 1.2",
                "4 <- 1.3",
                "5 <- 2.3",
                "6 <- INIT",
                "7 <- 2.3",
                "8 <- INIT",
                "9 <- INIT"
            ],
            "resampled_steps": [
                "",
                "1 + 1 = 2 (left: 2 11 11)",
                "",
                "11 - 1 = 10 (left: 1 10 11)",
                "1 + 1 = 2 (left: 2 11 11)",
                "1 + 1 = 2 (left: 2 11 11)",
                "",
                "1 + 1 = 2 (left: 2 11 11)",
                "",
                ""
            ]
        },
        "step_3": {
            "steps": [
                "1 + 1 = 2 (left: 2 11 11)",
                "1 + 1 = 2 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)",
                "11 - 1 = 10 (left: 1 10 11)",
                "11 - 1 = 10 (left: 1 10 11)\n10 / 1 = 10 (left: 10 11)",
                "1 + 1 = 2 (left: 2 11 11)\n11 * 2 = 22 (left: 11 22)",
                "1 + 1 = 2 (left: 2 11 11)\n11 / 2 = 5.5 (left: 5.5 11)",
                "1 * 1 = 1 (left: 1 11 11)",
                "1 + 1 = 2 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)",
                "1 + 1 = 2 (left: 2 11 11)",
                "11 / 1 = 11 (left: 1 11 11)"
            ],
            "values": [
                20.002,
                60.0,
                1.002,
                1.001,
                0.003,
                1.001,
                1.002,
                60.0,
                60.0,
                20.002
            ],
            "resampled": [
                "0 <- 3.8",
                "1 <- 3.1",
                "2 <- 3.7",
                "3 <- 3.7",
                "4 <- 3.8",
                "5 <- 3.1",
                "6 <- 3.7",
                "7 <- 3.1",
                "8 <- 3.7",
                "9 <- INIT"
            ],
            "resampled_steps": [
                "1 + 1 = 2 (left: 2 11 11)",
                "1 + 1 = 2 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)",
                "1 + 1 = 2 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)",
                "1 + 1 = 2 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)",
                "1 + 1 = 2 (left: 2 11 11)",
                "1 + 1 = 2 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)",
                "1 + 1 = 2 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)",
                "1 + 1 = 2 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)",
                "1 + 1 = 2 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)",
                ""
            ]
        },
        "step_4": {
            "steps": [
                "1 + 1 = 2 (left: 2 11 11)\n11 / 2 = 5.5 (left: 5.5 11)",
                "1 + 1 = 2 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)\n11 + 13 = 24 (left: 24)",
                "1 + 1 = 2 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)\n11 + 13 = 24 (left: 24)",
                "1 + 1 = 2 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)\n11 * 13 = 143 (left: 143)",
                "1 + 1 = 2 (left: 2 11 11)\n11 - 2 = 9 (left: 9 11)",
                "1 + 1 = 2 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)\n11 * 13 = 143 (left: 143)",
                "1 + 1 = 2 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)\n11 + 13 = 24 (left: 24)",
                "1 + 1 = 2 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)\n11 * 13 = 143 (left: 143)",
                "1 + 1 = 2 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)\n13 - 11 = 2 (left: 2 13)",
                "11 - 1 = 10 (left: 1 10 11)"
            ],
            "values": [
                2.001,
                60.0,
                40.0,
                0.003,
                0.002,
                0.003,
                20.0,
                0.002,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 3.9",
                "1 <- 3.7",
                "2 <- 3.9",
                "3 <- 4.1",
                "4 <- 4.2",
                "5 <- 3.1",
                "6 <- 3.1",
                "7 <- 4.1",
                "8 <- 3.8",
                "9 <- 1.3"
            ],
            "resampled_steps": [
                "11 / 1 = 11 (left: 1 11 11)",
                "1 + 1 = 2 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)",
                "11 / 1 = 11 (left: 1 11 11)",
                "1 + 1 = 2 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)\n11 + 13 = 24 (left: 24)",
                "1 + 1 = 2 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)\n11 + 13 = 24 (left: 24)",
                "1 + 1 = 2 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)",
                "1 + 1 = 2 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)",
                "1 + 1 = 2 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)\n11 + 13 = 24 (left: 24)",
                "1 + 1 = 2 (left: 2 11 11)",
                "1 + 1 = 2 (left: 2 11 11)"
            ]
        },
        "step_5": {
            "steps": [
                "11 / 1 = 11 (left: 1 11 11)\n1 * 11 = 11 (left: 11 11)",
                "1 + 1 = 2 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)\n13 / 11 = 1.1818181818181819 (left: 1.1818181818181819)",
                "11 / 1 = 11 (left: 1 11 11)\n1 * 11 = 11 (left: 11 11)",
                "1 + 1 = 2 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: ((1 + 1) + 11) + 11 = 24",
                "1 + 1 = 2 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: ((1 + 1) + 11) + 11 = 24",
                "1 + 1 = 2 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)\n11 - 13 = -2 (left: -2)",
                "1 + 1 = 2 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)\n11 / 13 = 0.846 (left: 0.846)",
                "1 + 1 = 2 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: ((1 + 1) + 11) + 11 = 24",
                "1 + 1 = 2 (left: 2 11 11)\n11 - 2 = 9 (left: 9 11)",
                "1 + 1 = 2 (left: 2 11 11)\n11 + 2 = 13 (left: 11 13)"
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 0.127065
    },
    "2": {
        "input": "1 1 3 8",
        "step_1": {
            "steps": [
                "1 + 1 = 2 (left: 2 3 8)",
                "3 * 1 = 3 (left: 3 3 8)",
                "8 - 3 = 5 (left: 1 5 8)",
                "8 / 3 = 2 (left: 1 2 8)",
                "8 / 3 = 2.67 (left: 1 3 2.67)",
                "1 + 1 = 2 (left: 2 3 8)",
                "8 - 1 = 7 (left: 1 3 7)",
                "3 + 1 = 4 (left: 1 4 8)",
                "8 - 1 = 7 (left: 1 3 7)",
                "8 - 3 = 5 (left: 1 3 5)"
            ],
            "values": [
                3.0,
                1.002,
                3.0,
                60.0,
                3.0,
                1.002,
                3.0,
                0.003,
                3.0,
                3.0
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- 1.0",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- INIT",
                "5 <- 1.3",
                "6 <- 1.3",
                "7 <- 1.3",
                "8 <- 1.3",
                "9 <- INIT"
            ],
            "resampled_steps": [
                "",
                "1 + 1 = 2 (left: 2 3 8)",
                "",
                "",
                "",
                "8 / 3 = 2 (left: 1 2 8)",
                "8 / 3 = 2 (left: 1 2 8)",
                "8 / 3 = 2 (left: 1 2 8)",
                "8 / 3 = 2 (left: 1 2 8)",
                ""
            ]
        },
        "step_2": {
            "steps": [
                "3 - 1 = 2 (left: 1 2 8)",
                "1 + 1 = 2 (left: 2 3 8)\n3 * 2 = 6 (left: 6 8)",
                "3 + 1 = 4 (left: 1 4 8)",
                "8 / 3 = 2.66666666667 (left: 1 1 2.66666666667)",
                "1 * 3 = 3 (left: 1 3 8)",
                "8 / 3 = 2 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)",
                "8 / 3 = 2 (left: 1 2 8)\n8 / 2 = 4 (left: 1 4)",
                "8 / 3 = 2 (left: 1 2 8)\n8 - 1 = 7 (left: 2 7)",
                "8 / 3 = 2 (left: 1 2 8)\n2 * 1 = 2 (left: 2 8)",
                "1 + 1 = 2 (left: 2 3 8)"
            ],
            "values": [
                41.0,
                0.003,
                21.001,
                3.0,
                60.0,
                60.0,
                40.001,
                0.002,
                1.001,
                2.001
            ],
            "resampled": [
                "0 <- 2.4",
                "1 <- 2.4",
                "2 <- 2.4",
                "3 <- 2.5",
                "4 <- 1.0",
                "5 <- 2.0",
                "6 <- 2.6",
                "7 <- 2.6",
                "8 <- 2.4",
                "9 <- INIT"
            ],
            "resampled_steps": [
                "1 * 3 = 3 (left: 1 3 8)",
                "1 * 3 = 3 (left: 1 3 8)",
                "1 * 3 = 3 (left: 1 3 8)",
                "8 / 3 = 2 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)",
                "1 + 1 = 2 (left: 2 3 8)",
                "3 - 1 = 2 (left: 1 2 8)",
                "8 / 3 = 2 (left: 1 2 8)\n8 / 2 = 4 (left: 1 4)",
                "8 / 3 = 2 (left: 1 2 8)\n8 / 2 = 4 (left: 1 4)",
                "1 * 3 = 3 (left: 1 3 8)",
                ""
            ]
        },
        "step_3": {
            "steps": [
                "1 * 3 = 3 (left: 1 3 8)\n3 / 1 = 3 (left: 3 8)",
                "1 * 3 = 3 (left: 1 3 8)\n3 / 1 = 3 (left: 3 8)",
                "1 * 3 = 3 (left: 1 3 8)\n8 / 3 = 2.67 (left: 1 2.67)",
                "8 / 3 = 2 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)\n8 / 3 = 2.67 (left: 2.67 8)",
                "1 + 1 = 2 (left: 2 3 8)\n8 / 2 = 4 (left: 3 4)",
                "3 - 1 = 2 (left: 1 2 8)\n8 / 2 = 4 (left: 1 4)",
                "8 / 3 = 2 (left: 1 2 8)\n8 / 2 = 4 (left: 1 4)\n1 * 4 = 4 (left: 4)",
                "8 / 3 = 2 (left: 1 2 8)\n8 / 2 = 4 (left: 1 4)\n1 + 4 = 5 (left: 5)",
                "1 * 3 = 3 (left: 1 3 8)\n3 * 8 = 24 (left: 1 24)",
                "8 - 3 = 5 (left: 1 5 8)"
            ],
            "values": [
                60.0,
                60.0,
                2.0,
                3.0,
                0.001,
                20.002,
                0.001,
                0.003,
                60.0,
                2.001
            ],
            "resampled": [
                "0 <- 2.6",
                "1 <- 2.5",
                "2 <- 3.0",
                "3 <- 2.2",
                "4 <- 3.0",
                "5 <- 1.3",
                "6 <- 2.5",
                "7 <- 3.8",
                "8 <- 2.2",
                "9 <- 3.8"
            ],
            "resampled_steps": [
                "8 / 3 = 2 (left: 1 2 8)\n8 / 2 = 4 (left: 1 4)",
                "8 / 3 = 2 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)",
                "1 * 3 = 3 (left: 1 3 8)\n3 / 1 = 3 (left: 3 8)",
                "3 + 1 = 4 (left: 1 4 8)",
                "1 * 3 = 3 (left: 1 3 8)\n3 / 1 = 3 (left: 3 8)",
                "8 / 3 = 2 (left: 1 2 8)",
                "8 / 3 = 2 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)",
                "1 * 3 = 3 (left: 1 3 8)\n3 * 8 = 24 (left: 1 24)",
                "3 + 1 = 4 (left: 1 4 8)",
                "1 * 3 = 3 (left: 1 3 8)\n3 * 8 = 24 (left: 1 24)"
            ]
        },
        "step_4": {
            "steps": [
                "8 / 3 = 2 (left: 1 2 8)\n8 / 2 = 4 (left: 1 4)\n1 + 4 = 5 (left: 5)",
                "8 / 3 = 2 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)\n3 + 8 = 11 (left: 8 11)",
                "1 * 3 = 3 (left: 1 3 8)\n3 / 1 = 3 (left: 3 8)\n8 / 3 = 2.67 (left: 3 2.67)",
                "3 + 1 = 4 (left: 1 4 8)\n8 - 1 = 7 (left: 4 7)",
                "1 * 3 = 3 (left: 1 3 8)\n3 / 1 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5 8)",
                "8 / 3 = 2 (left: 1 2 8)\n2 * 8 = 16 (left: 1 16)",
                "8 / 3 = 2 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)\n3 * 8 = 24 (left: 8 24)",
                "1 * 3 = 3 (left: 1 3 8)\n3 * 8 = 24 (left: 1 24)\n1 + 24 = 25 (left: 25)",
                "3 + 1 = 4 (left: 1 4 8)\n8 - 1 = 7 (left: 4 7)",
                "1 * 3 = 3 (left: 1 3 8)\n3 * 8 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)"
            ],
            "values": [
                0.003,
                2.001,
                1.001,
                0.001,
                1.002,
                0.003,
                2.001,
                0.003,
                0.002,
                40.0
            ],
            "resampled": [
                "0 <- 2.6",
                "1 <- 3.0",
                "2 <- 4.9",
                "3 <- 3.0",
                "4 <- 3.1",
                "5 <- 3.1",
                "6 <- 2.4",
                "7 <- 2.2",
                "8 <- 3.1",
                "9 <- 4.6"
            ],
            "resampled_steps": [
                "8 / 3 = 2 (left: 1 2 8)\n8 / 2 = 4 (left: 1 4)",
                "1 * 3 = 3 (left: 1 3 8)\n3 / 1 = 3 (left: 3 8)",
                "1 * 3 = 3 (left: 1 3 8)\n3 * 8 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)",
                "1 * 3 = 3 (left: 1 3 8)\n3 / 1 = 3 (left: 3 8)",
                "1 * 3 = 3 (left: 1 3 8)\n3 / 1 = 3 (left: 3 8)",
                "1 * 3 = 3 (left: 1 3 8)\n3 / 1 = 3 (left: 3 8)",
                "1 * 3 = 3 (left: 1 3 8)",
                "3 + 1 = 4 (left: 1 4 8)",
                "1 * 3 = 3 (left: 1 3 8)\n3 / 1 = 3 (left: 3 8)",
                "8 / 3 = 2 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)\n3 * 8 = 24 (left: 8 24)"
            ]
        },
        "step_5": {
            "steps": [
                "8 / 3 = 2 (left: 1 2 8)\n8 / 2 = 4 (left: 1 4)\n4 - 1 = 3 (left: 3)",
                "1 * 3 = 3 (left: 1 3 8)\n3 / 1 = 3 (left: 3 8)\n3 + 8 = 11 (left: 8 11)",
                "1 * 3 = 3 (left: 1 3 8)\n3 * 8 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)\nAnswer: (1 * 3) * (1 * 8) = 24",
                "1 * 3 = 3 (left: 1 3 8)\n3 / 1 = 3 (left: 3 8)\n3 * 8 = 24 (left: 8 24)",
                "1 * 3 = 3 (left: 1 3 8)\n3 / 1 = 3 (left: 3 8)\n3 * 8 = 24 (left: 8 24)",
                "1 * 3 = 3 (left: 1 3 8)\n3 / 1 = 3 (left: 3 8)\n3 * 8 = 24 (left: 8 24)",
                "1 * 3 = 3 (left: 1 3 8)\n3 * 8 = 24 (left: 1 24)",
                "3 + 1 = 4 (left: 1 4 8)\n4 * 1 = 4 (left: 4 8)",
                "1 * 3 = 3 (left: 1 3 8)\n3 / 1 = 3 (left: 3 8)\n3 + 8 = 11 (left: 8 11)",
                "8 / 3 = 2 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)\n3 * 8 = 24 (left: 8 24)\n8 * 24 = 192 (left: 192)"
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 0.165382
    },
    "3": {
        "input": "1 1 1 8",
        "step_1": {
            "steps": [
                "1 * 1 = 1 (left: 1 1 8)",
                "1 * 1 = 1 (left: 1 1 8)",
                "8 - 1 = 7 (left: 1 1 7)",
                "1 + 1 = 2 (left: 1 2 8)",
                "1 + 1 = 2 (left: 2 1 8)",
                "1 + 1 = 2 (left: 2 1 8)",
                "8 - 1 = 7 (left: 1 1 7)",
                "1 + 1 = 2 (left: 2 1 8)",
                "1 + 1 = 2 (left: 2 1 8)",
                "1 + 1 = 2 (left: 2 1 8)"
            ],
            "values": [
                2.001,
                1.002,
                2.001,
                3.0,
                41.0,
                3.0,
                0.003,
                41.0,
                3.0,
                21.0
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- 1.4",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- 1.7",
                "5 <- 1.9",
                "6 <- 1.9",
                "7 <- 1.9",
                "8 <- INIT",
                "9 <- 1.4"
            ],
            "resampled_steps": [
                "",
                "1 + 1 = 2 (left: 2 1 8)",
                "",
                "",
                "1 + 1 = 2 (left: 2 1 8)",
                "1 + 1 = 2 (left: 2 1 8)",
                "1 + 1 = 2 (left: 2 1 8)",
                "1 + 1 = 2 (left: 2 1 8)",
                "",
                "1 + 1 = 2 (left: 2 1 8)"
            ]
        },
        "step_2": {
            "steps": [
                "1 + 1 = 2 (left: 2 1 8)",
                "1 + 1 = 2 (left: 2 1 8)\n8 / 2 = 4 (left: 4 8)",
                "1 * 1 = 1 (left: 1 1 8)",
                "1 + 1 = 2 (left: 2 1 8)",
                "1 + 1 = 2 (left: 2 1 8)\n8 - 2 = 6 (left: 6 8)",
                "1 + 1 = 2 (left: 2 1 8)\n8 - 2 = 6 (left: 6 8)",
                "1 + 1 = 2 (left: 2 1 8)\n8 - 2 = 6 (left: 6)",
                "1 + 1 = 2 (left: 2 1 8)\n1 + 8 = 9 (left: 2 9)",
                "8 - 1 = 7 (left: 1 1 7)",
                "1 + 1 = 2 (left: 2 1 8)\n1 * 8 = 8 (left: 2 8)"
            ],
            "values": [
                2.001,
                41.0,
                2.001,
                2.001,
                1.002,
                0.003,
                0.003,
                0.0,
                1.002,
                0.003
            ],
            "resampled": [
                "0 <- 2.0",
                "1 <- 1.4",
                "2 <- 1.4",
                "3 <- 2.1",
                "4 <- 2.1",
                "5 <- 1.4",
                "6 <- 1.8",
                "7 <- INIT",
                "8 <- INIT",
                "9 <- 1.4"
            ],
            "resampled_steps": [
                "1 + 1 = 2 (left: 2 1 8)",
                "1 + 1 = 2 (left: 2 1 8)",
                "1 + 1 = 2 (left: 2 1 8)",
                "1 + 1 = 2 (left: 2 1 8)\n8 / 2 = 4 (left: 4 8)",
                "1 + 1 = 2 (left: 2 1 8)\n8 / 2 = 4 (left: 4 8)",
                "1 + 1 = 2 (left: 2 1 8)",
                "1 + 1 = 2 (left: 2 1 8)",
                "",
                "",
                "1 + 1 = 2 (left: 2 1 8)"
            ]
        },
        "step_3": {
            "steps": [
                "1 + 1 = 2 (left: 2 1 8)\n2 * 1 = 2 (left: 2 8)",
                "1 + 1 = 2 (left: 2 1 8)\n8 - 1 = 7 (left: 2 7)",
                "1 + 1 = 2 (left: 2 1 8)\n1 + 8 = 9 (left: 2 9)",
                "1 + 1 = 2 (left: 2 1 8)\n8 / 2 = 4 (left: 4 8)\n8 - 4 = 4 (left: 4 8)",
                "1 + 1 = 2 (left: 2 1 8)\n8 / 2 = 4 (left: 4 8)\n4 + 8 = 12 (left: 8 12)",
                "1 + 1 = 2 (left: 2 1 8)\n1 / 8 = 0.125 (left: 0.125 8)",
                "1 + 1 = 2 (left: 2 1 8)\n2 + 1 = 3 (left: 3 8)",
                "1 + 1 = 2 (left: 1 2 8)",
                "1 * 8 = 8 (left: 1 8 8)",
                "1 + 1 = 2 (left: 2 1 8)\n1 * 8 = 8 (left: 2 8)"
            ],
            "values": [
                1.001,
                1.001,
                1.002,
                2.001,
                2.0,
                2.0,
                60.0,
                22.0,
                1.002,
                0.003
            ],
            "resampled": [
                "0 <- 1.4",
                "1 <- 3.6",
                "2 <- 1.9",
                "3 <- 1.4",
                "4 <- 1.7",
                "5 <- 3.6",
                "6 <- 1.4",
                "7 <- 2.1",
                "8 <- 3.6",
                "9 <- 1.7"
            ],
            "resampled_steps": [
                "1 + 1 = 2 (left: 2 1 8)",
                "1 + 1 = 2 (left: 2 1 8)\n2 + 1 = 3 (left: 3 8)",
                "1 + 1 = 2 (left: 2 1 8)",
                "1 + 1 = 2 (left: 2 1 8)",
                "1 + 1 = 2 (left: 2 1 8)",
                "1 + 1 = 2 (left: 2 1 8)\n2 + 1 = 3 (left: 3 8)",
                "1 + 1 = 2 (left: 2 1 8)",
                "1 + 1 = 2 (left: 2 1 8)\n8 / 2 = 4 (left: 4 8)",
                "1 + 1 = 2 (left: 2 1 8)\n2 + 1 = 3 (left: 3 8)",
                "1 + 1 = 2 (left: 2 1 8)"
            ]
        },
        "step_4": {
            "steps": [
                "1 + 1 = 2 (left: 2 1 8)\n8 - 2 = 6 (left: 6 1)",
                "1 + 1 = 2 (left: 2 1 8)\n2 + 1 = 3 (left: 3 8)\n8 / 3 = 2.66666666667 (left: 2.66666666667 8)",
                "1 + 1 = 2 (left: 2 1 8)\n2 + 1 = 3 (left: 3 8)",
                "1 + 1 = 2 (left: 2 1 8)\n2 * 1 = 2 (left: 2 8)",
                "1 + 1 = 2 (left: 2 1 8)\n2 * 1 = 2 (left: 2 1 8)",
                "1 + 1 = 2 (left: 2 1 8)\n2 + 1 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5 8)",
                "1 + 1 = 2 (left: 2 1 8)\n8 / 2 = 4 (left: 4 8)",
                "1 + 1 = 2 (left: 2 1 8)\n8 / 2 = 4 (left: 4 8)\n4 + 8 = 12 (left: 8 12)",
                "1 + 1 = 2 (left: 2 1 8)\n2 + 1 = 3 (left: 3 8)\n8 / 3 = 2.67 (left: 2.67 8)",
                "1 + 1 = 2 (left: 2 1 8)\n2 + 1 = 3 (left: 3 8)"
            ],
            "values": [
                2.001,
                3.0,
                60.0,
                1.002,
                41.0,
                1.001,
                20.002,
                1.002,
                3.0,
                60.0
            ],
            "resampled": [
                "0 <- 3.7",
                "1 <- 4.4",
                "2 <- 2.4",
                "3 <- 3.6",
                "4 <- 1.4",
                "5 <- 4.9",
                "6 <- 1.7",
                "7 <- 4.2",
                "8 <- 3.6",
                "9 <- 2.1"
            ],
            "resampled_steps": [
                "1 + 1 = 2 (left: 1 2 8)",
                "1 + 1 = 2 (left: 2 1 8)\n2 * 1 = 2 (left: 2 1 8)",
                "1 + 1 = 2 (left: 2 1 8)\n8 - 2 = 6 (left: 6 8)",
                "1 + 1 = 2 (left: 2 1 8)\n2 + 1 = 3 (left: 3 8)",
                "1 + 1 = 2 (left: 2 1 8)",
                "1 + 1 = 2 (left: 2 1 8)\n2 + 1 = 3 (left: 3 8)",
                "1 + 1 = 2 (left: 2 1 8)",
                "1 + 1 = 2 (left: 2 1 8)\n2 + 1 = 3 (left: 3 8)",
                "1 + 1 = 2 (left: 2 1 8)\n2 + 1 = 3 (left: 3 8)",
                "1 + 1 = 2 (left: 2 1 8)\n8 / 2 = 4 (left: 4 8)"
            ]
        },
        "step_5": {
            "steps": [
                "1 + 1 = 2 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)",
                "1 + 1 = 2 (left: 2 1 8)\n2 * 1 = 2 (left: 2 1 8)\n8 - 1 = 7 (left: 2 7)",
                "1 + 1 = 2 (left: 2 1 8)\n8 - 2 = 6 (left: 6 8)\n8 - 6 = 2 (left: 2 8)",
                "1 + 1 = 2 (left: 2 1 8)\n2 + 1 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5 8)",
                "1 + 1 = 2 (left: 2 1 8)\n2 * 1 = 2 (left: 2 8)",
                "1 + 1 = 2 (left: 2 1 8)\n2 + 1 = 3 (left: 3 8)\n3 * 8 = 24 (left: 8 24)",
                "1 + 1 = 2 (left: 2 1 8)\n1 - 8 = -7 (left: -7)",
                "1 + 1 = 2 (left: 2 1 8)\n2 + 1 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5 8)",
                "1 + 1 = 2 (left: 2 1 8)\n2 + 1 = 3 (left: 3 8)\n3 + 8 = 11 (left: 8 11)",
                "1 + 1 = 2 (left: 2 1 8)\n8 / 2 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)"
            ],
            "values": [
                60.0,
                0.002,
                1.001,
                1.002,
                2.001,
                20.002,
                0.003,
                2.0,
                0.002,
                60.0
            ],
            "resampled": [
                "0 <- 1.9",
                "1 <- 1.7",
                "2 <- 4.2",
                "3 <- 4.4",
                "4 <- 4.9",
                "5 <- 5.5",
                "6 <- 4.4",
                "7 <- 5.9",
                "8 <- 4.2",
                "9 <- 5.0"
            ],
            "resampled_steps": [
                "1 + 1 = 2 (left: 2 1 8)",
                "1 + 1 = 2 (left: 2 1 8)",
                "1 + 1 = 2 (left: 2 1 8)\n2 + 1 = 3 (left: 3 8)",
                "1 + 1 = 2 (left: 2 1 8)\n2 * 1 = 2 (left: 2 1 8)",
                "1 + 1 = 2 (left: 2 1 8)\n2 + 1 = 3 (left: 3 8)",
                "1 + 1 = 2 (left: 2 1 8)\n2 + 1 = 3 (left: 3 8)\n3 * 8 = 24 (left: 8 24)",
                "1 + 1 = 2 (left: 2 1 8)\n2 * 1 = 2 (left: 2 1 8)",
                "1 + 1 = 2 (left: 2 1 8)\n8 / 2 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)",
                "1 + 1 = 2 (left: 2 1 8)\n2 + 1 = 3 (left: 3 8)",
                "1 + 1 = 2 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)"
            ]
        },
        "step_6": {
            "steps": [
                "1 + 1 = 2 (left: 2 1 8)\n2 + 1 = 3 (left: 3 8)",
                "1 + 1 = 2 (left: 2 1 8)\n2 + 1 = 3 (left: 3 8)",
                "1 + 1 = 2 (left: 2 1 8)\n2 + 1 = 3 (left: 3 8)\n3 + 8 = 11 (left: 8 11)",
                "1 + 1 = 2 (left: 2 1 8)\n2 * 1 = 2 (left: 2 1 8)\n2 * 1 = 2 (left: 2 8)",
                "1 + 1 = 2 (left: 2 1 8)\n2 + 1 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5 8)",
                "1 + 1 = 2 (left: 2 1 8)\n2 + 1 = 3 (left: 3 8)\n3 * 8 = 24 (left: 8 24)\n8 * 3 = 24 (left: 24)",
                "1 + 1 = 2 (left: 2 1 8)\n2 * 1 = 2 (left: 2 1 8)\n1 + 8 = 9 (left: 2 9)",
                "1 + 1 = 2 (left: 2 1 8)\n8 / 2 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n8 * 4 = 32 (left: 8 32)",
                "1 + 1 = 2 (left: 2 1 8)\n2 + 1 = 3 (left: 3 8)\n3 + 8 = 11 (left: 8 11)",
                "1 + 1 = 2 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)"
            ],
            "values": [
                60.0,
                60.0,
                1.002,
                1.001,
                0.001,
                60.0,
                3.0,
                0.001,
                0.0,
                0.002
            ],
            "resampled": [
                "0 <- 6.0",
                "1 <- 2.1",
                "2 <- 4.9",
                "3 <- 5.0",
                "4 <- 5.9",
                "5 <- 6.1",
                "6 <- 4.4",
                "7 <- 3.7",
                "8 <- 6.5",
                "9 <- 6.5"
            ],
            "resampled_steps": [
                "1 + 1 = 2 (left: 2 1 8)\n2 + 1 = 3 (left: 3 8)",
                "1 + 1 = 2 (left: 2 1 8)\n8 / 2 = 4 (left: 4 8)",
                "1 + 1 = 2 (left: 2 1 8)\n2 + 1 = 3 (left: 3 8)",
                "1 + 1 = 2 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)",
                "1 + 1 = 2 (left: 2 1 8)\n8 / 2 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)",
                "1 + 1 = 2 (left: 2 1 8)\n2 + 1 = 3 (left: 3 8)",
                "1 + 1 = 2 (left: 2 1 8)\n2 * 1 = 2 (left: 2 1 8)",
                "1 + 1 = 2 (left: 1 2 8)",
                "1 + 1 = 2 (left: 2 1 8)\n2 + 1 = 3 (left: 3 8)\n3 * 8 = 24 (left: 8 24)\n8 * 3 = 24 (left: 24)",
                "1 + 1 = 2 (left: 2 1 8)\n2 + 1 = 3 (left: 3 8)\n3 * 8 = 24 (left: 8 24)\n8 * 3 = 24 (left: 24)"
            ]
        },
        "step_7": {
            "steps": [
                "1 + 1 = 2 (left: 2 1 8)\n2 + 1 = 3 (left: 3 8)\n3 + 8 = 11 (left: 8 11)",
                "1 + 1 = 2 (left: 2 1 8)\n8 / 2 = 4 (left: 4 8)\n4 + 8 = 12 (left: 8 12)",
                "1 + 1 = 2 (left: 2 1 8)\n2 + 1 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5 8)",
                "1 + 1 = 2 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)\n3 + 8 = 11 (left: 8 11)",
                "1 + 1 = 2 (left: 2 1 8)\n8 / 2 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n32 / 8 = 4 (left: 4 8)",
                "1 + 1 = 2 (left: 2 1 8)\n2 + 1 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5 8)",
                "1 + 1 = 2 (left: 2 1 8)\n2 * 1 = 2 (left: 2 1 8)\n2 * 1 = 2 (left: 2 8)",
                "1 + 1 = 2 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)",
                "1 + 1 = 2 (left: 2 1 8)\n2 + 1 = 3 (left: 3 8)\n3 * 8 = 24 (left: 8 24)\n8 * 3 = 24 (left: 24)\nAnswer: (1 + 1 + 1) * 8 = 24",
                "1 + 1 = 2 (left: 2 1 8)\n2 + 1 = 3 (left: 3 8)\n3 * 8 = 24 (left: 8 24)\n8 * 3 = 24 (left: 24)\nAnswer: (1 + 1) * (1 + 8) = 24"
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            }
        ],
        "cost": 0.221116
    },
    "4": {
        "input": "6 6 6 6",
        "step_1": {
            "steps": [
                "6 * 6 = 36 (left: 6 6 36)",
                "6 - 6 = 0 (left: 0 6 6)",
                "6 - 6 = 0 (left: 0 6 6)",
                "6 / 6 = 1 (left: 1 6 6)",
                "6 + 6 = 12 (left: 6 12 6)",
                "6 * 6 = 36 (left: 6 36 6 6)",
                "6 + 6 = 12 (left: 6 12 6)",
                "6 * 6 = 36 (left: 6 6 36)",
                "6 - 6 = 0 (left: 0 6 6)",
                "6 * 6 = 36 (left: 6 6 36)"
            ],
            "values": [
                21.0,
                40.001,
                40.001,
                60.0,
                41.0,
                3.0,
                60.0,
                41.0,
                40.001,
                2.001
            ],
            "resampled": [
                "0 <- 1.2",
                "1 <- 1.3",
                "2 <- 1.3",
                "3 <- 1.8",
                "4 <- 1.4",
                "5 <- 1.6",
                "6 <- 1.2",
                "7 <- 1.3",
                "8 <- 1.2",
                "9 <- 1.2"
            ],
            "resampled_steps": [
                "6 - 6 = 0 (left: 0 6 6)",
                "6 / 6 = 1 (left: 1 6 6)",
                "6 / 6 = 1 (left: 1 6 6)",
                "6 - 6 = 0 (left: 0 6 6)",
                "6 + 6 = 12 (left: 6 12 6)",
                "6 + 6 = 12 (left: 6 12 6)",
                "6 - 6 = 0 (left: 0 6 6)",
                "6 / 6 = 1 (left: 1 6 6)",
                "6 - 6 = 0 (left: 0 6 6)",
                "6 - 6 = 0 (left: 0 6 6)"
            ]
        },
        "step_2": {
            "steps": [
                "6 - 6 = 0 (left: 0 6 6)\n0 + 6 = 6 (left: 6 6)",
                "6 / 6 = 1 (left: 1 6 6)\n1 * 6 = 6 (left: 6 6)",
                "6 / 6 = 1 (left: 1 6 6)\n6 / 1 = 6 (left: 6 6)",
                "6 - 6 = 0 (left: 0 6 6)\n0 + 6 = 6 (left: 6 6)",
                "6 + 6 = 12 (left: 6 12 6)\n12 - 6 = 6 (left: 6 6)",
                "6 + 6 = 12 (left: 6 12 6)\n6 * 2 = 12 (left: 12 6)",
                "6 - 6 = 0 (left: 0 6 6)\n6 * 6 = 36 (left: 0 36)",
                "6 / 6 = 1 (left: 1 6 6)\n1 + 6 = 7 (left: 6 7)",
                "6 - 6 = 0 (left: 0 6 6)\n6 - 0 = 6 (left: 6 6)",
                "6 - 6 = 0 (left: 0 6 6)\n6 - 6 = 0 (left: 0 6)"
            ],
            "values": [
                20.001,
                1.002,
                20.002,
                40.001,
                1.002,
                0.002,
                41.0,
                1.002,
                2.001,
                2.001
            ],
            "resampled": [
                "0 <- 1.1",
                "1 <- 2.0",
                "2 <- 1.6",
                "3 <- 1.6",
                "4 <- 2.2",
                "5 <- 1.8",
                "6 <- 1.6",
                "7 <- 2.2",
                "8 <- 1.1",
                "9 <- 2.0"
            ],
            "resampled_steps": [
                "6 - 6 = 0 (left: 0 6 6)",
                "6 - 6 = 0 (left: 0 6 6)\n0 + 6 = 6 (left: 6 6)",
                "6 + 6 = 12 (left: 6 12 6)",
                "6 + 6 = 12 (left: 6 12 6)",
                "6 / 6 = 1 (left: 1 6 6)\n6 / 1 = 6 (left: 6 6)",
                "6 - 6 = 0 (left: 0 6 6)",
                "6 + 6 = 12 (left: 6 12 6)",
                "6 / 6 = 1 (left: 1 6 6)\n6 / 1 = 6 (left: 6 6)",
                "6 - 6 = 0 (left: 0 6 6)",
                "6 - 6 = 0 (left: 0 6 6)\n0 + 6 = 6 (left: 6 6)"
            ]
        },
        "step_3": {
            "steps": [
                "6 - 6 = 0 (left: 0 6 6)\n6 * 0 = 0 (left: 6 6)",
                "6 - 6 = 0 (left: 0 6 6)\n0 + 6 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)",
                "6 + 6 = 12 (left: 6 12 6)\n6 - 12 = -6 (left: -6 6)",
                "6 + 6 = 12 (left: 6 12 6)\n12 - 6 = 6 (left: 6 6)",
                "6 / 6 = 1 (left: 1 6 6)\n6 / 1 = 6 (left: 6 6)\n6 / 6 = 1 (left: 1)",
                "6 - 6 = 0 (left: 0 6 6)\n6 + 6 = 12 (left: 12)",
                "6 + 6 = 12 (left: 6 12 6)\n6 * 2 = 12 (left: 12 12)",
                "6 / 6 = 1 (left: 1 6 6)\n6 / 1 = 6 (left: 6 6)\n6 - 6 = 0 (left: 0)",
                "6 - 6 = 0 (left: 0 6 6)\n0 + 6 = 6 (left: 6 6)",
                "6 - 6 = 0 (left: 0 6 6)\n0 + 6 = 6 (left: 6 6)\n6 + 6 = 12 (left: 12)"
            ],
            "values": [
                0.003,
                20.0,
                0.002,
                0.003,
                0.003,
                0.002,
                1.002,
                0.001,
                1.001,
                0.001
            ],
            "resampled": [
                "0 <- 1.0",
                "1 <- 2.2",
                "2 <- 1.4",
                "3 <- 2.6",
                "4 <- 1.7",
                "5 <- 1.6",
                "6 <- 1.3",
                "7 <- 2.2",
                "8 <- 2.2",
                "9 <- 1.1"
            ],
            "resampled_steps": [
                "6 * 6 = 36 (left: 6 6 36)",
                "6 / 6 = 1 (left: 1 6 6)\n6 / 1 = 6 (left: 6 6)",
                "6 + 6 = 12 (left: 6 12 6)",
                "6 - 6 = 0 (left: 0 6 6)\n6 * 6 = 36 (left: 0 36)",
                "6 * 6 = 36 (left: 6 6 36)",
                "6 + 6 = 12 (left: 6 12 6)",
                "6 / 6 = 1 (left: 1 6 6)",
                "6 / 6 = 1 (left: 1 6 6)\n6 / 1 = 6 (left: 6 6)",
                "6 / 6 = 1 (left: 1 6 6)\n6 / 1 = 6 (left: 6 6)",
                "6 - 6 = 0 (left: 0 6 6)"
            ]
        },
        "step_4": {
            "steps": [
                "6 * 6 = 36 (left: 6 6 36)\n6 / 6 = 1 (left: 1 36)",
                "6 / 6 = 1 (left: 1 6 6)\n6 / 1 = 6 (left: 6 6)\n6 - 6 = 0 (left: 0 6)",
                "6 + 6 = 12 (left: 6 12 6)\n6 * 2 = 12 (left: 12)",
                "6 - 6 = 0 (left: 0 6 6)\n6 * 6 = 36 (left: 0 36)\n5 * 5 = 25 (left: 25 5)",
                "6 * 6 = 36 (left: 6 6 36)\n6 / 6 = 1 (left: 1 36)",
                "6 + 6 = 12 (left: 6 12 6)\n6 * 12 = 72 (left: 72 6)",
                "6 / 6 = 1 (left: 1 6 6)\n6 - 1 = 5 (left: 1 5)",
                "6 / 6 = 1 (left: 1 6 6)\n6 / 1 = 6 (left: 6 6)\n6 * 6 = 36 (left: 6 36)",
                "6 / 6 = 1 (left: 1 6 6)\n6 / 1 = 6 (left: 6 6)\n6 - 6 = 0 (left: 0)",
                "6 - 6 = 0 (left: 0 6 6)\n0 * 6 = 0 (left: 6 6)"
            ],
            "values": [
                60.0,
                21.0,
                0.001,
                0.001,
                60.0,
                20.001,
                60.0,
                20.002,
                0.002,
                41.0
            ],
            "resampled": [
                "0 <- 1.3",
                "1 <- 2.3",
                "2 <- 4.9",
                "3 <- 4.4",
                "4 <- 1.1",
                "5 <- 1.2",
                "6 <- 4.6",
                "7 <- 4.1",
                "8 <- 4.9",
                "9 <- 1.3"
            ],
            "resampled_steps": [
                "6 / 6 = 1 (left: 1 6 6)",
                "6 - 6 = 0 (left: 0 6 6)\n0 + 6 = 6 (left: 6 6)",
                "6 - 6 = 0 (left: 0 6 6)\n0 * 6 = 0 (left: 6 6)",
                "6 * 6 = 36 (left: 6 6 36)\n6 / 6 = 1 (left: 1 36)",
                "6 - 6 = 0 (left: 0 6 6)",
                "6 - 6 = 0 (left: 0 6 6)",
                "6 / 6 = 1 (left: 1 6 6)\n6 - 1 = 5 (left: 1 5)",
                "6 / 6 = 1 (left: 1 6 6)\n6 / 1 = 6 (left: 6 6)\n6 - 6 = 0 (left: 0 6)",
                "6 - 6 = 0 (left: 0 6 6)\n0 * 6 = 0 (left: 6 6)",
                "6 / 6 = 1 (left: 1 6 6)"
            ]
        },
        "step_5": {
            "steps": [
                "6 / 6 = 1 (left: 1 6 6)\n1 * 6 = 6 (left: 6 6)",
                "6 - 6 = 0 (left: 0 6 6)\n0 + 6 = 6 (left: 6 6)\n6 - 6 = 0 (left: 0)",
                "6 - 6 = 0 (left: 0 6 6)\n0 * 6 = 0 (left: 6 6)\n6 / 6 = 1 (left: 1)",
                "6 * 6 = 36 (left: 6 6 36)\n6 / 6 = 1 (left: 1 36)\n1 + 36 = 37 (left: 36 37)",
                "6 - 6 = 0 (left: 0 6 6)\n6 * 6 = 36 (left: 6 36)",
                "6 - 6 = 0 (left: 0 6 6)\n6 * 6 = 36 (left: 6 36)",
                "6 / 6 = 1 (left: 1 6 6)\n6 - 1 = 5 (left: 1 5)\n1 * 5 = 5 (left: 5 5)",
                "6 / 6 = 1 (left: 1 6 6)\n6 / 1 = 6 (left: 6 6)\n6 - 6 = 0 (left: 0 6)\n6 / 0 = undefined",
                "6 - 6 = 0 (left: 0 6 6)\n0 * 6 = 0 (left: 6 6)\n6 / 6 = 1 (left: 1)",
                "6 / 6 = 1 (left: 1 6 6)\n6 + 1 = 7 (left: 7 6)"
            ],
            "values": [
                1.002,
                0.001,
                0.003,
                0.003,
                0.003,
                0.003,
                0.003,
                0.003,
                0.003,
                0.002
            ],
            "resampled": [
                "0 <- 4.0",
                "1 <- 4.4",
                "2 <- 3.1",
                "3 <- 4.4",
                "4 <- 4.0",
                "5 <- 4.0",
                "6 <- 4.0",
                "7 <- 2.2",
                "8 <- 2.0",
                "9 <- 4.6"
            ],
            "resampled_steps": [
                "6 * 6 = 36 (left: 6 6 36)\n6 / 6 = 1 (left: 1 36)",
                "6 * 6 = 36 (left: 6 6 36)\n6 / 6 = 1 (left: 1 36)",
                "6 - 6 = 0 (left: 0 6 6)\n0 + 6 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)",
                "6 * 6 = 36 (left: 6 6 36)\n6 / 6 = 1 (left: 1 36)",
                "6 * 6 = 36 (left: 6 6 36)\n6 / 6 = 1 (left: 1 36)",
                "6 * 6 = 36 (left: 6 6 36)\n6 / 6 = 1 (left: 1 36)",
                "6 * 6 = 36 (left: 6 6 36)\n6 / 6 = 1 (left: 1 36)",
                "6 / 6 = 1 (left: 1 6 6)\n6 / 1 = 6 (left: 6 6)",
                "6 - 6 = 0 (left: 0 6 6)\n0 + 6 = 6 (left: 6 6)",
                "6 / 6 = 1 (left: 1 6 6)\n6 - 1 = 5 (left: 1 5)"
            ]
        },
        "step_6": {
            "steps": [
                "6 * 6 = 36 (left: 6 6 36)\n6 / 6 = 1 (left: 1 36)\n1 * 36 = 36 (left: 36)",
                "6 * 6 = 36 (left: 6 6 36)\n6 / 6 = 1 (left: 1 36)\n36 - 1 = 35 (left: 35)",
                "6 - 6 = 0 (left: 0 6 6)\n0 + 6 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)\n9 + 27 = 36",
                "6 * 6 = 36 (left: 6 6 36)\n6 / 6 = 1 (left: 1 36)\n1 * 36 = 36 (left: 36)",
                "6 * 6 = 36 (left: 6 6 36)\n6 / 6 = 1 (left: 1 36)\n36 / 1 = 36 (left: 36)",
                "6 * 6 = 36 (left: 6 6 36)\n6 / 6 = 1 (left: 1 36)\n1 + 36 = 37 (left: 37)",
                "6 * 6 = 36 (left: 6 6 36)\n6 / 6 = 1 (left: 1 36)\n1 + 36 = 37 (left: 37)",
                "6 / 6 = 1 (left: 1 6 6)\n6 / 1 = 6 (left: 6 6)\n6 - 6 = 0 (left: 0 6)",
                "6 - 6 = 0 (left: 0 6 6)\n0 + 6 = 6 (left: 6 6)\n6 / 6 = 1 (left: 1)",
                "6 / 6 = 1 (left: 1 6 6)\n6 - 1 = 5 (left: 1 5)\n5 / 1 = 5 (left: 1 5)"
            ],
            "values": [
                40.0,
                0.001,
                0.003,
                20.0,
                20.001,
                0.003,
                0.002,
                1.001,
                0.002,
                0.0
            ],
            "resampled": [
                "0 <- 6.3",
                "1 <- 3.6",
                "2 <- 1.7",
                "3 <- 2.2",
                "4 <- 4.7",
                "5 <- 6.4",
                "6 <- 4.9",
                "7 <- 1.8",
                "8 <- 6.4",
                "9 <- 4.6"
            ],
            "resampled_steps": [
                "6 * 6 = 36 (left: 6 6 36)\n6 / 6 = 1 (left: 1 36)\n1 * 36 = 36 (left: 36)",
                "6 + 6 = 12 (left: 6 12 6)\n6 * 2 = 12 (left: 12 12)",
                "6 * 6 = 36 (left: 6 6 36)",
                "6 / 6 = 1 (left: 1 6 6)\n6 / 1 = 6 (left: 6 6)",
                "6 / 6 = 1 (left: 1 6 6)\n6 / 1 = 6 (left: 6 6)\n6 * 6 = 36 (left: 6 36)",
                "6 * 6 = 36 (left: 6 6 36)\n6 / 6 = 1 (left: 1 36)\n36 / 1 = 36 (left: 36)",
                "6 - 6 = 0 (left: 0 6 6)\n0 * 6 = 0 (left: 6 6)",
                "6 - 6 = 0 (left: 0 6 6)",
                "6 * 6 = 36 (left: 6 6 36)\n6 / 6 = 1 (left: 1 36)\n36 / 1 = 36 (left: 36)",
                "6 / 6 = 1 (left: 1 6 6)\n6 - 1 = 5 (left: 1 5)"
            ]
        },
        "step_7": {
            "steps": [
                "6 * 6 = 36 (left: 6 6 36)\n6 / 6 = 1 (left: 1 36)\n1 * 36 = 36 (left: 36)\n36 - 2 = 34 (left: 34)",
                "6 + 6 = 12 (left: 6 12 6)\n6 * 2 = 12 (left: 12 12)\n12 - 12 = 0 (left: 0)",
                "6 * 6 = 36 (left: 6 6 36)\n6 / 6 = 1 (left: 1 36)",
                "6 / 6 = 1 (left: 1 6 6)\n6 / 1 = 6 (left: 6 6)\n6 / 6 = 1 (left: 1 6)",
                "6 / 6 = 1 (left: 1 6 6)\n6 / 1 = 6 (left: 6 6)\n6 * 6 = 36 (left: 6 36)\n36 / 6 = 6 (left: 6)",
                "6 * 6 = 36 (left: 6 6 36)\n6 / 6 = 1 (left: 1 36)\n36 / 1 = 36 (left: 36)\n36 - 2 = 34 (left: 2 34 36)",
                "6 - 6 = 0 (left: 0 6 6)\n0 * 6 = 0 (left: 6 6)\n6 / 6 = 1 (left: 1 6)",
                "6 - 6 = 0 (left: 0 6 6)\n6 + 6 = 12 (left: 0 12)",
                "6 * 6 = 36 (left: 6 6 36)\n6 / 6 = 1 (left: 1 36)\n36 / 1 = 36 (left: 36)\n36 * 2 = 72 (left: 72)",
                "6 / 6 = 1 (left: 1 6 6)\n6 - 1 = 5 (left: 1 5)\n5 / 1 = 5 (left: 1 5)"
            ],
            "values": [
                0.002,
                20.001,
                40.001,
                40.001,
                0.002,
                1.002,
                21.0,
                20.001,
                0.003,
                40.0
            ],
            "resampled": [
                "0 <- 7.1",
                "1 <- 1.3",
                "2 <- 7.7",
                "3 <- 4.7",
                "4 <- 2.1",
                "5 <- 7.6",
                "6 <- 7.3",
                "7 <- 6.4",
                "8 <- 2.3",
                "9 <- 7.1"
            ],
            "resampled_steps": [
                "6 + 6 = 12 (left: 6 12 6)\n6 * 2 = 12 (left: 12 12)\n12 - 12 = 0 (left: 0)",
                "6 / 6 = 1 (left: 1 6 6)",
                "6 - 6 = 0 (left: 0 6 6)\n6 + 6 = 12 (left: 0 12)",
                "6 / 6 = 1 (left: 1 6 6)\n6 / 1 = 6 (left: 6 6)\n6 * 6 = 36 (left: 6 36)",
                "6 / 6 = 1 (left: 1 6 6)\n1 * 6 = 6 (left: 6 6)",
                "6 - 6 = 0 (left: 0 6 6)\n0 * 6 = 0 (left: 6 6)\n6 / 6 = 1 (left: 1 6)",
                "6 / 6 = 1 (left: 1 6 6)\n6 / 1 = 6 (left: 6 6)\n6 / 6 = 1 (left: 1 6)",
                "6 * 6 = 36 (left: 6 6 36)\n6 / 6 = 1 (left: 1 36)\n36 / 1 = 36 (left: 36)",
                "6 - 6 = 0 (left: 0 6 6)\n0 + 6 = 6 (left: 6 6)",
                "6 + 6 = 12 (left: 6 12 6)\n6 * 2 = 12 (left: 12 12)\n12 - 12 = 0 (left: 0)"
            ]
        },
        "step_8": {
            "steps": [
                "6 + 6 = 12 (left: 6 12 6)\n6 * 2 = 12 (left: 12 12)\n12 - 12 = 0 (left: 0)\nThere are no possible next steps as there is no input provided.",
                "6 / 6 = 1 (left: 1 6 6)\n6 * 6 = 36 (left: 1 36)",
                "6 - 6 = 0 (left: 0 6 6)\n6 + 6 = 12 (left: 0 12)\n12 / 0 = undefined",
                "6 / 6 = 1 (left: 1 6 6)\n6 / 1 = 6 (left: 6 6)\n6 * 6 = 36 (left: 6 36)\n36 / 6 = 6 (left: 6)",
                "6 / 6 = 1 (left: 1 6 6)\n1 * 6 = 6 (left: 6 6)\n6 - 6 = 0 (left: 0)",
                "6 - 6 = 0 (left: 0 6 6)\n0 * 6 = 0 (left: 6 6)\n6 / 6 = 1 (left: 1 6)\n1 * 6 = 6 (left: 6)",
                "6 / 6 = 1 (left: 1 6 6)\n6 / 1 = 6 (left: 6 6)\n6 / 6 = 1 (left: 1 6)\n1 + 6 = 7 (left: 7)",
                "6 * 6 = 36 (left: 6 6 36)\n6 / 6 = 1 (left: 1 36)\n36 / 1 = 36 (left: 36)\n36 - 2 = 34 (left: 2 34)",
                "6 - 6 = 0 (left: 0 6 6)\n0 + 6 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)",
                "6 + 6 = 12 (left: 6 12 6)\n6 * 2 = 12 (left: 12 12)\n12 - 12 = 0 (left: 0)\nThere are no possible next steps as there are no numbers provided to perform any operations on."
            ],
            "values": [
                0.003,
                60.0,
                0.003,
                0.002,
                20.0,
                0.003,
                0.003,
                1.001,
                20.0,
                0.003
            ],
            "resampled": [
                "0 <- 4.5",
                "1 <- 7.3",
                "2 <- 4.6",
                "3 <- 4.5",
                "4 <- 7.3",
                "5 <- 7.3",
                "6 <- 3.1",
                "7 <- 1.3",
                "8 <- 7.6",
                "9 <- 7.6"
            ],
            "resampled_steps": [
                "6 + 6 = 12 (left: 6 12 6)\n6 * 12 = 72 (left: 72 6)",
                "6 / 6 = 1 (left: 1 6 6)\n6 / 1 = 6 (left: 6 6)\n6 / 6 = 1 (left: 1 6)",
                "6 / 6 = 1 (left: 1 6 6)\n6 - 1 = 5 (left: 1 5)",
                "6 + 6 = 12 (left: 6 12 6)\n6 * 12 = 72 (left: 72 6)",
                "6 / 6 = 1 (left: 1 6 6)\n6 / 1 = 6 (left: 6 6)\n6 / 6 = 1 (left: 1 6)",
                "6 / 6 = 1 (left: 1 6 6)\n6 / 1 = 6 (left: 6 6)\n6 / 6 = 1 (left: 1 6)",
                "6 - 6 = 0 (left: 0 6 6)\n0 + 6 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)",
                "6 / 6 = 1 (left: 1 6 6)",
                "6 - 6 = 0 (left: 0 6 6)\n0 * 6 = 0 (left: 6 6)\n6 / 6 = 1 (left: 1 6)",
                "6 - 6 = 0 (left: 0 6 6)\n0 * 6 = 0 (left: 6 6)\n6 / 6 = 1 (left: 1 6)"
            ]
        },
        "step_9": {
            "steps": [
                "6 + 6 = 12 (left: 6 12 6)\n6 * 12 = 72 (left: 72 6)\n72 * 6 = 432 (left: 432)",
                "6 / 6 = 1 (left: 1 6 6)\n6 / 1 = 6 (left: 6 6)\n6 / 6 = 1 (left: 1 6)\n6 - 1 = 5 (left: 5)",
                "6 / 6 = 1 (left: 1 6 6)\n6 - 1 = 5 (left: 1 5)\n5 / 1 = 5 (left: 5)",
                "6 + 6 = 12 (left: 6 12 6)\n6 * 12 = 72 (left: 72 6)\n72 - 6 = 66 (left: 66)",
                "6 / 6 = 1 (left: 1 6 6)\n6 / 1 = 6 (left: 6 6)\n6 / 6 = 1 (left: 1 6)\n6 - 1 = 5 (left: 5)",
                "6 / 6 = 1 (left: 1 6 6)\n6 / 1 = 6 (left: 6 6)\n6 / 6 = 1 (left: 1 6)\n1 + 6 = 7 (left: 7)",
                "6 - 6 = 0 (left: 0 6 6)\n0 + 6 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)\n36 * 2 = 72 (left: 72)",
                "6 / 6 = 1 (left: 1 6 6)\n1 + 6 = 7 (left: 6 7)",
                "6 - 6 = 0 (left: 0 6 6)\n0 * 6 = 0 (left: 6 6)\n6 / 6 = 1 (left: 1 6)\n1 * 6 = 6 (left: 6) ",
                "6 - 6 = 0 (left: 0 6 6)\n0 * 6 = 0 (left: 6 6)\n6 / 6 = 1 (left: 1 6)\n6 - 1 = 5 (left: 5)"
            ],
            "values": [
                0.003,
                0.001,
                0.003,
                0.003,
                0.002,
                0.003,
                20.002,
                21.001,
                0.003,
                0.002
            ],
            "resampled": [
                "0 <- 7.3",
                "1 <- 7.9",
                "2 <- 4.7",
                "3 <- 7.9",
                "4 <- 7.6",
                "5 <- 8.1",
                "6 <- 1.9",
                "7 <- 4.9",
                "8 <- 7.3",
                "9 <- 4.4"
            ],
            "resampled_steps": [
                "6 / 6 = 1 (left: 1 6 6)\n6 / 1 = 6 (left: 6 6)\n6 / 6 = 1 (left: 1 6)",
                "6 / 6 = 1 (left: 1 6 6)\n6 - 1 = 5 (left: 1 5)\n5 / 1 = 5 (left: 1 5)",
                "6 / 6 = 1 (left: 1 6 6)\n6 / 1 = 6 (left: 6 6)\n6 * 6 = 36 (left: 6 36)",
                "6 / 6 = 1 (left: 1 6 6)\n6 - 1 = 5 (left: 1 5)\n5 / 1 = 5 (left: 1 5)",
                "6 - 6 = 0 (left: 0 6 6)\n0 * 6 = 0 (left: 6 6)\n6 / 6 = 1 (left: 1 6)",
                "6 / 6 = 1 (left: 1 6 6)\n6 * 6 = 36 (left: 1 36)",
                "6 * 6 = 36 (left: 6 6 36)",
                "6 - 6 = 0 (left: 0 6 6)\n0 * 6 = 0 (left: 6 6)",
                "6 / 6 = 1 (left: 1 6 6)\n6 / 1 = 6 (left: 6 6)\n6 / 6 = 1 (left: 1 6)",
                "6 * 6 = 36 (left: 6 6 36)\n6 / 6 = 1 (left: 1 36)"
            ]
        },
        "step_10": {
            "steps": [
                "6 / 6 = 1 (left: 1 6 6)\n6 / 1 = 6 (left: 6 6)\n6 / 6 = 1 (left: 1 6)\n6 - 1 = 5 (left: 5)",
                "6 / 6 = 1 (left: 1 6 6)\n6 - 1 = 5 (left: 1 5)\n5 / 1 = 5 (left: 1 5)\n1 * 5 = 5 (left: 5)",
                "6 / 6 = 1 (left: 1 6 6)\n6 / 1 = 6 (left: 6 6)\n6 * 6 = 36 (left: 6 36)\n36 / 6 = 6 (left: 6)",
                "6 / 6 = 1 (left: 1 6 6)\n6 - 1 = 5 (left: 1 5)\n5 / 1 = 5 (left: 1 5)\n1 * 5 = 5 (left: 5) ",
                "6 - 6 = 0 (left: 0 6 6)\n0 * 6 = 0 (left: 6 6)\n6 / 6 = 1 (left: 1 6)\n6 / 1 = 6 (left: 6)",
                "6 / 6 = 1 (left: 1 6 6)\n6 * 6 = 36 (left: 1 36)\n36 - 1 = 35 (left: 35)",
                "6 * 6 = 36 (left: 6 6 36)\n6 + 6 = 12 (left: 12 36)",
                "6 - 6 = 0 (left: 0 6 6)\n0 * 6 = 0 (left: 6 6)\n6 + 6 = 12 (left: 12)",
                "6 / 6 = 1 (left: 1 6 6)\n6 / 1 = 6 (left: 6 6)\n6 / 6 = 1 (left: 1 6)\n1 * 6 = 6 (left: 6)",
                "6 * 6 = 36 (left: 6 6 36)\n6 / 6 = 1 (left: 1 36)\n1 + 36 = 37 (left: 37)"
            ],
            "values": [
                0.001,
                0.003,
                0.002,
                0.001,
                0.001,
                0.003,
                20.001,
                0.002,
                0.003,
                0.002
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 0.291433
    },
    "5": {
        "input": "1 1 2 12",
        "step_1": {
            "steps": [
                "1 * 2 = 2 (left: 2 2 12)",
                "12 / 2 = 6 (left: 1 2 6)",
                "12 - 2 = 10 (left: 2 10 12)",
                "2 * 2 = 4 (left: 1 4 12)",
                "12 - 2 = 10 (left: 1 1 10)",
                "1 * 2 = 2 (left: 2 2 12)",
                "1 + 2 = 3 (left: 1 3 12)",
                "1 * 1 = 1 (left: 1 2 12)",
                "1 * 2 = 2 (left: 2 2 12)",
                "1 * 2 = 2 (left: 2 2 12)"
            ],
            "values": [
                0.003,
                3.0,
                1.002,
                0.003,
                21.001,
                20.002,
                60.0,
                41.0,
                1.002,
                0.003
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- 1.6",
                "2 <- 1.6",
                "3 <- 1.7",
                "4 <- 1.6",
                "5 <- 1.5",
                "6 <- 1.7",
                "7 <- 1.7",
                "8 <- 1.5",
                "9 <- 1.7"
            ],
            "resampled_steps": [
                "",
                "1 + 2 = 3 (left: 1 3 12)",
                "1 + 2 = 3 (left: 1 3 12)",
                "1 * 1 = 1 (left: 1 2 12)",
                "1 + 2 = 3 (left: 1 3 12)",
                "1 * 2 = 2 (left: 2 2 12)",
                "1 * 1 = 1 (left: 1 2 12)",
                "1 * 1 = 1 (left: 1 2 12)",
                "1 * 2 = 2 (left: 2 2 12)",
                "1 * 1 = 1 (left: 1 2 12)"
            ]
        },
        "step_2": {
            "steps": [
                "2 * 1 = 2 (left: 2 2 12)",
                "1 + 2 = 3 (left: 1 3 12)\n12 / 3 = 4 (left: 4 12)",
                "1 + 2 = 3 (left: 1 3 12)\n1 * 3 = 3 (left: 3 12)",
                "1 * 1 = 1 (left: 1 2 12)\n12 / 2 = 6 (left: 6 12)",
                "1 + 2 = 3 (left: 1 3 12)\n1 + 3 = 4 (left: 4 12)",
                "1 * 2 = 2 (left: 2 2 12)\n2 * 2 = 4 (left: 4 12)",
                "1 * 1 = 1 (left: 1 2 12)\n12 / 1 = 12 (left: 2 12)",
                "1 * 1 = 1 (left: 1 2 12)\n12 - 2 = 10 (left: 1 10)",
                "1 * 2 = 2 (left: 2 2 12)\n2 * 2 = 4 (left: 4 12)",
                "1 * 1 = 1 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)"
            ],
            "values": [
                40.001,
                1.001,
                1.002,
                1.002,
                2.001,
                1.001,
                60.0,
                41.0,
                1.002,
                60.0
            ],
            "resampled": [
                "0 <- 2.9",
                "1 <- 2.6",
                "2 <- 2.7",
                "3 <- 2.6",
                "4 <- 2.9",
                "5 <- 1.4",
                "6 <- 2.9",
                "7 <- 2.0",
                "8 <- 2.6",
                "9 <- 1.6"
            ],
            "resampled_steps": [
                "1 * 1 = 1 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)",
                "1 * 1 = 1 (left: 1 2 12)\n12 / 1 = 12 (left: 2 12)",
                "1 * 1 = 1 (left: 1 2 12)\n12 - 2 = 10 (left: 1 10)",
                "1 * 1 = 1 (left: 1 2 12)\n12 / 1 = 12 (left: 2 12)",
                "1 * 1 = 1 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)",
                "12 - 2 = 10 (left: 1 1 10)",
                "1 * 1 = 1 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)",
                "2 * 1 = 2 (left: 2 2 12)",
                "1 * 1 = 1 (left: 1 2 12)\n12 / 1 = 12 (left: 2 12)",
                "1 + 2 = 3 (left: 1 3 12)"
            ]
        },
        "step_3": {
            "steps": [
                "1 * 1 = 1 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)\n1 + 6 = 7 (left: 7)",
                "1 * 1 = 1 (left: 1 2 12)\n12 / 1 = 12 (left: 2 12)\n12 / 2 = 6 (left: 6)",
                "1 * 1 = 1 (left: 1 2 12)\n12 - 2 = 10 (left: 1 10)\n10 / 1 = 10 (left: 10)",
                "1 * 1 = 1 (left: 1 2 12)\n12 / 1 = 12 (left: 2 12)\n12 / 2 = 6 (left: 6)",
                "1 * 1 = 1 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)\n1 + 6 = 7 (left: 7)",
                "12 - 2 = 10 (left: 1 1 10)\n1 * 1 = 1 (left: 1 10)",
                "1 * 1 = 1 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)\n6 / 1 = 6 (left: 6)",
                "2 * 1 = 2 (left: 2 2 12)\n12 - 2 = 10 (left: 2 10)",
                "1 * 1 = 1 (left: 1 2 12)\n12 / 1 = 12 (left: 2 12)\n12 / 2 = 6 (left: 6)",
                "1 + 2 = 3 (left: 1 3 12)\n1 * 3 = 3 (left: 3 12)"
            ],
            "values": [
                0.001,
                0.003,
                0.003,
                0.002,
                0.003,
                40.0,
                0.002,
                2.001,
                0.003,
                1.002
            ],
            "resampled": [
                "0 <- 1.6",
                "1 <- 2.0",
                "2 <- 2.9",
                "3 <- 1.6",
                "4 <- 1.7",
                "5 <- 1.7",
                "6 <- 2.9",
                "7 <- 2.7",
                "8 <- 1.1",
                "9 <- 3.5"
            ],
            "resampled_steps": [
                "1 + 2 = 3 (left: 1 3 12)",
                "2 * 1 = 2 (left: 2 2 12)",
                "1 * 1 = 1 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)",
                "1 + 2 = 3 (left: 1 3 12)",
                "1 * 1 = 1 (left: 1 2 12)",
                "1 * 1 = 1 (left: 1 2 12)",
                "1 * 1 = 1 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)",
                "1 * 1 = 1 (left: 1 2 12)\n12 - 2 = 10 (left: 1 10)",
                "12 / 2 = 6 (left: 1 2 6)",
                "12 - 2 = 10 (left: 1 1 10)\n1 * 1 = 1 (left: 1 10)"
            ]
        },
        "step_4": {
            "steps": [
                "1 + 2 = 3 (left: 1 3 12)\n1 + 3 = 4 (left: 4 12)",
                "2 * 1 = 2 (left: 2 2 12)\n12 + 2 = 14 (left: 2 14)",
                "1 * 1 = 1 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)\n6 / 1 = 6 (left: 6)",
                "1 + 2 = 3 (left: 1 3 12)\n12 - 1 = 11 (left: 3 11)",
                "1 * 1 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)",
                "1 * 1 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)",
                "1 * 1 = 1 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)\n6 / 1 = 6 (left: 6)",
                "1 * 1 = 1 (left: 1 2 12)\n12 - 2 = 10 (left: 1 10)\n1 * 10 = 10 (left: 10)",
                "12 / 2 = 6 (left: 1 2 6)\n1 + 2 = 3 (left: 3 6)",
                "12 - 2 = 10 (left: 1 1 10)\n1 * 1 = 1 (left: 1 10)\n1 + 10 = 11 (left: 11)"
            ],
            "values": [
                1.002,
                0.003,
                0.002,
                0.003,
                60.0,
                60.0,
                0.002,
                0.003,
                1.002,
                20.001
            ],
            "resampled": [
                "0 <- 1.7",
                "1 <- 2.6",
                "2 <- 1.6",
                "3 <- 4.4",
                "4 <- 4.5",
                "5 <- 4.4",
                "6 <- 2.0",
                "7 <- 4.5",
                "8 <- 2.7",
                "9 <- 3.5"
            ],
            "resampled_steps": [
                "1 * 1 = 1 (left: 1 2 12)",
                "1 * 1 = 1 (left: 1 2 12)\n12 / 1 = 12 (left: 2 12)",
                "1 + 2 = 3 (left: 1 3 12)",
                "1 * 1 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)",
                "1 * 1 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)",
                "1 * 1 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)",
                "2 * 1 = 2 (left: 2 2 12)",
                "1 * 1 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)",
                "1 * 1 = 1 (left: 1 2 12)\n12 - 2 = 10 (left: 1 10)",
                "12 - 2 = 10 (left: 1 1 10)\n1 * 1 = 1 (left: 1 10)"
            ]
        },
        "step_5": {
            "steps": [
                "1 * 1 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)",
                "1 * 1 = 1 (left: 1 2 12)\n12 / 1 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "1 + 2 = 3 (left: 1 3 12)\n3 * 4 = 12 (left: 12 12)",
                "1 * 1 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n24 / 1 = 24 (left: 1 24)",
                "1 * 1 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n1 + 24 = 25 (left: 25)",
                "1 * 1 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n24 / 1 = 24 (left: 1 24)",
                "2 * 1 = 2 (left: 2 2 12)\n2 - 2 = 0 (left: 0 12)",
                "1 * 1 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)",
                "1 * 1 = 1 (left: 1 2 12)\n12 - 2 = 10 (left: 1 10)\n10 / 1 = 10 (left: 10)",
                "12 - 2 = 10 (left: 1 1 10)\n1 * 1 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10)"
            ],
            "values": [
                60.0,
                40.0,
                21.001,
                60.0,
                0.002,
                60.0,
                60.0,
                60.0,
                0.002,
                0.003
            ],
            "resampled": [
                "0 <- 4.9",
                "1 <- 5.7",
                "2 <- 5.5",
                "3 <- 5.0",
                "4 <- 4.4",
                "5 <- 1.7",
                "6 <- 4.5",
                "7 <- 2.0",
                "8 <- 5.7",
                "9 <- 2.6"
            ],
            "resampled_steps": [
                "12 - 2 = 10 (left: 1 1 10)\n1 * 1 = 1 (left: 1 10)\n1 + 10 = 11 (left: 11)",
                "1 * 1 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)",
                "1 * 1 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n24 / 1 = 24 (left: 1 24)",
                "1 * 1 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)",
                "1 * 1 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)",
                "1 * 1 = 1 (left: 1 2 12)",
                "1 * 1 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)",
                "2 * 1 = 2 (left: 2 2 12)",
                "1 * 1 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)",
                "1 * 1 = 1 (left: 1 2 12)\n12 / 1 = 12 (left: 2 12)"
            ]
        },
        "step_6": {
            "steps": [
                "12 - 2 = 10 (left: 1 1 10)\n1 * 1 = 1 (left: 1 10)\n1 + 10 = 11 (left: 11)\n11 - 2 = 9 (left: 2 9)",
                "1 * 1 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)\nAnswer: (1 * 1) * (2 * 12) = 24",
                "1 * 1 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n24 / 1 = 24 (left: 1 24)\n24 - 1 = 23 (left: 1 23)",
                "1 * 1 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n1 + 24 = 25 (left: 25)",
                "1 * 1 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n24 - 1 = 23 (left: 23)",
                "1 * 1 = 1 (left: 1 2 12)\n1 + 2 = 3 (left: 3 12)",
                "1 * 1 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n1 + 24 = 25 (left: 25)",
                "2 * 1 = 2 (left: 2 2 12)\n12 * 2 = 24 (left: 2 24)",
                "1 * 1 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)\nAnswer: (1 * 1) * (2 * 12) = 24",
                "1 * 1 = 1 (left: 1 2 12)\n12 / 1 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)"
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            }
        ],
        "cost": 0.33871700000000005
    },
    "6": {
        "input": "1 2 2 6",
        "step_1": {
            "steps": [
                "6 - 1 = 5 (left: 5 2 6)",
                "2 * 2 = 4 (left: 1 4 6)",
                "2 + 2 = 4 (left: 4 4 6)",
                "2 * 2 = 4 (left: 4 2 6)",
                "1 + 2 = 3 (left: 2 3 6)",
                "2 + 2 = 4 (left: 4 4)",
                "6 - 2 = 4 (left: 1 4 6)",
                "1 + 2 = 3 (left: 2 3 6)",
                "6 / 2 = 3 (left: 1 3 6)",
                "6 - 2 = 4 (left: 1 4 6)"
            ],
            "values": [
                3.0,
                60.0,
                3.0,
                1.002,
                22.0,
                2.0,
                60.0,
                2.001,
                2.0,
                60.0
            ],
            "resampled": [
                "0 <- 1.6",
                "1 <- 1.1",
                "2 <- 1.6",
                "3 <- INIT",
                "4 <- 1.6",
                "5 <- 1.9",
                "6 <- 1.6",
                "7 <- 1.6",
                "8 <- 1.1",
                "9 <- 1.6"
            ],
            "resampled_steps": [
                "6 - 2 = 4 (left: 1 4 6)",
                "2 * 2 = 4 (left: 1 4 6)",
                "6 - 2 = 4 (left: 1 4 6)",
                "",
                "6 - 2 = 4 (left: 1 4 6)",
                "6 - 2 = 4 (left: 1 4 6)",
                "6 - 2 = 4 (left: 1 4 6)",
                "6 - 2 = 4 (left: 1 4 6)",
                "2 * 2 = 4 (left: 1 4 6)",
                "6 - 2 = 4 (left: 1 4 6)"
            ]
        },
        "step_2": {
            "steps": [
                "6 - 2 = 4 (left: 1 4 6)\n6 / 4 = 1.5 (left: 1.5 6)",
                "2 * 2 = 4 (left: 1 4 6)\n6 - 4 = 2 (left: 1 2)",
                "6 - 2 = 4 (left: 1 4 6)\n6 / 4 = 1.5 (left: 1.5 6)",
                "2 * 6 = 12 (left: 12)",
                "6 - 2 = 4 (left: 1 4 6)\n4 + 6 = 10 (left: 1 10)",
                "6 - 2 = 4 (left: 1 4 6)\n4 - 1 = 3 (left: 3 6)",
                "6 - 2 = 4 (left: 1 4 6)\n1 * 6 = 6 (left: 4 6)",
                "6 - 2 = 4 (left: 1 4 6)\n4 - 1 = 3 (left: 3 6)",
                "2 * 2 = 4 (left: 1 4 6)\n4 / 1 = 4 (left: 4 6)",
                "6 - 2 = 4 (left: 1 4 6)\n6 - 4 = 2 (left: 1 2)"
            ],
            "values": [
                2.0,
                0.001,
                2.0,
                0.001,
                41.0,
                1.0,
                60.0,
                2.001,
                60.0,
                1.001
            ],
            "resampled": [
                "0 <- 2.6",
                "1 <- 1.6",
                "2 <- 2.4",
                "3 <- 1.9",
                "4 <- INIT",
                "5 <- 2.8",
                "6 <- 1.1",
                "7 <- 2.8",
                "8 <- 2.8",
                "9 <- 1.9"
            ],
            "resampled_steps": [
                "6 - 2 = 4 (left: 1 4 6)\n1 * 6 = 6 (left: 4 6)",
                "6 - 2 = 4 (left: 1 4 6)",
                "6 - 2 = 4 (left: 1 4 6)\n4 + 6 = 10 (left: 1 10)",
                "6 - 2 = 4 (left: 1 4 6)",
                "",
                "2 * 2 = 4 (left: 1 4 6)\n4 / 1 = 4 (left: 4 6)",
                "2 * 2 = 4 (left: 1 4 6)",
                "2 * 2 = 4 (left: 1 4 6)\n4 / 1 = 4 (left: 4 6)",
                "2 * 2 = 4 (left: 1 4 6)\n4 / 1 = 4 (left: 4 6)",
                "6 - 2 = 4 (left: 1 4 6)"
            ]
        },
        "step_3": {
            "steps": [
                "6 - 2 = 4 (left: 1 4 6)\n1 * 6 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "6 - 2 = 4 (left: 1 4 6)\n1 + 4 = 5 (left: 5 6)",
                "6 - 2 = 4 (left: 1 4 6)\n4 + 6 = 10 (left: 1 10)\n1 + 10 = 11 (left: 11)",
                "6 - 2 = 4 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)",
                "6 / 2 = 3 (left: 2 3 6)",
                "2 * 2 = 4 (left: 1 4 6)\n4 / 1 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)",
                "2 * 2 = 4 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)",
                "2 * 2 = 4 (left: 1 4 6)\n4 / 1 = 4 (left: 4 6)\n6 - 4 = 2 (left: 2)",
                "2 * 2 = 4 (left: 1 4 6)\n4 / 1 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "6 - 2 = 4 (left: 1 4 6)\nInput: 3 9 12 15"
            ],
            "values": [
                60.0,
                0.002,
                0.003,
                60.0,
                2.001,
                0.003,
                60.0,
                0.003,
                60.0,
                0.002
            ],
            "resampled": [
                "0 <- 1.9",
                "1 <- 3.3",
                "2 <- 2.8",
                "3 <- 2.6",
                "4 <- 3.6",
                "5 <- 3.6",
                "6 <- 2.4",
                "7 <- 2.6",
                "8 <- 1.1",
                "9 <- 1.1"
            ],
            "resampled_steps": [
                "6 - 2 = 4 (left: 1 4 6)",
                "6 - 2 = 4 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)",
                "2 * 2 = 4 (left: 1 4 6)\n4 / 1 = 4 (left: 4 6)",
                "6 - 2 = 4 (left: 1 4 6)\n1 * 6 = 6 (left: 4 6)",
                "2 * 2 = 4 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)",
                "2 * 2 = 4 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)",
                "6 - 2 = 4 (left: 1 4 6)\n4 + 6 = 10 (left: 1 10)",
                "6 - 2 = 4 (left: 1 4 6)\n1 * 6 = 6 (left: 4 6)",
                "2 * 2 = 4 (left: 1 4 6)",
                "2 * 2 = 4 (left: 1 4 6)"
            ]
        },
        "step_4": {
            "steps": [
                "6 - 2 = 4 (left: 1 4 6)\n6 - 4 = 2 (left: 1 2)",
                "6 - 2 = 4 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n1 + 24 = 25 (left: 25)",
                "2 * 2 = 4 (left: 1 4 6)\n4 / 1 = 4 (left: 4 6)\n4 + 6 = 10 (left: 6 10)",
                "6 - 2 = 4 (left: 1 4 6)\n1 * 6 = 6 (left: 4 6)\n6 / 4 = 1.5 (left: 1.5)",
                "2 * 2 = 4 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)",
                "2 * 2 = 4 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n1 + 24 = 25 (left: 25)",
                "6 - 2 = 4 (left: 1 4 6)\n4 + 6 = 10 (left: 1 10)\n1 + 10 = 11 (left: 11)",
                "6 - 2 = 4 (left: 1 4 6)\n1 * 6 = 6 (left: 4 6)\n6 - 4 = 2 (left: 2)",
                "2 * 2 = 4 (left: 1 4 6)\nPossible next steps:",
                "2 * 2 = 4 (left: 1 4 6)\n3 + 9 = 12 (left: 12 12)"
            ],
            "values": [
                1.002,
                0.002,
                1.002,
                0.003,
                60.0,
                0.003,
                0.001,
                0.003,
                0.003,
                0.002
            ],
            "resampled": [
                "0 <- 4.4",
                "1 <- 2.4",
                "2 <- 4.4",
                "3 <- 2.4",
                "4 <- 4.4",
                "5 <- 3.6",
                "6 <- 2.6",
                "7 <- 1.9",
                "8 <- 3.6",
                "9 <- 3.0"
            ],
            "resampled_steps": [
                "2 * 2 = 4 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)",
                "6 - 2 = 4 (left: 1 4 6)\n4 + 6 = 10 (left: 1 10)",
                "2 * 2 = 4 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)",
                "6 - 2 = 4 (left: 1 4 6)\n4 + 6 = 10 (left: 1 10)",
                "2 * 2 = 4 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)",
                "2 * 2 = 4 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)",
                "6 - 2 = 4 (left: 1 4 6)\n1 * 6 = 6 (left: 4 6)",
                "6 - 2 = 4 (left: 1 4 6)",
                "2 * 2 = 4 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)",
                "6 - 2 = 4 (left: 1 4 6)\n1 * 6 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)"
            ]
        },
        "step_5": {
            "steps": [
                "2 * 2 = 4 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)\nAnswer: (1 * 2 * 2) * 6 = 24",
                "6 - 2 = 4 (left: 1 4 6)\n4 + 6 = 10 (left: 1 10)\n10 - 1 = 9 (left: 9)",
                "2 * 2 = 4 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)\nAnswer: 1 * (2 * 2 * 6) = 24",
                "6 - 2 = 4 (left: 1 4 6)\n4 + 6 = 10 (left: 1 10)\n1 * 10 = 10 (left: 10)",
                "2 * 2 = 4 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)\nAnswer: (1 * (2 * 2)) * 6 = 24",
                "2 * 2 = 4 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n24 - 1 = 23 (left: 23)",
                "6 - 2 = 4 (left: 1 4 6)\n1 * 6 = 6 (left: 4 6)\n6 / 4 = 1.5 (left: 1.5)",
                "6 - 2 = 4 (left: 1 4 6)\nInput: 3 9 12",
                "2 * 2 = 4 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)",
                "6 - 2 = 4 (left: 1 4 6)\n1 * 6 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 * 6) * (6 - 2) = 24"
            ]
        },
        "results": [
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 0.378634
    },
    "7": {
        "input": "1 1 10 12",
        "step_1": {
            "steps": [
                "10 - 1 = 9 (left: 1 9 12)",
                "10 * 1 = 10 (left: 10 10 12)",
                "12 - 10 = 2 (left: 1 2 12)",
                "10 + 1 = 11 (left: 1 11 12)",
                "1 + 1 = 2 (left: 2 10 12)",
                "1 * 10 = 10 (left: 1 10 12)",
                "12 / 1 = 12 (left: 1 10 12)",
                "1 + 1 = 2 (left: 2 10 12)",
                "1 + 1 = 2 (left: 2 10 12)",
                "10 * 1 = 10 (left: 1 10 12)"
            ],
            "values": [
                0.001,
                1.002,
                60.0,
                40.001,
                20.002,
                1.002,
                1.002,
                21.001,
                2.0,
                1.002
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- 1.3",
                "2 <- INIT",
                "3 <- 1.2",
                "4 <- INIT",
                "5 <- 1.3",
                "6 <- 1.7",
                "7 <- 1.2",
                "8 <- 1.3",
                "9 <- 1.3"
            ],
            "resampled_steps": [
                "",
                "10 + 1 = 11 (left: 1 11 12)",
                "",
                "12 - 10 = 2 (left: 1 2 12)",
                "",
                "10 + 1 = 11 (left: 1 11 12)",
                "1 + 1 = 2 (left: 2 10 12)",
                "12 - 10 = 2 (left: 1 2 12)",
                "10 + 1 = 11 (left: 1 11 12)",
                "10 + 1 = 11 (left: 1 11 12)"
            ]
        },
        "step_2": {
            "steps": [
                "10 + 1 = 11 (left: 1 11 12)",
                "10 + 1 = 11 (left: 1 11 12)\n1 * 11 = 11 (left: 11 12)",
                "12 - 1 = 11 (left: 1 11 11)",
                "12 - 10 = 2 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)",
                "1 - 1 = 0 (left: 0 10 12)",
                "10 + 1 = 11 (left: 1 11 12)\n1 + 11 = 12 (left: 11 12)",
                "1 + 1 = 2 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)",
                "12 - 10 = 2 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)",
                "10 + 1 = 11 (left: 1 11 12)\n11 - 1 = 10 (left: 10 12)",
                "10 + 1 = 11 (left: 1 11 12)\n1 * 11 = 11 (left: 11 12)"
            ],
            "values": [
                21.001,
                0.003,
                0.002,
                60.0,
                1.002,
                0.003,
                60.0,
                60.0,
                0.002,
                1.002
            ],
            "resampled": [
                "0 <- 2.6",
                "1 <- 2.6",
                "2 <- 2.7",
                "3 <- 2.7",
                "4 <- 1.3",
                "5 <- 2.6",
                "6 <- 2.3",
                "7 <- 2.7",
                "8 <- 2.3",
                "9 <- 2.6"
            ],
            "resampled_steps": [
                "1 + 1 = 2 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)",
                "1 + 1 = 2 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)",
                "12 - 10 = 2 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)",
                "12 - 10 = 2 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)",
                "10 + 1 = 11 (left: 1 11 12)",
                "1 + 1 = 2 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)",
                "12 - 10 = 2 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)",
                "12 - 10 = 2 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)",
                "12 - 10 = 2 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)",
                "1 + 1 = 2 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)"
            ]
        },
        "step_3": {
            "steps": [
                "1 + 1 = 2 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "1 + 1 = 2 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)\n12 - 12 = 0 (left: 0)",
                "12 - 10 = 2 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n24 / 1 = 24 (left: 24)",
                "12 - 10 = 2 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)",
                "10 + 1 = 11 (left: 1 11 12)\n11 * 1 = 11 (left: 11 12)",
                "1 + 1 = 2 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)\n12 - 12 = 0 (left: 0)",
                "12 - 10 = 2 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)\n6 / 1 = 6 (left: 6)",
                "12 - 10 = 2 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n24 - 1 = 23 (left: 1 23)",
                "12 - 10 = 2 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)\n6 / 1 = 6 (left: 6)",
                "1 + 1 = 2 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)"
            ],
            "values": [
                60.0,
                20.0,
                40.0,
                20.0,
                0.001,
                20.001,
                0.003,
                22.0,
                0.002,
                40.0
            ],
            "resampled": [
                "0 <- 1.2",
                "1 <- 1.2",
                "2 <- 3.0",
                "3 <- 3.0",
                "4 <- 3.0",
                "5 <- 1.7",
                "6 <- 3.0",
                "7 <- 3.1",
                "8 <- 2.3",
                "9 <- 3.2"
            ],
            "resampled_steps": [
                "12 - 10 = 2 (left: 1 2 12)",
                "12 - 10 = 2 (left: 1 2 12)",
                "1 + 1 = 2 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "1 + 1 = 2 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "1 + 1 = 2 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "1 + 1 = 2 (left: 2 10 12)",
                "1 + 1 = 2 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "1 + 1 = 2 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)\n12 - 12 = 0 (left: 0)",
                "12 - 10 = 2 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)",
                "12 - 10 = 2 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n24 / 1 = 24 (left: 24)"
            ]
        },
        "step_4": {
            "steps": [
                "12 - 10 = 2 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)",
                "12 - 10 = 2 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)",
                "1 + 1 = 2 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: ((1 + 1) + 10) + 12 = 24",
                "1 + 1 = 2 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: ((1 + 1) + 10) + 12 = 24",
                "1 + 1 = 2 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: ((1 + 1) + 10) + 12 = 24",
                "1 + 1 = 2 (left: 2 10 12)\n10 / 2 = 5 (left: 2 5 12)",
                "1 + 1 = 2 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: ((1 + 1) + 10) + 12 = 24",
                "1 + 1 = 2 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)\n12 - 12 = 0 (left: 0)\nThere are no possible next steps because there are no numbers to operate on.",
                "12 - 10 = 2 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)\n1 + 6 = 7 (left: 7)",
                "12 - 10 = 2 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n24 / 1 = 24 (left: 24)\nAnswer: (12 - 10) * 12 / 1 = 24"
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 0.40868800000000005
    },
    "8": {
        "input": "2 2 10 10",
        "step_1": {
            "steps": [
                "2 * 2 = 4 (left: 4 10 10)",
                "10 - 2 = 8 (left: 2 10 8)",
                "2 * 2 = 4 (left: 4 10 10)",
                "10 - 2 = 8 (left: 2 10 8)",
                "2 + 2 = 4 (left: 4 10 10)",
                "2 * 2 = 4 (left: 4 10 10)",
                "2 * 2 = 4 (left: 4 10 10)",
                "10 / 2 = 5 (left: 2 5 10)",
                "2 * 2 = 4 (left: 4 10 10)",
                "10 - 2 = 8 (left: 2 8 10)"
            ],
            "values": [
                1.002,
                2.0,
                0.003,
                1.002,
                1.001,
                1.002,
                21.001,
                2.0,
                20.002,
                1.002
            ],
            "resampled": [
                "0 <- 1.7",
                "1 <- 1.6",
                "2 <- INIT",
                "3 <- 1.4",
                "4 <- 1.7",
                "5 <- INIT",
                "6 <- 1.8",
                "7 <- 1.6",
                "8 <- 1.6",
                "9 <- 1.1"
            ],
            "resampled_steps": [
                "10 / 2 = 5 (left: 2 5 10)",
                "2 * 2 = 4 (left: 4 10 10)",
                "",
                "2 + 2 = 4 (left: 4 10 10)",
                "10 / 2 = 5 (left: 2 5 10)",
                "",
                "2 * 2 = 4 (left: 4 10 10)",
                "2 * 2 = 4 (left: 4 10 10)",
                "2 * 2 = 4 (left: 4 10 10)",
                "10 - 2 = 8 (left: 2 10 8)"
            ]
        },
        "step_2": {
            "steps": [
                "10 / 2 = 5 (left: 2 5 10)\n2 + 5 = 7 (left: 7 10)",
                "2 * 2 = 4 (left: 4 10 10)\n4 + 10 = 14 (left: 10 14)",
                "2 * 2 = 4 (left: 4 10 10)",
                "2 + 2 = 4 (left: 4 10 10)\n10 / 4 = 2.5 (left: 2.5 10)",
                "10 / 2 = 5 (left: 2 5 10)\n10 - 5 = 5 (left: 2 5)",
                "2 * 10 = 20 (left: 20 10)",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 10)",
                "2 * 2 = 4 (left: 4 10 10)\n10 / 4 = 2.5 (left: 2.5 10)",
                "2 * 2 = 4 (left: 4 10 10)\n4 * 10 = 40 (left: 10 40)",
                "10 - 2 = 8 (left: 2 10 8)\n8 / 2 = 4 (left: 4)"
            ],
            "values": [
                1.0,
                60.0,
                22.0,
                1.002,
                0.0,
                0.003,
                1.001,
                1.001,
                0.002,
                0.003
            ],
            "resampled": [
                "0 <- 1.1",
                "1 <- 2.1",
                "2 <- 1.6",
                "3 <- 1.6",
                "4 <- INIT",
                "5 <- 1.6",
                "6 <- INIT",
                "7 <- INIT",
                "8 <- 2.1",
                "9 <- INIT"
            ],
            "resampled_steps": [
                "10 - 2 = 8 (left: 2 10 8)",
                "2 * 2 = 4 (left: 4 10 10)\n4 + 10 = 14 (left: 10 14)",
                "2 * 2 = 4 (left: 4 10 10)",
                "2 * 2 = 4 (left: 4 10 10)",
                "",
                "2 * 2 = 4 (left: 4 10 10)",
                "",
                "",
                "2 * 2 = 4 (left: 4 10 10)\n4 + 10 = 14 (left: 10 14)",
                ""
            ]
        },
        "step_3": {
            "steps": [
                "10 - 2 = 8 (left: 2 10 8)\n10 - 2 = 8 (left: 8 8)",
                "2 * 2 = 4 (left: 4 10 10)\n4 + 10 = 14 (left: 10 14)\n10 * 14 = 140 (left: 14 140)",
                "2 * 2 = 4 (left: 4 10 10)\n4 + 10 = 14 (left: 10 14)",
                "2 * 2 = 4 (left: 4 10 10)\n10 / 4 = 2.5 (left: 2.5 10)",
                "10 - 2 = 8 (left: 2 8 10)",
                "2 * 2 = 4 (left: 4 10 10)\n4 * 10 = 40 (left: 10 40)",
                "2 + 2 = 4 (left: 4 10 10)",
                "10 / 2 = 5 (left: 2 5 10)",
                "2 * 2 = 4 (left: 4 10 10)\n4 + 10 = 14 (left: 10 14)\n10 + 14 = 24 (left: 14 24)",
                "10 / 2 = 5 (left: 2 5 10)"
            ],
            "values": [
                0.002,
                1.001,
                60.0,
                2.0,
                21.001,
                0.003,
                20.002,
                1.001,
                0.003,
                20.002
            ],
            "resampled": [
                "0 <- 3.2",
                "1 <- 3.6",
                "2 <- INIT",
                "3 <- 3.9",
                "4 <- 3.4",
                "5 <- 1.6",
                "6 <- 1.6",
                "7 <- 3.2",
                "8 <- 3.9",
                "9 <- 3.2"
            ],
            "resampled_steps": [
                "2 * 2 = 4 (left: 4 10 10)\n4 + 10 = 14 (left: 10 14)",
                "2 + 2 = 4 (left: 4 10 10)",
                "",
                "10 / 2 = 5 (left: 2 5 10)",
                "10 - 2 = 8 (left: 2 8 10)",
                "2 * 2 = 4 (left: 4 10 10)",
                "2 * 2 = 4 (left: 4 10 10)",
                "2 * 2 = 4 (left: 4 10 10)\n4 + 10 = 14 (left: 10 14)",
                "10 / 2 = 5 (left: 2 5 10)",
                "2 * 2 = 4 (left: 4 10 10)\n4 + 10 = 14 (left: 10 14)"
            ]
        },
        "step_4": {
            "steps": [
                "2 * 2 = 4 (left: 4 10 10)\n4 + 10 = 14 (left: 10 14)\n14 - 10 = 4 (left: 4 14)",
                "2 + 2 = 4 (left: 4 10 10)\n4 + 10 = 14 (left: 10 14)",
                "10 - 2 = 8 (left: 2 8 10)",
                "10 / 2 = 5 (left: 2 5 10)\n5 - 2 = 3 (left: 3 10)",
                "10 - 2 = 8 (left: 2 8 10)\n10 - 2 = 8 (left: 8 10)",
                "2 * 2 = 4 (left: 4 10 10)\n4 * 10 = 40 (left: 10 40)",
                "2 * 2 = 4 (left: 4 10 10)\n4 * 10 = 40 (left: 10 40)",
                "2 * 2 = 4 (left: 4 10 10)\n4 + 10 = 14 (left: 10 14)\n10 - 14 = -4 (left: -4 14)",
                "10 / 2 = 5 (left: 2 5 10)\n10 - 2 = 8 (left: 5 8)",
                "2 * 2 = 4 (left: 4 10 10)\n4 + 10 = 14 (left: 10 14)\n10 * 14 = 140 (left: 14 140)"
            ],
            "values": [
                3.0,
                60.0,
                0.003,
                1.002,
                2.0,
                0.003,
                1.001,
                2.001,
                1.001,
                40.0
            ],
            "resampled": [
                "0 <- 4.1",
                "1 <- 2.1",
                "2 <- 4.7",
                "3 <- 4.9",
                "4 <- 3.2",
                "5 <- 2.2",
                "6 <- 3.2",
                "7 <- 2.1",
                "8 <- 4.1",
                "9 <- 4.1"
            ],
            "resampled_steps": [
                "2 + 2 = 4 (left: 4 10 10)\n4 + 10 = 14 (left: 10 14)",
                "2 * 2 = 4 (left: 4 10 10)\n4 + 10 = 14 (left: 10 14)",
                "2 * 2 = 4 (left: 4 10 10)\n4 + 10 = 14 (left: 10 14)\n10 - 14 = -4 (left: -4 14)",
                "2 * 2 = 4 (left: 4 10 10)\n4 + 10 = 14 (left: 10 14)\n10 * 14 = 140 (left: 14 140)",
                "2 * 2 = 4 (left: 4 10 10)\n4 + 10 = 14 (left: 10 14)",
                "2 * 2 = 4 (left: 4 10 10)",
                "2 * 2 = 4 (left: 4 10 10)\n4 + 10 = 14 (left: 10 14)",
                "2 * 2 = 4 (left: 4 10 10)\n4 + 10 = 14 (left: 10 14)",
                "2 + 2 = 4 (left: 4 10 10)\n4 + 10 = 14 (left: 10 14)",
                "2 + 2 = 4 (left: 4 10 10)\n4 + 10 = 14 (left: 10 14)"
            ]
        },
        "step_5": {
            "steps": [
                "2 + 2 = 4 (left: 4 10 10)\n4 + 10 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)",
                "2 * 2 = 4 (left: 4 10 10)\n4 + 10 = 14 (left: 10 14)\n10 / 14 = 0.7143 (left: 10 0.7143)",
                "2 * 2 = 4 (left: 4 10 10)\n4 + 10 = 14 (left: 10 14)\n10 - 14 = -4 (left: -4 14)\n14 / -4 = -3.5 (left: -3.5)",
                "2 * 2 = 4 (left: 4 10 10)\n4 + 10 = 14 (left: 10 14)\n10 * 14 = 140 (left: 14 140)\n14 * 10 = 140 (left: 140)",
                "2 * 2 = 4 (left: 4 10 10)\n4 + 10 = 14 (left: 10 14)\n14 / 10 = 1.4 (left: 1.4 14)",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 10)",
                "2 * 2 = 4 (left: 4 10 10)\n4 + 10 = 14 (left: 10 14)\n14 - 10 = 4 (left: 4 14)",
                "2 * 2 = 4 (left: 4 10 10)\n4 + 10 = 14 (left: 10 14)\n14 / 10 = 1.4 (left: 1.4)",
                "2 + 2 = 4 (left: 4 10 10)\n4 + 10 = 14 (left: 10 14)\n14 - 10 = 4 (left: 4 14)",
                "2 + 2 = 4 (left: 4 10 10)\n4 + 10 = 14 (left: 10 14)\n10 - 14 = -4 (left: -4 14)"
            ],
            "values": [
                20.0,
                2.0,
                0.002,
                0.003,
                3.0,
                1.002,
                1.002,
                0.002,
                0.0,
                0.001
            ],
            "resampled": [
                "0 <- 2.1",
                "1 <- 2.1",
                "2 <- 4.9",
                "3 <- 5.0",
                "4 <- 3.2",
                "5 <- 4.1",
                "6 <- 4.1",
                "7 <- 3.2",
                "8 <- 5.0",
                "9 <- 4.0"
            ],
            "resampled_steps": [
                "2 * 2 = 4 (left: 4 10 10)\n4 + 10 = 14 (left: 10 14)",
                "2 * 2 = 4 (left: 4 10 10)\n4 + 10 = 14 (left: 10 14)",
                "2 * 2 = 4 (left: 4 10 10)\n4 + 10 = 14 (left: 10 14)\n10 * 14 = 140 (left: 14 140)",
                "2 + 2 = 4 (left: 4 10 10)\n4 + 10 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)",
                "2 * 2 = 4 (left: 4 10 10)\n4 + 10 = 14 (left: 10 14)",
                "2 + 2 = 4 (left: 4 10 10)\n4 + 10 = 14 (left: 10 14)",
                "2 + 2 = 4 (left: 4 10 10)\n4 + 10 = 14 (left: 10 14)",
                "2 * 2 = 4 (left: 4 10 10)\n4 + 10 = 14 (left: 10 14)",
                "2 + 2 = 4 (left: 4 10 10)\n4 + 10 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)",
                "2 * 2 = 4 (left: 4 10 10)\n4 + 10 = 14 (left: 10 14)\n14 - 10 = 4 (left: 4 14)"
            ]
        },
        "step_6": {
            "steps": [
                "2 * 2 = 4 (left: 4 10 10)\n4 + 10 = 14 (left: 10 14)\n14 - 10 = 4 (left: 4)",
                "2 * 2 = 4 (left: 4 10 10)\n4 + 10 = 14 (left: 10 14)\n10 * 14 = 140 (left: 140)",
                "2 * 2 = 4 (left: 4 10 10)\n4 + 10 = 14 (left: 10 14)\n10 * 14 = 140 (left: 14 140)\n14 * 10 = 140 (left: 14 140)",
                "2 + 2 = 4 (left: 4 10 10)\n4 + 10 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: ((2 + 2) + 10) + 10 = 24",
                "2 * 2 = 4 (left: 4 10 10)\n4 + 10 = 14 (left: 10 14)\n10 - 14 = -4 (left: -4 14)",
                "2 + 2 = 4 (left: 4 10 10)\n4 + 10 = 14 (left: 10 14)\n10 * 14 = 140 (left: 14 140)",
                "2 + 2 = 4 (left: 4 10 10)\n4 + 10 = 14 (left: 10 14)\n14 / 10 = 1.4 (left: 10 1.4)",
                "2 * 2 = 4 (left: 4 10 10)\n4 + 10 = 14 (left: 10 14)\n10 / 14 = 0.71428571429 (left: 10 0.71428571429)",
                "2 + 2 = 4 (left: 4 10 10)\n4 + 10 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: ((2 + 2) + 10) + 10 = 24",
                "2 * 2 = 4 (left: 4 10 10)\n4 + 10 = 14 (left: 10 14)\n14 - 10 = 4 (left: 4 14)\n14 / 4 = 3.5 (left: 3.5)"
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            }
        ],
        "cost": 0.456608
    },
    "9": {
        "input": "1 1 1 12",
        "step_1": {
            "steps": [
                "1 + 1 = 2 (left: 2 1 12)",
                "1 + 1 = 2 (left: 2 1 12)",
                "12 - 1 = 11 (left: 1 1 11)",
                "1 * 1 = 1 (left: 1 1 12)",
                "1 * 1 = 1 (left: 1 1 12)",
                "1 - 1 = 0 (left: 0 1 12)",
                "1 + 1 = 2 (left: 2 1 12)",
                "1 + 1 = 2 (left: 2 1 12)",
                "1 + 1 + 1 = 3 (left: 3 1 12)",
                "1 + 1 = 2 (left: 1 2 12)"
            ],
            "values": [
                41.0,
                21.001,
                0.003,
                40.001,
                21.001,
                1.002,
                60.0,
                60.0,
                2.001,
                60.0
            ],
            "resampled": [
                "0 <- 1.9",
                "1 <- 1.7",
                "2 <- 1.7",
                "3 <- 1.9",
                "4 <- 1.1",
                "5 <- 1.0",
                "6 <- 1.9",
                "7 <- 1.9",
                "8 <- INIT",
                "9 <- 1.9"
            ],
            "resampled_steps": [
                "1 + 1 = 2 (left: 1 2 12)",
                "1 + 1 = 2 (left: 2 1 12)",
                "1 + 1 = 2 (left: 2 1 12)",
                "1 + 1 = 2 (left: 1 2 12)",
                "1 + 1 = 2 (left: 2 1 12)",
                "1 + 1 = 2 (left: 2 1 12)",
                "1 + 1 = 2 (left: 1 2 12)",
                "1 + 1 = 2 (left: 1 2 12)",
                "",
                "1 + 1 = 2 (left: 1 2 12)"
            ]
        },
        "step_2": {
            "steps": [
                "1 + 1 = 2 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)",
                "1 + 1 = 2 (left: 2 1 12)\n1 * 12 = 12 (left: 2 12)",
                "1 + 1 = 2 (left: 2 1 12)\n1 ^ 12 = 1 (left: 1 12)",
                "1 + 1 = 2 (left: 1 2 12)\n12 - 2 = 10 (left: 1 10)",
                "1 + 1 = 2 (left: 2 1 12)\n2 * 1 = 2 (left: 2 12)",
                "1 + 1 = 2 (left: 2 1 12)\n1 / 12 = 0.0833 (left: 0.0833 12)",
                "1 + 1 = 2 (left: 1 2 12)\n12 / 1 = 12 (left: 1 12)",
                "1 + 1 = 2 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)",
                "1 + 1 = 2 (left: 1 2 12)",
                "1 + 1 = 2 (left: 1 2 12)\n12 / 1 = 12 (left: 2 12)"
            ],
            "values": [
                1.002,
                60.0,
                0.002,
                40.001,
                60.0,
                1.002,
                0.003,
                40.0,
                60.0,
                60.0
            ],
            "resampled": [
                "0 <- 1.3",
                "1 <- 2.9",
                "2 <- 1.0",
                "3 <- 2.8",
                "4 <- 1.6",
                "5 <- 2.8",
                "6 <- 2.9",
                "7 <- 2.7",
                "8 <- 1.9",
                "9 <- 1.6"
            ],
            "resampled_steps": [
                "1 * 1 = 1 (left: 1 1 12)",
                "1 + 1 = 2 (left: 1 2 12)\n12 / 1 = 12 (left: 2 12)",
                "1 + 1 = 2 (left: 2 1 12)",
                "1 + 1 = 2 (left: 1 2 12)",
                "1 + 1 = 2 (left: 2 1 12)",
                "1 + 1 = 2 (left: 1 2 12)",
                "1 + 1 = 2 (left: 1 2 12)\n12 / 1 = 12 (left: 2 12)",
                "1 + 1 = 2 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)",
                "1 + 1 = 2 (left: 1 2 12)",
                "1 + 1 = 2 (left: 2 1 12)"
            ]
        },
        "step_3": {
            "steps": [
                "1 * 1 = 1 (left: 1 1 12)\n12 / 1 = 12 (left: 1 12)",
                "1 + 1 = 2 (left: 1 2 12)\n12 / 1 = 12 (left: 2 12)\n12 - 2 = 10 (left: 10)",
                "1 + 1 = 2 (left: 2 1 12)\n2 * 1 = 2 (left: 2 12)",
                "1 + 1 = 2 (left: 1 2 12)\n1 + 2 = 3 (left: 3 12)",
                "1 + 1 = 2 (left: 2 1 12)\n12 - 2 = 10 (left: 2 10)",
                "1 + 1 = 2 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)",
                "1 + 1 = 2 (left: 1 2 12)\n12 / 1 = 12 (left: 2 12)\n12 / 2 = 6 (left: 2 6)",
                "1 + 1 = 2 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)\n1 * 6 = 6 (left: 6)",
                "1 + 1 = 2 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)",
                "1 + 1 = 2 (left: 2 1 12)\n2 + 1 = 3 (left: 3 12)"
            ],
            "values": [
                0.002,
                0.003,
                60.0,
                0.002,
                21.001,
                60.0,
                21.001,
                0.003,
                60.0,
                40.001
            ],
            "resampled": [
                "0 <- 1.7",
                "1 <- 2.1",
                "2 <- 3.6",
                "3 <- 3.5",
                "4 <- 2.4",
                "5 <- 3.9",
                "6 <- 2.4",
                "7 <- 2.4",
                "8 <- 2.4",
                "9 <- 1.6"
            ],
            "resampled_steps": [
                "1 + 1 = 2 (left: 2 1 12)",
                "1 + 1 = 2 (left: 2 1 12)\n1 * 12 = 12 (left: 2 12)",
                "1 + 1 = 2 (left: 1 2 12)\n12 / 1 = 12 (left: 2 12)\n12 / 2 = 6 (left: 2 6)",
                "1 + 1 = 2 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)",
                "1 + 1 = 2 (left: 2 1 12)\n2 * 1 = 2 (left: 2 12)",
                "1 + 1 = 2 (left: 2 1 12)\n2 + 1 = 3 (left: 3 12)",
                "1 + 1 = 2 (left: 2 1 12)\n2 * 1 = 2 (left: 2 12)",
                "1 + 1 = 2 (left: 2 1 12)\n2 * 1 = 2 (left: 2 12)",
                "1 + 1 = 2 (left: 2 1 12)\n2 * 1 = 2 (left: 2 12)",
                "1 + 1 = 2 (left: 2 1 12)"
            ]
        },
        "step_4": {
            "steps": [
                "1 + 1 = 2 (left: 2 1 12)\n2 + 1 = 3 (left: 3 12)",
                "1 + 1 = 2 (left: 2 1 12)\n1 * 12 = 12 (left: 2 12)\n12 / 2 = 6 (left: 6)",
                "1 + 1 = 2 (left: 1 2 12)\n12 / 1 = 12 (left: 2 12)\n12 / 2 = 6 (left: 2 6)\n2 + 6 = 8 (left: 8)",
                "1 + 1 = 2 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)\n1 + 6 = 7 (left: 7)",
                "1 + 1 = 2 (left: 2 1 12)\n2 * 1 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)",
                "1 + 1 = 2 (left: 2 1 12)\n2 + 1 = 3 (left: 3 12)\n3 + 12 = 15 (left: 15)",
                "1 + 1 = 2 (left: 2 1 12)\n2 * 1 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)",
                "1 + 1 = 2 (left: 2 1 12)\n2 * 1 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)",
                "1 + 1 = 2 (left: 2 1 12)\n2 * 1 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)",
                "1 + 1 = 2 (left: 2 1 12)\n2 + 1 = 3 (left: 3 12)"
            ],
            "values": [
                0.003,
                0.003,
                0.003,
                0.002,
                0.003,
                0.002,
                0.003,
                0.003,
                0.002,
                1.002
            ],
            "resampled": [
                "0 <- 2.7",
                "1 <- INIT",
                "2 <- 2.4",
                "3 <- 3.2",
                "4 <- 3.8",
                "5 <- 1.4",
                "6 <- 2.1",
                "7 <- 3.8",
                "8 <- 3.4",
                "9 <- 3.5"
            ],
            "resampled_steps": [
                "1 + 1 = 2 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)",
                "",
                "1 + 1 = 2 (left: 2 1 12)\n2 * 1 = 2 (left: 2 12)",
                "1 + 1 = 2 (left: 2 1 12)\n2 * 1 = 2 (left: 2 12)",
                "1 + 1 = 2 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)",
                "1 * 1 = 1 (left: 1 1 12)",
                "1 + 1 = 2 (left: 2 1 12)\n1 * 12 = 12 (left: 2 12)",
                "1 + 1 = 2 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)",
                "1 + 1 = 2 (left: 2 1 12)\n12 - 2 = 10 (left: 2 10)",
                "1 + 1 = 2 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)"
            ]
        },
        "step_5": {
            "steps": [
                "1 + 1 = 2 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)\n1 + 6 = 7 (left: 7)",
                "1 + 1 = 2 (left: 1 2 12)",
                "1 + 1 = 2 (left: 2 1 12)\n2 * 1 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)",
                "1 + 1 = 2 (left: 2 1 12)\n2 * 1 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)",
                "1 + 1 = 2 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n24 / 1 = 24 (left: 24)",
                "1 * 1 = 1 (left: 1 1 12)\n1 * 1 = 1 (left: 1 12)",
                "1 + 1 = 2 (left: 2 1 12)\n1 * 12 = 12 (left: 2 12)\n2 + 12 = 14 (left: 14)",
                "1 + 1 = 2 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24 24)",
                "1 + 1 = 2 (left: 2 1 12)\n12 - 2 = 10 (left: 2 10)\n10 / 2 = 5 (left: 5)",
                "1 + 1 = 2 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)\n1 + 6 = 7 (left: 7)"
            ],
            "values": [
                0.0,
                60.0,
                0.002,
                0.002,
                40.0,
                0.001,
                0.002,
                40.001,
                0.002,
                0.002
            ],
            "resampled": [
                "0 <- 1.9",
                "1 <- 5.4",
                "2 <- INIT",
                "3 <- 1.9",
                "4 <- 5.1",
                "5 <- 5.4",
                "6 <- 2.4",
                "7 <- 3.2",
                "8 <- 1.9",
                "9 <- 5.4"
            ],
            "resampled_steps": [
                "1 + 1 = 2 (left: 1 2 12)",
                "1 + 1 = 2 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n24 / 1 = 24 (left: 24)",
                "",
                "1 + 1 = 2 (left: 1 2 12)",
                "1 + 1 = 2 (left: 1 2 12)",
                "1 + 1 = 2 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n24 / 1 = 24 (left: 24)",
                "1 + 1 = 2 (left: 2 1 12)\n2 * 1 = 2 (left: 2 12)",
                "1 + 1 = 2 (left: 2 1 12)\n2 * 1 = 2 (left: 2 12)",
                "1 + 1 = 2 (left: 1 2 12)",
                "1 + 1 = 2 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n24 / 1 = 24 (left: 24)"
            ]
        },
        "step_6": {
            "steps": [
                "1 + 1 = 2 (left: 1 2 12)\n12 - 2 = 10 (left: 1 10)",
                "1 + 1 = 2 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n24 / 1 = 24 (left: 24)\nAnswer: (1 + 1) * 12 / 1 = 24",
                "1 * 1 = 1 (left: 1 1 12)",
                "1 + 1 = 2 (left: 1 2 12)\n2 - 1 = 1 (left: 1 12)",
                "1 + 1 = 2 (left: 1 2 12)\n1 * 2 = 2 (left: 2 12)",
                "1 + 1 = 2 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n24 / 1 = 24 (left: 24)\nAnswer: (1 + 1) * 12 / 1 = 24",
                "1 + 1 = 2 (left: 2 1 12)\n2 * 1 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6)",
                "1 + 1 = 2 (left: 2 1 12)\n2 * 1 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "1 + 1 = 2 (left: 1 2 12)\n12 - 2 = 10 (left: 1 10)",
                "1 + 1 = 2 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n24 / 1 = 24 (left: 24)\nAnswer: (1 + 1) * 12 / 1 = 24"
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            }
        ],
        "cost": 0.501171
    },
    "10": {
        "input": "1 1 2 8",
        "step_1": {
            "steps": [
                "8 / 2 = 4 (left: 1 4 8)",
                "1 + 1 = 2 (left: 2 2 8)",
                "8 - 2 = 6 (left: 1 6 8)",
                "2 + 8 = 10 (left: 1 10 8)",
                "2 / 1 = 2 (left: 2 2 8)",
                "2 - 1 = 1 (left: 1 2 8)",
                "8 - 2 = 6 (left: 1 2 6)",
                "2 * 8 = 16 (left: 1 16 8)",
                "1 + 1 = 2 (left: 2 2 8)",
                "2 * 2 = 4 (left: 1 4 8)"
            ],
            "values": [
                1.002,
                0.002,
                3.0,
                2.001,
                1.002,
                41.0,
                2.001,
                2.001,
                0.003,
                40.001
            ],
            "resampled": [
                "0 <- 1.5",
                "1 <- INIT",
                "2 <- 1.5",
                "3 <- 1.9",
                "4 <- 1.5",
                "5 <- INIT",
                "6 <- INIT",
                "7 <- 1.5",
                "8 <- 1.5",
                "9 <- INIT"
            ],
            "resampled_steps": [
                "2 - 1 = 1 (left: 1 2 8)",
                "",
                "2 - 1 = 1 (left: 1 2 8)",
                "2 * 2 = 4 (left: 1 4 8)",
                "2 - 1 = 1 (left: 1 2 8)",
                "",
                "",
                "2 - 1 = 1 (left: 1 2 8)",
                "2 - 1 = 1 (left: 1 2 8)",
                ""
            ]
        },
        "step_2": {
            "steps": [
                "2 - 1 = 1 (left: 1 2 8)\n2 - 1 = 1 (left: 1 8)",
                "8 - 2 = 6 (left: 1 2 6)",
                "2 - 1 = 1 (left: 1 2 8)\n2 / 1 = 2 (left: 2 8)",
                "2 * 2 = 4 (left: 1 4 8)\n1 * 8 = 8 (left: 8)",
                "2 - 1 = 1 (left: 1 2 8)\n2 / 1 = 2 (left: 2 8)",
                "1 + 1 = 2 (left: 2 2 8)",
                "8 - 2 = 6 (left: 1 2 6)",
                "2 - 1 = 1 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)",
                "2 - 1 = 1 (left: 1 2 8)\n2 * 8 = 16 (left: 1 16)",
                "1 * 2 = 2 (left: 2, 2, 8)"
            ],
            "values": [
                40.0,
                1.001,
                2.001,
                0.003,
                0.003,
                2.001,
                3.0,
                41.0,
                20.002,
                2.001
            ],
            "resampled": [
                "0 <- 2.2",
                "1 <- 2.9",
                "2 <- 2.0",
                "3 <- 1.5",
                "4 <- 2.0",
                "5 <- 2.7",
                "6 <- 2.7",
                "7 <- 2.8",
                "8 <- 1.9",
                "9 <- 2.7"
            ],
            "resampled_steps": [
                "2 - 1 = 1 (left: 1 2 8)\n2 / 1 = 2 (left: 2 8)",
                "1 * 2 = 2 (left: 2, 2, 8)",
                "2 - 1 = 1 (left: 1 2 8)\n2 - 1 = 1 (left: 1 8)",
                "2 - 1 = 1 (left: 1 2 8)",
                "2 - 1 = 1 (left: 1 2 8)\n2 - 1 = 1 (left: 1 8)",
                "2 - 1 = 1 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)",
                "2 - 1 = 1 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)",
                "2 - 1 = 1 (left: 1 2 8)\n2 * 8 = 16 (left: 1 16)",
                "2 * 2 = 4 (left: 1 4 8)",
                "2 - 1 = 1 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)"
            ]
        },
        "step_3": {
            "steps": [
                "2 - 1 = 1 (left: 1 2 8)\n2 / 1 = 2 (left: 2 8)\n2 + 8 = 10 (left: 10)",
                "1 * 2 = 2 (left: 2, 2, 8)\n8 / 2 = 4 (left: 2, 4)",
                "2 - 1 = 1 (left: 1 2 8)\n2 - 1 = 1 (left: 1 8)\n8 / 1 = 8 (left: 1 8)",
                "2 - 1 = 1 (left: 1 2 8)\n2 * 8 = 16 (left: 1 16)",
                "2 - 1 = 1 (left: 1 2 8)\n2 - 1 = 1 (left: 1 8)\n1 + 8 = 9 (left: 9)",
                "2 - 1 = 1 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)\n8 / 3 = 2.66667 (left: 2.66667)",
                "2 - 1 = 1 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)\n3 + 8 = 11 (left: 8 11)",
                "2 - 1 = 1 (left: 1 2 8)\n2 * 8 = 16 (left: 1 16)\n16 - 1 = 15 (left: 15)",
                "2 * 2 = 4 (left: 1 4 8)\n4 * 8 = 32 (left: 1 32)",
                "2 - 1 = 1 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)\n3 * 8 = 24 (left: 8 24)"
            ],
            "values": [
                0.001,
                2.001,
                20.001,
                0.002,
                0.001,
                0.002,
                2.001,
                0.002,
                20.002,
                0.003
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- 2.0",
                "2 <- 2.0",
                "3 <- 1.5",
                "4 <- 1.5",
                "5 <- 1.9",
                "6 <- 3.8",
                "7 <- 3.8",
                "8 <- 3.8",
                "9 <- 2.0"
            ],
            "resampled_steps": [
                "",
                "2 - 1 = 1 (left: 1 2 8)\n2 - 1 = 1 (left: 1 8)",
                "2 - 1 = 1 (left: 1 2 8)\n2 - 1 = 1 (left: 1 8)",
                "2 - 1 = 1 (left: 1 2 8)",
                "2 - 1 = 1 (left: 1 2 8)",
                "2 * 2 = 4 (left: 1 4 8)",
                "2 * 2 = 4 (left: 1 4 8)\n4 * 8 = 32 (left: 1 32)",
                "2 * 2 = 4 (left: 1 4 8)\n4 * 8 = 32 (left: 1 32)",
                "2 * 2 = 4 (left: 1 4 8)\n4 * 8 = 32 (left: 1 32)",
                "2 - 1 = 1 (left: 1 2 8)\n2 - 1 = 1 (left: 1 8)"
            ]
        },
        "step_4": {
            "steps": [
                "1 + 1 = 2 (left: 2 2 8)",
                "2 - 1 = 1 (left: 1 2 8)\n2 - 1 = 1 (left: 1 8)\n1 * 8 = 8 (left: 8)",
                "2 - 1 = 1 (left: 1 2 8)\n2 - 1 = 1 (left: 1 8)\n1 * 8 = 8 (left: 8)",
                "2 - 1 = 1 (left: 1 2 8)\n2 * 8 = 16 (left: 1 16)",
                "2 - 1 = 1 (left: 1 2 8)\n8 - 2 = 6 (left: 1 6)",
                "2 * 2 = 4 (left: 1 4 8)\n8 - 1 = 7 (left: 4 7)",
                "2 * 2 = 4 (left: 1 4 8)\n4 * 8 = 32 (left: 1 32)\n1 * 32 = 32 (left: 32 32)",
                "2 * 2 = 4 (left: 1 4 8)\n4 * 8 = 32 (left: 1 32)\n1 + 32 = 33 (left: 32 33)",
                "2 * 2 = 4 (left: 1 4 8)\n4 * 8 = 32 (left: 1 32)\n32 - 1 = 31 (left: 1 31)",
                "2 - 1 = 1 (left: 1 2 8)\n2 - 1 = 1 (left: 1 8)\n1 * 8 = 8 (left: 8 8)"
            ],
            "values": [
                0.003,
                0.002,
                0.002,
                1.002,
                60.0,
                0.003,
                0.003,
                0.003,
                0.003,
                1.002
            ],
            "resampled": [
                "0 <- 2.8",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- 4.4",
                "4 <- 2.7",
                "5 <- 1.5",
                "6 <- 2.7",
                "7 <- 4.4",
                "8 <- 4.4",
                "9 <- 1.5"
            ],
            "resampled_steps": [
                "2 - 1 = 1 (left: 1 2 8)\n2 * 8 = 16 (left: 1 16)",
                "",
                "",
                "2 - 1 = 1 (left: 1 2 8)\n8 - 2 = 6 (left: 1 6)",
                "2 - 1 = 1 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)",
                "2 - 1 = 1 (left: 1 2 8)",
                "2 - 1 = 1 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)",
                "2 - 1 = 1 (left: 1 2 8)\n8 - 2 = 6 (left: 1 6)",
                "2 - 1 = 1 (left: 1 2 8)\n8 - 2 = 6 (left: 1 6)",
                "2 - 1 = 1 (left: 1 2 8)"
            ]
        },
        "step_5": {
            "steps": [
                "2 - 1 = 1 (left: 1 2 8)\n2 * 8 = 16 (left: 1 16)\n16 / 1 = 16 (left: 16)",
                "2 * 8 = 16 (left: 1 16 8)",
                "2 * 8 = 16 (left: 1 16 8)",
                "2 - 1 = 1 (left: 1 2 8)\n8 - 2 = 6 (left: 1 6)\n6 / 1 = 6 (left: 6)",
                "2 - 1 = 1 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)\n3 * 8 = 24 (left: 8 24)",
                "2 - 1 = 1 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)",
                "2 - 1 = 1 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)\n8 / 3 = 2.67 (left: 2.67 8)",
                "2 - 1 = 1 (left: 1 2 8)\n8 - 2 = 6 (left: 1 6)\n6 - 1 = 5 (left: 5)",
                "2 - 1 = 1 (left: 1 2 8)\n8 - 2 = 6 (left: 1 6)\n1 * 6 = 6 (left: 6)",
                "2 - 1 = 1 (left: 1 2 8)\n8 - 2 = 6 (left: 1 6)"
            ],
            "values": [
                20.0,
                0.003,
                2.001,
                0.002,
                0.003,
                60.0,
                2.001,
                0.003,
                0.001,
                60.0
            ],
            "resampled": [
                "0 <- 5.9",
                "1 <- 5.9",
                "2 <- 1.5",
                "3 <- 2.0",
                "4 <- 5.0",
                "5 <- 5.9",
                "6 <- 5.9",
                "7 <- 2.8",
                "8 <- 2.7",
                "9 <- 4.4"
            ],
            "resampled_steps": [
                "2 - 1 = 1 (left: 1 2 8)\n8 - 2 = 6 (left: 1 6)",
                "2 - 1 = 1 (left: 1 2 8)\n8 - 2 = 6 (left: 1 6)",
                "2 - 1 = 1 (left: 1 2 8)",
                "2 - 1 = 1 (left: 1 2 8)\n2 - 1 = 1 (left: 1 8)",
                "2 - 1 = 1 (left: 1 2 8)\n2 * 8 = 16 (left: 1 16)\n16 / 1 = 16 (left: 16)",
                "2 - 1 = 1 (left: 1 2 8)\n8 - 2 = 6 (left: 1 6)",
                "2 - 1 = 1 (left: 1 2 8)\n8 - 2 = 6 (left: 1 6)",
                "2 - 1 = 1 (left: 1 2 8)\n2 * 8 = 16 (left: 1 16)",
                "2 - 1 = 1 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)",
                "2 - 1 = 1 (left: 1 2 8)\n8 - 2 = 6 (left: 1 6)"
            ]
        },
        "step_6": {
            "steps": [
                "2 - 1 = 1 (left: 1 2 8)\n8 - 2 = 6 (left: 1 6)\n6 / 1 = 6 (left: 6)",
                "2 - 1 = 1 (left: 1 2 8)\n8 - 2 = 6 (left: 1 6)\n1 * 6 = 6 (left: 6)",
                "2 - 1 = 1 (left: 1 2 8)\n2 / 1 = 2 (left: 2 8)",
                "2 - 1 = 1 (left: 1 2 8)\n2 - 1 = 1 (left: 1 8)\n1 + 8 = 9 (left: 9)",
                "2 - 1 = 1 (left: 1 2 8)\n2 * 8 = 16 (left: 1 16)\n16 / 1 = 16 (left: 16)\nThere are no possible next steps for the input 16, as it is a single number and cannot be combined with any other numbers using the operations of addition, subtraction, multiplication, or division.",
                "2 - 1 = 1 (left: 1 2 8)\n8 - 2 = 6 (left: 1 6)\n6 / 1 = 6 (left: 6)",
                "2 - 1 = 1 (left: 1 2 8)\n8 - 2 = 6 (left: 1 6)\n6 / 1 = 6 (left: 6)",
                "2 - 1 = 1 (left: 1 2 8)\n2 * 8 = 16 (left: 1 16)\n16 - 1 = 15 (left: 1 15)",
                "2 - 1 = 1 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)\n8 / 3 = 2.66667 (left: 2.66667 8)",
                "2 - 1 = 1 (left: 1 2 8)\n8 - 2 = 6 (left: 1 6)\n6 / 1 = 6 (left: 6)"
            ],
            "values": [
                0.003,
                0.002,
                0.001,
                0.0,
                20.002,
                0.003,
                0.003,
                1.001,
                3.0,
                0.003
            ],
            "resampled": [
                "0 <- 4.4",
                "1 <- 5.5",
                "2 <- 1.9",
                "3 <- 1.5",
                "4 <- 5.9",
                "5 <- 5.5",
                "6 <- 5.9",
                "7 <- 5.5",
                "8 <- 5.9",
                "9 <- 5.5"
            ],
            "resampled_steps": [
                "2 - 1 = 1 (left: 1 2 8)\n8 - 2 = 6 (left: 1 6)",
                "2 - 1 = 1 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)",
                "2 * 2 = 4 (left: 1 4 8)",
                "2 - 1 = 1 (left: 1 2 8)",
                "2 - 1 = 1 (left: 1 2 8)\n8 - 2 = 6 (left: 1 6)",
                "2 - 1 = 1 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)",
                "2 - 1 = 1 (left: 1 2 8)\n8 - 2 = 6 (left: 1 6)",
                "2 - 1 = 1 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)",
                "2 - 1 = 1 (left: 1 2 8)\n8 - 2 = 6 (left: 1 6)",
                "2 - 1 = 1 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)"
            ]
        },
        "step_7": {
            "steps": [
                "2 - 1 = 1 (left: 1 2 8)\n8 - 2 = 6 (left: 1 6)\n1 * 6 = 6 (left: 6)",
                "2 - 1 = 1 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)\n3 * 8 = 24 (left: 8 24)",
                "2 * 2 = 4 (left: 1 4 8)\n4 * 8 = 32 (left: 1 32)",
                "2 - 1 = 1 (left: 1 2 8)\n8 / 2 = 4 (left: 1 4)",
                "2 - 1 = 1 (left: 1 2 8)\n8 - 2 = 6 (left: 1 6)\n6 / 1 = 6 (left: 6)",
                "2 - 1 = 1 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)\n3 + 8 = 11 (left: 8 11)",
                "2 - 1 = 1 (left: 1 2 8)\n8 - 2 = 6 (left: 1 6)\n6 - 1 = 5 (left: 5)",
                "2 - 1 = 1 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)\n3 + 8 = 11 (left: 8 11)",
                "2 - 1 = 1 (left: 1 2 8)\n8 - 2 = 6 (left: 1 6)\n6 - 1 = 5 (left: 5 6)",
                "2 - 1 = 1 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)\n3 * 8 = 24 (left: 8 24)"
            ],
            "values": [
                0.003,
                1.002,
                40.001,
                60.0,
                0.003,
                0.003,
                0.002,
                0.002,
                1.002,
                0.003
            ],
            "resampled": [
                "0 <- 4.4",
                "1 <- 2.7",
                "2 <- 7.3",
                "3 <- 2.0",
                "4 <- 2.7",
                "5 <- 7.3",
                "6 <- 1.9",
                "7 <- 1.9",
                "8 <- 4.4",
                "9 <- 7.3"
            ],
            "resampled_steps": [
                "2 - 1 = 1 (left: 1 2 8)\n8 - 2 = 6 (left: 1 6)",
                "2 - 1 = 1 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)",
                "2 - 1 = 1 (left: 1 2 8)\n8 / 2 = 4 (left: 1 4)",
                "2 - 1 = 1 (left: 1 2 8)\n2 - 1 = 1 (left: 1 8)",
                "2 - 1 = 1 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)",
                "2 - 1 = 1 (left: 1 2 8)\n8 / 2 = 4 (left: 1 4)",
                "2 * 2 = 4 (left: 1 4 8)",
                "2 * 2 = 4 (left: 1 4 8)",
                "2 - 1 = 1 (left: 1 2 8)\n8 - 2 = 6 (left: 1 6)",
                "2 - 1 = 1 (left: 1 2 8)\n8 / 2 = 4 (left: 1 4)"
            ]
        },
        "step_8": {
            "steps": [
                "2 - 1 = 1 (left: 1 2 8)\n8 - 2 = 6 (left: 1 6)\n6 - 1 = 5 (left: 5)",
                "2 - 1 = 1 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)",
                "2 - 1 = 1 (left: 1 2 8)\n8 / 2 = 4 (left: 1 4)\n4 - 1 = 3 (left: 3)",
                "2 - 1 = 1 (left: 1 2 8)\n2 - 1 = 1 (left: 1 8)\n8 / 1 = 8 (left: 1 8)",
                "2 - 1 = 1 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5 8)",
                "2 - 1 = 1 (left: 1 2 8)\n8 / 2 = 4 (left: 1 4)\n1 * 4 = 4 (left: 4)",
                "2 * 2 = 4 (left: 1 4 8)\n1 + 4 = 5 (left: 5 8)",
                "2 * 2 = 4 (left: 1 4 8)\n8 - 1 = 7 (left: 4 7)",
                "2 - 1 = 1 (left: 1 2 8)\n8 - 2 = 6 (left: 1 6)\n6 - 1 = 5 (left: 5)",
                "2 - 1 = 1 (left: 1 2 8)\n8 / 2 = 4 (left: 1 4)\n4 / 1 = 4 (left: 4)"
            ],
            "values": [
                0.003,
                0.001,
                0.0,
                40.001,
                1.001,
                0.003,
                0.003,
                0.003,
                0.003,
                0.002
            ],
            "resampled": [
                "0 <- 7.3",
                "1 <- 2.7",
                "2 <- 1.3",
                "3 <- 1.5",
                "4 <- 8.3",
                "5 <- 5.0",
                "6 <- 8.3",
                "7 <- 8.3",
                "8 <- 7.3",
                "9 <- 2.7"
            ],
            "resampled_steps": [
                "2 - 1 = 1 (left: 1 2 8)\n8 / 2 = 4 (left: 1 4)",
                "2 - 1 = 1 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)",
                "2 + 8 = 10 (left: 1 10 8)",
                "2 - 1 = 1 (left: 1 2 8)",
                "2 - 1 = 1 (left: 1 2 8)\n2 - 1 = 1 (left: 1 8)\n8 / 1 = 8 (left: 1 8)",
                "2 - 1 = 1 (left: 1 2 8)\n2 * 8 = 16 (left: 1 16)\n16 / 1 = 16 (left: 16)",
                "2 - 1 = 1 (left: 1 2 8)\n2 - 1 = 1 (left: 1 8)\n8 / 1 = 8 (left: 1 8)",
                "2 - 1 = 1 (left: 1 2 8)\n2 - 1 = 1 (left: 1 8)\n8 / 1 = 8 (left: 1 8)",
                "2 - 1 = 1 (left: 1 2 8)\n8 / 2 = 4 (left: 1 4)",
                "2 - 1 = 1 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)"
            ]
        },
        "step_9": {
            "steps": [
                "2 - 1 = 1 (left: 1 2 8)\n8 / 2 = 4 (left: 1 4)\n1 + 4 = 5 (left: 5)",
                "2 - 1 = 1 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)\n8 / 3 = 2.67 (left: 2.67 8)",
                "2 + 8 = 10 (left: 1 10 8)\n8 - 1 = 7 (left: 7 8)",
                "2 - 1 = 1 (left: 1 2 8)\n2 * 8 = 16 (left: 1 16)",
                "2 - 1 = 1 (left: 1 2 8)\n2 - 1 = 1 (left: 1 8)\n8 / 1 = 8 (left: 1 8)\n1 * 8 = 8 (left: 8)",
                "2 - 1 = 1 (left: 1 2 8)\n2 * 8 = 16 (left: 1 16)\n16 / 1 = 16 (left: 16)\n16 / 2 = 8",
                "2 - 1 = 1 (left: 1 2 8)\n2 - 1 = 1 (left: 1 8)\n8 / 1 = 8 (left: 1 8)\n8 - 1 = 7 (left: 7 8)",
                "2 - 1 = 1 (left: 1 2 8)\n2 - 1 = 1 (left: 1 8)\n8 / 1 = 8 (left: 1 8)\n8 / 1 = 8 (left: 8 8)",
                "2 - 1 = 1 (left: 1 2 8)\n8 / 2 = 4 (left: 1 4)\n1 + 4 = 5 (left: 5)",
                "2 - 1 = 1 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5 8)"
            ],
            "values": [
                0.003,
                3.0,
                2.001,
                0.002,
                0.002,
                0.003,
                1.002,
                0.002,
                0.003,
                0.002
            ],
            "resampled": [
                "0 <- 7.3",
                "1 <- 2.7",
                "2 <- 7.3",
                "3 <- 5.9",
                "4 <- 7.2",
                "5 <- 7.3",
                "6 <- 1.9",
                "7 <- 5.5",
                "8 <- 2.8",
                "9 <- 2.8"
            ],
            "resampled_steps": [
                "2 - 1 = 1 (left: 1 2 8)\n8 / 2 = 4 (left: 1 4)",
                "2 - 1 = 1 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)",
                "2 - 1 = 1 (left: 1 2 8)\n8 / 2 = 4 (left: 1 4)",
                "2 - 1 = 1 (left: 1 2 8)\n8 - 2 = 6 (left: 1 6)",
                "2 * 2 = 4 (left: 1 4 8)\n4 * 8 = 32 (left: 1 32)",
                "2 - 1 = 1 (left: 1 2 8)\n8 / 2 = 4 (left: 1 4)",
                "2 * 2 = 4 (left: 1 4 8)",
                "2 - 1 = 1 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)",
                "2 - 1 = 1 (left: 1 2 8)\n2 * 8 = 16 (left: 1 16)",
                "2 - 1 = 1 (left: 1 2 8)\n2 * 8 = 16 (left: 1 16)"
            ]
        },
        "step_10": {
            "steps": [
                "2 - 1 = 1 (left: 1 2 8)\n8 / 2 = 4 (left: 1 4)\n1 + 4 = 5 (left: 5)",
                "2 - 1 = 1 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)\n3 + 8 = 11 (left: 8 11)",
                "2 - 1 = 1 (left: 1 2 8)\n8 / 2 = 4 (left: 1 4)\n1 + 4 = 5 (left: 5)",
                "2 - 1 = 1 (left: 1 2 8)\n8 - 2 = 6 (left: 1 6)\n6 / 1 = 6 (left: 6)",
                "2 * 2 = 4 (left: 1 4 8)\n4 * 8 = 32 (left: 1 32)\n1 + 32 = 33 (left: 32 33)",
                "2 - 1 = 1 (left: 1 2 8)\n8 / 2 = 4 (left: 1 4)\n1 + 4 = 5 (left: 5)",
                "2 * 2 = 4 (left: 1 4 8)\n4 / 1 = 4 (left: 4 8)",
                "2 - 1 = 1 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)\n8 / 3 = 2.67 (left: 2.67 8)",
                "2 - 1 = 1 (left: 1 2 8)\n2 * 8 = 16 (left: 1 16)\n1 + 16 = 17 (left: 17)",
                "2 - 1 = 1 (left: 1 2 8)\n2 * 8 = 16 (left: 1 16)\n16 / 1 = 16 (left: 16)"
            ],
            "values": [
                0.003,
                0.003,
                0.002,
                0.003,
                1.002,
                0.003,
                1.002,
                1.001,
                0.003,
                0.003
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 0.5754779999999999
    },
    "11": {
        "input": "1 1 4 8",
        "step_1": {
            "steps": [
                "8 / 4 = 2 (left: 1 2 8)",
                "4 + 1 = 5 (left: 5 4 8)",
                "4 * 2 = 8 (left: 1 8 8)",
                "1 * 4 = 4 (left: 1 4 8)",
                "8 - 1 = 7 (left: 7 4 8)",
                "4 * 1 = 4 (left: 4 4 8)",
                "4 * 2 = 8 (left: 1 8 8)",
                "4 * 1 = 4 (left: 4 4 8)",
                "8 - 4 = 4 (left: 1 4 8)",
                "4 + 4 = 8 (left: 1 8 8)"
            ],
            "values": [
                60.0,
                2.0,
                2.001,
                2.001,
                2.0,
                22.0,
                0.003,
                40.001,
                21.001,
                0.002
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- 1.1",
                "2 <- 1.0",
                "3 <- 1.0",
                "4 <- INIT",
                "5 <- 1.5",
                "6 <- INIT",
                "7 <- 1.0",
                "8 <- INIT",
                "9 <- 1.1"
            ],
            "resampled_steps": [
                "",
                "4 + 1 = 5 (left: 5 4 8)",
                "8 / 4 = 2 (left: 1 2 8)",
                "8 / 4 = 2 (left: 1 2 8)",
                "",
                "4 * 1 = 4 (left: 4 4 8)",
                "",
                "8 / 4 = 2 (left: 1 2 8)",
                "",
                "4 + 1 = 5 (left: 5 4 8)"
            ]
        },
        "step_2": {
            "steps": [
                "4 + 1 = 5 (left: 5 4 8)",
                "4 + 1 = 5 (left: 5 4 8)\n5 + 4 = 9 (left: 9 8)",
                "8 / 4 = 2 (left: 1 2 8)\n8 / 2 = 4 (left: 1 4)",
                "8 / 4 = 2 (left: 1 2 8)\n2 * 8 = 16 (left: 1 16)",
                "8 - 4 = 4 (left: 1 4 4)",
                "4 * 1 = 4 (left: 4 4 8)\n4 + 4 = 8 (left: 8 8)",
                "1 + 4 = 5 (left: 5 8)",
                "8 / 4 = 2 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)",
                "4 - 1 = 3 (left: 1 3 8)",
                "4 + 1 = 5 (left: 5 4 8)\n5 - 4 = 1 (left: 1 8)"
            ],
            "values": [
                3.0,
                0.003,
                20.001,
                2.0,
                0.002,
                0.003,
                2.001,
                60.0,
                41.0,
                1.002
            ],
            "resampled": [
                "0 <- 2.7",
                "1 <- INIT",
                "2 <- 1.0",
                "3 <- INIT",
                "4 <- 1.7",
                "5 <- 2.2",
                "6 <- 1.5",
                "7 <- 2.7",
                "8 <- 2.7",
                "9 <- 1.5"
            ],
            "resampled_steps": [
                "8 / 4 = 2 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)",
                "",
                "8 / 4 = 2 (left: 1 2 8)",
                "",
                "4 * 1 = 4 (left: 4 4 8)",
                "8 / 4 = 2 (left: 1 2 8)\n8 / 2 = 4 (left: 1 4)",
                "4 * 1 = 4 (left: 4 4 8)",
                "8 / 4 = 2 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)",
                "8 / 4 = 2 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)",
                "4 * 1 = 4 (left: 4 4 8)"
            ]
        },
        "step_3": {
            "steps": [
                "8 / 4 = 2 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)\n3 + 8 = 11 (left: 8 11)",
                "8 - 1 = 7 (left: 1 4 7)",
                "8 / 4 = 2 (left: 1 2 8)\n2 + 8 = 10 (left: 1 10)",
                "8 / 4 = 2 (left: 1 2 8)",
                "4 * 1 = 4 (left: 4 4 8)\n4 + 4 = 8 (left: 8 8)",
                "8 / 4 = 2 (left: 1 2 8)\n8 / 2 = 4 (left: 1 4)\n4 / 1 = 4 (left: 4)",
                "4 * 1 = 4 (left: 4 4 8)\n4 / 4 = 1 (left: 1 8)",
                "8 / 4 = 2 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)\n3 * 8 = 24 (left: 8 24)",
                "8 / 4 = 2 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)\n8 / 3 = 2.67 (left: 2.67 8)",
                "4 * 1 = 4 (left: 4 4 8)\n8 - 4 = 4 (left: 4 8)"
            ],
            "values": [
                1.001,
                22.0,
                0.0,
                41.0,
                0.002,
                0.001,
                60.0,
                21.001,
                2.001,
                1.002
            ],
            "resampled": [
                "0 <- 3.6",
                "1 <- 3.3",
                "2 <- 3.7",
                "3 <- 3.6",
                "4 <- 3.6",
                "5 <- 3.6",
                "6 <- 2.7",
                "7 <- 3.1",
                "8 <- 2.7",
                "9 <- 1.0"
            ],
            "resampled_steps": [
                "4 * 1 = 4 (left: 4 4 8)\n4 / 4 = 1 (left: 1 8)",
                "8 / 4 = 2 (left: 1 2 8)",
                "8 / 4 = 2 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)\n3 * 8 = 24 (left: 8 24)",
                "4 * 1 = 4 (left: 4 4 8)\n4 / 4 = 1 (left: 1 8)",
                "4 * 1 = 4 (left: 4 4 8)\n4 / 4 = 1 (left: 1 8)",
                "4 * 1 = 4 (left: 4 4 8)\n4 / 4 = 1 (left: 1 8)",
                "8 / 4 = 2 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)",
                "8 - 1 = 7 (left: 1 4 7)",
                "8 / 4 = 2 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)",
                "8 / 4 = 2 (left: 1 2 8)"
            ]
        },
        "step_4": {
            "steps": [
                "4 * 1 = 4 (left: 4 4 8)\n4 / 4 = 1 (left: 1 8)\n8 / 1 = 8 (left: 8)",
                "8 / 4 = 2 (left: 1 2 8)\n2 * 8 = 16 (left: 1 16)",
                "8 / 4 = 2 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)\n3 * 8 = 24 (left: 8 24)\n24 / 3 = 8 (left: 8)",
                "4 * 1 = 4 (left: 4 4 8)\n4 / 4 = 1 (left: 1 8)\n1 + 8 = 9 (left: 8 9)",
                "4 * 1 = 4 (left: 4 4 8)\n4 / 4 = 1 (left: 1 8)\n1 + 8 = 9 (left: 9)",
                "4 * 1 = 4 (left: 4 4 8)\n4 / 4 = 1 (left: 1 8)\n1 * 8 = 8 (left: 8 8)",
                "8 / 4 = 2 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)\n8 / 3 = 2.67 (left: 2.67)",
                "8 - 1 = 7 (left: 1 4 7)\n7 / 1 = 7 (left: 7 7)",
                "8 / 4 = 2 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)\n8 / 3 = 2.6667 (left: 2.6667 8)",
                "8 / 4 = 2 (left: 1 2 8)\n2 - 1 = 1 (left: 1 8)"
            ],
            "values": [
                0.001,
                1.001,
                0.0,
                1.002,
                0.002,
                1.002,
                0.001,
                0.003,
                3.0,
                21.0
            ],
            "resampled": [
                "0 <- 3.6",
                "1 <- 3.6",
                "2 <- 1.0",
                "3 <- 3.1",
                "4 <- 2.7",
                "5 <- 1.0",
                "6 <- 1.7",
                "7 <- 4.9",
                "8 <- 3.7",
                "9 <- 2.8"
            ],
            "resampled_steps": [
                "4 * 1 = 4 (left: 4 4 8)\n4 / 4 = 1 (left: 1 8)",
                "4 * 1 = 4 (left: 4 4 8)\n4 / 4 = 1 (left: 1 8)",
                "8 / 4 = 2 (left: 1 2 8)",
                "8 - 1 = 7 (left: 1 4 7)",
                "8 / 4 = 2 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)",
                "8 / 4 = 2 (left: 1 2 8)",
                "4 * 1 = 4 (left: 4 4 8)",
                "8 / 4 = 2 (left: 1 2 8)\n2 - 1 = 1 (left: 1 8)",
                "8 / 4 = 2 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)\n3 * 8 = 24 (left: 8 24)",
                "4 - 1 = 3 (left: 1 3 8)"
            ]
        },
        "step_5": {
            "steps": [
                "4 * 1 = 4 (left: 4 4 8)\n4 / 4 = 1 (left: 1 8)\n8 - 1 = 7 (left: 7)",
                "4 * 1 = 4 (left: 4 4 8)\n4 / 4 = 1 (left: 1 8)\n8 - 1 = 7 (left: 7)",
                "8 / 4 = 2 (left: 1 2 8)\n8 - 1 = 7 (left: 2 7)",
                "8 - 1 = 7 (left: 1 4 7)\n4 * 7 = 28 (left: 1 28)",
                "8 / 4 = 2 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5 8)",
                "8 / 4 = 2 (left: 1 2 8)\n2 * 8 = 16 (left: 1 16)",
                "4 * 1 = 4 (left: 4 4 8)\n8 / 4 = 2 (left: 4 2)",
                "8 / 4 = 2 (left: 1 2 8)\n2 - 1 = 1 (left: 1 8)\n1 + 8 = 9 (left: 8 9)",
                "8 / 4 = 2 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)\n3 * 8 = 24 (left: 8 24)\n8 + 24 = 32 (left: 32)",
                "4 - 1 = 3 (left: 1 3 8)\n3 - 1 = 2 (left: 2 8)"
            ],
            "values": [
                0.002,
                0.003,
                0.002,
                20.002,
                1.001,
                0.002,
                0.001,
                0.003,
                0.003,
                2.001
            ],
            "resampled": [
                "0 <- 3.6",
                "1 <- 2.8",
                "2 <- 5.3",
                "3 <- 4.9",
                "4 <- 4.9",
                "5 <- 5.9",
                "6 <- 3.6",
                "7 <- 3.6",
                "8 <- 1.7",
                "9 <- 5.3"
            ],
            "resampled_steps": [
                "4 * 1 = 4 (left: 4 4 8)\n4 / 4 = 1 (left: 1 8)",
                "4 - 1 = 3 (left: 1 3 8)",
                "8 - 1 = 7 (left: 1 4 7)\n4 * 7 = 28 (left: 1 28)",
                "8 / 4 = 2 (left: 1 2 8)\n2 - 1 = 1 (left: 1 8)",
                "8 / 4 = 2 (left: 1 2 8)\n2 - 1 = 1 (left: 1 8)",
                "4 - 1 = 3 (left: 1 3 8)\n3 - 1 = 2 (left: 2 8)",
                "4 * 1 = 4 (left: 4 4 8)\n4 / 4 = 1 (left: 1 8)",
                "4 * 1 = 4 (left: 4 4 8)\n4 / 4 = 1 (left: 1 8)",
                "4 * 1 = 4 (left: 4 4 8)",
                "8 - 1 = 7 (left: 1 4 7)\n4 * 7 = 28 (left: 1 28)"
            ]
        },
        "step_6": {
            "steps": [
                "4 * 1 = 4 (left: 4 4 8)\n4 / 4 = 1 (left: 1 8)\n1 + 8 = 9 (left: 9)",
                "4 - 1 = 3 (left: 1 3 8)\n3 / 1 = 3 (left: 3, 8)",
                "8 - 1 = 7 (left: 1 4 7)\n4 * 7 = 28 (left: 1 28)\n1 + 28 = 29 (left: 29)",
                "8 / 4 = 2 (left: 1 2 8)\n2 - 1 = 1 (left: 1 8)\n8 / 1 = 8 (left: 1 8)",
                "8 / 4 = 2 (left: 1 2 8)\n2 - 1 = 1 (left: 1 8)\n1 * 8 = 8 (left: 8 8)",
                "4 - 1 = 3 (left: 1 3 8)\n3 - 1 = 2 (left: 2 8)\n8 / 2 = 4 (left: 4)",
                "4 * 1 = 4 (left: 4 4 8)\n4 / 4 = 1 (left: 1 8)\n1 + 8 = 9 (left: 8 9)",
                "4 * 1 = 4 (left: 4 4 8)\n4 / 4 = 1 (left: 1 8)\n8 / 1 = 8 (left: 8)",
                "4 * 1 = 4 (left: 4 4 8)\n4 * 4 = 16 (left: 16 8)",
                "8 - 1 = 7 (left: 1 4 7)\n4 * 7 = 28 (left: 1 28)\n28 / 1 = 28 (left: 1 28)"
            ],
            "values": [
                0.001,
                60.0,
                0.001,
                40.001,
                0.003,
                0.003,
                0.003,
                0.001,
                60.0,
                60.0
            ],
            "resampled": [
                "0 <- 6.1",
                "1 <- 6.3",
                "2 <- 6.1",
                "3 <- 2.7",
                "4 <- 6.8",
                "5 <- 6.3",
                "6 <- 2.7",
                "7 <- 6.1",
                "8 <- 4.5",
                "9 <- 6.1"
            ],
            "resampled_steps": [
                "4 - 1 = 3 (left: 1 3 8)\n3 / 1 = 3 (left: 3, 8)",
                "8 / 4 = 2 (left: 1 2 8)\n2 - 1 = 1 (left: 1 8)\n8 / 1 = 8 (left: 1 8)",
                "4 - 1 = 3 (left: 1 3 8)\n3 / 1 = 3 (left: 3, 8)",
                "8 / 4 = 2 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)",
                "4 * 1 = 4 (left: 4 4 8)\n4 * 4 = 16 (left: 16 8)",
                "8 / 4 = 2 (left: 1 2 8)\n2 - 1 = 1 (left: 1 8)\n8 / 1 = 8 (left: 1 8)",
                "8 / 4 = 2 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)",
                "4 - 1 = 3 (left: 1 3 8)\n3 / 1 = 3 (left: 3, 8)",
                "4 * 1 = 4 (left: 4 4 8)\n4 / 4 = 1 (left: 1 8)\n1 * 8 = 8 (left: 8 8)",
                "4 - 1 = 3 (left: 1 3 8)\n3 / 1 = 3 (left: 3, 8)"
            ]
        },
        "step_7": {
            "steps": [
                "4 - 1 = 3 (left: 1 3 8)\n3 / 1 = 3 (left: 3, 8)\n8 / 3 = 2.67 (left: 2.67 8)",
                "8 / 4 = 2 (left: 1 2 8)\n2 - 1 = 1 (left: 1 8)\n8 / 1 = 8 (left: 1 8)\n8 - 1 = 7 (left: 7 8)",
                "4 - 1 = 3 (left: 1 3 8)\n3 / 1 = 3 (left: 3, 8)\n8 / 3 = 2.67 (left: 2.67 8)",
                "8 / 4 = 2 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)\n8 / 3 = 2.67 (left: 2.67 8)",
                "4 * 1 = 4 (left: 4 4 8)\n4 * 4 = 16 (left: 16 8)\n16 / 8 = 2 (left: 2)",
                "8 / 4 = 2 (left: 1 2 8)\n2 - 1 = 1 (left: 1 8)\n8 / 1 = 8 (left: 1 8)\n1 + 8 = 9 (left: 9)",
                "8 / 4 = 2 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)\n3 * 8 = 24 (left: 8 24)",
                "4 - 1 = 3 (left: 1 3 8)\n3 / 1 = 3 (left: 3, 8)\n8 - 3 = 5 (left: 5)",
                "4 * 1 = 4 (left: 4 4 8)\n4 / 4 = 1 (left: 1 8)\n1 * 8 = 8 (left: 8 8)\n8 - 8 = 0 (left: 0)",
                "4 - 1 = 3 (left: 1 3 8)\n3 / 1 = 3 (left: 3, 8)\n8 - 3 = 5 (left: 5)"
            ],
            "values": [
                2.001,
                0.001,
                3.0,
                3.0,
                0.003,
                0.003,
                0.001,
                0.002,
                0.001,
                0.002
            ],
            "resampled": [
                "0 <- 6.3",
                "1 <- 3.3",
                "2 <- 3.1",
                "3 <- 6.1",
                "4 <- 3.6",
                "5 <- 5.3",
                "6 <- 6.1",
                "7 <- 1.0",
                "8 <- 6.3",
                "9 <- 2.8"
            ],
            "resampled_steps": [
                "8 / 4 = 2 (left: 1 2 8)\n2 - 1 = 1 (left: 1 8)\n8 / 1 = 8 (left: 1 8)",
                "8 / 4 = 2 (left: 1 2 8)",
                "8 - 1 = 7 (left: 1 4 7)",
                "4 - 1 = 3 (left: 1 3 8)\n3 / 1 = 3 (left: 3, 8)",
                "4 * 1 = 4 (left: 4 4 8)\n4 / 4 = 1 (left: 1 8)",
                "8 - 1 = 7 (left: 1 4 7)\n4 * 7 = 28 (left: 1 28)",
                "4 - 1 = 3 (left: 1 3 8)\n3 / 1 = 3 (left: 3, 8)",
                "8 / 4 = 2 (left: 1 2 8)",
                "8 / 4 = 2 (left: 1 2 8)\n2 - 1 = 1 (left: 1 8)\n8 / 1 = 8 (left: 1 8)",
                "4 - 1 = 3 (left: 1 3 8)"
            ]
        },
        "step_8": {
            "steps": [
                "8 / 4 = 2 (left: 1 2 8)\n2 - 1 = 1 (left: 1 8)\n8 / 1 = 8 (left: 1 8)\n1 * 8 = 8 (left: 8)",
                "8 / 4 = 2 (left: 1 2 8)\n2 * 8 = 16 (left: 1 16)",
                "8 - 1 = 7 (left: 1 4 7)\n7 - 4 = 3 (left: 1 3)",
                "4 - 1 = 3 (left: 1 3 8)\n3 / 1 = 3 (left: 3, 8)\n8 / 3 = 2.67 (left: 2.67)",
                "4 * 1 = 4 (left: 4 4 8)\n4 / 4 = 1 (left: 1 8)\n1 * 8 = 8 (left: 8 8)",
                "8 - 1 = 7 (left: 1 4 7)\n4 * 7 = 28 (left: 1 28)\n28 / 1 = 28 (left: 28)",
                "4 - 1 = 3 (left: 1 3 8)\n3 / 1 = 3 (left: 3, 8)\n3 * 8 = 24 (left: 8 24)",
                "8 / 4 = 2 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)",
                "8 / 4 = 2 (left: 1 2 8)\n2 - 1 = 1 (left: 1 8)\n8 / 1 = 8 (left: 1 8)\n8 - 1 = 7 (left: 7)",
                "4 - 1 = 3 (left: 1 3 8)\n8 - 1 = 7 (left: 3 7)"
            ],
            "values": [
                0.003,
                1.002,
                1.001,
                0.003,
                0.003,
                0.002,
                0.002,
                60.0,
                0.001,
                1.0
            ],
            "resampled": [
                "0 <- 6.3",
                "1 <- 8.7",
                "2 <- 6.3",
                "3 <- 6.9",
                "4 <- 6.1",
                "5 <- 1.8",
                "6 <- 8.7",
                "7 <- 8.7",
                "8 <- 2.7",
                "9 <- 6.8"
            ],
            "resampled_steps": [
                "8 / 4 = 2 (left: 1 2 8)\n2 - 1 = 1 (left: 1 8)\n8 / 1 = 8 (left: 1 8)",
                "8 / 4 = 2 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)",
                "8 / 4 = 2 (left: 1 2 8)\n2 - 1 = 1 (left: 1 8)\n8 / 1 = 8 (left: 1 8)",
                "8 - 1 = 7 (left: 1 4 7)\n4 * 7 = 28 (left: 1 28)\n28 / 1 = 28 (left: 1 28)",
                "4 - 1 = 3 (left: 1 3 8)\n3 / 1 = 3 (left: 3, 8)",
                "8 - 4 = 4 (left: 1 4 8)",
                "8 / 4 = 2 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)",
                "8 / 4 = 2 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)",
                "8 / 4 = 2 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)",
                "4 * 1 = 4 (left: 4 4 8)\n4 * 4 = 16 (left: 16 8)"
            ]
        },
        "step_9": {
            "steps": [
                "8 / 4 = 2 (left: 1 2 8)\n2 - 1 = 1 (left: 1 8)\n8 / 1 = 8 (left: 1 8)\n8 / 1 = 8 (left: 1 8)",
                "8 / 4 = 2 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5 8)",
                "8 / 4 = 2 (left: 1 2 8)\n2 - 1 = 1 (left: 1 8)\n8 / 1 = 8 (left: 1 8)\n1 + 8 = 9 (left: 9)",
                "8 - 1 = 7 (left: 1 4 7)\n4 * 7 = 28 (left: 1 28)\n28 / 1 = 28 (left: 1 28)\n1 + 28 = 29 (left: 28 29)",
                "4 - 1 = 3 (left: 1 3 8)\n3 / 1 = 3 (left: 3, 8)\n10 - 5 = 5 (left: 5 5)",
                "8 - 4 = 4 (left: 1 4 8)\n4 * 8 = 32 (left: 1 32)",
                "8 / 4 = 2 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)\n3 + 8 = 11 (left: 8 11)",
                "8 / 4 = 2 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)\n3 + 8 = 11 (left: 8 11)",
                "8 / 4 = 2 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)\n3 + 8 = 11 (left: 8 11)",
                "4 * 1 = 4 (left: 4 4 8)\n4 * 4 = 16 (left: 16 8)\n16 - 8 = 8 (left: 8 8)"
            ],
            "values": [
                21.001,
                0.003,
                0.002,
                0.003,
                0.002,
                20.002,
                0.002,
                0.003,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 8.7",
                "1 <- 2.7",
                "2 <- 6.1",
                "3 <- 2.2",
                "4 <- 4.9",
                "5 <- 8.7",
                "6 <- 8.7",
                "7 <- 3.7",
                "8 <- 8.7",
                "9 <- 8.7"
            ],
            "resampled_steps": [
                "8 / 4 = 2 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)",
                "8 / 4 = 2 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)",
                "4 - 1 = 3 (left: 1 3 8)\n3 / 1 = 3 (left: 3, 8)",
                "8 / 4 = 2 (left: 1 2 8)\n8 / 2 = 4 (left: 1 4)",
                "8 / 4 = 2 (left: 1 2 8)\n2 - 1 = 1 (left: 1 8)",
                "8 / 4 = 2 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)",
                "8 / 4 = 2 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)",
                "8 / 4 = 2 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)\n3 * 8 = 24 (left: 8 24)",
                "8 / 4 = 2 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)",
                "8 / 4 = 2 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)"
            ]
        },
        "step_10": {
            "steps": [
                "8 / 4 = 2 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5 8)",
                "8 / 4 = 2 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)\n8 / 3 = 2.67 (left: 2.67 8)",
                "4 - 1 = 3 (left: 1 3 8)\n3 / 1 = 3 (left: 3, 8)\n3 * 8 = 24 (left: 24)",
                "8 / 4 = 2 (left: 1 2 8)\n8 / 2 = 4 (left: 1 4)\n1 + 4 = 5 (left: 5)",
                "8 / 4 = 2 (left: 1 2 8)\n2 - 1 = 1 (left: 1 8)\n8 - 1 = 7 (left: 7 8)",
                "8 / 4 = 2 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)\n8 / 3 = 2.67 (left: 2.67 8)",
                "8 / 4 = 2 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)\n3 * 8 = 24 (left: 8 24)",
                "8 / 4 = 2 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)\n3 * 8 = 24 (left: 8 24)\n24 / 8 = 3 (left: 3 8)",
                "8 / 4 = 2 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)",
                "8 / 4 = 2 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)\n8 / 3 = 2.67 (left: 2.67 8)"
            ],
            "values": [
                2.001,
                3.0,
                40.0,
                0.003,
                1.002,
                3.0,
                2.001,
                60.0,
                0.003,
                3.0
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 0.6559200000000001
    },
    "12": {
        "input": "1 1 5 8",
        "step_1": {
            "steps": [
                "1 + 5 = 6 (left: 6 5 8)",
                "1 + 1 = 2 (left: 2 5 8)",
                "8 - 5 = 3 (left: 1 3 8)",
                "1 + 1 = 2 (left: 2 5 8)",
                "8 - 5 = 3 (left: 1 3 8)",
                "1 + 1 = 2 (left: 2 5 8)",
                "8 - 5 = 3 (left: 1 3 8)",
                "5 - 1 = 4 (left: 1 4 8)",
                "8 - 1 = 7 (left: 1 7 5)",
                "8 * 5 = 40 (left: 1 5 40)"
            ],
            "values": [
                3.0,
                3.0,
                60.0,
                2.001,
                60.0,
                3.0,
                60.0,
                20.002,
                3.0,
                22.0
            ],
            "resampled": [
                "0 <- 1.8",
                "1 <- 1.7",
                "2 <- 1.2",
                "3 <- 1.4",
                "4 <- 1.9",
                "5 <- 1.4",
                "6 <- INIT",
                "7 <- 1.6",
                "8 <- INIT",
                "9 <- 1.9"
            ],
            "resampled_steps": [
                "8 - 1 = 7 (left: 1 7 5)",
                "5 - 1 = 4 (left: 1 4 8)",
                "8 - 5 = 3 (left: 1 3 8)",
                "8 - 5 = 3 (left: 1 3 8)",
                "8 * 5 = 40 (left: 1 5 40)",
                "8 - 5 = 3 (left: 1 3 8)",
                "",
                "8 - 5 = 3 (left: 1 3 8)",
                "",
                "8 * 5 = 40 (left: 1 5 40)"
            ]
        },
        "step_2": {
            "steps": [
                "8 - 1 = 7 (left: 1 7 5)\n5 + 1 = 6 (left: 7 6)",
                "5 - 1 = 4 (left: 1 4 8)\n8 - 4 = 4 (left: 1 4)",
                "8 - 5 = 3 (left: 1 3 8)\n3 - 1 = 2 (left: 2 8)",
                "8 - 5 = 3 (left: 1 3 8)\n8 - 1 = 7 (left: 3 7)",
                "8 * 5 = 40 (left: 1 5 40)\n5 ^ 2 = 25 (left: 1 25)",
                "8 - 5 = 3 (left: 1 3 8)\n3 + 8 = 11 (left: 1 11)",
                "1 * 5 = 5 (left: 1 5 8)",
                "8 - 5 = 3 (left: 1 3 8)\n3 / 1 = 3 (left: 3 8)",
                "5 * 8 = 40 (left: 1 5 40)",
                "8 * 5 = 40 (left: 1 5 40)\n5 - 1 = 4 (left: 4 40)"
            ],
            "values": [
                20.002,
                41.0,
                2.001,
                0.001,
                22.0,
                1.001,
                2.0,
                60.0,
                22.0,
                21.001
            ],
            "resampled": [
                "0 <- 1.9",
                "1 <- 2.8",
                "2 <- 1.2",
                "3 <- 1.9",
                "4 <- 2.7",
                "5 <- 1.4",
                "6 <- 2.1",
                "7 <- 1.4",
                "8 <- 2.8",
                "9 <- 2.4"
            ],
            "resampled_steps": [
                "8 * 5 = 40 (left: 1 5 40)",
                "5 * 8 = 40 (left: 1 5 40)",
                "8 - 5 = 3 (left: 1 3 8)",
                "8 * 5 = 40 (left: 1 5 40)",
                "8 - 5 = 3 (left: 1 3 8)\n3 / 1 = 3 (left: 3 8)",
                "8 - 5 = 3 (left: 1 3 8)",
                "5 - 1 = 4 (left: 1 4 8)\n8 - 4 = 4 (left: 1 4)",
                "8 - 5 = 3 (left: 1 3 8)",
                "5 * 8 = 40 (left: 1 5 40)",
                "8 * 5 = 40 (left: 1 5 40)\n5 ^ 2 = 25 (left: 1 25)"
            ]
        },
        "step_3": {
            "steps": [
                "8 * 5 = 40 (left: 1 5 40)\n5 - 1 = 4 (left: 4 40)",
                "5 * 8 = 40 (left: 1 5 40)\n40 - 5 = 35 (left: 1 35)",
                "8 - 5 = 3 (left: 1 3 8)\n1 + 3 = 4 (left: 4 8)",
                "8 * 5 = 40 (left: 1 5 40)\n1 * 5 = 5 (left: 5 40)",
                "8 - 5 = 3 (left: 1 3 8)\n3 / 1 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5 8)",
                "8 - 5 = 3 (left: 1 3 8)\n3 / 1 = 3 (left: 3 8)",
                "5 - 1 = 4 (left: 1 4 8)\n8 - 4 = 4 (left: 1 4)\n1 * 4 = 4 (left: 4)",
                "8 - 5 = 3 (left: 1 3 8)\n1 * 8 = 8 (left: 3 8)",
                "5 * 8 = 40 (left: 1 5 40)\n40 - 5 = 35 (left: 1 35)",
                "8 * 5 = 40 (left: 1 5 40)\n5 ^ 2 = 25 (left: 1 25)\n25 / 1 = 25 (left: 25)"
            ],
            "values": [
                21.001,
                0.002,
                1.002,
                21.001,
                1.002,
                60.0,
                0.002,
                60.0,
                20.002,
                0.002
            ],
            "resampled": [
                "0 <- 3.5",
                "1 <- 1.4",
                "2 <- 2.1",
                "3 <- 2.8",
                "4 <- 2.7",
                "5 <- 1.6",
                "6 <- 3.7",
                "7 <- 1.6",
                "8 <- 3.8",
                "9 <- 3.0"
            ],
            "resampled_steps": [
                "8 - 5 = 3 (left: 1 3 8)\n3 / 1 = 3 (left: 3 8)",
                "8 - 5 = 3 (left: 1 3 8)",
                "5 - 1 = 4 (left: 1 4 8)\n8 - 4 = 4 (left: 1 4)",
                "5 * 8 = 40 (left: 1 5 40)",
                "8 - 5 = 3 (left: 1 3 8)\n3 / 1 = 3 (left: 3 8)",
                "8 - 5 = 3 (left: 1 3 8)",
                "8 - 5 = 3 (left: 1 3 8)\n1 * 8 = 8 (left: 3 8)",
                "8 - 5 = 3 (left: 1 3 8)",
                "5 * 8 = 40 (left: 1 5 40)\n40 - 5 = 35 (left: 1 35)",
                "8 * 5 = 40 (left: 1 5 40)\n5 - 1 = 4 (left: 4 40)"
            ]
        },
        "step_4": {
            "steps": [
                "8 - 5 = 3 (left: 1 3 8)\n3 / 1 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5 8)",
                "8 - 5 = 3 (left: 1 3 8)\n3 * 8 = 24 (left: 1 24)",
                "5 - 1 = 4 (left: 1 4 8)\n8 - 4 = 4 (left: 1 4)\n1 * 4 = 4 (left: 4)",
                "5 * 8 = 40 (left: 1 5 40)\n5 * 8 = 40 (left: 1 40)",
                "8 - 5 = 3 (left: 1 3 8)\n3 / 1 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5 8)",
                "8 - 5 = 3 (left: 1 3 8)\n1 + 3 = 4 (left: 4 8)",
                "8 - 5 = 3 (left: 1 3 8)\n1 * 8 = 8 (left: 3 8)\n8 / 3 = 2.66667 (left: 2.66667 8)",
                "8 - 5 = 3 (left: 1 3 8)\n8 / 3 = 2.6667 (left: 1 2.6667)",
                "5 * 8 = 40 (left: 1 5 40)\n40 - 5 = 35 (left: 1 35)\n1 * 35 = 35 (left: 35)",
                "8 * 5 = 40 (left: 1 5 40)\n5 - 1 = 4 (left: 4 40)\n4 + 40 = 44 (left: 40 44)"
            ],
            "values": [
                21.0,
                60.0,
                0.002,
                21.0,
                1.002,
                20.002,
                2.0,
                0.001,
                0.002,
                0.003
            ],
            "resampled": [
                "0 <- 3.2",
                "1 <- 3.0",
                "2 <- 4.1",
                "3 <- 4.3",
                "4 <- 1.9",
                "5 <- 1.2",
                "6 <- 1.4",
                "7 <- 2.1",
                "8 <- 1.3",
                "9 <- 4.3"
            ],
            "resampled_steps": [
                "8 - 5 = 3 (left: 1 3 8)\n1 + 3 = 4 (left: 4 8)",
                "8 * 5 = 40 (left: 1 5 40)\n5 - 1 = 4 (left: 4 40)",
                "8 - 5 = 3 (left: 1 3 8)\n3 * 8 = 24 (left: 1 24)",
                "5 * 8 = 40 (left: 1 5 40)\n5 * 8 = 40 (left: 1 40)",
                "8 * 5 = 40 (left: 1 5 40)",
                "8 - 5 = 3 (left: 1 3 8)",
                "8 - 5 = 3 (left: 1 3 8)",
                "5 - 1 = 4 (left: 1 4 8)\n8 - 4 = 4 (left: 1 4)",
                "1 + 1 = 2 (left: 2 5 8)",
                "5 * 8 = 40 (left: 1 5 40)\n5 * 8 = 40 (left: 1 40)"
            ]
        },
        "step_5": {
            "steps": [
                "8 - 5 = 3 (left: 1 3 8)\n1 + 3 = 4 (left: 4 8)\n4 + 8 = 12 (left: 8 12)",
                "8 * 5 = 40 (left: 1 5 40)\n5 - 1 = 4 (left: 4 40)\n4 + 40 = 44 (left: 44)",
                "8 - 5 = 3 (left: 1 3 8)\n3 * 8 = 24 (left: 1 24)\n24 / 1 = 24 (left: 24)",
                "5 * 8 = 40 (left: 1 5 40)\n5 * 8 = 40 (left: 1 40)\n1 * 40 = 40 (left: 40 40)",
                "8 * 5 = 40 (left: 1 5 40)\n40 - 1 = 39 (left: 5 39)",
                "8 - 5 = 3 (left: 1 3 8)\n8 / 3 = 2.67 (left: 1 2.67)",
                "8 - 5 = 3 (left: 1 3 8)\n3 * 8 = 24 (left: 1 24)",
                "5 - 1 = 4 (left: 1 4 8)\n8 - 4 = 4 (left: 1 4)\n4 - 1 = 3 (left: 3)",
                "1 + 1 = 2 (left: 2 5 8)\n5 - 2 = 3 (left: 3 8)",
                "5 * 8 = 40 (left: 1 5 40)\n5 * 8 = 40 (left: 1 40)\n1 + 40 = 41 (left: 40 41)"
            ],
            "values": [
                2.001,
                20.001,
                0.0,
                0.002,
                1.001,
                1.001,
                60.0,
                0.002,
                60.0,
                0.002
            ],
            "resampled": [
                "0 <- 5.8",
                "1 <- 2.1",
                "2 <- 1.4",
                "3 <- 4.1",
                "4 <- 1.2",
                "5 <- 3.5",
                "6 <- 4.1",
                "7 <- 4.1",
                "8 <- 1.6",
                "9 <- INIT"
            ],
            "resampled_steps": [
                "1 + 1 = 2 (left: 2 5 8)\n5 - 2 = 3 (left: 3 8)",
                "5 - 1 = 4 (left: 1 4 8)\n8 - 4 = 4 (left: 1 4)",
                "8 - 5 = 3 (left: 1 3 8)",
                "8 - 5 = 3 (left: 1 3 8)\n3 * 8 = 24 (left: 1 24)",
                "8 - 5 = 3 (left: 1 3 8)",
                "8 - 5 = 3 (left: 1 3 8)\n3 / 1 = 3 (left: 3 8)",
                "8 - 5 = 3 (left: 1 3 8)\n3 * 8 = 24 (left: 1 24)",
                "8 - 5 = 3 (left: 1 3 8)\n3 * 8 = 24 (left: 1 24)",
                "8 - 5 = 3 (left: 1 3 8)",
                ""
            ]
        },
        "step_6": {
            "steps": [
                "1 + 1 = 2 (left: 2 5 8)\n5 - 2 = 3 (left: 3 8)\n8 + 3 = 11 (left: 3 11)",
                "5 - 1 = 4 (left: 1 4 8)\n8 - 4 = 4 (left: 1 4)\n4 - 1 = 3 (left: 3)",
                "8 - 5 = 3 (left: 1 3 8)\n1 + 3 = 4 (left: 4 8)",
                "8 - 5 = 3 (left: 1 3 8)\n3 * 8 = 24 (left: 1 24)\n24 - 1 = 23 (left: 1 23)",
                "8 - 5 = 3 (left: 1 3 8)\n1 + 3 = 4 (left: 4 8)",
                "8 - 5 = 3 (left: 1 3 8)\n3 / 1 = 3 (left: 3 8)\n3 * 8 = 24 (left: 8 24)",
                "8 - 5 = 3 (left: 1 3 8)\n3 * 8 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24 24)",
                "8 - 5 = 3 (left: 1 3 8)\n3 * 8 = 24 (left: 1 24)\n24 - 1 = 23 (left: 23)",
                "8 - 5 = 3 (left: 1 3 8)\n1 + 3 = 4 (left: 4 8)",
                "8 - 5 = 3 (left: 1 3 8)"
            ],
            "values": [
                0.003,
                0.003,
                0.003,
                40.001,
                0.003,
                0.003,
                20.002,
                0.002,
                0.003,
                60.0
            ],
            "resampled": [
                "0 <- 5.8",
                "1 <- 5.8",
                "2 <- 4.1",
                "3 <- 5.6",
                "4 <- 2.0",
                "5 <- 1.2",
                "6 <- 3.7",
                "7 <- 6.9",
                "8 <- 6.3",
                "9 <- 2.7"
            ],
            "resampled_steps": [
                "1 + 1 = 2 (left: 2 5 8)\n5 - 2 = 3 (left: 3 8)",
                "1 + 1 = 2 (left: 2 5 8)\n5 - 2 = 3 (left: 3 8)",
                "8 - 5 = 3 (left: 1 3 8)\n3 * 8 = 24 (left: 1 24)",
                "8 - 5 = 3 (left: 1 3 8)\n3 * 8 = 24 (left: 1 24)",
                "8 - 1 = 7 (left: 1 7 5)\n5 + 1 = 6 (left: 7 6)",
                "8 - 5 = 3 (left: 1 3 8)",
                "8 - 5 = 3 (left: 1 3 8)\n1 * 8 = 8 (left: 3 8)",
                "8 - 5 = 3 (left: 1 3 8)",
                "8 - 5 = 3 (left: 1 3 8)\n3 * 8 = 24 (left: 1 24)\n24 - 1 = 23 (left: 1 23)",
                "8 - 5 = 3 (left: 1 3 8)\n3 / 1 = 3 (left: 3 8)"
            ]
        },
        "step_7": {
            "steps": [
                "1 + 1 = 2 (left: 2 5 8)\n5 - 2 = 3 (left: 3 8)\n8 / 3 = 2.67 (left: 2.67 8)",
                "1 + 1 = 2 (left: 2 5 8)\n5 - 2 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5)",
                "8 - 5 = 3 (left: 1 3 8)\n3 * 8 = 24 (left: 1 24)\n24 / 1 = 24 (left: 1 24)",
                "8 - 5 = 3 (left: 1 3 8)\n3 * 8 = 24 (left: 1 24)\n24 - 1 = 23 (left: 1 23)",
                "8 - 1 = 7 (left: 1 7 5)\n5 + 1 = 6 (left: 7 6)\n6 * 7 = 42 (left: 42)",
                "8 - 5 = 3 (left: 1 3 8)\n3 * 8 = 24 (left: 1 24)",
                "8 - 5 = 3 (left: 1 3 8)\n1 * 8 = 8 (left: 3 8)\n3 + 8 = 11 (left: 8 11)",
                "8 - 5 = 3 (left: 1 3 8)\n8 - 1 = 7 (left: 3 7)",
                "8 - 5 = 3 (left: 1 3 8)\n3 * 8 = 24 (left: 1 24)\n24 - 1 = 23 (left: 1 23)\n1 * 23 = 23 (left: 23)",
                "8 - 5 = 3 (left: 1 3 8)\n3 / 1 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5 8)"
            ],
            "values": [
                2.001,
                0.003,
                60.0,
                40.001,
                0.002,
                60.0,
                0.002,
                0.001,
                0.003,
                2.001
            ],
            "resampled": [
                "0 <- 7.5",
                "1 <- 4.5",
                "2 <- 7.5",
                "3 <- 7.5",
                "4 <- 7.5",
                "5 <- 5.1",
                "6 <- 5.8",
                "7 <- 7.3",
                "8 <- 2.9",
                "9 <- 4.1"
            ],
            "resampled_steps": [
                "8 - 5 = 3 (left: 1 3 8)\n3 * 8 = 24 (left: 1 24)",
                "8 - 5 = 3 (left: 1 3 8)\n1 + 3 = 4 (left: 4 8)",
                "8 - 5 = 3 (left: 1 3 8)\n3 * 8 = 24 (left: 1 24)",
                "8 - 5 = 3 (left: 1 3 8)\n3 * 8 = 24 (left: 1 24)",
                "8 - 5 = 3 (left: 1 3 8)\n3 * 8 = 24 (left: 1 24)",
                "8 * 5 = 40 (left: 1 5 40)\n5 - 1 = 4 (left: 4 40)\n4 + 40 = 44 (left: 44)",
                "1 + 1 = 2 (left: 2 5 8)\n5 - 2 = 3 (left: 3 8)",
                "8 - 5 = 3 (left: 1 3 8)\n3 * 8 = 24 (left: 1 24)\n24 - 1 = 23 (left: 1 23)",
                "8 * 5 = 40 (left: 1 5 40)\n5 - 1 = 4 (left: 4 40)",
                "8 - 5 = 3 (left: 1 3 8)\n3 * 8 = 24 (left: 1 24)"
            ]
        },
        "step_8": {
            "steps": [
                "8 - 5 = 3 (left: 1 3 8)\n3 * 8 = 24 (left: 1 24)\n1 + 24 = 25 (left: 25)",
                "8 - 5 = 3 (left: 1 3 8)\n1 + 3 = 4 (left: 4 8)\n4 + 8 = 12 (left: 8 12)",
                "8 - 5 = 3 (left: 1 3 8)\n3 * 8 = 24 (left: 1 24)\n24 - 1 = 23 (left: 23)",
                "8 - 5 = 3 (left: 1 3 8)\n3 * 8 = 24 (left: 1 24)\n24 - 1 = 23 (left: 23)",
                "8 - 5 = 3 (left: 1 3 8)\n3 * 8 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)",
                "8 * 5 = 40 (left: 1 5 40)\n5 - 1 = 4 (left: 4 40)\n4 + 40 = 44 (left: 44)\nThere are no possible next steps for the input 44, as it is a single number and cannot be combined with any other numbers using the basic arithmetic operations.",
                "1 + 1 = 2 (left: 2 5 8)\n5 - 2 = 3 (left: 3 8)\n8 / 3 = 2.67 (left: 2.67)",
                "8 - 5 = 3 (left: 1 3 8)\n3 * 8 = 24 (left: 1 24)\n24 - 1 = 23 (left: 1 23)\n1 + 23 = 24 (left: 23 24)",
                "8 * 5 = 40 (left: 1 5 40)\n5 - 1 = 4 (left: 4 40)\n40 / 4 = 10 (left: 4 10)",
                "8 - 5 = 3 (left: 1 3 8)\n3 * 8 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)"
            ],
            "values": [
                0.003,
                1.002,
                0.002,
                0.0,
                60.0,
                0.003,
                0.003,
                0.003,
                40.0,
                20.0
            ],
            "resampled": [
                "0 <- 8.8",
                "1 <- 5.8",
                "2 <- 6.3",
                "3 <- 5.6",
                "4 <- 1.6",
                "5 <- 8.9",
                "6 <- 8.8",
                "7 <- 3.8",
                "8 <- 7.3",
                "9 <- 7.2"
            ],
            "resampled_steps": [
                "8 * 5 = 40 (left: 1 5 40)\n5 - 1 = 4 (left: 4 40)\n40 / 4 = 10 (left: 4 10)",
                "1 + 1 = 2 (left: 2 5 8)\n5 - 2 = 3 (left: 3 8)",
                "8 - 5 = 3 (left: 1 3 8)\n3 * 8 = 24 (left: 1 24)\n24 - 1 = 23 (left: 1 23)",
                "8 - 5 = 3 (left: 1 3 8)\n3 * 8 = 24 (left: 1 24)",
                "8 - 5 = 3 (left: 1 3 8)",
                "8 - 5 = 3 (left: 1 3 8)\n3 * 8 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)",
                "8 * 5 = 40 (left: 1 5 40)\n5 - 1 = 4 (left: 4 40)\n40 / 4 = 10 (left: 4 10)",
                "5 * 8 = 40 (left: 1 5 40)\n40 - 5 = 35 (left: 1 35)",
                "8 - 5 = 3 (left: 1 3 8)\n3 * 8 = 24 (left: 1 24)\n24 - 1 = 23 (left: 1 23)",
                "8 - 5 = 3 (left: 1 3 8)\n3 * 8 = 24 (left: 1 24)\n24 / 1 = 24 (left: 1 24)"
            ]
        },
        "step_9": {
            "steps": [
                "8 * 5 = 40 (left: 1 5 40)\n5 - 1 = 4 (left: 4 40)\n40 / 4 = 10 (left: 4 10)\n10 / 4 = 2.5 (left: 2.5 10)",
                "1 + 1 = 2 (left: 2 5 8)\n5 - 2 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5 8)",
                "8 - 5 = 3 (left: 1 3 8)\n3 * 8 = 24 (left: 1 24)\n24 - 1 = 23 (left: 1 23)\n23 / 1 = 23 (left: 23)",
                "8 - 5 = 3 (left: 1 3 8)\n3 * 8 = 24 (left: 1 24)\n24 - 1 = 23 (left: 23)",
                "8 - 5 = 3 (left: 1 3 8)\n3 / 1 = 3 (left: 3 8)",
                "8 - 5 = 3 (left: 1 3 8)\n3 * 8 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)\nAnswer: 1 * (8 - 5) * 24 = 24",
                "8 * 5 = 40 (left: 1 5 40)\n5 - 1 = 4 (left: 4 40)\n40 / 4 = 10 (left: 4 10)\n4 + 10 = 14 (left: 10 14)",
                "5 * 8 = 40 (left: 1 5 40)\n40 - 5 = 35 (left: 1 35)\n35 / 1 = 35 (left: 35)",
                "8 - 5 = 3 (left: 1 3 8)\n3 * 8 = 24 (left: 1 24)\n24 - 1 = 23 (left: 1 23)\n23 - 1 = 22 (left: 1 22)",
                "8 - 5 = 3 (left: 1 3 8)\n3 * 8 = 24 (left: 1 24)\n24 / 1 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)"
            ],
            "values": [
                2.001,
                2.001,
                20.0,
                0.001,
                60.0,
                0.003,
                60.0,
                0.003,
                0.002,
                40.0
            ],
            "resampled": [
                "0 <- 2.1",
                "1 <- 9.9",
                "2 <- 6.3",
                "3 <- 5.6",
                "4 <- 9.6",
                "5 <- 7.3",
                "6 <- 6.9",
                "7 <- 1.2",
                "8 <- 9.4",
                "9 <- 4.1"
            ],
            "resampled_steps": [
                "5 - 1 = 4 (left: 1 4 8)\n8 - 4 = 4 (left: 1 4)",
                "8 - 5 = 3 (left: 1 3 8)\n3 * 8 = 24 (left: 1 24)\n24 / 1 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)",
                "8 - 5 = 3 (left: 1 3 8)\n3 * 8 = 24 (left: 1 24)\n24 - 1 = 23 (left: 1 23)",
                "8 - 5 = 3 (left: 1 3 8)\n3 * 8 = 24 (left: 1 24)",
                "8 * 5 = 40 (left: 1 5 40)\n5 - 1 = 4 (left: 4 40)\n40 / 4 = 10 (left: 4 10)\n4 + 10 = 14 (left: 10 14)",
                "8 - 5 = 3 (left: 1 3 8)\n3 * 8 = 24 (left: 1 24)\n24 - 1 = 23 (left: 1 23)",
                "8 - 5 = 3 (left: 1 3 8)",
                "8 - 5 = 3 (left: 1 3 8)",
                "8 - 5 = 3 (left: 1 3 8)\n3 / 1 = 3 (left: 3 8)",
                "8 - 5 = 3 (left: 1 3 8)\n3 * 8 = 24 (left: 1 24)"
            ]
        },
        "step_10": {
            "steps": [
                "5 - 1 = 4 (left: 1 4 8)\n8 - 4 = 4 (left: 1 4)\n4 - 1 = 3 (left: 3)",
                "8 - 5 = 3 (left: 1 3 8)\n3 * 8 = 24 (left: 1 24)\n24 / 1 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)\nAnswer: (8 - 5) * (3 * (24 / 1)) = 24",
                "8 - 5 = 3 (left: 1 3 8)\n3 * 8 = 24 (left: 1 24)\n24 - 1 = 23 (left: 1 23)\n23 / 1 = 23 (left: 23)",
                "8 - 5 = 3 (left: 1 3 8)\n3 * 8 = 24 (left: 1 24)\n24 - 1 = 23 (left: 1 23)",
                "8 * 5 = 40 (left: 1 5 40)\n5 - 1 = 4 (left: 4 40)\n40 / 4 = 10 (left: 4 10)\n4 + 10 = 14 (left: 10 14)\n10 * 14 = 140 (left: 140)",
                "8 - 5 = 3 (left: 1 3 8)\n3 * 8 = 24 (left: 1 24)\n24 - 1 = 23 (left: 1 23)\n1 - 23 = -22 (left: -22)",
                "8 - 5 = 3 (left: 1 3 8)\n3 / 1 = 3 (left: 3 8)",
                "8 - 5 = 3 (left: 1 3 8)\n1 + 3 = 4 (left: 4 8)",
                "8 - 5 = 3 (left: 1 3 8)\n3 / 1 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5 8)",
                "8 - 5 = 3 (left: 1 3 8)\n3 * 8 = 24 (left: 1 24)\n24 / 1 = 24 (left: 24)"
            ],
            "values": [
                0.002,
                20.002,
                20.0,
                1.002,
                0.002,
                0.003,
                60.0,
                0.002,
                0.0,
                20.0
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 0.737285
    },
    "13": {
        "input": "4 6 11 11",
        "step_1": {
            "steps": [
                "11 - 6 = 5 (left: 4 5 11)",
                "4 + 6 = 10 (left: 10 11 11)",
                "11 / 4 = 2.75 (left: 2.75 6 11)",
                "11 / 4 = 2.75 (left: 6 11 2.75)",
                "11 + 4 = 15 (left: 4 6 15)",
                "11 + 4 = 15 (left: 6 15 11)",
                "6 * 11 = 66 (left: 4 66 11)",
                "11 - 6 = 5 (left: 4 5 11)",
                "11 - 4 = 7 (left: 7 6 11)",
                "6 + 11 = 17 (left: 4 17 11)"
            ],
            "values": [
                20.002,
                0.003,
                2.0,
                3.0,
                40.001,
                21.001,
                22.0,
                0.003,
                60.0,
                3.0
            ],
            "resampled": [
                "0 <- 1.0",
                "1 <- 1.8",
                "2 <- INIT",
                "3 <- 1.4",
                "4 <- INIT",
                "5 <- 1.8",
                "6 <- INIT",
                "7 <- INIT",
                "8 <- 1.6",
                "9 <- 1.8"
            ],
            "resampled_steps": [
                "11 - 6 = 5 (left: 4 5 11)",
                "11 - 4 = 7 (left: 7 6 11)",
                "",
                "11 + 4 = 15 (left: 4 6 15)",
                "",
                "11 - 4 = 7 (left: 7 6 11)",
                "",
                "",
                "6 * 11 = 66 (left: 4 66 11)",
                "11 - 4 = 7 (left: 7 6 11)"
            ]
        },
        "step_2": {
            "steps": [
                "11 - 6 = 5 (left: 4 5 11)\n4 + 11 = 15 (left: 15 5)",
                "11 - 4 = 7 (left: 7 6 11)\n6 / 11 = 0.54 (left: 7 0.54)",
                "11 - 4 = 7 (left: 7 11 11)",
                "11 + 4 = 15 (left: 4 6 15)\n6 - 4 = 2 (left: 2 15)",
                "6 / 4 = 1.5 (left: 4 1.5 11)",
                "11 - 4 = 7 (left: 7 6 11)\n7 * 6 = 42 (left: 42 11)",
                "11 - 6 = 5 (left: 4 5 11)",
                "11 / 4 = 2.75 (left: 2.75 6 11)",
                "6 * 11 = 66 (left: 4 66 11)\n11 - 4 = 7 (left: 4 7)",
                "11 - 4 = 7 (left: 7 6 11)\n11 / 7 = 1.57 (left: 1.57 6)"
            ],
            "values": [
                0.003,
                2.0,
                1.002,
                0.003,
                2.001,
                0.003,
                1.002,
                2.001,
                0.003,
                0.001
            ],
            "resampled": [
                "0 <- 1.4",
                "1 <- 1.6",
                "2 <- INIT",
                "3 <- 1.8",
                "4 <- 1.8",
                "5 <- 1.6",
                "6 <- 1.4",
                "7 <- 1.9",
                "8 <- 1.0",
                "9 <- 1.8"
            ],
            "resampled_steps": [
                "11 + 4 = 15 (left: 4 6 15)",
                "6 * 11 = 66 (left: 4 66 11)",
                "",
                "11 - 4 = 7 (left: 7 6 11)",
                "11 - 4 = 7 (left: 7 6 11)",
                "6 * 11 = 66 (left: 4 66 11)",
                "11 + 4 = 15 (left: 4 6 15)",
                "6 + 11 = 17 (left: 4 17 11)",
                "11 - 6 = 5 (left: 4 5 11)",
                "11 - 4 = 7 (left: 7 6 11)"
            ]
        },
        "step_3": {
            "steps": [
                "11 + 4 = 15 (left: 4 6 15)\n6 - 4 = 2 (left: 2 15)",
                "6 * 11 = 66 (left: 4 66 11)\n4 + 66 = 70 (left: 70 11)",
                "6 * 11 = 66 (left: 4 66 11)",
                "11 - 4 = 7 (left: 7 6 11)\n7 / 6 = 1.1667 (left: 1.1667 11)",
                "11 - 4 = 7 (left: 7 6 11)\n6 + 11 = 17 (left: 7 17)",
                "6 * 11 = 66 (left: 4 66 11)\n66 - 4 = 62 (left: 62 11)",
                "11 + 4 = 15 (left: 4 6 15)\n15 - 4 = 11 (left: 6 11)",
                "6 + 11 = 17 (left: 4 17 11)\n17 / 4 = 4.25 (left: 4.25 11)",
                "11 - 6 = 5 (left: 4 5 11)\n11 / 5 = 2.2 (left: 4 2.2)",
                "11 - 4 = 7 (left: 7 6 11)\n7 + 6 = 13 (left: 13 11)"
            ],
            "values": [
                0.002,
                0.003,
                2.001,
                1.001,
                60.0,
                0.003,
                2.001,
                0.003,
                2.0,
                60.0
            ],
            "resampled": [
                "0 <- 3.9",
                "1 <- 1.4",
                "2 <- 3.4",
                "3 <- 3.4",
                "4 <- 1.5",
                "5 <- INIT",
                "6 <- 3.9",
                "7 <- 3.9",
                "8 <- 1.8",
                "9 <- 3.4"
            ],
            "resampled_steps": [
                "11 - 4 = 7 (left: 7 6 11)\n7 + 6 = 13 (left: 13 11)",
                "11 + 4 = 15 (left: 4 6 15)",
                "11 - 4 = 7 (left: 7 6 11)\n6 + 11 = 17 (left: 7 17)",
                "11 - 4 = 7 (left: 7 6 11)\n6 + 11 = 17 (left: 7 17)",
                "11 + 4 = 15 (left: 6 15 11)",
                "",
                "11 - 4 = 7 (left: 7 6 11)\n7 + 6 = 13 (left: 13 11)",
                "11 - 4 = 7 (left: 7 6 11)\n7 + 6 = 13 (left: 13 11)",
                "11 - 4 = 7 (left: 7 6 11)",
                "11 - 4 = 7 (left: 7 6 11)\n6 + 11 = 17 (left: 7 17)"
            ]
        },
        "step_4": {
            "steps": [
                "11 - 4 = 7 (left: 7 6 11)\n7 + 6 = 13 (left: 13 11)\n13 / 11 = 1.18181818182 (left: 1.18181818182)",
                "11 + 4 = 15 (left: 4 6 15)\n6 + 15 = 21 (left: 4 21)",
                "11 - 4 = 7 (left: 7 6 11)\n6 + 11 = 17 (left: 7 17)\n17 / 7 = 2.42857 (left: 2.42857)",
                "11 - 4 = 7 (left: 7 6 11)\n6 + 11 = 17 (left: 7 17)\n17 / 7 = 2.428571428571429 (left: 2.428571428571429)",
                "11 + 4 = 15 (left: 6 15 11)\n15 / 6 = 2.5 (left: 2.5 11)",
                "11 / 4 = 2.75 (left: 2.75 6 11)",
                "11 - 4 = 7 (left: 7 6 11)\n7 + 6 = 13 (left: 13 11)\n13 - 11 = 2 (left: 2)",
                "11 - 4 = 7 (left: 7 6 11)\n7 + 6 = 13 (left: 13 11)\n13 - 11 = 2 (left: 2)",
                "11 - 4 = 7 (left: 7 6 11)\n6 + 11 = 17 (left: 7 17)",
                "11 - 4 = 7 (left: 7 6 11)\n6 + 11 = 17 (left: 7 17)\n7 * 17 = 119 (left: 17 119)"
            ],
            "values": [
                0.002,
                20.002,
                0.002,
                0.0,
                0.003,
                3.0,
                0.003,
                0.003,
                41.0,
                0.003
            ],
            "resampled": [
                "0 <- 3.9",
                "1 <- 4.8",
                "2 <- 4.8",
                "3 <- INIT",
                "4 <- 2.7",
                "5 <- 3.4",
                "6 <- 1.3",
                "7 <- 4.8",
                "8 <- 3.4",
                "9 <- 1.0"
            ],
            "resampled_steps": [
                "11 - 4 = 7 (left: 7 6 11)\n7 + 6 = 13 (left: 13 11)",
                "11 - 4 = 7 (left: 7 6 11)\n6 + 11 = 17 (left: 7 17)",
                "11 - 4 = 7 (left: 7 6 11)\n6 + 11 = 17 (left: 7 17)",
                "",
                "11 / 4 = 2.75 (left: 2.75 6 11)",
                "11 - 4 = 7 (left: 7 6 11)\n6 + 11 = 17 (left: 7 17)",
                "11 / 4 = 2.75 (left: 6 11 2.75)",
                "11 - 4 = 7 (left: 7 6 11)\n6 + 11 = 17 (left: 7 17)",
                "11 - 4 = 7 (left: 7 6 11)\n6 + 11 = 17 (left: 7 17)",
                "11 - 6 = 5 (left: 4 5 11)"
            ]
        },
        "step_5": {
            "steps": [
                "11 - 4 = 7 (left: 7 6 11)\n7 + 6 = 13 (left: 13 11)\n11 / 13 = 0.85 (left: 0.85)",
                "11 - 4 = 7 (left: 7 6 11)\n6 + 11 = 17 (left: 7 17)\n7 * 17 = 119 (left: 119)",
                "11 - 4 = 7 (left: 7 6 11)\n6 + 11 = 17 (left: 7 17)\n17 / 7 = 2.42857 (left: 2.42857)",
                "4 * 6 = 24 (left: 24 11 11)",
                "11 / 4 = 2.75 (left: 2.75 6 11)\n6 / 2.75 = 2.18 (left: 2.18 11)",
                "11 - 4 = 7 (left: 7 6 11)\n6 + 11 = 17 (left: 7 17)\n7 + 17 = 24 (left: 24)",
                "11 / 4 = 2.75 (left: 6 11 2.75)\n6 - 2.75 = 3.25 (left: 3.25 11)",
                "11 - 4 = 7 (left: 7 6 11)\n6 + 11 = 17 (left: 7 17)\n7 + 17 = 24 (left: 24)",
                "11 - 4 = 7 (left: 7 6 11)\n6 + 11 = 17 (left: 7 17)\n7 * 17 = 119 (left: 119)",
                "11 - 6 = 5 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)"
            ],
            "values": [
                0.003,
                0.002,
                0.003,
                40.001,
                2.001,
                40.0,
                0.002,
                40.0,
                0.003,
                60.0
            ],
            "resampled": [
                "0 <- 3.4",
                "1 <- 4.8",
                "2 <- 4.1",
                "3 <- 1.4",
                "4 <- 5.9",
                "5 <- 5.9",
                "6 <- 1.6",
                "7 <- 5.9",
                "8 <- 5.7",
                "9 <- 5.5"
            ],
            "resampled_steps": [
                "11 - 4 = 7 (left: 7 6 11)\n6 + 11 = 17 (left: 7 17)",
                "11 - 4 = 7 (left: 7 6 11)\n6 + 11 = 17 (left: 7 17)",
                "11 + 4 = 15 (left: 4 6 15)\n6 + 15 = 21 (left: 4 21)",
                "11 + 4 = 15 (left: 4 6 15)",
                "11 - 6 = 5 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)",
                "11 - 6 = 5 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)",
                "6 * 11 = 66 (left: 4 66 11)",
                "11 - 6 = 5 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)",
                "11 - 4 = 7 (left: 7 6 11)\n6 + 11 = 17 (left: 7 17)\n7 + 17 = 24 (left: 24)",
                "11 - 4 = 7 (left: 7 6 11)\n6 + 11 = 17 (left: 7 17)\n7 + 17 = 24 (left: 24)"
            ]
        },
        "step_6": {
            "steps": [
                "11 - 4 = 7 (left: 7 6 11)\n6 + 11 = 17 (left: 7 17)\n7 * 17 = 119 (left: 119)",
                "11 - 4 = 7 (left: 7 6 11)\n6 + 11 = 17 (left: 7 17)\n7 + 17 = 24 (left: 17 24)",
                "11 + 4 = 15 (left: 4 6 15)\n6 + 15 = 21 (left: 4 21)\n4 * 21 = 84 (left: 84)",
                "11 + 4 = 15 (left: 4 6 15)\n6 + 15 = 21 (left: 4 21)",
                "11 - 6 = 5 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "11 - 6 = 5 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)",
                "6 * 11 = 66 (left: 4 66 11)\n66 - 4 = 62 (left: 62 11)",
                "11 - 6 = 5 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n6 / 4 = 1.5 (left: 1.5)",
                "11 - 4 = 7 (left: 7 6 11)\n6 + 11 = 17 (left: 7 17)\n7 + 17 = 24 (left: 24)\nAnswer: (11 - 4) + (6 + 11) = 24",
                "11 - 4 = 7 (left: 7 6 11)\n6 + 11 = 17 (left: 7 17)\n7 + 17 = 24 (left: 24)\nAnswer: (11 - 4) + (6 + 11) = 24"
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 1
            }
        ],
        "cost": 0.7903560000000001
    },
    "14": {
        "input": "1 1 3 12",
        "step_1": {
            "steps": [
                "1 + 1 = 2 (left: 2 3 12)",
                "12 / 3 = 4 (left: 1 3 4)",
                "3 + 1 = 4 (left: 4 3 12)",
                "3 + 1 = 4 (left: 4 3 12)",
                "3 * 3 = 9 (left: 1 9 12)",
                "3 + 1 = 4 (left: 4 3 12)",
                "3 + 1 = 4 (left: 1 4 12)",
                "3 + 1 = 4 (left: 1 4 12)",
                "12 - 3 = 9 (left: 1 3 9)",
                "3 + 1 = 4 (left: 4 3 12)"
            ],
            "values": [
                1.002,
                2.0,
                60.0,
                40.001,
                1.002,
                60.0,
                0.003,
                1.002,
                0.003,
                60.0
            ],
            "resampled": [
                "0 <- 1.3",
                "1 <- 1.9",
                "2 <- 1.5",
                "3 <- 1.2",
                "4 <- 1.3",
                "5 <- 1.9",
                "6 <- 1.9",
                "7 <- 1.9",
                "8 <- 1.9",
                "9 <- 1.9"
            ],
            "resampled_steps": [
                "3 + 1 = 4 (left: 4 3 12)",
                "3 + 1 = 4 (left: 4 3 12)",
                "3 + 1 = 4 (left: 4 3 12)",
                "3 + 1 = 4 (left: 4 3 12)",
                "3 + 1 = 4 (left: 4 3 12)",
                "3 + 1 = 4 (left: 4 3 12)",
                "3 + 1 = 4 (left: 4 3 12)",
                "3 + 1 = 4 (left: 4 3 12)",
                "3 + 1 = 4 (left: 4 3 12)",
                "3 + 1 = 4 (left: 4 3 12)"
            ]
        },
        "step_2": {
            "steps": [
                "3 + 1 = 4 (left: 4 3 12)\n4 / 3 = 1.33 (left: 1.33 12)",
                "3 + 1 = 4 (left: 4 3 12)\n4 + 3 = 7 (left: 7 12)",
                "3 + 1 = 4 (left: 4 3 12)\n4 * 3 = 12 (left: 12 12)",
                "3 + 1 = 4 (left: 4 3 12)\n3 / 12 = 0.25 (left: 0.25 12)",
                "3 + 1 = 4 (left: 4 3 12)\n4 + 3 = 7 (left: 7 12)",
                "3 + 1 = 4 (left: 4 3 12)\n12 / 4 = 3 (left: 3 3 12)",
                "3 + 1 = 4 (left: 4 3 12)\n4 / 3 = 1.33 (left: 1.33 12)",
                "3 + 1 = 4 (left: 4 3 12)\n4 + 3 = 7 (left: 7 12)",
                "3 + 1 = 4 (left: 4 3 12)\n12 - 4 = 8 (left: 3 8)",
                "3 + 1 = 4 (left: 4 3 12)\n3 / 12 = 0.25 (left: 0.25 12)"
            ],
            "values": [
                0.001,
                0.003,
                60.0,
                20.002,
                0.003,
                0.003,
                3.0,
                0.002,
                60.0,
                1.001
            ],
            "resampled": [
                "0 <- 2.8",
                "1 <- 1.3",
                "2 <- 1.3",
                "3 <- 1.2",
                "4 <- 1.2",
                "5 <- 2.2",
                "6 <- 2.2",
                "7 <- 2.8",
                "8 <- 1.2",
                "9 <- 2.6"
            ],
            "resampled_steps": [
                "3 + 1 = 4 (left: 4 3 12)\n12 - 4 = 8 (left: 3 8)",
                "3 + 1 = 4 (left: 4 3 12)",
                "3 + 1 = 4 (left: 4 3 12)",
                "3 + 1 = 4 (left: 4 3 12)",
                "3 + 1 = 4 (left: 4 3 12)",
                "3 + 1 = 4 (left: 4 3 12)\n4 * 3 = 12 (left: 12 12)",
                "3 + 1 = 4 (left: 4 3 12)\n4 * 3 = 12 (left: 12 12)",
                "3 + 1 = 4 (left: 4 3 12)\n12 - 4 = 8 (left: 3 8)",
                "3 + 1 = 4 (left: 4 3 12)",
                "3 + 1 = 4 (left: 4 3 12)\n4 / 3 = 1.33 (left: 1.33 12)"
            ]
        },
        "step_3": {
            "steps": [
                "3 + 1 = 4 (left: 4 3 12)\n12 - 4 = 8 (left: 3 8)\n3 + 8 = 11 (left: 8 11)",
                "3 + 1 = 4 (left: 4 3 12)\n4 - 3 = 1 (left: 1 12)",
                "3 + 1 = 4 (left: 4 3 12)\n4 * 3 = 12 (left: 12 12)",
                "3 + 1 = 4 (left: 4 3 12)\n4 * 3 = 12 (left: 12 12)",
                "3 + 1 = 4 (left: 4 3 12)\n3 + 12 = 15 (left: 4 15)",
                "3 + 1 = 4 (left: 4 3 12)\n4 * 3 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144)",
                "3 + 1 = 4 (left: 4 3 12)\n4 * 3 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144)",
                "3 + 1 = 4 (left: 4 3 12)\n12 - 4 = 8 (left: 3 8)\n3 + 8 = 11 (left: 8 11)",
                "3 + 1 = 4 (left: 4 3 12)\n12 - 4 = 8 (left: 3 8)",
                "3 + 1 = 4 (left: 4 3 12)\n4 / 3 = 1.33 (left: 1.33 12)\n1.33 + 12 = 13.33 (left: 13.33)"
            ],
            "values": [
                0.002,
                1.001,
                1.002,
                20.002,
                1.002,
                20.002,
                0.001,
                3.0,
                60.0,
                0.002
            ],
            "resampled": [
                "0 <- 3.1",
                "1 <- 1.2",
                "2 <- 2.8",
                "3 <- 2.8",
                "4 <- 3.8",
                "5 <- 2.8",
                "6 <- 1.5",
                "7 <- 1.2",
                "8 <- 1.2",
                "9 <- 1.3"
            ],
            "resampled_steps": [
                "3 + 1 = 4 (left: 4 3 12)\n4 - 3 = 1 (left: 1 12)",
                "3 + 1 = 4 (left: 4 3 12)",
                "3 + 1 = 4 (left: 4 3 12)\n12 - 4 = 8 (left: 3 8)",
                "3 + 1 = 4 (left: 4 3 12)\n12 - 4 = 8 (left: 3 8)",
                "3 + 1 = 4 (left: 4 3 12)\n12 - 4 = 8 (left: 3 8)",
                "3 + 1 = 4 (left: 4 3 12)\n12 - 4 = 8 (left: 3 8)",
                "3 + 1 = 4 (left: 4 3 12)",
                "3 + 1 = 4 (left: 4 3 12)",
                "3 + 1 = 4 (left: 4 3 12)",
                "3 + 1 = 4 (left: 4 3 12)"
            ]
        },
        "step_4": {
            "steps": [
                "3 + 1 = 4 (left: 4 3 12)\n4 - 3 = 1 (left: 1 12)\n1 - 12 = -11 (left: -11)",
                "3 + 1 = 4 (left: 4 3 12)\n12 / 4 = 3 (left: 3 12)",
                "3 + 1 = 4 (left: 4 3 12)\n12 - 4 = 8 (left: 3 8)\n8 / 3 = 2.66667 (left: 2.66667 8)",
                "3 + 1 = 4 (left: 4 3 12)\n12 - 4 = 8 (left: 3 8)\n3 + 8 = 11 (left: 8 11)",
                "3 + 1 = 4 (left: 4 3 12)\n12 - 4 = 8 (left: 3 8)\n8 / 3 = 2.6667 (left: 3 2.6667)",
                "3 + 1 = 4 (left: 4 3 12)\n12 - 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 8 24)",
                "3 + 1 = 4 (left: 4 3 12)\n3 * 12 = 36 (left: 4 36)",
                "3 + 1 = 4 (left: 4 3 12)\n12 - 4 = 8 (left: 3 8)",
                "3 + 1 = 4 (left: 4 3 12)\n12 - 4 = 8 (left: 3 8)",
                "3 + 1 = 4 (left: 4 3 12)\n4 + 3 = 7 (left: 7 12)"
            ],
            "values": [
                0.002,
                0.003,
                2.001,
                1.001,
                3.0,
                0.003,
                2.001,
                60.0,
                60.0,
                0.002
            ],
            "resampled": [
                "0 <- 1.5",
                "1 <- 3.8",
                "2 <- 4.7",
                "3 <- 1.9",
                "4 <- 2.8",
                "5 <- 3.8",
                "6 <- 3.8",
                "7 <- 2.8",
                "8 <- 1.5",
                "9 <- 1.2"
            ],
            "resampled_steps": [
                "3 + 1 = 4 (left: 4 3 12)",
                "3 + 1 = 4 (left: 4 3 12)\n12 - 4 = 8 (left: 3 8)",
                "3 + 1 = 4 (left: 4 3 12)\n12 - 4 = 8 (left: 3 8)",
                "3 + 1 = 4 (left: 4 3 12)",
                "3 + 1 = 4 (left: 4 3 12)\n12 - 4 = 8 (left: 3 8)",
                "3 + 1 = 4 (left: 4 3 12)\n12 - 4 = 8 (left: 3 8)",
                "3 + 1 = 4 (left: 4 3 12)\n12 - 4 = 8 (left: 3 8)",
                "3 + 1 = 4 (left: 4 3 12)\n12 - 4 = 8 (left: 3 8)",
                "3 + 1 = 4 (left: 4 3 12)",
                "3 + 1 = 4 (left: 4 3 12)"
            ]
        },
        "step_5": {
            "steps": [
                "3 + 1 = 4 (left: 4 3 12)\n3 * 12 = 36 (left: 4 36)",
                "3 + 1 = 4 (left: 4 3 12)\n12 - 4 = 8 (left: 3 8)\n3 + 8 = 11 (left: 8 11)",
                "3 + 1 = 4 (left: 4 3 12)\n12 - 4 = 8 (left: 3 8)\n8 / 3 = 2.666 (left: 2.666 8)",
                "3 + 1 = 4 (left: 4 3 12)\n12 - 4 = 8 (left: 3 8)",
                "3 + 1 = 4 (left: 4 3 12)\n12 - 4 = 8 (left: 3 8)\n8 / 3 = 2.67 (left: 3 2.67)",
                "3 + 1 = 4 (left: 4 3 12)\n12 - 4 = 8 (left: 3 8)\n3 + 8 = 11 (left: 8 11)",
                "3 + 1 = 4 (left: 4 3 12)\n12 - 4 = 8 (left: 3 8)\n8 / 3 = 2.67 (left: 2.67)",
                "3 + 1 = 4 (left: 4 3 12)\n12 - 4 = 8 (left: 3 8)\n3 + 8 = 11 (left: 8 11)",
                "3 + 1 = 4 (left: 4 3 12)\n12 - 4 = 8 (left: 3 8)",
                "3 + 1 = 4 (left: 4 3 12)\n3 * 12 = 36 (left: 4 36)"
            ],
            "values": [
                21.001,
                1.002,
                2.0,
                60.0,
                2.001,
                21.0,
                0.003,
                0.002,
                60.0,
                0.002
            ],
            "resampled": [
                "0 <- 5.3",
                "1 <- 4.7",
                "2 <- 5.3",
                "3 <- 1.9",
                "4 <- 1.9",
                "5 <- 3.8",
                "6 <- 2.8",
                "7 <- 5.3",
                "8 <- 2.8",
                "9 <- 5.8"
            ],
            "resampled_steps": [
                "3 + 1 = 4 (left: 4 3 12)\n12 - 4 = 8 (left: 3 8)",
                "3 + 1 = 4 (left: 4 3 12)\n12 - 4 = 8 (left: 3 8)",
                "3 + 1 = 4 (left: 4 3 12)\n12 - 4 = 8 (left: 3 8)",
                "3 + 1 = 4 (left: 4 3 12)",
                "3 + 1 = 4 (left: 4 3 12)",
                "3 + 1 = 4 (left: 4 3 12)\n12 - 4 = 8 (left: 3 8)",
                "3 + 1 = 4 (left: 4 3 12)\n12 - 4 = 8 (left: 3 8)",
                "3 + 1 = 4 (left: 4 3 12)\n12 - 4 = 8 (left: 3 8)",
                "3 + 1 = 4 (left: 4 3 12)\n12 - 4 = 8 (left: 3 8)",
                "3 + 1 = 4 (left: 4 3 12)\n12 - 4 = 8 (left: 3 8)"
            ]
        },
        "step_6": {
            "steps": [
                "3 + 1 = 4 (left: 4 3 12)\n12 - 4 = 8 (left: 3 8)\n8 / 3 = 2.67 (left: 2.67 8)",
                "3 + 1 = 4 (left: 4 3 12)\n12 - 4 = 8 (left: 3 8)\n3 + 8 = 11 (left: 8 11)",
                "3 + 1 = 4 (left: 4 3 12)\n12 - 4 = 8 (left: 3 8)\n8 / 3 = 2.6666666666666665 (left: 3 2.6666666666666665)",
                "3 + 1 = 4 (left: 4 3 12)\n4 * 3 = 12 (left: 12 12)",
                "3 + 1 = 4 (left: 4 3 12)\n12 / 4 = 3 (left: 3 3)",
                "3 + 1 = 4 (left: 4 3 12)\n12 - 4 = 8 (left: 3 8)\n8 - 3 = 5 (left: 5 8)",
                "3 + 1 = 4 (left: 4 3 12)\n12 - 4 = 8 (left: 3 8)\n8 / 3 = 2.6667 (left: 2.6667 8)",
                "3 + 1 = 4 (left: 4 3 12)\n12 - 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 8 24)",
                "3 + 1 = 4 (left: 4 3 12)\n12 - 4 = 8 (left: 3 8)\n8 - 3 = 5 (left: 5 8)",
                "3 + 1 = 4 (left: 4 3 12)\n12 - 4 = 8 (left: 3 8)\n3 + 8 = 11 (left: 8 11)"
            ],
            "values": [
                2.0,
                1.001,
                2.001,
                21.0,
                0.002,
                2.0,
                3.0,
                1.002,
                1.001,
                3.0
            ],
            "resampled": [
                "0 <- 6.3",
                "1 <- INIT",
                "2 <- 4.8",
                "3 <- 2.8",
                "4 <- 2.8",
                "5 <- 6.3",
                "6 <- 6.5",
                "7 <- 1.3",
                "8 <- 5.3",
                "9 <- 6.3"
            ],
            "resampled_steps": [
                "3 + 1 = 4 (left: 4 3 12)\n4 * 3 = 12 (left: 12 12)",
                "",
                "3 + 1 = 4 (left: 4 3 12)\n12 - 4 = 8 (left: 3 8)",
                "3 + 1 = 4 (left: 4 3 12)\n12 - 4 = 8 (left: 3 8)",
                "3 + 1 = 4 (left: 4 3 12)\n12 - 4 = 8 (left: 3 8)",
                "3 + 1 = 4 (left: 4 3 12)\n4 * 3 = 12 (left: 12 12)",
                "3 + 1 = 4 (left: 4 3 12)\n12 - 4 = 8 (left: 3 8)\n8 - 3 = 5 (left: 5 8)",
                "3 + 1 = 4 (left: 4 3 12)",
                "3 + 1 = 4 (left: 4 3 12)\n12 - 4 = 8 (left: 3 8)",
                "3 + 1 = 4 (left: 4 3 12)\n4 * 3 = 12 (left: 12 12)"
            ]
        },
        "step_7": {
            "steps": [
                "3 + 1 = 4 (left: 4 3 12)\n4 * 3 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144)",
                "3 * 1 = 3 (left: 3 3 12)",
                "3 + 1 = 4 (left: 4 3 12)\n12 - 4 = 8 (left: 3 8)\n8 - 3 = 5 (left: 5 8)",
                "3 + 1 = 4 (left: 4 3 12)\n12 - 4 = 8 (left: 3 8)\n8 - 3 = 5 (left: 5 8)",
                "3 + 1 = 4 (left: 4 3 12)\n12 - 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 8 24)",
                "3 + 1 = 4 (left: 4 3 12)\n4 * 3 = 12 (left: 12 12)\n12 / 12 = 1 (left: 1)",
                "3 + 1 = 4 (left: 4 3 12)\n12 - 4 = 8 (left: 3 8)\n8 - 3 = 5 (left: 5 8)\n5 * 8 = 40 (left: 40)",
                "3 + 1 = 4 (left: 4 3 12)\n3 / 12 = 0.25 (left: 0.25 12)",
                "3 + 1 = 4 (left: 4 3 12)\n12 - 4 = 8 (left: 3 8)\n8 / 3 = 2.67 (left: 2.67 8)",
                "3 + 1 = 4 (left: 4 3 12)\n4 * 3 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)"
            ],
            "values": [
                0.003,
                1.002,
                0.002,
                1.002,
                0.002,
                0.003,
                0.0,
                3.0,
                3.0,
                40.0
            ],
            "resampled": [
                "0 <- 3.8",
                "1 <- 5.3",
                "2 <- 3.8",
                "3 <- 4.7",
                "4 <- 7.9",
                "5 <- 1.2",
                "6 <- 2.8",
                "7 <- 2.8",
                "8 <- 5.5",
                "9 <- 2.8"
            ],
            "resampled_steps": [
                "3 + 1 = 4 (left: 4 3 12)\n12 - 4 = 8 (left: 3 8)",
                "3 + 1 = 4 (left: 4 3 12)\n12 - 4 = 8 (left: 3 8)",
                "3 + 1 = 4 (left: 4 3 12)\n12 - 4 = 8 (left: 3 8)",
                "3 + 1 = 4 (left: 4 3 12)\n12 - 4 = 8 (left: 3 8)",
                "3 + 1 = 4 (left: 4 3 12)\n4 * 3 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "3 + 1 = 4 (left: 4 3 12)",
                "3 + 1 = 4 (left: 4 3 12)\n12 - 4 = 8 (left: 3 8)",
                "3 + 1 = 4 (left: 4 3 12)\n12 - 4 = 8 (left: 3 8)",
                "3 + 1 = 4 (left: 4 3 12)\n12 - 4 = 8 (left: 3 8)\n3 + 8 = 11 (left: 8 11)",
                "3 + 1 = 4 (left: 4 3 12)\n12 - 4 = 8 (left: 3 8)"
            ]
        },
        "step_8": {
            "steps": [
                "3 + 1 = 4 (left: 4 3 12)\n12 - 4 = 8 (left: 3 8)\n3 - 8 = -5 (left: -5 8)",
                "3 + 1 = 4 (left: 4 3 12)\n12 - 4 = 8 (left: 3 8)\n8 / 3 = 2.67 (left: 2.67 8)",
                "3 + 1 = 4 (left: 4 3 12)\n12 - 4 = 8 (left: 3 8)\n8 / 3 = 2.6667 (left: 2.6667 8)",
                "3 + 1 = 4 (left: 4 3 12)\n12 - 4 = 8 (left: 3 8)\n8 - 3 = 5 (left: 5 8)",
                "3 + 1 = 4 (left: 4 3 12)\n4 * 3 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: ((1 + 1) * 3) + 12 = 24",
                "3 + 1 = 4 (left: 4 3 12)\n3 + 12 = 15 (left: 4 15)",
                "3 + 1 = 4 (left: 4 3 12)\n12 - 4 = 8 (left: 3 8)\n3 + 8 = 11 (left: 8 11)",
                "3 + 1 = 4 (left: 4 3 12)\n12 - 4 = 8 (left: 3 8)\n8 - 3 = 5 (left: 5 8)",
                "3 + 1 = 4 (left: 4 3 12)\n12 - 4 = 8 (left: 3 8)\n3 + 8 = 11 (left: 8 11)\n8 / 11 = 0.727 (left: 0.727)",
                "3 + 1 = 4 (left: 4 3 12)\n12 - 4 = 8 (left: 3 8)\n8 / 3 = 2.67 (left: 2.67 8)"
            ],
            "values": [
                1.002,
                3.0,
                3.0,
                0.002,
                60.0,
                1.002,
                0.003,
                1.002,
                0.002,
                3.0
            ],
            "resampled": [
                "0 <- 7.9",
                "1 <- 1.9",
                "2 <- 8.2",
                "3 <- 8.4",
                "4 <- 2.8",
                "5 <- 5.8",
                "6 <- 8.4",
                "7 <- 1.5",
                "8 <- 1.5",
                "9 <- 4.7"
            ],
            "resampled_steps": [
                "3 + 1 = 4 (left: 4 3 12)\n4 * 3 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "3 + 1 = 4 (left: 4 3 12)",
                "3 + 1 = 4 (left: 4 3 12)\n12 - 4 = 8 (left: 3 8)\n8 / 3 = 2.6667 (left: 2.6667 8)",
                "3 + 1 = 4 (left: 4 3 12)\n4 * 3 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: ((1 + 1) * 3) + 12 = 24",
                "3 + 1 = 4 (left: 4 3 12)\n12 - 4 = 8 (left: 3 8)",
                "3 + 1 = 4 (left: 4 3 12)\n12 - 4 = 8 (left: 3 8)",
                "3 + 1 = 4 (left: 4 3 12)\n4 * 3 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: ((1 + 1) * 3) + 12 = 24",
                "3 + 1 = 4 (left: 4 3 12)",
                "3 + 1 = 4 (left: 4 3 12)",
                "3 + 1 = 4 (left: 4 3 12)\n12 - 4 = 8 (left: 3 8)"
            ]
        },
        "step_9": {
            "steps": [
                "3 + 1 = 4 (left: 4 3 12)\n4 * 3 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (3 + 1) * 4 + 12 = 24",
                "3 + 1 = 4 (left: 4 3 12)\n3 + 12 = 15 (left: 4 15)",
                "3 + 1 = 4 (left: 4 3 12)\n12 - 4 = 8 (left: 3 8)\n8 / 3 = 2.6667 (left: 2.6667 8)\n8 - 2.6667 = 5.3333 (left: 5.3333 8)",
                "3 + 1 = 4 (left: 4 3 12)\n4 * 3 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: ((1 + 1) * 3) + 12 = 24\nInput: 2 2 3 4\nSteps:\n2 + 3 = 5 (left: 2 4 5)\n5 * 4 = 20 (left: 2 20)\n20 + 2 = 22 (left: 22)\n22 + 2 = 24 (left: 24)\nAnswer: (((2 + 3) * 4) + 2) + 2 = 24",
                "3 + 1 = 4 (left: 4 3 12)\n12 - 4 = 8 (left: 3 8)\n8 - 3 = 5 (left: 5 8)",
                "3 + 1 = 4 (left: 4 3 12)\n12 - 4 = 8 (left: 3 8)\n8 - 3 = 5 (left: 5 8)",
                "3 + 1 = 4 (left: 4 3 12)\n4 * 3 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: ((1 + 1) * 3) + 12 = 24\nInput: 3 6 7 8\nSteps:\n7 - 3 = 4 (left: 4 6 8)\n8 - 6 = 2 (left: 2 4)\n2 * 4 = 8 (left: 8)\n8 * 3 = 24 (left: 24)\nAnswer: (8 - (7 - 3)) * 6 = 24",
                "3 + 1 = 4 (left: 4 3 12)\n5 * 5 = 25 (left: 25 10)",
                "3 + 1 = 4 (left: 4 3 12)\n3 * 12 = 36 (left: 4 36)",
                "3 + 1 = 4 (left: 4 3 12)\n12 - 4 = 8 (left: 3 8)\n8 / 3 = 2.6666666666666665 (left: 2.6666666666666665 8)"
            ],
            "values": [
                60.0,
                0.003,
                2.001,
                40.0,
                3.0,
                21.001,
                60.0,
                20.001,
                41.0,
                3.0
            ],
            "resampled": [
                "0 <- 3.8",
                "1 <- 8.4",
                "2 <- 5.8",
                "3 <- 1.9",
                "4 <- 7.9",
                "5 <- 7.9",
                "6 <- 9.6",
                "7 <- 8.4",
                "8 <- 9.8",
                "9 <- 8.4"
            ],
            "resampled_steps": [
                "3 + 1 = 4 (left: 4 3 12)\n12 - 4 = 8 (left: 3 8)",
                "3 + 1 = 4 (left: 4 3 12)\n4 * 3 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: ((1 + 1) * 3) + 12 = 24",
                "3 + 1 = 4 (left: 4 3 12)\n12 - 4 = 8 (left: 3 8)",
                "3 + 1 = 4 (left: 4 3 12)",
                "3 + 1 = 4 (left: 4 3 12)\n4 * 3 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "3 + 1 = 4 (left: 4 3 12)\n4 * 3 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "3 + 1 = 4 (left: 4 3 12)\n4 * 3 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: ((1 + 1) * 3) + 12 = 24\nInput: 3 6 7 8\nSteps:\n7 - 3 = 4 (left: 4 6 8)\n8 - 6 = 2 (left: 2 4)\n2 * 4 = 8 (left: 8)\n8 * 3 = 24 (left: 24)\nAnswer: (8 - (7 - 3)) * 6 = 24",
                "3 + 1 = 4 (left: 4 3 12)\n4 * 3 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: ((1 + 1) * 3) + 12 = 24",
                "3 + 1 = 4 (left: 4 3 12)\n3 * 12 = 36 (left: 4 36)",
                "3 + 1 = 4 (left: 4 3 12)\n4 * 3 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: ((1 + 1) * 3) + 12 = 24"
            ]
        },
        "step_10": {
            "steps": [
                "3 + 1 = 4 (left: 4 3 12)\n12 - 4 = 8 (left: 3 8)\n8 / 3 = 2.6666666666666665 (left: 2.6666666666666665)",
                "3 + 1 = 4 (left: 4 3 12)\n4 * 3 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: ((1 + 1) * 3) + 12 = 24\nInput: 3 3 3 8\nSteps:\n3 * 3 = 9 (left: 9 3 8)\n9 - 3 = 6 (left: 6 8)\n6 * 8 = 48 (left: 48)\nAnswer: (3 * 3 - 3) * 8 = 24",
                "3 + 1 = 4 (left: 4 3 12)\n12 - 4 = 8 (left: 3 8)\n8 / 3 = 2.6666666666666665 (left: 2.6666666666666665)",
                "3 + 1 = 4 (left: 4 3 12)\n3 * 12 = 36 (left: 4 36)",
                "3 + 1 = 4 (left: 4 3 12)\n4 * 3 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (3 + 1) * (1 + 12) = 24",
                "3 + 1 = 4 (left: 4 3 12)\n4 * 3 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: ((1 + 1) * 3) + 12 = 24",
                "3 + 1 = 4 (left: 4 3 12)\n4 * 3 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: ((1 + 1) * 3) + 12 = 24\nInput: 3 6 7 8\nSteps:\n7 - 3 = 4 (left: 4 6 8)\n8 - 6 = 2 (left: 2 4)\n2 * 4 = 8 (left: 8)\n8 * 3 = 24 (left: 24)\nAnswer: (8 - (7 - 3)) * 6 = 24\nInput: 2 3 3 4\nSteps:\n3 + 3 = 6 (left: 2 4 6)\n6 * 4 = 24 (left: 24)\nAnswer: (3 + 3) * 4 = 24",
                "3 + 1 = 4 (left: 4 3 12)\n4 * 3 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: ((1 + 1) * 3) + 12 = 24\nInput: 3 3 4 4\nSteps:\n3 + 4 = 7 (left: 3 4 7)\n4 - 3 = 1 (left: 1 7)\n7 * 1 = 7 (left: 7)\n4 * 7 = 28 (left: 28)\n28 - 4 = 24 (left: 24)\nAnswer: ((3 + 4) * 7) - 4 = 24",
                "3 + 1 = 4 (left: 4 3 12)\n3 * 12 = 36 (left: 4 36)\n36 / 4 = 9 (left: 9)",
                "3 + 1 = 4 (left: 4 3 12)\n4 * 3 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: ((1 + 1) * 3) + 12 = 24\nInput: 3 6 7 8\nSteps:\n6 + 7 = 13 (left: 3 13 8)\n13 - 8 = 5 (left: 3 5)\n5 * 3 = 15 (left: 15)\n15 + 8 = 23 (left: 23)\n23 + 1 = 24 (left: 24)\nAnswer: (((3 + 6) + 7) - 8) * 1 + 24 = 24"
            ],
            "values": [
                0.0,
                40.0,
                0.001,
                20.001,
                60.0,
                60.0,
                40.0,
                40.0,
                0.002,
                0.0
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 0.8749340000000001
    },
    "15": {
        "input": "2 2 2 12",
        "step_1": {
            "steps": [
                "12 - 2 = 10 (left: 2 2 10)",
                "2 * 2 = 4 (left: 4 2 12)",
                "2 + 2 = 4 (left: 4 2 12)",
                "2 + 2 = 4 (left: 2 4 12)",
                "2 + 2 = 4 (left: 4 2 12)",
                "12 - 2 = 10 (left: 2 2 10)",
                "12 - 2 = 10 (left: 2 2 10)",
                "12 / 2 = 6 (left: 2 2 6)",
                "2 / 2 = 1 (left: 1 2 12)",
                "2 + 2 = 4 (left: 4 4 12)"
            ],
            "values": [
                20.002,
                1.002,
                0.003,
                2.001,
                1.002,
                1.002,
                0.003,
                60.0,
                60.0,
                60.0
            ],
            "resampled": [
                "0 <- 1.8",
                "1 <- 1.8",
                "2 <- INIT",
                "3 <- 1.9",
                "4 <- INIT",
                "5 <- 1.8",
                "6 <- 1.8",
                "7 <- 1.9",
                "8 <- INIT",
                "9 <- 1.9"
            ],
            "resampled_steps": [
                "2 / 2 = 1 (left: 1 2 12)",
                "2 / 2 = 1 (left: 1 2 12)",
                "",
                "2 + 2 = 4 (left: 4 4 12)",
                "",
                "2 / 2 = 1 (left: 1 2 12)",
                "2 / 2 = 1 (left: 1 2 12)",
                "2 + 2 = 4 (left: 4 4 12)",
                "",
                "2 + 2 = 4 (left: 4 4 12)"
            ]
        },
        "step_2": {
            "steps": [
                "2 / 2 = 1 (left: 1 2 12)\n12 / 1 = 12 (left: 2 12)",
                "2 / 2 = 1 (left: 1 2 12)\n12 - 2 = 10 (left: 1 10)",
                "2 * 2 = 4 (left: 4 2 12)",
                "2 + 2 = 4 (left: 4 4 12)\n12 - 4 = 8 (left: 4 8)",
                "2 / 2 = 1 (left: 1 2 12)",
                "2 / 2 = 1 (left: 1 2 12)\n12 - 1 = 11 (left: 2 11)",
                "2 / 2 = 1 (left: 1 2 12)\n1 + 2 = 3 (left: 3 12)",
                "2 + 2 = 4 (left: 4 4 12)\n12 - 4 = 8 (left: 4 8)",
                "2 * 2 = 4 (left: 4 4 12)",
                "2 + 2 = 4 (left: 4 4 12)\n4 * 4 = 16 (left: 16 12)"
            ],
            "values": [
                60.0,
                21.0,
                1.002,
                0.003,
                60.0,
                0.003,
                20.002,
                22.0,
                21.001,
                0.003
            ],
            "resampled": [
                "0 <- 2.4",
                "1 <- 1.9",
                "2 <- 2.4",
                "3 <- 2.7",
                "4 <- 1.7",
                "5 <- 1.9",
                "6 <- 2.8",
                "7 <- 2.7",
                "8 <- 2.1",
                "9 <- 1.8"
            ],
            "resampled_steps": [
                "2 / 2 = 1 (left: 1 2 12)",
                "2 + 2 = 4 (left: 4 4 12)",
                "2 / 2 = 1 (left: 1 2 12)",
                "2 + 2 = 4 (left: 4 4 12)\n12 - 4 = 8 (left: 4 8)",
                "12 / 2 = 6 (left: 2 2 6)",
                "2 + 2 = 4 (left: 4 4 12)",
                "2 * 2 = 4 (left: 4 4 12)",
                "2 + 2 = 4 (left: 4 4 12)\n12 - 4 = 8 (left: 4 8)",
                "2 / 2 = 1 (left: 1 2 12)\n12 - 2 = 10 (left: 1 10)",
                "2 / 2 = 1 (left: 1 2 12)"
            ]
        },
        "step_3": {
            "steps": [
                "2 / 2 = 1 (left: 1 2 12)\n1 + 2 = 3 (left: 3 12)",
                "2 + 2 = 4 (left: 4 4 12)\n12 - 4 = 8 (left: 4 8)",
                "2 / 2 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)",
                "2 + 2 = 4 (left: 4 4 12)\n12 - 4 = 8 (left: 4 8)\n8 / 4 = 2 (left: 2 8)",
                "12 / 2 = 6 (left: 2 2 6)\n2 - 2 = 0 (left: 0 6)",
                "2 + 2 = 4 (left: 4 4 12)\n4 + 4 = 8 (left: 8 12)",
                "2 * 2 = 4 (left: 4 4 12)\n4 * 4 = 16 (left: 16 12)",
                "2 + 2 = 4 (left: 4 4 12)\n12 - 4 = 8 (left: 4 8)\n8 - 4 = 4 (left: 4 8)",
                "2 / 2 = 1 (left: 1 2 12)\n12 - 2 = 10 (left: 1 10)\n1 + 10 = 11 (left: 11)",
                "2 / 2 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)"
            ],
            "values": [
                0.002,
                40.001,
                60.0,
                0.002,
                2.001,
                1.002,
                0.003,
                20.001,
                0.0,
                60.0
            ],
            "resampled": [
                "0 <- 2.6",
                "1 <- 1.7",
                "2 <- 3.1",
                "3 <- 3.2",
                "4 <- 3.9",
                "5 <- 1.8",
                "6 <- 3.9",
                "7 <- 2.0",
                "8 <- 1.9",
                "9 <- 3.9"
            ],
            "resampled_steps": [
                "2 / 2 = 1 (left: 1 2 12)\n1 + 2 = 3 (left: 3 12)",
                "12 / 2 = 6 (left: 2 2 6)",
                "2 + 2 = 4 (left: 4 4 12)\n12 - 4 = 8 (left: 4 8)",
                "2 / 2 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)",
                "2 / 2 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)",
                "2 / 2 = 1 (left: 1 2 12)",
                "2 / 2 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)",
                "2 / 2 = 1 (left: 1 2 12)\n12 / 1 = 12 (left: 2 12)",
                "2 + 2 = 4 (left: 4 4 12)",
                "2 / 2 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)"
            ]
        },
        "step_4": {
            "steps": [
                "2 / 2 = 1 (left: 1 2 12)\n1 + 2 = 3 (left: 3 12)\n3 * 12 = 36 (left: 36)",
                "12 / 2 = 6 (left: 2 2 6)\n2 - 2 = 0 (left: 0 6)",
                "2 + 2 = 4 (left: 4 4 12)\n12 - 4 = 8 (left: 4 8)\n4 + 8 = 12 (left: 8 12)",
                "2 / 2 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24 24)",
                "2 / 2 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n24 - 1 = 23 (left: 23)",
                "2 / 2 = 1 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)",
                "2 / 2 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n1 + 24 = 25 (left: 25)",
                "2 / 2 = 1 (left: 1 2 12)\n12 / 1 = 12 (left: 2 12)\n2 * 12 = 24 (left: 12 24)",
                "2 + 2 = 4 (left: 4 4 12)\n12 - 4 = 8 (left: 8 8)",
                "2 / 2 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)"
            ],
            "values": [
                20.0,
                20.001,
                0.003,
                40.001,
                0.0,
                1.0,
                0.002,
                0.003,
                1.002,
                60.0
            ],
            "resampled": [
                "0 <- 4.1",
                "1 <- 4.9",
                "2 <- 2.4",
                "3 <- 3.9",
                "4 <- 2.8",
                "5 <- 4.9",
                "6 <- 3.2",
                "7 <- 4.9",
                "8 <- 3.9",
                "9 <- 3.1"
            ],
            "resampled_steps": [
                "12 / 2 = 6 (left: 2 2 6)\n2 - 2 = 0 (left: 0 6)",
                "2 / 2 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)",
                "2 / 2 = 1 (left: 1 2 12)",
                "2 / 2 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)",
                "2 * 2 = 4 (left: 4 4 12)",
                "2 / 2 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)",
                "2 / 2 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)",
                "2 / 2 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)",
                "2 / 2 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)",
                "2 + 2 = 4 (left: 4 4 12)\n12 - 4 = 8 (left: 4 8)"
            ]
        },
        "step_5": {
            "steps": [
                "12 / 2 = 6 (left: 2 2 6)\n2 - 2 = 0 (left: 0 6)\n6 / 0 = undefined (division by zero is undefined)",
                "2 / 2 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)\nAnswer: (2 / 2) * 12 = 24",
                "2 / 2 = 1 (left: 1 2 12)\n12 - 1 = 11 (left: 2 11)",
                "2 / 2 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)",
                "2 * 2 = 4 (left: 4 4 12)\n12 - 4 = 8 (left: 4 8)",
                "2 / 2 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)\nAnswer: (2 / 2) * 12 = 24",
                "2 / 2 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n1 + 24 = 25 (left: 25)",
                "2 / 2 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)\nAnswer: (2 / 2) * 12 = 24",
                "2 / 2 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n24 / 1 = 24 (left: 24)",
                "2 + 2 = 4 (left: 4 4 12)\n12 - 4 = 8 (left: 4 8)\n4 * 8 = 32 (left: 8 32)"
            ],
            "values": [
                0.003,
                60.0,
                1.002,
                20.0,
                21.001,
                60.0,
                0.002,
                60.0,
                60.0,
                60.0
            ],
            "resampled": [
                "0 <- 2.6",
                "1 <- 2.4",
                "2 <- 1.8",
                "3 <- 4.0",
                "4 <- 5.7",
                "5 <- 5.5",
                "6 <- 5.9",
                "7 <- 5.5",
                "8 <- 2.1",
                "9 <- 1.8"
            ],
            "resampled_steps": [
                "2 / 2 = 1 (left: 1 2 12)\n1 + 2 = 3 (left: 3 12)",
                "2 / 2 = 1 (left: 1 2 12)",
                "2 / 2 = 1 (left: 1 2 12)",
                "2 / 2 = 1 (left: 1 2 12)\n1 + 2 = 3 (left: 3 12)\n3 * 12 = 36 (left: 36)",
                "2 / 2 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)\nAnswer: (2 / 2) * 12 = 24",
                "2 / 2 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)\nAnswer: (2 / 2) * 12 = 24",
                "2 + 2 = 4 (left: 4 4 12)\n12 - 4 = 8 (left: 4 8)\n4 * 8 = 32 (left: 8 32)",
                "2 / 2 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)\nAnswer: (2 / 2) * 12 = 24",
                "2 / 2 = 1 (left: 1 2 12)\n12 - 2 = 10 (left: 1 10)",
                "2 / 2 = 1 (left: 1 2 12)"
            ]
        },
        "step_6": {
            "steps": [
                "2 / 2 = 1 (left: 1 2 12)\n1 + 2 = 3 (left: 3 12)\n3 * 12 = 36 (left: 36)",
                "2 / 2 = 1 (left: 1 2 12)\n12 - 1 = 11 (left: 2 11)",
                "2 / 2 = 1 (left: 1 2 12)\n12 - 1 = 11 (left: 2 11)",
                "2 / 2 = 1 (left: 1 2 12)\n1 + 2 = 3 (left: 3 12)\n3 * 12 = 36 (left: 36)\n36 / 2 = 18 (left: 18)",
                "2 / 2 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)\nAnswer: (2 / 2) * 12 = 24\nInput: 3 3 4 4\nSteps:\n3 + 4 = 7 (left: 3 4 7)\n3 + 4 = 7 (left: 7 7)\n7 * 7 = 49 (left: 49)\n49 - 25 = 24 (left: 24)\nAnswer: ((3 + 4) * (3 + 4)) - (3 * 3) = 24",
                "2 / 2 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)\nAnswer: (2 / 2) * 12 = 24\nInput: 3 3 3 8\nSteps:\n3 * 3 = 9 (left: 3 8 9)\n9 - 3 = 6 (left: 6 8)\n6 * 8 = 48 (left: 48)\nAnswer: (3 * 3) * (9 - 3) = 24",
                "2 + 2 = 4 (left: 4 4 12)\n12 - 4 = 8 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n32 / 8 = 4 (left: 4)",
                "2 / 2 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)\nAnswer: (2 / 2) * 12 = 24\nInput: 3 3 4 4\nSteps:\n3 + 4 = 7 (left: 3 4 7)\n7 * 4 = 28 (left: 3 28)\n28 - 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = ",
                "2 / 2 = 1 (left: 1 2 12)\n12 - 2 = 10 (left: 1 10)\n10 + 1 = 11 (left: 1 11)",
                "2 / 2 = 1 (left: 1 2 12)\n12 - 2 = 10 (left: 1 10)"
            ],
            "values": [
                60.0,
                2.001,
                2.001,
                0.002,
                60.0,
                60.0,
                0.002,
                60.0,
                20.001,
                60.0
            ],
            "resampled": [
                "0 <- 5.3",
                "1 <- 6.5",
                "2 <- 5.8",
                "3 <- 5.8",
                "4 <- 5.7",
                "5 <- 6.8",
                "6 <- 5.1",
                "7 <- 6.4",
                "8 <- 6.7",
                "9 <- 6.7"
            ],
            "resampled_steps": [
                "2 / 2 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)",
                "2 / 2 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)\nAnswer: (2 / 2) * 12 = 24\nInput: 3 3 3 8\nSteps:\n3 * 3 = 9 (left: 3 8 9)\n9 - 3 = 6 (left: 6 8)\n6 * 8 = 48 (left: 48)\nAnswer: (3 * 3) * (9 - 3) = 24",
                "2 / 2 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n24 / 1 = 24 (left: 24)",
                "2 / 2 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n24 / 1 = 24 (left: 24)",
                "2 / 2 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)\nAnswer: (2 / 2) * 12 = 24",
                "2 / 2 = 1 (left: 1 2 12)\n12 - 2 = 10 (left: 1 10)\n10 + 1 = 11 (left: 1 11)",
                "2 / 2 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)\nAnswer: (2 / 2) * 12 = 24",
                "2 / 2 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)\nAnswer: (2 / 2) * 12 = 24\nInput: 3 3 4 4\nSteps:\n3 + 4 = 7 (left: 3 4 7)\n3 + 4 = 7 (left: 7 7)\n7 * 7 = 49 (left: 49)\n49 - 25 = 24 (left: 24)\nAnswer: ((3 + 4) * (3 + 4)) - (3 * 3) = 24",
                "2 / 2 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)\nAnswer: (2 / 2) * 12 = 24\nInput: 3 3 4 4\nSteps:\n3 + 4 = 7 (left: 3 4 7)\n7 * 4 = 28 (left: 3 28)\n28 - 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = ",
                "2 / 2 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)\nAnswer: (2 / 2) * 12 = 24\nInput: 3 3 4 4\nSteps:\n3 + 4 = 7 (left: 3 4 7)\n7 * 4 = 28 (left: 3 28)\n28 - 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = "
            ]
        },
        "step_7": {
            "steps": [
                "2 / 2 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)\nAnswer: (2 / 2) * 12 = 24",
                "2 / 2 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)\nAnswer: (2 / 2) * 12 = 24\nInput: 3 3 3 8\nSteps:\n3 * 3 = 9 (left: 3 8 9)\n9 - 3 = 6 (left: 6 8)\n6 * 8 = 48 (left: 48)\nAnswer: (3 * 3) * (9 - 3) = 24\nInput: 4 5 6 7\nSteps:\n4 + 7 = 11 (left: 5 6 11)\n6 - 5 = 1 (left: 1 11)\n11 * 1 = 11 (left: 11)\nAnswer: (4 + 7) * (6 - 5) = 24",
                "2 / 2 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n24 / 1 = 24 (left: 24)\nAnswer: (2 / 2) * 12 / 1 = 24",
                "2 / 2 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n24 / 1 = 24 (left: 24)\nAnswer: (2 / 2) * 12 * 1 = 24",
                "2 / 2 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)\nAnswer: (2 / 2) * 12 = 24\n\nInput: 3 3 4 4\nSteps:\n3 + 4 = 7 (left: 3 4 7)\n4 - 3 = 1 (left: 1 7)\n7 * 4 = 28 (left: 28)\n28 - 4 = 24 (left: 24)\nAnswer: ((3 + 4) * 4) - 4 = 24",
                "2 / 2 = 1 (left: 1 2 12)\n12 - 2 = 10 (left: 1 10)\n10 + 1 = 11 (left: 1 11)\n11 - 1 = 10 (left: 1 10)",
                "2 / 2 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)\nAnswer: (2 / 2) * 12 = 24\nInput: 3 3 6 6\nSteps:\n3 * 6 = 18 (left: 3 6 18)\n6 - 3 = 3 (left: 3 18)\n3 * 6 = 18 (left: 18)\nAnswer: (3 * 6) - (6 - 3) = 24",
                "2 / 2 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)\nAnswer: (2 / 2) * 12 = 24\nInput: 3 3 4 4\nSteps:\n3 + 4 = 7 (left: 3 4 7)\n3 + 4 = 7 (left: 7 7)\n7 * 7 = 49 (left: 49)\n49 - 25 = 24 (left: 24)\nAnswer: ((3 + 4) * (3 + 4)) - (3 * 3) = 24\nInput: 1 3 6 8\nSteps:\n3 * 8 = 24 (left: 1 6 24)\n6 / 1 = 6 (left: 6 24)\n24 / 6 = 4 (left: 4)\nAnswer: (3 * 8) / (6 / 1) = 24",
                "2 / 2 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)\nAnswer: (2 / 2) * 12 = 24\nInput: 3 3 4 4\nSteps:\n3 + 4 = 7 (left: 3 4 7)\n7 * 4 = 28 (left: 3 28)\n28 - 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = \nThis operation cannot be completed because it requires more than 4 numbers to reach 24.",
                "2 / 2 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)\nAnswer: (2 / 2) * 12 = 24\nInput: 3 3 4 4\nSteps:\n3 + 4 = 7 (left: 3 4 7)\n7 * 4 = 28 (left: 3 28)\n28 - 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = \n21 (left: 21)\nAnswer: There is no solution."
            ],
            "values": [
                60.0,
                20.0,
                60.0,
                60.0,
                60.0,
                60.0,
                40.0,
                20.0,
                0.003,
                20.0
            ],
            "resampled": [
                "0 <- 1.7",
                "1 <- 6.7",
                "2 <- 7.0",
                "3 <- 7.4",
                "4 <- 7.4",
                "5 <- 5.3",
                "6 <- 7.1",
                "7 <- 5.9",
                "8 <- 6.4",
                "9 <- 6.7"
            ],
            "resampled_steps": [
                "12 / 2 = 6 (left: 2 2 6)",
                "2 / 2 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)\nAnswer: (2 / 2) * 12 = 24\nInput: 3 3 4 4\nSteps:\n3 + 4 = 7 (left: 3 4 7)\n7 * 4 = 28 (left: 3 28)\n28 - 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = ",
                "2 / 2 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)\nAnswer: (2 / 2) * 12 = 24",
                "2 / 2 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)\nAnswer: (2 / 2) * 12 = 24\n\nInput: 3 3 4 4\nSteps:\n3 + 4 = 7 (left: 3 4 7)\n4 - 3 = 1 (left: 1 7)\n7 * 4 = 28 (left: 28)\n28 - 4 = 24 (left: 24)\nAnswer: ((3 + 4) * 4) - 4 = 24",
                "2 / 2 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)\nAnswer: (2 / 2) * 12 = 24\n\nInput: 3 3 4 4\nSteps:\n3 + 4 = 7 (left: 3 4 7)\n4 - 3 = 1 (left: 1 7)\n7 * 4 = 28 (left: 28)\n28 - 4 = 24 (left: 24)\nAnswer: ((3 + 4) * 4) - 4 = 24",
                "2 / 2 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)",
                "2 / 2 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)\nAnswer: (2 / 2) * 12 = 24\nInput: 3 3 3 8\nSteps:\n3 * 3 = 9 (left: 3 8 9)\n9 - 3 = 6 (left: 6 8)\n6 * 8 = 48 (left: 48)\nAnswer: (3 * 3) * (9 - 3) = 24\nInput: 4 5 6 7\nSteps:\n4 + 7 = 11 (left: 5 6 11)\n6 - 5 = 1 (left: 1 11)\n11 * 1 = 11 (left: 11)\nAnswer: (4 + 7) * (6 - 5) = 24",
                "2 + 2 = 4 (left: 4 4 12)\n12 - 4 = 8 (left: 4 8)\n4 * 8 = 32 (left: 8 32)",
                "2 / 2 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)\nAnswer: (2 / 2) * 12 = 24\nInput: 3 3 4 4\nSteps:\n3 + 4 = 7 (left: 3 4 7)\n3 + 4 = 7 (left: 7 7)\n7 * 7 = 49 (left: 49)\n49 - 25 = 24 (left: 24)\nAnswer: ((3 + 4) * (3 + 4)) - (3 * 3) = 24",
                "2 / 2 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)\nAnswer: (2 / 2) * 12 = 24\nInput: 3 3 4 4\nSteps:\n3 + 4 = 7 (left: 3 4 7)\n7 * 4 = 28 (left: 3 28)\n28 - 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = "
            ]
        },
        "step_8": {
            "steps": [
                "12 / 2 = 6 (left: 2 2 6)\n2 / 2 = 1 (left: 1 6)",
                "2 / 2 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)\nAnswer: (2 / 2) * 12 = 24\nInput: 3 3 4 4\nSteps:\n3 + 4 = 7 (left: 3 4 7)\n7 * 4 = 28 (left: 3 28)\n28 - 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = \n21 (left: 21)\nAnswer: No solution",
                "2 / 2 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)\nAnswer: (2 / 2) * 12 = 24\nInput: 3 3 4 5\nSteps:\n3 * 4 = 12 (left: 3 5 12)\n12 + 5 = 17 (left: 3 17)\n17 + 3 = 20 (left: 20)\n20 + 4 = 24 (left: 24)\nAnswer: ((3 * 4) + 5) + 3 + 4 = 24",
                "2 / 2 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)\nAnswer: (2 / 2) * 12 = 24\n\nInput: 3 3 4 4\nSteps:\n3 + 4 = 7 (left: 3 4 7)\n4 - 3 = 1 (left: 1 7)\n7 * 4 = 28 (left: 28)\n28 - 4 = 24 (left: 24)\nAnswer: ((3 + 4) * 4) - 4 = 24\nInput: 1 3 7 8\nSteps:\n7 + 8 = 15 (left: 1 3 15)\n15 - 3 = 12 (left: 1 12)\n12 * 1 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((7 + 8) - 3) * 2 = 24",
                "2 / 2 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)\nAnswer: (2 / 2) * 12 = 24\n\nInput: 3 3 4 4\nSteps:\n3 + 4 = 7 (left: 3 4 7)\n4 - 3 = 1 (left: 1 7)\n7 * 4 = 28 (left: 28)\n28 - 4 = 24 (left: 24)\nAnswer: ((3 + 4) * 4) - 4 = 24\n\nInput: 6 6 3 2\nSteps:\n6 - 2 = 4 (left: 4 6 3)\n6 - 3 = 3 (left: 4 3)\n4 * 3 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((6 - 2) * (6 - 3)) * 2 = 24",
                "2 / 2 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)\nAnswer: (2 / 2) * 12 = 24",
                "2 / 2 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)\nAnswer: (2 / 2) * 12 = 24\nInput: 3 3 3 8\nSteps:\n3 * 3 = 9 (left: 3 8 9)\n9 - 3 = 6 (left: 6 8)\n6 * 8 = 48 (left: 48)\nAnswer: (3 * 3) * (9 - 3) = 24\nInput: 4 5 6 7\nSteps:\n4 + 7 = 11 (left: 5 6 11)\n6 - 5 = 1 (left: 1 11)\n11 * 1 = 11 (left: 11)\nAnswer: (4 + 7) * (6 - 5) = 24\nInput: 1 3 5 8\nSteps:\n5 - 3 = 2 (left: 1 2 8)\n2 * 8 = 16 (left: 1 16)\n16 - 1 = 15 (left: 15)\n15 + 1 = 16 (left: 16)\n16 + 8 = 24 (left: 24)\nAnswer: ((5 - 3) * 8) - 1 + 8 = 24",
                "2 + 2 = 4 (left: 4 4 12)\n12 - 4 = 8 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n8 + 32 = 40 (left: 40)",
                "2 / 2 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)\nAnswer: (2 / 2) * 12 = 24\nInput: 3 3 4 4\nSteps:\n3 + 4 = 7 (left: 3 4 7)\n3 + 4 = 7 (left: 7 7)\n7 * 7 = 49 (left: 49)\n49 - 25 = 24 (left: 24)\nAnswer: ((3 + 4) * (3 + 4)) - (3 * 3) = 24\nInput: 1 2 3 6\nSteps:\n3 * 2 = 6 (left: 1 6 6)\n6 + 6 = 12 (left: 1 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((1 * 2) + 3) * 6 = 24",
                "2 / 2 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)\nAnswer: (2 / 2) * 12 = 24\nInput: 3 3 4 4\nSteps:\n3 + 4 = 7 (left: 3 4 7)\n7 * 4 = 28 (left: 3 28)\n28 - 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - 4 = \n21 (left: 21)\nAnswer: There is no way to obtain 24 using the given numbers and basic arithmetic operations."
            ],
            "values": [
                0.001,
                40.0,
                20.0,
                40.0,
                40.0,
                60.0,
                40.0,
                0.002,
                40.0,
                40.0
            ],
            "resampled": [
                "0 <- 7.7",
                "1 <- 8.6",
                "2 <- 7.3",
                "3 <- 8.5",
                "4 <- 5.3",
                "5 <- 3.2",
                "6 <- 7.0",
                "7 <- 2.4",
                "8 <- 5.7",
                "9 <- 3.2"
            ],
            "resampled_steps": [
                "2 / 2 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)\nAnswer: (2 / 2) * 12 = 24\nInput: 3 3 4 4\nSteps:\n3 + 4 = 7 (left: 3 4 7)\n3 + 4 = 7 (left: 7 7)\n7 * 7 = 49 (left: 49)\n49 - 25 = 24 (left: 24)\nAnswer: ((3 + 4) * (3 + 4)) - (3 * 3) = 24\nInput: 1 3 6 8\nSteps:\n3 * 8 = 24 (left: 1 6 24)\n6 / 1 = 6 (left: 6 24)\n24 / 6 = 4 (left: 4)\nAnswer: (3 * 8) / (6 / 1) = 24",
                "2 / 2 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)\nAnswer: (2 / 2) * 12 = 24\nInput: 3 3 3 8\nSteps:\n3 * 3 = 9 (left: 3 8 9)\n9 - 3 = 6 (left: 6 8)\n6 * 8 = 48 (left: 48)\nAnswer: (3 * 3) * (9 - 3) = 24\nInput: 4 5 6 7\nSteps:\n4 + 7 = 11 (left: 5 6 11)\n6 - 5 = 1 (left: 1 11)\n11 * 1 = 11 (left: 11)\nAnswer: (4 + 7) * (6 - 5) = 24\nInput: 1 3 5 8\nSteps:\n5 - 3 = 2 (left: 1 2 8)\n2 * 8 = 16 (left: 1 16)\n16 - 1 = 15 (left: 15)\n15 + 1 = 16 (left: 16)\n16 + 8 = 24 (left: 24)\nAnswer: ((5 - 3) * 8) - 1 + 8 = 24",
                "2 / 2 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n24 / 1 = 24 (left: 24)\nAnswer: (2 / 2) * 12 * 1 = 24",
                "2 / 2 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)\nAnswer: (2 / 2) * 12 = 24",
                "2 / 2 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)",
                "2 / 2 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)",
                "2 / 2 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)\nAnswer: (2 / 2) * 12 = 24",
                "2 / 2 = 1 (left: 1 2 12)",
                "2 / 2 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)\nAnswer: (2 / 2) * 12 = 24",
                "2 / 2 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)"
            ]
        },
        "step_9": {
            "steps": [
                "2 / 2 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)\nAnswer: (2 / 2) * 12 = 24\nInput: 3 3 4 4\nSteps:\n3 + 4 = 7 (left: 3 4 7)\n3 + 4 = 7 (left: 7 7)\n7 * 7 = 49 (left: 49)\n49 - 25 = 24 (left: 24)\nAnswer: ((3 + 4) * (3 + 4)) - (3 * 3) = 24\nInput: 1 3 6 8\nSteps:\n3 * 8 = 24 (left: 1 6 24)\n6 / 1 = 6 (left: 6 24)\n24 / 6 = 4 (left: 4)\nAnswer: (3 * 8) / (6 / 1) = 24\nInput: 4 5 6 3\nSteps:\n4 * 6 = 24 (left: 5 3 24)\n5 - 3 = 2 (left: 2 24)\n24 / 2 = 12 (left: 12)\nAnswer: (4 * 6) / (5 - 3) = 24",
                "2 / 2 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)\nAnswer: (2 / 2) * 12 = 24\nInput: 3 3 3 8\nSteps:\n3 * 3 = 9 (left: 3 8 9)\n9 - 3 = 6 (left: 6 8)\n6 * 8 = 48 (left: 48)\nAnswer: (3 * 3) * (9 - 3) = 24\nInput: 4 5 6 7\nSteps:\n4 + 7 = 11 (left: 5 6 11)\n6 - 5 = 1 (left: 1 11)\n11 * 1 = 11 (left: 11)\nAnswer: (4 + 7) * (6 - 5) = 24\nInput: 1 3 5 8\nSteps:\n5 - 3 = 2 (left: 1 2 8)\n2 * 8 = 16 (left: 1 16)\n16 - 1 = 15 (left: 15)\n15 + 1 = 16 (left: 16)\n16 + 8 = 24 (left: 24)\nAnswer: ((5 - 3) * 8) - 1 + 8 = 24\nInput: 6 6 7 9\nSteps:\n6 + 7 = 13 (left: 6 9 13)\n13 - 9 = 4 (left: 4 13)\n6 * 4 = 24 (left: 24)\nAnswer: (6 + 7) * (13 - 9) = 24",
                "2 / 2 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n24 / 1 = 24 (left: 24)\nAnswer: (2 / 2) * 12 * 1 = 24\nInput: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6 24)\n6 - 3 = 3 (left: 3 24)\n3 * 24 = 72 (left: 72)\nAnswer: (3 * 8) * (6 - 3) = 24",
                "2 / 2 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)\nAnswer: (2 / 2) * 12 = 24\n\nGreat, you found the solution to all sets of numbers! Well done!",
                "2 / 2 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)\nAnswer: (2 / 2) * (2 * 12) = 24",
                "2 / 2 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n24 * 1 = 24 (left: 24)",
                "2 / 2 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)\nAnswer: (2 / 2) * 12 = 24\nInput: 3 3 6 6\nSteps:\n3 + 6 = 9 (left: 3 9 6)\n9 * 3 = 27 (left: 27 6)\n27 - 6 = 21 (left: 21)\n21 + 3 = 24 (left: 24)\nAnswer: ((3 + 6) * 3) - 6 + 3 = 24",
                "2 / 2 = 1 (left: 1 2 12)\n12 - 2 = 10 (left: 1 10)",
                "2 / 2 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)\nAnswer: (2 / 2) * 12 = 24\nIn this case, it is not possible to obtain 24 using the given numbers and basic arithmetic operations.",
                "2 / 2 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n1 + 24 = 25 (left: 25)"
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 0.9594469999999999
    },
    "16": {
        "input": "1 1 4 12",
        "step_1": {
            "steps": [
                "1 * 4 = 4 (left: 1 4 12)",
                "1 + 1 = 2 (left: 2 4 12)",
                "4 - 1 = 3 (left: 1 3 12)",
                "12 - 1 = 11 (left: 1 4 11)",
                "12 / 4 = 3 (left: 1 3 12)",
                "1 + 1 = 2 (left: 2 4 12)",
                "12 / 4 = 3 (left: 1 3 12)",
                "12 - 4 = 8 (left: 1 8 12)",
                "12 - 4 = 8 (left: 1 4 8)",
                "12 - 1 = 11 (left: 1 4 11)"
            ],
            "values": [
                1.002,
                1.002,
                60.0,
                0.003,
                22.0,
                1.002,
                40.001,
                2.001,
                1.002,
                1.002
            ],
            "resampled": [
                "0 <- 1.4",
                "1 <- INIT",
                "2 <- 1.6",
                "3 <- 1.4",
                "4 <- 1.2",
                "5 <- 1.2",
                "6 <- 1.2",
                "7 <- 1.6",
                "8 <- INIT",
                "9 <- 1.6"
            ],
            "resampled_steps": [
                "12 / 4 = 3 (left: 1 3 12)",
                "",
                "12 / 4 = 3 (left: 1 3 12)",
                "12 / 4 = 3 (left: 1 3 12)",
                "4 - 1 = 3 (left: 1 3 12)",
                "4 - 1 = 3 (left: 1 3 12)",
                "4 - 1 = 3 (left: 1 3 12)",
                "12 / 4 = 3 (left: 1 3 12)",
                "",
                "12 / 4 = 3 (left: 1 3 12)"
            ]
        },
        "step_2": {
            "steps": [
                "12 / 4 = 3 (left: 1 3 12)\n12 - 3 = 9 (left: 1 9 12)",
                "4 * 3 = 12 (left: 1 4 12)",
                "12 / 4 = 3 (left: 1 3 12)\n12 / 3 = 4 (left: 1 4)",
                "12 / 4 = 3 (left: 1 3 12)\n12 - 3 = 9 (left: 1 3 9)",
                "4 - 1 = 3 (left: 1 3 12)\n12 - 3 = 9 (left: 1 9)",
                "4 - 1 = 3 (left: 1 3 12)\n12 - 1 = 11 (left: 3 11)",
                "4 - 1 = 3 (left: 1 3 12)\n3 * 12 = 36 (left: 1 36)",
                "12 / 4 = 3 (left: 1 3 12)\n12 - 1 = 11 (left: 3 11)",
                "12 - 1 = 11 (left: 1 4 11)",
                "12 / 4 = 3 (left: 1 3 12)\n3 * 4 = 12 (left: 12 12)"
            ],
            "values": [
                0.003,
                1.001,
                40.0,
                1.002,
                0.001,
                0.003,
                60.0,
                2.001,
                1.002,
                40.001
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- 2.6",
                "2 <- 2.6",
                "3 <- 2.2",
                "4 <- 1.2",
                "5 <- 2.9",
                "6 <- INIT",
                "7 <- 1.2",
                "8 <- 1.2",
                "9 <- 2.2"
            ],
            "resampled_steps": [
                "",
                "4 - 1 = 3 (left: 1 3 12)\n3 * 12 = 36 (left: 1 36)",
                "4 - 1 = 3 (left: 1 3 12)\n3 * 12 = 36 (left: 1 36)",
                "12 / 4 = 3 (left: 1 3 12)\n12 / 3 = 4 (left: 1 4)",
                "4 - 1 = 3 (left: 1 3 12)",
                "12 / 4 = 3 (left: 1 3 12)\n3 * 4 = 12 (left: 12 12)",
                "",
                "4 - 1 = 3 (left: 1 3 12)",
                "4 - 1 = 3 (left: 1 3 12)",
                "12 / 4 = 3 (left: 1 3 12)\n12 / 3 = 4 (left: 1 4)"
            ]
        },
        "step_3": {
            "steps": [
                "12 - 4 = 8 (left: 1 8 12)",
                "4 - 1 = 3 (left: 1 3 12)\n3 * 12 = 36 (left: 1 36)\n1 * 36 = 36 (left: 36)",
                "4 - 1 = 3 (left: 1 3 12)\n3 * 12 = 36 (left: 1 36)\n1 * 36 = 36 (left: 36)",
                "12 / 4 = 3 (left: 1 3 12)\n12 / 3 = 4 (left: 1 4)\n4 - 1 = 3 (left: 3)",
                "4 - 1 = 3 (left: 1 3 12)\n3 * 4 = 12 (left: 12 12)",
                "12 / 4 = 3 (left: 1 3 12)\n3 * 4 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "4 * 3 = 12 (left: 1 4 12)",
                "4 - 1 = 3 (left: 1 3 12)\n12 - 3 = 9 (left: 1 9)",
                "4 - 1 = 3 (left: 1 3 12)\n12 - 1 = 11 (left: 3 11 12)",
                "12 / 4 = 3 (left: 1 3 12)\n12 / 3 = 4 (left: 1 4)\n1 * 4 = 4 (left: 4)"
            ],
            "values": [
                21.001,
                0.0,
                0.0,
                0.003,
                40.001,
                40.0,
                1.002,
                0.0,
                1.002,
                0.002
            ],
            "resampled": [
                "0 <- 1.6",
                "1 <- 2.6",
                "2 <- INIT",
                "3 <- 1.6",
                "4 <- 1.6",
                "5 <- 1.4",
                "6 <- 2.9",
                "7 <- 2.9",
                "8 <- 2.6",
                "9 <- 1.2"
            ],
            "resampled_steps": [
                "12 / 4 = 3 (left: 1 3 12)",
                "4 - 1 = 3 (left: 1 3 12)\n3 * 12 = 36 (left: 1 36)",
                "",
                "12 / 4 = 3 (left: 1 3 12)",
                "12 / 4 = 3 (left: 1 3 12)",
                "12 / 4 = 3 (left: 1 3 12)",
                "12 / 4 = 3 (left: 1 3 12)\n3 * 4 = 12 (left: 12 12)",
                "12 / 4 = 3 (left: 1 3 12)\n3 * 4 = 12 (left: 12 12)",
                "4 - 1 = 3 (left: 1 3 12)\n3 * 12 = 36 (left: 1 36)",
                "4 - 1 = 3 (left: 1 3 12)"
            ]
        },
        "step_4": {
            "steps": [
                "12 / 4 = 3 (left: 1 3 12)\n3 * 4 = 12 (left: 1 12)",
                "4 - 1 = 3 (left: 1 3 12)\n3 * 12 = 36 (left: 1 36)\n36 - 1 = 35 (left: 35)",
                "4 + 1 = 5 (left: 1 5 12)",
                "12 / 4 = 3 (left: 1 3 12)\n3 - 1 = 2 (left: 2 12)",
                "12 / 4 = 3 (left: 1 3 12)\n1 + 3 = 4 (left: 4 12)",
                "12 / 4 = 3 (left: 1 3 12)\n1 + 3 = 4 (left: 4 12)",
                "12 / 4 = 3 (left: 1 3 12)\n3 * 4 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144)",
                "12 / 4 = 3 (left: 1 3 12)\n3 * 4 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144)",
                "4 - 1 = 3 (left: 1 3 12)\n3 * 12 = 36 (left: 1 36)\n36 - 1 = 35 (left: 35)",
                "4 - 1 = 3 (left: 1 3 12)\n12 / 3 = 4 (left: 1 4)"
            ],
            "values": [
                20.001,
                0.001,
                1.002,
                60.0,
                0.002,
                0.003,
                0.003,
                0.002,
                0.002,
                60.0
            ],
            "resampled": [
                "0 <- 2.2",
                "1 <- 4.9",
                "2 <- 4.9",
                "3 <- 4.9",
                "4 <- 1.2",
                "5 <- 3.5",
                "6 <- 2.2",
                "7 <- 3.4",
                "8 <- 1.6",
                "9 <- 2.9"
            ],
            "resampled_steps": [
                "12 / 4 = 3 (left: 1 3 12)\n12 / 3 = 4 (left: 1 4)",
                "4 - 1 = 3 (left: 1 3 12)\n12 / 3 = 4 (left: 1 4)",
                "4 - 1 = 3 (left: 1 3 12)\n12 / 3 = 4 (left: 1 4)",
                "4 - 1 = 3 (left: 1 3 12)\n12 / 3 = 4 (left: 1 4)",
                "4 - 1 = 3 (left: 1 3 12)",
                "12 / 4 = 3 (left: 1 3 12)\n3 * 4 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "12 / 4 = 3 (left: 1 3 12)\n12 / 3 = 4 (left: 1 4)",
                "4 - 1 = 3 (left: 1 3 12)\n3 * 4 = 12 (left: 12 12)",
                "12 / 4 = 3 (left: 1 3 12)",
                "12 / 4 = 3 (left: 1 3 12)\n3 * 4 = 12 (left: 12 12)"
            ]
        },
        "step_5": {
            "steps": [
                "12 / 4 = 3 (left: 1 3 12)\n12 / 3 = 4 (left: 1 4)\n4 - 1 = 3 (left: 3)",
                "4 - 1 = 3 (left: 1 3 12)\n12 / 3 = 4 (left: 1 4)\n1 + 4 = 5 (left: 5)",
                "4 - 1 = 3 (left: 1 3 12)\n12 / 3 = 4 (left: 1 4)\n4 - 1 = 3 (left: 3)",
                "4 - 1 = 3 (left: 1 3 12)\n12 / 3 = 4 (left: 1 4)\n1 * 4 = 4 (left: 4)",
                "4 - 1 = 3 (left: 1 3 12)\n12 - 3 = 9 (left: 1 9)",
                "12 / 4 = 3 (left: 1 3 12)\n3 * 4 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (1 + 1) * (4 + 12) = 24",
                "12 / 4 = 3 (left: 1 3 12)\n12 / 3 = 4 (left: 1 4)\n4 - 1 = 3 (left: 3)",
                "4 - 1 = 3 (left: 1 3 12)\n3 * 4 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "12 / 4 = 3 (left: 1 3 12)\n12 / 1 = 12 (left: 3 12)",
                "12 / 4 = 3 (left: 1 3 12)\n3 * 4 = 12 (left: 12 12)\n12 / 12 = 1 (left: 1 12)"
            ],
            "values": [
                0.002,
                0.002,
                0.003,
                0.002,
                1.002,
                60.0,
                0.001,
                20.0,
                20.002,
                0.003
            ],
            "resampled": [
                "0 <- 4.3",
                "1 <- 4.3",
                "2 <- 3.0",
                "3 <- 4.3",
                "4 <- 1.6",
                "5 <- 2.9",
                "6 <- 3.4",
                "7 <- 1.2",
                "8 <- 4.3",
                "9 <- 3.0"
            ],
            "resampled_steps": [
                "12 / 4 = 3 (left: 1 3 12)\n3 - 1 = 2 (left: 2 12)",
                "12 / 4 = 3 (left: 1 3 12)\n3 - 1 = 2 (left: 2 12)",
                "12 - 4 = 8 (left: 1 8 12)",
                "12 / 4 = 3 (left: 1 3 12)\n3 - 1 = 2 (left: 2 12)",
                "12 / 4 = 3 (left: 1 3 12)",
                "12 / 4 = 3 (left: 1 3 12)\n3 * 4 = 12 (left: 12 12)",
                "4 - 1 = 3 (left: 1 3 12)\n3 * 4 = 12 (left: 12 12)",
                "4 - 1 = 3 (left: 1 3 12)",
                "12 / 4 = 3 (left: 1 3 12)\n3 - 1 = 2 (left: 2 12)",
                "12 - 4 = 8 (left: 1 8 12)"
            ]
        },
        "step_6": {
            "steps": [
                "12 / 4 = 3 (left: 1 3 12)\n3 - 1 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6)",
                "12 / 4 = 3 (left: 1 3 12)\n3 - 1 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)",
                "12 - 4 = 8 (left: 1 8 12)\n12 - 8 = 4 (left: 4 8)",
                "12 / 4 = 3 (left: 1 3 12)\n3 - 1 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)",
                "12 / 4 = 3 (left: 1 3 12)\n1 * 3 = 3 (left: 3 12)",
                "12 / 4 = 3 (left: 1 3 12)\n3 * 4 = 12 (left: 12 12)\n12 - 12 = 0 (left: 0)",
                "4 - 1 = 3 (left: 1 3 12)\n3 * 4 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "4 - 1 = 3 (left: 1 3 12)\n12 - 3 = 9 (left: 1 9)",
                "12 / 4 = 3 (left: 1 3 12)\n3 - 1 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)",
                "12 - 4 = 8 (left: 1 8 12)\n12 - 8 = 4 (left: 1 4)"
            ],
            "values": [
                0.002,
                0.001,
                20.002,
                0.003,
                20.002,
                0.0,
                40.0,
                0.001,
                0.002,
                60.0
            ],
            "resampled": [
                "0 <- 6.2",
                "1 <- 6.6",
                "2 <- 6.9",
                "3 <- 6.6",
                "4 <- 1.6",
                "5 <- 4.3",
                "6 <- 5.7",
                "7 <- 2.2",
                "8 <- 4.3",
                "9 <- 6.9"
            ],
            "resampled_steps": [
                "12 - 4 = 8 (left: 1 8 12)\n12 - 8 = 4 (left: 4 8)",
                "4 - 1 = 3 (left: 1 3 12)\n3 * 4 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "12 - 4 = 8 (left: 1 8 12)\n12 - 8 = 4 (left: 1 4)",
                "4 - 1 = 3 (left: 1 3 12)\n3 * 4 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "12 / 4 = 3 (left: 1 3 12)",
                "12 / 4 = 3 (left: 1 3 12)\n3 - 1 = 2 (left: 2 12)",
                "4 - 1 = 3 (left: 1 3 12)\n3 * 4 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "12 / 4 = 3 (left: 1 3 12)\n12 / 3 = 4 (left: 1 4)",
                "12 / 4 = 3 (left: 1 3 12)\n3 - 1 = 2 (left: 2 12)",
                "12 - 4 = 8 (left: 1 8 12)\n12 - 8 = 4 (left: 1 4)"
            ]
        },
        "step_7": {
            "steps": [
                "12 - 4 = 8 (left: 1 8 12)\n12 - 8 = 4 (left: 4 8)\n4 + 8 = 12 (left: 8 12)",
                "4 - 1 = 3 (left: 1 3 12)\n3 * 4 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (4 - 1) * (1 + 12) = 24",
                "12 - 4 = 8 (left: 1 8 12)\n12 - 8 = 4 (left: 1 4)\n1 * 4 = 4 (left: 4)",
                "4 - 1 = 3 (left: 1 3 12)\n3 * 4 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (4 - 1) * (1 + 12) = 24",
                "12 / 4 = 3 (left: 1 3 12)\n12 / 3 = 4 (left: 1 4)",
                "12 / 4 = 3 (left: 1 3 12)\n3 - 1 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)",
                "4 - 1 = 3 (left: 1 3 12)\n3 * 4 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (4 - 1) * (1 * 12) + 12 = 24",
                "12 / 4 = 3 (left: 1 3 12)\n12 / 3 = 4 (left: 1 4)\n4 - 1 = 3 (left: 3)",
                "12 / 4 = 3 (left: 1 3 12)\n3 - 1 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6)",
                "12 - 4 = 8 (left: 1 8 12)\n12 - 8 = 4 (left: 1 4)\n4 - 1 = 3 (left: 3)"
            ],
            "values": [
                0.003,
                60.0,
                0.001,
                60.0,
                60.0,
                0.002,
                60.0,
                0.001,
                0.001,
                0.003
            ],
            "resampled": [
                "0 <- 7.6",
                "1 <- 5.7",
                "2 <- 2.9",
                "3 <- 4.3",
                "4 <- 5.5",
                "5 <- 7.6",
                "6 <- 4.3",
                "7 <- 7.1",
                "8 <- 4.3",
                "9 <- 7.1"
            ],
            "resampled_steps": [
                "4 - 1 = 3 (left: 1 3 12)\n3 * 4 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (4 - 1) * (1 * 12) + 12 = 24",
                "4 - 1 = 3 (left: 1 3 12)\n3 * 4 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "12 / 4 = 3 (left: 1 3 12)\n3 * 4 = 12 (left: 12 12)",
                "12 / 4 = 3 (left: 1 3 12)\n3 - 1 = 2 (left: 2 12)",
                "12 / 4 = 3 (left: 1 3 12)\n3 * 4 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (1 + 1) * (4 + 12) = 24",
                "4 - 1 = 3 (left: 1 3 12)\n3 * 4 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (4 - 1) * (1 * 12) + 12 = 24",
                "12 / 4 = 3 (left: 1 3 12)\n3 - 1 = 2 (left: 2 12)",
                "4 - 1 = 3 (left: 1 3 12)\n3 * 4 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (4 - 1) * (1 + 12) = 24",
                "12 / 4 = 3 (left: 1 3 12)\n3 - 1 = 2 (left: 2 12)",
                "4 - 1 = 3 (left: 1 3 12)\n3 * 4 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (4 - 1) * (1 + 12) = 24"
            ]
        },
        "step_8": {
            "steps": [
                "4 - 1 = 3 (left: 1 3 12)\n3 * 4 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (4 - 1) * (1 * 12) + 12 = 24\nInput: 3 3 3 8\nSteps:\n3 * 3 = 9 (left: 3 8 9)\n9 - 3 = 6 (left: 6 8)\n6 * 8 = 48 (left: 48)\nAnswer: (3 * 3) * (9 - 3) = 24",
                "4 - 1 = 3 (left: 1 3 12)\n3 * 4 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (4 - 1) * 3 + 12 = 24",
                "12 / 4 = 3 (left: 1 3 12)\n3 * 4 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "12 / 4 = 3 (left: 1 3 12)\n3 - 1 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "12 / 4 = 3 (left: 1 3 12)\n3 * 4 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (1 + 1) * (4 + 12) = 24\nInput: 3 3 7 7\nSteps:\n3 + 7 = 10 (left: 3 7 10)\n7 - 3 = 4 (left: 4 10)\n4 * 10 = 40 (left: 40)\n40 / 7 = 24 (left: 24)\nAnswer: ((3 + 7) * (7 - 3)) / 7 = 24",
                "4 - 1 = 3 (left: 1 3 12)\n3 * 4 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (4 - 1) * (1 * 12) + 12 = 24\nInput: 3 3 8 9\nSteps:\n8 - 3 = 5 (left: 3 5 9)\n5 * 3 = 15 (left: 15 9)\n15 - 9 = 6 (left: 6)\n6 * 4 = 24 (left: 24)\nAnswer: ((8 - 3) * 3) - 9 * 4 = 24",
                "12 / 4 = 3 (left: 1 3 12)\n3 - 1 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)",
                "4 - 1 = 3 (left: 1 3 12)\n3 * 4 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (4 - 1) * (1 + 12) = 24\nInput: 3 3 3 8\nSteps:\n3 * 3 = 9 (left: 3 8 9)\n9 - 3 = 6 (left: 6 8)\n6 * 8 = 48 (left: 48)\nAnswer: (3 * 3) * (3 + 8) = 24",
                "12 / 4 = 3 (left: 1 3 12)\n3 - 1 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)",
                "4 - 1 = 3 (left: 1 3 12)\n3 * 4 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (4 - 1) * (1 + 12) = 24\n\nInput: 3 3 4 4\nSteps:\n3 * 4 = 12 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n8 * 3 = 24 (left: 24)\nAnswer: (3 * 4) - (4 - 3) = 24"
            ],
            "values": [
                20.0,
                60.0,
                40.0,
                40.0,
                40.0,
                60.0,
                0.001,
                60.0,
                0.001,
                60.0
            ],
            "resampled": [
                "0 <- 5.7",
                "1 <- 4.3",
                "2 <- 8.0",
                "3 <- 5.5",
                "4 <- 6.6",
                "5 <- 8.5",
                "6 <- 8.7",
                "7 <- 8.4",
                "8 <- 7.6",
                "9 <- 7.1"
            ],
            "resampled_steps": [
                "4 - 1 = 3 (left: 1 3 12)\n3 * 4 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "12 / 4 = 3 (left: 1 3 12)\n3 - 1 = 2 (left: 2 12)",
                "4 - 1 = 3 (left: 1 3 12)\n3 * 4 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (4 - 1) * (1 * 12) + 12 = 24\nInput: 3 3 3 8\nSteps:\n3 * 3 = 9 (left: 3 8 9)\n9 - 3 = 6 (left: 6 8)\n6 * 8 = 48 (left: 48)\nAnswer: (3 * 3) * (9 - 3) = 24",
                "12 / 4 = 3 (left: 1 3 12)\n3 * 4 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (1 + 1) * (4 + 12) = 24",
                "4 - 1 = 3 (left: 1 3 12)\n3 * 4 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "4 - 1 = 3 (left: 1 3 12)\n3 * 4 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (4 - 1) * (1 * 12) + 12 = 24\nInput: 3 3 8 9\nSteps:\n8 - 3 = 5 (left: 3 5 9)\n5 * 3 = 15 (left: 15 9)\n15 - 9 = 6 (left: 6)\n6 * 4 = 24 (left: 24)\nAnswer: ((8 - 3) * 3) - 9 * 4 = 24",
                "4 - 1 = 3 (left: 1 3 12)\n3 * 4 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (4 - 1) * (1 + 12) = 24\nInput: 3 3 3 8\nSteps:\n3 * 3 = 9 (left: 3 8 9)\n9 - 3 = 6 (left: 6 8)\n6 * 8 = 48 (left: 48)\nAnswer: (3 * 3) * (3 + 8) = 24",
                "12 / 4 = 3 (left: 1 3 12)\n3 * 4 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (1 + 1) * (4 + 12) = 24\nInput: 3 3 7 7\nSteps:\n3 + 7 = 10 (left: 3 7 10)\n7 - 3 = 4 (left: 4 10)\n4 * 10 = 40 (left: 40)\n40 / 7 = 24 (left: 24)\nAnswer: ((3 + 7) * (7 - 3)) / 7 = 24",
                "4 - 1 = 3 (left: 1 3 12)\n3 * 4 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (4 - 1) * (1 * 12) + 12 = 24",
                "4 - 1 = 3 (left: 1 3 12)\n3 * 4 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (4 - 1) * (1 + 12) = 24"
            ]
        },
        "step_9": {
            "steps": [
                "4 - 1 = 3 (left: 1 3 12)\n3 * 4 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (4 - 1) * 3 + 12 = 24",
                "12 / 4 = 3 (left: 1 3 12)\n3 - 1 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)",
                "4 - 1 = 3 (left: 1 3 12)\n3 * 4 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (4 - 1) * (1 * 12) + 12 = 24\nInput: 3 3 3 8\nSteps:\n3 * 3 = 9 (left: 3 8 9)\n9 - 3 = 6 (left: 6 8)\n6 * 8 = 48 (left: 48)\nAnswer: (3 * 3) * (9 - 3) = 24\nInput: 2 3 6 8\nSteps:\n2 * 3 = 6 (left: 6 8 6)\n6 * 8 = 48 (left: 48 6)\n48 / 6 = 8 (left: 8)\nAnswer: (2 * 3) * (8 / 6) = 24",
                "12 / 4 = 3 (left: 1 3 12)\n3 * 4 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (1 + 1) * (4 + 12) = 24\n\nInput: 3 3 4 4\nSteps:\n3 + 4 = 7 (left: 3 7 4)\n7 - 3 = 4 (left: 4 4)\n4 * 4 = 16 (left: 16)\n16 + 8 = 24 (left: 24)\nAnswer: ((3 + 4) - 3) * 4 + 4 = 24",
                "4 - 1 = 3 (left: 1 3 12)\n3 * 4 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (1 + 4 - 1) * 12 = 24",
                "4 - 1 = 3 (left: 1 3 12)\n3 * 4 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (4 - 1) * (1 * 12) + 12 = 24\nInput: 3 3 8 9\nSteps:\n8 - 3 = 5 (left: 3 5 9)\n5 * 3 = 15 (left: 15 9)\n15 - 9 = 6 (left: 6)\n6 * 4 = 24 (left: 24)\nAnswer: ((8 - 3) * 3) - 9 * 4 = 24\nInput: 3 6 8 9\nSteps:\n6 + 8 = 14 (left: 3 9 14)\n14 - 9 = 5 (left: 3 5)\n5 * 3 = 15 (left: 15)\n15 + 9 = 24 (left: 24)\nAnswer: ((6 + 8) - 9) * 3 + 9 = 24",
                "4 - 1 = 3 (left: 1 3 12)\n3 * 4 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (4 - 1) * (1 + 12) = 24\nInput: 3 3 3 8\nSteps:\n3 * 3 = 9 (left: 3 8 9)\n9 - 3 = 6 (left: 6 8)\n6 * 8 = 48 (left: 48)\nAnswer: (3 * 3) * (3 + 8) = 24\nInput: 6 6 6 6\nSteps:\n6 * 6 = 36 (left: 6 6 36)\n6 - 6 = 0 (left: 0 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\nAnswer: ((6 * 6) - 6) * 6 = 24",
                "12 / 4 = 3 (left: 1 3 12)\n3 * 4 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (1 + 1) * (4 + 12) = 24\nInput: 3 3 7 7\nSteps:\n3 + 7 = 10 (left: 3 7 10)\n7 - 3 = 4 (left: 4 10)\n4 * 10 = 40 (left: 40)\n40 / 7 = 24 (left: 24)\nAnswer: ((3 + 7) * (7 - 3)) / 7 = 24\nInput: 2 3 5 7\nSteps:\n5 * 7 = 35 (left: 2 3 35)\n3 - 2 = 1 (left: 1 35)\n35 - 1 = 34 (left: 34)\n34 / 3 = 24 (left: 24)\nAnswer: ((5 * 7) - (3 - 2)) / 3 = 24",
                "4 - 1 = 3 (left: 1 3 12)\n3 * 4 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (4 - 1) * (1 * 12) + 12 = 24\nInput: 3 3 8 8\nSteps:\n3 * 8 = 24 (left: 3 8 24)\n8 - 3 = 5 (left: 5 24)\n5 * 24 = 120 (left: 120)\nAnswer: (3 * 8) - (8 - 3) = 24",
                "4 - 1 = 3 (left: 1 3 12)\n3 * 4 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (4 - 1) * (1 + 12) = 24\nInput: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6)\n6 / 3 = 2 (left: 2 24)\n2 * 24 = 48 (left: 48)\nAnswer: (3 * 8) / (6 / 3) = 24"
            ],
            "values": [
                60.0,
                0.003,
                40.0,
                60.0,
                60.0,
                60.0,
                40.0,
                40.0,
                60.0,
                20.0
            ],
            "resampled": [
                "0 <- 9.4",
                "1 <- 6.2",
                "2 <- 9.2",
                "3 <- 8.5",
                "4 <- 4.3",
                "5 <- 5.5",
                "6 <- 6.9",
                "7 <- 7.6",
                "8 <- 9.7",
                "9 <- 8.0"
            ],
            "resampled_steps": [
                "4 - 1 = 3 (left: 1 3 12)\n3 * 4 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (1 + 4 - 1) * 12 = 24",
                "12 - 4 = 8 (left: 1 8 12)\n12 - 8 = 4 (left: 4 8)",
                "4 - 1 = 3 (left: 1 3 12)\n3 * 4 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (4 - 1) * (1 * 12) + 12 = 24\nInput: 3 3 3 8\nSteps:\n3 * 3 = 9 (left: 3 8 9)\n9 - 3 = 6 (left: 6 8)\n6 * 8 = 48 (left: 48)\nAnswer: (3 * 3) * (9 - 3) = 24\nInput: 2 3 6 8\nSteps:\n2 * 3 = 6 (left: 6 8 6)\n6 * 8 = 48 (left: 48 6)\n48 / 6 = 8 (left: 8)\nAnswer: (2 * 3) * (8 / 6) = 24",
                "4 - 1 = 3 (left: 1 3 12)\n3 * 4 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (4 - 1) * (1 * 12) + 12 = 24\nInput: 3 3 8 9\nSteps:\n8 - 3 = 5 (left: 3 5 9)\n5 * 3 = 15 (left: 15 9)\n15 - 9 = 6 (left: 6)\n6 * 4 = 24 (left: 24)\nAnswer: ((8 - 3) * 3) - 9 * 4 = 24",
                "12 / 4 = 3 (left: 1 3 12)\n3 - 1 = 2 (left: 2 12)",
                "12 / 4 = 3 (left: 1 3 12)\n3 * 4 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (1 + 1) * (4 + 12) = 24",
                "12 - 4 = 8 (left: 1 8 12)\n12 - 8 = 4 (left: 1 4)",
                "4 - 1 = 3 (left: 1 3 12)\n3 * 4 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (4 - 1) * (1 * 12) + 12 = 24",
                "12 / 4 = 3 (left: 1 3 12)\n3 * 4 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (1 + 1) * (4 + 12) = 24\nInput: 3 3 7 7\nSteps:\n3 + 7 = 10 (left: 3 7 10)\n7 - 3 = 4 (left: 4 10)\n4 * 10 = 40 (left: 40)\n40 / 7 = 24 (left: 24)\nAnswer: ((3 + 7) * (7 - 3)) / 7 = 24\nInput: 2 3 5 7\nSteps:\n5 * 7 = 35 (left: 2 3 35)\n3 - 2 = 1 (left: 1 35)\n35 - 1 = 34 (left: 34)\n34 / 3 = 24 (left: 24)\nAnswer: ((5 * 7) - (3 - 2)) / 3 = 24",
                "4 - 1 = 3 (left: 1 3 12)\n3 * 4 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (4 - 1) * (1 * 12) + 12 = 24\nInput: 3 3 3 8\nSteps:\n3 * 3 = 9 (left: 3 8 9)\n9 - 3 = 6 (left: 6 8)\n6 * 8 = 48 (left: 48)\nAnswer: (3 * 3) * (9 - 3) = 24"
            ]
        },
        "step_10": {
            "steps": [
                "4 - 1 = 3 (left: 1 3 12)\n3 * 4 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (1 + 4 - 1) * 12 = 24\nInput: 3 3 3 8\nSteps:\n3 * 3 = 9 (left: 3 8 9)\n9 - 3 = 6 (left: 6 8)\n6 * 8 = 48 (left: 48)\n48 / 2 = 24 (left: 24)\nAnswer: ((3 * 3) - 3) * 8 / 2 = 24",
                "12 - 4 = 8 (left: 1 8 12)\n12 - 8 = 4 (left: 4 8)\n4 + 8 = 12 (left: 8 12)",
                "4 - 1 = 3 (left: 1 3 12)\n3 * 4 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (4 - 1) * (1 * 12) + 12 = 24\nInput: 3 3 3 8\nSteps:\n3 * 3 = 9 (left: 3 8 9)\n9 - 3 = 6 (left: 6 8)\n6 * 8 = 48 (left: 48)\nAnswer: (3 * 3) * (9 - 3) = 24\nInput: 2 3 6 8\nSteps:\n2 * 3 = 6 (left: 6 8 6)\n6 * 8 = 48 (left: 48 6)\n48 / 6 = 8 (left: 8)\nAnswer: (2 * 3) * (8 / 6) = 24\nInput: 1 3 7 8\nSteps:\n3 * 7 = 21 (left: 1 8 21)\n21 - 8 = 13 (left: 1 13)\n13 * 1 = 13 (left: 13)\nAnswer: (3 * 7) - (8 - 1) = 24",
                "4 - 1 = 3 (left: 1 3 12)\n3 * 4 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (4 - 1) * (1 * 12) + 12 = 24\nInput: 3 3 8 9\nSteps:\n8 - 3 = 5 (left: 3 5 9)\n5 * 3 = 15 (left: 15 9)\n15 - 9 = 6 (left: 6)\n6 * 4 = 24 (left: 24)\nAnswer: ((8 - 3) * 3) - 9 * 4 = 24\nInput: 2 3 6 8\nSteps:\n3 * 2 = 6 (left: 6 8)\n6 * 8 = 48 (left: 48)\n48 / 2 = 24 (left: 24)\nAnswer: ((3 * 2) * 8) / 2 = 24",
                "12 / 4 = 3 (left: 1 3 12)\n3 - 1 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)",
                "12 / 4 = 3 (left: 1 3 12)\n3 * 4 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (1 + 1) * (4 + 12) = 24\nInput: 3 3 8 8\n\n8 - 3 = 5 (left: 3 5 8)\n8 - 5 = 3 (left: 3 3)\n3 * 3 = 9 (left: 9)\n9 * 8 = 72 (left: 72)\n72 / 3 = 24 (left: 24)\n\nAnswer: ((8 - 3) * (8 - 5)) * (3 * 3) / 3 = 24",
                "12 - 4 = 8 (left: 1 8 12)\n12 - 8 = 4 (left: 1 4)\n1 * 4 = 4 (left: 4)",
                "4 - 1 = 3 (left: 1 3 12)\n3 * 4 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (4 - 1) * (1 * 12) + 12 = 24\nInput: 3 3 3 8\nSteps:\n3 * 3 = 9 (left: 3 8 9)\n8 - 3 = 5 (left: 5 9)\n5 * 9 = 45 (left: 45)\n45 - 21 = 24 (left: 24)\nAnswer: ((3 * 3) - 8) * (5 * 9) = 24",
                "12 / 4 = 3 (left: 1 3 12)\n3 * 4 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (1 + 1) * (4 + 12) = 24\nInput: 3 3 7 7\nSteps:\n3 + 7 = 10 (left: 3 7 10)\n7 - 3 = 4 (left: 4 10)\n4 * 10 = 40 (left: 40)\n40 / 7 = 24 (left: 24)\nAnswer: ((3 + 7) * (7 - 3)) / 7 = 24\nInput: 2 3 5 7\nSteps:\n5 * 7 = 35 (left: 2 3 35)\n3 - 2 = 1 (left: 1 35)\n35 - 1 = 34 (left: 34)\n34 / 3 = 24 (left: 24)\nAnswer: ((5 * 7) - (3 - 2)) / 3 = 24\nInput: 3 5 6 7\nSteps:\n5 + 7 = 12 (left: 3 6 12)\n6 - 3 = 3 (left: 3 12)\n3 * 12 = 36 (left: 36)\n36 / 6 = 24 (left: 24)\nAnswer: ((5 + 7) * (6 - 3)) / 6 = 24",
                "4 - 1 = 3 (left: 1 3 12)\n3 * 4 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (4 - 1) * (1 * 12) + 12 = 24\nInput: 3 3 3 8\nSteps:\n3 * 3 = 9 (left: 3 8 9)\n9 - 3 = 6 (left: 6 8)\n6 * 8 = 48 (left: 48)\nAnswer: (3 * 3) * (9 - 3) = 24\nInput: 2 2 3 4\nSteps:\n2 + 2 = 4 (left: 3 4 4)\n4 * 3 = 12 (left: 12 4)\n12 * 4 = 48 (left: 48)\nAnswer: ((2 + 2) * 3) * 4 = 24"
            ],
            "values": [
                0.0,
                1.002,
                40.0,
                20.0,
                0.002,
                20.0,
                0.001,
                20.0,
                40.0,
                20.0
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 1.040985
    },
    "17": {
        "input": "1 1 12 12",
        "step_1": {
            "steps": [
                "1 * 1 = 1 (left: 1 12 12)",
                "1 * 1 = 1 (left: 1 12 12)",
                "1 * 1 = 1 (left: 1 12 12)",
                "1 * 1 = 1 (left: 1 12 12)",
                "1 + 1 = 2 (left: 2 12 12)",
                "12 + 1 = 13 (left: 1 13 12)",
                "12 - 1 = 11 (left: 1 11 12)",
                "12 / 1 = 12 (left: 1 12 12)",
                "12 - 1 = 11 (left: 1 11 12)",
                "12 - 1 = 11 (left: 1 11 12)"
            ],
            "values": [
                0.003,
                0.003,
                0.003,
                20.001,
                20.002,
                20.002,
                20.002,
                20.002,
                0.003,
                40.001
            ],
            "resampled": [
                "0 <- 1.3",
                "1 <- 1.9",
                "2 <- 1.4",
                "3 <- 1.6",
                "4 <- 1.9",
                "5 <- 1.9",
                "6 <- 1.3",
                "7 <- 1.9",
                "8 <- INIT",
                "9 <- 1.7"
            ],
            "resampled_steps": [
                "1 * 1 = 1 (left: 1 12 12)",
                "12 - 1 = 11 (left: 1 11 12)",
                "1 + 1 = 2 (left: 2 12 12)",
                "12 - 1 = 11 (left: 1 11 12)",
                "12 - 1 = 11 (left: 1 11 12)",
                "12 - 1 = 11 (left: 1 11 12)",
                "1 * 1 = 1 (left: 1 12 12)",
                "12 - 1 = 11 (left: 1 11 12)",
                "",
                "12 / 1 = 12 (left: 1 12 12)"
            ]
        },
        "step_2": {
            "steps": [
                "1 * 1 = 1 (left: 1 12 12)\n1 * 12 = 12 (left: 12 12)",
                "12 - 1 = 11 (left: 1 11 12)\n1 * 11 = 11 (left: 11 12)",
                "1 + 1 = 2 (left: 2 12 12)\n12 - 2 = 10 (left: 10 12)",
                "12 - 1 = 11 (left: 1 11 12)\n11 / 1 = 11 (left: 11 12)",
                "12 - 1 = 11 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)",
                "12 - 1 = 11 (left: 1 11 12)\n11 / 1 = 11 (left: 11 12)",
                "1 * 1 = 1 (left: 1 12 12)\n12 - 1 = 11 (left: 11 12)",
                "12 - 1 = 11 (left: 1 11 12)\n11 - 1 = 10 (left: 10 12)",
                "12 / 1 = 12 (left: 1 12 12)",
                "12 / 1 = 12 (left: 1 12 12)\n1 * 12 = 12 (left: 12 12)"
            ],
            "values": [
                40.001,
                0.003,
                0.003,
                0.002,
                40.001,
                0.003,
                0.003,
                1.001,
                20.002,
                60.0
            ],
            "resampled": [
                "0 <- 1.6",
                "1 <- 2.0",
                "2 <- 2.0",
                "3 <- INIT",
                "4 <- 2.0",
                "5 <- 1.9",
                "6 <- 1.3",
                "7 <- 1.5",
                "8 <- 1.9",
                "9 <- 1.3"
            ],
            "resampled_steps": [
                "12 - 1 = 11 (left: 1 11 12)",
                "1 * 1 = 1 (left: 1 12 12)\n1 * 12 = 12 (left: 12 12)",
                "1 * 1 = 1 (left: 1 12 12)\n1 * 12 = 12 (left: 12 12)",
                "",
                "1 * 1 = 1 (left: 1 12 12)\n1 * 12 = 12 (left: 12 12)",
                "12 - 1 = 11 (left: 1 11 12)",
                "1 * 1 = 1 (left: 1 12 12)",
                "12 + 1 = 13 (left: 1 13 12)",
                "12 - 1 = 11 (left: 1 11 12)",
                "1 * 1 = 1 (left: 1 12 12)"
            ]
        },
        "step_3": {
            "steps": [
                "12 - 1 = 11 (left: 1 11 12)\n1 * 11 = 11 (left: 11 12)",
                "1 * 1 = 1 (left: 1 12 12)\n1 * 12 = 12 (left: 12 12)\n12 - 12 = 0 (left: 0)",
                "1 * 1 = 1 (left: 1 12 12)\n1 * 12 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144)",
                "12 - 1 = 11 (left: 1 12 11)",
                "1 * 1 = 1 (left: 1 12 12)\n1 * 12 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144)",
                "12 - 1 = 11 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)",
                "1 * 1 = 1 (left: 1 12 12)\n12 / 1 = 12 (left: 12 12)",
                "12 + 1 = 13 (left: 1 13 12)\n12 + 1 = 13 (left: 13 12)",
                "12 - 1 = 11 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)",
                "1 * 1 = 1 (left: 1 12 12)\n1 * 12 = 12 (left: 12 12)"
            ],
            "values": [
                0.002,
                0.003,
                0.002,
                21.001,
                0.003,
                40.001,
                20.002,
                0.003,
                22.0,
                41.0
            ],
            "resampled": [
                "0 <- 3.5",
                "1 <- 3.3",
                "2 <- INIT",
                "3 <- 3.9",
                "4 <- 2.9",
                "5 <- 3.5",
                "6 <- 3.5",
                "7 <- 1.6",
                "8 <- 3.9",
                "9 <- 2.4"
            ],
            "resampled_steps": [
                "12 - 1 = 11 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)",
                "12 - 1 = 11 (left: 1 12 11)",
                "",
                "1 * 1 = 1 (left: 1 12 12)\n1 * 12 = 12 (left: 12 12)",
                "12 / 1 = 12 (left: 1 12 12)\n1 * 12 = 12 (left: 12 12)",
                "12 - 1 = 11 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)",
                "12 - 1 = 11 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)",
                "12 - 1 = 11 (left: 1 11 12)",
                "1 * 1 = 1 (left: 1 12 12)\n1 * 12 = 12 (left: 12 12)",
                "12 - 1 = 11 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)"
            ]
        },
        "step_4": {
            "steps": [
                "12 - 1 = 11 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144)",
                "12 - 1 = 11 (left: 1 12 11)\n1 + 12 = 13 (left: 13 11)",
                "1 * 1 = 1 (left: 1 12 12)",
                "1 * 1 = 1 (left: 1 12 12)\n1 * 12 = 12 (left: 12 12)\n12 - 12 = 0 (left: 0 12)",
                "12 / 1 = 12 (left: 1 12 12)\n1 * 12 = 12 (left: 12 12)\n12 - 12 = 0 (left: 0)",
                "12 - 1 = 11 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144)",
                "12 - 1 = 11 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144)",
                "12 - 1 = 11 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)",
                "1 * 1 = 1 (left: 1 12 12)\n1 * 12 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144)",
                "12 - 1 = 11 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)"
            ],
            "values": [
                0.002,
                60.0,
                20.002,
                21.001,
                0.0,
                20.002,
                20.002,
                40.001,
                0.003,
                40.0
            ],
            "resampled": [
                "0 <- 4.1",
                "1 <- 2.9",
                "2 <- 4.6",
                "3 <- 3.3",
                "4 <- 4.7",
                "5 <- 4.7",
                "6 <- 1.9",
                "7 <- 4.7",
                "8 <- 3.5",
                "9 <- INIT"
            ],
            "resampled_steps": [
                "12 - 1 = 11 (left: 1 12 11)\n1 + 12 = 13 (left: 13 11)",
                "12 / 1 = 12 (left: 1 12 12)\n1 * 12 = 12 (left: 12 12)",
                "12 - 1 = 11 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144)",
                "12 - 1 = 11 (left: 1 12 11)",
                "12 - 1 = 11 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)",
                "12 - 1 = 11 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)",
                "12 - 1 = 11 (left: 1 11 12)",
                "12 - 1 = 11 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)",
                "12 - 1 = 11 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)",
                ""
            ]
        },
        "step_5": {
            "steps": [
                "12 - 1 = 11 (left: 1 12 11)\n1 + 12 = 13 (left: 13 11)\n13 + 11 = 24 (left: 24)",
                "12 / 1 = 12 (left: 1 12 12)\n1 * 12 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "12 - 1 = 11 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144)\nThere are many possible next steps for the input 144, depending on the operations allowed (e.g. addition, subtraction, multiplication, division). Without knowing the specific operations allowed, it's difficult to provide a specific list of next steps.",
                "12 - 1 = 11 (left: 1 12 11)\n11 - 1 = 10 (left: 1 10 11)",
                "12 - 1 = 11 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)\n12 / 12 = 1 (left: 1)",
                "12 - 1 = 11 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)\n12 - 12 = 0 (left: 0)",
                "12 - 1 = 11 (left: 1 11 12)\n11 - 1 = 10 (left: 10 12)",
                "12 - 1 = 11 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)\n12 - 12 = 0 (left: 0)",
                "12 - 1 = 11 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)\n12 - 12 = 0 (left: 0)",
                "12 - 1 = 11 (left: 1 11 12)"
            ],
            "values": [
                40.0,
                20.0,
                0.003,
                1.002,
                0.002,
                0.0,
                0.003,
                0.002,
                0.001,
                20.002
            ],
            "resampled": [
                "0 <- 3.9",
                "1 <- 2.4",
                "2 <- 4.3",
                "3 <- 4.6",
                "4 <- 4.2",
                "5 <- 2.0",
                "6 <- 1.9",
                "7 <- 3.5",
                "8 <- 1.5",
                "9 <- 5.0"
            ],
            "resampled_steps": [
                "1 * 1 = 1 (left: 1 12 12)\n1 * 12 = 12 (left: 12 12)",
                "12 - 1 = 11 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)",
                "1 * 1 = 1 (left: 1 12 12)\n1 * 12 = 12 (left: 12 12)\n12 - 12 = 0 (left: 0 12)",
                "12 - 1 = 11 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144)",
                "1 * 1 = 1 (left: 1 12 12)",
                "1 * 1 = 1 (left: 1 12 12)\n1 * 12 = 12 (left: 12 12)",
                "12 - 1 = 11 (left: 1 11 12)",
                "12 - 1 = 11 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)",
                "12 + 1 = 13 (left: 1 13 12)",
                "12 - 1 = 11 (left: 1 12 11)\n1 + 12 = 13 (left: 13 11)\n13 + 11 = 24 (left: 24)"
            ]
        },
        "step_6": {
            "steps": [
                "1 * 1 = 1 (left: 1 12 12)\n1 * 12 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144)",
                "12 - 1 = 11 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)\n12 / 12 = 1 (left: 1 12)",
                "1 * 1 = 1 (left: 1 12 12)\n1 * 12 = 12 (left: 12 12)\n12 - 12 = 0 (left: 0 12)\n0 + 12 = 12 (left: 12)",
                "12 - 1 = 11 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144)\n12 * 12 = 144 (left: 12 12)",
                "1 * 1 = 1 (left: 1 12 12)\n12 / 1 = 12 (left: 12 12)",
                "1 * 1 = 1 (left: 1 12 12)\n1 * 12 = 12 (left: 12 12)\n12 / 12 = 1 (left: 1)",
                "12 - 1 = 11 (left: 1 11 12)\n11 / 1 = 11 (left: 11 12)",
                "12 - 1 = 11 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "12 + 1 = 13 (left: 1 13 12)\n1 + 13 = 14 (left: 14 12)",
                "12 - 1 = 11 (left: 1 12 11)\n1 + 12 = 13 (left: 13 11)\n13 + 11 = 24 (left: 24)\nAnswer: (12 - 1) + (1 + 12) + 11 = 24"
            ],
            "values": [
                0.003,
                1.001,
                0.002,
                20.002,
                41.0,
                0.003,
                0.003,
                60.0,
                0.003,
                40.001
            ],
            "resampled": [
                "0 <- 5.1",
                "1 <- 6.4",
                "2 <- 3.8",
                "3 <- 5.9",
                "4 <- 2.9",
                "5 <- 6.9",
                "6 <- 3.5",
                "7 <- 4.9",
                "8 <- 5.1",
                "9 <- 2.4"
            ],
            "resampled_steps": [
                "12 / 1 = 12 (left: 1 12 12)\n1 * 12 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "1 * 1 = 1 (left: 1 12 12)\n12 / 1 = 12 (left: 12 12)",
                "12 - 1 = 11 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)",
                "12 - 1 = 11 (left: 1 11 12)",
                "12 / 1 = 12 (left: 1 12 12)\n1 * 12 = 12 (left: 12 12)",
                "12 - 1 = 11 (left: 1 12 11)\n1 + 12 = 13 (left: 13 11)\n13 + 11 = 24 (left: 24)\nAnswer: (12 - 1) + (1 + 12) + 11 = 24",
                "12 - 1 = 11 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)",
                "12 - 1 = 11 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "12 / 1 = 12 (left: 1 12 12)\n1 * 12 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "12 - 1 = 11 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)"
            ]
        },
        "step_7": {
            "steps": [
                "12 / 1 = 12 (left: 1 12 12)\n1 * 12 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 / 1) * (12 + 12) = 24",
                "1 * 1 = 1 (left: 1 12 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "12 - 1 = 11 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)\n12 - 12 = 0 (left: 0)",
                "12 - 1 = 11 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)",
                "12 / 1 = 12 (left: 1 12 12)\n1 * 12 = 12 (left: 12 12)\n12 / 12 = 1 (left: 1)",
                "12 - 1 = 11 (left: 1 12 11)\n1 + 12 = 13 (left: 13 11)\n13 + 11 = 24 (left: 24)\nAnswer: (12 - 1) + (1 + 12) + 11 = 24\nIn summary, the steps to obtain 24 using the numbers 1, 1, 12, 12 are:\n1. 12 - 1 = 11 (left: 1 12 11)\n2. 1 + 12 = 13 (left: 13 11)\n3. 13 + 11 = 24 (left: 24)\nTherefore, the answer is (12 - 1) + (1 + 12) + 11 = 24.",
                "12 - 1 = 11 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "12 - 1 = 11 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (1 + (12 - 1)) + 12 = 24",
                "12 / 1 = 12 (left: 1 12 12)\n1 * 12 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (1 * 12) + (1 * 12) = 24",
                "12 - 1 = 11 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144)"
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            }
        ],
        "cost": 1.0968390000000001
    },
    "18": {
        "input": "3 3 3 8",
        "step_1": {
            "steps": [
                "3 + 8 = 11 (left: 3 3 11)",
                "8 - 3 = 5 (left: 3 3 5)",
                "8 - 3 = 5 (left: 3 3 5)",
                "3 + 8 = 11 (left: 3 3 11)",
                "3 + 8 = 11 (left: 3 3 11)",
                "3 * 3 = 9 (left: 9 3 8)",
                "3 + 3 = 6 (left: 3 6 8)",
                "3 * 3 = 9 (left: 9 3 8)",
                "3 + 3 = 6 (left: 6 3 8)",
                "3 + 8 = 11 (left: 3 3 11)"
            ],
            "values": [
                60.0,
                2.001,
                3.0,
                41.0,
                41.0,
                3.0,
                2.001,
                2.0,
                0.003,
                60.0
            ],
            "resampled": [
                "0 <- 1.9",
                "1 <- 1.9",
                "2 <- INIT",
                "3 <- 1.3",
                "4 <- 1.9",
                "5 <- INIT",
                "6 <- INIT",
                "7 <- 1.0",
                "8 <- 1.9",
                "9 <- INIT"
            ],
            "resampled_steps": [
                "3 + 8 = 11 (left: 3 3 11)",
                "3 + 8 = 11 (left: 3 3 11)",
                "",
                "3 + 8 = 11 (left: 3 3 11)",
                "3 + 8 = 11 (left: 3 3 11)",
                "",
                "",
                "3 + 8 = 11 (left: 3 3 11)",
                "3 + 8 = 11 (left: 3 3 11)",
                ""
            ]
        },
        "step_2": {
            "steps": [
                "3 + 8 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)",
                "3 + 8 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)",
                "3 + 3 = 6 (left: 3 6 8)",
                "3 + 8 = 11 (left: 3 3 11)\n3 * 3 = 9 (left: 9 11)",
                "3 + 8 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)",
                "3 * 3 = 9 (left: 9 3 8)",
                "3 * 3 = 9 (left: 9 3 8)",
                "3 + 8 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)",
                "3 + 8 = 11 (left: 3 3 11)\n3 * 3 = 9 (left: 9 11)",
                "3 + 3 = 6 (left: 6 3 8)"
            ],
            "values": [
                60.0,
                60.0,
                1.002,
                1.001,
                60.0,
                3.0,
                3.0,
                60.0,
                2.001,
                2.001
            ],
            "resampled": [
                "0 <- 2.1",
                "1 <- 2.0",
                "2 <- 2.6",
                "3 <- 1.3",
                "4 <- 2.1",
                "5 <- 2.5",
                "6 <- 2.1",
                "7 <- 2.0",
                "8 <- 2.0",
                "9 <- 2.7"
            ],
            "resampled_steps": [
                "3 + 8 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)",
                "3 + 8 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)",
                "3 * 3 = 9 (left: 9 3 8)",
                "3 + 8 = 11 (left: 3 3 11)",
                "3 + 8 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)",
                "3 * 3 = 9 (left: 9 3 8)",
                "3 + 8 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)",
                "3 + 8 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)",
                "3 + 8 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)",
                "3 + 8 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)"
            ]
        },
        "step_3": {
            "steps": [
                "3 + 8 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n8 / 3 = 2.67 (left: 2.67 8)",
                "3 + 8 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n3 + 8 = 11 (left: 8 11)",
                "3 * 3 = 9 (left: 9 3 8)\n3 * 8 = 24 (left: 9 24)",
                "3 + 8 = 11 (left: 3 3 11)\n11 / 3 = 3.67 (left: 3.67 3 11)",
                "3 + 8 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n3 * 8 = 24 (left: 8 24)",
                "3 * 3 = 9 (left: 9 3 8)\n3 - 8 = -5 (left: -5 8)",
                "3 + 8 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n3 + 8 = 11 (left: 8 11)",
                "3 + 8 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n3 + 8 = 11 (left: 8 11)",
                "3 + 8 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n8 - 3 = 5 (left: 5 8)",
                "3 + 8 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n3 + 8 = 11 (left: 8 11)"
            ],
            "values": [
                3.0,
                1.002,
                0.003,
                2.001,
                0.002,
                0.002,
                2.001,
                1.001,
                1.002,
                0.002
            ],
            "resampled": [
                "0 <- 1.9",
                "1 <- INIT",
                "2 <- 1.4",
                "3 <- 1.0",
                "4 <- 2.0",
                "5 <- 1.3",
                "6 <- 2.4",
                "7 <- 1.3",
                "8 <- 2.4",
                "9 <- 2.1"
            ],
            "resampled_steps": [
                "3 + 8 = 11 (left: 3 3 11)",
                "",
                "3 + 8 = 11 (left: 3 3 11)",
                "3 + 8 = 11 (left: 3 3 11)",
                "3 + 8 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)",
                "3 + 8 = 11 (left: 3 3 11)",
                "3 + 8 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)",
                "3 + 8 = 11 (left: 3 3 11)",
                "3 + 8 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)",
                "3 + 8 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)"
            ]
        },
        "step_4": {
            "steps": [
                "3 + 8 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)",
                "3 + 3 = 6 (left: 3 6 8)",
                "3 + 8 = 11 (left: 3 3 11)\n3 + 3 = 6 (left: 6 11)",
                "3 + 8 = 11 (left: 3 3 11)\n3 / 3 = 1 (left: 1 11)",
                "3 + 8 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n8 / 3 = 2.66666666667 (left: 2.66666666667 8)",
                "3 + 8 = 11 (left: 3 3 11)\n3 - 3 = 0 (left: 0 11)",
                "3 + 8 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n3 * 8 = 24 (left: 8 24)",
                "3 + 8 = 11 (left: 3 3 11)\n3 * 3 = 9 (left: 9 11)",
                "3 + 8 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n8 / 3 = 2.67 (left: 2.67 8)",
                "3 + 8 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n3 * 8 = 24 (left: 8 24)"
            ],
            "values": [
                60.0,
                1.002,
                2.001,
                1.001,
                3.0,
                0.002,
                0.003,
                0.002,
                2.001,
                0.001
            ],
            "resampled": [
                "0 <- 2.4",
                "1 <- 2.0",
                "2 <- 2.4",
                "3 <- 1.9",
                "4 <- 2.7",
                "5 <- 2.1",
                "6 <- 4.0",
                "7 <- 2.7",
                "8 <- 1.4",
                "9 <- 1.4"
            ],
            "resampled_steps": [
                "3 + 8 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)",
                "3 + 8 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)",
                "3 + 8 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)",
                "3 + 8 = 11 (left: 3 3 11)",
                "3 + 8 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)",
                "3 + 8 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)",
                "3 + 8 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)",
                "3 + 8 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)",
                "3 + 8 = 11 (left: 3 3 11)",
                "3 + 8 = 11 (left: 3 3 11)"
            ]
        },
        "step_5": {
            "steps": [
                "3 + 8 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n8 / 3 = 2.6667 (left: 2.6667 8)",
                "3 + 8 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n3 + 8 = 11 (left: 8 11)",
                "3 + 8 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n8 - 3 = 5 (left: 5 8)",
                "3 + 8 = 11 (left: 3 3 11)\n3 + 3 = 6 (left: 6 11)",
                "3 + 8 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n8 / 3 = 2.66667 (left: 2.66667 8)",
                "3 + 8 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n3 * 8 = 24 (left: 8 24)",
                "3 + 8 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n8 - 3 = 5 (left: 5 8)",
                "3 + 8 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n8 - 3 = 5 (left: 5 8)",
                "3 + 8 = 11 (left: 3 3 11)\n3 + 11 = 14 (left: 3 14)",
                "3 + 8 = 11 (left: 3 3 11)\n3 + 3 = 6 (left: 6 11)"
            ],
            "values": [
                3.0,
                0.001,
                21.001,
                0.003,
                2.0,
                1.002,
                2.001,
                1.002,
                0.003,
                2.001
            ],
            "resampled": [
                "0 <- 4.0",
                "1 <- 5.2",
                "2 <- 2.3",
                "3 <- 1.9",
                "4 <- 2.4",
                "5 <- 2.0",
                "6 <- 4.0",
                "7 <- 2.7",
                "8 <- 2.4",
                "9 <- 2.4"
            ],
            "resampled_steps": [
                "3 + 8 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)",
                "3 + 8 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n8 - 3 = 5 (left: 5 8)",
                "3 + 8 = 11 (left: 3 3 11)\n3 * 3 = 9 (left: 9 11)",
                "3 + 8 = 11 (left: 3 3 11)",
                "3 + 8 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)",
                "3 + 8 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)",
                "3 + 8 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)",
                "3 + 8 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)",
                "3 + 8 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)",
                "3 + 8 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)"
            ]
        },
        "step_6": {
            "steps": [
                "3 + 8 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n8 - 3 = 5 (left: 5 8)",
                "3 + 8 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n8 - 3 = 5 (left: 5 8)\n8 - 5 = 3 (left: 3)",
                "3 + 8 = 11 (left: 3 3 11)\n3 * 3 = 9 (left: 9 11)\nThere are no possible next steps with the given numbers 9 and 11.",
                "3 + 8 = 11 (left: 3 3 11)\n3 - 3 = 0 (left: 0 11)",
                "3 + 8 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n3 * 8 = 24 (left: 8 24)",
                "3 + 8 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n8 - 3 = 5 (left: 5 8)",
                "3 + 8 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n8 - 3 = 5 (left: 5 8)",
                "3 + 8 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n8 - 3 = 5 (left: 5 8)",
                "3 + 8 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n3 + 8 = 11 (left: 8 11)",
                "3 + 8 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n8 - 3 = 5 (left: 5 8)"
            ],
            "values": [
                1.002,
                0.001,
                0.003,
                0.002,
                0.003,
                1.002,
                0.002,
                0.001,
                2.0,
                1.002
            ],
            "resampled": [
                "0 <- 2.1",
                "1 <- 1.9",
                "2 <- 1.9",
                "3 <- 4.0",
                "4 <- 1.0",
                "5 <- 1.0",
                "6 <- 4.0",
                "7 <- 2.0",
                "8 <- 2.4",
                "9 <- 2.1"
            ],
            "resampled_steps": [
                "3 + 8 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)",
                "3 + 8 = 11 (left: 3 3 11)",
                "3 + 8 = 11 (left: 3 3 11)",
                "3 + 8 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)",
                "3 + 8 = 11 (left: 3 3 11)",
                "3 + 8 = 11 (left: 3 3 11)",
                "3 + 8 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)",
                "3 + 8 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)",
                "3 + 8 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)",
                "3 + 8 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)"
            ]
        },
        "step_7": {
            "steps": [
                "3 + 8 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n3 + 8 = 11 (left: 8 11)",
                "3 + 8 = 11 (left: 3 3 11)\n3 - 3 = 0 (left: 0 11)",
                "3 + 8 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)",
                "3 + 8 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n3 + 8 = 11 (left: 8 11)",
                "3 + 8 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)",
                "3 + 8 = 11 (left: 3 3 11)\n3 - 3 = 0 (left: 0 11)",
                "3 + 8 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n3 * 8 = 24 (left: 8 24)",
                "3 + 8 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n8 - 3 = 5 (left: 5 8)",
                "3 + 8 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n3 * 8 = 24 (left: 8 24)",
                "3 + 8 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n8 - 3 = 5 (left: 5)"
            ],
            "values": [
                2.001,
                1.0,
                60.0,
                1.002,
                60.0,
                0.003,
                1.002,
                0.003,
                0.003,
                0.002
            ],
            "resampled": [
                "0 <- 7.4",
                "1 <- 5.2",
                "2 <- 2.1",
                "3 <- 7.4",
                "4 <- 1.9",
                "5 <- 7.4",
                "6 <- 7.2",
                "7 <- 7.2",
                "8 <- 7.2",
                "9 <- 7.4"
            ],
            "resampled_steps": [
                "3 + 8 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)",
                "3 + 8 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n8 - 3 = 5 (left: 5 8)",
                "3 + 8 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)",
                "3 + 8 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)",
                "3 + 8 = 11 (left: 3 3 11)",
                "3 + 8 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)",
                "3 + 8 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)",
                "3 + 8 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)",
                "3 + 8 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)",
                "3 + 8 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)"
            ]
        },
        "step_8": {
            "steps": [
                "3 + 8 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n3 * 8 = 24 (left: 8 24)",
                "3 + 8 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n8 - 3 = 5 (left: 5 8)\n5 + 8 = 13 (left: 8 13)",
                "3 + 8 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n8 - 3 = 5 (left: 5 8)",
                "3 + 8 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n3 + 8 = 11 (left: 8 11)",
                "3 + 8 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)",
                "3 + 8 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n8 - 3 = 5 (left: 5 8)",
                "3 + 8 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n3 + 8 = 11 (left: 8 11)",
                "3 + 8 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n8 - 3 = 5 (left: 5)",
                "3 + 8 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n8 / 3 = 2.67 (left: 2.67 8)",
                "3 + 8 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n8 / 3 = 2.67 (left: 2.67 8)"
            ],
            "values": [
                0.002,
                2.0,
                0.003,
                0.001,
                60.0,
                2.001,
                2.001,
                0.002,
                2.0,
                3.0
            ],
            "resampled": [
                "0 <- 8.4",
                "1 <- 4.0",
                "2 <- 1.9",
                "3 <- 1.0",
                "4 <- 2.7",
                "5 <- 2.4",
                "6 <- 7.4",
                "7 <- 8.4",
                "8 <- 2.4",
                "9 <- 7.4"
            ],
            "resampled_steps": [
                "3 + 8 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)",
                "3 + 8 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)",
                "3 + 8 = 11 (left: 3 3 11)",
                "3 + 8 = 11 (left: 3 3 11)",
                "3 + 8 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)",
                "3 + 8 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)",
                "3 + 8 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)",
                "3 + 8 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)",
                "3 + 8 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)",
                "3 + 8 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)"
            ]
        },
        "step_9": {
            "steps": [
                "3 + 8 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n3 + 8 = 11 (left: 8 11)",
                "3 + 8 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n3 + 8 = 11 (left: 8 11)",
                "3 + 8 = 11 (left: 3 3 11)\n3 / 3 = 1 (left: 1 11)",
                "3 + 8 = 11 (left: 3 3 11)\n3 * 3 = 9 (left: 9 11)",
                "3 + 8 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n8 - 3 = 5 (left: 5 8)",
                "3 + 8 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n8 - 3 = 5 (left: 5 8)",
                "3 + 8 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n3 * 8 = 24 (left: 8 24)",
                "3 + 8 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n3 + 8 = 11 (left: 8 11)",
                "3 + 8 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n3 + 8 = 11 (left: 8 11)",
                "3 + 8 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n3 * 8 = 24 (left: 8 24)"
            ],
            "values": [
                2.0,
                0.003,
                20.0,
                2.001,
                0.002,
                0.003,
                2.001,
                20.002,
                2.001,
                1.002
            ],
            "resampled": [
                "0 <- 1.4",
                "1 <- 3.0",
                "2 <- 8.4",
                "3 <- INIT",
                "4 <- 8.4",
                "5 <- 7.2",
                "6 <- 7.2",
                "7 <- 4.0",
                "8 <- 8.6",
                "9 <- 1.9"
            ],
            "resampled_steps": [
                "3 + 8 = 11 (left: 3 3 11)",
                "3 + 8 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n8 / 3 = 2.67 (left: 2.67 8)",
                "3 + 8 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)",
                "",
                "3 + 8 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)",
                "3 + 8 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)",
                "3 + 8 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)",
                "3 + 8 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)",
                "3 + 8 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n3 + 8 = 11 (left: 8 11)",
                "3 + 8 = 11 (left: 3 3 11)"
            ]
        },
        "step_10": {
            "steps": [
                "3 + 8 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)",
                "3 + 8 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n8 / 3 = 2.67 (left: 2.67 8)\n8 / 2.67 = 2.99 (left: 2.99)",
                "3 + 8 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n3 + 8 = 11 (left: 8 11)",
                "3 * 3 = 9 (left: 9 3 8)",
                "3 + 8 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n8 / 3 = 2.67 (left: 2.67 8)",
                "3 + 8 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n8 - 3 = 5 (left: 5 8)",
                "3 + 8 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n8 - 3 = 5 (left: 5 8)",
                "3 + 8 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n3 / 8 = 0.375 (left: 0.375 8)",
                "3 + 8 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n3 + 8 = 11 (left: 8 11)\n11 - 8 = 3 (left: 3)",
                "3 + 8 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)"
            ],
            "values": [
                60.0,
                0.003,
                1.002,
                3.0,
                3.0,
                3.0,
                21.001,
                2.001,
                0.002,
                60.0
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 1.177899
    },
    "19": {
        "input": "1 1 2 6",
        "step_1": {
            "steps": [
                "6 - 2 = 4 (left: 1 4 6)",
                "2 * 6 = 12 (left: 1 2 12)",
                "2 * 6 = 12 (left: 1 12 6)",
                "6 / 2 = 3 (left: 1 2 3)",
                "2 + 6 = 8 (left: 1 2 8)",
                "1 * 2 = 2 (left: 2 2 6)",
                "1 + 1 = 2 (left: 2 2 6)",
                "1 * 1 = 1 (left: 1 2 6)",
                "1 + 1 = 2 (left: 2 2 6)",
                "6 - 1 = 5 (left: 1 2 5)"
            ],
            "values": [
                60.0,
                60.0,
                2.001,
                0.002,
                3.0,
                41.0,
                40.0,
                0.003,
                60.0,
                1.002
            ],
            "resampled": [
                "0 <- 1.0",
                "1 <- 1.1",
                "2 <- 1.5",
                "3 <- 1.5",
                "4 <- INIT",
                "5 <- 1.1",
                "6 <- 1.5",
                "7 <- INIT",
                "8 <- 1.8",
                "9 <- 1.6"
            ],
            "resampled_steps": [
                "6 - 2 = 4 (left: 1 4 6)",
                "2 * 6 = 12 (left: 1 2 12)",
                "1 * 2 = 2 (left: 2 2 6)",
                "1 * 2 = 2 (left: 2 2 6)",
                "",
                "2 * 6 = 12 (left: 1 2 12)",
                "1 * 2 = 2 (left: 2 2 6)",
                "",
                "1 + 1 = 2 (left: 2 2 6)",
                "1 + 1 = 2 (left: 2 2 6)"
            ]
        },
        "step_2": {
            "steps": [
                "6 - 2 = 4 (left: 1 4 6)\n6 - 4 = 2 (left: 1 2)",
                "2 * 6 = 12 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)",
                "1 * 2 = 2 (left: 2 2 6)\n2 + 2 = 4 (left: 4 6)",
                "1 * 2 = 2 (left: 2 2 6)\n6 - 2 = 4 (left: 2 4)",
                "1 * 2 = 2 (left: 2 2 6)",
                "2 * 6 = 12 (left: 1 2 12)\n1 + 2 = 3 (left: 3 12)",
                "1 * 2 = 2 (left: 2 2 6)\n6 / 2 = 3 (left: 2 3)",
                "1 * 2 = 2 (left: 2 2 6)",
                "1 + 1 = 2 (left: 2 2 6)\n2 + 2 = 4 (left: 4 6)",
                "1 + 1 = 2 (left: 2 2 6)\n6 * 2 = 12 (left: 2 12)"
            ],
            "values": [
                1.002,
                40.001,
                60.0,
                1.001,
                60.0,
                20.002,
                1.001,
                60.0,
                60.0,
                60.0
            ],
            "resampled": [
                "0 <- 1.1",
                "1 <- 1.0",
                "2 <- 1.5",
                "3 <- 2.9",
                "4 <- 2.5",
                "5 <- 1.6",
                "6 <- 1.8",
                "7 <- 1.0",
                "8 <- 2.8",
                "9 <- 2.7"
            ],
            "resampled_steps": [
                "2 * 6 = 12 (left: 1 2 12)",
                "6 - 2 = 4 (left: 1 4 6)",
                "1 * 2 = 2 (left: 2 2 6)",
                "1 + 1 = 2 (left: 2 2 6)\n6 * 2 = 12 (left: 2 12)",
                "2 * 6 = 12 (left: 1 2 12)\n1 + 2 = 3 (left: 3 12)",
                "1 + 1 = 2 (left: 2 2 6)",
                "1 + 1 = 2 (left: 2 2 6)",
                "6 - 2 = 4 (left: 1 4 6)",
                "1 + 1 = 2 (left: 2 2 6)\n2 + 2 = 4 (left: 4 6)",
                "1 * 2 = 2 (left: 2 2 6)"
            ]
        },
        "step_3": {
            "steps": [
                "2 * 6 = 12 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)",
                "6 - 2 = 4 (left: 1 4 6)\n6 - 4 = 2 (left: 1 2 6)",
                "1 * 2 = 2 (left: 2 2 6)\n2 * 2 = 4 (left: 4 6)",
                "1 + 1 = 2 (left: 2 2 6)\n6 * 2 = 12 (left: 2 12)\n12 / 2 = 6 (left: 6)",
                "2 * 6 = 12 (left: 1 2 12)\n1 + 2 = 3 (left: 3 12)\n3 * 4 = 12 (left: 4 12)",
                "1 + 1 = 2 (left: 2 2 6)\n2 / 2 = 1 (left: 1 6)",
                "1 + 1 = 2 (left: 2 2 6)\n2 - 2 = 0 (left: 0 6)",
                "6 - 2 = 4 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)",
                "1 + 1 = 2 (left: 2 2 6)\n2 + 2 = 4 (left: 4 6)\n6 - 4 = 2 (left: 2)",
                "1 * 2 = 2 (left: 2 2 6)\n6 + 2 = 8 (left: 2 8)"
            ],
            "values": [
                60.0,
                0.003,
                60.0,
                0.003,
                1.001,
                40.0,
                1.002,
                60.0,
                0.002,
                1.002
            ],
            "resampled": [
                "0 <- 1.8",
                "1 <- 3.0",
                "2 <- 2.7",
                "3 <- 3.4",
                "4 <- 2.4",
                "5 <- 1.0",
                "6 <- 3.7",
                "7 <- 2.5",
                "8 <- 2.7",
                "9 <- 3.2"
            ],
            "resampled_steps": [
                "1 + 1 = 2 (left: 2 2 6)",
                "2 * 6 = 12 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)",
                "1 * 2 = 2 (left: 2 2 6)",
                "2 * 6 = 12 (left: 1 2 12)\n1 + 2 = 3 (left: 3 12)\n3 * 4 = 12 (left: 4 12)",
                "1 * 2 = 2 (left: 2 2 6)",
                "6 - 2 = 4 (left: 1 4 6)",
                "6 - 2 = 4 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)",
                "2 * 6 = 12 (left: 1 2 12)\n1 + 2 = 3 (left: 3 12)",
                "1 * 2 = 2 (left: 2 2 6)",
                "1 * 2 = 2 (left: 2 2 6)\n2 * 2 = 4 (left: 4 6)"
            ]
        },
        "step_4": {
            "steps": [
                "1 + 1 = 2 (left: 2 2 6)\n6 - 2 = 4 (left: 2 4)",
                "2 * 6 = 12 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n24 - 1 = 23 (left: 23)",
                "1 * 2 = 2 (left: 2 2 6)\n6 + 2 = 8 (left: 2 8)",
                "2 * 6 = 12 (left: 1 2 12)\n1 + 2 = 3 (left: 3 12)\n3 * 4 = 12 (left: 4 12)\n4 * 12 = 48 (left: 12 48)",
                "1 * 2 = 2 (left: 2 2 6)\n2 + 2 = 4 (left: 4 6)",
                "6 - 2 = 4 (left: 1 4 6)\n6 / 4 = 1.5 (left: 1 1.5)",
                "6 - 2 = 4 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n1 + 24 = 25 (left: 25)",
                "2 * 6 = 12 (left: 1 2 12)\n1 + 2 = 3 (left: 3 12)\n12 / 3 = 4 (left: 4 12)",
                "1 * 2 = 2 (left: 2 2 6)\n2 + 2 = 4 (left: 4 6)",
                "1 * 2 = 2 (left: 2 2 6)\n2 * 2 = 4 (left: 4 6)\n6 / 4 = 1.5 (left: 1.5)"
            ],
            "values": [
                1.002,
                0.002,
                0.003,
                0.003,
                60.0,
                0.002,
                0.003,
                0.003,
                60.0,
                0.002
            ],
            "resampled": [
                "0 <- 2.9",
                "1 <- 3.5",
                "2 <- 2.8",
                "3 <- 3.2",
                "4 <- 2.9",
                "5 <- 1.1",
                "6 <- 3.5",
                "7 <- 1.8",
                "8 <- 3.2",
                "9 <- 2.8"
            ],
            "resampled_steps": [
                "1 + 1 = 2 (left: 2 2 6)\n6 * 2 = 12 (left: 2 12)",
                "1 + 1 = 2 (left: 2 2 6)\n2 / 2 = 1 (left: 1 6)",
                "1 + 1 = 2 (left: 2 2 6)\n2 + 2 = 4 (left: 4 6)",
                "1 * 2 = 2 (left: 2 2 6)\n2 * 2 = 4 (left: 4 6)",
                "1 + 1 = 2 (left: 2 2 6)\n6 * 2 = 12 (left: 2 12)",
                "2 * 6 = 12 (left: 1 2 12)",
                "1 + 1 = 2 (left: 2 2 6)\n2 / 2 = 1 (left: 1 6)",
                "1 + 1 = 2 (left: 2 2 6)",
                "1 * 2 = 2 (left: 2 2 6)\n2 * 2 = 4 (left: 4 6)",
                "1 + 1 = 2 (left: 2 2 6)\n2 + 2 = 4 (left: 4 6)"
            ]
        },
        "step_5": {
            "steps": [
                "1 + 1 = 2 (left: 2 2 6)\n6 * 2 = 12 (left: 2 12)\n12 - 2 = 10 (left: 10)",
                "1 + 1 = 2 (left: 2 2 6)\n2 / 2 = 1 (left: 1 6)\n6 / 1 = 6 (left: 6)",
                "1 + 1 = 2 (left: 2 2 6)\n2 + 2 = 4 (left: 4 6)\n4 - 6 = -2 (left: -2)",
                "1 * 2 = 2 (left: 2 2 6)\n2 * 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "1 + 1 = 2 (left: 2 2 6)\n6 * 2 = 12 (left: 2 12)\n12 / 2 = 6 (left: 6)",
                "2 * 6 = 12 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)",
                "1 + 1 = 2 (left: 2 2 6)\n2 / 2 = 1 (left: 1 6)\n6 - 1 = 5 (left: 5)",
                "1 + 1 = 2 (left: 2 2 6)\n6 / 2 = 3 (left: 3 2)",
                "1 * 2 = 2 (left: 2 2 6)\n2 * 2 = 4 (left: 4 6)\n6 / 4 = 1.5 (left: 1.5)",
                "1 + 1 = 2 (left: 2 2 6)\n2 + 2 = 4 (left: 4 6)\n6 - 4 = 2 (left: 2 6)"
            ],
            "values": [
                0.002,
                0.003,
                0.003,
                20.0,
                0.003,
                60.0,
                0.003,
                0.002,
                0.003,
                21.0
            ],
            "resampled": [
                "0 <- 2.8",
                "1 <- 3.2",
                "2 <- 2.9",
                "3 <- INIT",
                "4 <- 2.9",
                "5 <- 2.7",
                "6 <- 5.5",
                "7 <- 1.1",
                "8 <- 4.8",
                "9 <- 4.4"
            ],
            "resampled_steps": [
                "1 + 1 = 2 (left: 2 2 6)\n2 + 2 = 4 (left: 4 6)",
                "1 * 2 = 2 (left: 2 2 6)\n2 * 2 = 4 (left: 4 6)",
                "1 + 1 = 2 (left: 2 2 6)\n6 * 2 = 12 (left: 2 12)",
                "",
                "1 + 1 = 2 (left: 2 2 6)\n6 * 2 = 12 (left: 2 12)",
                "1 * 2 = 2 (left: 2 2 6)",
                "2 * 6 = 12 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)",
                "2 * 6 = 12 (left: 1 2 12)",
                "1 * 2 = 2 (left: 2 2 6)\n2 + 2 = 4 (left: 4 6)",
                "1 * 2 = 2 (left: 2 2 6)\n2 + 2 = 4 (left: 4 6)"
            ]
        },
        "step_6": {
            "steps": [
                "1 + 1 = 2 (left: 2 2 6)\n2 + 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "1 * 2 = 2 (left: 2 2 6)\n2 * 2 = 4 (left: 4 6)\n6 / 4 = 1.5 (left: 1.5)",
                "1 + 1 = 2 (left: 2 2 6)\n6 * 2 = 12 (left: 2 12)\n12 - 2 = 10 (left: 10)",
                "6 - 2 = 4 (left: 1 1 4)",
                "1 + 1 = 2 (left: 2 2 6)\n6 * 2 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "1 * 2 = 2 (left: 2 2 6)\n2 * 2 = 4 (left: 4 6)",
                "2 * 6 = 12 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)\n1 + 6 = 7 (left: 7)",
                "2 * 6 = 12 (left: 1 2 12)\n12 - 2 = 10 (left: 1 10)",
                "1 * 2 = 2 (left: 2 2 6)\n2 + 2 = 4 (left: 4 6)\n6 - 4 = 2 (left: 2)",
                "1 * 2 = 2 (left: 2 2 6)\n2 + 2 = 4 (left: 4 6)\n6 / 4 = 1.5 (left: 1.5)"
            ],
            "values": [
                20.0,
                0.002,
                0.003,
                1.002,
                60.0,
                60.0,
                0.001,
                20.0,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 4.4",
                "1 <- 3.5",
                "2 <- 5.9",
                "3 <- 3.2",
                "4 <- 3.7",
                "5 <- 2.5",
                "6 <- 1.0",
                "7 <- 1.8",
                "8 <- 2.4",
                "9 <- 4.8"
            ],
            "resampled_steps": [
                "1 * 2 = 2 (left: 2 2 6)\n2 + 2 = 4 (left: 4 6)",
                "1 + 1 = 2 (left: 2 2 6)\n2 / 2 = 1 (left: 1 6)",
                "1 + 1 = 2 (left: 2 2 6)\n2 + 2 = 4 (left: 4 6)\n6 - 4 = 2 (left: 2 6)",
                "1 * 2 = 2 (left: 2 2 6)\n2 * 2 = 4 (left: 4 6)",
                "6 - 2 = 4 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)",
                "2 * 6 = 12 (left: 1 2 12)\n1 + 2 = 3 (left: 3 12)",
                "6 - 2 = 4 (left: 1 4 6)",
                "1 + 1 = 2 (left: 2 2 6)",
                "1 * 2 = 2 (left: 2 2 6)",
                "1 * 2 = 2 (left: 2 2 6)\n2 + 2 = 4 (left: 4 6)"
            ]
        },
        "step_7": {
            "steps": [
                "1 * 2 = 2 (left: 2 2 6)\n2 + 2 = 4 (left: 4 6)\n6 / 4 = 1.5 (left: 1.5)",
                "1 + 1 = 2 (left: 2 2 6)\n2 / 2 = 1 (left: 1 6)\n6 / 1 = 6 (left: 6)",
                "1 + 1 = 2 (left: 2 2 6)\n2 + 2 = 4 (left: 4 6)\n6 - 4 = 2 (left: 2 6)\n6 / 2 = 3 (left: 3 6)",
                "1 * 2 = 2 (left: 2 2 6)\n2 * 2 = 4 (left: 4 6)\n6 - 4 = 2 (left: 2)",
                "6 - 2 = 4 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n24 - 1 = 23 (left: 23)",
                "2 * 6 = 12 (left: 1 2 12)\n1 + 2 = 3 (left: 3 12)\n12 - 3 = 9 (left: 9)",
                "6 - 2 = 4 (left: 1 4 6)\n12 / 9 = 1.33 (left: 3 1.33)",
                "1 + 1 = 2 (left: 2 2 6)\n6 + 2 = 8 (left: 2 8)",
                "1 * 2 = 2 (left: 2 2 6)\n2 * 2 = 4 (left: 4 6)",
                "1 * 2 = 2 (left: 2 2 6)\n2 + 2 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)"
            ],
            "values": [
                0.003,
                0.002,
                2.001,
                0.002,
                20.002,
                0.001,
                0.002,
                1.002,
                60.0,
                0.003
            ],
            "resampled": [
                "0 <- 6.4",
                "1 <- 4.8",
                "2 <- 1.0",
                "3 <- 6.0",
                "4 <- 1.6",
                "5 <- 5.9",
                "6 <- 6.5",
                "7 <- 2.5",
                "8 <- 7.7",
                "9 <- 2.8"
            ],
            "resampled_steps": [
                "1 + 1 = 2 (left: 2 2 6)\n6 * 2 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "1 * 2 = 2 (left: 2 2 6)\n2 + 2 = 4 (left: 4 6)",
                "6 - 2 = 4 (left: 1 4 6)",
                "1 + 1 = 2 (left: 2 2 6)\n2 + 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "1 + 1 = 2 (left: 2 2 6)",
                "1 + 1 = 2 (left: 2 2 6)\n2 + 2 = 4 (left: 4 6)\n6 - 4 = 2 (left: 2 6)",
                "1 * 2 = 2 (left: 2 2 6)\n2 * 2 = 4 (left: 4 6)",
                "2 * 6 = 12 (left: 1 2 12)\n1 + 2 = 3 (left: 3 12)",
                "1 + 1 = 2 (left: 2 2 6)\n6 + 2 = 8 (left: 2 8)",
                "1 + 1 = 2 (left: 2 2 6)\n2 + 2 = 4 (left: 4 6)"
            ]
        },
        "step_8": {
            "steps": [
                "1 + 1 = 2 (left: 2 2 6)\n6 * 2 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 1) * (2 * 6) = 24",
                "1 * 2 = 2 (left: 2 2 6)\n2 + 2 = 4 (left: 4 6)\n6 - 4 = 2 (left: 2)",
                "6 - 2 = 4 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)",
                "1 + 1 = 2 (left: 2 2 6)\n2 + 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 + 1) * (2 + 6) = 24",
                "1 + 1 = 2 (left: 2 2 6)\n2 + 2 = 4 (left: 4 6)",
                "1 + 1 = 2 (left: 2 2 6)\n2 + 2 = 4 (left: 4 6)\n6 - 4 = 2 (left: 2 6)\n6 - 2 = 4 (left: 4)",
                "1 * 2 = 2 (left: 2 2 6)\n2 * 2 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)",
                "2 * 6 = 12 (left: 1 2 12)\n1 + 2 = 3 (left: 3 12)\n12 - 3 = 9 (left: 9)",
                "1 + 1 = 2 (left: 2 2 6)\n6 + 2 = 8 (left: 2 8)\n2 * 8 = 16 (left: 16)",
                "1 + 1 = 2 (left: 2 2 6)\n2 + 2 = 4 (left: 4 6)\nPossible next steps:"
            ]
        },
        "results": [
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 1.24245
    },
    "20": {
        "input": "1 1 2 11",
        "step_1": {
            "steps": [
                "1 + 1 = 2 (left: 2 2 11)",
                "11 - 1 = 10 (left: 1 2 10)",
                "11 - 2 = 9 (left: 1 2 9)",
                "11 - 1 = 10 (left: 1 2 10)",
                "1 * 1 = 1 (left: 1 2 11)",
                "1 + 1 = 2 (left: 2 2 11)",
                "2 * 11 = 22 (left: 1 22)",
                "2 + 11 = 13 (left: 1 1 13)",
                "2 + 1 = 3 (left: 1 3 11)",
                "11 - 2 = 9 (left: 1 2 9)"
            ],
            "values": [
                20.002,
                1.001,
                1.002,
                2.001,
                1.002,
                1.002,
                0.002,
                40.001,
                1.002,
                1.002
            ],
            "resampled": [
                "0 <- 1.7",
                "1 <- INIT",
                "2 <- 1.0",
                "3 <- INIT",
                "4 <- 1.7",
                "5 <- INIT",
                "6 <- INIT",
                "7 <- 1.7",
                "8 <- 1.0",
                "9 <- INIT"
            ],
            "resampled_steps": [
                "2 + 11 = 13 (left: 1 1 13)",
                "",
                "1 + 1 = 2 (left: 2 2 11)",
                "",
                "2 + 11 = 13 (left: 1 1 13)",
                "",
                "",
                "2 + 11 = 13 (left: 1 1 13)",
                "1 + 1 = 2 (left: 2 2 11)",
                ""
            ]
        },
        "step_2": {
            "steps": [
                "2 + 11 = 13 (left: 1 1 13)\n1 - 1 = 0 (left: 0 13)",
                "2 - 1 = 1 (left: 1 1 11)",
                "1 + 1 = 2 (left: 2 2 11)\n11 / 2 = 5.5 (left: 2 5.5)",
                "2 / 1 = 2 (left: 2 2 11)",
                "2 + 11 = 13 (left: 1 1 13)\n1 * 1 = 1 (left: 1 13)",
                "2 + 1 = 3 (left: 1 3 11)",
                "11 - 2 = 9 (left: 1 1 9)",
                "2 + 11 = 13 (left: 1 1 13)\n1 + 1 = 2 (left: 2 13)",
                "1 + 1 = 2 (left: 2 2 11)\n2 ^ 2 = 4 (left: 4 11)",
                "2 + 1 = 3 (left: 1 3 11)"
            ],
            "values": [
                0.003,
                0.003,
                1.001,
                1.002,
                0.003,
                1.001,
                1.002,
                0.003,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 1.0",
                "1 <- 1.7",
                "2 <- 1.7",
                "3 <- 1.0",
                "4 <- INIT",
                "5 <- 1.0",
                "6 <- 1.1",
                "7 <- 1.7",
                "8 <- 1.7",
                "9 <- 1.7"
            ],
            "resampled_steps": [
                "1 + 1 = 2 (left: 2 2 11)",
                "2 + 11 = 13 (left: 1 1 13)",
                "2 + 11 = 13 (left: 1 1 13)",
                "1 + 1 = 2 (left: 2 2 11)",
                "",
                "1 + 1 = 2 (left: 2 2 11)",
                "11 - 1 = 10 (left: 1 2 10)",
                "2 + 11 = 13 (left: 1 1 13)",
                "2 + 11 = 13 (left: 1 1 13)",
                "2 + 11 = 13 (left: 1 1 13)"
            ]
        },
        "step_3": {
            "steps": [
                "1 + 1 = 2 (left: 2 2 11)\n2 + 11 = 13 (left: 2 13)",
                "2 + 11 = 13 (left: 1 1 13)\n1 + 1 = 2 (left: 2 13)",
                "2 + 11 = 13 (left: 1 1 13)\n1 - 1 = 0 (left: 0 13)",
                "1 + 1 = 2 (left: 2 2 11)\n2 + 2 = 4 (left: 4 11)",
                "2 * 11 = 22 (left: 1 2 22)",
                "1 + 1 = 2 (left: 2 2 11)\n2 * 2 = 4 (left: 4 11)",
                "11 - 1 = 10 (left: 1 2 10)\n10 - 2 = 8 (left: 1 8)",
                "2 + 11 = 13 (left: 1 1 13)\n1 - 13 = -12 (left: 1 -12)",
                "2 + 11 = 13 (left: 1 1 13)\n13 / 1 = 13 (left: 1 13)",
                "2 + 11 = 13 (left: 1 1 13)\n13 / 1 = 13 (left: 1 13)"
            ],
            "values": [
                0.003,
                0.003,
                0.002,
                1.002,
                0.003,
                0.003,
                20.001,
                0.003,
                2.0,
                0.003
            ],
            "resampled": [
                "0 <- 1.9",
                "1 <- 1.7",
                "2 <- 1.0",
                "3 <- 3.6",
                "4 <- 1.7",
                "5 <- INIT",
                "6 <- INIT",
                "7 <- 1.7",
                "8 <- 1.7",
                "9 <- 1.7"
            ],
            "resampled_steps": [
                "11 - 2 = 9 (left: 1 2 9)",
                "2 + 11 = 13 (left: 1 1 13)",
                "1 + 1 = 2 (left: 2 2 11)",
                "11 - 1 = 10 (left: 1 2 10)\n10 - 2 = 8 (left: 1 8)",
                "2 + 11 = 13 (left: 1 1 13)",
                "",
                "",
                "2 + 11 = 13 (left: 1 1 13)",
                "2 + 11 = 13 (left: 1 1 13)",
                "2 + 11 = 13 (left: 1 1 13)"
            ]
        },
        "step_4": {
            "steps": [
                "11 - 2 = 9 (left: 1 2 9)\n2 + 9 = 11 (left: 1 11)",
                "2 + 11 = 13 (left: 1 1 13)\n1 - 1 = 0 (left: 0 13)",
                "1 + 1 = 2 (left: 2 2 11)\n2 + 2 = 4 (left: 4 11)",
                "11 - 1 = 10 (left: 1 2 10)\n10 - 2 = 8 (left: 1 8)\n8 - 1 = 7 (left: 7 8)",
                "2 + 11 = 13 (left: 1 1 13)\n1 * 1 = 1 (left: 1 13)",
                "1 * 2 = 2 (left: 2 2 11)",
                "1 * 2 = 2 (left: 2 2 11)",
                "2 + 11 = 13 (left: 1 1 13)\n13 - 1 = 12 (left: 1 12)",
                "2 + 11 = 13 (left: 1 1 13)\n13 / 1 = 13 (left: 1 13)",
                "2 + 11 = 13 (left: 1 1 13)\n13 + 1 = 14 (left: 1 14)"
            ],
            "values": [
                0.001,
                0.002,
                1.002,
                1.001,
                0.003,
                0.003,
                0.003,
                0.003,
                1.001,
                0.002
            ],
            "resampled": [
                "0 <- 1.0",
                "1 <- 1.7",
                "2 <- INIT",
                "3 <- 3.6",
                "4 <- 1.0",
                "5 <- 1.7",
                "6 <- 1.7",
                "7 <- 1.7",
                "8 <- 1.0",
                "9 <- 1.0"
            ],
            "resampled_steps": [
                "1 + 1 = 2 (left: 2 2 11)",
                "2 + 11 = 13 (left: 1 1 13)",
                "",
                "11 - 1 = 10 (left: 1 2 10)\n10 - 2 = 8 (left: 1 8)",
                "1 + 1 = 2 (left: 2 2 11)",
                "2 + 11 = 13 (left: 1 1 13)",
                "2 + 11 = 13 (left: 1 1 13)",
                "2 + 11 = 13 (left: 1 1 13)",
                "1 + 1 = 2 (left: 2 2 11)",
                "1 + 1 = 2 (left: 2 2 11)"
            ]
        },
        "step_5": {
            "steps": [
                "1 + 1 = 2 (left: 2 2 11)\n11 + 2 = 13 (left: 2 13)",
                "2 + 11 = 13 (left: 1 1 13)\n13 + 1 = 14 (left: 1 14)",
                "2 + 11 = 13 (left: 1 2 13)",
                "11 - 1 = 10 (left: 1 2 10)\n10 - 2 = 8 (left: 1 8)\n8 / 1 = 8 (left: 8)",
                "1 + 1 = 2 (left: 2 2 11)\n11 - 2 = 9 (left: 2 9)",
                "2 + 11 = 13 (left: 1 1 13)\n13 * 1 = 13 (left: 1 13)",
                "2 + 11 = 13 (left: 1 1 13)\n1 - 1 = 0 (left: 0 13)",
                "2 + 11 = 13 (left: 1 1 13)\n1 * 1 = 1 (left: 1 13)",
                "1 + 1 = 2 (left: 2 2 11)\n2 * 2 = 4 (left: 4 11)",
                "1 + 1 = 2 (left: 2 2 11)\n11 / 2 = 5.5 (left: 2 5.5)"
            ],
            "values": [
                20.002,
                0.003,
                20.002,
                0.003,
                1.001,
                0.002,
                0.002,
                0.003,
                1.002,
                0.002
            ],
            "resampled": [
                "0 <- 1.7",
                "1 <- 5.0",
                "2 <- 5.2",
                "3 <- 4.2",
                "4 <- 5.2",
                "5 <- INIT",
                "6 <- 1.7",
                "7 <- 1.7",
                "8 <- 1.0",
                "9 <- 5.0"
            ],
            "resampled_steps": [
                "2 + 11 = 13 (left: 1 1 13)",
                "1 + 1 = 2 (left: 2 2 11)\n11 + 2 = 13 (left: 2 13)",
                "2 + 11 = 13 (left: 1 2 13)",
                "1 + 1 = 2 (left: 2 2 11)\n2 + 2 = 4 (left: 4 11)",
                "2 + 11 = 13 (left: 1 2 13)",
                "",
                "2 + 11 = 13 (left: 1 1 13)",
                "2 + 11 = 13 (left: 1 1 13)",
                "1 + 1 = 2 (left: 2 2 11)",
                "1 + 1 = 2 (left: 2 2 11)\n11 + 2 = 13 (left: 2 13)"
            ]
        },
        "step_6": {
            "steps": [
                "2 + 11 = 13 (left: 1 1 13)\n1 + 1 = 2 (left: 2 13)",
                "1 + 1 = 2 (left: 2 2 11)\n11 + 2 = 13 (left: 2 13)\n13 / 2 = 6.5 (left: 6.5 13)",
                "2 + 11 = 13 (left: 1 2 13)\n13 - 2 = 11 (left: 1 11)",
                "1 + 1 = 2 (left: 2 2 11)\n2 + 2 = 4 (left: 4 11)\n11 - 4 = 7 (left: 4 7)",
                "2 + 11 = 13 (left: 1 2 13)\n1 + 2 = 3 (left: 3 13)",
                "11 / 1 = 11 (left: 1 2 11)",
                "2 + 11 = 13 (left: 1 1 13)\n1 + 13 = 14 (left: 1 14)",
                "2 + 11 = 13 (left: 1 1 13)\n1 - 1 = 0 (left: 0 13)",
                "1 + 1 = 2 (left: 2 2 11)\n2 / 2 = 1 (left: 1 11)",
                "1 + 1 = 2 (left: 2 2 11)\n11 + 2 = 13 (left: 2 13)\n13 - 2 = 11 (left: 11)"
            ],
            "values": [
                0.002,
                40.0,
                0.001,
                1.002,
                0.003,
                0.003,
                0.002,
                1.002,
                0.001,
                0.0
            ],
            "resampled": [
                "0 <- 1.7",
                "1 <- 6.1",
                "2 <- 6.1",
                "3 <- 5.0",
                "4 <- 3.6",
                "5 <- 6.1",
                "6 <- 5.0",
                "7 <- 6.1",
                "8 <- 3.6",
                "9 <- 6.1"
            ],
            "resampled_steps": [
                "2 + 11 = 13 (left: 1 1 13)",
                "1 + 1 = 2 (left: 2 2 11)\n11 + 2 = 13 (left: 2 13)\n13 / 2 = 6.5 (left: 6.5 13)",
                "1 + 1 = 2 (left: 2 2 11)\n11 + 2 = 13 (left: 2 13)\n13 / 2 = 6.5 (left: 6.5 13)",
                "1 + 1 = 2 (left: 2 2 11)\n11 + 2 = 13 (left: 2 13)",
                "11 - 1 = 10 (left: 1 2 10)\n10 - 2 = 8 (left: 1 8)",
                "1 + 1 = 2 (left: 2 2 11)\n11 + 2 = 13 (left: 2 13)\n13 / 2 = 6.5 (left: 6.5 13)",
                "1 + 1 = 2 (left: 2 2 11)\n11 + 2 = 13 (left: 2 13)",
                "1 + 1 = 2 (left: 2 2 11)\n11 + 2 = 13 (left: 2 13)\n13 / 2 = 6.5 (left: 6.5 13)",
                "11 - 1 = 10 (left: 1 2 10)\n10 - 2 = 8 (left: 1 8)",
                "1 + 1 = 2 (left: 2 2 11)\n11 + 2 = 13 (left: 2 13)\n13 / 2 = 6.5 (left: 6.5 13)"
            ]
        },
        "step_7": {
            "steps": [
                "2 + 11 = 13 (left: 1 1 13)\n13 + 1 = 14 (left: 1 14)",
                "1 + 1 = 2 (left: 2 2 11)\n11 + 2 = 13 (left: 2 13)\n13 / 2 = 6.5 (left: 6.5 13)\n6.5 * 2 = 13 (left: 13)",
                "1 + 1 = 2 (left: 2 2 11)\n11 + 2 = 13 (left: 2 13)\n13 / 2 = 6.5 (left: 6.5 13)\n6.5 * 13 = 84.5 (left: 13 84.5)",
                "1 + 1 = 2 (left: 2 2 11)\n11 + 2 = 13 (left: 2 13)\n2 + 13 = 15 (left: 15)",
                "11 - 1 = 10 (left: 1 2 10)\n10 - 2 = 8 (left: 1 8)\n8 - 1 = 7 (left: 7)",
                "1 + 1 = 2 (left: 2 2 11)\n11 + 2 = 13 (left: 2 13)\n13 / 2 = 6.5 (left: 6.5 13)\n13 + 6.5 = 19.5 (left: 6.5 19.5)",
                "1 + 1 = 2 (left: 2 2 11)\n11 + 2 = 13 (left: 2 13)\n13 - 2 = 11 (left: 11)",
                "1 + 1 = 2 (left: 2 2 11)\n11 + 2 = 13 (left: 2 13)\n13 / 2 = 6.5 (left: 6.5 13)\n13 / 2 = 6.5 (left: 6.5 6.5)",
                "11 - 1 = 10 (left: 1 2 10)\n10 - 2 = 8 (left: 1 8)\n8 - 1 = 7 (left: 7)",
                "1 + 1 = 2 (left: 2 2 11)\n11 + 2 = 13 (left: 2 13)\n13 / 2 = 6.5 (left: 6.5 13)\n6.5 * 2 = 13 (left: 13)"
            ],
            "values": [
                1.001,
                0.003,
                0.003,
                0.002,
                0.001,
                1.002,
                0.001,
                3.0,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 6.1",
                "1 <- 5.2",
                "2 <- 6.1",
                "3 <- 1.7",
                "4 <- 1.3",
                "5 <- 6.1",
                "6 <- 6.1",
                "7 <- 7.7",
                "8 <- 3.8",
                "9 <- 4.3"
            ],
            "resampled_steps": [
                "1 + 1 = 2 (left: 2 2 11)\n11 + 2 = 13 (left: 2 13)\n13 / 2 = 6.5 (left: 6.5 13)",
                "2 + 11 = 13 (left: 1 2 13)",
                "1 + 1 = 2 (left: 2 2 11)\n11 + 2 = 13 (left: 2 13)\n13 / 2 = 6.5 (left: 6.5 13)",
                "2 + 11 = 13 (left: 1 1 13)",
                "11 - 1 = 10 (left: 1 2 10)",
                "1 + 1 = 2 (left: 2 2 11)\n11 + 2 = 13 (left: 2 13)\n13 / 2 = 6.5 (left: 6.5 13)",
                "1 + 1 = 2 (left: 2 2 11)\n11 + 2 = 13 (left: 2 13)\n13 / 2 = 6.5 (left: 6.5 13)",
                "1 + 1 = 2 (left: 2 2 11)\n11 + 2 = 13 (left: 2 13)\n13 / 2 = 6.5 (left: 6.5 13)\n13 / 2 = 6.5 (left: 6.5 6.5)",
                "2 + 11 = 13 (left: 1 1 13)\n13 / 1 = 13 (left: 1 13)",
                "11 - 1 = 10 (left: 1 2 10)\n10 - 2 = 8 (left: 1 8)\n8 - 1 = 7 (left: 7 8)"
            ]
        },
        "step_8": {
            "steps": [
                "1 + 1 = 2 (left: 2 2 11)\n11 + 2 = 13 (left: 2 13)\n13 / 2 = 6.5 (left: 6.5 13)\n6.5 * 2 = 13 (left: 13 13)",
                "2 + 11 = 13 (left: 1 2 13)\n13 - 2 = 11 (left: 1 11)",
                "1 + 1 = 2 (left: 2 2 11)\n11 + 2 = 13 (left: 2 13)\n13 / 2 = 6.5 (left: 6.5 13)\n13 / 6.5 = 2 (left: 2 13)",
                "2 + 11 = 13 (left: 1 1 13)\n13 * 1 = 13 (left: 1 13)",
                "11 - 1 = 10 (left: 1 2 10)\n2 * 10 = 20 (left: 1 20)",
                "1 + 1 = 2 (left: 2 2 11)\n11 + 2 = 13 (left: 2 13)\n13 / 2 = 6.5 (left: 6.5 13)\n6.5 * 2 = 13 (left: 13 13)",
                "1 + 1 = 2 (left: 2 2 11)\n11 + 2 = 13 (left: 2 13)\n13 / 2 = 6.5 (left: 6.5 13)\n13 / 6.5 = 2 (left: 6.5 2)",
                "1 + 1 = 2 (left: 2 2 11)\n11 + 2 = 13 (left: 2 13)\n13 / 2 = 6.5 (left: 6.5 13)\n13 / 2 = 6.5 (left: 6.5 6.5)\n6.5 * 6.5 = 42.25 (left: 42.25)",
                "2 + 11 = 13 (left: 1 1 13)\n13 / 1 = 13 (left: 1 13)\n13 / 1 = 13 (left: 13) ",
                "11 - 1 = 10 (left: 1 2 10)\n10 - 2 = 8 (left: 1 8)\n8 - 1 = 7 (left: 7 8)\n7 - 8 = -1 (left: -1)"
            ],
            "values": [
                0.003,
                40.0,
                1.001,
                0.002,
                1.002,
                0.003,
                0.003,
                0.002,
                0.002,
                0.0
            ],
            "resampled": [
                "0 <- 5.2",
                "1 <- 5.2",
                "2 <- 5.2",
                "3 <- 5.8",
                "4 <- 6.7",
                "5 <- 8.1",
                "6 <- 8.1",
                "7 <- 5.0",
                "8 <- 6.1",
                "9 <- 5.2"
            ],
            "resampled_steps": [
                "2 + 11 = 13 (left: 1 2 13)",
                "2 + 11 = 13 (left: 1 2 13)",
                "2 + 11 = 13 (left: 1 2 13)",
                "1 + 1 = 2 (left: 2 2 11)\n2 * 2 = 4 (left: 4 11)",
                "2 + 11 = 13 (left: 1 1 13)\n1 - 1 = 0 (left: 0 13)",
                "2 + 11 = 13 (left: 1 2 13)\n13 - 2 = 11 (left: 1 11)",
                "2 + 11 = 13 (left: 1 2 13)\n13 - 2 = 11 (left: 1 11)",
                "1 + 1 = 2 (left: 2 2 11)\n11 + 2 = 13 (left: 2 13)",
                "1 + 1 = 2 (left: 2 2 11)\n11 + 2 = 13 (left: 2 13)\n13 / 2 = 6.5 (left: 6.5 13)",
                "2 + 11 = 13 (left: 1 2 13)"
            ]
        },
        "step_9": {
            "steps": [
                "2 + 11 = 13 (left: 1 2 13)\n13 - 2 = 11 (left: 1 11)",
                "2 + 11 = 13 (left: 1 2 13)\n2 * 13 = 26 (left: 1 26)",
                "2 + 11 = 13 (left: 1 2 13)\n2 - 1 = 1 (left: 1 13)",
                "1 + 1 = 2 (left: 2 2 11)\n2 * 2 = 4 (left: 4 11)\n4 * 11 = 44 (left: 11 44)",
                "2 + 11 = 13 (left: 1 1 13)\n1 - 1 = 0 (left: 0 13)\n13 - 0 = 13 (left: 13)",
                "2 + 11 = 13 (left: 1 2 13)\n13 - 2 = 11 (left: 1 11)\n11 / 1 = 11 (left: 1 11)",
                "2 + 11 = 13 (left: 1 2 13)\n13 - 2 = 11 (left: 1 11)\n11 - 1 = 10 (left: 1 10)",
                "1 + 1 = 2 (left: 2 2 11)\n11 + 2 = 13 (left: 2 13)\n13 - 2 = 11 (left: 2 11)",
                "1 + 1 = 2 (left: 2 2 11)\n11 + 2 = 13 (left: 2 13)\n13 / 2 = 6.5 (left: 6.5 13)\n6.5 * 2 = 13 (left: 13 13)",
                "2 + 11 = 13 (left: 1 2 13)\n2 - 1 = 1 (left: 1 13)"
            ],
            "values": [
                21.001,
                21.001,
                1.002,
                0.003,
                0.002,
                1.001,
                60.0,
                0.003,
                0.003,
                0.002
            ],
            "resampled": [
                "0 <- 5.0",
                "1 <- 1.7",
                "2 <- 8.1",
                "3 <- 8.1",
                "4 <- 5.2",
                "5 <- 6.1",
                "6 <- 1.0",
                "7 <- 9.6",
                "8 <- 8.1",
                "9 <- 8.1"
            ],
            "resampled_steps": [
                "1 + 1 = 2 (left: 2 2 11)\n11 + 2 = 13 (left: 2 13)",
                "2 + 11 = 13 (left: 1 1 13)",
                "2 + 11 = 13 (left: 1 2 13)\n13 - 2 = 11 (left: 1 11)",
                "2 + 11 = 13 (left: 1 2 13)\n13 - 2 = 11 (left: 1 11)",
                "2 + 11 = 13 (left: 1 2 13)",
                "1 + 1 = 2 (left: 2 2 11)\n11 + 2 = 13 (left: 2 13)\n13 / 2 = 6.5 (left: 6.5 13)",
                "1 + 1 = 2 (left: 2 2 11)",
                "2 + 11 = 13 (left: 1 2 13)\n13 - 2 = 11 (left: 1 11)\n11 - 1 = 10 (left: 1 10)",
                "2 + 11 = 13 (left: 1 2 13)\n13 - 2 = 11 (left: 1 11)",
                "2 + 11 = 13 (left: 1 2 13)\n13 - 2 = 11 (left: 1 11)"
            ]
        },
        "step_10": {
            "steps": [
                "1 + 1 = 2 (left: 2 2 11)\n11 + 2 = 13 (left: 2 13)\n13 - 2 = 11 (left: 2 11)",
                "2 + 11 = 13 (left: 1 1 13)\n1 / 1 = 1 (left: 1 13)",
                "2 + 11 = 13 (left: 1 2 13)\n13 - 2 = 11 (left: 1 11)\n1 + 11 = 12 (left: 11 12)",
                "2 + 11 = 13 (left: 1 2 13)\n13 - 2 = 11 (left: 1 11)\n1 + 11 = 12 (left: 12)",
                "2 + 11 = 13 (left: 1 2 13)\n2 - 1 = 1 (left: 1 13)",
                "1 + 1 = 2 (left: 2 2 11)\n11 + 2 = 13 (left: 2 13)\n13 / 2 = 6.5 (left: 6.5 13)\n3 * 2 = 6 (left: 6 9)",
                "1 + 1 = 2 (left: 2 2 11)\n2 + 2 = 4 (left: 4 11)",
                "2 + 11 = 13 (left: 1 2 13)\n13 - 2 = 11 (left: 1 11)\n11 - 1 = 10 (left: 1 10)\n10 + 1 = 11 (left: 1 11)",
                "2 + 11 = 13 (left: 1 2 13)\n13 - 2 = 11 (left: 1 11)\n1 * 11 = 11 (left: 11 11)",
                "2 + 11 = 13 (left: 1 2 13)\n13 - 2 = 11 (left: 1 11)\n1 + 11 = 12 (left: 11 12)"
            ],
            "values": [
                2.001,
                2.001,
                0.003,
                0.001,
                0.001,
                0.003,
                21.001,
                20.001,
                0.002,
                0.003
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 1.323317
    },
    "21": {
        "input": "1 2 3 4",
        "step_1": {
            "steps": [
                "3 + 4 = 7 (left: 1 2 7)",
                "4 - 3 = 1 (left: 1 2 1)",
                "4 - 3 = 1 (left: 1 2 1)",
                "4 - 2 = 2 (left: 1 3 2)",
                "1 * 2 = 2 (left: 2 3 4)",
                "2 * 3 = 6 (left: 1 6 4)",
                "4 / 2 = 2 (left: 1 2 2)",
                "3 + 4 = 7 (left: 1 2 7)",
                "3 + 1 = 4 (left: 2 4 4)",
                "4 - 2 = 2 (left: 1 3 2)"
            ],
            "values": [
                0.003,
                1.002,
                0.003,
                1.002,
                60.0,
                60.0,
                1.002,
                0.002,
                1.002,
                1.002
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- 1.4",
                "2 <- INIT",
                "3 <- 1.5",
                "4 <- INIT",
                "5 <- 1.5",
                "6 <- INIT",
                "7 <- 1.4",
                "8 <- INIT",
                "9 <- 1.4"
            ],
            "resampled_steps": [
                "",
                "1 * 2 = 2 (left: 2 3 4)",
                "",
                "2 * 3 = 6 (left: 1 6 4)",
                "",
                "2 * 3 = 6 (left: 1 6 4)",
                "",
                "1 * 2 = 2 (left: 2 3 4)",
                "",
                "1 * 2 = 2 (left: 2 3 4)"
            ]
        },
        "step_2": {
            "steps": [
                "4 - 3 = 1 (left: 1 2 1)",
                "1 * 2 = 2 (left: 2 3 4)\n4 / 2 = 2 (left: 3 2)",
                "2 * 4 = 8 (left: 1 3 8)",
                "2 * 3 = 6 (left: 1 6 4)\n6 - 1 = 5 (left: 5 4)",
                "2 * 4 = 8 (left: 1 3 8)",
                "2 * 3 = 6 (left: 1 6 4)\n6 + 4 = 10 (left: 1 10)",
                "1 + 2 = 3 (left: 3 3 4)",
                "1 * 2 = 2 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)",
                "4 - 3 = 1 (left: 1 2 1)",
                "1 * 2 = 2 (left: 2 3 4)\n2 + 3 = 5 (left: 4 5)"
            ],
            "values": [
                1.002,
                1.001,
                60.0,
                1.001,
                40.001,
                21.001,
                0.003,
                60.0,
                0.003,
                20.0
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- 2.5",
                "2 <- 2.2",
                "3 <- INIT",
                "4 <- 2.2",
                "5 <- 2.7",
                "6 <- 1.4",
                "7 <- 2.2",
                "8 <- 1.6",
                "9 <- 1.5"
            ],
            "resampled_steps": [
                "",
                "2 * 3 = 6 (left: 1 6 4)\n6 + 4 = 10 (left: 1 10)",
                "2 * 4 = 8 (left: 1 3 8)",
                "",
                "2 * 4 = 8 (left: 1 3 8)",
                "1 * 2 = 2 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)",
                "1 * 2 = 2 (left: 2 3 4)",
                "2 * 4 = 8 (left: 1 3 8)",
                "4 / 2 = 2 (left: 1 2 2)",
                "2 * 3 = 6 (left: 1 6 4)"
            ]
        },
        "step_3": {
            "steps": [
                "2 * 4 = 8 (left: 1 3 8)",
                "2 * 3 = 6 (left: 1 6 4)\n6 + 4 = 10 (left: 1 10)\n10 / 1 = 10 (left: 10)",
                "2 * 4 = 8 (left: 1 3 8)\n8 - 3 = 5 (left: 1 5)",
                "1 * 2 = 2 (left: 2 3 4)",
                "2 * 4 = 8 (left: 1 3 8)\n3 / 1 = 3 (left: 3 8)",
                "1 * 2 = 2 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n4 ^ 6 = 4096 (left: 4096)",
                "1 * 2 = 2 (left: 2 3 4)\n4 - 3 = 1 (left: 2 1)",
                "2 * 4 = 8 (left: 1 3 8)\n8 - 1 = 7 (left: 3 7)",
                "4 / 2 = 2 (left: 1 2 2)\n1 + 2 = 3 (left: 2 3)",
                "2 * 3 = 6 (left: 1 6 4)\n4 + 1 = 5 (left: 6 5)"
            ],
            "values": [
                60.0,
                0.003,
                1.0,
                60.0,
                60.0,
                0.002,
                1.002,
                0.0,
                0.002,
                40.001
            ],
            "resampled": [
                "0 <- 2.4",
                "1 <- 3.0",
                "2 <- 3.0",
                "3 <- 2.2",
                "4 <- 2.2",
                "5 <- INIT",
                "6 <- 3.0",
                "7 <- 1.4",
                "8 <- 2.4",
                "9 <- 2.7"
            ],
            "resampled_steps": [
                "2 * 4 = 8 (left: 1 3 8)",
                "2 * 4 = 8 (left: 1 3 8)",
                "2 * 4 = 8 (left: 1 3 8)",
                "2 * 4 = 8 (left: 1 3 8)",
                "2 * 4 = 8 (left: 1 3 8)",
                "",
                "2 * 4 = 8 (left: 1 3 8)",
                "1 * 2 = 2 (left: 2 3 4)",
                "2 * 4 = 8 (left: 1 3 8)",
                "1 * 2 = 2 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)"
            ]
        },
        "step_4": {
            "steps": [
                "2 * 4 = 8 (left: 1 3 8)\n1 + 3 = 4 (left: 4 8)",
                "2 * 4 = 8 (left: 1 3 8)\n8 - 1 = 7 (left: 3 7)",
                "2 * 4 = 8 (left: 1 3 8)\n8 - 3 = 5 (left: 1 5)",
                "2 * 4 = 8 (left: 1 3 8)\n8 - 3 = 5 (left: 1 5)",
                "2 * 4 = 8 (left: 1 3 8)\n3 * 8 = 24 (left: 1 24)",
                "3 + 4 = 7 (left: 2 7 4)",
                "2 * 4 = 8 (left: 1 3 8)\n8 - 3 = 5 (left: 1 5)",
                "1 * 2 = 2 (left: 2 3 4)\n4 / 2 = 2 (left: 3 2)",
                "2 * 4 = 8 (left: 1 3 8)\n8 - 3 = 5 (left: 1 5)",
                "1 * 2 = 2 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\nPossible next steps:"
            ],
            "values": [
                20.001,
                0.001,
                21.0,
                0.002,
                60.0,
                3.0,
                20.0,
                2.0,
                40.001,
                0.003
            ],
            "resampled": [
                "0 <- 2.7",
                "1 <- 3.0",
                "2 <- 4.0",
                "3 <- 4.4",
                "4 <- 3.0",
                "5 <- INIT",
                "6 <- 4.2",
                "7 <- 3.3",
                "8 <- 4.4",
                "9 <- 2.7"
            ],
            "resampled_steps": [
                "1 * 2 = 2 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)",
                "2 * 4 = 8 (left: 1 3 8)",
                "2 * 4 = 8 (left: 1 3 8)\n1 + 3 = 4 (left: 4 8)",
                "2 * 4 = 8 (left: 1 3 8)\n3 * 8 = 24 (left: 1 24)",
                "2 * 4 = 8 (left: 1 3 8)",
                "",
                "2 * 4 = 8 (left: 1 3 8)\n8 - 3 = 5 (left: 1 5)",
                "1 * 2 = 2 (left: 2 3 4)",
                "2 * 4 = 8 (left: 1 3 8)\n3 * 8 = 24 (left: 1 24)",
                "1 * 2 = 2 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)"
            ]
        },
        "step_5": {
            "steps": [
                "1 * 2 = 2 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n4 - 6 = -2 (left: -2)",
                "2 * 4 = 8 (left: 1 3 8)\n8 - 1 = 7 (left: 7 3)",
                "2 * 4 = 8 (left: 1 3 8)\n1 + 3 = 4 (left: 4 8)\n4 + 8 = 12 (left: 8 12)",
                "2 * 4 = 8 (left: 1 3 8)\n3 * 8 = 24 (left: 1 24)\n24 - 24 = 0 (left: 0)",
                "2 * 4 = 8 (left: 1 3 8)\n8 - 3 = 5 (left: 1 5)",
                "1 + 2 = 3 (left: 3 3 4)",
                "2 * 4 = 8 (left: 1 3 8)\n8 - 3 = 5 (left: 1 5)\n1 * 5 = 5 (left: 5 5)",
                "1 * 2 = 2 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)",
                "2 * 4 = 8 (left: 1 3 8)\n3 * 8 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)",
                "1 * 2 = 2 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n4 / 6 = 0.6667 (left: 0.6667)"
            ],
            "values": [
                0.003,
                2.0,
                1.002,
                0.001,
                60.0,
                2.001,
                20.001,
                60.0,
                60.0,
                0.002
            ],
            "resampled": [
                "0 <- 4.4",
                "1 <- 3.9",
                "2 <- 5.7",
                "3 <- 5.4",
                "4 <- 2.9",
                "5 <- 4.4",
                "6 <- 5.8",
                "7 <- 5.8",
                "8 <- 1.5",
                "9 <- 5.8"
            ],
            "resampled_steps": [
                "2 * 4 = 8 (left: 1 3 8)\n3 * 8 = 24 (left: 1 24)",
                "2 * 3 = 6 (left: 1 6 4)\n4 + 1 = 5 (left: 6 5)",
                "1 * 2 = 2 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)",
                "2 * 4 = 8 (left: 1 3 8)\n8 - 3 = 5 (left: 1 5)",
                "1 * 2 = 2 (left: 2 3 4)\n2 + 3 = 5 (left: 4 5)",
                "2 * 4 = 8 (left: 1 3 8)\n3 * 8 = 24 (left: 1 24)",
                "2 * 4 = 8 (left: 1 3 8)\n3 * 8 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)",
                "2 * 4 = 8 (left: 1 3 8)\n3 * 8 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)",
                "2 * 3 = 6 (left: 1 6 4)",
                "2 * 4 = 8 (left: 1 3 8)\n3 * 8 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)"
            ]
        },
        "step_6": {
            "steps": [
                "2 * 4 = 8 (left: 1 3 8)\n3 * 8 = 24 (left: 1 24)\n1 + 24 = 25 (left: 25)",
                "2 * 3 = 6 (left: 1 6 4)\n4 + 1 = 5 (left: 6 5)\n5 - 6 = -1 (left: -1)",
                "1 * 2 = 2 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n6 - 4 = 2 (left: 2)",
                "2 * 4 = 8 (left: 1 3 8)\n8 - 3 = 5 (left: 1 5)\n1 + 5 = 6 (left: 5 6)",
                "1 * 2 = 2 (left: 2 3 4)\n2 + 3 = 5 (left: 4 5)\n4 + 5 = 9 (left: 9)",
                "2 * 4 = 8 (left: 1 3 8)\n3 * 8 = 24 (left: 1 24)\n1 + 24 = 25 (left: 24 25)",
                "2 * 4 = 8 (left: 1 3 8)\n3 * 8 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)\nAnswer: (1 * 24) * (3 * 8) = 24",
                "2 * 4 = 8 (left: 1 3 8)\n3 * 8 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)\nAnswer: (2 * 4) * (3 * 8) = 24",
                "2 * 3 = 6 (left: 1 6 4)\n6 - 1 = 5 (left: 5 4)",
                "2 * 4 = 8 (left: 1 3 8)\n3 * 8 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)\nAnswer: (1 * 24) * (2 * 4) = 24"
            ],
            "values": [
                0.002,
                0.0,
                0.002,
                2.001,
                0.001,
                0.003,
                0.003,
                0.003,
                2.0,
                0.003
            ],
            "resampled": [
                "0 <- 3.0",
                "1 <- 5.4",
                "2 <- 4.8",
                "3 <- 3.3",
                "4 <- 3.0",
                "5 <- 4.8",
                "6 <- 5.4",
                "7 <- 2.2",
                "8 <- 4.4",
                "9 <- 1.5"
            ],
            "resampled_steps": [
                "2 * 4 = 8 (left: 1 3 8)",
                "2 * 4 = 8 (left: 1 3 8)\n8 - 3 = 5 (left: 1 5)",
                "2 * 4 = 8 (left: 1 3 8)\n8 - 3 = 5 (left: 1 5)",
                "1 * 2 = 2 (left: 2 3 4)",
                "2 * 4 = 8 (left: 1 3 8)",
                "2 * 4 = 8 (left: 1 3 8)\n8 - 3 = 5 (left: 1 5)",
                "2 * 4 = 8 (left: 1 3 8)\n8 - 3 = 5 (left: 1 5)",
                "2 * 4 = 8 (left: 1 3 8)",
                "2 * 4 = 8 (left: 1 3 8)\n3 * 8 = 24 (left: 1 24)",
                "2 * 3 = 6 (left: 1 6 4)"
            ]
        },
        "step_7": {
            "steps": [
                "2 * 4 = 8 (left: 1 3 8)\n3 * 8 = 24 (left: 1 24)",
                "2 * 4 = 8 (left: 1 3 8)\n8 - 3 = 5 (left: 1 5)\n1 + 5 = 6 (left: 6)",
                "2 * 4 = 8 (left: 1 3 8)\n8 - 3 = 5 (left: 1 5)\n1 + 5 = 6 (left: 6)",
                "1 * 2 = 2 (left: 2 3 4)\n2 + 3 = 5 (left: 4 5)",
                "2 * 4 = 8 (left: 1 3 8)\n1 + 3 = 4 (left: 4 8)",
                "2 * 4 = 8 (left: 1 3 8)\n8 - 3 = 5 (left: 1 5)\n5 / 1 = 5 (left: 5 5)",
                "2 * 4 = 8 (left: 1 3 8)\n8 - 3 = 5 (left: 1 5)\n1 * 5 = 5 (left: 5)",
                "2 * 4 = 8 (left: 1 3 8)\n8 - 1 = 7 (left: 3 7)",
                "2 * 4 = 8 (left: 1 3 8)\n3 * 8 = 24 (left: 1 24)\n24 / 1 = 24 (left: 24)",
                "2 * 3 = 6 (left: 1 6 4)\n1 + 6 = 7 (left: 7 4)"
            ],
            "values": [
                60.0,
                0.002,
                0.002,
                21.0,
                1.001,
                0.002,
                0.003,
                20.001,
                60.0,
                2.001
            ],
            "resampled": [
                "0 <- 7.8",
                "1 <- 4.4",
                "2 <- 4.4",
                "3 <- 3.4",
                "4 <- 7.7",
                "5 <- INIT",
                "6 <- 4.0",
                "7 <- 7.0",
                "8 <- 4.8",
                "9 <- 4.4"
            ],
            "resampled_steps": [
                "2 * 4 = 8 (left: 1 3 8)\n3 * 8 = 24 (left: 1 24)\n24 / 1 = 24 (left: 24)",
                "2 * 4 = 8 (left: 1 3 8)\n3 * 8 = 24 (left: 1 24)",
                "2 * 4 = 8 (left: 1 3 8)\n3 * 8 = 24 (left: 1 24)",
                "2 * 4 = 8 (left: 1 3 8)\n3 / 1 = 3 (left: 3 8)",
                "2 * 4 = 8 (left: 1 3 8)\n8 - 1 = 7 (left: 3 7)",
                "",
                "2 * 4 = 8 (left: 1 3 8)\n1 + 3 = 4 (left: 4 8)",
                "2 * 4 = 8 (left: 1 3 8)\n3 * 8 = 24 (left: 1 24)",
                "2 * 4 = 8 (left: 1 3 8)\n8 - 3 = 5 (left: 1 5)",
                "2 * 4 = 8 (left: 1 3 8)\n3 * 8 = 24 (left: 1 24)"
            ]
        },
        "step_8": {
            "steps": [
                "2 * 4 = 8 (left: 1 3 8)\n3 * 8 = 24 (left: 1 24)\n24 / 1 = 24 (left: 24)\nAnswer: (2 * 4) * (3 * 8) / 1 = 24",
                "2 * 4 = 8 (left: 1 3 8)\n3 * 8 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)",
                "2 * 4 = 8 (left: 1 3 8)\n3 * 8 = 24 (left: 1 24)\n24 / 1 = 24 (left: 24)",
                "2 * 4 = 8 (left: 1 3 8)\n3 / 1 = 3 (left: 3 8)\n8 / 3 = 2.67 (left: 2.67 8)",
                "2 * 4 = 8 (left: 1 3 8)\n8 - 1 = 7 (left: 3 7)\n7 - 3 = 4 (left: 4)",
                "1 * 2 = 2 (left: 2 3 4)",
                "2 * 4 = 8 (left: 1 3 8)\n1 + 3 = 4 (left: 4 8)\n8 - 4 = 4 (left: 4 8)",
                "2 * 4 = 8 (left: 1 3 8)\n3 * 8 = 24 (left: 1 24)\n24 - 1 = 23 (left: 1 23)",
                "2 * 4 = 8 (left: 1 3 8)\n8 - 3 = 5 (left: 1 5)\n1 * 5 = 5 (left: 5 5)",
                "2 * 4 = 8 (left: 1 3 8)\n3 * 8 = 24 (left: 1 24)\n24 - 1 = 23 (left: 1 23)"
            ],
            "values": [
                0.003,
                0.0,
                20.0,
                3.0,
                0.001,
                60.0,
                2.001,
                21.001,
                0.002,
                21.001
            ],
            "resampled": [
                "0 <- 7.3",
                "1 <- 4.4",
                "2 <- 5.8",
                "3 <- 5.8",
                "4 <- 3.3",
                "5 <- 4.2",
                "6 <- 2.2",
                "7 <- 7.0",
                "8 <- 2.2",
                "9 <- 8.9"
            ],
            "resampled_steps": [
                "1 * 2 = 2 (left: 2 3 4)\n2 + 3 = 5 (left: 4 5)",
                "2 * 4 = 8 (left: 1 3 8)\n3 * 8 = 24 (left: 1 24)",
                "2 * 4 = 8 (left: 1 3 8)\n3 * 8 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)",
                "2 * 4 = 8 (left: 1 3 8)\n3 * 8 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)",
                "1 * 2 = 2 (left: 2 3 4)",
                "2 * 4 = 8 (left: 1 3 8)\n8 - 3 = 5 (left: 1 5)",
                "2 * 4 = 8 (left: 1 3 8)",
                "2 * 4 = 8 (left: 1 3 8)\n3 * 8 = 24 (left: 1 24)",
                "2 * 4 = 8 (left: 1 3 8)",
                "2 * 4 = 8 (left: 1 3 8)\n3 * 8 = 24 (left: 1 24)\n24 - 1 = 23 (left: 1 23)"
            ]
        },
        "step_9": {
            "steps": [
                "1 * 2 = 2 (left: 2 3 4)\n2 + 3 = 5 (left: 4 5)\n7 + 3 = 10 (left: 10)",
                "2 * 4 = 8 (left: 1 3 8)\n3 * 8 = 24 (left: 1 24)\n24 - 1 = 23 (left: 23)",
                "2 * 4 = 8 (left: 1 3 8)\n3 * 8 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)\nAnswer: (2 * 4) * (3 * 8) = 24",
                "2 * 4 = 8 (left: 1 3 8)\n3 * 8 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)\nAnswer: 1 * (2 * 4) * 3 = 24",
                "1 * 2 = 2 (left: 2 3 4)\n4 / 2 = 2 (left: 3 2)",
                "2 * 4 = 8 (left: 1 3 8)\n8 - 3 = 5 (left: 1 5)\n1 + 5 = 6 (left: 6)",
                "2 * 4 = 8 (left: 1 3 8)\n3 * 8 = 24 (left: 1 24)",
                "2 * 4 = 8 (left: 1 3 8)\n3 * 8 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24 24)",
                "2 * 4 = 8 (left: 1 3 8)\n8 - 3 = 5 (left: 1 5)",
                "2 * 4 = 8 (left: 1 3 8)\n3 * 8 = 24 (left: 1 24)\n24 - 1 = 23 (left: 1 23)\n23 / 1 = 23 (left: 23)"
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 1.398188
    },
    "22": {
        "input": "11 11 12 12",
        "step_1": {
            "steps": [
                "12 - 11 = 1 (left: 11 12 1)",
                "12 - 11 = 1 (left: 11 12 1)",
                "12 - 11 = 1 (left: 11 1 12)",
                "11 / 11 = 1 (left: 1 12 12)",
                "11 + 11 = 22 (left: 12 12 22)",
                "12 + 11 = 23 (left: 11 12 23)",
                "12 - 11 = 1 (left: 1 12 1)",
                "11 + 11 = 22 (left: 12 12 22)",
                "11 + 11 = 22 (left: 12 12 22)",
                "12 - 11 = 1 (left: 11 12 1)"
            ],
            "values": [
                21.001,
                40.001,
                41.0,
                20.002,
                0.003,
                20.001,
                3.0,
                0.003,
                0.003,
                40.001
            ],
            "resampled": [
                "0 <- 1.9",
                "1 <- 1.2",
                "2 <- 1.1",
                "3 <- 1.3",
                "4 <- 1.1",
                "5 <- 1.5",
                "6 <- 1.5",
                "7 <- 1.0",
                "8 <- 1.5",
                "9 <- 1.1"
            ],
            "resampled_steps": [
                "12 - 11 = 1 (left: 11 12 1)",
                "12 - 11 = 1 (left: 11 1 12)",
                "12 - 11 = 1 (left: 11 12 1)",
                "11 / 11 = 1 (left: 1 12 12)",
                "12 - 11 = 1 (left: 11 12 1)",
                "12 + 11 = 23 (left: 11 12 23)",
                "12 + 11 = 23 (left: 11 12 23)",
                "12 - 11 = 1 (left: 11 12 1)",
                "12 + 11 = 23 (left: 11 12 23)",
                "12 - 11 = 1 (left: 11 12 1)"
            ]
        },
        "step_2": {
            "steps": [
                "12 - 11 = 1 (left: 11 12 1)\n11 + 12 = 23 (left: 23 1)",
                "12 - 11 = 1 (left: 11 1 12)\n11 - 1 = 10 (left: 10 12)",
                "12 - 11 = 1 (left: 11 12 1)\n12 - 1 = 11 (left: 11 11)",
                "11 / 11 = 1 (left: 1 12 12)\n12 - 1 = 11 (left: 1 11)",
                "12 - 11 = 1 (left: 11 12 1)\n12 / 1 = 12 (left: 11 12 12)",
                "12 + 11 = 23 (left: 11 12 23)\n23 - 12 = 11 (left: 11 12)",
                "12 + 11 = 23 (left: 11 12 23)\n23 - 12 = 11 (left: 11 11)",
                "12 - 11 = 1 (left: 11 12 1)\n11 * 12 = 132 (left: 132 1)",
                "12 + 11 = 23 (left: 11 12 23)\n12 + 11 = 23 (left: 23 12)",
                "12 - 11 = 1 (left: 11 12 1)\n1 * 12 = 12 (left: 11 12)"
            ],
            "values": [
                40.0,
                0.003,
                1.001,
                21.001,
                1.002,
                0.002,
                0.003,
                20.002,
                0.003,
                20.002
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- 2.0",
                "2 <- 1.2",
                "3 <- INIT",
                "4 <- 1.1",
                "5 <- 1.1",
                "6 <- 1.2",
                "7 <- 2.0",
                "8 <- 2.0",
                "9 <- INIT"
            ],
            "resampled_steps": [
                "",
                "12 - 11 = 1 (left: 11 12 1)\n11 + 12 = 23 (left: 23 1)",
                "12 - 11 = 1 (left: 11 1 12)",
                "",
                "12 - 11 = 1 (left: 11 12 1)",
                "12 - 11 = 1 (left: 11 12 1)",
                "12 - 11 = 1 (left: 11 1 12)",
                "12 - 11 = 1 (left: 11 12 1)\n11 + 12 = 23 (left: 23 1)",
                "12 - 11 = 1 (left: 11 12 1)\n11 + 12 = 23 (left: 23 1)",
                ""
            ]
        },
        "step_3": {
            "steps": [
                "12 - 11 = 1 (left: 11 1 1)",
                "12 - 11 = 1 (left: 11 12 1)\n11 + 12 = 23 (left: 23 1)\n23 / 1 = 23 (left: 1 23)",
                "12 - 11 = 1 (left: 11 1 12)\n11 * 1 = 11 (left: 11 12)",
                "12 - 11 = 1 (left: 11 12 1)",
                "12 - 11 = 1 (left: 11 12 1)\n12 - 11 = 1 (left: 1 1)",
                "12 - 11 = 1 (left: 11 12 1)\n12 / 11 = 1.0909 (left: 1.0909 1)",
                "12 - 11 = 1 (left: 11 1 12)\n1 + 12 = 13 (left: 11 13)",
                "12 - 11 = 1 (left: 11 12 1)\n11 + 12 = 23 (left: 23 1)\n23 * 1 = 23 (left: 23)",
                "12 - 11 = 1 (left: 11 12 1)\n11 + 12 = 23 (left: 23 1)\n23 * 1 = 23 (left: 1 23)",
                "12 - 11 = 1 (left: 11 1 12)"
            ],
            "values": [
                0.003,
                41.0,
                0.003,
                41.0,
                0.002,
                1.0,
                60.0,
                0.0,
                40.001,
                40.001
            ],
            "resampled": [
                "0 <- 3.3",
                "1 <- 1.9",
                "2 <- 3.9",
                "3 <- 3.9",
                "4 <- 2.3",
                "5 <- 3.3",
                "6 <- 3.3",
                "7 <- 3.6",
                "8 <- 3.9",
                "9 <- 1.0"
            ],
            "resampled_steps": [
                "12 - 11 = 1 (left: 11 12 1)",
                "12 - 11 = 1 (left: 11 12 1)",
                "12 - 11 = 1 (left: 11 1 12)",
                "12 - 11 = 1 (left: 11 1 12)",
                "11 / 11 = 1 (left: 1 12 12)\n12 - 1 = 11 (left: 1 11)",
                "12 - 11 = 1 (left: 11 12 1)",
                "12 - 11 = 1 (left: 11 12 1)",
                "12 - 11 = 1 (left: 11 1 12)\n1 + 12 = 13 (left: 11 13)",
                "12 - 11 = 1 (left: 11 1 12)",
                "12 - 11 = 1 (left: 11 12 1)"
            ]
        },
        "step_4": {
            "steps": [
                "12 - 11 = 1 (left: 11 12 1)\n11 * 12 = 132 (left: 132 1)",
                "12 - 11 = 1 (left: 11 12 1)\n12 - 11 = 1 (left: 1 1)",
                "12 - 11 = 1 (left: 11 1 12)\n1 * 12 = 12 (left: 11 12)",
                "12 - 11 = 1 (left: 11 1 12)\n1 * 12 = 12 (left: 11 12)",
                "11 / 11 = 1 (left: 1 12 12)\n12 - 1 = 11 (left: 1 11)\n1 * 11 = 11 (left: 11)",
                "12 - 11 = 1 (left: 11 12 1)\n11 / 12 = 0.9167 (left: 0.9167 1)",
                "12 - 11 = 1 (left: 11 12 1)\n11 - 1 = 10 (left: 10 12)",
                "12 - 11 = 1 (left: 11 1 12)\n1 + 12 = 13 (left: 11 13)\n11 * 13 = 143 (left: 143)",
                "12 - 11 = 1 (left: 11 1 12)\n11 + 1 = 12 (left: 12 12)",
                "12 - 11 = 1 (left: 11 12 1)\n11 / 12 = 0.9166666666666666 (left: 0.9166666666666666 1)"
            ],
            "values": [
                20.002,
                0.003,
                0.003,
                0.003,
                0.002,
                2.001,
                0.003,
                0.003,
                1.002,
                20.001
            ],
            "resampled": [
                "0 <- 3.6",
                "1 <- 3.9",
                "2 <- 1.3",
                "3 <- 1.2",
                "4 <- 3.3",
                "5 <- 3.9",
                "6 <- 3.9",
                "7 <- 3.6",
                "8 <- 2.3",
                "9 <- 3.3"
            ],
            "resampled_steps": [
                "12 - 11 = 1 (left: 11 1 12)\n1 + 12 = 13 (left: 11 13)",
                "12 - 11 = 1 (left: 11 1 12)",
                "11 / 11 = 1 (left: 1 12 12)",
                "12 - 11 = 1 (left: 11 1 12)",
                "12 - 11 = 1 (left: 11 12 1)",
                "12 - 11 = 1 (left: 11 1 12)",
                "12 - 11 = 1 (left: 11 1 12)",
                "12 - 11 = 1 (left: 11 1 12)\n1 + 12 = 13 (left: 11 13)",
                "11 / 11 = 1 (left: 1 12 12)\n12 - 1 = 11 (left: 1 11)",
                "12 - 11 = 1 (left: 11 12 1)"
            ]
        },
        "step_5": {
            "steps": [
                "12 - 11 = 1 (left: 11 1 12)\n1 + 12 = 13 (left: 11 13)\n11 + 13 = 24 (left: 24) ",
                "12 - 11 = 1 (left: 11 1 12)\n11 - 1 = 10 (left: 10 12)",
                "11 / 11 = 1 (left: 1 12 12)\n12 - 1 = 11 (left: 1 11)",
                "12 - 11 = 1 (left: 11 1 12)\n1 - 12 = -11 (left: -11 12)",
                "12 - 11 = 1 (left: 11 12 1)\n11 * 12 = 132 (left: 132 1)",
                "12 - 11 = 1 (left: 11 1 12)\n1 - 12 = -11 (left: -11 12)",
                "12 - 11 = 1 (left: 11 1 12)\n11 * 1 = 11 (left: 11 12)",
                "12 - 11 = 1 (left: 11 1 12)\n1 + 12 = 13 (left: 11 13)\n13 + 11 = 24 (left: 11 24)",
                "11 / 11 = 1 (left: 1 12 12)\n12 - 1 = 11 (left: 1 11)\n1 * 11 = 11 (left: 11 11)",
                "12 - 11 = 1 (left: 11 12 1)\n12 - 1 = 11 (left: 11 11)"
            ],
            "values": [
                20.0,
                0.003,
                1.0,
                0.002,
                40.001,
                0.003,
                0.003,
                0.003,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 5.4",
                "1 <- 3.9",
                "2 <- 3.9",
                "3 <- 3.3",
                "4 <- 3.9",
                "5 <- 3.9",
                "6 <- 1.9",
                "7 <- 3.6",
                "8 <- 2.7",
                "9 <- 2.3"
            ],
            "resampled_steps": [
                "12 - 11 = 1 (left: 11 12 1)\n11 * 12 = 132 (left: 132 1)",
                "12 - 11 = 1 (left: 11 1 12)",
                "12 - 11 = 1 (left: 11 1 12)",
                "12 - 11 = 1 (left: 11 12 1)",
                "12 - 11 = 1 (left: 11 1 12)",
                "12 - 11 = 1 (left: 11 1 12)",
                "12 - 11 = 1 (left: 11 12 1)",
                "12 - 11 = 1 (left: 11 1 12)\n1 + 12 = 13 (left: 11 13)",
                "12 - 11 = 1 (left: 11 12 1)\n11 * 12 = 132 (left: 132 1)",
                "11 / 11 = 1 (left: 1 12 12)\n12 - 1 = 11 (left: 1 11)"
            ]
        },
        "step_6": {
            "steps": [
                "12 - 11 = 1 (left: 11 12 1)\n11 * 12 = 132 (left: 132 1)\n132 - 1 = 131 (left: 1 131)",
                "12 - 11 = 1 (left: 11 1 12)\n11 + 1 = 12 (left: 12 12)",
                "12 - 11 = 1 (left: 11 1 12)\n11 + 1 = 12 (left: 12 12)",
                "12 - 11 = 1 (left: 11 12 1)\n12 - 11 = 1 (left: 1 1)",
                "12 - 11 = 1 (left: 11 1 12)\n11 - 1 = 10 (left: 10 12)",
                "12 - 11 = 1 (left: 11 1 12)\n11 * 1 = 11 (left: 11 12)",
                "12 - 11 = 1 (left: 11 12 1)\n1 * 12 = 12 (left: 11 12)",
                "12 - 11 = 1 (left: 11 1 12)\n1 + 12 = 13 (left: 11 13)\n11 + 13 = 24 (left: 24)",
                "12 - 11 = 1 (left: 11 12 1)\n11 * 12 = 132 (left: 132 1)\n132 - 1 = 131 (left: 131)",
                "11 / 11 = 1 (left: 1 12 12)\n12 - 1 = 11 (left: 1 11)\n11 / 11 = 1 (left: 1)"
            ],
            "values": [
                1.002,
                20.002,
                20.002,
                0.003,
                2.001,
                0.002,
                0.003,
                60.0,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 6.7",
                "1 <- 2.3",
                "2 <- 5.4",
                "3 <- 3.8",
                "4 <- 3.6",
                "5 <- 1.1",
                "6 <- 5.0",
                "7 <- 1.9",
                "8 <- 3.8",
                "9 <- 5.0"
            ],
            "resampled_steps": [
                "12 - 11 = 1 (left: 11 1 12)\n1 + 12 = 13 (left: 11 13)\n11 + 13 = 24 (left: 24)",
                "11 / 11 = 1 (left: 1 12 12)\n12 - 1 = 11 (left: 1 11)",
                "12 - 11 = 1 (left: 11 12 1)\n11 * 12 = 132 (left: 132 1)",
                "12 - 11 = 1 (left: 11 12 1)\n11 + 12 = 23 (left: 23 1)\n23 * 1 = 23 (left: 1 23)",
                "12 - 11 = 1 (left: 11 1 12)\n1 + 12 = 13 (left: 11 13)",
                "12 - 11 = 1 (left: 11 12 1)",
                "12 - 11 = 1 (left: 11 1 12)\n1 + 12 = 13 (left: 11 13)\n11 + 13 = 24 (left: 24) ",
                "12 - 11 = 1 (left: 11 12 1)",
                "12 - 11 = 1 (left: 11 12 1)\n11 + 12 = 23 (left: 23 1)\n23 * 1 = 23 (left: 1 23)",
                "12 - 11 = 1 (left: 11 1 12)\n1 + 12 = 13 (left: 11 13)\n11 + 13 = 24 (left: 24) "
            ]
        },
        "step_7": {
            "steps": [
                "12 - 11 = 1 (left: 11 1 12)\n1 + 12 = 13 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (11 + (12 - 11)) + 12 = 24",
                "11 / 11 = 1 (left: 1 12 12)\n12 - 1 = 11 (left: 1 11)\n11 / 1 = 11 (left: 11)",
                "12 - 11 = 1 (left: 11 12 1)\n11 * 12 = 132 (left: 132 1)\n132 * 1 = 132 (left: 132)",
                "12 - 11 = 1 (left: 11 12 1)\n11 + 12 = 23 (left: 23 1)\n23 * 1 = 23 (left: 1 23)\n23 / 1 = 23 (left: 1)",
                "12 - 11 = 1 (left: 11 1 12)\n1 + 12 = 13 (left: 11 13)\n11 / 13 = 0.84615384615 (left: 0.84615384615)",
                "12 - 11 = 1 (left: 11 12 1)\n12 + 1 = 13 (left: 11 13)",
                "12 - 11 = 1 (left: 11 1 12)\n1 + 12 = 13 (left: 11 13)\n11 + 13 = 24 (left: 24) \nAnswer: (11 + (12 - 11)) + 12 = 24",
                "12 - 11 = 1 (left: 11 12 1)\n11 / 12 = 0.9167 (left: 0.9167 1)",
                "12 - 11 = 1 (left: 11 12 1)\n11 + 12 = 23 (left: 23 1)\n23 * 1 = 23 (left: 1 23)\n1 * 23 = 23 (left: 23)",
                "12 - 11 = 1 (left: 11 1 12)\n1 + 12 = 13 (left: 11 13)\n11 + 13 = 24 (left: 24) \nAnswer: (11 + (12 - 11)) + 12 = 24"
            ]
        },
        "results": [
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            }
        ],
        "cost": 1.454629
    },
    "23": {
        "input": "3 7 7 8",
        "step_1": {
            "steps": [
                "8 - 7 = 1 (left: 3 7 1)",
                "3 + 7 = 10 (left: 7 10 8)",
                "7 - 3 = 4 (left: 4 7 8)",
                "7 / 3 = 2 (left: 2 7 8)",
                "8 / 3 = 2.67 (left: 2.67 7 8)",
                "8 - 7 = 1 (left: 3 7 1)",
                "3 + 7 = 10 (left: 7 10 8)",
                "3 + 7 = 10 (left: 7 7 8 10)",
                "7 / 3 = 2.333 (left: 2.333 7 8)",
                "3 + 7 = 10 (left: 7 10 8)"
            ],
            "values": [
                2.001,
                3.0,
                21.001,
                1.002,
                2.001,
                3.0,
                3.0,
                2.001,
                2.001,
                22.0
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- 1.9",
                "3 <- 1.2",
                "4 <- 1.9",
                "5 <- 1.9",
                "6 <- 1.2",
                "7 <- 1.9",
                "8 <- 1.9",
                "9 <- INIT"
            ],
            "resampled_steps": [
                "",
                "",
                "3 + 7 = 10 (left: 7 10 8)",
                "7 - 3 = 4 (left: 4 7 8)",
                "3 + 7 = 10 (left: 7 10 8)",
                "3 + 7 = 10 (left: 7 10 8)",
                "7 - 3 = 4 (left: 4 7 8)",
                "3 + 7 = 10 (left: 7 10 8)",
                "3 + 7 = 10 (left: 7 10 8)",
                ""
            ]
        },
        "step_2": {
            "steps": [
                "7 - 3 = 4 (left: 4 7 8)",
                "3 + 7 = 10 (left: 7 10 8)",
                "3 + 7 = 10 (left: 7 10 8)\n10 * 8 = 80 (left: 80)",
                "7 - 3 = 4 (left: 4 7 8)\n8 / 4 = 2 (left: 7 2)",
                "3 + 7 = 10 (left: 7 10 8)\n7 * 10 = 70 (left: 70 8)",
                "3 + 7 = 10 (left: 7 10 8)\n10 - 7 = 3 (left: 3 8)",
                "7 - 3 = 4 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)",
                "3 + 7 = 10 (left: 7 10 8)\n7 * 10 = 70 (left: 8 70)",
                "3 + 7 = 10 (left: 7 10 8)\n10 - 7 = 3 (left: 3 8)",
                "7 / 3 = 2.33 (left: 2.33 7 8)"
            ],
            "values": [
                22.0,
                3.0,
                0.003,
                1.001,
                0.002,
                60.0,
                60.0,
                20.002,
                41.0,
                2.001
            ],
            "resampled": [
                "0 <- 2.8",
                "1 <- 1.9",
                "2 <- 2.8",
                "3 <- 1.9",
                "4 <- 2.6",
                "5 <- INIT",
                "6 <- 2.5",
                "7 <- 2.7",
                "8 <- 2.7",
                "9 <- 2.8"
            ],
            "resampled_steps": [
                "3 + 7 = 10 (left: 7 10 8)\n10 - 7 = 3 (left: 3 8)",
                "3 + 7 = 10 (left: 7 10 8)",
                "3 + 7 = 10 (left: 7 10 8)\n10 - 7 = 3 (left: 3 8)",
                "3 + 7 = 10 (left: 7 10 8)",
                "7 - 3 = 4 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)",
                "",
                "3 + 7 = 10 (left: 7 10 8)\n10 - 7 = 3 (left: 3 8)",
                "3 + 7 = 10 (left: 7 10 8)\n7 * 10 = 70 (left: 8 70)",
                "3 + 7 = 10 (left: 7 10 8)\n7 * 10 = 70 (left: 8 70)",
                "3 + 7 = 10 (left: 7 10 8)\n10 - 7 = 3 (left: 3 8)"
            ]
        },
        "step_3": {
            "steps": [
                "3 + 7 = 10 (left: 7 10 8)\n10 - 7 = 3 (left: 3 8)\n3 * 8 = 24 (left: 8 24)",
                "3 + 7 = 10 (left: 7 10 8)\n8 / 7 = 1.14 (left: 1.14 8)",
                "3 + 7 = 10 (left: 7 10 8)\n10 - 7 = 3 (left: 3 8)\n8 / 3 = 2.67 (left: 3 2.67)",
                "3 + 7 = 10 (left: 7 10 8)\n7 - 8 = -1 (left: -1 8)",
                "7 - 3 = 4 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)\n8 / 3 = 2.6667 (left: 2.6667 8)",
                "7 + 7 = 14 (left: 3 14 8)",
                "3 + 7 = 10 (left: 7 10 8)\n10 - 7 = 3 (left: 3 8)\n3 - 8 = -5 (left: -5 8)",
                "3 + 7 = 10 (left: 7 10 8)\n7 * 10 = 70 (left: 8 70)\n8 + 70 = 78 (left: 78)",
                "3 + 7 = 10 (left: 7 10 8)\n7 * 10 = 70 (left: 8 70)\n8 * 70 = 560 (left: 560)",
                "3 + 7 = 10 (left: 7 10 8)\n10 - 7 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)"
            ],
            "values": [
                0.003,
                1.001,
                2.001,
                1.002,
                1.001,
                3.0,
                2.001,
                0.002,
                0.003,
                0.002
            ],
            "resampled": [
                "0 <- 2.8",
                "1 <- 2.5",
                "2 <- 1.9",
                "3 <- INIT",
                "4 <- 2.5",
                "5 <- 2.0",
                "6 <- 1.7",
                "7 <- 2.5",
                "8 <- 2.8",
                "9 <- 2.5"
            ],
            "resampled_steps": [
                "3 + 7 = 10 (left: 7 10 8)\n10 - 7 = 3 (left: 3 8)",
                "3 + 7 = 10 (left: 7 10 8)\n10 - 7 = 3 (left: 3 8)",
                "3 + 7 = 10 (left: 7 10 8)",
                "",
                "3 + 7 = 10 (left: 7 10 8)\n10 - 7 = 3 (left: 3 8)",
                "7 - 3 = 4 (left: 4 7 8)",
                "3 + 7 = 10 (left: 7 7 8 10)",
                "3 + 7 = 10 (left: 7 10 8)\n10 - 7 = 3 (left: 3 8)",
                "3 + 7 = 10 (left: 7 10 8)\n10 - 7 = 3 (left: 3 8)",
                "3 + 7 = 10 (left: 7 10 8)\n10 - 7 = 3 (left: 3 8)"
            ]
        },
        "step_4": {
            "steps": [
                "3 + 7 = 10 (left: 7 10 8)\n10 - 7 = 3 (left: 3 8)\n3 * 8 = 24 (left: 8 24)",
                "3 + 7 = 10 (left: 7 10 8)\n10 - 7 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5 8)",
                "3 + 7 = 10 (left: 7 10 8)\n10 * 8 = 80 (left: 80)",
                "8 - 7 = 1 (left: 3 7 1)",
                "3 + 7 = 10 (left: 7 10 8)\n10 - 7 = 3 (left: 3 8)\n3 + 8 = 11 (left: 8 11)",
                "7 - 3 = 4 (left: 4 7 8)\n7 / 4 = 1.75 (left: 1.75 8)",
                "3 + 7 = 10 (left: 7 7 8 10)\n10 - 7 = 3 (left: 7 8 3)",
                "3 + 7 = 10 (left: 7 10 8)\n10 - 7 = 3 (left: 3 8)\n3 * 8 = 24 (left: 8 24)",
                "3 + 7 = 10 (left: 7 10 8)\n10 - 7 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5 8)",
                "3 + 7 = 10 (left: 7 10 8)\n10 - 7 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5 8)"
            ],
            "values": [
                1.002,
                0.002,
                0.002,
                2.0,
                2.0,
                3.0,
                2.001,
                1.002,
                20.002,
                22.0
            ],
            "resampled": [
                "0 <- 4.4",
                "1 <- 4.9",
                "2 <- 2.0",
                "3 <- 2.5",
                "4 <- INIT",
                "5 <- 2.0",
                "6 <- 4.8",
                "7 <- 2.6",
                "8 <- 2.6",
                "9 <- 3.6"
            ],
            "resampled_steps": [
                "3 + 7 = 10 (left: 7 10 8)\n10 - 7 = 3 (left: 3 8)\n3 + 8 = 11 (left: 8 11)",
                "3 + 7 = 10 (left: 7 10 8)\n10 - 7 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5 8)",
                "7 - 3 = 4 (left: 4 7 8)",
                "3 + 7 = 10 (left: 7 10 8)\n10 - 7 = 3 (left: 3 8)",
                "",
                "7 - 3 = 4 (left: 4 7 8)",
                "3 + 7 = 10 (left: 7 10 8)\n10 - 7 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5 8)",
                "7 - 3 = 4 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)",
                "7 - 3 = 4 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)",
                "3 + 7 = 10 (left: 7 10 8)\n10 - 7 = 3 (left: 3 8)\n3 - 8 = -5 (left: -5 8)"
            ]
        },
        "step_5": {
            "steps": [
                "3 + 7 = 10 (left: 7 10 8)\n10 - 7 = 3 (left: 3 8)\n3 + 8 = 11 (left: 8 11)\n8 + 11 = 19 (left: 19)",
                "3 + 7 = 10 (left: 7 10 8)\n10 - 7 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5 8)\n8 / 5 = 1.6 (left: 1.6)",
                "7 - 3 = 4 (left: 4 7 8)\n8 / 4 = 2 (left: 2 8)",
                "3 + 7 = 10 (left: 7 10 8)\n10 - 7 = 3 (left: 3 8)\n3 + 8 = 11 (left: 8 11)",
                "7 / 3 = 2.33 (left: 2.33 7 8)",
                "7 - 3 = 4 (left: 4 7 8)\n8 + 7 = 15 (left: 4 15)",
                "3 + 7 = 10 (left: 7 10 8)\n10 - 7 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5 8)\n8 - 5 = 3 (left: 3)",
                "7 - 3 = 4 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)",
                "7 - 3 = 4 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)\n8 / 3 = 2.67 (left: 2.67 8)",
                "3 + 7 = 10 (left: 7 10 8)\n10 - 7 = 3 (left: 3 8)\n3 - 8 = -5 (left: -5 8)\n-5 + 8 = 3 (left: 3)"
            ],
            "values": [
                0.002,
                0.003,
                1.001,
                0.003,
                2.001,
                1.002,
                0.002,
                20.0,
                3.0,
                0.001
            ],
            "resampled": [
                "0 <- 2.5",
                "1 <- 2.6",
                "2 <- 2.8",
                "3 <- 2.6",
                "4 <- 5.7",
                "5 <- 4.9",
                "6 <- 4.8",
                "7 <- 2.8",
                "8 <- 4.8",
                "9 <- 2.7"
            ],
            "resampled_steps": [
                "3 + 7 = 10 (left: 7 10 8)\n10 - 7 = 3 (left: 3 8)",
                "7 - 3 = 4 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)",
                "3 + 7 = 10 (left: 7 10 8)\n10 - 7 = 3 (left: 3 8)",
                "7 - 3 = 4 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)",
                "7 - 3 = 4 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)",
                "3 + 7 = 10 (left: 7 10 8)\n10 - 7 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5 8)",
                "3 + 7 = 10 (left: 7 10 8)\n10 - 7 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5 8)",
                "3 + 7 = 10 (left: 7 10 8)\n10 - 7 = 3 (left: 3 8)",
                "3 + 7 = 10 (left: 7 10 8)\n10 - 7 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5 8)",
                "3 + 7 = 10 (left: 7 10 8)\n7 * 10 = 70 (left: 8 70)"
            ]
        },
        "step_6": {
            "steps": [
                "3 + 7 = 10 (left: 7 10 8)\n10 - 7 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)",
                "7 - 3 = 4 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)\n8 / 3 = 2.67 (left: 2.67)",
                "3 + 7 = 10 (left: 7 10 8)\n10 - 7 = 3 (left: 3 8)\n3 * 8 = 24 (left: 8 24)",
                "7 - 3 = 4 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)\n3 + 8 = 11 (left: 8 11)",
                "7 - 3 = 4 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (7 - 3) * (7 - 4) * 8 = 24",
                "3 + 7 = 10 (left: 7 10 8)\n10 - 7 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5 8)\n5 + 8 = 13 (left: 13)",
                "3 + 7 = 10 (left: 7 10 8)\n10 - 7 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5 8)\n5 + 8 = 13 (left: 8 13)",
                "3 + 7 = 10 (left: 7 10 8)\n10 - 7 = 3 (left: 3 8)\n3 * 8 = 24 (left: 8 24)",
                "3 + 7 = 10 (left: 7 10 8)\n10 - 7 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5 8)\n5 * 8 = 40 (left: 40)",
                "3 + 7 = 10 (left: 7 10 8)\n7 * 10 = 70 (left: 8 70)\n70 / 8 = 8.75 (left: 8.75)"
            ],
            "values": [
                0.002,
                0.003,
                1.002,
                0.002,
                0.003,
                0.002,
                1.0,
                0.002,
                20.001,
                0.002
            ],
            "resampled": [
                "0 <- 1.9",
                "1 <- 1.2",
                "2 <- 4.9",
                "3 <- 2.1",
                "4 <- 4.8",
                "5 <- 1.2",
                "6 <- 2.6",
                "7 <- 4.7",
                "8 <- 2.6",
                "9 <- 2.5"
            ],
            "resampled_steps": [
                "3 + 7 = 10 (left: 7 10 8)",
                "7 - 3 = 4 (left: 4 7 8)",
                "3 + 7 = 10 (left: 7 10 8)\n10 - 7 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5 8)",
                "3 + 7 = 10 (left: 7 10 8)",
                "3 + 7 = 10 (left: 7 10 8)\n10 - 7 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5 8)",
                "7 - 3 = 4 (left: 4 7 8)",
                "7 - 3 = 4 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)",
                "3 + 7 = 10 (left: 7 10 8)\n10 - 7 = 3 (left: 3 8)\n3 * 8 = 24 (left: 8 24)",
                "7 - 3 = 4 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)",
                "3 + 7 = 10 (left: 7 10 8)\n10 - 7 = 3 (left: 3 8)"
            ]
        },
        "step_7": {
            "steps": [
                "3 + 7 = 10 (left: 7 10 8)\n10 - 7 = 3 (left: 3 8)",
                "7 - 3 = 4 (left: 4 7 8)\n7 - 8 = -1 (left: -1 8)",
                "3 + 7 = 10 (left: 7 10 8)\n10 - 7 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5 8)\n8 / 5 = 1.6 (left: 1.6)",
                "3 + 7 = 10 (left: 7 10 8)\n10 - 7 = 3 (left: 3 8)",
                "3 + 7 = 10 (left: 7 10 8)\n10 - 7 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5 8)\n5 * 8 = 40 (left: 40)",
                "7 - 3 = 4 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)",
                "7 - 3 = 4 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)\n8 / 3 = 2.6667 (left: 2.6667 8)",
                "3 + 7 = 10 (left: 7 10 8)\n10 - 7 = 3 (left: 3 8)\n3 * 8 = 24 (left: 8 24)\n8 * 3 = 24 (left: 24)",
                "7 - 3 = 4 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)\n3 * 8 = 24 (left: 8 24)",
                "3 + 7 = 10 (left: 7 10 8)\n10 - 7 = 3 (left: 3 8)\n8 / 3 = 2.67 (left: 2.67 8)"
            ],
            "values": [
                60.0,
                0.001,
                0.002,
                60.0,
                0.003,
                60.0,
                2.001,
                40.0,
                1.002,
                3.0
            ],
            "resampled": [
                "0 <- 7.7",
                "1 <- 7.3",
                "2 <- 7.7",
                "3 <- 7.0",
                "4 <- 7.3",
                "5 <- 7.0",
                "6 <- 7.7",
                "7 <- 7.3",
                "8 <- 7.7",
                "9 <- 5.7"
            ],
            "resampled_steps": [
                "3 + 7 = 10 (left: 7 10 8)\n10 - 7 = 3 (left: 3 8)\n3 * 8 = 24 (left: 8 24)\n8 * 3 = 24 (left: 24)",
                "3 + 7 = 10 (left: 7 10 8)\n10 - 7 = 3 (left: 3 8)",
                "3 + 7 = 10 (left: 7 10 8)\n10 - 7 = 3 (left: 3 8)\n3 * 8 = 24 (left: 8 24)\n8 * 3 = 24 (left: 24)",
                "3 + 7 = 10 (left: 7 10 8)\n10 - 7 = 3 (left: 3 8)",
                "3 + 7 = 10 (left: 7 10 8)\n10 - 7 = 3 (left: 3 8)",
                "3 + 7 = 10 (left: 7 10 8)\n10 - 7 = 3 (left: 3 8)",
                "3 + 7 = 10 (left: 7 10 8)\n10 - 7 = 3 (left: 3 8)\n3 * 8 = 24 (left: 8 24)\n8 * 3 = 24 (left: 24)",
                "3 + 7 = 10 (left: 7 10 8)\n10 - 7 = 3 (left: 3 8)",
                "3 + 7 = 10 (left: 7 10 8)\n10 - 7 = 3 (left: 3 8)\n3 * 8 = 24 (left: 8 24)\n8 * 3 = 24 (left: 24)",
                "7 - 3 = 4 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)"
            ]
        },
        "step_8": {
            "steps": [
                "3 + 7 = 10 (left: 7 10 8)\n10 - 7 = 3 (left: 3 8)\n3 * 8 = 24 (left: 8 24)\n8 * 3 = 24 (left: 24)\nAnswer: (3 + 7) * (7 - 10) = 24",
                "3 + 7 = 10 (left: 7 10 8)\n10 - 7 = 3 (left: 3 8)\n3 * 8 = 24 (left: 8 24)",
                "3 + 7 = 10 (left: 7 10 8)\n10 - 7 = 3 (left: 3 8)\n3 * 8 = 24 (left: 8 24)\n8 * 3 = 24 (left: 24)\nAnswer: ((3 + 7) - 7) * 8 = 24",
                "3 + 7 = 10 (left: 7 10 8)\n10 - 7 = 3 (left: 3 8)\n8 / 3 = 2.6667 (left: 2.6667 8)",
                "3 + 7 = 10 (left: 7 10 8)\n10 - 7 = 3 (left: 3 8)\n8 - 3 = 5 (left: 3 5)",
                "3 + 7 = 10 (left: 7 10 8)\n10 - 7 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)",
                "3 + 7 = 10 (left: 7 10 8)\n10 - 7 = 3 (left: 3 8)\n3 * 8 = 24 (left: 8 24)\n8 * 3 = 24 (left: 24)\nAnswer: (7 + 3) * (7 - 8) = 24",
                "3 + 7 = 10 (left: 7 10 8)\n10 - 7 = 3 (left: 3 8)\nInput: 5 10",
                "3 + 7 = 10 (left: 7 10 8)\n10 - 7 = 3 (left: 3 8)\n3 * 8 = 24 (left: 8 24)\n8 * 3 = 24 (left: 24)\nAnswer: (3 + 7) * (7 - 8) = 24",
                "7 - 3 = 4 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (7 - 3) * (7 - 4) * 8 = 24"
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 1.518514
    },
    "24": {
        "input": "1 1 13 13",
        "step_1": {
            "steps": [
                "1 + 13 = 14 (left: 1 13 14)",
                "13 + 1 = 14 (left: 1 14 13)",
                "1 * 13 = 13 (left: 1 12 13)",
                "13 - 1 = 12 (left: 1 12 13)",
                "13 + 1 = 14 (left: 1 13 14)",
                "13 - 1 = 12 (left: 1 13 12)",
                "1 + 1 = 2 (left: 2 13 13)",
                "13 - 1 = 12 (left: 1 12 13)",
                "1 + 1 = 2 (left: 2 13 13)",
                "13 - 1 = 12 (left: 1 12 13)"
            ],
            "values": [
                0.003,
                1.002,
                1.002,
                1.002,
                0.003,
                0.003,
                21.001,
                1.002,
                1.002,
                0.003
            ],
            "resampled": [
                "0 <- 1.6",
                "1 <- INIT",
                "2 <- 1.6",
                "3 <- INIT",
                "4 <- INIT",
                "5 <- INIT",
                "6 <- INIT",
                "7 <- INIT",
                "8 <- INIT",
                "9 <- 1.6"
            ],
            "resampled_steps": [
                "1 + 1 = 2 (left: 2 13 13)",
                "",
                "1 + 1 = 2 (left: 2 13 13)",
                "",
                "",
                "",
                "",
                "",
                "",
                "1 + 1 = 2 (left: 2 13 13)"
            ]
        },
        "step_2": {
            "steps": [
                "1 + 1 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)",
                "1 + 1 = 2 (left: 2 13 13)",
                "1 + 1 = 2 (left: 2 13 13)\n13 / 2 = 6.5 (left: 6.5 13)",
                "13 - 1 = 12 (left: 1 12 13)",
                "13 + 1 = 14 (left: 1 13 14)",
                "13 * 1 = 13 (left: 1 13 13)",
                "13 + 1 = 14 (left: 1 13 14)",
                "13 - 1 = 12 (left: 1 12 13)",
                "13 / 1 = 13 (left: 1 13 13)",
                "1 + 1 = 2 (left: 2 13 13)\n2 * 13 = 26 (left: 13 26)"
            ],
            "values": [
                60.0,
                1.002,
                41.0,
                0.003,
                1.002,
                2.001,
                0.003,
                0.003,
                40.001,
                0.003
            ],
            "resampled": [
                "0 <- 2.1",
                "1 <- 2.8",
                "2 <- 2.0",
                "3 <- 2.0",
                "4 <- INIT",
                "5 <- 2.2",
                "6 <- 1.6",
                "7 <- 2.8",
                "8 <- 2.0",
                "9 <- 1.6"
            ],
            "resampled_steps": [
                "1 + 1 = 2 (left: 2 13 13)",
                "13 / 1 = 13 (left: 1 13 13)",
                "1 + 1 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)",
                "1 + 1 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)",
                "",
                "1 + 1 = 2 (left: 2 13 13)\n13 / 2 = 6.5 (left: 6.5 13)",
                "1 + 1 = 2 (left: 2 13 13)",
                "13 / 1 = 13 (left: 1 13 13)",
                "1 + 1 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)",
                "1 + 1 = 2 (left: 2 13 13)"
            ]
        },
        "step_3": {
            "steps": [
                "1 + 1 = 2 (left: 2 13 13)\n13 / 2 = 6.5 (left: 6.5 13)",
                "13 / 1 = 13 (left: 1 13 13)\n13 + 1 = 14 (left: 13 14)",
                "1 + 1 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 * 13 = 143 (left: 143)",
                "1 + 1 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n13 / 11 = 1.18181818182 (left: 1.18181818182)",
                "1 * 1 = 1 (left: 1 13 13)",
                "1 + 1 = 2 (left: 2 13 13)\n13 / 2 = 6.5 (left: 6.5 13)\n6.5 + 13 = 19.5 (left: 19.5)",
                "1 + 1 = 2 (left: 2 13 13)\n2 + 13 = 15 (left: 13 15)",
                "13 / 1 = 13 (left: 1 13 13)\n1 / 13 = 0.0769 (left: 0.0769 13)",
                "1 + 1 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n13 - 11 = 2 (left: 2)",
                "1 + 1 = 2 (left: 2 13 13)\n13 - 13 = 0 (left: 2 0)"
            ],
            "values": [
                20.001,
                0.003,
                0.003,
                0.001,
                20.002,
                0.001,
                0.003,
                3.0,
                0.001,
                2.001
            ],
            "resampled": [
                "0 <- 2.0",
                "1 <- 2.0",
                "2 <- 2.2",
                "3 <- 2.8",
                "4 <- 2.8",
                "5 <- 3.4",
                "6 <- 1.6",
                "7 <- 2.0",
                "8 <- INIT",
                "9 <- 2.2"
            ],
            "resampled_steps": [
                "1 + 1 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)",
                "1 + 1 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)",
                "1 + 1 = 2 (left: 2 13 13)\n13 / 2 = 6.5 (left: 6.5 13)",
                "13 / 1 = 13 (left: 1 13 13)",
                "13 / 1 = 13 (left: 1 13 13)",
                "1 * 1 = 1 (left: 1 13 13)",
                "1 + 1 = 2 (left: 2 13 13)",
                "1 + 1 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)",
                "",
                "1 + 1 = 2 (left: 2 13 13)\n13 / 2 = 6.5 (left: 6.5 13)"
            ]
        },
        "step_4": {
            "steps": [
                "1 + 1 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)",
                "1 + 1 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 - 13 = -2 (left: -2)",
                "1 + 1 = 2 (left: 2 13 13)\n13 / 2 = 6.5 (left: 6.5 13)\n6.5 + 13 = 19.5 (left: 6.5 19.5)",
                "13 / 1 = 13 (left: 1 13 13)\n13 - 1 = 12 (left: 1 12)",
                "13 / 1 = 13 (left: 1 13 13)\n1 + 13 = 14 (left: 13 14)",
                "1 * 1 = 1 (left: 1 13 13)\n1 + 13 = 14 (left: 13 14)",
                "1 + 1 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)",
                "1 + 1 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 * 13 = 143 (left: 13 143)",
                "13 - 1 = 12 (left: 1 12 13)",
                "1 + 1 = 2 (left: 2 13 13)\n13 / 2 = 6.5 (left: 6.5 13)\n6.5 * 13 = 84.5 (left: 84.5)"
            ],
            "values": [
                40.0,
                0.003,
                2.001,
                1.002,
                0.003,
                0.003,
                60.0,
                0.003,
                0.003,
                0.002
            ],
            "resampled": [
                "0 <- 2.2",
                "1 <- 4.6",
                "2 <- 4.0",
                "3 <- 1.6",
                "4 <- 4.0",
                "5 <- 4.6",
                "6 <- 4.0",
                "7 <- 4.6",
                "8 <- 2.2",
                "9 <- INIT"
            ],
            "resampled_steps": [
                "1 + 1 = 2 (left: 2 13 13)\n13 / 2 = 6.5 (left: 6.5 13)",
                "1 + 1 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)",
                "1 + 1 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)",
                "1 + 1 = 2 (left: 2 13 13)",
                "1 + 1 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)",
                "1 + 1 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)",
                "1 + 1 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)",
                "1 + 1 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)",
                "1 + 1 = 2 (left: 2 13 13)\n13 / 2 = 6.5 (left: 6.5 13)",
                ""
            ]
        },
        "step_5": {
            "steps": [
                "1 + 1 = 2 (left: 2 13 13)\n13 / 2 = 6.5 (left: 6.5 13)\n13 / 6.5 = 2 (left: 2)",
                "1 + 1 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 - 13 = -2 (left: -2)",
                "1 + 1 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (1 + 1) + (13 - 2) + 13 = 24",
                "1 + 1 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)",
                "1 + 1 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (1 + 1) + (13 + 13) = 24",
                "1 + 1 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)",
                "1 + 1 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (1 + 1) + (13 - 2) + 13 = 24",
                "1 + 1 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 * 13 = 143 (left: 143)",
                "1 + 1 = 2 (left: 2 13 13)\n13 / 2 = 6.5 (left: 6.5 13)\n13 - 6.5 = 6.5 (left: 6.5 13)",
                "13 - 1 = 12 (left: 1 12 13)"
            ],
            "values": [
                0.0,
                0.001,
                60.0,
                60.0,
                20.002,
                60.0,
                40.001,
                0.003,
                22.0,
                0.003
            ],
            "resampled": [
                "0 <- 5.3",
                "1 <- 5.6",
                "2 <- 5.3",
                "3 <- 2.2",
                "4 <- 5.3",
                "5 <- 1.6",
                "6 <- 5.6",
                "7 <- 5.6",
                "8 <- 5.6",
                "9 <- 2.0"
            ],
            "resampled_steps": [
                "1 + 1 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)",
                "1 + 1 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (1 + 1) + (13 - 2) + 13 = 24",
                "1 + 1 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)",
                "1 + 1 = 2 (left: 2 13 13)\n13 / 2 = 6.5 (left: 6.5 13)",
                "1 + 1 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)",
                "1 + 1 = 2 (left: 2 13 13)",
                "1 + 1 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (1 + 1) + (13 - 2) + 13 = 24",
                "1 + 1 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (1 + 1) + (13 - 2) + 13 = 24",
                "1 + 1 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (1 + 1) + (13 - 2) + 13 = 24",
                "1 + 1 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)"
            ]
        },
        "step_6": {
            "steps": [
                "1 + 1 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n13 - 11 = 2 (left: 2)",
                "1 + 1 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (1 + 1) + (13 - 2) + 13 = 24\nInput: 3 3 7 8\nSteps:\n3 * 8 = 24 (left: 3 7 24)\n7 - 3 = 4 (left: 4 24)\n4 * 24 = 96 (left: 96)\nAnswer: (3 * 8) - (7 - 3) = 24",
                "1 + 1 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 * 13 = 143 (left: 143) ",
                "1 + 1 = 2 (left: 2 13 13)\n13 / 2 = 6.5 (left: 6.5 13)\n13 / 6.5 = 2 (left: 6.5 2)",
                "1 + 1 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 * 13 = 143 (left: 143)",
                "1 + 1 = 2 (left: 2 13 13)\n2 + 13 = 15 (left: 13 15)",
                "1 + 1 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (1 + 1) + (13 - 2) + 13 = 24\nInput: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n9 * 1 = 9 (left: 9)\n9 * 9 = 81 (left: 81)\n81 / 3 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer: (((3 * 3) - 8) * 9) - 3 = 24",
                "1 + 1 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (1 + 1) + (13 - 2) + 13 = 24\nInput: 3 3 7 7\nSteps:\n3 + 7 = 10 (left: 3 7 10)\n7 - 3 = 4 (left: 4 10)\n4 * 10 = 40 (left: 40)\n40 / 7 = 24 (left: 24)\nAnswer: ((3 + 7) * 10) / 7 = 24",
                "1 + 1 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (1 + 1) + (13 - 2) + 13 = 24\nInput: 2 3 3 4\nSteps:\n2 * 3 = 6 (left: 3 4 6)\n6 + 3 = 9 (left: 9 4)\n9 * 4 = 36 (left: 36)\nAnswer: (2 * 3) + (3 + 4) = 24",
                "1 + 1 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 * 13 = 143 (left: 143)"
            ],
            "values": [
                0.002,
                40.0,
                0.003,
                1.001,
                0.001,
                1.002,
                40.0,
                20.0,
                60.0,
                0.002
            ],
            "resampled": [
                "0 <- 6.8",
                "1 <- 4.6",
                "2 <- 5.2",
                "3 <- 6.1",
                "4 <- 2.0",
                "5 <- 6.6",
                "6 <- 2.2",
                "7 <- 5.5",
                "8 <- 4.0",
                "9 <- 5.5"
            ],
            "resampled_steps": [
                "1 + 1 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (1 + 1) + (13 - 2) + 13 = 24\nInput: 2 3 3 4\nSteps:\n2 * 3 = 6 (left: 3 4 6)\n6 + 3 = 9 (left: 9 4)\n9 * 4 = 36 (left: 36)\nAnswer: (2 * 3) + (3 + 4) = 24",
                "1 + 1 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)",
                "1 + 1 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (1 + 1) + (13 - 2) + 13 = 24",
                "1 + 1 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (1 + 1) + (13 - 2) + 13 = 24\nInput: 3 3 7 8\nSteps:\n3 * 8 = 24 (left: 3 7 24)\n7 - 3 = 4 (left: 4 24)\n4 * 24 = 96 (left: 96)\nAnswer: (3 * 8) - (7 - 3) = 24",
                "1 + 1 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)",
                "1 + 1 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (1 + 1) + (13 - 2) + 13 = 24\nInput: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n9 * 1 = 9 (left: 9)\n9 * 9 = 81 (left: 81)\n81 / 3 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer: (((3 * 3) - 8) * 9) - 3 = 24",
                "1 + 1 = 2 (left: 2 13 13)\n13 / 2 = 6.5 (left: 6.5 13)",
                "1 + 1 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)",
                "1 + 1 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)",
                "1 + 1 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)"
            ]
        },
        "step_7": {
            "steps": [
                "1 + 1 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (1 + 1) + (13 - 2) + 13 = 24\nInput: 2 3 3 4\nSteps:\n2 * 3 = 6 (left: 3 4 6)\n6 + 3 = 9 (left: 9 4)\n9 * 4 = 36 (left: 36)\nAnswer: (2 * 3) + (3 + 4) = 24\n\nInput: 1 3 5 8\n\n3 * 8 = 24 (left: 1 5 24)\n5 - 1 = 4 (left: 4 24)\n24 / 4 = 6 (left: 6)\nAnswer: (3 * 8) / (5 - 1) = 24",
                "1 + 1 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)",
                "1 + 1 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (1 + 1) + (13 - 2) + 13 = 24\nInput: 3 3 3 8\nSteps:\n3 * 3 = 9 (left: 9 3 8)\n9 - 3 = 6 (left: 6 8)\n6 * 8 = 48 (left: 48)\nAnswer: (3 * 3) - (8 - 6) = 24",
                "1 + 1 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (1 + 1) + (13 - 2) + 13 = 24\nInput: 3 3 7 8\nSteps:\n3 * 8 = 24 (left: 3 7 24)\n7 - 3 = 4 (left: 4 24)\n4 * 24 = 96 (left: 96)\nAnswer: (3 * 8) - (7 - 3) = 24\nInput: 3 6 7 8\nSteps:\n6 * 8 = 48 (left: 3 7 48)\n7 - 3 = 4 (left: 4 48)\n48 / 4 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((3 * 6) + (7 - 3)) * 2 = 24",
                "1 + 1 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)",
                "1 + 1 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (1 + 1) + (13 - 2) + 13 = 24\nInput: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n9 * 1 = 9 (left: 9)\n9 * 9 = 81 (left: 81)\n81 / 3 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer: (((3 * 3) - 8) * 9) - 3 = 24\nInput: 1 3 7 7\nSteps:\n7 - 3 = 4 (left: 1 4 7)\n7 - 4 = 3 (left: 1 3)\n3 * 7 = 21 (left: 1 21)\n21 + 1 = 22 (left: 22)\n22 + 2 = 24 (left: 24)\nAnswer: (((7 - 3) - 4) * 7) + 1 + 2 = 24",
                "1 + 1 = 2 (left: 2 13 13)\n13 / 2 = 6.5 (left: 6.5 13)\n13 - 6.5 = 6.5 (left: 6.5 13)",
                "1 + 1 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (1 + 1) + (13 - 2) = 24",
                "1 + 1 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: ((1 + 1) - 13) + 13 = 24",
                "1 + 1 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (1 + 1) + (13 - 2) + 13 = 24"
            ],
            "values": [
                60.0,
                60.0,
                20.0,
                60.0,
                40.0,
                40.0,
                60.0,
                0.003,
                40.001,
                0.003
            ],
            "resampled": [
                "0 <- 7.3",
                "1 <- 7.4",
                "2 <- 7.6",
                "3 <- 7.3",
                "4 <- 7.2",
                "5 <- 7.5",
                "6 <- 7.4",
                "7 <- 7.8",
                "8 <- 7.3",
                "9 <- 6.6"
            ],
            "resampled_steps": [
                "1 + 1 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (1 + 1) + (13 - 2) + 13 = 24\nInput: 3 3 7 8\nSteps:\n3 * 8 = 24 (left: 3 7 24)\n7 - 3 = 4 (left: 4 24)\n4 * 24 = 96 (left: 96)\nAnswer: (3 * 8) - (7 - 3) = 24\nInput: 3 6 7 8\nSteps:\n6 * 8 = 48 (left: 3 7 48)\n7 - 3 = 4 (left: 4 48)\n48 / 4 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((3 * 6) + (7 - 3)) * 2 = 24",
                "1 + 1 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)",
                "1 + 1 = 2 (left: 2 13 13)\n13 / 2 = 6.5 (left: 6.5 13)\n13 - 6.5 = 6.5 (left: 6.5 13)",
                "1 + 1 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (1 + 1) + (13 - 2) + 13 = 24\nInput: 3 3 7 8\nSteps:\n3 * 8 = 24 (left: 3 7 24)\n7 - 3 = 4 (left: 4 24)\n4 * 24 = 96 (left: 96)\nAnswer: (3 * 8) - (7 - 3) = 24\nInput: 3 6 7 8\nSteps:\n6 * 8 = 48 (left: 3 7 48)\n7 - 3 = 4 (left: 4 48)\n48 / 4 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((3 * 6) + (7 - 3)) * 2 = 24",
                "1 + 1 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (1 + 1) + (13 - 2) + 13 = 24\nInput: 3 3 3 8\nSteps:\n3 * 3 = 9 (left: 9 3 8)\n9 - 3 = 6 (left: 6 8)\n6 * 8 = 48 (left: 48)\nAnswer: (3 * 3) - (8 - 6) = 24",
                "1 + 1 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (1 + 1) + (13 - 2) + 13 = 24\nInput: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n9 * 1 = 9 (left: 9)\n9 * 9 = 81 (left: 81)\n81 / 3 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer: (((3 * 3) - 8) * 9) - 3 = 24\nInput: 1 3 7 7\nSteps:\n7 - 3 = 4 (left: 1 4 7)\n7 - 4 = 3 (left: 1 3)\n3 * 7 = 21 (left: 1 21)\n21 + 1 = 22 (left: 22)\n22 + 2 = 24 (left: 24)\nAnswer: (((7 - 3) - 4) * 7) + 1 + 2 = 24",
                "1 + 1 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)",
                "1 + 1 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: ((1 + 1) - 13) + 13 = 24",
                "1 + 1 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (1 + 1) + (13 - 2) + 13 = 24\nInput: 3 3 7 8\nSteps:\n3 * 8 = 24 (left: 3 7 24)\n7 - 3 = 4 (left: 4 24)\n4 * 24 = 96 (left: 96)\nAnswer: (3 * 8) - (7 - 3) = 24\nInput: 3 6 7 8\nSteps:\n6 * 8 = 48 (left: 3 7 48)\n7 - 3 = 4 (left: 4 48)\n48 / 4 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((3 * 6) + (7 - 3)) * 2 = 24",
                "1 + 1 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (1 + 1) + (13 - 2) + 13 = 24\nInput: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n9 * 1 = 9 (left: 9)\n9 * 9 = 81 (left: 81)\n81 / 3 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer: (((3 * 3) - 8) * 9) - 3 = 24"
            ]
        },
        "step_8": {
            "steps": [
                "1 + 1 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (1 + 1) + (13 - 2) + 13 = 24\nInput: 3 3 7 8\nSteps:\n3 * 8 = 24 (left: 3 7 24)\n7 - 3 = 4 (left: 4 24)\n4 * 24 = 96 (left: 96)\nAnswer: (3 * 8) - (7 - 3) = 24\nInput: 3 6 7 8\nSteps:\n6 * 8 = 48 (left: 3 7 48)\n7 - 3 = 4 (left: 4 48)\n48 / 4 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((3 * 6) + (7 - 3)) * 2 = 24\nInput: 2 3 4 6\nSteps:\n3 * 4 = 12 (left: 2 6 12)\n6 * 2 = 12 (left: 12 12)\n12 * 2 = 24 (left: 24)\nAnswer: (3 * 4) * (6 * 2) = 24",
                "1 + 1 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (1 + 1) + (13 - 2) + 13 = 24",
                "1 + 1 = 2 (left: 2 13 13)\n13 / 2 = 6.5 (left: 6.5 13)\n13 - 6.5 = 6.5 (left: 6.5 13)\n13 + 6.5 = 19.5 (left: 6.5 19.5)",
                "1 + 1 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (1 + 1) + (13 - 2) + 13 = 24\nInput: 3 3 7 8\nSteps:\n3 * 8 = 24 (left: 3 7 24)\n7 - 3 = 4 (left: 4 24)\n4 * 24 = 96 (left: 96)\nAnswer: (3 * 8) - (7 - 3) = 24\nInput: 3 6 7 8\nSteps:\n6 * 8 = 48 (left: 3 7 48)\n7 - 3 = 4 (left: 4 48)\n48 / 4 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((3 * 6) + (7 - 3)) * 2 = 24\nInput: 2 3 4 6\nSteps:\n3 * 6 = 18 (left: 2 4 18)\n4 + 2 = 6 (left: 6 18)\n18 / 6 = 3 (left: 3)\n3 * 8 = 24 (left: 24)\nAnswer: ((2 + 4) * 6) / 3 * 8 = 24",
                "1 + 1 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (1 + 1) + (13 - 2) + 13 = 24\nInput: 3 3 3 8\nSteps:\n3 * 3 = 9 (left: 9 3 8)\n9 - 3 = 6 (left: 6 8)\n6 * 8 = 48 (left: 48)\nAnswer: (3 * 3) - (8 - 6) = 24\nInput: 2 3 3 4\nSteps:\n3 * 3 = 9 (left: 2 9 4)\n9 - 2 = 7 (left: 7 4)\n7 * 4 = 28 (left: 28)\nAnswer: (3 * 3) - (4 - 2) = 24",
                "1 + 1 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (1 + 1) + (13 - 2) + 13 = 24\nInput: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n9 * 1 = 9 (left: 9)\n9 * 9 = 81 (left: 81)\n81 / 3 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer: (((3 * 3) - 8) * 9) - 3 = 24\nInput: 1 3 7 7\nSteps:\n7 - 3 = 4 (left: 1 4 7)\n7 - 4 = 3 (left: 1 3)\n3 * 7 = 21 (left: 1 21)\n21 + 1 = 22 (left: 22)\n22 + 2 = 24 (left: 24)\nAnswer: (((7 - 3) - 4) * 7) + 1 + 2 = 24\nInput: 2 3 4 8\nSteps:\n4 * 3 = 12 (left: 2 8 12)\n12 / 2 = 6 (left: 6 8)\n8 - 6 = 2 (left: 2 6)\n2 * 6 = 12 (left: 12)\nAnswer: ((4 * 3) / 2) * (8 - 6) = 24",
                "1 + 1 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: ((1 + 1) + 13) + 13 = 24",
                "1 + 1 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: ((1 + 1) - 13) + 13 = 24\nInput: 3 3 3 8\n3 * 3 = 9 (left: 9 3 8)\n9 - 3 = 6 (left: 6 8)\n6 * 8 = 48 (left: 48)\nAnswer: (3 * 3) - (8 - 3) = 24",
                "1 + 1 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (1 + 1) + (13 - 2) + 13 = 24\nInput: 3 3 7 8\nSteps:\n3 * 8 = 24 (left: 3 7 24)\n7 - 3 = 4 (left: 4 24)\n4 * 24 = 96 (left: 96)\nAnswer: (3 * 8) - (7 - 3) = 24\nInput: 3 6 7 8\nSteps:\n6 * 8 = 48 (left: 3 7 48)\n7 - 3 = 4 (left: 4 48)\n48 / 4 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((3 * 6) + (7 - 3)) * 2 = 24\nInput: 2 3 3 4\nSteps:\n3 + 3 = 6 (left: 2 4 6)\n6 * 4 = 24 (left: 24)\nAnswer: (2 + (3 + 3)) * 4 = 24",
                "1 + 1 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (1 + 1) + (13 - 2) + 13 = 24\nInput: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n9 * 1 = 9 (left: 9)\n9 * 9 = 81 (left: 81)\n81 / 3 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer: (((3 * 3) - 8) * 9) - 3 = 24\nInput: 2 3 3 5\nSteps:\n3 + 5 = 8 (left: 2 3 8)\n3 * 8 = 24 (left: 2 24)\n2 * 24 = 48 (left: 48)\n48 / 2 = 24 (left: 24)\nAnswer: ((3 + 5) * 8) / 2 = 24"
            ],
            "values": [
                40.0,
                20.002,
                21.001,
                60.0,
                20.0,
                40.0,
                60.0,
                40.0,
                60.0,
                40.0
            ],
            "resampled": [
                "0 <- 5.6",
                "1 <- 6.8",
                "2 <- 7.1",
                "3 <- 6.6",
                "4 <- 7.8",
                "5 <- 8.8",
                "6 <- 7.0",
                "7 <- 8.2",
                "8 <- 5.3",
                "9 <- 2.0"
            ],
            "resampled_steps": [
                "1 + 1 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (1 + 1) + (13 - 2) + 13 = 24",
                "1 + 1 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (1 + 1) + (13 - 2) + 13 = 24\nInput: 2 3 3 4\nSteps:\n2 * 3 = 6 (left: 3 4 6)\n6 + 3 = 9 (left: 9 4)\n9 * 4 = 36 (left: 36)\nAnswer: (2 * 3) + (3 + 4) = 24",
                "1 + 1 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)",
                "1 + 1 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (1 + 1) + (13 - 2) + 13 = 24\nInput: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n9 * 1 = 9 (left: 9)\n9 * 9 = 81 (left: 81)\n81 / 3 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer: (((3 * 3) - 8) * 9) - 3 = 24",
                "1 + 1 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: ((1 + 1) - 13) + 13 = 24",
                "1 + 1 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (1 + 1) + (13 - 2) + 13 = 24\nInput: 3 3 7 8\nSteps:\n3 * 8 = 24 (left: 3 7 24)\n7 - 3 = 4 (left: 4 24)\n4 * 24 = 96 (left: 96)\nAnswer: (3 * 8) - (7 - 3) = 24\nInput: 3 6 7 8\nSteps:\n6 * 8 = 48 (left: 3 7 48)\n7 - 3 = 4 (left: 4 48)\n48 / 4 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((3 * 6) + (7 - 3)) * 2 = 24\nInput: 2 3 3 4\nSteps:\n3 + 3 = 6 (left: 2 4 6)\n6 * 4 = 24 (left: 24)\nAnswer: (2 + (3 + 3)) * 4 = 24",
                "1 + 1 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (1 + 1) + (13 - 2) + 13 = 24\nInput: 2 3 3 4\nSteps:\n2 * 3 = 6 (left: 3 4 6)\n6 + 3 = 9 (left: 9 4)\n9 * 4 = 36 (left: 36)\nAnswer: (2 * 3) + (3 + 4) = 24\n\nInput: 1 3 5 8\n\n3 * 8 = 24 (left: 1 5 24)\n5 - 1 = 4 (left: 4 24)\n24 / 4 = 6 (left: 6)\nAnswer: (3 * 8) / (5 - 1) = 24",
                "1 + 1 = 2 (left: 2 13 13)\n13 / 2 = 6.5 (left: 6.5 13)\n13 - 6.5 = 6.5 (left: 6.5 13)\n13 + 6.5 = 19.5 (left: 6.5 19.5)",
                "1 + 1 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)",
                "1 + 1 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)"
            ]
        },
        "step_9": {
            "steps": [
                "1 + 1 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (1 + 1) + (13 - 2) + 13 = 24\nInput: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n9 * 1 = 9 (left: 9)\n9 * 9 = 81 (left: 81)\nAnswer: (3 * 3) * (8 - 9 + 9) = 24",
                "1 + 1 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (1 + 1) + (13 - 2) + 13 = 24\nInput: 2 3 3 4\nSteps:\n2 * 3 = 6 (left: 3 4 6)\n6 + 3 = 9 (left: 9 4)\n9 * 4 = 36 (left: 36)\nAnswer: (2 * 3) + (3 + 4) = 24\nInput: 3 6 6 8\nSteps:\n6 + 8 = 14 (left: 3 6 14)\n14 - 6 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * (6 + 8 - 6) = 24",
                "1 + 1 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: ((1 + 1) + 13) + 13 = 24",
                "1 + 1 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (1 + 1) + (13 - 2) + 13 = 24\nInput: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n9 * 1 = 9 (left: 9)\n9 * 9 = 81 (left: 81)\n81 / 3 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer: (((3 * 3) - 8) * 9) - 3 = 24\nInput: 2 3 4 6\nSteps:\n3 * 6 = 18 (left: 2 4 18)\n18 - 4 = 14 (left: 2 14)\n14 + 2 = 16 (left: 16)\n16 + 4 = 20 (left: 20)\n20 + 6 = 26 (left: 26)\n26 - 6 = 20 (left: 20)\n20 - 4 = 16 (left: 16)\n16 + 4 = 20 (left: 20)\n20 + 6 = 26 (left: 26)\n26 - 6 = 20 (left: 20)\n20 - 4 = 16 (left: 16)\n16 + 4 = 20 (left: 20)\n20 + 6 = 26 (left: 26)\n26 - 6 = 20 (left: 20)\n20 - 4 = 16 (left: 16)\n16 + 4 = 20 (left: 20)\n20 + 6 = 26 (left: 26)\n26 - 6 = 20 (left: 20)\n20 - 4 = 16 (left: 16)\n16 + 4 = 20 (left: 20)\n20 + 6 = 26 (left: 26)\n26 - 6 = 20 (left: 20)\n20 - 4 = 16 (left: 16)\n16 + 4 = 20 (left: 20)\n20 + 6 = 26 (left: 26)\n26 - 6 = 20 (left: 20)\n20 - 4 = 16 (left: 16)\n16 + 4 = 20 (left: 20)\n20 + 6 = 26 (left: 26)\n26 - 6 = 20 (left: 20)\n20 - 4 = 16 (left: 16)\n16 + 4 = 20 (left: 20)\n20 + 6 = 26 (left: 26)\n26 - 6 = 20 (left: 20)\n20 - 4 = 16 (left: 16)\n16 + 4 = 20 (left: 20)\n20 + 6 = 26 (left: 26)\n26 - 6 = 20 (left: 20)\n20 - 4 = 16 (left: 16)\n16 + 4 = 20 (left: 20)\n20 + 6 = 26 (left: 26)\n26 - 6 = 20 (left: 20)\n20 - 4 = 16 (left: 16)\n16 + 4 = 20 (left: 20)\n20 + 6 = 26 (left: 26)\n26 - 6 = 20 (left: 20)\n20 - 4 = 16 (left: 16)\n16 + 4 = 20 (left: 20)\n20 + 6 = 26 (left: 26)\n26 - 6 = 20 (left: 20)\n20 - 4 = 16 (left: 16)\n16 + 4 = 20 (left: 20)\n20 + 6 = 26 (left: 26)\n26 - 6 = 20 (left: 20)\n20 - 4 = 16 (left: 16)\n16 + 4 = 20 (left: 20)\n20 + 6 = 26 (left: 26)\n26 - 6 = 20 (left: 20)\n20 - 4 = 16 (left: 16)\n16 + 4 = 20 (left: 20)\n20 + 6 = 26 (left: 26)\n26 - 6 = 20 (left: 20)\n20 - 4 = 16 (left: 16)\n16 + 4 = 20 (left: 20)\n20 + 6 = 26 (left: 26)\n26 - 6 = 20 (left: 20)\n20 - 4 = 16 (left: 16)\n16 + 4 = 20 (left: 20)\n20 + 6 = 26 (left: 26)\n26 - 6 = 20 (left: 20)\n20 - 4 = 16 (left: 16)\n16 + 4 = 20 (left: 20)\n20 + 6 = 26 (left: 26)\n26 - 6 = 20 (left: 20)\n20 - 4 = 16 (left: 16)\n16 + 4 = ",
                "1 + 1 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: ((1 + 1) - 13) + 13 = 24\nInput: 3 3 8 9\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n9 * 1 = 9 (left: 9)\nAnswer: (3 * 3) - (8 - 9) = 24",
                "1 + 1 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (1 + 1) + (13 - 2) + 13 = 24\nInput: 3 3 7 8\nSteps:\n3 * 8 = 24 (left: 3 7 24)\n7 - 3 = 4 (left: 4 24)\n4 * 24 = 96 (left: 96)\nAnswer: (3 * 8) - (7 - 3) = 24\nInput: 3 6 7 8\nSteps:\n6 * 8 = 48 (left: 3 7 48)\n7 - 3 = 4 (left: 4 48)\n48 / 4 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((3 * 6) + (7 - 3)) * 2 = 24\nInput: 2 3 3 4\nSteps:\n3 + 3 = 6 (left: 2 4 6)\n6 * 4 = 24 (left: 24)\nAnswer: (2 + (3 + 3)) * 4 = 24\nInput: 2 2 6 6\nSteps:\n2 * 6 = 12 (left: 2 6 12)\n6 / 2 = 3 (left: 3 12)\n12 * 3 = 36 (left: 36)\nAnswer: (2 * 6) * (6 / 2) = 24",
                "1 + 1 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (1 + 1) + (13 - 2) + 13 = 24\nInput: 2 3 3 4\nSteps:\n2 * 3 = 6 (left: 3 4 6)\n6 + 3 = 9 (left: 9 4)\n9 * 4 = 36 (left: 36)\nAnswer: (2 * 3) + (3 + 4) = 24\n\nInput: 1 3 5 8\n\n3 * 8 = 24 (left: 1 5 24)\n5 - 1 = 4 (left: 4 24)\n24 / 4 = 6 (left: 6)\nAnswer: (3 * 8) / (5 - 1) = 24\nInput: 2 2 3 4\nSteps:\n2 * 3 = 6 (left: 2 4 6)\n2 * 4 = 8 (left: 8 6)\n8 * 6 = 48 (left: 48)\nAnswer: (2 * 3) * (2 * 4) = 48",
                "1 + 1 = 2 (left: 2 13 13)\n13 / 2 = 6.5 (left: 6.5 13)\n13 - 6.5 = 6.5 (left: 6.5 13)\n13 + 6.5 = 19.5 (left: 6.5 19.5)\n19.5 / 3 = 6.5 (left: 6.5)",
                "1 + 1 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 / 13 = 0.846 (left: 0.846)",
                "1 + 1 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)"
            ],
            "values": [
                40.0,
                40.0,
                60.0,
                20.0,
                20.0,
                20.0,
                40.0,
                0.003,
                0.003,
                60.0
            ],
            "resampled": [
                "0 <- 8.6",
                "1 <- 7.6",
                "2 <- 8.3",
                "3 <- 8.7",
                "4 <- 8.5",
                "5 <- 2.0",
                "6 <- 7.1",
                "7 <- 8.3",
                "8 <- 6.1",
                "9 <- 3.0"
            ],
            "resampled_steps": [
                "1 + 1 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: ((1 + 1) + 13) + 13 = 24",
                "1 + 1 = 2 (left: 2 13 13)\n13 / 2 = 6.5 (left: 6.5 13)\n13 - 6.5 = 6.5 (left: 6.5 13)",
                "1 + 1 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (1 + 1) + (13 - 2) + 13 = 24\nInput: 3 3 7 8\nSteps:\n3 * 8 = 24 (left: 3 7 24)\n7 - 3 = 4 (left: 4 24)\n4 * 24 = 96 (left: 96)\nAnswer: (3 * 8) - (7 - 3) = 24\nInput: 3 6 7 8\nSteps:\n6 * 8 = 48 (left: 3 7 48)\n7 - 3 = 4 (left: 4 48)\n48 / 4 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((3 * 6) + (7 - 3)) * 2 = 24\nInput: 2 3 4 6\nSteps:\n3 * 6 = 18 (left: 2 4 18)\n4 + 2 = 6 (left: 6 18)\n18 / 6 = 3 (left: 3)\n3 * 8 = 24 (left: 24)\nAnswer: ((2 + 4) * 6) / 3 * 8 = 24",
                "1 + 1 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: ((1 + 1) - 13) + 13 = 24\nInput: 3 3 3 8\n3 * 3 = 9 (left: 9 3 8)\n9 - 3 = 6 (left: 6 8)\n6 * 8 = 48 (left: 48)\nAnswer: (3 * 3) - (8 - 3) = 24",
                "1 + 1 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (1 + 1) + (13 - 2) + 13 = 24\nInput: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n9 * 1 = 9 (left: 9)\n9 * 9 = 81 (left: 81)\n81 / 3 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer: (((3 * 3) - 8) * 9) - 3 = 24\nInput: 1 3 7 7\nSteps:\n7 - 3 = 4 (left: 1 4 7)\n7 - 4 = 3 (left: 1 3)\n3 * 7 = 21 (left: 1 21)\n21 + 1 = 22 (left: 22)\n22 + 2 = 24 (left: 24)\nAnswer: (((7 - 3) - 4) * 7) + 1 + 2 = 24\nInput: 2 3 4 8\nSteps:\n4 * 3 = 12 (left: 2 8 12)\n12 / 2 = 6 (left: 6 8)\n8 - 6 = 2 (left: 2 6)\n2 * 6 = 12 (left: 12)\nAnswer: ((4 * 3) / 2) * (8 - 6) = 24",
                "1 + 1 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)",
                "1 + 1 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)",
                "1 + 1 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (1 + 1) + (13 - 2) + 13 = 24\nInput: 3 3 7 8\nSteps:\n3 * 8 = 24 (left: 3 7 24)\n7 - 3 = 4 (left: 4 24)\n4 * 24 = 96 (left: 96)\nAnswer: (3 * 8) - (7 - 3) = 24\nInput: 3 6 7 8\nSteps:\n6 * 8 = 48 (left: 3 7 48)\n7 - 3 = 4 (left: 4 48)\n48 / 4 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((3 * 6) + (7 - 3)) * 2 = 24\nInput: 2 3 4 6\nSteps:\n3 * 6 = 18 (left: 2 4 18)\n4 + 2 = 6 (left: 6 18)\n18 / 6 = 3 (left: 3)\n3 * 8 = 24 (left: 24)\nAnswer: ((2 + 4) * 6) / 3 * 8 = 24",
                "1 + 1 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (1 + 1) + (13 - 2) + 13 = 24\nInput: 3 3 7 8\nSteps:\n3 * 8 = 24 (left: 3 7 24)\n7 - 3 = 4 (left: 4 24)\n4 * 24 = 96 (left: 96)\nAnswer: (3 * 8) - (7 - 3) = 24",
                "1 + 1 = 2 (left: 2 13 13)\n13 / 2 = 6.5 (left: 6.5 13)"
            ]
        },
        "step_10": {
            "steps": [
                "1 + 1 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: ((1 + 1) + 13) + 13 = 24\n\nInput: 3 3 4 7\nSteps:\n3 + 4 = 7 (left: 3 7 7)\n7 - 3 = 4 (left: 4 7)\n7 * 4 = 28 (left: 28)\n28 - 4 = 24 (left: 24)\nAnswer: ((3 + 4) - 7) * 4 = 24",
                "1 + 1 = 2 (left: 2 13 13)\n13 / 2 = 6.5 (left: 6.5 13)\n13 - 6.5 = 6.5 (left: 6.5 13)\n13 / 6.5 = 2 (left: 6.5 2)",
                "1 + 1 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (1 + 1) + (13 - 2) + 13 = 24\nInput: 3 3 7 8\nSteps:\n3 * 8 = 24 (left: 3 7 24)\n7 - 3 = 4 (left: 4 24)\n4 * 24 = 96 (left: 96)\nAnswer: (3 * 8) - (7 - 3) = 24\nInput: 3 6 7 8\nSteps:\n6 * 8 = 48 (left: 3 7 48)\n7 - 3 = 4 (left: 4 48)\n48 / 4 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((3 * 6) + (7 - 3)) * 2 = 24\nInput: 2 3 4 6\nSteps:\n3 * 6 = 18 (left: 2 4 18)\n4 + 2 = 6 (left: 6 18)\n18 / 6 = 3 (left: 3)\n3 * 8 = 24 (left: 24)\nAnswer: ((2 + 4) * 6) / 3 * 8 = 24\nInput: 1 3 3 8\nSteps:\n3 * 8 = 24 (left: 1 3 24)\n3 - 1 = 2 (left: 2 24)\n24 / 2 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: (3 * 8) / (3 - 1) * 2 = 24",
                "1 + 1 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: ((1 + 1) - 13) + 13 = 24\nInput: 3 3 3 8\n3 * 3 = 9 (left: 9 3 8)\n9 - 3 = 6 (left: 6 8)\n6 * 8 = 48 (left: 48)\nAnswer: (3 * 3) - (8 - 3) = 24\nInput: 5 5 5 1\nSteps:\n5 * 5 = 25 (left: 5 1 25)\n25 - 5 = 20 (left: 20 1)\n20 - 1 = 19 (left: 19)\n19 + 1 = 20 (left: 20)\n20 - 5 = 15 (left: 15)\n15 + 5 = 20 (left: 20)\n20 - 5 = 15 (left: 15)\n15 + 5 = 20 (left: 20)\n20 - 5 = 15 (left: 15)\n15 + 5 = 20 (left: 20)\n20 - 5 = 15 (left: 15)\n15 + 5 = 20 (left: 20)\n20 - 5 = 15 (left: 15)\n15 + 5 = 20 (left: 20)\n20 - 5 = 15 (left: 15)\n15 + 5 = 20 (left: 20)\n20 - 5 = 15 (left: 15)\n15 + 5 = 20 (left: 20)\n20 - 5 = 15 (left: 15)\n15 + 5 = 20 (left: 20)\n20 - 5 = 15 (left: 15)\n15 + 5 = 20 (left: 20)\n20 - 5 = 15 (left: 15)\n15 + 5 = 20 (left: 20)\n20 - 5 = 15 (left: 15)\n15 + 5 = 20 (left: 20)\n20 - 5 = 15 (left: 15)\n15 + 5 = 20 (left: 20)\n20 - 5 = 15 (left: 15)\n15 + 5 = 20 (left: 20)\n20 - 5 = 15 (left: 15)\n15 + 5 = 20 (left: 20)\n20 - 5 = 15 (left: 15)\n15 + 5 = 20 (left: 20)\n20 - 5 = 15 (left: 15)\n15 + 5 = 20 (left: 20)\n20 - 5 = 15 (left: 15)\n15 + 5 = 20 (left: 20)\n20 - 5 = 15 (left: 15)\n15 + 5 = 20 (left: 20)\n20 - 5 = 15 (left: 15)\n15 + 5 = 20 (left: 20)\n20 - 5 = 15 (left: 15)\n15 + 5 = 20 (left: 20)\n20 - 5 = 15 (left: 15)\n15 + 5 = 20 (left: 20)\n20 - 5 = 15 (left: 15)\n15 + 5 = 20 (left: 20)\n20 - 5 = 15 (left: 15)\n15 + 5 = 20 (left: 20)\n20 - 5 = 15 (left: 15)\n15 + 5 = 20 (left: 20)\n20 - 5 = 15 (left: 15)\n15 + 5 = 20 (left: 20)\n20 - 5 = 15 (left: 15)\n15 + 5 = 20 (left: 20)\n20 - 5 = 15 (left: 15)\n15 + 5 = 20 (left: 20)\n20 - 5 = 15 (left: 15)\n15 + 5 = 20 (left: 20)\n20 - 5 = 15 (left: 15)\n15 + 5 = 20 (left: 20)\n20 - 5 = 15 (left: 15)\n15 + 5 = 20 (left: 20)\n20 - 5 = 15 (left: 15)\n15 + 5 = 20 (left: 20)\n20 - 5 = 15 (left: 15)\n15 + 5 = 20 (left: 20)\n20 - 5 = 15 (left: 15)\n15 + 5 = 20 (left: 20)\n20 - 5 = 15 (left: 15)\n15 + 5 = 20 (left: 20)\n20 - 5 = 15 (left: 15)\n15 + 5 = 20 (left: 20)\n20 - 5 = 15 (left: 15)\n15 + 5 = ",
                "1 + 1 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (1 + 1) + (13 - 2) + 13 = 24\nInput: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n9 * 1 = 9 (left: 9)\n9 * 9 = 81 (left: 81)\n81 / 3 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer: (((3 * 3) - 8) * 9) - 3 = 24\nInput: 1 3 7 7\nSteps:\n7 - 3 = 4 (left: 1 4 7)\n7 - 4 = 3 (left: 1 3)\n3 * 7 = 21 (left: 1 21)\n21 + 1 = 22 (left: 22)\n22 + 2 = 24 (left: 24)\nAnswer: (((7 - 3) - 4) * 7) + 1 + 2 = 24\nInput: 2 3 4 8\nSteps:\n4 * 3 = 12 (left: 2 8 12)\n12 / 2 = 6 (left: 6 8)\n8 - 6 = 2 (left: 2 6)\n2 * 6 = 12 (left: 12)\nAnswer: ((4 * 3) / 2) * (8 - 6) = 24\nInput: 6 6 6 6\nSteps:\n6 + 6 = 12 (left: 6 6 12)\n6 * 6 = 36 (left: 6 36)\n36 / 6 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)\nAnswer: ((6 + 6) * (6 / 6)) * 6 = 24",
                "1 + 1 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 * 13 = 143 (left: 143)",
                "1 + 1 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: ((1 + 1) + 13) + 13 = 24",
                "1 + 1 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (1 + 1) + (13 - 2) + 13 = 24\nInput: 3 3 7 8\nSteps:\n3 * 8 = 24 (left: 3 7 24)\n7 - 3 = 4 (left: 4 24)\n4 * 24 = 96 (left: 96)\nAnswer: (3 * 8) - (7 - 3) = 24\nInput: 3 6 7 8\nSteps:\n6 * 8 = 48 (left: 3 7 48)\n7 - 3 = 4 (left: 4 48)\n48 / 4 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((3 * 6) + (7 - 3)) * 2 = 24\nInput: 2 3 4 6\nSteps:\n3 * 6 = 18 (left: 2 4 18)\n4 + 2 = 6 (left: 6 18)\n18 / 6 = 3 (left: 3)\n3 * 8 = 24 (left: 24)\nAnswer: ((2 + 4) * 6) / 3 * 8 = 24\nInput: 1 2 3 8\nSteps:\n1 * 2 = 2 (left: 3 8 2)\n3 + 8 = 11 (left: 11 2)\n11 * 2 = 22 (left: 22)\n22 + 2 = 24 (left: 24)\nAnswer: ((1 * 2) + (3 + 8)) * 2 + 2 = 24",
                "1 + 1 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (1 + 1) + (13 - 2) + 13 = 24\nInput: 3 3 7 8\nSteps:\n3 * 8 = 24 (left: 3 7 24)\n7 - 3 = 4 (left: 4 24)\n4 * 24 = 96 (left: 96)\nAnswer: (3 * 8) - (7 - 3) = 24\nInput: 2 3 5 9\nSteps:\n5 * 3 = 15 (left: 2 9 15)\n15 - 2 = 13 (left: 13 9)\n13 + 9 = 22 (left: 22)\n22 + 2 = 24 (left: 24)\nAnswer: ((5 * 3) - 2) + 9 + 2 = 24",
                "1 + 1 = 2 (left: 2 13 13)\n13 / 2 = 6.5 (left: 6.5 13)\n13 / 6.5 = 2 (left: 6.5 2)"
            ],
            "values": [
                40.0,
                1.002,
                60.0,
                20.0,
                0.0,
                0.003,
                60.0,
                40.0,
                60.0,
                1.002
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 1.6110600000000002
    },
    "25": {
        "input": "1 2 4 12",
        "step_1": {
            "steps": [
                "4 * 3 = 12 (left: 1 2 12)",
                "2 * 4 = 8 (left: 1 8 12)",
                "1 + 2 = 3 (left: 3 4 12)",
                "12 - 2 = 10 (left: 1 4 10)",
                "12 - 4 = 8 (left: 1 2 8)",
                "4 + 2 = 6 (left: 1 6 12)",
                "2 * 6 = 12 (left: 1 4 12)",
                "12 - 2 = 10 (left: 1 4 10)",
                "1 + 2 = 3 (left: 3 4 12)",
                "12 - 1 = 11 (left: 2 4 11)"
            ],
            "values": [
                40.0,
                1.002,
                60.0,
                20.002,
                60.0,
                0.003,
                0.003,
                2.0,
                60.0,
                0.003
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- 1.0",
                "2 <- 1.0",
                "3 <- INIT",
                "4 <- INIT",
                "5 <- 1.4",
                "6 <- 1.4",
                "7 <- 1.0",
                "8 <- 1.2",
                "9 <- 1.8"
            ],
            "resampled_steps": [
                "",
                "4 * 3 = 12 (left: 1 2 12)",
                "4 * 3 = 12 (left: 1 2 12)",
                "",
                "",
                "12 - 4 = 8 (left: 1 2 8)",
                "12 - 4 = 8 (left: 1 2 8)",
                "4 * 3 = 12 (left: 1 2 12)",
                "1 + 2 = 3 (left: 3 4 12)",
                "1 + 2 = 3 (left: 3 4 12)"
            ]
        },
        "step_2": {
            "steps": [
                "12 - 4 = 8 (left: 1 2 8)",
                "4 * 3 = 12 (left: 1 2 12)\n1 + 2 = 3 (left: 3 12)",
                "4 * 3 = 12 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)",
                "12 / 4 = 3 (left: 1 2 3)",
                "4 * 2 = 8 (left: 1 8 12)",
                "12 - 4 = 8 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)",
                "12 - 4 = 8 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)",
                "4 * 3 = 12 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)",
                "1 + 2 = 3 (left: 3 4 12)\n4 + 3 = 7 (left: 7 12)",
                "1 + 2 = 3 (left: 3 4 12)\n12 - 3 = 9 (left: 4 9 12)"
            ],
            "values": [
                40.001,
                21.001,
                60.0,
                0.003,
                1.002,
                60.0,
                60.0,
                60.0,
                0.002,
                21.0
            ],
            "resampled": [
                "0 <- 2.5",
                "1 <- 2.1",
                "2 <- 1.0",
                "3 <- 1.2",
                "4 <- 2.7",
                "5 <- 2.6",
                "6 <- 2.6",
                "7 <- 1.2",
                "8 <- 1.8",
                "9 <- 2.0"
            ],
            "resampled_steps": [
                "12 - 4 = 8 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)",
                "4 * 3 = 12 (left: 1 2 12)\n1 + 2 = 3 (left: 3 12)",
                "4 * 3 = 12 (left: 1 2 12)",
                "1 + 2 = 3 (left: 3 4 12)",
                "4 * 3 = 12 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)",
                "12 - 4 = 8 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)",
                "12 - 4 = 8 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)",
                "1 + 2 = 3 (left: 3 4 12)",
                "1 + 2 = 3 (left: 3 4 12)",
                "12 - 4 = 8 (left: 1 2 8)"
            ]
        },
        "step_3": {
            "steps": [
                "12 - 4 = 8 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)\n3 + 8 = 11 (left: 8 11)",
                "4 * 3 = 12 (left: 1 2 12)\n1 + 2 = 3 (left: 3 12)\n3 * 12 = 36 (left: 12 36)",
                "4 * 3 = 12 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)",
                "1 + 2 = 3 (left: 3 4 12)\n4 * 3 = 12 (left: 12 12)",
                "4 * 3 = 12 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24 24)",
                "12 - 4 = 8 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)\n3 + 8 = 11 (left: 8 11)",
                "12 - 4 = 8 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)\n8 / 3 = 2.67 (left: 3 2.67)",
                "1 + 2 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)",
                "1 + 2 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)",
                "12 - 4 = 8 (left: 1 2 8)\n8 - 1 = 7 (left: 2 7)"
            ],
            "values": [
                1.002,
                21.001,
                60.0,
                40.001,
                40.001,
                1.002,
                1.002,
                60.0,
                60.0,
                1.001
            ],
            "resampled": [
                "0 <- 3.4",
                "1 <- 2.5",
                "2 <- 3.8",
                "3 <- 3.4",
                "4 <- 2.2",
                "5 <- 2.5",
                "6 <- 2.5",
                "7 <- 1.4",
                "8 <- 3.3",
                "9 <- 2.6"
            ],
            "resampled_steps": [
                "4 * 3 = 12 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24 24)",
                "12 - 4 = 8 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)",
                "1 + 2 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)",
                "4 * 3 = 12 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24 24)",
                "4 * 3 = 12 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)",
                "12 - 4 = 8 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)",
                "12 - 4 = 8 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)",
                "12 - 4 = 8 (left: 1 2 8)",
                "1 + 2 = 3 (left: 3 4 12)\n4 * 3 = 12 (left: 12 12)",
                "12 - 4 = 8 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)"
            ]
        },
        "step_4": {
            "steps": [
                "4 * 3 = 12 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24 24)\n24 - 24 = 0 (left: 0)",
                "12 - 4 = 8 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5 8)",
                "1 + 2 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n8 / 3 = 2.66667 (left: 2.66667 8)",
                "4 * 3 = 12 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24 24)\n24 + 24 = 48 (left: 48)",
                "4 * 3 = 12 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n24 * 1 = 24 (left: 24)",
                "12 - 4 = 8 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)\n3 + 8 = 11 (left: 8 11)",
                "12 - 4 = 8 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)\n8 / 3 = 2.67 (left: 3 2.67)",
                "12 - 4 = 8 (left: 1 2 8)\n8 - 2 = 6 (left: 1 6)",
                "1 + 2 = 3 (left: 3 4 12)\n4 * 3 = 12 (left: 12 12)\n12 - 12 = 0 (left: 0)",
                "12 - 4 = 8 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)\n8 / 3 = 2.67 (left: 2.67 8)"
            ],
            "values": [
                0.0,
                1.0,
                3.0,
                20.0,
                40.0,
                0.003,
                0.002,
                20.001,
                0.0,
                3.0
            ],
            "resampled": [
                "0 <- 4.3",
                "1 <- 4.4",
                "2 <- 1.2",
                "3 <- 1.0",
                "4 <- 1.8",
                "5 <- 1.8",
                "6 <- 3.7",
                "7 <- 1.4",
                "8 <- 1.2",
                "9 <- 4.1"
            ],
            "resampled_steps": [
                "4 * 3 = 12 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24 24)\n24 + 24 = 48 (left: 48)",
                "4 * 3 = 12 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n24 * 1 = 24 (left: 24)",
                "1 + 2 = 3 (left: 3 4 12)",
                "4 * 3 = 12 (left: 1 2 12)",
                "1 + 2 = 3 (left: 3 4 12)",
                "1 + 2 = 3 (left: 3 4 12)",
                "1 + 2 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)",
                "12 - 4 = 8 (left: 1 2 8)",
                "1 + 2 = 3 (left: 3 4 12)",
                "12 - 4 = 8 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5 8)"
            ]
        },
        "step_5": {
            "steps": [
                "4 * 3 = 12 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24 24)\n24 + 24 = 48 (left: 48)\n48 - 8 = 40 (left: 40)",
                "4 * 3 = 12 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n24 * 1 = 24 (left: 24)\nAnswer: 4 * (2 * 12) = 24",
                "1 + 2 = 3 (left: 3 4 12)\n12 / 4 = 3 (left: 3 3 12)",
                "4 * 3 = 12 (left: 1 2 12)\n10 / 5 = 2 (left: 2 10)",
                "1 + 2 = 3 (left: 3 4 12)\n3 + 4 = 7 (left: 7 12)",
                "1 + 2 = 3 (left: 3 4 12)\n3 + 4 = 7 (left: 7 12)",
                "1 + 2 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 + 8 = 11 (left: 8 11)",
                "12 - 4 = 8 (left: 1 2 8)\n8 - 1 = 7 (left: 2 7)",
                "1 + 2 = 3 (left: 3 4 12)\n4 - 3 = 1 (left: 1 12)",
                "12 - 4 = 8 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5 8)\n8 / 5 = 1.6 (left: 1.6)"
            ],
            "values": [
                0.002,
                60.0,
                0.003,
                3.0,
                0.002,
                0.003,
                0.003,
                0.002,
                2.0,
                0.002
            ],
            "resampled": [
                "0 <- 1.0",
                "1 <- 1.2",
                "2 <- 2.5",
                "3 <- 3.7",
                "4 <- 3.3",
                "5 <- 1.3",
                "6 <- 3.3",
                "7 <- 2.5",
                "8 <- 2.2",
                "9 <- 5.1"
            ],
            "resampled_steps": [
                "4 * 3 = 12 (left: 1 2 12)",
                "1 + 2 = 3 (left: 3 4 12)",
                "12 - 4 = 8 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)",
                "1 + 2 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)",
                "1 + 2 = 3 (left: 3 4 12)\n4 * 3 = 12 (left: 12 12)",
                "12 - 2 = 10 (left: 1 4 10)",
                "1 + 2 = 3 (left: 3 4 12)\n4 * 3 = 12 (left: 12 12)",
                "12 - 4 = 8 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)",
                "4 * 3 = 12 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)",
                "4 * 3 = 12 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n24 * 1 = 24 (left: 24)\nAnswer: 4 * (2 * 12) = 24"
            ]
        },
        "step_6": {
            "steps": [
                "4 * 3 = 12 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)",
                "1 + 2 = 3 (left: 3 4 12)\n12 - 3 = 9 (left: 4 9 12)",
                "12 - 4 = 8 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)\n3 * 8 = 24 (left: 8 24)",
                "1 + 2 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 + 8 = 11 (left: 8 11)",
                "1 + 2 = 3 (left: 3 4 12)\n4 * 3 = 12 (left: 12 12)\n12 / 12 = 1 (left: 1)",
                "12 - 2 = 10 (left: 1 4 10)\n1 + 4 = 5 (left: 5 10)",
                "1 + 2 = 3 (left: 3 4 12)\n4 * 3 = 12 (left: 12 12)\n12 / 12 = 1 (left: 1)",
                "12 - 4 = 8 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)\n8 / 3 = 2.6667 (left: 2.6667)",
                "4 * 3 = 12 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n24 - 1 = 23 (left: 23)",
                "4 * 3 = 12 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n24 * 1 = 24 (left: 24)\nAnswer: 4 * (2 * 12) = 24\nInput: 3 3 8 4\nSteps:\n3 + 8 = 11 (left: 3 11 4)\n11 - 3 = 8 (left: 8 4)\n8 * 4 = 32 (left: 32)\nAnswer: (3 + 8) * (11 - 3) = 24"
            ],
            "values": [
                40.001,
                60.0,
                1.002,
                0.001,
                0.003,
                0.003,
                0.003,
                0.001,
                0.002,
                0.0
            ],
            "resampled": [
                "0 <- 6.0",
                "1 <- 2.6",
                "2 <- 2.9",
                "3 <- 5.3",
                "4 <- 1.0",
                "5 <- 3.1",
                "6 <- 1.0",
                "7 <- 1.4",
                "8 <- 6.0",
                "9 <- 3.7"
            ],
            "resampled_steps": [
                "4 * 3 = 12 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)",
                "12 - 4 = 8 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)",
                "1 + 2 = 3 (left: 3 4 12)\n12 - 3 = 9 (left: 4 9 12)",
                "4 * 3 = 12 (left: 1 2 12)\n10 / 5 = 2 (left: 2 10)",
                "4 * 3 = 12 (left: 1 2 12)",
                "4 * 3 = 12 (left: 1 2 12)\n1 + 2 = 3 (left: 3 12)\n3 * 12 = 36 (left: 12 36)",
                "4 * 3 = 12 (left: 1 2 12)",
                "12 - 4 = 8 (left: 1 2 8)",
                "4 * 3 = 12 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)",
                "1 + 2 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)"
            ]
        },
        "step_7": {
            "steps": [
                "4 * 3 = 12 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)\n1 - 6 = -5 (left: -5)",
                "12 - 4 = 8 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5 8)",
                "1 + 2 = 3 (left: 3 4 12)\n12 - 3 = 9 (left: 4 9 12)\n4 + 9 = 13 (left: 9 12 13)",
                "4 * 3 = 12 (left: 1 2 12)\n10 / 5 = 2 (left: 2 10)\n2 * 10 = 20 (left: 20)",
                "4 * 3 = 12 (left: 1 2 12)\n12 - 2 = 10 (left: 1 10)",
                "4 * 3 = 12 (left: 1 2 12)\n1 + 2 = 3 (left: 3 12)\n3 * 12 = 36 (left: 12 36)\n12 * 3 = 36 (left: 36)",
                "4 * 3 = 12 (left: 1 2 12)\n12 - 1 = 11 (left: 2 11)",
                "12 - 4 = 8 (left: 1 2 8)\n8 / 2 = 4 (left: 1 4)",
                "4 * 3 = 12 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)\n6 / 1 = 6 (left: 6)",
                "1 + 2 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 - 8 = -5 (left: -5)"
            ],
            "values": [
                0.002,
                1.002,
                1.002,
                0.0,
                21.001,
                0.0,
                1.002,
                60.0,
                0.002,
                0.003
            ],
            "resampled": [
                "0 <- 3.3",
                "1 <- 1.2",
                "2 <- 6.1",
                "3 <- 7.1",
                "4 <- 3.8",
                "5 <- 1.0",
                "6 <- 6.1",
                "7 <- 3.2",
                "8 <- 2.2",
                "9 <- 7.7"
            ],
            "resampled_steps": [
                "1 + 2 = 3 (left: 3 4 12)\n4 * 3 = 12 (left: 12 12)",
                "1 + 2 = 3 (left: 3 4 12)",
                "1 + 2 = 3 (left: 3 4 12)\n12 - 3 = 9 (left: 4 9 12)",
                "12 - 4 = 8 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5 8)",
                "1 + 2 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)",
                "4 * 3 = 12 (left: 1 2 12)",
                "1 + 2 = 3 (left: 3 4 12)\n12 - 3 = 9 (left: 4 9 12)",
                "4 * 3 = 12 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)",
                "4 * 3 = 12 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)",
                "12 - 4 = 8 (left: 1 2 8)\n8 / 2 = 4 (left: 1 4)"
            ]
        },
        "step_8": {
            "steps": [
                "1 + 2 = 3 (left: 3 4 12)\n4 * 3 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144)",
                "1 + 2 = 3 (left: 3 4 12)\n12 / 4 = 3 (left: 3 12)",
                "1 + 2 = 3 (left: 3 4 12)\n12 - 3 = 9 (left: 4 9 12)\n4 * 9 = 36 (left: 36 12)",
                "12 - 4 = 8 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5 8)\n5 - 8 = -3 (left: -3 8)",
                "1 + 2 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 8 24)",
                "4 * 3 = 12 (left: 1 2 12)\n12 * 2 = 24 (left: 1 24)",
                "1 + 2 = 3 (left: 3 4 12)\n12 - 3 = 9 (left: 4 9 12)\n12 + 4 = 16 (left: 4 9 16)",
                "4 * 3 = 12 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)",
                "4 * 3 = 12 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n1 + 24 = 25 (left: 25)",
                "12 - 4 = 8 (left: 1 2 8)\n8 / 2 = 4 (left: 1 4)\n1 * 4 = 4 (left: 4)"
            ],
            "values": [
                0.003,
                20.002,
                60.0,
                41.0,
                0.002,
                60.0,
                22.0,
                40.0,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 7.7",
                "1 <- 3.3",
                "2 <- 4.4",
                "3 <- 8.5",
                "4 <- 8.2",
                "5 <- 8.2",
                "6 <- 3.3",
                "7 <- 2.1",
                "8 <- 8.5",
                "9 <- 1.4"
            ],
            "resampled_steps": [
                "12 - 4 = 8 (left: 1 2 8)\n8 / 2 = 4 (left: 1 4)",
                "1 + 2 = 3 (left: 3 4 12)\n4 * 3 = 12 (left: 12 12)",
                "4 * 3 = 12 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n24 * 1 = 24 (left: 24)",
                "4 * 3 = 12 (left: 1 2 12)\n12 * 2 = 24 (left: 1 24)",
                "1 + 2 = 3 (left: 3 4 12)\n12 - 3 = 9 (left: 4 9 12)\n4 * 9 = 36 (left: 36 12)",
                "1 + 2 = 3 (left: 3 4 12)\n12 - 3 = 9 (left: 4 9 12)\n4 * 9 = 36 (left: 36 12)",
                "1 + 2 = 3 (left: 3 4 12)\n4 * 3 = 12 (left: 12 12)",
                "4 * 3 = 12 (left: 1 2 12)\n1 + 2 = 3 (left: 3 12)",
                "4 * 3 = 12 (left: 1 2 12)\n12 * 2 = 24 (left: 1 24)",
                "12 - 4 = 8 (left: 1 2 8)"
            ]
        },
        "step_9": {
            "steps": [
                "12 - 4 = 8 (left: 1 2 8)\n8 / 2 = 4 (left: 1 4)\n1 * 4 = 4 (left: 4)",
                "1 + 2 = 3 (left: 3 4 12)\n4 * 3 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "4 * 3 = 12 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n24 * 1 = 24 (left: 24)\nAnswer: (4 * 3) * (2 * 12) = 24",
                "4 * 3 = 12 (left: 1 2 12)\n12 * 2 = 24 (left: 1 24)\n24 / 1 = 24 (left: 24)",
                "1 + 2 = 3 (left: 3 4 12)\n12 - 3 = 9 (left: 4 9 12)\n4 * 9 = 36 (left: 36 12)\n36 - 12 = 24 (left: 24)",
                "1 + 2 = 3 (left: 3 4 12)\n12 - 3 = 9 (left: 4 9 12)\n4 * 9 = 36 (left: 36 12)\n36 / 12 = 3 (left: 3)",
                "1 + 2 = 3 (left: 3 4 12)\n4 * 3 = 12 (left: 12 12)\n12 - 12 = 0 (left: 0)",
                "4 * 3 = 12 (left: 1 2 12)\n1 + 2 = 3 (left: 3 12)\n12 - 3 = 9 (left: 9)",
                "4 * 3 = 12 (left: 1 2 12)\n12 * 2 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)",
                "12 - 4 = 8 (left: 1 2 8)\n2 * 8 = 16 (left: 1 16)"
            ],
            "values": [
                0.003,
                20.0,
                0.003,
                40.0,
                40.0,
                0.0,
                0.001,
                0.002,
                20.0,
                21.001
            ],
            "resampled": [
                "0 <- 2.2",
                "1 <- 9.4",
                "2 <- 8.3",
                "3 <- 1.4",
                "4 <- 1.2",
                "5 <- 2.6",
                "6 <- 8.5",
                "7 <- 2.0",
                "8 <- 8.5",
                "9 <- 8.2"
            ],
            "resampled_steps": [
                "4 * 3 = 12 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)",
                "1 + 2 = 3 (left: 3 4 12)\n12 - 3 = 9 (left: 4 9 12)\n4 * 9 = 36 (left: 36 12)\n36 - 12 = 24 (left: 24)",
                "12 - 4 = 8 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5 8)\n5 - 8 = -3 (left: -3 8)",
                "12 - 4 = 8 (left: 1 2 8)",
                "1 + 2 = 3 (left: 3 4 12)",
                "12 - 4 = 8 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)",
                "4 * 3 = 12 (left: 1 2 12)\n12 * 2 = 24 (left: 1 24)",
                "12 - 4 = 8 (left: 1 2 8)",
                "4 * 3 = 12 (left: 1 2 12)\n12 * 2 = 24 (left: 1 24)",
                "1 + 2 = 3 (left: 3 4 12)\n12 - 3 = 9 (left: 4 9 12)\n4 * 9 = 36 (left: 36 12)"
            ]
        },
        "step_10": {
            "steps": [
                "4 * 3 = 12 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n1 + 24 = 25 (left: 25)",
                "1 + 2 = 3 (left: 3 4 12)\n12 - 3 = 9 (left: 4 9 12)\n4 * 9 = 36 (left: 36 12)\n36 - 12 = 24 (left: 24)\nAnswer: ((1 + 2) - 4) * 12 - 24",
                "12 - 4 = 8 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5 8)\n5 - 8 = -3 (left: -3 8)\n-3 + 8 = 5 (left: 5)",
                "12 - 4 = 8 (left: 1 2 8)\n2 / 1 = 2 (left: 2 8)",
                "1 + 2 = 3 (left: 3 4 12)\n4 * 3 = 12 (left: 12 12)",
                "12 - 4 = 8 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5 8)",
                "4 * 3 = 12 (left: 1 2 12)\n12 * 2 = 24 (left: 1 24)\n1 + 24 = 25 (left: 25)",
                "12 - 4 = 8 (left: 1 2 8)\n8 / 2 = 4 (left: 1 4)",
                "4 * 3 = 12 (left: 1 2 12)\n12 * 2 = 24 (left: 1 24)\n1 + 24 = 25 (left: 25)",
                "1 + 2 = 3 (left: 3 4 12)\n12 - 3 = 9 (left: 4 9 12)\n4 * 9 = 36 (left: 36 12)\n36 * 12 = 432 (left: 432)"
            ],
            "values": [
                0.003,
                0.002,
                0.002,
                1.002,
                2.001,
                0.001,
                0.002,
                60.0,
                0.003,
                0.002
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 1.6911839999999998
    },
    "26": {
        "input": "1 1 3 6",
        "step_1": {
            "steps": [
                "3 + 1 = 4 (left: 4 3 6)",
                "6 - 1 = 5 (left: 1 3 5)",
                "6 + 1 = 7 (left: 1 3 7)",
                "3 + 1 = 4 (left: 4 3 6)",
                "6 * 1 = 6 (left: 1 3 6)",
                "1 * 3 = 3 (left: 1 3 6)",
                "6 - 1 = 5 (left: 1 3 5)",
                "1 * 1 = 1 (left: 1 3 6)",
                "6 - 1 = 5 (left: 1 3 5)",
                "1 + 1 = 2 (left: 2 3 6)"
            ],
            "values": [
                3.0,
                2.001,
                3.0,
                3.0,
                2.0,
                3.0,
                1.002,
                3.0,
                2.001,
                22.0
            ],
            "resampled": [
                "0 <- 1.4",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- 1.9",
                "4 <- 1.9",
                "5 <- INIT",
                "6 <- 1.3",
                "7 <- 1.7",
                "8 <- 1.3",
                "9 <- 1.0"
            ],
            "resampled_steps": [
                "6 * 1 = 6 (left: 1 3 6)",
                "",
                "",
                "1 + 1 = 2 (left: 2 3 6)",
                "1 + 1 = 2 (left: 2 3 6)",
                "",
                "3 + 1 = 4 (left: 4 3 6)",
                "1 * 1 = 1 (left: 1 3 6)",
                "3 + 1 = 4 (left: 4 3 6)",
                "3 + 1 = 4 (left: 4 3 6)"
            ]
        },
        "step_2": {
            "steps": [
                "6 * 1 = 6 (left: 1 3 6)\n3 - 1 = 2 (left: 2 6)",
                "6 - 3 = 3 (left: 1 3 3)",
                "6 - 1 = 5 (left: 1 3 5)",
                "1 + 1 = 2 (left: 2 3 6)\n6 / 2 = 3 (left: 3 6)",
                "1 + 1 = 2 (left: 2 3 6)\n2 + 3 = 5 (left: 5 6)",
                "3 + 1 = 4 (left: 4 3 6)",
                "3 + 1 = 4 (left: 4 3 6)\n4 - 3 = 1 (left: 1 6)",
                "1 * 1 = 1 (left: 1 3 6)\n6 / 3 = 2 (left: 1 2)",
                "3 + 1 = 4 (left: 4 3 6)\n6 / 3 = 2 (left: 4 2)",
                "3 + 1 = 4 (left: 4 3 6)\n3 + 6 = 9 (left: 4 9)"
            ],
            "values": [
                0.001,
                1.002,
                1.001,
                0.0,
                2.001,
                0.003,
                20.001,
                0.002,
                1.0,
                3.0
            ],
            "resampled": [
                "0 <- 2.6",
                "1 <- 2.4",
                "2 <- INIT",
                "3 <- 2.6",
                "4 <- INIT",
                "5 <- 1.0",
                "6 <- 1.9",
                "7 <- INIT",
                "8 <- 1.9",
                "9 <- 1.9"
            ],
            "resampled_steps": [
                "3 + 1 = 4 (left: 4 3 6)\n4 - 3 = 1 (left: 1 6)",
                "1 + 1 = 2 (left: 2 3 6)\n2 + 3 = 5 (left: 5 6)",
                "",
                "3 + 1 = 4 (left: 4 3 6)\n4 - 3 = 1 (left: 1 6)",
                "",
                "3 + 1 = 4 (left: 4 3 6)",
                "1 + 1 = 2 (left: 2 3 6)",
                "",
                "1 + 1 = 2 (left: 2 3 6)",
                "1 + 1 = 2 (left: 2 3 6)"
            ]
        },
        "step_3": {
            "steps": [
                "3 + 1 = 4 (left: 4 3 6)\n4 - 3 = 1 (left: 1 6)\n1 + 6 = 7 (left: 6 7)",
                "1 + 1 = 2 (left: 2 3 6)\n2 + 3 = 5 (left: 5 6)\n5 * 6 = 30 (left: 30)",
                "1 + 1 = 2 (left: 2 3 6)",
                "3 + 1 = 4 (left: 4 3 6)\n4 - 3 = 1 (left: 1 6)\n1 * 6 = 6 (left: 6)",
                "3 * 1 = 3 (left: 1 3 6)",
                "3 + 1 = 4 (left: 4 3 6)\n4 / 3 = 1.33 (left: 1.33 6)",
                "1 + 1 = 2 (left: 2 3 6)\n2 + 3 = 5 (left: 5 6)",
                "3 * 1 = 3 (left: 3 3 6)",
                "1 + 1 = 2 (left: 2 3 6)\n6 - 3 = 3 (left: 2 3 6)",
                "1 + 1 = 2 (left: 2 3 6)\n3 * 2 = 6 (left: 6 6)"
            ],
            "values": [
                1.002,
                0.002,
                60.0,
                0.002,
                3.0,
                1.002,
                0.003,
                2.001,
                2.001,
                20.002
            ],
            "resampled": [
                "0 <- 3.2",
                "1 <- 3.5",
                "2 <- 1.9",
                "3 <- 1.7",
                "4 <- 3.9",
                "5 <- 3.2",
                "6 <- 3.2",
                "7 <- 3.2",
                "8 <- 2.6",
                "9 <- 1.2"
            ],
            "resampled_steps": [
                "1 + 1 = 2 (left: 2 3 6)",
                "3 + 1 = 4 (left: 4 3 6)\n4 / 3 = 1.33 (left: 1.33 6)",
                "1 + 1 = 2 (left: 2 3 6)",
                "1 * 1 = 1 (left: 1 3 6)",
                "1 + 1 = 2 (left: 2 3 6)\n3 * 2 = 6 (left: 6 6)",
                "1 + 1 = 2 (left: 2 3 6)",
                "1 + 1 = 2 (left: 2 3 6)",
                "1 + 1 = 2 (left: 2 3 6)",
                "3 + 1 = 4 (left: 4 3 6)\n4 - 3 = 1 (left: 1 6)",
                "6 + 1 = 7 (left: 1 3 7)"
            ]
        },
        "step_4": {
            "steps": [
                "1 + 1 = 2 (left: 2 3 6)\n6 / 2 = 3 (left: 3 3)",
                "3 + 1 = 4 (left: 4 3 6)\n4 / 3 = 1.33 (left: 1.33 6)\n6 - 1.33 = 4.67 (left: 4.67)",
                "1 + 1 = 2 (left: 2 3 6)\n6 - 3 = 3 (left: 3 6)",
                "1 * 1 = 1 (left: 1 3 6)\n3 - 1 = 2 (left: 2 6)",
                "1 + 1 = 2 (left: 2 3 6)\n3 * 2 = 6 (left: 6 6)\n6 / 6 = 1 (left: 1 6)",
                "1 + 1 = 2 (left: 2 3 6)\n2 + 3 = 5 (left: 5 6)",
                "1 + 1 = 2 (left: 2 3 6)\n6 - 3 = 3 (left: 2 3)",
                "1 + 1 = 2 (left: 2 3 6)\n2 + 3 = 5 (left: 5 6)",
                "3 + 1 = 4 (left: 4 3 6)\n4 - 3 = 1 (left: 1 6)\n6 - 1 = 5 (left: 5)",
                "6 + 1 = 7 (left: 1 3 7)\n1 * 3 = 3 (left: 3 7)"
            ],
            "values": [
                1.001,
                0.001,
                1.002,
                1.001,
                1.002,
                1.002,
                1.0,
                0.003,
                0.002,
                0.001
            ],
            "resampled": [
                "0 <- 3.9",
                "1 <- INIT",
                "2 <- 4.4",
                "3 <- 2.6",
                "4 <- 2.6",
                "5 <- 3.2",
                "6 <- 3.2",
                "7 <- 2.4",
                "8 <- 3.2",
                "9 <- 3.0"
            ],
            "resampled_steps": [
                "1 + 1 = 2 (left: 2 3 6)\n3 * 2 = 6 (left: 6 6)",
                "",
                "1 + 1 = 2 (left: 2 3 6)\n3 * 2 = 6 (left: 6 6)\n6 / 6 = 1 (left: 1 6)",
                "3 + 1 = 4 (left: 4 3 6)\n4 - 3 = 1 (left: 1 6)",
                "3 + 1 = 4 (left: 4 3 6)\n4 - 3 = 1 (left: 1 6)",
                "1 + 1 = 2 (left: 2 3 6)",
                "1 + 1 = 2 (left: 2 3 6)",
                "1 + 1 = 2 (left: 2 3 6)\n2 + 3 = 5 (left: 5 6)",
                "1 + 1 = 2 (left: 2 3 6)",
                "3 + 1 = 4 (left: 4 3 6)\n4 - 3 = 1 (left: 1 6)\n1 + 6 = 7 (left: 6 7)"
            ]
        },
        "step_5": {
            "steps": [
                "1 + 1 = 2 (left: 2 3 6)\n3 * 2 = 6 (left: 6 6)\n6 / 6 = 1 (left: 1)",
                "6 - 3 = 3 (left: 1 1 3)",
                "1 + 1 = 2 (left: 2 3 6)\n3 * 2 = 6 (left: 6 6)\n6 / 6 = 1 (left: 1 6)\n1 / 6 = 0.16666666667 (left: 0.16666666667)",
                "3 + 1 = 4 (left: 4 3 6)\n4 - 3 = 1 (left: 1 6)\n6 - 1 = 5 (left: 5)",
                "3 + 1 = 4 (left: 4 3 6)\n4 - 3 = 1 (left: 1 6)\n1 * 6 = 6 (left: 6)",
                "1 + 1 = 2 (left: 2 3 6)\n2 + 3 = 5 (left: 5 6)",
                "1 + 1 = 2 (left: 2 3 6)\n6 - 3 = 3 (left: 2 3)",
                "1 + 1 = 2 (left: 2 3 6)\n2 + 3 = 5 (left: 5 6)\n6 - 5 = 1 (left: 1)",
                "1 + 1 = 2 (left: 2 3 6)\n3 * 6 = 18 (left: 2 18)",
                "3 + 1 = 4 (left: 4 3 6)\n4 - 3 = 1 (left: 1 6)\n1 + 6 = 7 (left: 6 7)\n6 - 7 = -1 (left: -1)"
            ],
            "values": [
                0.002,
                0.003,
                0.0,
                0.002,
                0.002,
                1.002,
                0.001,
                0.003,
                40.001,
                0.0
            ],
            "resampled": [
                "0 <- 3.2",
                "1 <- 5.8",
                "2 <- 3.5",
                "3 <- 2.6",
                "4 <- 4.0",
                "5 <- 5.8",
                "6 <- 5.8",
                "7 <- 1.3",
                "8 <- 3.2",
                "9 <- 3.2"
            ],
            "resampled_steps": [
                "1 + 1 = 2 (left: 2 3 6)",
                "1 + 1 = 2 (left: 2 3 6)\n3 * 6 = 18 (left: 2 18)",
                "3 + 1 = 4 (left: 4 3 6)\n4 / 3 = 1.33 (left: 1.33 6)",
                "3 + 1 = 4 (left: 4 3 6)\n4 - 3 = 1 (left: 1 6)",
                "1 + 1 = 2 (left: 2 3 6)\n6 / 2 = 3 (left: 3 3)",
                "1 + 1 = 2 (left: 2 3 6)\n3 * 6 = 18 (left: 2 18)",
                "1 + 1 = 2 (left: 2 3 6)\n3 * 6 = 18 (left: 2 18)",
                "3 + 1 = 4 (left: 4 3 6)",
                "1 + 1 = 2 (left: 2 3 6)",
                "1 + 1 = 2 (left: 2 3 6)"
            ]
        },
        "step_6": {
            "steps": [
                "1 + 1 = 2 (left: 2 3 6)\n6 / 3 = 2 (left: 2 2 6)",
                "1 + 1 = 2 (left: 2 3 6)\n3 * 6 = 18 (left: 2 18)\n18 - 2 = 16 (left: 16)",
                "3 + 1 = 4 (left: 4 3 6)\n4 / 3 = 1.33 (left: 1.33 6)\n6 / 1.33 = 4.51 (left: 4.51)",
                "3 + 1 = 4 (left: 4 3 6)\n4 - 3 = 1 (left: 1 6)\n6 - 1 = 5 (left: 5)",
                "1 + 1 = 2 (left: 2 3 6)\n6 / 2 = 3 (left: 3 3)\n3 - 3 = 0 (left: 0)",
                "1 + 1 = 2 (left: 2 3 6)\n3 * 6 = 18 (left: 2 18)\n18 / 2 = 9 (left: 9)",
                "1 + 1 = 2 (left: 2 3 6)\n3 * 6 = 18 (left: 2 18)\n2 * 18 = 36 (left: 36)",
                "3 + 1 = 4 (left: 4 3 6)\n4 / 3 = 1.33 (left: 1.33 6)",
                "1 + 1 = 2 (left: 2 3 6)\n6 - 3 = 3 (left: 2 3)",
                "1 + 1 = 2 (left: 2 3 6)\n6 / 2 = 3 (left: 3 6)"
            ],
            "values": [
                41.0,
                0.003,
                0.003,
                0.003,
                0.001,
                0.003,
                20.0,
                1.001,
                1.0,
                0.0
            ],
            "resampled": [
                "0 <- 6.6",
                "1 <- INIT",
                "2 <- 5.8",
                "3 <- 6.0",
                "4 <- 4.3",
                "5 <- 1.9",
                "6 <- 5.8",
                "7 <- 6.0",
                "8 <- 3.2",
                "9 <- 6.8"
            ],
            "resampled_steps": [
                "1 + 1 = 2 (left: 2 3 6)\n3 * 6 = 18 (left: 2 18)\n2 * 18 = 36 (left: 36)",
                "",
                "1 + 1 = 2 (left: 2 3 6)\n3 * 6 = 18 (left: 2 18)",
                "1 + 1 = 2 (left: 2 3 6)\n6 / 3 = 2 (left: 2 2 6)",
                "1 * 1 = 1 (left: 1 3 6)\n3 - 1 = 2 (left: 2 6)",
                "1 + 1 = 2 (left: 2 3 6)",
                "1 + 1 = 2 (left: 2 3 6)\n3 * 6 = 18 (left: 2 18)",
                "1 + 1 = 2 (left: 2 3 6)\n6 / 3 = 2 (left: 2 2 6)",
                "1 + 1 = 2 (left: 2 3 6)",
                "1 + 1 = 2 (left: 2 3 6)\n6 - 3 = 3 (left: 2 3)"
            ]
        },
        "step_7": {
            "steps": [
                "1 + 1 = 2 (left: 2 3 6)\n3 * 6 = 18 (left: 2 18)\n2 * 18 = 36 (left: 36)\n6 * 6 = 36",
                "3 * 1 = 3 (left: 3 3 6)",
                "1 + 1 = 2 (left: 2 3 6)\n3 * 6 = 18 (left: 2 18)\n18 - 2 = 16 (left: 16)",
                "1 + 1 = 2 (left: 2 3 6)\n6 / 3 = 2 (left: 2 2 6)\n2 * 2 = 4 (left: 4 6)",
                "1 * 1 = 1 (left: 1 3 6)\n3 - 1 = 2 (left: 2 6)\nPossible next steps:",
                "1 + 1 = 2 (left: 2 3 6)\n3 * 2 = 6 (left: 6 6)",
                "1 + 1 = 2 (left: 2 3 6)\n3 * 6 = 18 (left: 2 18)\n2 * 18 = 36 (left: 36)",
                "1 + 1 = 2 (left: 2 3 6)\n6 / 3 = 2 (left: 2 2 6)\n6 - 2 = 4 (left: 2 4)",
                "1 + 1 = 2 (left: 2 3 6)\n2 + 3 = 5 (left: 5 6)",
                "1 + 1 = 2 (left: 2 3 6)\n6 - 3 = 3 (left: 2 3)\n3 - 2 = 1 (left: 1 3)"
            ],
            "values": [
                0.003,
                2.001,
                0.003,
                60.0,
                0.003,
                60.0,
                0.0,
                2.001,
                1.002,
                0.0
            ],
            "resampled": [
                "0 <- 5.8",
                "1 <- 4.4",
                "2 <- 7.5",
                "3 <- 6.6",
                "4 <- 2.8",
                "5 <- 7.5",
                "6 <- 3.4",
                "7 <- 7.3",
                "8 <- 6.0",
                "9 <- 7.3"
            ],
            "resampled_steps": [
                "1 + 1 = 2 (left: 2 3 6)\n3 * 6 = 18 (left: 2 18)",
                "1 + 1 = 2 (left: 2 3 6)\n3 * 2 = 6 (left: 6 6)\n6 / 6 = 1 (left: 1 6)",
                "1 + 1 = 2 (left: 2 3 6)\n3 * 2 = 6 (left: 6 6)",
                "1 + 1 = 2 (left: 2 3 6)\n3 * 6 = 18 (left: 2 18)\n2 * 18 = 36 (left: 36)",
                "3 + 1 = 4 (left: 4 3 6)\n6 / 3 = 2 (left: 4 2)",
                "1 + 1 = 2 (left: 2 3 6)\n3 * 2 = 6 (left: 6 6)",
                "3 * 1 = 3 (left: 1 3 6)",
                "1 + 1 = 2 (left: 2 3 6)\n6 / 3 = 2 (left: 2 2 6)\n2 * 2 = 4 (left: 4 6)",
                "1 + 1 = 2 (left: 2 3 6)\n6 / 3 = 2 (left: 2 2 6)",
                "1 + 1 = 2 (left: 2 3 6)\n6 / 3 = 2 (left: 2 2 6)\n2 * 2 = 4 (left: 4 6)"
            ]
        },
        "step_8": {
            "steps": [
                "1 + 1 = 2 (left: 2 3 6)\n3 * 6 = 18 (left: 2 18)\n18 / 2 = 9 (left: 9)",
                "1 + 1 = 2 (left: 2 3 6)\n3 * 2 = 6 (left: 6 6)\n6 / 6 = 1 (left: 1 6)\n1 + 6 = 7 (left: 7)",
                "1 + 1 = 2 (left: 2 3 6)\n3 * 2 = 6 (left: 6 6)\n6 * 6 = 36 (left: 6 36)",
                "1 + 1 = 2 (left: 2 3 6)\n3 * 6 = 18 (left: 2 18)\n2 * 18 = 36 (left: 36)\n36 / 2 = 18 (left: 18)",
                "3 + 1 = 4 (left: 4 3 6)\n6 / 3 = 2 (left: 4 2)\n4 + 2 = 6 (left: 6)",
                "1 + 1 = 2 (left: 2 3 6)\n3 * 2 = 6 (left: 6 6)\n6 + 6 = 12 (left: 12)",
                "3 * 1 = 3 (left: 1 3 6)\n6 - 3 = 3 (left: 1 3)",
                "1 + 1 = 2 (left: 2 3 6)\n6 / 3 = 2 (left: 2 2 6)\n2 * 2 = 4 (left: 4 6)\n6 - 4 = 2 (left: 2)",
                "1 + 1 = 2 (left: 2 3 6)\n6 / 3 = 2 (left: 2 2 6)\n6 / 2 = 3 (left: 2 3)",
                "1 + 1 = 2 (left: 2 3 6)\n6 / 3 = 2 (left: 2 2 6)\n2 * 2 = 4 (left: 4 6)\n6 - 4 = 2 (left: 2)"
            ],
            "values": [
                0.002,
                0.002,
                0.003,
                0.0,
                0.003,
                0.001,
                0.001,
                0.001,
                0.001,
                0.003
            ],
            "resampled": [
                "0 <- 2.6",
                "1 <- 3.9",
                "2 <- 7.5",
                "3 <- 6.0",
                "4 <- 6.6",
                "5 <- 7.5",
                "6 <- 1.9",
                "7 <- 6.0",
                "8 <- 7.3",
                "9 <- 1.9"
            ],
            "resampled_steps": [
                "3 + 1 = 4 (left: 4 3 6)\n4 - 3 = 1 (left: 1 6)",
                "1 + 1 = 2 (left: 2 3 6)\n3 * 2 = 6 (left: 6 6)",
                "1 + 1 = 2 (left: 2 3 6)\n3 * 2 = 6 (left: 6 6)",
                "1 + 1 = 2 (left: 2 3 6)\n6 / 3 = 2 (left: 2 2 6)",
                "1 + 1 = 2 (left: 2 3 6)\n3 * 6 = 18 (left: 2 18)\n2 * 18 = 36 (left: 36)",
                "1 + 1 = 2 (left: 2 3 6)\n3 * 2 = 6 (left: 6 6)",
                "1 + 1 = 2 (left: 2 3 6)",
                "1 + 1 = 2 (left: 2 3 6)\n6 / 3 = 2 (left: 2 2 6)",
                "1 + 1 = 2 (left: 2 3 6)\n6 / 3 = 2 (left: 2 2 6)\n2 * 2 = 4 (left: 4 6)",
                "1 + 1 = 2 (left: 2 3 6)"
            ]
        },
        "step_9": {
            "steps": [
                "3 + 1 = 4 (left: 4 3 6)\n4 - 3 = 1 (left: 1 6)\n1 * 6 = 6 (left: 6)",
                "1 + 1 = 2 (left: 2 3 6)\n3 * 2 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)",
                "1 + 1 = 2 (left: 2 3 6)\n3 * 2 = 6 (left: 6 6)\n6 / 6 = 1 (left: 1)",
                "1 + 1 = 2 (left: 2 3 6)\n6 / 3 = 2 (left: 2 2 6)\n2 * 2 = 4 (left: 4 6)",
                "1 + 1 = 2 (left: 2 3 6)\n3 * 6 = 18 (left: 2 18)\n2 * 18 = 36 (left: 36)\n36 / 2 = 18 (left: 18)",
                "1 + 1 = 2 (left: 2 3 6)\n3 * 2 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)",
                "1 + 1 = 2 (left: 2 3 6)\nPossible next steps:",
                "1 + 1 = 2 (left: 2 3 6)\n6 / 3 = 2 (left: 2 2 6)\n2 + 2 = 4 (left: 4 6)",
                "1 + 1 = 2 (left: 2 3 6)\n6 / 3 = 2 (left: 2 2 6)\n2 * 2 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)",
                "1 + 1 = 2 (left: 2 3 6)\n6 - 3 = 3 (left: 2 3)"
            ],
            "values": [
                0.001,
                40.0,
                0.003,
                41.0,
                20.001,
                20.0,
                0.003,
                60.0,
                0.003,
                1.0
            ],
            "resampled": [
                "0 <- 9.1",
                "1 <- 9.4",
                "2 <- 9.5",
                "3 <- 9.4",
                "4 <- 9.7",
                "5 <- 9.1",
                "6 <- 9.3",
                "7 <- 9.3",
                "8 <- 7.3",
                "9 <- 6.0"
            ],
            "resampled_steps": [
                "1 + 1 = 2 (left: 2 3 6)\n3 * 2 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)",
                "1 + 1 = 2 (left: 2 3 6)\n3 * 6 = 18 (left: 2 18)\n2 * 18 = 36 (left: 36)\n36 / 2 = 18 (left: 18)",
                "1 + 1 = 2 (left: 2 3 6)\n3 * 2 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)",
                "1 + 1 = 2 (left: 2 3 6)\n3 * 6 = 18 (left: 2 18)\n2 * 18 = 36 (left: 36)\n36 / 2 = 18 (left: 18)",
                "1 + 1 = 2 (left: 2 3 6)\n6 / 3 = 2 (left: 2 2 6)\n2 + 2 = 4 (left: 4 6)",
                "1 + 1 = 2 (left: 2 3 6)\n3 * 2 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)",
                "1 + 1 = 2 (left: 2 3 6)\n6 / 3 = 2 (left: 2 2 6)\n2 * 2 = 4 (left: 4 6)",
                "1 + 1 = 2 (left: 2 3 6)\n6 / 3 = 2 (left: 2 2 6)\n2 * 2 = 4 (left: 4 6)",
                "1 + 1 = 2 (left: 2 3 6)\n6 / 3 = 2 (left: 2 2 6)\n2 * 2 = 4 (left: 4 6)",
                "1 + 1 = 2 (left: 2 3 6)\n6 / 3 = 2 (left: 2 2 6)"
            ]
        },
        "step_10": {
            "steps": [
                "1 + 1 = 2 (left: 2 3 6)\n3 * 2 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)\n36 - 6 = 30 (left: 30)",
                "1 + 1 = 2 (left: 2 3 6)\n3 * 6 = 18 (left: 2 18)\n2 * 18 = 36 (left: 36)\n36 / 2 = 18 (left: 18)\nThere are no possible next steps for the input 18 as it is a single number and there are no other numbers to operate on.",
                "1 + 1 = 2 (left: 2 3 6)\n3 * 2 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)\n36 + 2 = 38 (left: 38)",
                "1 + 1 = 2 (left: 2 3 6)\n3 * 6 = 18 (left: 2 18)\n2 * 18 = 36 (left: 36)\n36 / 2 = 18 (left: 18)\nThere are no possible next steps as the input is already a single number.",
                "1 + 1 = 2 (left: 2 3 6)\n6 / 3 = 2 (left: 2 2 6)\n2 + 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "1 + 1 = 2 (left: 2 3 6)\n3 * 2 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)\n- 36 + 4 = 40",
                "1 + 1 = 2 (left: 2 3 6)\n6 / 3 = 2 (left: 2 2 6)\n2 * 2 = 4 (left: 4 6)\nPossible next steps:",
                "1 + 1 = 2 (left: 2 3 6)\n6 / 3 = 2 (left: 2 2 6)\n2 * 2 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)",
                "1 + 1 = 2 (left: 2 3 6)\n6 / 3 = 2 (left: 2 2 6)\n2 * 2 = 4 (left: 4 6)\n6 - 4 = 2 (left: 2)",
                "1 + 1 = 2 (left: 2 3 6)\n6 / 3 = 2 (left: 2 2 6)\n6 / 2 = 3 (left: 2 3)"
            ],
            "values": [
                0.002,
                0.003,
                0.002,
                0.003,
                40.0,
                0.003,
                0.003,
                0.002,
                0.001,
                0.001
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 1.772234
    },
    "27": {
        "input": "1 1 3 9",
        "step_1": {
            "steps": [
                "9 - 3 = 6 (left: 1 6 9)",
                "1 + 1 = 2 (left: 2 3 9)",
                "1 * 1 = 1 (left: 1 3 9)",
                "1 + 3 = 4 (left: 4 3 9)",
                "1 + 3 = 4 (left: 4 3 9)",
                "1 * 3 = 3 (left: 1 3 9)",
                "3 + 1 = 4 (left: 1 4 9)",
                "3 + 1 = 4 (left: 4 3 9)",
                "9 - 3 = 6 (left: 1 3 6)",
                "3 * 3 = 9 (left: 1 9 9)"
            ],
            "values": [
                2.0,
                2.0,
                0.003,
                41.0,
                41.0,
                20.002,
                1.002,
                21.001,
                3.0,
                21.001
            ],
            "resampled": [
                "0 <- 1.7",
                "1 <- INIT",
                "2 <- 1.7",
                "3 <- 1.4",
                "4 <- INIT",
                "5 <- 1.8",
                "6 <- 1.3",
                "7 <- 1.4",
                "8 <- 1.7",
                "9 <- INIT"
            ],
            "resampled_steps": [
                "3 + 1 = 4 (left: 4 3 9)",
                "",
                "3 + 1 = 4 (left: 4 3 9)",
                "1 + 3 = 4 (left: 4 3 9)",
                "",
                "9 - 3 = 6 (left: 1 3 6)",
                "1 + 3 = 4 (left: 4 3 9)",
                "1 + 3 = 4 (left: 4 3 9)",
                "3 + 1 = 4 (left: 4 3 9)",
                ""
            ]
        },
        "step_2": {
            "steps": [
                "3 + 1 = 4 (left: 4 3 9)\n4 / 3 = 1.33 (left: 1.33 9)",
                "1 * 3 = 3 (left: 1 3 9)",
                "3 + 1 = 4 (left: 4 3 9)\n4 * 3 = 12 (left: 12 9)",
                "1 + 3 = 4 (left: 4 3 9)\n9 - 3 = 6 (left: 4 6)",
                "1 * 3 = 3 (left: 3 3 9)",
                "9 - 3 = 6 (left: 1 3 6)\n3 * 6 = 18 (left: 1 18)",
                "1 + 3 = 4 (left: 4 3 9)\n9 - 4 = 5 (left: 5 9)",
                "1 + 3 = 4 (left: 4 3 9)\n4 * 3 = 12 (left: 12 9)",
                "3 + 1 = 4 (left: 4 3 9)\n3 * 9 = 27 (left: 4 27)",
                "9 / 3 = 3 (left: 1 3 9)"
            ],
            "values": [
                3.0,
                21.001,
                0.003,
                60.0,
                0.003,
                2.001,
                0.002,
                0.003,
                2.001,
                41.0
            ],
            "resampled": [
                "0 <- 1.3",
                "1 <- 1.4",
                "2 <- 2.3",
                "3 <- INIT",
                "4 <- 1.5",
                "5 <- 2.1",
                "6 <- 1.0",
                "7 <- 2.9",
                "8 <- 1.3",
                "9 <- 1.3"
            ],
            "resampled_steps": [
                "1 + 3 = 4 (left: 4 3 9)",
                "1 + 3 = 4 (left: 4 3 9)",
                "1 + 3 = 4 (left: 4 3 9)\n9 - 3 = 6 (left: 4 6)",
                "",
                "1 * 3 = 3 (left: 1 3 9)",
                "1 * 3 = 3 (left: 1 3 9)",
                "9 - 3 = 6 (left: 1 6 9)",
                "9 / 3 = 3 (left: 1 3 9)",
                "1 + 3 = 4 (left: 4 3 9)",
                "1 + 3 = 4 (left: 4 3 9)"
            ]
        },
        "step_3": {
            "steps": [
                "1 + 3 = 4 (left: 4 3 9)\n3 + 9 = 12 (left: 4 12)",
                "1 + 3 = 4 (left: 4 3 9)\n4 + 3 = 7 (left: 7 9)",
                "1 + 3 = 4 (left: 4 3 9)\n9 - 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "9 - 3 = 6 (left: 1 3 6)",
                "1 * 3 = 3 (left: 1 3 9)\n3 * 9 = 27 (left: 1 27)",
                "1 * 3 = 3 (left: 1 3 9)\n1 + 9 = 10 (left: 10 3)",
                "9 - 3 = 6 (left: 1 6 9)\n6 / 3 = 2 (left: 1 2)",
                "9 / 3 = 3 (left: 1 3 9)\n3 * 9 = 27 (left: 1 27)",
                "1 + 3 = 4 (left: 4 3 9)\n3 * 9 = 27 (left: 4 27)",
                "1 + 3 = 4 (left: 4 3 9)\n3 * 9 = 27 (left: 4 27)"
            ],
            "values": [
                1.002,
                0.003,
                20.0,
                0.001,
                41.0,
                0.002,
                1.001,
                21.001,
                40.001,
                1.0
            ],
            "resampled": [
                "0 <- 1.4",
                "1 <- 3.4",
                "2 <- 1.3",
                "3 <- 1.3",
                "4 <- 3.4",
                "5 <- 3.4",
                "6 <- 1.3",
                "7 <- 1.3",
                "8 <- 3.8",
                "9 <- 2.9"
            ],
            "resampled_steps": [
                "1 + 3 = 4 (left: 4 3 9)",
                "1 * 3 = 3 (left: 1 3 9)\n3 * 9 = 27 (left: 1 27)",
                "1 + 3 = 4 (left: 4 3 9)",
                "1 + 3 = 4 (left: 4 3 9)",
                "1 * 3 = 3 (left: 1 3 9)\n3 * 9 = 27 (left: 1 27)",
                "1 * 3 = 3 (left: 1 3 9)\n3 * 9 = 27 (left: 1 27)",
                "1 + 3 = 4 (left: 4 3 9)",
                "1 + 3 = 4 (left: 4 3 9)",
                "1 + 3 = 4 (left: 4 3 9)\n3 * 9 = 27 (left: 4 27)",
                "9 / 3 = 3 (left: 1 3 9)"
            ]
        },
        "step_4": {
            "steps": [
                "1 + 3 = 4 (left: 4 3 9)\n3 * 9 = 27 (left: 4 27)",
                "1 * 3 = 3 (left: 1 3 9)\n3 * 9 = 27 (left: 1 27)\n27 - 1 = 26 (left: 26)",
                "1 + 3 = 4 (left: 4 3 9)\n4 * 3 = 12 (left: 12 9)",
                "1 + 3 = 4 (left: 4 3 9)\n4 + 3 = 7 (left: 7 9)",
                "1 * 3 = 3 (left: 1 3 9)\n3 * 9 = 27 (left: 1 27)\n27 - 1 = 26 (left: 1 26)",
                "1 * 3 = 3 (left: 1 3 9)\n3 * 9 = 27 (left: 1 27)\n27 - 1 = 26 (left: 26)",
                "1 + 3 = 4 (left: 4 3 9)\n4 + 3 = 7 (left: 7 9)",
                "1 + 3 = 4 (left: 4 3 9)\n9 - 4 = 5 (left: 5 9)",
                "1 + 3 = 4 (left: 4 3 9)\n3 * 9 = 27 (left: 4 27)\n4 * 27 = 108 (left: 108)",
                "9 / 3 = 3 (left: 1 3 9)\n3 * 9 = 27 (left: 1 27)"
            ],
            "values": [
                1.002,
                0.003,
                0.003,
                1.002,
                20.002,
                0.002,
                1.002,
                0.003,
                0.002,
                60.0
            ],
            "resampled": [
                "0 <- 2.3",
                "1 <- 2.1",
                "2 <- 4.9",
                "3 <- 3.4",
                "4 <- 1.4",
                "5 <- 3.4",
                "6 <- 3.4",
                "7 <- 1.5",
                "8 <- 1.4",
                "9 <- INIT"
            ],
            "resampled_steps": [
                "1 + 3 = 4 (left: 4 3 9)\n9 - 3 = 6 (left: 4 6)",
                "1 * 3 = 3 (left: 1 3 9)",
                "9 / 3 = 3 (left: 1 3 9)\n3 * 9 = 27 (left: 1 27)",
                "1 * 3 = 3 (left: 1 3 9)\n3 * 9 = 27 (left: 1 27)",
                "1 + 3 = 4 (left: 4 3 9)",
                "1 * 3 = 3 (left: 1 3 9)\n3 * 9 = 27 (left: 1 27)",
                "1 * 3 = 3 (left: 1 3 9)\n3 * 9 = 27 (left: 1 27)",
                "1 * 3 = 3 (left: 1 3 9)",
                "1 + 3 = 4 (left: 4 3 9)",
                ""
            ]
        },
        "step_5": {
            "steps": [
                "1 + 3 = 4 (left: 4 3 9)\n9 - 3 = 6 (left: 4 6)\n6 / 4 = 1.5 (left: 1.5)",
                "1 * 3 = 3 (left: 1 3 9)\n1 + 3 = 4 (left: 4 9)",
                "9 / 3 = 3 (left: 1 3 9)\n3 * 9 = 27 (left: 1 27)\n1 + 27 = 28 (left: 27 28)",
                "1 * 3 = 3 (left: 1 3 9)\n3 * 9 = 27 (left: 1 27)\n27 / 1 = 27 (left: 27)",
                "1 + 3 = 4 (left: 4 3 9)\n9 + 3 = 12 (left: 4 12)",
                "1 * 3 = 3 (left: 1 3 9)\n3 * 9 = 27 (left: 1 27)\n1 * 27 = 27 (left: 27 27)",
                "1 * 3 = 3 (left: 1 3 9)\n3 * 9 = 27 (left: 1 27)\n1 * 27 = 27 (left: 27)",
                "1 * 3 = 3 (left: 1 3 9)\n3 * 9 = 27 (left: 1 27)",
                "1 + 3 = 4 (left: 4 3 9)\n3 / 9 = 0.33 (left: 0.33 9)",
                "1 + 3 = 4 (left: 4 3 9)"
            ],
            "values": [
                0.002,
                21.001,
                0.003,
                0.003,
                20.002,
                0.003,
                0.002,
                40.001,
                3.0,
                20.002
            ],
            "resampled": [
                "0 <- 5.8",
                "1 <- 2.9",
                "2 <- 5.7",
                "3 <- 3.8",
                "4 <- 1.3",
                "5 <- 5.4",
                "6 <- 2.1",
                "7 <- 4.4",
                "8 <- 3.8",
                "9 <- 5.7"
            ],
            "resampled_steps": [
                "1 + 3 = 4 (left: 4 3 9)\n3 / 9 = 0.33 (left: 0.33 9)",
                "9 / 3 = 3 (left: 1 3 9)",
                "1 * 3 = 3 (left: 1 3 9)\n3 * 9 = 27 (left: 1 27)",
                "1 + 3 = 4 (left: 4 3 9)\n3 * 9 = 27 (left: 4 27)",
                "1 + 3 = 4 (left: 4 3 9)",
                "1 + 3 = 4 (left: 4 3 9)\n9 + 3 = 12 (left: 4 12)",
                "1 * 3 = 3 (left: 1 3 9)",
                "1 * 3 = 3 (left: 1 3 9)\n3 * 9 = 27 (left: 1 27)\n27 - 1 = 26 (left: 1 26)",
                "1 + 3 = 4 (left: 4 3 9)\n3 * 9 = 27 (left: 4 27)",
                "1 * 3 = 3 (left: 1 3 9)\n3 * 9 = 27 (left: 1 27)"
            ]
        },
        "step_6": {
            "steps": [
                "1 + 3 = 4 (left: 4 3 9)\n3 / 9 = 0.33 (left: 0.33 9)\n9 / 0.33 = 27.27 (left: 27.27)",
                "9 / 3 = 3 (left: 1 3 9)\n1 + 3 = 4 (left: 4 9)",
                "1 * 3 = 3 (left: 1 3 9)\n3 * 9 = 27 (left: 1 27)\n27 / 1 = 27 (left: 27)",
                "1 + 3 = 4 (left: 4 3 9)\n3 * 9 = 27 (left: 4 27)\n4 * 27 = 108 (left: 108)",
                "1 + 3 = 4 (left: 4 3 9)\n4 * 3 = 12 (left: 12 9)",
                "1 + 3 = 4 (left: 4 3 9)\n9 + 3 = 12 (left: 4 12)\n12 - 4 = 8 (left: 4 8)",
                "1 * 3 = 3 (left: 1 3 9)\n3 * 9 = 27 (left: 1 27)",
                "1 * 3 = 3 (left: 1 3 9)\n3 * 9 = 27 (left: 1 27)\n27 - 1 = 26 (left: 1 26)\n26 - 1 = 25 (left: 25)",
                "1 + 3 = 4 (left: 4 3 9)\n3 * 9 = 27 (left: 4 27)\n4 + 27 = 31 (left: 31)",
                "1 * 3 = 3 (left: 1 3 9)\n3 * 9 = 27 (left: 1 27)\n27 - 1 = 26 (left: 26)"
            ],
            "values": [
                0.001,
                20.002,
                0.003,
                0.003,
                0.003,
                1.002,
                20.002,
                0.003,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 1.9",
                "1 <- 1.9",
                "2 <- 1.7",
                "3 <- 5.7",
                "4 <- 5.7",
                "5 <- 6.6",
                "6 <- 1.4",
                "7 <- 1.4",
                "8 <- 5.9",
                "9 <- 4.9"
            ],
            "resampled_steps": [
                "3 * 3 = 9 (left: 1 9 9)",
                "3 * 3 = 9 (left: 1 9 9)",
                "3 + 1 = 4 (left: 4 3 9)",
                "1 * 3 = 3 (left: 1 3 9)\n3 * 9 = 27 (left: 1 27)",
                "1 * 3 = 3 (left: 1 3 9)\n3 * 9 = 27 (left: 1 27)",
                "1 * 3 = 3 (left: 1 3 9)\n3 * 9 = 27 (left: 1 27)",
                "1 + 3 = 4 (left: 4 3 9)",
                "1 + 3 = 4 (left: 4 3 9)",
                "1 + 3 = 4 (left: 4 3 9)",
                "9 / 3 = 3 (left: 1 3 9)\n3 * 9 = 27 (left: 1 27)"
            ]
        },
        "step_7": {
            "steps": [
                "3 * 3 = 9 (left: 1 9 9)\n9 / 1 = 9 (left: 9 9)",
                "3 * 3 = 9 (left: 1 9 9)\n9 + 1 = 10 (left: 1 10)",
                "3 + 1 = 4 (left: 4 3 9)\n4 + 3 = 7 (left: 7 9)",
                "1 * 3 = 3 (left: 1 3 9)\n3 * 9 = 27 (left: 1 27)\n1 * 27 = 27 (left: 27)",
                "1 * 3 = 3 (left: 1 3 9)\n3 * 9 = 27 (left: 1 27)\n27 - 1 = 26 (left: 1 26)",
                "1 * 3 = 3 (left: 1 3 9)\n3 * 9 = 27 (left: 1 27)\n27 / 1 = 27 (left: 1 27)",
                "1 + 3 = 4 (left: 4 3 9)\n4 * 3 = 12 (left: 12 9)",
                "1 + 3 = 4 (left: 4 3 9)\n4 * 3 = 12 (left: 12 9)",
                "1 + 3 = 4 (left: 4 3 9)\n3 / 9 = 0.33 (left: 0.33 9)",
                "9 / 3 = 3 (left: 1 3 9)\n3 * 9 = 27 (left: 1 27)\n1 * 27 = 27 (left: 27 27)"
            ],
            "values": [
                0.003,
                0.0,
                1.002,
                0.003,
                2.001,
                0.002,
                0.003,
                20.002,
                3.0,
                0.003
            ],
            "resampled": [
                "0 <- 6.6",
                "1 <- 6.6",
                "2 <- 5.7",
                "3 <- 1.3",
                "4 <- 1.0",
                "5 <- 5.4",
                "6 <- 5.7",
                "7 <- 1.4",
                "8 <- 5.7",
                "9 <- 6.6"
            ],
            "resampled_steps": [
                "1 * 3 = 3 (left: 1 3 9)\n3 * 9 = 27 (left: 1 27)",
                "1 * 3 = 3 (left: 1 3 9)\n3 * 9 = 27 (left: 1 27)",
                "1 * 3 = 3 (left: 1 3 9)\n3 * 9 = 27 (left: 1 27)",
                "1 + 3 = 4 (left: 4 3 9)",
                "9 - 3 = 6 (left: 1 6 9)",
                "1 + 3 = 4 (left: 4 3 9)\n9 + 3 = 12 (left: 4 12)",
                "1 * 3 = 3 (left: 1 3 9)\n3 * 9 = 27 (left: 1 27)",
                "1 + 3 = 4 (left: 4 3 9)",
                "1 * 3 = 3 (left: 1 3 9)\n3 * 9 = 27 (left: 1 27)",
                "1 * 3 = 3 (left: 1 3 9)\n3 * 9 = 27 (left: 1 27)"
            ]
        },
        "step_8": {
            "steps": [
                "1 * 3 = 3 (left: 1 3 9)\n3 * 9 = 27 (left: 1 27)\n27 / 1 = 27 (left: 1 27)",
                "1 * 3 = 3 (left: 1 3 9)\n3 * 9 = 27 (left: 1 27)\n1 + 27 = 28 (left: 28)",
                "1 * 3 = 3 (left: 1 3 9)\n3 * 9 = 27 (left: 1 27)\n1 * 27 = 27 (left: 27)",
                "1 + 3 = 4 (left: 4 3 9)\n3 * 9 = 27 (left: 4 27)",
                "9 - 3 = 6 (left: 1 6 9)\n6 - 1 = 5 (left: 5 9)",
                "1 + 3 = 4 (left: 4 3 9)\n9 + 3 = 12 (left: 4 12)\n4 * 3 = 12 (left: 12 12)",
                "1 * 3 = 3 (left: 1 3 9)\n3 * 9 = 27 (left: 1 27)\n27 - 1 = 26 (left: 26)",
                "1 + 3 = 4 (left: 4 3 9)\n3 / 9 = 0.33 (left: 0.33 9)",
                "1 * 3 = 3 (left: 1 3 9)\n3 * 9 = 27 (left: 1 27)\n1 + 27 = 28 (left: 27 28)",
                "1 * 3 = 3 (left: 1 3 9)\n3 * 9 = 27 (left: 1 27)\n1 * 27 = 27 (left: 27 27)"
            ],
            "values": [
                21.0,
                0.003,
                20.002,
                21.001,
                0.003,
                40.001,
                0.003,
                2.001,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 2.9",
                "1 <- 4.9",
                "2 <- 6.1",
                "3 <- 4.4",
                "4 <- 5.1",
                "5 <- 2.3",
                "6 <- 8.2",
                "7 <- 4.9",
                "8 <- 8.3",
                "9 <- 2.9"
            ],
            "resampled_steps": [
                "9 / 3 = 3 (left: 1 3 9)",
                "9 / 3 = 3 (left: 1 3 9)\n3 * 9 = 27 (left: 1 27)",
                "9 / 3 = 3 (left: 1 3 9)\n1 + 3 = 4 (left: 4 9)",
                "1 * 3 = 3 (left: 1 3 9)\n3 * 9 = 27 (left: 1 27)\n27 - 1 = 26 (left: 1 26)",
                "1 * 3 = 3 (left: 1 3 9)\n1 + 3 = 4 (left: 4 9)",
                "1 + 3 = 4 (left: 4 3 9)\n9 - 3 = 6 (left: 4 6)",
                "1 * 3 = 3 (left: 1 3 9)\n3 * 9 = 27 (left: 1 27)\n1 * 27 = 27 (left: 27)",
                "9 / 3 = 3 (left: 1 3 9)\n3 * 9 = 27 (left: 1 27)",
                "1 + 3 = 4 (left: 4 3 9)\n3 * 9 = 27 (left: 4 27)",
                "9 / 3 = 3 (left: 1 3 9)"
            ]
        },
        "step_9": {
            "steps": [
                "9 / 3 = 3 (left: 1 3 9)\n3 / 1 = 3 (left: 3 9)",
                "9 / 3 = 3 (left: 1 3 9)\n3 * 9 = 27 (left: 1 27)\n1 + 27 = 28 (left: 28)",
                "9 / 3 = 3 (left: 1 3 9)\n1 + 3 = 4 (left: 4 9)\n9 - 4 = 5 (left: 5 9)",
                "1 * 3 = 3 (left: 1 3 9)\n3 * 9 = 27 (left: 1 27)\n27 - 1 = 26 (left: 1 26)\n1 * 26 = 26 (left: 26)",
                "1 * 3 = 3 (left: 1 3 9)\n1 + 3 = 4 (left: 4 9)\n4 + 9 = 13 (left: 9 13)",
                "1 + 3 = 4 (left: 4 3 9)\n9 - 3 = 6 (left: 4 6)\n6 - 4 = 2 (left: 2)",
                "1 * 3 = 3 (left: 1 3 9)\n3 * 9 = 27 (left: 1 27)\n1 * 27 = 27 (left: 27)\n27 + 2 = 29 (left: 2 29)",
                "9 / 3 = 3 (left: 1 3 9)\n3 * 9 = 27 (left: 1 27)\n27 - 1 = 26 (left: 26)",
                "1 + 3 = 4 (left: 4 3 9)\n3 * 9 = 27 (left: 4 27)\n27 - 4 = 23 (left: 4 23)",
                "9 / 3 = 3 (left: 1 3 9)\n9 / 3 = 3 (left: 1 3)"
            ],
            "values": [
                0.003,
                0.001,
                1.002,
                0.002,
                0.003,
                0.001,
                1.0,
                0.003,
                0.002,
                0.001
            ],
            "resampled": [
                "0 <- 6.1",
                "1 <- 5.7",
                "2 <- 8.5",
                "3 <- 4.9",
                "4 <- 6.6",
                "5 <- 3.7",
                "6 <- 5.7",
                "7 <- 8.0",
                "8 <- 7.7",
                "9 <- 4.9"
            ],
            "resampled_steps": [
                "9 / 3 = 3 (left: 1 3 9)\n1 + 3 = 4 (left: 4 9)",
                "1 * 3 = 3 (left: 1 3 9)\n3 * 9 = 27 (left: 1 27)",
                "1 + 3 = 4 (left: 4 3 9)\n9 + 3 = 12 (left: 4 12)\n4 * 3 = 12 (left: 12 12)",
                "9 / 3 = 3 (left: 1 3 9)\n3 * 9 = 27 (left: 1 27)",
                "1 * 3 = 3 (left: 1 3 9)\n3 * 9 = 27 (left: 1 27)",
                "9 / 3 = 3 (left: 1 3 9)\n3 * 9 = 27 (left: 1 27)",
                "1 * 3 = 3 (left: 1 3 9)\n3 * 9 = 27 (left: 1 27)",
                "1 * 3 = 3 (left: 1 3 9)\n3 * 9 = 27 (left: 1 27)\n27 / 1 = 27 (left: 1 27)",
                "1 + 3 = 4 (left: 4 3 9)\n4 * 3 = 12 (left: 12 9)",
                "9 / 3 = 3 (left: 1 3 9)\n3 * 9 = 27 (left: 1 27)"
            ]
        },
        "step_10": {
            "steps": [
                "9 / 3 = 3 (left: 1 3 9)\n1 + 3 = 4 (left: 4 9)\n9 / 4 = 2.25 (left: 2.25 9)",
                "1 * 3 = 3 (left: 1 3 9)\n3 * 9 = 27 (left: 1 27)\n1 * 27 = 27 (left: 27)",
                "1 + 3 = 4 (left: 4 3 9)\n9 + 3 = 12 (left: 4 12)\n4 * 3 = 12 (left: 12 12)\n12 - 12 = 0 (left: 0)",
                "9 / 3 = 3 (left: 1 3 9)\n3 * 9 = 27 (left: 1 27)\n27 / 1 = 27 (left: 1 27)",
                "1 * 3 = 3 (left: 1 3 9)\n3 * 9 = 27 (left: 1 27)\n1 * 27 = 27 (left: 27 27)",
                "9 / 3 = 3 (left: 1 3 9)\n3 * 9 = 27 (left: 1 27)\n1 * 27 = 27 (left: 27)",
                "1 * 3 = 3 (left: 1 3 9)\n3 * 9 = 27 (left: 1 27)\n1 * 27 = 27 (left: 27 27)",
                "1 * 3 = 3 (left: 1 3 9)\n3 * 9 = 27 (left: 1 27)\n27 / 1 = 27 (left: 1 27)\n1 * 27 = 27 (left: 27 27)",
                "1 + 3 = 4 (left: 4 3 9)\n4 * 3 = 12 (left: 12 9)\n12 + 9 = 21 (left: 9 21)",
                "9 / 3 = 3 (left: 1 3 9)\n3 * 9 = 27 (left: 1 27)\n1 * 27 = 27 (left: 27)"
            ],
            "values": [
                2.0,
                0.003,
                0.0,
                40.001,
                0.003,
                0.002,
                1.002,
                0.003,
                0.003,
                0.003
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 1.8547980000000002
    },
    "28": {
        "input": "7 7 12 12",
        "step_1": {
            "steps": [
                "7 + 7 = 14 (left: 14 12 12)",
                "7 - 7 = 0 (left: 0 7 12)",
                "7 + 7 = 14 (left: 12 14 12)",
                "12 - 7 = 5 (left: 5 12 12)",
                "12 / 7 = 1.71 (left: 7 12 1.71)",
                "7 + 7 = 14 (left: 12 14 12)",
                "12 - 7 = 5 (left: 7 5 5)",
                "12 - 7 = 5 (left: 5 12 12)",
                "12 / 7 = 1.714 (left: 7 12 1.714)",
                "7 + 7 = 14 (left: 12 14 12)"
            ],
            "values": [
                41.0,
                3.0,
                60.0,
                2.001,
                3.0,
                40.001,
                3.0,
                2.001,
                2.0,
                40.001
            ],
            "resampled": [
                "0 <- 1.5",
                "1 <- 1.0",
                "2 <- 1.2",
                "3 <- 1.0",
                "4 <- 1.0",
                "5 <- 1.2",
                "6 <- 1.0",
                "7 <- 1.4",
                "8 <- 1.2",
                "9 <- 1.5"
            ],
            "resampled_steps": [
                "7 + 7 = 14 (left: 12 14 12)",
                "7 + 7 = 14 (left: 14 12 12)",
                "7 + 7 = 14 (left: 12 14 12)",
                "7 + 7 = 14 (left: 14 12 12)",
                "7 + 7 = 14 (left: 14 12 12)",
                "7 + 7 = 14 (left: 12 14 12)",
                "7 + 7 = 14 (left: 14 12 12)",
                "12 / 7 = 1.71 (left: 7 12 1.71)",
                "7 + 7 = 14 (left: 12 14 12)",
                "7 + 7 = 14 (left: 12 14 12)"
            ]
        },
        "step_2": {
            "steps": [
                "7 + 7 = 14 (left: 12 14 12)\n14 - 12 = 2 (left: 2 12)",
                "7 + 7 = 14 (left: 14 12 12)\n12 - 2 = 10 (left: 14 10 12)",
                "7 + 7 = 14 (left: 12 14 12)\n14 / 12 = 1.1667 (left: 1.1667 12)",
                "7 + 7 = 14 (left: 14 12 12)\n12 - 6 = 6 (left: 6 6)",
                "7 + 7 = 14 (left: 14 12 12)\n14 - 12 = 2 (left: 2 12 12)",
                "7 + 7 = 14 (left: 12 14 12)\n14 / 12 = 1.17 (left: 1.17 12)",
                "7 + 7 = 14 (left: 14 12 12)\n12 - 14 = -2 (left: -2 12)",
                "12 / 7 = 1.71 (left: 7 12 1.71)\n7 / 12 = 0.583333 (left: 0.583333 1.71)",
                "7 + 7 = 14 (left: 12 14 12)\n12 + 14 = 26 (left: 26 12)",
                "7 + 7 = 14 (left: 12 14 12)\n14 / 12 = 1.167 (left: 1.167 12)"
            ],
            "values": [
                60.0,
                21.001,
                3.0,
                0.002,
                22.0,
                1.001,
                21.001,
                3.0,
                0.003,
                2.001
            ],
            "resampled": [
                "0 <- 1.3",
                "1 <- 1.5",
                "2 <- 2.6",
                "3 <- 1.0",
                "4 <- 2.4",
                "5 <- 1.2",
                "6 <- 1.2",
                "7 <- 1.0",
                "8 <- 2.0",
                "9 <- 2.1"
            ],
            "resampled_steps": [
                "12 - 7 = 5 (left: 5 12 12)",
                "7 + 7 = 14 (left: 12 14 12)",
                "7 + 7 = 14 (left: 14 12 12)\n12 - 14 = -2 (left: -2 12)",
                "7 + 7 = 14 (left: 14 12 12)",
                "7 + 7 = 14 (left: 14 12 12)\n14 - 12 = 2 (left: 2 12 12)",
                "7 + 7 = 14 (left: 12 14 12)",
                "7 + 7 = 14 (left: 12 14 12)",
                "7 + 7 = 14 (left: 14 12 12)",
                "7 + 7 = 14 (left: 12 14 12)\n14 - 12 = 2 (left: 2 12)",
                "7 + 7 = 14 (left: 14 12 12)\n12 - 2 = 10 (left: 14 10 12)"
            ]
        },
        "step_3": {
            "steps": [
                "12 - 7 = 5 (left: 5 12 12)\n12 / 5 = 2.4 (left: 2.4 12)",
                "7 + 7 = 14 (left: 12 14 12)\n12 + 14 = 26 (left: 26 12)",
                "7 + 7 = 14 (left: 14 12 12)\n12 - 14 = -2 (left: -2 12)\n-2 + 12 = 10 (left: 10)",
                "7 + 7 = 14 (left: 14 12 12)\n12 * 12 = 144 (left: 144)",
                "7 + 7 = 14 (left: 14 12 12)\n14 - 12 = 2 (left: 2 12 12)\n12 - 2 = 10 (left: 2 10 12)",
                "7 + 7 = 14 (left: 12 14 12)\n14 / 12 = 1.16667 (left: 1.16667 12)",
                "7 + 7 = 14 (left: 12 14 12)\n14 / 12 = 1.1666666666667 (left: 1.1666666666667 12)",
                "7 + 7 = 14 (left: 14 12 12)\n14 / 12 = 1.1667 (left: 1.1667 12)",
                "7 + 7 = 14 (left: 12 14 12)\n14 - 12 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "7 + 7 = 14 (left: 14 12 12)\n12 - 2 = 10 (left: 14 10 12)\n10 + 12 = 22 (left: 14 22)"
            ],
            "values": [
                0.003,
                0.002,
                0.0,
                0.002,
                1.002,
                2.0,
                2.001,
                1.0,
                20.0,
                0.003
            ],
            "resampled": [
                "0 <- 1.5",
                "1 <- 2.1",
                "2 <- 1.2",
                "3 <- 1.0",
                "4 <- 1.2",
                "5 <- 2.7",
                "6 <- 1.2",
                "7 <- 2.1",
                "8 <- 1.2",
                "9 <- 1.9"
            ],
            "resampled_steps": [
                "7 + 7 = 14 (left: 12 14 12)",
                "7 + 7 = 14 (left: 14 12 12)\n12 - 2 = 10 (left: 14 10 12)",
                "7 + 7 = 14 (left: 12 14 12)",
                "7 + 7 = 14 (left: 14 12 12)",
                "7 + 7 = 14 (left: 12 14 12)",
                "12 / 7 = 1.71 (left: 7 12 1.71)\n7 / 12 = 0.583333 (left: 0.583333 1.71)",
                "7 + 7 = 14 (left: 12 14 12)",
                "7 + 7 = 14 (left: 14 12 12)\n12 - 2 = 10 (left: 14 10 12)",
                "7 + 7 = 14 (left: 12 14 12)",
                "7 + 7 = 14 (left: 12 14 12)"
            ]
        },
        "step_4": {
            "steps": [
                "7 + 7 = 14 (left: 12 14 12)\n12 - 14 = -2 (left: -2 12)",
                "7 + 7 = 14 (left: 14 12 12)\n12 - 2 = 10 (left: 14 10 12)\n14 / 10 = 1.4 (left: 1.4 10 12)",
                "7 + 7 = 14 (left: 12 14 12)\n14 - 12 = 2 (left: 2 12)",
                "7 + 7 = 14 (left: 14 12 12)\n14 - 12 = 2 (left: 2 12)",
                "7 + 7 = 14 (left: 12 14 12)\n14 - 12 = 2 (left: 2 12)",
                "12 / 7 = 1.71 (left: 7 12 1.71)\n7 / 12 = 0.583333 (left: 0.583333 1.71)\n0.583333 + 1.71 = 2.293333 (left: 1.71 2.293333)",
                "7 + 7 = 14 (left: 12 14 12)\n12 - 14 = -2 (left: 12 -2 12)",
                "7 + 7 = 14 (left: 14 12 12)\n12 - 2 = 10 (left: 14 10 12)\n10 + 12 = 22 (left: 14 22)",
                "7 + 7 = 14 (left: 12 14 12)\n12 * 14 = 168 (left: 12 168)",
                "7 + 7 = 14 (left: 12 14 12)\n12 + 14 = 26 (left: 26 12)"
            ],
            "values": [
                60.0,
                1.002,
                60.0,
                60.0,
                60.0,
                1.001,
                2.001,
                0.003,
                0.002,
                0.003
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- 4.2",
                "2 <- 4.3",
                "3 <- 2.4",
                "4 <- 2.6",
                "5 <- 4.0",
                "6 <- 4.2",
                "7 <- 4.3",
                "8 <- 2.0",
                "9 <- 4.2"
            ],
            "resampled_steps": [
                "",
                "7 + 7 = 14 (left: 12 14 12)\n14 - 12 = 2 (left: 2 12)",
                "7 + 7 = 14 (left: 14 12 12)\n14 - 12 = 2 (left: 2 12)",
                "7 + 7 = 14 (left: 14 12 12)\n14 - 12 = 2 (left: 2 12 12)",
                "7 + 7 = 14 (left: 14 12 12)\n12 - 14 = -2 (left: -2 12)",
                "7 + 7 = 14 (left: 12 14 12)\n12 - 14 = -2 (left: -2 12)",
                "7 + 7 = 14 (left: 12 14 12)\n14 - 12 = 2 (left: 2 12)",
                "7 + 7 = 14 (left: 14 12 12)\n14 - 12 = 2 (left: 2 12)",
                "7 + 7 = 14 (left: 12 14 12)\n14 - 12 = 2 (left: 2 12)",
                "7 + 7 = 14 (left: 12 14 12)\n14 - 12 = 2 (left: 2 12)"
            ]
        },
        "step_5": {
            "steps": [
                "12 - 7 = 5 (left: 5 12 12)",
                "7 + 7 = 14 (left: 12 14 12)\n14 - 12 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6)",
                "7 + 7 = 14 (left: 14 12 12)\n14 - 12 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "7 + 7 = 14 (left: 14 12 12)\n14 - 12 = 2 (left: 2 12 12)\n12 + 2 = 14 (left: 12 14)",
                "7 + 7 = 14 (left: 14 12 12)\n12 - 14 = -2 (left: -2 12)\n-2 + 12 = 10 (left: 10)",
                "7 + 7 = 14 (left: 12 14 12)\n12 - 14 = -2 (left: -2 12)\n-2 * 12 = -24 (left: -24)",
                "7 + 7 = 14 (left: 12 14 12)\n14 - 12 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6)",
                "7 + 7 = 14 (left: 14 12 12)\n14 - 12 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6)",
                "7 + 7 = 14 (left: 12 14 12)\n14 - 12 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6)",
                "7 + 7 = 14 (left: 12 14 12)\n14 - 12 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)"
            ],
            "values": [
                3.0,
                0.003,
                40.0,
                0.003,
                0.003,
                0.002,
                0.003,
                0.003,
                0.003,
                0.002
            ],
            "resampled": [
                "0 <- 4.3",
                "1 <- 4.3",
                "2 <- 1.2",
                "3 <- 2.0",
                "4 <- 2.1",
                "5 <- 4.0",
                "6 <- 1.5",
                "7 <- 4.2",
                "8 <- 5.2",
                "9 <- 4.0"
            ],
            "resampled_steps": [
                "7 + 7 = 14 (left: 14 12 12)\n14 - 12 = 2 (left: 2 12)",
                "7 + 7 = 14 (left: 14 12 12)\n14 - 12 = 2 (left: 2 12)",
                "7 + 7 = 14 (left: 12 14 12)",
                "7 + 7 = 14 (left: 12 14 12)\n14 - 12 = 2 (left: 2 12)",
                "7 + 7 = 14 (left: 14 12 12)\n12 - 2 = 10 (left: 14 10 12)",
                "7 + 7 = 14 (left: 12 14 12)\n12 - 14 = -2 (left: -2 12)",
                "7 + 7 = 14 (left: 12 14 12)",
                "7 + 7 = 14 (left: 12 14 12)\n14 - 12 = 2 (left: 2 12)",
                "7 + 7 = 14 (left: 14 12 12)\n14 - 12 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "7 + 7 = 14 (left: 12 14 12)\n12 - 14 = -2 (left: -2 12)"
            ]
        },
        "step_6": {
            "steps": [
                "7 + 7 = 14 (left: 14 12 12)\n14 - 12 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "7 + 7 = 14 (left: 14 12 12)\n14 - 12 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "7 + 7 = 14 (left: 12 14 12)\n12 + 14 = 26 (left: 26 12)",
                "7 + 7 = 14 (left: 12 14 12)\n14 - 12 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)",
                "7 + 7 = 14 (left: 14 12 12)\n12 - 2 = 10 (left: 14 10 12)\n10 + 12 = 22 (left: 14 22)",
                "7 + 7 = 14 (left: 12 14 12)\n12 - 14 = -2 (left: -2 12)\n-2 * 12 = -24 (left: -24)",
                "7 + 7 = 14 (left: 12 14 12)\n14 / 12 = 1.1666666666667 (left: 1.1666666666667 12)",
                "7 + 7 = 14 (left: 12 14 12)\n14 - 12 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)",
                "7 + 7 = 14 (left: 14 12 12)\n14 - 12 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (7 + 7) - (12 - 12) * 12 = 24",
                "7 + 7 = 14 (left: 12 14 12)\n12 - 14 = -2 (left: -2 12)\n12 - (-2) = 14 (left: 14)"
            ],
            "values": [
                40.0,
                40.0,
                0.003,
                0.003,
                0.003,
                0.002,
                2.001,
                0.003,
                20.002,
                0.002
            ],
            "resampled": [
                "0 <- 4.4",
                "1 <- 4.2",
                "2 <- 4.0",
                "3 <- 4.2",
                "4 <- 2.6",
                "5 <- INIT",
                "6 <- 6.1",
                "7 <- 5.2",
                "8 <- 1.1",
                "9 <- 4.2"
            ],
            "resampled_steps": [
                "7 + 7 = 14 (left: 12 14 12)\n14 - 12 = 2 (left: 2 12)",
                "7 + 7 = 14 (left: 12 14 12)\n14 - 12 = 2 (left: 2 12)",
                "7 + 7 = 14 (left: 12 14 12)\n12 - 14 = -2 (left: -2 12)",
                "7 + 7 = 14 (left: 12 14 12)\n14 - 12 = 2 (left: 2 12)",
                "7 + 7 = 14 (left: 14 12 12)\n12 - 14 = -2 (left: -2 12)",
                "",
                "7 + 7 = 14 (left: 14 12 12)\n14 - 12 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "7 + 7 = 14 (left: 14 12 12)\n14 - 12 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "7 - 7 = 0 (left: 0 7 12)",
                "7 + 7 = 14 (left: 12 14 12)\n14 - 12 = 2 (left: 2 12)"
            ]
        },
        "step_7": {
            "steps": [
                "7 + 7 = 14 (left: 12 14 12)\n14 - 12 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)",
                "7 + 7 = 14 (left: 12 14 12)\n14 - 12 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)",
                "7 + 7 = 14 (left: 12 14 12)\n12 - 14 = -2 (left: -2 12)\n12 / (-2) = -6 (left: -6)",
                "7 + 7 = 14 (left: 12 14 12)\n14 - 12 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "7 + 7 = 14 (left: 14 12 12)\n12 - 14 = -2 (left: -2 12)\n12 / -2 = -6 (left: -6)",
                "12 - 7 = 5 (left: 7 12 5)",
                "7 + 7 = 14 (left: 14 12 12)\n14 - 12 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (7 + 7) * (12 - 12) = 24",
                "7 + 7 = 14 (left: 14 12 12)\n14 - 12 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (7 + 7) * (12 - 12) = 24",
                "7 - 7 = 0 (left: 0 7 12)\n7 / 12 = 0.5833 (left: 0 0.5833 12)",
                "7 + 7 = 14 (left: 12 14 12)\n14 - 12 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)"
            ],
            "values": [
                0.003,
                0.002,
                0.001,
                60.0,
                0.0,
                3.0,
                0.003,
                40.001,
                2.001,
                0.003
            ],
            "resampled": [
                "0 <- 1.5",
                "1 <- 2.0",
                "2 <- 1.0",
                "3 <- 4.2",
                "4 <- 5.2",
                "5 <- 7.3",
                "6 <- 7.3",
                "7 <- 1.2",
                "8 <- 4.0",
                "9 <- 4.4"
            ],
            "resampled_steps": [
                "7 + 7 = 14 (left: 12 14 12)",
                "7 + 7 = 14 (left: 12 14 12)\n14 - 12 = 2 (left: 2 12)",
                "7 + 7 = 14 (left: 14 12 12)",
                "7 + 7 = 14 (left: 12 14 12)\n14 - 12 = 2 (left: 2 12)",
                "7 + 7 = 14 (left: 14 12 12)\n14 - 12 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "7 + 7 = 14 (left: 12 14 12)\n14 - 12 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "7 + 7 = 14 (left: 12 14 12)\n14 - 12 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "7 + 7 = 14 (left: 12 14 12)",
                "7 + 7 = 14 (left: 12 14 12)\n12 - 14 = -2 (left: -2 12)",
                "7 + 7 = 14 (left: 12 14 12)\n14 - 12 = 2 (left: 2 12)"
            ]
        },
        "step_8": {
            "steps": [
                "7 + 7 = 14 (left: 12 14 12)\n12 + 14 = 26 (left: 12 26 12)",
                "7 + 7 = 14 (left: 12 14 12)\n14 - 12 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)",
                "7 + 7 = 14 (left: 14 12 12)\n14 + 12 = 26 (left: 26 12)",
                "7 + 7 = 14 (left: 12 14 12)\n14 - 12 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)",
                "7 + 7 = 14 (left: 14 12 12)\n14 - 12 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (7 + 7) - (12 - 12) * 12 = 24",
                "7 + 7 = 14 (left: 12 14 12)\n14 - 12 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (7 + 7) * (12 - 12) = 24",
                "7 + 7 = 14 (left: 12 14 12)\n14 - 12 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (7 + 7) * (12 - 12) = 24",
                "7 + 7 = 14 (left: 12 14 12)\n12 * 14 = 168 (left: 168 12)",
                "7 + 7 = 14 (left: 12 14 12)\n12 - 14 = -2 (left: -2 12)\n12 / (-2) = -6 (left: -6)",
                "7 + 7 = 14 (left: 12 14 12)\n14 - 12 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)"
            ],
            "values": [
                1.002,
                0.002,
                1.002,
                0.002,
                40.001,
                20.002,
                20.002,
                0.003,
                0.002,
                60.0
            ],
            "resampled": [
                "0 <- 1.9",
                "1 <- 8.9",
                "2 <- 7.3",
                "3 <- 6.1",
                "4 <- 8.4",
                "5 <- 7.7",
                "6 <- 7.3",
                "7 <- 6.6",
                "8 <- 8.4",
                "9 <- 8.9"
            ],
            "resampled_steps": [
                "7 + 7 = 14 (left: 12 14 12)",
                "7 + 7 = 14 (left: 12 14 12)\n14 - 12 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "7 + 7 = 14 (left: 12 14 12)\n14 - 12 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "7 + 7 = 14 (left: 14 12 12)\n14 - 12 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "7 + 7 = 14 (left: 14 12 12)\n14 - 12 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (7 + 7) - (12 - 12) * 12 = 24",
                "7 + 7 = 14 (left: 14 12 12)\n14 - 12 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (7 + 7) * (12 - 12) = 24",
                "7 + 7 = 14 (left: 12 14 12)\n14 - 12 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "7 + 7 = 14 (left: 12 14 12)\n14 / 12 = 1.1666666666667 (left: 1.1666666666667 12)",
                "7 + 7 = 14 (left: 14 12 12)\n14 - 12 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (7 + 7) - (12 - 12) * 12 = 24",
                "7 + 7 = 14 (left: 12 14 12)\n14 - 12 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)"
            ]
        },
        "step_9": {
            "steps": [
                "7 + 7 = 14 (left: 12 14 12)\n12 - 14 = -2 (left: -2 12)",
                "7 + 7 = 14 (left: 12 14 12)\n14 - 12 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (7 + 7) * (12 - 12) = 24",
                "7 + 7 = 14 (left: 12 14 12)\n14 - 12 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (7 + 7) * (12 - 12) = 24",
                "7 + 7 = 14 (left: 14 12 12)\n14 - 12 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (7 + 7) * (12 - 12) = 24",
                "7 + 7 = 14 (left: 14 12 12)\n14 - 12 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (7 + 7) - (12 - 12) * 12 = 24\nInput: 3 3 8 8\nSteps:\n3 + 8 = 11 (left: 3 11 8)\n11 - 8 = 3 (left: 3 3)\n3 * 3 = 9 (left: 9)\n9 * 8 = 72 (left: 72)\nAnswer: ((3 + 8) - 3) * 9 = 72",
                "7 + 7 = 14 (left: 14 12 12)\n14 - 12 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (7 + 7) * (12 - 12) = 24\nInput: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6)\n3 * 6 = 18 (left: 18)\n18 + 6 = 24 (left: 24)\nAnswer: 3 * (3 * 8) = 24",
                "7 + 7 = 14 (left: 12 14 12)\n14 - 12 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (7 + 7) * (12 - 12) = 24",
                "7 + 7 = 14 (left: 12 14 12)\n14 / 12 = 1.1666666666667 (left: 1.1666666666667 12)\n12 - 1.1666666666667 = 10.8333333333333 (left: 10.8333333333333 12)",
                "7 + 7 = 14 (left: 14 12 12)\n14 - 12 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (7 + 7) - (12 - 12) * 12 = 24\nInput: 3 3 6 8\nSteps:\n3 + 8 = 11 (left: 3 6 11)\n11 - 6 = 5 (left: 3 5)\n5 * 3 = 15 (left: 15)\n15 + 6 = 21 (left: 21)\n21 + 3 = 24 (left: 24)\nAnswer: ((3 + 8) - 6) * 3 + 6 + 3 = 24",
                "7 + 7 = 14 (left: 12 14 12)\n14 - 12 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (7 + 7) * (12 - 12) = 24"
            ],
            "values": [
                2.001,
                40.001,
                0.003,
                60.0,
                20.0,
                20.0,
                40.001,
                1.002,
                20.0,
                60.0
            ],
            "resampled": [
                "0 <- 6.0",
                "1 <- 5.2",
                "2 <- 9.3",
                "3 <- 7.3",
                "4 <- 8.9",
                "5 <- 8.6",
                "6 <- 4.2",
                "7 <- 4.2",
                "8 <- 1.5",
                "9 <- 9.6"
            ],
            "resampled_steps": [
                "7 + 7 = 14 (left: 14 12 12)\n14 - 12 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "7 + 7 = 14 (left: 14 12 12)\n14 - 12 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "7 + 7 = 14 (left: 14 12 12)\n14 - 12 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (7 + 7) * (12 - 12) = 24",
                "7 + 7 = 14 (left: 12 14 12)\n14 - 12 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "7 + 7 = 14 (left: 12 14 12)\n14 - 12 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "7 + 7 = 14 (left: 12 14 12)\n14 - 12 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (7 + 7) * (12 - 12) = 24",
                "7 + 7 = 14 (left: 12 14 12)\n14 - 12 = 2 (left: 2 12)",
                "7 + 7 = 14 (left: 12 14 12)\n14 - 12 = 2 (left: 2 12)",
                "7 + 7 = 14 (left: 12 14 12)",
                "7 + 7 = 14 (left: 12 14 12)\n14 - 12 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (7 + 7) * (12 - 12) = 24"
            ]
        },
        "step_10": {
            "steps": [
                "7 + 7 = 14 (left: 14 12 12)\n14 - 12 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (7 + 7) * (12 - 12) = 24",
                "7 + 7 = 14 (left: 14 12 12)\n14 - 12 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (7 + 7) - 12 * 12 = 24",
                "7 + 7 = 14 (left: 14 12 12)\n14 - 12 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (7 + 7) * (12 - 12) = 24\nInput: 3 3 6 8\nSteps:\n3 * 3 = 9 (left: 6 8 9)\n9 - 6 = 3 (left: 3 8 3)\n3 * 8 = 24 (left: 24)\nAnswer: (3 * 3) * (8 - 6) = 24",
                "7 + 7 = 14 (left: 12 14 12)\n14 - 12 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (7 + 7) * (12 - 12) = 24",
                "7 + 7 = 14 (left: 12 14 12)\n14 - 12 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (7 + 7) - 12 * 12 = 24",
                "7 + 7 = 14 (left: 12 14 12)\n14 - 12 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (7 + 7) * (12 - 12) = 24\nInput: 3 3 3 8\nSteps:\n3 * 3 = 9 (left: 3 8 9)\n9 - 3 = 6 (left: 6 8)\n6 * 8 = 48 (left: 48)\nAnswer: (3 * 3) * (8 - 6) = 24",
                "7 + 7 = 14 (left: 12 14 12)\n14 - 12 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6)",
                "7 + 7 = 14 (left: 12 14 12)\n14 - 12 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)",
                "7 + 7 = 14 (left: 12 14 12)\n12 - 14 = -2 (left: -2 12)",
                "7 + 7 = 14 (left: 12 14 12)\n14 - 12 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (7 + 7) * (12 - 12) = 24\nInput: 3 3 8 8\nSteps:\n3 + 8 = 11 (left: 3 11 8)\n11 - 8 = 3 (left: 3 3)\n3 * 3 = 9 (left: 9)\n9 * 8 = 72 (left: 72)\nAnswer: ((3 + 8) - 3) * 8 = 72"
            ],
            "values": [
                0.003,
                40.001,
                60.0,
                20.002,
                0.003,
                40.0,
                0.001,
                0.003,
                2.0,
                60.0
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 1.9413980000000004
    },
    "29": {
        "input": "4 6 7 7",
        "step_1": {
            "steps": [
                "7 / 4 = 1.75 (left: 1.75 6 7)",
                "7 + 4 = 11 (left: 6 11 7)",
                "4 + 6 = 10 (left: 7 7 10)",
                "6 + 4 = 10 (left: 7 7 10)",
                "7 - 6 = 1 (left: 1 7 7)",
                "6 / 4 = 1.5 (left: 1.5 7 7)",
                "7 - 6 = 1 (left: 4 1 7)",
                "4 + 6 = 10 (left: 7 7 10)",
                "7 - 6 = 1 (left: 4 1 7)",
                "6 / 4 = 1.5 (left: 1.5 7 7)"
            ],
            "values": [
                3.0,
                22.0,
                22.0,
                41.0,
                1.002,
                1.002,
                41.0,
                41.0,
                60.0,
                3.0
            ],
            "resampled": [
                "0 <- 1.8",
                "1 <- 1.6",
                "2 <- 1.3",
                "3 <- INIT",
                "4 <- 1.7",
                "5 <- 1.2",
                "6 <- 1.7",
                "7 <- 1.3",
                "8 <- 1.8",
                "9 <- 1.2"
            ],
            "resampled_steps": [
                "7 - 6 = 1 (left: 4 1 7)",
                "7 - 6 = 1 (left: 4 1 7)",
                "6 + 4 = 10 (left: 7 7 10)",
                "",
                "4 + 6 = 10 (left: 7 7 10)",
                "4 + 6 = 10 (left: 7 7 10)",
                "4 + 6 = 10 (left: 7 7 10)",
                "6 + 4 = 10 (left: 7 7 10)",
                "7 - 6 = 1 (left: 4 1 7)",
                "4 + 6 = 10 (left: 7 7 10)"
            ]
        },
        "step_2": {
            "steps": [
                "7 - 6 = 1 (left: 4 1 7)\n7 / 1 = 7 (left: 4 7)",
                "7 - 6 = 1 (left: 4 1 7)\n4 / 1 = 4 (left: 4 7)",
                "6 + 4 = 10 (left: 7 7 10)\n7 - 7 = 0 (left: 0 10)",
                "7 / 4 = 1.75 (left: 1.75 6 7)",
                "4 + 6 = 10 (left: 7 7 10)\n10 - 7 = 3 (left: 3)",
                "4 + 6 = 10 (left: 7 7 10)\n10 / 7 = 1.43 (left: 1.43 7)",
                "4 + 6 = 10 (left: 7 7 10)\n7 * 7 = 49 (left: 49 10)",
                "6 + 4 = 10 (left: 7 7 10)\n10 * 7 = 70 (left: 7 70)",
                "7 - 6 = 1 (left: 4 1 7)\n7 - 1 = 6 (left: 4 6)",
                "4 + 6 = 10 (left: 7 7 10)\n10 / 7 = 1.42857 (left: 1.42857)"
            ],
            "values": [
                1.002,
                1.002,
                40.0,
                2.001,
                0.0,
                0.0,
                0.003,
                2.001,
                60.0,
                0.003
            ],
            "resampled": [
                "0 <- 1.6",
                "1 <- 2.8",
                "2 <- 1.6",
                "3 <- 1.7",
                "4 <- 1.0",
                "5 <- 1.3",
                "6 <- 2.8",
                "7 <- 1.6",
                "8 <- 1.8",
                "9 <- 1.8"
            ],
            "resampled_steps": [
                "7 - 6 = 1 (left: 4 1 7)",
                "7 - 6 = 1 (left: 4 1 7)\n7 - 1 = 6 (left: 4 6)",
                "7 - 6 = 1 (left: 4 1 7)",
                "4 + 6 = 10 (left: 7 7 10)",
                "7 / 4 = 1.75 (left: 1.75 6 7)",
                "6 + 4 = 10 (left: 7 7 10)",
                "7 - 6 = 1 (left: 4 1 7)\n7 - 1 = 6 (left: 4 6)",
                "7 - 6 = 1 (left: 4 1 7)",
                "7 - 6 = 1 (left: 4 1 7)",
                "7 - 6 = 1 (left: 4 1 7)"
            ]
        },
        "step_3": {
            "steps": [
                "7 - 6 = 1 (left: 4 1 7)\n4 * 1 = 4 (left: 4 7)",
                "7 - 6 = 1 (left: 4 1 7)\n7 - 1 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "7 - 6 = 1 (left: 4 1 7)\n1 + 7 = 8 (left: 4 8)",
                "4 + 6 = 10 (left: 7 7 10)\n7 - 7 = 0 (left: 0 10)",
                "7 / 4 = 1.75 (left: 1.75 6 7)\n1.75 + 6.25 = 8 (left: 8 7)",
                "6 + 4 = 10 (left: 7 7 10)\n7 * 7 = 49 (left: 49 10)",
                "7 - 6 = 1 (left: 4 1 7)\n7 - 1 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "7 - 6 = 1 (left: 4 1 7)\n7 - 1 = 6 (left: 4 6)",
                "7 - 6 = 1 (left: 4 1 7)\n7 - 1 = 6 (left: 4 6)",
                "7 - 6 = 1 (left: 4 1 7)\n1 + 7 = 8 (left: 4 8)"
            ],
            "values": [
                2.001,
                20.0,
                0.003,
                20.002,
                1.002,
                0.003,
                60.0,
                60.0,
                60.0,
                20.002
            ],
            "resampled": [
                "0 <- 1.1",
                "1 <- 1.8",
                "2 <- 2.8",
                "3 <- 1.8",
                "4 <- 1.8",
                "5 <- 2.0",
                "6 <- 3.6",
                "7 <- 3.8",
                "8 <- 1.8",
                "9 <- 3.6"
            ],
            "resampled_steps": [
                "7 + 4 = 11 (left: 6 11 7)",
                "7 - 6 = 1 (left: 4 1 7)",
                "7 - 6 = 1 (left: 4 1 7)\n7 - 1 = 6 (left: 4 6)",
                "7 - 6 = 1 (left: 4 1 7)",
                "7 - 6 = 1 (left: 4 1 7)",
                "7 - 6 = 1 (left: 4 1 7)\n7 / 1 = 7 (left: 4 7)",
                "7 - 6 = 1 (left: 4 1 7)\n7 - 1 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "7 - 6 = 1 (left: 4 1 7)\n7 - 1 = 6 (left: 4 6)",
                "7 - 6 = 1 (left: 4 1 7)",
                "7 - 6 = 1 (left: 4 1 7)\n7 - 1 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)"
            ]
        },
        "step_4": {
            "steps": [
                "7 + 4 = 11 (left: 6 11 7)\n6 * 11 = 66 (left: 66 7)",
                "7 - 6 = 1 (left: 4 1 7)\n1 + 7 = 8 (left: 4 8)",
                "7 - 6 = 1 (left: 4 1 7)\n7 - 1 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "7 - 6 = 1 (left: 4 1 7)\n7 - 1 = 6 (left: 4 6)",
                "7 - 6 = 1 (left: 4 1 7)\n4 * 1 = 4 (left: 4 7)",
                "7 - 6 = 1 (left: 4 1 7)\n7 / 1 = 7 (left: 4 7)\n4 + 7 = 11 (left: 11)",
                "7 - 6 = 1 (left: 4 1 7)\n7 - 1 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * (7 - (7 - 6)) = 24",
                "7 - 6 = 1 (left: 4 1 7)\n7 - 1 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "7 - 6 = 1 (left: 4 1 7)\n7 + 1 = 8 (left: 4 8)",
                "7 - 6 = 1 (left: 4 1 7)\n7 - 1 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * (7 - (7 - 6)) = 24"
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            }
        ],
        "cost": 1.9762920000000002
    },
    "30": {
        "input": "1 1 2 13",
        "step_1": {
            "steps": [
                "1 + 1 = 2 (left: 2 2 13)",
                "13 - 1 = 12 (left: 1 2 12)",
                "2 + 1 = 3 (left: 3 2 13)",
                "13 - 2 = 11 (left: 1 1 11)",
                "2 + 1 = 3 (left: 1 3 13)",
                "2 * 1 = 2 (left: 2 1 13)",
                "1 * 2 = 2 (left: 2 2 13)",
                "13 - 1 = 12 (left: 1 2 12)",
                "1 + 1 = 2 (left: 2 2 13)",
                "1 * 2 = 2 (left: 2 13 2)"
            ],
            "values": [
                20.002,
                60.0,
                0.003,
                0.003,
                0.003,
                0.003,
                20.002,
                41.0,
                1.002,
                1.001
            ],
            "resampled": [
                "0 <- 1.0",
                "1 <- 1.0",
                "2 <- 1.1",
                "3 <- INIT",
                "4 <- 1.7",
                "5 <- 1.1",
                "6 <- 1.1",
                "7 <- INIT",
                "8 <- 1.7",
                "9 <- INIT"
            ],
            "resampled_steps": [
                "1 + 1 = 2 (left: 2 2 13)",
                "1 + 1 = 2 (left: 2 2 13)",
                "13 - 1 = 12 (left: 1 2 12)",
                "",
                "13 - 1 = 12 (left: 1 2 12)",
                "13 - 1 = 12 (left: 1 2 12)",
                "13 - 1 = 12 (left: 1 2 12)",
                "",
                "13 - 1 = 12 (left: 1 2 12)",
                ""
            ]
        },
        "step_2": {
            "steps": [
                "1 + 1 = 2 (left: 2 2 13)\n2 + 2 = 4 (left: 4 13)",
                "1 + 1 = 2 (left: 2 2 13)\n2 + 2 = 4 (left: 4 13)",
                "13 - 1 = 12 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)",
                "13 - 1 = 12 (left: 2 12 1)",
                "13 - 1 = 12 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)",
                "13 - 1 = 12 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)",
                "13 - 1 = 12 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)",
                "13 / 2 = 6.5 (left: 1 6.5 2)",
                "13 - 1 = 12 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)",
                "13 - 2 = 11 (left: 1 11 13)"
            ],
            "values": [
                1.001,
                1.002,
                60.0,
                60.0,
                60.0,
                21.001,
                21.001,
                3.0,
                60.0,
                20.002
            ],
            "resampled": [
                "0 <- 2.8",
                "1 <- 2.4",
                "2 <- 2.2",
                "3 <- 2.6",
                "4 <- 1.1",
                "5 <- 2.4",
                "6 <- INIT",
                "7 <- 2.8",
                "8 <- 1.1",
                "9 <- 2.4"
            ],
            "resampled_steps": [
                "13 - 1 = 12 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)",
                "13 - 1 = 12 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)",
                "13 - 1 = 12 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)",
                "13 - 1 = 12 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)",
                "13 - 1 = 12 (left: 1 2 12)",
                "13 - 1 = 12 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)",
                "",
                "13 - 1 = 12 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)",
                "13 - 1 = 12 (left: 1 2 12)",
                "13 - 1 = 12 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)"
            ]
        },
        "step_3": {
            "steps": [
                "13 - 1 = 12 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n24 / 1 = 24 (left: 24)",
                "13 - 1 = 12 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)\n1 + 6 = 7 (left: 7)",
                "13 - 1 = 12 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)\n1 + 6 = 7 (left: 7)",
                "13 - 1 = 12 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)\n1 + 6 = 7 (left: 7)",
                "13 - 1 = 12 (left: 1 2 12)\n12 - 2 = 10 (left: 1 10)",
                "13 - 1 = 12 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)\n6 - 1 = 5 (left: 5)",
                "1 + 1 = 2 (left: 2 2 13)",
                "13 - 1 = 12 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n24 * 1 = 24 (left: 24)",
                "13 - 1 = 12 (left: 1 2 12)\n12 / 1 = 12 (left: 2 12)",
                "13 - 1 = 12 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)\n6 / 1 = 6 (left: 6)"
            ],
            "values": [
                60.0,
                0.002,
                0.002,
                0.001,
                1.001,
                0.002,
                0.003,
                20.0,
                60.0,
                0.003
            ],
            "resampled": [
                "0 <- 2.9",
                "1 <- 2.8",
                "2 <- 2.4",
                "3 <- 2.3",
                "4 <- 1.6",
                "5 <- 2.2",
                "6 <- 3.0",
                "7 <- 3.0",
                "8 <- 2.8",
                "9 <- 2.4"
            ],
            "resampled_steps": [
                "13 - 2 = 11 (left: 1 11 13)",
                "13 - 1 = 12 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)",
                "13 - 1 = 12 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)",
                "13 - 1 = 12 (left: 2 12 1)",
                "1 * 2 = 2 (left: 2 2 13)",
                "13 - 1 = 12 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)",
                "13 - 1 = 12 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n24 / 1 = 24 (left: 24)",
                "13 - 1 = 12 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n24 / 1 = 24 (left: 24)",
                "13 - 1 = 12 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)",
                "13 - 1 = 12 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)"
            ]
        },
        "step_4": {
            "steps": [
                "13 - 2 = 11 (left: 1 11 13)\n11 - 1 = 10 (left: 10 13)",
                "13 - 1 = 12 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n1 + 24 = 25 (left: 25)",
                "13 - 1 = 12 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)\n1 + 6 = 7 (left: 7)",
                "13 - 1 = 12 (left: 2 12 1)\n2 * 12 = 24 (left: 24 1)",
                "1 * 2 = 2 (left: 2 2 13)\n2 * 2 = 4 (left: 4 13)",
                "13 - 1 = 12 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)\n6 / 1 = 6 (left: 6)",
                "13 - 1 = 12 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n24 / 1 = 24 (left: 24)\nAnswer: (13 - 1) * 2 / 1 = 24",
                "13 - 1 = 12 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n24 / 1 = 24 (left: 24)\nAnswer: (2 * (13 - 1)) / 1 = 24",
                "13 - 1 = 12 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n24 / 1 = 24 (left: 24)",
                "13 - 1 = 12 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)\n1 * 6 = 6 (left: 6)"
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 2.004974
    },
    "31": {
        "input": "1 1 5 6",
        "step_1": {
            "steps": [
                "1 * 5 = 5 (left: 1 5 6)",
                "1 * 1 = 1 (left: 1 5 6)",
                "5 + 1 = 6 (left: 1 6 6)",
                "1 * 5 = 5 (left: 1 5 6)",
                "5 + 1 = 6 (left: 6 5 6)",
                "6 - 1 = 5 (left: 1 5 6)",
                "1 + 5 = 6 (left: 6 6 6)",
                "6 - 1 = 5 (left: 1 5 6)",
                "6 - 1 = 5 (left: 1 5 6)",
                "1 * 1 = 1 (left: 1 5 6)"
            ],
            "values": [
                3.0,
                3.0,
                22.0,
                22.0,
                60.0,
                22.0,
                1.001,
                22.0,
                60.0,
                22.0
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- 1.4",
                "2 <- 1.7",
                "3 <- 1.8",
                "4 <- 1.4",
                "5 <- 1.7",
                "6 <- 1.4",
                "7 <- INIT",
                "8 <- 1.9",
                "9 <- 1.8"
            ],
            "resampled_steps": [
                "",
                "5 + 1 = 6 (left: 6 5 6)",
                "6 - 1 = 5 (left: 1 5 6)",
                "6 - 1 = 5 (left: 1 5 6)",
                "5 + 1 = 6 (left: 6 5 6)",
                "6 - 1 = 5 (left: 1 5 6)",
                "5 + 1 = 6 (left: 6 5 6)",
                "",
                "1 * 1 = 1 (left: 1 5 6)",
                "6 - 1 = 5 (left: 1 5 6)"
            ]
        },
        "step_2": {
            "steps": [
                "1 * 1 = 1 (left: 1 5 6)",
                "5 + 1 = 6 (left: 6 5 6)\n6 / 5 = 1.2 (left: 1.2 6)",
                "6 - 1 = 5 (left: 1 5 6)\n6 / 1 = 6 (left: 6 6)",
                "6 - 1 = 5 (left: 1 5 6)\n6 - 1 = 5 (left: 5 6)",
                "5 + 1 = 6 (left: 6 5 6)\n6 / 5 = 1.2 (left: 1.2 6)",
                "6 - 1 = 5 (left: 1 5 6)\n5 + 1 = 6 (left: 6 6)",
                "5 + 1 = 6 (left: 6 5 6)\n6 * 5 = 30 (left: 30 6)",
                "6 - 1 = 5 (left: 1 5 6)",
                "1 * 1 = 1 (left: 1 5 6)\n6 / 1 = 6 (left: 5 6)",
                "6 - 1 = 5 (left: 1 5 6)\n5 + 1 = 6 (left: 6 6)"
            ],
            "values": [
                22.0,
                1.001,
                21.001,
                1.002,
                2.0,
                2.001,
                41.0,
                22.0,
                1.002,
                20.001
            ],
            "resampled": [
                "0 <- 1.2",
                "1 <- 2.6",
                "2 <- 2.7",
                "3 <- 1.5",
                "4 <- 1.4",
                "5 <- 1.2",
                "6 <- 2.1",
                "7 <- 2.7",
                "8 <- 2.2",
                "9 <- 1.4"
            ],
            "resampled_steps": [
                "5 + 1 = 6 (left: 1 6 6)",
                "5 + 1 = 6 (left: 6 5 6)\n6 * 5 = 30 (left: 30 6)",
                "6 - 1 = 5 (left: 1 5 6)",
                "6 - 1 = 5 (left: 1 5 6)",
                "5 + 1 = 6 (left: 6 5 6)",
                "5 + 1 = 6 (left: 1 6 6)",
                "5 + 1 = 6 (left: 6 5 6)\n6 / 5 = 1.2 (left: 1.2 6)",
                "6 - 1 = 5 (left: 1 5 6)",
                "6 - 1 = 5 (left: 1 5 6)\n6 / 1 = 6 (left: 6 6)",
                "5 + 1 = 6 (left: 6 5 6)"
            ]
        },
        "step_3": {
            "steps": [
                "5 + 1 = 6 (left: 1 6 6)\n6 / 1 = 6 (left: 6 6)",
                "5 + 1 = 6 (left: 6 5 6)\n6 * 5 = 30 (left: 30 6)\n30 * 6 = 180 (left: 6 180)",
                "6 - 1 = 5 (left: 1 5 6)\n1 + 5 = 6 (left: 6 6)",
                "6 - 1 = 5 (left: 1 5 6)\n1 + 5 = 6 (left: 6 6)",
                "5 + 1 = 6 (left: 6 5 6)\n5 + 6 = 11 (left: 6 11)",
                "5 + 1 = 6 (left: 1 6 6)\n1 + 6 = 7 (left: 6 7)",
                "5 + 1 = 6 (left: 6 5 6)\n6 / 5 = 1.2 (left: 1.2 6)\n6 - 1.2 = 4.8 (left: 4.8)",
                "6 - 1 = 5 (left: 1 5 6)\n6 / 1 = 6 (left: 6 6)",
                "6 - 1 = 5 (left: 1 5 6)\n6 / 1 = 6 (left: 6 6)\n6 - 6 = 0 (left: 0)",
                "5 + 1 = 6 (left: 6 5 6)\n6 + 5 = 11 (left: 11 6)"
            ],
            "values": [
                21.001,
                41.0,
                21.001,
                21.001,
                0.003,
                0.003,
                0.001,
                21.001,
                0.001,
                0.002
            ],
            "resampled": [
                "0 <- 3.3",
                "1 <- 2.0",
                "2 <- 3.0",
                "3 <- 2.2",
                "4 <- 3.0",
                "5 <- 3.0",
                "6 <- 3.3",
                "7 <- 2.4",
                "8 <- 1.8",
                "9 <- 2.4"
            ],
            "resampled_steps": [
                "6 - 1 = 5 (left: 1 5 6)\n1 + 5 = 6 (left: 6 6)",
                "1 * 1 = 1 (left: 1 5 6)",
                "5 + 1 = 6 (left: 1 6 6)\n6 / 1 = 6 (left: 6 6)",
                "6 - 1 = 5 (left: 1 5 6)\n6 / 1 = 6 (left: 6 6)",
                "5 + 1 = 6 (left: 1 6 6)\n6 / 1 = 6 (left: 6 6)",
                "5 + 1 = 6 (left: 1 6 6)\n6 / 1 = 6 (left: 6 6)",
                "6 - 1 = 5 (left: 1 5 6)\n1 + 5 = 6 (left: 6 6)",
                "5 + 1 = 6 (left: 6 5 6)\n6 / 5 = 1.2 (left: 1.2 6)",
                "6 - 1 = 5 (left: 1 5 6)",
                "5 + 1 = 6 (left: 6 5 6)\n6 / 5 = 1.2 (left: 1.2 6)"
            ]
        },
        "step_4": {
            "steps": [
                "6 - 1 = 5 (left: 1 5 6)\n1 + 5 = 6 (left: 6 6)\n6 / 6 = 1 (left: 1)",
                "1 * 1 = 1 (left: 1 5 6)\n6 - 5 = 1 (left: 1 6)",
                "5 + 1 = 6 (left: 1 6 6)\n6 / 1 = 6 (left: 6 6)\n6 / 6 = 1 (left: 1)",
                "6 - 1 = 5 (left: 1 5 6)\n6 / 1 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)",
                "5 + 1 = 6 (left: 1 6 6)\n6 / 1 = 6 (left: 6 6)\n6 / 6 = 1 (left: 1)",
                "5 + 1 = 6 (left: 1 6 6)\n6 / 1 = 6 (left: 6 6)\n6 - 6 = 0 (left: 0 6)",
                "6 - 1 = 5 (left: 1 5 6)\n1 + 5 = 6 (left: 6 6)\n6 / 6 = 1 (left: 1)",
                "5 + 1 = 6 (left: 6 5 6)\n6 / 5 = 1.2 (left: 1.2 6)\n1.2 + 6 = 7.2 (left: 7.2)",
                "6 - 1 = 5 (left: 1 5 6)\n1 + 5 = 6 (left: 6 6)",
                "5 + 1 = 6 (left: 6 5 6)\n6 / 5 = 1.2 (left: 1.2 6)\n6 + 1.2 = 7.2 (left: 7.2)"
            ],
            "values": [
                0.003,
                40.0,
                0.003,
                40.0,
                0.003,
                20.001,
                0.003,
                0.001,
                41.0,
                0.002
            ],
            "resampled": [
                "0 <- 2.6",
                "1 <- INIT",
                "2 <- 2.7",
                "3 <- 4.3",
                "4 <- 1.9",
                "5 <- 2.2",
                "6 <- 4.1",
                "7 <- 3.1",
                "8 <- 4.8",
                "9 <- 1.1"
            ],
            "resampled_steps": [
                "5 + 1 = 6 (left: 6 5 6)\n6 * 5 = 30 (left: 30 6)",
                "",
                "6 - 1 = 5 (left: 1 5 6)",
                "6 - 1 = 5 (left: 1 5 6)\n6 / 1 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)",
                "1 * 1 = 1 (left: 1 5 6)",
                "6 - 1 = 5 (left: 1 5 6)\n6 / 1 = 6 (left: 6 6)",
                "1 * 1 = 1 (left: 1 5 6)\n6 - 5 = 1 (left: 1 6)",
                "5 + 1 = 6 (left: 6 5 6)\n6 * 5 = 30 (left: 30 6)\n30 * 6 = 180 (left: 6 180)",
                "6 - 1 = 5 (left: 1 5 6)\n1 + 5 = 6 (left: 6 6)",
                "1 * 1 = 1 (left: 1 5 6)"
            ]
        },
        "step_5": {
            "steps": [
                "5 + 1 = 6 (left: 6 5 6)\n6 * 5 = 30 (left: 30 6)\n30 + 6 = 36 (left: 6 36)",
                "6 - 1 = 5 (left: 1 5 6)",
                "6 - 1 = 5 (left: 1 5 6)\n5 - 1 = 4 (left: 4 6)",
                "6 - 1 = 5 (left: 1 5 6)\n6 / 1 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)\n36 - 2 = 34 (left: 2 34)",
                "1 * 1 = 1 (left: 1 5 6)\n5 * 1 = 5 (left: 5 6)",
                "6 - 1 = 5 (left: 1 5 6)\n6 / 1 = 6 (left: 6 6)\n6 + 6 = 12 (left: 12)",
                "1 * 1 = 1 (left: 1 5 6)\n6 - 5 = 1 (left: 1 6)\n1 * 6 = 6 (left: 6)",
                "5 + 1 = 6 (left: 6 5 6)\n6 * 5 = 30 (left: 30 6)\n30 * 6 = 180 (left: 6 180)\n6 * 30 = 180 (left: 30)",
                "6 - 1 = 5 (left: 1 5 6)\n1 + 5 = 6 (left: 6 6)\n6 - 6 = 0 (left: 0)",
                "1 * 1 = 1 (left: 1 5 6)\n6 - 5 = 1 (left: 1 6)"
            ],
            "values": [
                0.003,
                22.0,
                60.0,
                0.001,
                1.002,
                0.001,
                0.003,
                0.0,
                0.003,
                40.0
            ],
            "resampled": [
                "0 <- 2.0",
                "1 <- 5.9",
                "2 <- 5.2",
                "3 <- 1.4",
                "4 <- 3.3",
                "5 <- 2.2",
                "6 <- 1.1",
                "7 <- 5.2",
                "8 <- 3.1",
                "9 <- 5.9"
            ],
            "resampled_steps": [
                "1 * 1 = 1 (left: 1 5 6)",
                "1 * 1 = 1 (left: 1 5 6)\n6 - 5 = 1 (left: 1 6)",
                "6 - 1 = 5 (left: 1 5 6)\n5 - 1 = 4 (left: 4 6)",
                "5 + 1 = 6 (left: 6 5 6)",
                "6 - 1 = 5 (left: 1 5 6)\n1 + 5 = 6 (left: 6 6)",
                "6 - 1 = 5 (left: 1 5 6)\n6 / 1 = 6 (left: 6 6)",
                "1 * 1 = 1 (left: 1 5 6)",
                "6 - 1 = 5 (left: 1 5 6)\n5 - 1 = 4 (left: 4 6)",
                "5 + 1 = 6 (left: 6 5 6)\n6 * 5 = 30 (left: 30 6)\n30 * 6 = 180 (left: 6 180)",
                "1 * 1 = 1 (left: 1 5 6)\n6 - 5 = 1 (left: 1 6)"
            ]
        },
        "step_6": {
            "steps": [
                "1 * 1 = 1 (left: 1 5 6)\n6 - 5 = 1 (left: 1 6)",
                "1 * 1 = 1 (left: 1 5 6)\n6 - 5 = 1 (left: 1 6)\n6 / 1 = 6 (left: 6)",
                "6 - 1 = 5 (left: 1 5 6)\n5 - 1 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "5 + 1 = 6 (left: 6 5 6)\n6 + 5 = 11 (left: 11 6)",
                "6 - 1 = 5 (left: 1 5 6)\n1 + 5 = 6 (left: 6 6)\n6 / 6 = 1 (left: 1)",
                "6 - 1 = 5 (left: 1 5 6)\n6 / 1 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)",
                "1 * 1 = 1 (left: 1 5 6)\n1 + 5 = 6 (left: 6 6)",
                "6 - 1 = 5 (left: 1 5 6)\n5 - 1 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)",
                "5 + 1 = 6 (left: 6 5 6)\n6 * 5 = 30 (left: 30 6)\n30 * 6 = 180 (left: 6 180)\n180 / 6 = 30 (left: 30)",
                "1 * 1 = 1 (left: 1 5 6)\n6 - 5 = 1 (left: 1 6)\n1 + 6 = 7 (left: 7)"
            ],
            "values": [
                40.001,
                0.003,
                40.0,
                0.003,
                0.003,
                60.0,
                1.002,
                0.003,
                0.001,
                0.002
            ],
            "resampled": [
                "0 <- 5.2",
                "1 <- 6.5",
                "2 <- 6.2",
                "3 <- 1.6",
                "4 <- 5.2",
                "5 <- 2.7",
                "6 <- 4.5",
                "7 <- 2.2",
                "8 <- 3.1",
                "9 <- 5.2"
            ],
            "resampled_steps": [
                "6 - 1 = 5 (left: 1 5 6)\n5 - 1 = 4 (left: 4 6)",
                "6 - 1 = 5 (left: 1 5 6)\n6 / 1 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)",
                "6 - 1 = 5 (left: 1 5 6)\n5 - 1 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "1 + 5 = 6 (left: 6 6 6)",
                "6 - 1 = 5 (left: 1 5 6)\n5 - 1 = 4 (left: 4 6)",
                "6 - 1 = 5 (left: 1 5 6)",
                "5 + 1 = 6 (left: 1 6 6)\n6 / 1 = 6 (left: 6 6)\n6 - 6 = 0 (left: 0 6)",
                "6 - 1 = 5 (left: 1 5 6)\n6 / 1 = 6 (left: 6 6)",
                "5 + 1 = 6 (left: 6 5 6)\n6 * 5 = 30 (left: 30 6)\n30 * 6 = 180 (left: 6 180)",
                "6 - 1 = 5 (left: 1 5 6)\n5 - 1 = 4 (left: 4 6)"
            ]
        },
        "step_7": {
            "steps": [
                "6 - 1 = 5 (left: 1 5 6)\n5 - 1 = 4 (left: 4 6)\n6 - 4 = 2 (left: 2)",
                "6 - 1 = 5 (left: 1 5 6)\n6 / 1 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)\n36 + 2 = 38 (left: 38)",
                "6 - 1 = 5 (left: 1 5 6)\n5 - 1 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (6 - 1) * (5 - 1) * 6 = 24",
                "1 + 5 = 6 (left: 6 6 6)\n6 - 6 = 0 (left: 0 6)",
                "6 - 1 = 5 (left: 1 5 6)\n5 - 1 = 4 (left: 4 6)\n6 - 4 = 2 (left: 2)",
                "6 - 1 = 5 (left: 1 5 6)\n5 + 1 = 6 (left: 6 6)",
                "5 + 1 = 6 (left: 1 6 6)\n6 / 1 = 6 (left: 6 6)\n6 - 6 = 0 (left: 0 6)\n6 * 0 = 0 (left: 0)",
                "6 - 1 = 5 (left: 1 5 6)\n6 / 1 = 6 (left: 6 6)\n6 / 6 = 1 (left: 1)",
                "5 + 1 = 6 (left: 6 5 6)\n6 * 5 = 30 (left: 30 6)\n30 * 6 = 180 (left: 6 180)\n180 - 6 = 174 (left: 174)",
                "6 - 1 = 5 (left: 1 5 6)\n5 - 1 = 4 (left: 4 6)\n6 / 4 = 1.5 (left: 1.5)"
            ],
            "values": [
                0.002,
                0.002,
                60.0,
                2.0,
                0.001,
                0.003,
                0.0,
                0.002,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 1.4",
                "1 <- 6.2",
                "2 <- 2.6",
                "3 <- 3.0",
                "4 <- 1.8",
                "5 <- 4.1",
                "6 <- 7.2",
                "7 <- 7.2",
                "8 <- 6.5",
                "9 <- 6.0"
            ],
            "resampled_steps": [
                "5 + 1 = 6 (left: 6 5 6)",
                "6 - 1 = 5 (left: 1 5 6)\n5 - 1 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "5 + 1 = 6 (left: 6 5 6)\n6 * 5 = 30 (left: 30 6)",
                "5 + 1 = 6 (left: 1 6 6)\n6 / 1 = 6 (left: 6 6)",
                "6 - 1 = 5 (left: 1 5 6)",
                "1 * 1 = 1 (left: 1 5 6)\n6 - 5 = 1 (left: 1 6)",
                "6 - 1 = 5 (left: 1 5 6)\n5 - 1 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (6 - 1) * (5 - 1) * 6 = 24",
                "6 - 1 = 5 (left: 1 5 6)\n5 - 1 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (6 - 1) * (5 - 1) * 6 = 24",
                "6 - 1 = 5 (left: 1 5 6)\n6 / 1 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)",
                "1 * 1 = 1 (left: 1 5 6)\n6 - 5 = 1 (left: 1 6)"
            ]
        },
        "step_8": {
            "steps": [
                "5 + 1 = 6 (left: 6 5 6)\n6 + 5 = 11 (left: 11 6)",
                "6 - 1 = 5 (left: 1 5 6)\n5 - 1 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (6 - 1) * (5 - 1) * 6 = 24",
                "5 + 1 = 6 (left: 6 5 6)\n6 * 5 = 30 (left: 30 6)\n30 - 6 = 24 (left: 6 24)",
                "5 + 1 = 6 (left: 1 6 6)\n6 / 1 = 6 (left: 6 6)\n6 + 6 = 12 (left: 6 12)",
                "6 - 1 = 5 (left: 1 5 6)\n1 + 5 = 6 (left: 6 6)",
                "1 * 1 = 1 (left: 1 5 6)\n6 - 5 = 1 (left: 1 6)\n1 * 6 = 6 (left: 6)",
                "6 - 1 = 5 (left: 1 5 6)\n5 - 1 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (6 - 1) * (5 - 1) * 6 = 24\nInput: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n9 * 1 = 9 (left: 9)\nAnswer: (3 * 3) - (8 - 9) * 9 = 24",
                "6 - 1 = 5 (left: 1 5 6)\n5 - 1 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (6 - 1) * (5 - 1) * 6 = 24\nInput: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n9 * 1 = 9 (left: 9)\nAnswer: (3 * 3) - (9 - 8) * 9 = 24",
                "6 - 1 = 5 (left: 1 5 6)\n6 / 1 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)\n36 - 2 = 34 (left: 34)",
                "1 * 1 = 1 (left: 1 5 6)\n6 - 5 = 1 (left: 1 6)\n6 / 1 = 6 (left: 6)"
            ],
            "values": [
                0.003,
                60.0,
                1.002,
                1.002,
                21.001,
                0.003,
                40.0,
                40.0,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 6.5",
                "1 <- 2.0",
                "2 <- 4.8",
                "3 <- 7.2",
                "4 <- 8.7",
                "5 <- 6.5",
                "6 <- 2.2",
                "7 <- 6.5",
                "8 <- 2.9",
                "9 <- 1.4"
            ],
            "resampled_steps": [
                "6 - 1 = 5 (left: 1 5 6)\n6 / 1 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)",
                "1 * 1 = 1 (left: 1 5 6)",
                "6 - 1 = 5 (left: 1 5 6)\n1 + 5 = 6 (left: 6 6)",
                "6 - 1 = 5 (left: 1 5 6)\n5 - 1 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (6 - 1) * (5 - 1) * 6 = 24",
                "6 - 1 = 5 (left: 1 5 6)\n5 - 1 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (6 - 1) * (5 - 1) * 6 = 24\nInput: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n9 * 1 = 9 (left: 9)\nAnswer: (3 * 3) - (9 - 8) * 9 = 24",
                "6 - 1 = 5 (left: 1 5 6)\n6 / 1 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)",
                "6 - 1 = 5 (left: 1 5 6)\n6 / 1 = 6 (left: 6 6)",
                "6 - 1 = 5 (left: 1 5 6)\n6 / 1 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)",
                "6 - 1 = 5 (left: 1 5 6)\n5 + 1 = 6 (left: 6 6)",
                "5 + 1 = 6 (left: 6 5 6)"
            ]
        },
        "step_9": {
            "steps": [
                "6 - 1 = 5 (left: 1 5 6)\n6 / 1 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)\n36 / 2 = 18 (left: 2 18)",
                "1 * 1 = 1 (left: 1 5 6)\n5 + 1 = 6 (left: 6 6)",
                "6 - 1 = 5 (left: 1 5 6)\n1 + 5 = 6 (left: 6 6)\n6 + 6 = 12 (left: 12)",
                "6 - 1 = 5 (left: 1 5 6)\n5 - 1 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (6 - 1) * (5 - 1) * 6 = 24\n\nInput: 3 3 4 8\nSteps:\n3 * 8 = 24 (left: 3 4 24)\n4 * 3 = 12 (left: 12 24)\n12 * 2 = 24 (left: 24)\nAnswer: (3 * 8) * (4 * 3) = 24",
                "6 - 1 = 5 (left: 1 5 6)\n5 - 1 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (6 - 1) * (5 - 1) * 6 = 24\nInput: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n9 * 1 = 9 (left: 9)\nAnswer: (3 * 3) - (9 - 8) * 9 = 24\nInput: 2 3 6 7\nSteps:\n3 * 7 = 21 (left: 2 6 21)\n21 - 6 = 15 (left: 2 15)\n15 + 2 = 17 (left: 17)\n17 + 7 = 24 (left: 24)\nAnswer: ((3 * 7) - 6) + 2 + 7 = 24",
                "6 - 1 = 5 (left: 1 5 6)\n6 / 1 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)\n36 / 3 = 12",
                "6 - 1 = 5 (left: 1 5 6)\n6 / 1 = 6 (left: 6 6)\n6 - 6 = 0 (left: 0)",
                "6 - 1 = 5 (left: 1 5 6)\n6 / 1 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)\n36 + 2 = 38 (left: 38)",
                "6 - 1 = 5 (left: 1 5 6)\n5 + 1 = 6 (left: 6 6)\n6 + 6 = 12 (left: 6 12)",
                "5 + 1 = 6 (left: 6 5 6)\n6 + 5 = 11 (left: 11 6)"
            ],
            "values": [
                22.0,
                0.003,
                0.001,
                40.0,
                20.0,
                0.003,
                0.001,
                0.002,
                1.002,
                0.003
            ],
            "resampled": [
                "0 <- 8.6",
                "1 <- 4.5",
                "2 <- 2.6",
                "3 <- 1.7",
                "4 <- 3.0",
                "5 <- 3.3",
                "6 <- 8.1",
                "7 <- 4.8",
                "8 <- 2.6",
                "9 <- 8.6"
            ],
            "resampled_steps": [
                "6 - 1 = 5 (left: 1 5 6)\n5 - 1 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (6 - 1) * (5 - 1) * 6 = 24\nInput: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n9 * 1 = 9 (left: 9)\nAnswer: (3 * 3) - (8 - 9) * 9 = 24",
                "5 + 1 = 6 (left: 1 6 6)\n6 / 1 = 6 (left: 6 6)\n6 - 6 = 0 (left: 0 6)",
                "5 + 1 = 6 (left: 6 5 6)\n6 * 5 = 30 (left: 30 6)",
                "6 - 1 = 5 (left: 1 5 6)",
                "5 + 1 = 6 (left: 1 6 6)\n6 / 1 = 6 (left: 6 6)",
                "6 - 1 = 5 (left: 1 5 6)\n1 + 5 = 6 (left: 6 6)",
                "6 - 1 = 5 (left: 1 5 6)\n5 - 1 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (6 - 1) * (5 - 1) * 6 = 24",
                "6 - 1 = 5 (left: 1 5 6)\n1 + 5 = 6 (left: 6 6)",
                "5 + 1 = 6 (left: 6 5 6)\n6 * 5 = 30 (left: 30 6)",
                "6 - 1 = 5 (left: 1 5 6)\n5 - 1 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (6 - 1) * (5 - 1) * 6 = 24\nInput: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n9 * 1 = 9 (left: 9)\nAnswer: (3 * 3) - (8 - 9) * 9 = 24"
            ]
        },
        "step_10": {
            "steps": [
                "6 - 1 = 5 (left: 1 5 6)\n5 - 1 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (6 - 1) * (5 - 1) * 6 = 24\nInput: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n9 * 1 = 9 (left: 9)\nAnswer: (3 * 3) - (8 - 9) * 9 = 24\nInput: 2 3 4 8\nSteps:\n3 + 8 = 11 (left: 2 4 11)\n11 - 4 = 7 (left: 2 7)\n7 * 2 = 14 (left: 14)\n14 * 2 = 28 (left: 28)\n28 - 4 = 24 (left: 24)\nAnswer: ((3 + 8) - 4) * 2 * 2 - 4 = 24",
                "5 + 1 = 6 (left: 1 6 6)\n6 / 1 = 6 (left: 6 6)\n6 - 6 = 0 (left: 0 6)\n6 / 0 is undefined (left: undefined)",
                "5 + 1 = 6 (left: 6 5 6)\n6 * 5 = 30 (left: 30 6)\n30 * 6 = 180 (left: 6 180)",
                "6 - 1 = 5 (left: 1 5 6)\n5 * 1 = 5 (left: 5 6)",
                "5 + 1 = 6 (left: 1 6 6)\n6 / 1 = 6 (left: 6 6)\n6 + 6 = 12 (left: 6 12)",
                "6 - 1 = 5 (left: 1 5 6)\n1 + 5 = 6 (left: 6 6)\n6 + 6 = 12 (left: 12)",
                "6 - 1 = 5 (left: 1 5 6)\n5 - 1 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (6 - 1) * (5 - 1) * 6 = 24\nInput: 3 3 3 8\nSteps:\n3 * 3 = 9 (left: 3 8 9)\n9 - 3 = 6 (left: 6 8)\n6 * 8 = 48 (left: 48)\nAnswer: (3 * 3) - (9 - 3) * 8 = 24",
                "6 - 1 = 5 (left: 1 5 6)\n1 + 5 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)",
                "5 + 1 = 6 (left: 6 5 6)\n6 * 5 = 30 (left: 30 6)\n30 + 6 = 36 (left: 6 36)",
                "6 - 1 = 5 (left: 1 5 6)\n5 - 1 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (6 - 1) * (5 - 1) * 6 = 24\nInput: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n9 * 1 = 9 (left: 9)\nAnswer: (3 * 3) - (8 - 9) * 9 = 24\nInput: 2 3 4 6\nSteps:\n3 * 4 = 12 (left: 2 6 12)\n6 * 2 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144)\nAnswer: (3 * 4) * (6 * 2) = 144"
            ],
            "values": [
                40.0,
                20.0,
                40.001,
                1.001,
                0.003,
                0.0,
                60.0,
                20.0,
                0.002,
                0.0
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 2.0827970000000002
    },
    "32": {
        "input": "1 1 11 13",
        "step_1": {
            "steps": [
                "11 + 1 = 12 (left: 1 12 13)",
                "1 + 1 = 2 (left: 2 11 13)",
                "11 + 1 = 12 (left: 1 12 13)",
                "11 + 1 = 12 (left: 1 12 13)",
                "1 * 11 = 11 (left: 1 11 13)",
                "11 + 1 = 12 (left: 1 12 13)",
                "1 + 1 = 2 (left: 2 11 13)",
                "13 - 11 = 2 (left: 1 1 2)",
                "1 * 11 = 11 (left: 11 11 13)",
                "11 + 1 = 12 (left: 1 12 13)"
            ],
            "values": [
                0.003,
                1.001,
                0.003,
                1.002,
                0.003,
                0.003,
                40.001,
                2.001,
                0.003,
                1.002
            ],
            "resampled": [
                "0 <- 1.6",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- 1.6",
                "5 <- INIT",
                "6 <- INIT",
                "7 <- 1.9",
                "8 <- INIT",
                "9 <- 1.6"
            ],
            "resampled_steps": [
                "1 + 1 = 2 (left: 2 11 13)",
                "",
                "",
                "",
                "1 + 1 = 2 (left: 2 11 13)",
                "",
                "",
                "11 + 1 = 12 (left: 1 12 13)",
                "",
                "1 + 1 = 2 (left: 2 11 13)"
            ]
        },
        "step_2": {
            "steps": [
                "1 + 1 = 2 (left: 2 11 13)\n9 - 3 = 6 (left: 6 6)",
                "1 + 1 = 2 (left: 2 11 13)",
                "1 * 11 = 11 (left: 1 11 13)",
                "11 - 1 = 10 (left: 1 10 13)",
                "1 + 1 = 2 (left: 2 11 13)\n11 + 2 = 13 (left: 2 13 13)",
                "13 - 1 = 12 (left: 1 11 12)",
                "1 * 11 = 11 (left: 1 11 13)",
                "11 + 1 = 12 (left: 1 12 13)\n12 - 1 = 11 (left: 11 13)",
                "1 + 1 = 2 (left: 2 11 13)",
                "1 + 1 = 2 (left: 2 11 13)\n2 * 11 = 22 (left: 22 13)"
            ],
            "values": [
                20.002,
                21.001,
                1.002,
                0.003,
                40.001,
                1.002,
                1.002,
                60.0,
                20.002,
                0.003
            ],
            "resampled": [
                "0 <- 1.6",
                "1 <- 2.7",
                "2 <- 2.4",
                "3 <- 2.7",
                "4 <- 2.4",
                "5 <- 2.7",
                "6 <- 2.1",
                "7 <- 2.4",
                "8 <- INIT",
                "9 <- 1.6"
            ],
            "resampled_steps": [
                "1 + 1 = 2 (left: 2 11 13)",
                "11 + 1 = 12 (left: 1 12 13)\n12 - 1 = 11 (left: 11 13)",
                "1 + 1 = 2 (left: 2 11 13)\n11 + 2 = 13 (left: 2 13 13)",
                "11 + 1 = 12 (left: 1 12 13)\n12 - 1 = 11 (left: 11 13)",
                "1 + 1 = 2 (left: 2 11 13)\n11 + 2 = 13 (left: 2 13 13)",
                "11 + 1 = 12 (left: 1 12 13)\n12 - 1 = 11 (left: 11 13)",
                "1 + 1 = 2 (left: 2 11 13)",
                "1 + 1 = 2 (left: 2 11 13)\n11 + 2 = 13 (left: 2 13 13)",
                "",
                "1 + 1 = 2 (left: 2 11 13)"
            ]
        },
        "step_3": {
            "steps": [
                "1 + 1 = 2 (left: 2 11 13)\n13 - 11 = 2 (left: 2 13)",
                "11 + 1 = 12 (left: 1 12 13)\n12 - 1 = 11 (left: 11 13)\n13 / 11 = 1.18181818182 (left: 1.18181818182)",
                "1 + 1 = 2 (left: 2 11 13)\n11 + 2 = 13 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)",
                "11 + 1 = 12 (left: 1 12 13)\n12 - 1 = 11 (left: 11 13)\n11 * 13 = 143 (left: 143)",
                "1 + 1 = 2 (left: 2 11 13)\n11 + 2 = 13 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)",
                "11 + 1 = 12 (left: 1 12 13)\n12 - 1 = 11 (left: 11 13)\n13 - 11 = 2 (left: 2)",
                "1 + 1 = 2 (left: 2 11 13)\n2 + 11 = 13 (left: 13 13)",
                "1 + 1 = 2 (left: 2 11 13)\n11 + 2 = 13 (left: 2 13 13)\n13 / 2 = 6.5 (left: 6.5 13)",
                "11 - 1 = 10 (left: 1 10 13)",
                "1 + 1 = 2 (left: 2 11 13)\n11 / 2 = 5.5 (left: 5.5 13)"
            ],
            "values": [
                0.003,
                0.002,
                60.0,
                0.001,
                60.0,
                0.003,
                0.003,
                60.0,
                20.002,
                2.001
            ],
            "resampled": [
                "0 <- 1.9",
                "1 <- 3.4",
                "2 <- 1.6",
                "3 <- 3.7",
                "4 <- 3.4",
                "5 <- 2.1",
                "6 <- 2.0",
                "7 <- 2.7",
                "8 <- 1.6",
                "9 <- 3.2"
            ],
            "resampled_steps": [
                "11 + 1 = 12 (left: 1 12 13)",
                "1 + 1 = 2 (left: 2 11 13)\n11 + 2 = 13 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)",
                "1 + 1 = 2 (left: 2 11 13)",
                "1 + 1 = 2 (left: 2 11 13)\n11 + 2 = 13 (left: 2 13 13)\n13 / 2 = 6.5 (left: 6.5 13)",
                "1 + 1 = 2 (left: 2 11 13)\n11 + 2 = 13 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)",
                "1 + 1 = 2 (left: 2 11 13)",
                "1 + 1 = 2 (left: 2 11 13)\n9 - 3 = 6 (left: 6 6)",
                "11 + 1 = 12 (left: 1 12 13)\n12 - 1 = 11 (left: 11 13)",
                "1 + 1 = 2 (left: 2 11 13)",
                "1 + 1 = 2 (left: 2 11 13)\n11 + 2 = 13 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)"
            ]
        },
        "step_4": {
            "steps": [
                "11 + 1 = 12 (left: 1 12 13)\n12 - 1 = 11 (left: 11 13)",
                "1 + 1 = 2 (left: 2 11 13)\n11 + 2 = 13 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 * 13 = 143 (left: 143)",
                "1 + 1 = 2 (left: 2 11 13)\n13 - 2 = 11 (left: 11 13)",
                "1 + 1 = 2 (left: 2 11 13)\n11 + 2 = 13 (left: 2 13 13)\n13 / 2 = 6.5 (left: 6.5 13)\n13 * 6.5 = 84.5 (left: 84.5)",
                "1 + 1 = 2 (left: 2 11 13)\n11 + 2 = 13 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 - 13 = -2 (left: -2)",
                "1 + 1 = 2 (left: 2 11 13)\n11 + 2 = 13 (left: 2 13 13)",
                "1 + 1 = 2 (left: 2 11 13)\n9 - 3 = 6 (left: 6 6)\n6 - 6 = 0 (left: 0)",
                "11 + 1 = 12 (left: 1 12 13)\n12 - 1 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)",
                "1 + 1 = 2 (left: 2 11 13)\n13 - 2 = 11 (left: 11 13)",
                "1 + 1 = 2 (left: 2 11 13)\n11 + 2 = 13 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 / 13 = 0.84615384615 (left: 0.84615384615)"
            ],
            "values": [
                60.0,
                0.003,
                60.0,
                0.001,
                0.003,
                0.002,
                0.001,
                20.0,
                60.0,
                0.001
            ],
            "resampled": [
                "0 <- 4.8",
                "1 <- 4.2",
                "2 <- 4.8",
                "3 <- 3.7",
                "4 <- 2.7",
                "5 <- 3.2",
                "6 <- 3.4",
                "7 <- 3.4",
                "8 <- 3.7",
                "9 <- 4.2"
            ],
            "resampled_steps": [
                "1 + 1 = 2 (left: 2 11 13)\n13 - 2 = 11 (left: 11 13)",
                "1 + 1 = 2 (left: 2 11 13)\n13 - 2 = 11 (left: 11 13)",
                "1 + 1 = 2 (left: 2 11 13)\n13 - 2 = 11 (left: 11 13)",
                "1 + 1 = 2 (left: 2 11 13)\n11 + 2 = 13 (left: 2 13 13)\n13 / 2 = 6.5 (left: 6.5 13)",
                "11 + 1 = 12 (left: 1 12 13)\n12 - 1 = 11 (left: 11 13)",
                "1 + 1 = 2 (left: 2 11 13)\n11 + 2 = 13 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)",
                "1 + 1 = 2 (left: 2 11 13)\n11 + 2 = 13 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)",
                "1 + 1 = 2 (left: 2 11 13)\n11 + 2 = 13 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)",
                "1 + 1 = 2 (left: 2 11 13)\n11 + 2 = 13 (left: 2 13 13)\n13 / 2 = 6.5 (left: 6.5 13)",
                "1 + 1 = 2 (left: 2 11 13)\n13 - 2 = 11 (left: 11 13)"
            ]
        },
        "step_5": {
            "steps": [
                "1 + 1 = 2 (left: 2 11 13)\n13 - 2 = 11 (left: 11 13)\n13 - 11 = 2 (left: 2)",
                "1 + 1 = 2 (left: 2 11 13)\n13 - 2 = 11 (left: 11 13)\n13 - 11 = 2 (left: 2)",
                "1 + 1 = 2 (left: 2 11 13)\n13 - 2 = 11 (left: 11 13)\n13 - 11 = 2 (left: 2)",
                "1 + 1 = 2 (left: 2 11 13)\n11 + 2 = 13 (left: 2 13 13)\n13 / 2 = 6.5 (left: 6.5 13)\n6.5 + 13 = 19.5 (left: 13 19.5)",
                "11 + 1 = 12 (left: 1 12 13)\n12 - 1 = 11 (left: 11 13)\n11 / 13 = 0.846 (left: 0.846)",
                "1 + 1 = 2 (left: 2 11 13)\n11 + 2 = 13 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)",
                "1 + 1 = 2 (left: 2 11 13)\n11 + 2 = 13 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n13 / 11 = 1.18 (left: 1.18)",
                "1 + 1 = 2 (left: 2 11 13)\n11 + 2 = 13 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n13 / 11 = 1.18 (left: 1.18)",
                "1 + 1 = 2 (left: 2 11 13)\n11 + 2 = 13 (left: 2 13 13)\n13 / 2 = 6.5 (left: 6.5 13)\n13 / 6.5 = 2 (left: 6.5 2)",
                "1 + 1 = 2 (left: 2 11 13)\n13 - 2 = 11 (left: 11 13)\n13 - 11 = 2 (left: 2 13)"
            ],
            "values": [
                0.003,
                0.002,
                0.002,
                0.002,
                0.003,
                40.0,
                0.003,
                0.001,
                2.001,
                0.002
            ],
            "resampled": [
                "0 <- 4.7",
                "1 <- 3.7",
                "2 <- 2.1",
                "3 <- 4.2",
                "4 <- 4.2",
                "5 <- 4.2",
                "6 <- 4.0",
                "7 <- 3.7",
                "8 <- 2.8",
                "9 <- 3.2"
            ],
            "resampled_steps": [
                "11 + 1 = 12 (left: 1 12 13)\n12 - 1 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)",
                "1 + 1 = 2 (left: 2 11 13)\n11 + 2 = 13 (left: 2 13 13)\n13 / 2 = 6.5 (left: 6.5 13)",
                "1 + 1 = 2 (left: 2 11 13)",
                "1 + 1 = 2 (left: 2 11 13)\n13 - 2 = 11 (left: 11 13)",
                "1 + 1 = 2 (left: 2 11 13)\n13 - 2 = 11 (left: 11 13)",
                "1 + 1 = 2 (left: 2 11 13)\n13 - 2 = 11 (left: 11 13)",
                "11 + 1 = 12 (left: 1 12 13)\n12 - 1 = 11 (left: 11 13)",
                "1 + 1 = 2 (left: 2 11 13)\n11 + 2 = 13 (left: 2 13 13)\n13 / 2 = 6.5 (left: 6.5 13)",
                "1 + 1 = 2 (left: 2 11 13)",
                "1 + 1 = 2 (left: 2 11 13)\n11 + 2 = 13 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)"
            ]
        },
        "step_6": {
            "steps": [
                "11 + 1 = 12 (left: 1 12 13)\n12 - 1 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (11 + 1) + (13 - 1) = 24",
                "1 + 1 = 2 (left: 2 11 13)\n11 + 2 = 13 (left: 2 13 13)\n13 / 2 = 6.5 (left: 6.5 13)\n13 + 6.5 = 19.5 (left: 6.5 19.5)",
                "1 + 1 = 2 (left: 2 11 13)\n13 - 2 = 11 (left: 11 11)",
                "1 + 1 = 2 (left: 2 11 13)\n13 - 2 = 11 (left: 11 13)\n11 * 13 = 143 (left: 143)",
                "1 + 1 = 2 (left: 2 11 13)\n13 - 2 = 11 (left: 11 13)\n11 - 13 = -2 (left: -2)",
                "1 + 1 = 2 (left: 2 11 13)\n13 - 2 = 11 (left: 11 13)\n13 - 11 = 2 (left: 2)",
                "11 + 1 = 12 (left: 1 12 13)\n12 - 1 = 11 (left: 11 13)\n11 - 13 = -2 (left: -2)",
                "1 + 1 = 2 (left: 2 11 13)\n11 + 2 = 13 (left: 2 13 13)\n13 / 2 = 6.5 (left: 6.5 13)\n13 * 6.5 = 84.5 (left: 6.5 84.5)",
                "1 + 1 = 2 (left: 2 11 13)\n11 - 2 = 9 (left: 2 9 13)",
                "1 + 1 = 2 (left: 2 11 13)\n11 + 2 = 13 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)"
            ]
        },
        "results": [
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 2.13445
    },
    "33": {
        "input": "1 6 6 12",
        "step_1": {
            "steps": [
                "1 + 6 = 7 (left: 6 7 12)",
                "6 * 1 = 6 (left: 6 6 12)",
                "12 / 6 = 2 (left: 1 6 2)",
                "12 / 6 = 2 (left: 1 2 6)",
                "12 - 6 = 6 (left: 1 6 6)",
                "6 - 1 = 5 (left: 5 6 12)",
                "6 * 1 = 6 (left: 6 6 12)",
                "6 - 1 = 5 (left: 5 6 12)",
                "1 + 6 = 7 (left: 6 7 12)",
                "6 - 1 = 5 (left: 5 6 12)"
            ],
            "values": [
                3.0,
                20.002,
                2.001,
                1.002,
                41.0,
                1.002,
                21.0,
                2.001,
                2.0,
                3.0
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- 1.7",
                "2 <- 1.6",
                "3 <- INIT",
                "4 <- 1.4",
                "5 <- 1.6",
                "6 <- 1.6",
                "7 <- 1.4",
                "8 <- 1.2",
                "9 <- 1.4"
            ],
            "resampled_steps": [
                "",
                "6 - 1 = 5 (left: 5 6 12)",
                "6 * 1 = 6 (left: 6 6 12)",
                "",
                "12 - 6 = 6 (left: 1 6 6)",
                "6 * 1 = 6 (left: 6 6 12)",
                "6 * 1 = 6 (left: 6 6 12)",
                "12 - 6 = 6 (left: 1 6 6)",
                "12 / 6 = 2 (left: 1 6 2)",
                "12 - 6 = 6 (left: 1 6 6)"
            ]
        },
        "step_2": {
            "steps": [
                "12 - 6 = 6 (left: 1 6 6)",
                "6 - 1 = 5 (left: 5 6 12)\n6 / 5 = 1.2 (left: 1.2 12)",
                "6 * 1 = 6 (left: 6 6 12)\n6 * 12 = 72 (left: 6 72)",
                "12 - 6 = 6 (left: 1 6 6)",
                "12 - 6 = 6 (left: 1 6 6)\n6 + 1 = 7 (left: 7)",
                "6 * 1 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 12 12)",
                "6 * 1 = 6 (left: 6 6 12)\n6 - 6 = 0 (left: 0 12)",
                "12 - 6 = 6 (left: 1 6 6)\n1 + 6 = 7 (left: 6 7)",
                "12 / 6 = 2 (left: 1 6 2)\n1 + 6 = 7 (left: 7 2)",
                "12 - 6 = 6 (left: 1 6 6)\n6 - 1 = 5 (left: 1 5)"
            ],
            "values": [
                2.001,
                1.001,
                0.002,
                22.0,
                0.002,
                41.0,
                20.001,
                1.002,
                0.002,
                20.0
            ],
            "resampled": [
                "0 <- 2.0",
                "1 <- 2.5",
                "2 <- 1.4",
                "3 <- 1.4",
                "4 <- 1.8",
                "5 <- 2.3",
                "6 <- 1.4",
                "7 <- 2.6",
                "8 <- 2.6",
                "9 <- 2.6"
            ],
            "resampled_steps": [
                "12 - 6 = 6 (left: 1 6 6)",
                "6 * 1 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 12 12)",
                "12 - 6 = 6 (left: 1 6 6)",
                "12 - 6 = 6 (left: 1 6 6)",
                "1 + 6 = 7 (left: 6 7 12)",
                "12 - 6 = 6 (left: 1 6 6)",
                "12 - 6 = 6 (left: 1 6 6)",
                "6 * 1 = 6 (left: 6 6 12)\n6 - 6 = 0 (left: 0 12)",
                "6 * 1 = 6 (left: 6 6 12)\n6 - 6 = 0 (left: 0 12)",
                "6 * 1 = 6 (left: 6 6 12)\n6 - 6 = 0 (left: 0 12)"
            ]
        },
        "step_3": {
            "steps": [
                "12 - 6 = 6 (left: 1 6 6)\n6 * 1 = 6 (left: 6 6)",
                "6 * 1 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "12 - 6 = 6 (left: 1 6 6)\n6 * 6 = 36 (left: 1 36)",
                "12 - 6 = 6 (left: 1 6 6)\n6 / 1 = 6 (left: 6 6)",
                "1 + 6 = 7 (left: 6 7 12)\n7 / 6 = 1.16666666667 (left: 1.16666666667 12)",
                "12 - 6 = 6 (left: 1 6 6)\n6 / 1 = 6 (left: 6 6)",
                "12 - 6 = 6 (left: 1 6 6)\n1 + 6 = 7 (left: 6 7)",
                "6 * 1 = 6 (left: 6 6 12)\n6 - 6 = 0 (left: 0 12)\n0 + 12 = 12 (left: 12)",
                "6 * 1 = 6 (left: 6 6 12)\n6 - 6 = 0 (left: 0 12)\n12 - 0 = 12 (left: 12)",
                "6 * 1 = 6 (left: 6 6 12)\n6 - 6 = 0 (left: 0 12)\n12 * 0 = 0 (left: 0)"
            ],
            "values": [
                40.001,
                60.0,
                40.001,
                1.002,
                2.001,
                20.002,
                0.003,
                0.002,
                0.002,
                0.0
            ],
            "resampled": [
                "0 <- 3.1",
                "1 <- 2.5",
                "2 <- 3.2",
                "3 <- INIT",
                "4 <- 2.9",
                "5 <- 1.6",
                "6 <- 3.5",
                "7 <- 1.1",
                "8 <- 2.3",
                "9 <- 2.6"
            ],
            "resampled_steps": [
                "6 * 1 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "6 * 1 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 12 12)",
                "12 - 6 = 6 (left: 1 6 6)\n6 * 6 = 36 (left: 1 36)",
                "",
                "12 - 6 = 6 (left: 1 6 6)\n6 - 1 = 5 (left: 1 5)",
                "6 * 1 = 6 (left: 6 6 12)",
                "12 - 6 = 6 (left: 1 6 6)\n6 / 1 = 6 (left: 6 6)",
                "6 * 1 = 6 (left: 6 6 12)",
                "12 - 6 = 6 (left: 1 6 6)",
                "6 * 1 = 6 (left: 6 6 12)\n6 - 6 = 0 (left: 0 12)"
            ]
        },
        "step_4": {
            "steps": [
                "6 * 1 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (6 * 1) + (6 + 6) + 12 = 24",
                "6 * 1 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 12 12)\n12 - 12 = 0 (left: 0)",
                "12 - 6 = 6 (left: 1 6 6)\n6 * 6 = 36 (left: 1 36)\n1 * 36 = 36 (left: 36)",
                "12 - 6 = 6 (left: 1 6 6)",
                "12 - 6 = 6 (left: 1 6 6)\n6 - 1 = 5 (left: 1 5)\n5 - 1 = 4 (left: 4 5)",
                "6 * 1 = 6 (left: 6 6 12)\n12 * 6 = 72 (left: 6 72)",
                "12 - 6 = 6 (left: 1 6 6)\n6 / 1 = 6 (left: 6 6)\n6 / 6 = 1 (left: 1)",
                "6 * 1 = 6 (left: 6 6 12)\n6 - 6 = 0 (left: 0 12)",
                "12 - 6 = 6 (left: 1 6 6)\n6 - 1 = 5 (left: 5 6)",
                "6 * 1 = 6 (left: 6 6 12)\n6 - 6 = 0 (left: 0 12)\n0 + 12 = 12 (left: 12)"
            ],
            "values": [
                60.0,
                0.0,
                0.0,
                22.0,
                22.0,
                0.003,
                0.003,
                40.0,
                1.001,
                0.002
            ],
            "resampled": [
                "0 <- 4.0",
                "1 <- 3.5",
                "2 <- 4.0",
                "3 <- 3.2",
                "4 <- 4.3",
                "5 <- 3.1",
                "6 <- 4.0",
                "7 <- 3.1",
                "8 <- 4.0",
                "9 <- 4.0"
            ],
            "resampled_steps": [
                "6 * 1 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (6 * 1) + (6 + 6) + 12 = 24",
                "12 - 6 = 6 (left: 1 6 6)\n6 / 1 = 6 (left: 6 6)",
                "6 * 1 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (6 * 1) + (6 + 6) + 12 = 24",
                "12 - 6 = 6 (left: 1 6 6)\n6 * 6 = 36 (left: 1 36)",
                "12 - 6 = 6 (left: 1 6 6)",
                "6 * 1 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "6 * 1 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (6 * 1) + (6 + 6) + 12 = 24",
                "6 * 1 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "6 * 1 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (6 * 1) + (6 + 6) + 12 = 24",
                "6 * 1 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (6 * 1) + (6 + 6) + 12 = 24"
            ]
        },
        "step_5": {
            "steps": [
                "6 * 1 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (6 * 1) + (6 + 6) + 12 = 24\nInput: 3 3 8 4\nSteps:\n3 * 8 = 24 (left: 3 4 24)\n4 - 3 = 1 (left: 1 24)\n24 / 1 = 24 (left: 24)\nAnswer: (3 * 8) / (4 - 3) = 24",
                "12 - 6 = 6 (left: 1 6 6)\n6 / 1 = 6 (left: 6 6)\n6 + 6 = 12 (left: 6 12)",
                "6 * 1 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (6 * 1) + (6 + 6) + 12 = 24\nInput: 3 3 8 8\nSteps:\n3 + 8 = 11 (left: 3 11 8)\n11 - 3 = 8 (left: 8 8)\n8 * 8 = 64 (left: 64)\nAnswer: (3 + 8) * (8 - 3) = 64",
                "12 - 6 = 6 (left: 1 6 6)\n6 * 6 = 36 (left: 1 36)\n36 / 1 = 36 (left: 36)",
                "12 - 6 = 6 (left: 1 6 6)\n1 + 6 = 7 (left: 6 7)",
                "6 * 1 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: ((6 * 1) + 6) + 12 = 24",
                "6 * 1 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (6 * 1) + (6 + 6) + 12 = 24\nInput: 3 3 4 4\nSteps:\n3 + 4 = 7 (left: 3 4 7)\n4 - 3 = 1 (left: 1 7)\n7 * 1 = 7 (left: 7)\nAnswer: (3 + 4) * (4 - 3) = 7",
                "6 * 1 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (6 * 1) + (6 + 6) + 12 = 24",
                "6 * 1 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (6 * 1) + (6 + 6) + 12 = 24\nInput: 3 3 7 8\nSteps:\n3 * 7 = 21 (left: 3 8 21)\n21 - 3 = 18 (left: 8 18)\n18 / 8 = 2.25 (left: 2.25)\nAnswer: (3 * 7) - (18 / 8) = 24",
                "6 * 1 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (6 * 1) + (6 + 6) + 12 = 24\nInput: 3 3 4 4\nSteps:\n3 + 4 = 7 (left: 3 4 7)\n7 * 4 = 28 (left: 3 28)\n28 - 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 4 = 25 (left: 25)\n25 + 3 = 28 (left: 28)\n28 - 4 = 24 (left: 24)\nAnswer: (((3 + 4) * 4) - 3) + 4 - 4 + 3 = 24"
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 2.174263
    },
    "34": {
        "input": "4 5 12 12",
        "step_1": {
            "steps": [
                "12 - 4 = 8 (left: 8 5 12)",
                "12 - 5 = 7 (left: 4 7 12)",
                "12 - 4 = 8 (left: 8 5 12)",
                "5 * 4 = 20 (left: 20 12 12)",
                "12 - 4 = 8 (left: 8 5 12)",
                "12 - 4 = 8 (left: 5 8 12)",
                "12 - 4 = 8 (left: 8 5 12)",
                "4 + 5 = 9 (left: 9 12 12)",
                "5 * 4 = 20 (left: 20 12 12)",
                "12 - 5 = 7 (left: 4 7 12)"
            ],
            "values": [
                3.0,
                3.0,
                3.0,
                2.001,
                3.0,
                3.0,
                2.001,
                2.001,
                0.002,
                2.001
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- 1.4",
                "3 <- INIT",
                "4 <- 1.5",
                "5 <- INIT",
                "6 <- 1.6",
                "7 <- 1.3",
                "8 <- 1.2",
                "9 <- 1.4"
            ],
            "resampled_steps": [
                "",
                "",
                "12 - 4 = 8 (left: 8 5 12)",
                "",
                "12 - 4 = 8 (left: 5 8 12)",
                "",
                "12 - 4 = 8 (left: 8 5 12)",
                "5 * 4 = 20 (left: 20 12 12)",
                "12 - 4 = 8 (left: 8 5 12)",
                "12 - 4 = 8 (left: 8 5 12)"
            ]
        },
        "step_2": {
            "steps": [
                "5 * 4 = 20 (left: 20 12 12)",
                "4 + 5 = 9 (left: 9 12 12)",
                "12 - 4 = 8 (left: 8 5 12)\n12 - 8 = 4 (left: 4 5)",
                "4 + 5 = 9 (left: 9 12 12)",
                "12 - 4 = 8 (left: 5 8 12)\n8 * 5 = 40 (left: 40 12)",
                "12 / 4 = 3 (left: 3 5 12)",
                "12 - 4 = 8 (left: 8 5 12)\n5 / 12 = 0.4166667 (left: 0.42 12)",
                "5 * 4 = 20 (left: 20 12 12)\n12 / 12 = 1 (left: 20 1)",
                "12 - 4 = 8 (left: 8 5 12)\n8 - 5 = 3 (left: 3 12)",
                "12 - 4 = 8 (left: 8 5 12)\n8 * 5 = 40 (left: 40 12)"
            ],
            "values": [
                0.003,
                2.001,
                0.0,
                0.003,
                0.002,
                2.001,
                1.002,
                0.001,
                20.002,
                0.003
            ],
            "resampled": [
                "0 <- 2.8",
                "1 <- 1.3",
                "2 <- 2.5",
                "3 <- 2.8",
                "4 <- 1.0",
                "5 <- INIT",
                "6 <- 2.8",
                "7 <- 2.8",
                "8 <- INIT",
                "9 <- 2.8"
            ],
            "resampled_steps": [
                "12 - 4 = 8 (left: 8 5 12)\n8 - 5 = 3 (left: 3 12)",
                "5 * 4 = 20 (left: 20 12 12)",
                "12 / 4 = 3 (left: 3 5 12)",
                "12 - 4 = 8 (left: 8 5 12)\n8 - 5 = 3 (left: 3 12)",
                "12 - 4 = 8 (left: 8 5 12)",
                "",
                "12 - 4 = 8 (left: 8 5 12)\n8 - 5 = 3 (left: 3 12)",
                "12 - 4 = 8 (left: 8 5 12)\n8 - 5 = 3 (left: 3 12)",
                "",
                "12 - 4 = 8 (left: 8 5 12)\n8 - 5 = 3 (left: 3 12)"
            ]
        },
        "step_3": {
            "steps": [
                "12 - 4 = 8 (left: 8 5 12)\n8 - 5 = 3 (left: 3 12)\n3 + 12 = 15 (left: 12 15)",
                "5 * 4 = 20 (left: 20 12 12)\n20 - 12 = 8 (left: 8 12)",
                "12 / 4 = 3 (left: 3 5 12)\n12 - 3 = 9 (left: 5 9)",
                "12 - 4 = 8 (left: 8 5 12)\n8 - 5 = 3 (left: 3 12)\n3 + 12 = 15 (left: 15)",
                "12 - 4 = 8 (left: 8 5 12)\n5 / 12 = 0.4167 (left: 0.4167 12)",
                "12 - 4 = 8 (left: 5 8 12)",
                "12 - 4 = 8 (left: 8 5 12)\n8 - 5 = 3 (left: 3 12)\n12 / 3 = 4 (left: 3 4)",
                "12 - 4 = 8 (left: 8 5 12)\n8 - 5 = 3 (left: 3 12)\n3 * 4 = 12 (left: 12)",
                "12 - 4 = 8 (left: 8 5 12)",
                "12 - 4 = 8 (left: 8 5 12)\n8 - 5 = 3 (left: 3 12)\n12 - 3 = 9 (left: 9 12)"
            ],
            "values": [
                0.003,
                0.002,
                0.002,
                0.002,
                2.0,
                1.001,
                0.003,
                0.0,
                3.0,
                0.003
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- 2.8",
                "5 <- INIT",
                "6 <- 3.4",
                "7 <- 2.8",
                "8 <- 1.9",
                "9 <- 3.8"
            ],
            "resampled_steps": [
                "",
                "",
                "",
                "",
                "12 - 4 = 8 (left: 8 5 12)\n8 - 5 = 3 (left: 3 12)",
                "",
                "12 - 4 = 8 (left: 8 5 12)\n5 / 12 = 0.4167 (left: 0.4167 12)",
                "12 - 4 = 8 (left: 8 5 12)\n8 - 5 = 3 (left: 3 12)",
                "12 - 5 = 7 (left: 4 7 12)",
                "12 - 4 = 8 (left: 8 5 12)"
            ]
        },
        "step_4": {
            "steps": [
                "5 + 4 = 9 (left: 9 12 12)",
                "12 - 4 = 8 (left: 5 8 12)",
                "12 - 5 = 7 (left: 4 7 12)",
                "12 / 5 = 2.4 (left: 4 5 2.4)",
                "12 - 4 = 8 (left: 8 5 12)\n8 - 5 = 3 (left: 3 12)\n3 * 4 = 12 (left: 3 4)",
                "5 * 12 = 60 (left: 4 60 12)",
                "12 - 4 = 8 (left: 8 5 12)\n5 / 12 = 0.4167 (left: 0.4167 12)\n12 - 0.4167 = 11.5833 (left: 11.5833)",
                "12 - 4 = 8 (left: 8 5 12)\n8 - 5 = 3 (left: 3 12)\n3 + 12 = 15 (left: 15)",
                "12 - 5 = 7 (left: 4 7 12)\n12 / 4 = 3 (left: 4 3)",
                "12 - 4 = 8 (left: 8 5 12)\n8 * 5 = 40 (left: 40 12)"
            ],
            "values": [
                3.0,
                2.001,
                1.002,
                1.002,
                1.0,
                3.0,
                0.003,
                0.001,
                1.001,
                0.003
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- 2.5",
                "2 <- 2.8",
                "3 <- INIT",
                "4 <- 2.8",
                "5 <- 2.8",
                "6 <- 3.8",
                "7 <- 1.4",
                "8 <- 2.8",
                "9 <- INIT"
            ],
            "resampled_steps": [
                "",
                "12 / 4 = 3 (left: 3 5 12)",
                "12 - 4 = 8 (left: 8 5 12)\n8 - 5 = 3 (left: 3 12)",
                "",
                "12 - 4 = 8 (left: 8 5 12)\n8 - 5 = 3 (left: 3 12)",
                "12 - 4 = 8 (left: 8 5 12)\n8 - 5 = 3 (left: 3 12)",
                "12 - 4 = 8 (left: 8 5 12)",
                "12 - 4 = 8 (left: 8 5 12)",
                "12 - 4 = 8 (left: 8 5 12)\n8 - 5 = 3 (left: 3 12)",
                ""
            ]
        },
        "step_5": {
            "steps": [
                "12 / 5 = 2.4 (left: 4 5 2.4)",
                "12 / 4 = 3 (left: 3 5 12)\n12 / 3 = 4 (left: 4 12)",
                "12 - 4 = 8 (left: 8 5 12)\n8 - 5 = 3 (left: 3 12)\n3 + 12 = 15 (left: 15)",
                "12 - 4 = 8 (left: 8 5 12)",
                "12 - 4 = 8 (left: 8 5 12)\n8 - 5 = 3 (left: 3 12)\n3 + 12 = 15 (left: 15)",
                "12 - 4 = 8 (left: 8 5 12)\n8 - 5 = 3 (left: 3 12)\n3 + 12 = 15 (left: 15)",
                "12 - 4 = 8 (left: 8 5 12)\n5 + 12 = 17 (left: 8 17)",
                "12 - 4 = 8 (left: 8 5 12)\n8 - 5 = 3 (left: 3 12)",
                "12 - 4 = 8 (left: 8 5 12)\n8 - 5 = 3 (left: 3 12)\n3 + 12 = 15 (left: 15)",
                "12 / 4 = 3 (left: 3 5 12)"
            ],
            "values": [
                3.0,
                21.001,
                0.002,
                3.0,
                0.001,
                0.001,
                0.003,
                21.001,
                0.0,
                0.003
            ],
            "resampled": [
                "0 <- 5.1",
                "1 <- 3.5",
                "2 <- 5.1",
                "3 <- 5.3",
                "4 <- 5.7",
                "5 <- 1.6",
                "6 <- INIT",
                "7 <- 5.1",
                "8 <- 5.1",
                "9 <- 5.1"
            ],
            "resampled_steps": [
                "12 / 4 = 3 (left: 3 5 12)\n12 / 3 = 4 (left: 4 12)",
                "12 - 4 = 8 (left: 5 8 12)",
                "12 / 4 = 3 (left: 3 5 12)\n12 / 3 = 4 (left: 4 12)",
                "12 - 4 = 8 (left: 8 5 12)",
                "12 - 4 = 8 (left: 8 5 12)\n8 - 5 = 3 (left: 3 12)",
                "12 - 4 = 8 (left: 8 5 12)",
                "",
                "12 / 4 = 3 (left: 3 5 12)\n12 / 3 = 4 (left: 4 12)",
                "12 / 4 = 3 (left: 3 5 12)\n12 / 3 = 4 (left: 4 12)",
                "12 / 4 = 3 (left: 3 5 12)\n12 / 3 = 4 (left: 4 12)"
            ]
        },
        "step_6": {
            "steps": [
                "12 / 4 = 3 (left: 3 5 12)\n12 / 3 = 4 (left: 4 12)\n12 - 4 = 8 (left: 4 8)",
                "12 - 4 = 8 (left: 5 8 12)\n8 - 5 = 3 (left: 3 12)",
                "12 / 4 = 3 (left: 3 5 12)\n12 / 3 = 4 (left: 4 12)\n12 - 4 = 8 (left: 8 12)",
                "12 - 4 = 8 (left: 8 5 12)\n12 / 8 = 1.5 (left: 1.5 5)",
                "12 - 4 = 8 (left: 8 5 12)\n8 - 5 = 3 (left: 3 12)\n3 + 12 = 15 (left: 15)",
                "12 - 4 = 8 (left: 8 5 12)\n12 * 8 = 96 (left: 96)",
                "4 + 5 = 9 (left: 9 12 12)",
                "12 / 4 = 3 (left: 3 5 12)\n12 / 3 = 4 (left: 4 12)\n4 * 3 = 12 (left: 3 12)",
                "12 / 4 = 3 (left: 3 5 12)\n12 / 3 = 4 (left: 4 12)\n4 + 12 = 16 (left: 16)",
                "12 / 4 = 3 (left: 3 5 12)\n12 / 3 = 4 (left: 4 12)\n4 * 12 = 48 (left: 48)"
            ],
            "values": [
                20.001,
                0.003,
                0.002,
                1.002,
                0.002,
                0.002,
                1.002,
                0.003,
                0.002,
                0.002
            ],
            "resampled": [
                "0 <- 4.5",
                "1 <- 2.8",
                "2 <- 5.7",
                "3 <- 6.0",
                "4 <- 5.1",
                "5 <- 2.8",
                "6 <- 5.1",
                "7 <- 6.0",
                "8 <- 5.1",
                "9 <- 6.0"
            ],
            "resampled_steps": [
                "5 * 12 = 60 (left: 4 60 12)",
                "12 - 4 = 8 (left: 8 5 12)\n8 - 5 = 3 (left: 3 12)",
                "12 - 4 = 8 (left: 8 5 12)\n8 - 5 = 3 (left: 3 12)",
                "12 / 4 = 3 (left: 3 5 12)\n12 / 3 = 4 (left: 4 12)\n12 - 4 = 8 (left: 4 8)",
                "12 / 4 = 3 (left: 3 5 12)\n12 / 3 = 4 (left: 4 12)",
                "12 - 4 = 8 (left: 8 5 12)\n8 - 5 = 3 (left: 3 12)",
                "12 / 4 = 3 (left: 3 5 12)\n12 / 3 = 4 (left: 4 12)",
                "12 / 4 = 3 (left: 3 5 12)\n12 / 3 = 4 (left: 4 12)\n12 - 4 = 8 (left: 4 8)",
                "12 / 4 = 3 (left: 3 5 12)\n12 / 3 = 4 (left: 4 12)",
                "12 / 4 = 3 (left: 3 5 12)\n12 / 3 = 4 (left: 4 12)\n12 - 4 = 8 (left: 4 8)"
            ]
        },
        "step_7": {
            "steps": [
                "5 * 12 = 60 (left: 4 60 12)\n12 / 4 = 3 (left: 3 60)",
                "12 - 4 = 8 (left: 8 5 12)\n8 - 5 = 3 (left: 3 12)\n12 / 3 = 4 (left: 4 12)",
                "12 - 4 = 8 (left: 8 5 12)\n8 - 5 = 3 (left: 3 12)\n12 / 3 = 4 (left: 4 12)",
                "12 / 4 = 3 (left: 3 5 12)\n12 / 3 = 4 (left: 4 12)\n12 - 4 = 8 (left: 4 8)\n8 - 4 = 4 (left: 4 8)",
                "12 / 4 = 3 (left: 3 5 12)\n12 / 3 = 4 (left: 4 12)\n12 - 4 = 8 (left: 8)",
                "12 - 4 = 8 (left: 8 5 12)\n8 - 5 = 3 (left: 3 12)\n12 / 3 = 4 (left: 4 12)",
                "12 / 4 = 3 (left: 3 5 12)\n12 / 3 = 4 (left: 4 12)\n12 - 4 = 8 (left: 8)",
                "12 / 4 = 3 (left: 3 5 12)\n12 / 3 = 4 (left: 4 12)\n12 - 4 = 8 (left: 4 8)\n4 + 8 = 12 (left: 8 12)",
                "12 / 4 = 3 (left: 3 5 12)\n12 / 3 = 4 (left: 4 12)\n12 + 4 = 16 (left: 16)",
                "12 / 4 = 3 (left: 3 5 12)\n12 / 3 = 4 (left: 4 12)\n12 - 4 = 8 (left: 4 8)\n8 / 4 = 2 (left: 2 8)"
            ],
            "values": [
                1.002,
                1.002,
                1.002,
                2.001,
                0.003,
                0.003,
                0.002,
                1.001,
                0.0,
                1.0
            ],
            "resampled": [
                "0 <- 4.5",
                "1 <- 5.7",
                "2 <- 5.7",
                "3 <- 2.8",
                "4 <- 5.1",
                "5 <- 4.5",
                "6 <- 1.5",
                "7 <- 1.1",
                "8 <- 5.1",
                "9 <- 7.1"
            ],
            "resampled_steps": [
                "5 * 12 = 60 (left: 4 60 12)",
                "12 - 4 = 8 (left: 8 5 12)\n8 - 5 = 3 (left: 3 12)",
                "12 - 4 = 8 (left: 8 5 12)\n8 - 5 = 3 (left: 3 12)",
                "12 - 4 = 8 (left: 8 5 12)\n8 - 5 = 3 (left: 3 12)",
                "12 / 4 = 3 (left: 3 5 12)\n12 / 3 = 4 (left: 4 12)",
                "5 * 12 = 60 (left: 4 60 12)",
                "12 - 4 = 8 (left: 5 8 12)",
                "12 - 5 = 7 (left: 4 7 12)",
                "12 / 4 = 3 (left: 3 5 12)\n12 / 3 = 4 (left: 4 12)",
                "12 - 4 = 8 (left: 8 5 12)\n8 - 5 = 3 (left: 3 12)\n12 / 3 = 4 (left: 4 12)"
            ]
        },
        "step_8": {
            "steps": [
                "5 * 12 = 60 (left: 4 60 12)\n60 - 4 = 56 (left: 56 12)",
                "12 - 4 = 8 (left: 8 5 12)\n8 - 5 = 3 (left: 3 12)\n3 + 12 = 15 (left: 15)",
                "12 - 4 = 8 (left: 8 5 12)\n8 - 5 = 3 (left: 3 12)\n3 + 12 = 15 (left: 3 15)",
                "12 - 4 = 8 (left: 8 5 12)\n8 - 5 = 3 (left: 3 12)\n3 * 4 = 12 (left: 12)",
                "12 / 4 = 3 (left: 3 5 12)\n12 / 3 = 4 (left: 4 12)\n12 / 4 = 3 (left: 3 8)",
                "5 * 12 = 60 (left: 4 60 12)\n60 / 4 = 15 (left: 15 12 64)",
                "12 - 4 = 8 (left: 5 8 12)\n8 - 5 = 3 (left: 3 8 12)",
                "12 - 5 = 7 (left: 4 7 12)\n7 + 4 = 11 (left: 11 12)",
                "12 / 4 = 3 (left: 3 5 12)\n12 / 3 = 4 (left: 4 12)\n4 * 12 = 48 (left: 48)",
                "12 - 4 = 8 (left: 8 5 12)\n8 - 5 = 3 (left: 3 12)\n12 / 3 = 4 (left: 4 12)\n12 - 4 = 8 (left: 8 12)"
            ],
            "values": [
                0.003,
                0.001,
                0.003,
                0.003,
                60.0,
                2.001,
                21.001,
                0.003,
                0.002,
                1.002
            ],
            "resampled": [
                "0 <- 7.9",
                "1 <- 8.6",
                "2 <- 5.7",
                "3 <- 2.8",
                "4 <- 6.0",
                "5 <- 8.4",
                "6 <- 5.7",
                "7 <- 8.4",
                "8 <- 8.6",
                "9 <- 2.8"
            ],
            "resampled_steps": [
                "12 / 4 = 3 (left: 3 5 12)\n12 / 3 = 4 (left: 4 12)\n12 - 4 = 8 (left: 4 8)\n8 / 4 = 2 (left: 2 8)",
                "12 - 4 = 8 (left: 5 8 12)\n8 - 5 = 3 (left: 3 8 12)",
                "12 - 4 = 8 (left: 8 5 12)\n8 - 5 = 3 (left: 3 12)",
                "12 - 4 = 8 (left: 8 5 12)\n8 - 5 = 3 (left: 3 12)",
                "12 / 4 = 3 (left: 3 5 12)\n12 / 3 = 4 (left: 4 12)\n12 - 4 = 8 (left: 4 8)",
                "12 / 4 = 3 (left: 3 5 12)\n12 / 3 = 4 (left: 4 12)\n12 / 4 = 3 (left: 3 8)",
                "12 - 4 = 8 (left: 8 5 12)\n8 - 5 = 3 (left: 3 12)",
                "12 / 4 = 3 (left: 3 5 12)\n12 / 3 = 4 (left: 4 12)\n12 / 4 = 3 (left: 3 8)",
                "12 - 4 = 8 (left: 5 8 12)\n8 - 5 = 3 (left: 3 8 12)",
                "12 - 4 = 8 (left: 8 5 12)\n8 - 5 = 3 (left: 3 12)"
            ]
        },
        "step_9": {
            "steps": [
                "12 / 4 = 3 (left: 3 5 12)\n12 / 3 = 4 (left: 4 12)\n12 - 4 = 8 (left: 4 8)\n8 / 4 = 2 (left: 2 8)\n2 * 8 = 16 (left: 16)",
                "12 - 4 = 8 (left: 5 8 12)\n8 - 5 = 3 (left: 3 8 12)\n3 + 8 = 11 (left: 11 12 8)",
                "12 - 4 = 8 (left: 8 5 12)\n8 - 5 = 3 (left: 3 12)\n12 / 3 = 4 (left: 3 4)",
                "12 - 4 = 8 (left: 8 5 12)\n8 - 5 = 3 (left: 3 12)\n12 - 3 = 9 (left: 9)",
                "12 / 4 = 3 (left: 3 5 12)\n12 / 3 = 4 (left: 4 12)\n12 - 4 = 8 (left: 4 8)\n8 - 4 = 4 (left: 4 8)",
                "12 / 4 = 3 (left: 3 5 12)\n12 / 3 = 4 (left: 4 12)\n12 / 4 = 3 (left: 3 8)\n8 / 3 = 2.6667 (left: 2.6667 8)",
                "12 - 4 = 8 (left: 8 5 12)\n8 - 5 = 3 (left: 3 12)\n3 / 12 = 0.25 (left: 0.25 12)",
                "12 / 4 = 3 (left: 3 5 12)\n12 / 3 = 4 (left: 4 12)\n12 / 4 = 3 (left: 3 8)\n3 + 8 = 11 (left: 8 11)",
                "12 - 4 = 8 (left: 5 8 12)\n8 - 5 = 3 (left: 3 8 12)\n12 / 3 = 4 (left: 4 8 8)",
                "12 - 4 = 8 (left: 8 5 12)\n8 - 5 = 3 (left: 3 12)\n3 * 12 = 36 (left: 12 36)"
            ],
            "values": [
                20.001,
                1.002,
                2.001,
                0.0,
                40.001,
                2.0,
                0.003,
                0.002,
                60.0,
                0.003
            ],
            "resampled": [
                "0 <- 2.8",
                "1 <- 9.8",
                "2 <- 8.6",
                "3 <- 8.4",
                "4 <- 4.1",
                "5 <- 8.4",
                "6 <- 8.4",
                "7 <- 9.8",
                "8 <- 9.8",
                "9 <- 9.0"
            ],
            "resampled_steps": [
                "12 - 4 = 8 (left: 8 5 12)\n8 - 5 = 3 (left: 3 12)",
                "12 - 4 = 8 (left: 5 8 12)\n8 - 5 = 3 (left: 3 8 12)\n12 / 3 = 4 (left: 4 8 8)",
                "12 - 4 = 8 (left: 5 8 12)\n8 - 5 = 3 (left: 3 8 12)",
                "12 / 4 = 3 (left: 3 5 12)\n12 / 3 = 4 (left: 4 12)\n12 / 4 = 3 (left: 3 8)",
                "12 - 4 = 8 (left: 5 8 12)",
                "12 / 4 = 3 (left: 3 5 12)\n12 / 3 = 4 (left: 4 12)\n12 / 4 = 3 (left: 3 8)",
                "12 / 4 = 3 (left: 3 5 12)\n12 / 3 = 4 (left: 4 12)\n12 / 4 = 3 (left: 3 8)",
                "12 - 4 = 8 (left: 5 8 12)\n8 - 5 = 3 (left: 3 8 12)\n12 / 3 = 4 (left: 4 8 8)",
                "12 - 4 = 8 (left: 5 8 12)\n8 - 5 = 3 (left: 3 8 12)\n12 / 3 = 4 (left: 4 8 8)",
                "12 / 4 = 3 (left: 3 5 12)\n12 / 3 = 4 (left: 4 12)\n12 - 4 = 8 (left: 4 8)\n8 / 4 = 2 (left: 2 8)\n2 * 8 = 16 (left: 16)"
            ]
        },
        "step_10": {
            "steps": [
                "12 - 4 = 8 (left: 8 5 12)\n8 - 5 = 3 (left: 3 12)\n3 * 12 = 36 (left: 36)",
                "12 - 4 = 8 (left: 5 8 12)\n8 - 5 = 3 (left: 3 8 12)\n12 / 3 = 4 (left: 4 8 8)\n4 + 8 = 12 (left: 8 12)",
                "12 - 4 = 8 (left: 5 8 12)\n8 - 5 = 3 (left: 3 8 12)\n8 / 3 = 2.67 (left: 2.67 8 12)",
                "12 / 4 = 3 (left: 3 5 12)\n12 / 3 = 4 (left: 4 12)\n12 / 4 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)",
                "12 - 4 = 8 (left: 5 8 12)\n12 / 8 = 1.5 (left: 5 1.5)",
                "12 / 4 = 3 (left: 3 5 12)\n12 / 3 = 4 (left: 4 12)\n12 / 4 = 3 (left: 3 8)\n3 * 8 = 24 (left: 8 24)",
                "12 / 4 = 3 (left: 3 5 12)\n12 / 3 = 4 (left: 4 12)\n12 / 4 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)",
                "12 - 4 = 8 (left: 5 8 12)\n8 - 5 = 3 (left: 3 8 12)\n12 / 3 = 4 (left: 4 8 8)\n8 * 4 = 32 (left: 8 32)",
                "12 - 4 = 8 (left: 5 8 12)\n8 - 5 = 3 (left: 3 8 12)\n12 / 3 = 4 (left: 4 8 8)\n4 + 8 = 12 (left: 8 12)",
                "12 / 4 = 3 (left: 3 5 12)\n12 / 3 = 4 (left: 4 12)\n12 - 4 = 8 (left: 4 8)\n8 / 4 = 2 (left: 2 8)\n2 * 8 = 16 (left: 16)\nThe input 16 has only one number, so there are no possible next steps."
            ],
            "values": [
                0.0,
                2.001,
                3.0,
                0.0,
                1.002,
                0.002,
                0.001,
                1.002,
                1.001,
                0.003
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 2.255919
    },
    "35": {
        "input": "4 6 13 13",
        "step_1": {
            "steps": [
                "13 / 6 = 2.1667 (left: 4 2.1667 13)",
                "6 - 4 = 2 (left: 2 13 13)",
                "4 * 6 = 24 (left: 24 13 13)",
                "13 - 6 = 7 (left: 4 7 13)",
                "6 - 4 = 2 (left: 2 13 13)",
                "13 / 4 = 3.25 (left: 3.25 6 13)",
                "4 + 6 = 10 (left: 10 13 13)",
                "6 * 13 = 78 (left: 4 78 13)",
                "6 - 4 = 2 (left: 2 13 13)",
                "13 - 6 = 7 (left: 4 7 13)"
            ],
            "values": [
                3.0,
                22.0,
                40.0,
                41.0,
                1.002,
                1.002,
                0.003,
                21.001,
                20.002,
                3.0
            ],
            "resampled": [
                "0 <- 1.7",
                "1 <- 1.3",
                "2 <- INIT",
                "3 <- 1.8",
                "4 <- 1.3",
                "5 <- INIT",
                "6 <- 1.3",
                "7 <- 1.8",
                "8 <- 1.1",
                "9 <- INIT"
            ],
            "resampled_steps": [
                "6 * 13 = 78 (left: 4 78 13)",
                "13 - 6 = 7 (left: 4 7 13)",
                "",
                "6 - 4 = 2 (left: 2 13 13)",
                "13 - 6 = 7 (left: 4 7 13)",
                "",
                "13 - 6 = 7 (left: 4 7 13)",
                "6 - 4 = 2 (left: 2 13 13)",
                "6 - 4 = 2 (left: 2 13 13)",
                ""
            ]
        },
        "step_2": {
            "steps": [
                "6 * 13 = 78 (left: 4 78 13)\n13 + 4 = 17 (left: 78 17)",
                "13 - 6 = 7 (left: 4 7 13)\n4 * 7 = 28 (left: 28 13)",
                "4 + 6 = 10 (left: 10 13 13)",
                "6 - 4 = 2 (left: 2 13 13)\n13 - 13 = 0 (left: 2 0)",
                "13 - 6 = 7 (left: 4 7 13)\n7 * 13 = 91 (left: 4 91)",
                "13 / 4 = 3.25 (left: 3.25 13 13)",
                "13 - 6 = 7 (left: 4 7 13)\n7 * 13 = 91 (left: 4 91)",
                "6 - 4 = 2 (left: 2 13 13)\n2 * 13 = 26 (left: 13 26)",
                "6 - 4 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)",
                "13 / 4 = 3.25 (left: 3.25 6 13)"
            ],
            "values": [
                0.002,
                0.002,
                0.003,
                2.001,
                21.001,
                2.001,
                1.0,
                20.002,
                60.0,
                21.001
            ],
            "resampled": [
                "0 <- 1.2",
                "1 <- 2.8",
                "2 <- 1.2",
                "3 <- 1.1",
                "4 <- 1.2",
                "5 <- INIT",
                "6 <- 2.8",
                "7 <- 2.8",
                "8 <- 2.9",
                "9 <- 1.1"
            ],
            "resampled_steps": [
                "4 * 6 = 24 (left: 24 13 13)",
                "6 - 4 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)",
                "4 * 6 = 24 (left: 24 13 13)",
                "6 - 4 = 2 (left: 2 13 13)",
                "4 * 6 = 24 (left: 24 13 13)",
                "",
                "6 - 4 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)",
                "6 - 4 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)",
                "13 / 4 = 3.25 (left: 3.25 6 13)",
                "6 - 4 = 2 (left: 2 13 13)"
            ]
        },
        "step_3": {
            "steps": [
                "4 * 6 = 24 (left: 24 13 13)\n24 - 13 = 11 (left: 11 13)",
                "6 - 4 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 - 13 = -2 (left: -2)",
                "4 * 6 = 24 (left: 24 13 13)\n13 / 13 = 1 (left: 1 13)",
                "6 - 4 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)",
                "4 * 6 = 24 (left: 24 13 13)\n24 * 13 = 312 (left: 13 312)",
                "6 / 4 = 1.5 (left: 1.5 13 13)",
                "6 - 4 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 * 13 = 143 (left: 143)",
                "6 - 4 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)",
                "13 / 4 = 3.25 (left: 3.25 6 13)\n13 + 3.25 = 16.25 (left: 6 16.25)",
                "6 - 4 = 2 (left: 2 13 13)\n2 + 13 = 15 (left: 13 15)"
            ],
            "values": [
                60.0,
                0.003,
                0.003,
                60.0,
                0.002,
                0.003,
                0.003,
                60.0,
                2.001,
                0.003
            ],
            "resampled": [
                "0 <- 3.7",
                "1 <- 2.7",
                "2 <- 1.2",
                "3 <- 1.1",
                "4 <- 2.8",
                "5 <- 3.8",
                "6 <- 3.0",
                "7 <- INIT",
                "8 <- 3.3",
                "9 <- 3.3"
            ],
            "resampled_steps": [
                "6 - 4 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)",
                "6 - 4 = 2 (left: 2 13 13)\n2 * 13 = 26 (left: 13 26)",
                "4 * 6 = 24 (left: 24 13 13)",
                "6 - 4 = 2 (left: 2 13 13)",
                "6 - 4 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)",
                "13 / 4 = 3.25 (left: 3.25 6 13)\n13 + 3.25 = 16.25 (left: 6 16.25)",
                "4 * 6 = 24 (left: 24 13 13)\n24 - 13 = 11 (left: 11 13)",
                "",
                "6 - 4 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)",
                "6 - 4 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)"
            ]
        },
        "step_4": {
            "steps": [
                "6 - 4 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (6 - 4) + (13 - 13) + 13 = 24",
                "6 - 4 = 2 (left: 2 13 13)\n2 * 13 = 26 (left: 13 26)\n13 - 26 = -13 (left: -13)",
                "4 * 6 = 24 (left: 24 13 13)\n24 * 13 = 312 (left: 312 13)",
                "6 - 4 = 2 (left: 2 13 13)\n2 * 13 = 26 (left: 13 26)",
                "6 - 4 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 * 13 = 143 (left: 143)",
                "13 / 4 = 3.25 (left: 3.25 6 13)\n13 + 3.25 = 16.25 (left: 6 16.25)\n6 * 16.25 = 97.5 (left: 16.25 97.5)",
                "4 * 6 = 24 (left: 24 13 13)\n24 - 13 = 11 (left: 11 13)\n11 - 13 = -2 (left: -2)",
                "6 * 4 = 24 (left: 24 13 13)",
                "6 - 4 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 * 13 = 143 (left: 143)",
                "6 - 4 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 / 13 = 0.846 (left: 0.846)"
            ],
            "values": [
                60.0,
                0.003,
                21.001,
                0.002,
                0.003,
                2.001,
                0.002,
                40.001,
                0.002,
                0.002
            ],
            "resampled": [
                "0 <- 1.1",
                "1 <- 4.0",
                "2 <- 4.0",
                "3 <- 4.0",
                "4 <- 2.8",
                "5 <- 4.2",
                "6 <- 1.3",
                "7 <- 3.0",
                "8 <- 1.1",
                "9 <- 3.7"
            ],
            "resampled_steps": [
                "6 - 4 = 2 (left: 2 13 13)",
                "6 - 4 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (6 - 4) + (13 - 13) + 13 = 24",
                "6 - 4 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (6 - 4) + (13 - 13) + 13 = 24",
                "6 - 4 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (6 - 4) + (13 - 13) + 13 = 24",
                "6 - 4 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)",
                "4 * 6 = 24 (left: 24 13 13)\n24 * 13 = 312 (left: 312 13)",
                "13 - 6 = 7 (left: 4 7 13)",
                "4 * 6 = 24 (left: 24 13 13)\n24 - 13 = 11 (left: 11 13)",
                "6 - 4 = 2 (left: 2 13 13)",
                "6 - 4 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)"
            ]
        },
        "step_5": {
            "steps": [
                "6 - 4 = 2 (left: 2 13 13)\n2 + 13 = 15 (left: 13 15)",
                "6 - 4 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (6 - 4) + (13 - 13) + 13 = 24\nInput: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n9 * 1 = 9 (left: 9)\nAnswer: (3 * 3) - (8 - 9) + 9 = 24",
                "6 - 4 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (6 - 4) + (13 - 13) + 13 = 24\nInput: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n9 * 1 = 9 (left: 9)\n9 * 9 = 81 (left: 81)\n81 / 3 = 27 (left: 27)\n27 - 8 = 19 (left: 19)\n19 + 9 = 28 (left: 28)\n28 - 9 = 19 (left: 19)\n19 + 8 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer: (((3 * 3) - 8) + 9) - 3 = 24",
                "6 - 4 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (6 - 4) + (13 - 13) + 13 = 24\nInput: 3 3 8 8\nSteps:\n3 * 3 = 9 (left: 8 8 9)\n8 - 8 = 0 (left: 0 9)\n9 * 0 = 0 (left: 0)\nAnswer: (3 * 3) * (8 - 8) * 8 = 24",
                "6 - 4 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n13 / 11 = 1.18181818182 (left: 1.18181818182)",
                "4 * 6 = 24 (left: 24 13 13)\n24 * 13 = 312 (left: 312 13)\n312 + 13 = 325 (left: 13 325)",
                "13 - 6 = 7 (left: 4 7 13)\n7 - 4 = 3 (left: 3 13)",
                "4 * 6 = 24 (left: 24 13 13)\n24 - 13 = 11 (left: 11 13)\n13 / 11 = 1.18181818182 (left: 1.18181818182)",
                "6 - 4 = 2 (left: 2 13 13)\n13 / 2 = 6.5 (left: 6.5 13)",
                "6 - 4 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (6 - 4) + (13 + 13) = 24"
            ],
            "values": [
                0.003,
                40.0,
                40.0,
                60.0,
                0.001,
                0.003,
                1.002,
                0.002,
                21.001,
                20.002
            ],
            "resampled": [
                "0 <- 5.8",
                "1 <- 4.0",
                "2 <- 3.7",
                "3 <- 3.7",
                "4 <- 3.7",
                "5 <- 4.2",
                "6 <- 5.1",
                "7 <- 5.8",
                "8 <- 5.1",
                "9 <- 5.1"
            ],
            "resampled_steps": [
                "6 - 4 = 2 (left: 2 13 13)\n13 / 2 = 6.5 (left: 6.5 13)",
                "6 - 4 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (6 - 4) + (13 - 13) + 13 = 24",
                "6 - 4 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)",
                "6 - 4 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)",
                "6 - 4 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)",
                "4 * 6 = 24 (left: 24 13 13)\n24 * 13 = 312 (left: 312 13)",
                "6 - 4 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (6 - 4) + (13 - 13) + 13 = 24\nInput: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n9 * 1 = 9 (left: 9)\nAnswer: (3 * 3) - (8 - 9) + 9 = 24",
                "6 - 4 = 2 (left: 2 13 13)\n13 / 2 = 6.5 (left: 6.5 13)",
                "6 - 4 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (6 - 4) + (13 - 13) + 13 = 24\nInput: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n9 * 1 = 9 (left: 9)\nAnswer: (3 * 3) - (8 - 9) + 9 = 24",
                "6 - 4 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (6 - 4) + (13 - 13) + 13 = 24\nInput: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n9 * 1 = 9 (left: 9)\nAnswer: (3 * 3) - (8 - 9) + 9 = 24"
            ]
        },
        "step_6": {
            "steps": [
                "6 - 4 = 2 (left: 2 13 13)\n13 / 2 = 6.5 (left: 6.5 13)\n13 / 6.5 = 2 (left: 6.5 2)",
                "6 - 4 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (6 - 4) + (13 - 13) + 13 = 24\nInput: 3 3 8 8\nSteps:\n3 * 8 = 24 (left: 3 8 24)\n8 - 3 = 5 (left: 5 24)\n5 * 24 = 120 (left: 120)\nAnswer: (3 * 8) - (8 - 3) = 24",
                "6 - 4 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (6 - 4) + (13 + 13) = 24",
                "6 - 4 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: ((6 - 4) + 13) + 13 = 24",
                "6 - 4 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (6 - 4) + (13 + 13) = 24",
                "4 * 6 = 24 (left: 24 13 13)\n24 * 13 = 312 (left: 312 13)\n312 * 13 = 4056 (left: 13 4056)",
                "6 - 4 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (6 - 4) + (13 - 13) + 13 = 24\nInput: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n9 * 1 = 9 (left: 9)\nAnswer: (3 * 3) - (8 - 9) + 9 = 24\nInput: 4 5 6 7\nSteps:\n4 + 7 = 11 (left: 5 6 11)\n6 - 5 = 1 (left: 1 11)\n11 * 1 = 11 (left: 11)\nAnswer: (4 + 7) * (6 - 5) + 11 = 24",
                "6 - 4 = 2 (left: 2 13 13)\n13 / 2 = 6.5 (left: 6.5 13)\n13 - 6.5 = 6.5 (left: 6.5 13)",
                "6 - 4 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (6 - 4) + (13 - 13) + 13 = 24\nInput: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n9 * 1 = 9 (left: 9)\nAnswer: (3 * 3) - (8 - 9) + 9 = 24\nInput: 1 3 4 6\nSteps:\n3 * 4 = 12 (left: 1 6 12)\n12 + 6 = 18 (left: 1 18)\n18 + 1 = 19 (left: 19)\n19 + 19 = 24 (left: 24)\nAnswer: ((3 * 4) + 6) + (1 + 19) = 24",
                "6 - 4 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (6 - 4) + (13 - 13) + 13 = 24\nInput: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n9 * 1 = 9 (left: 9)\nAnswer: (3 * 3) - (8 - 9) + 9 = 24\nInput: 1 3 5 8\nSteps:\n3 * 5 = 15 (left: 1 8 15)\n15 - 8 = 7 (left: 1 7)\n7 * 1 = 7 (left: 7)\nAnswer: (3 * 5) - (8 - 1) + 7 = 24"
            ],
            "values": [
                1.0,
                40.0,
                60.0,
                60.0,
                40.001,
                0.002,
                40.0,
                41.0,
                40.0,
                40.0
            ],
            "resampled": [
                "0 <- 3.3",
                "1 <- 6.9",
                "2 <- 6.6",
                "3 <- 6.6",
                "4 <- 4.7",
                "5 <- 6.8",
                "6 <- 6.9",
                "7 <- 4.0",
                "8 <- 6.2",
                "9 <- 2.8"
            ],
            "resampled_steps": [
                "6 - 4 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)",
                "6 - 4 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (6 - 4) + (13 - 13) + 13 = 24\nInput: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n9 * 1 = 9 (left: 9)\nAnswer: (3 * 3) - (8 - 9) + 9 = 24\nInput: 1 3 5 8\nSteps:\n3 * 5 = 15 (left: 1 8 15)\n15 - 8 = 7 (left: 1 7)\n7 * 1 = 7 (left: 7)\nAnswer: (3 * 5) - (8 - 1) + 7 = 24",
                "6 - 4 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (6 - 4) + (13 - 13) + 13 = 24\nInput: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n9 * 1 = 9 (left: 9)\nAnswer: (3 * 3) - (8 - 9) + 9 = 24\nInput: 4 5 6 7\nSteps:\n4 + 7 = 11 (left: 5 6 11)\n6 - 5 = 1 (left: 1 11)\n11 * 1 = 11 (left: 11)\nAnswer: (4 + 7) * (6 - 5) + 11 = 24",
                "6 - 4 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (6 - 4) + (13 - 13) + 13 = 24\nInput: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n9 * 1 = 9 (left: 9)\nAnswer: (3 * 3) - (8 - 9) + 9 = 24\nInput: 4 5 6 7\nSteps:\n4 + 7 = 11 (left: 5 6 11)\n6 - 5 = 1 (left: 1 11)\n11 * 1 = 11 (left: 11)\nAnswer: (4 + 7) * (6 - 5) + 11 = 24",
                "6 * 4 = 24 (left: 24 13 13)",
                "6 - 4 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (6 - 4) + (13 - 13) + 13 = 24\nInput: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n9 * 1 = 9 (left: 9)\nAnswer: (3 * 3) - (8 - 9) + 9 = 24\nInput: 1 3 4 6\nSteps:\n3 * 4 = 12 (left: 1 6 12)\n12 + 6 = 18 (left: 1 18)\n18 + 1 = 19 (left: 19)\n19 + 19 = 24 (left: 24)\nAnswer: ((3 * 4) + 6) + (1 + 19) = 24",
                "6 - 4 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (6 - 4) + (13 - 13) + 13 = 24\nInput: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n9 * 1 = 9 (left: 9)\nAnswer: (3 * 3) - (8 - 9) + 9 = 24\nInput: 1 3 5 8\nSteps:\n3 * 5 = 15 (left: 1 8 15)\n15 - 8 = 7 (left: 1 7)\n7 * 1 = 7 (left: 7)\nAnswer: (3 * 5) - (8 - 1) + 7 = 24",
                "6 - 4 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (6 - 4) + (13 - 13) + 13 = 24",
                "6 - 4 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (6 - 4) + (13 + 13) = 24",
                "6 - 4 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)"
            ]
        },
        "step_7": {
            "steps": [
                "6 - 4 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 / 13 = 0.846 (left: 0.846)",
                "6 - 4 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (6 - 4) + (13 - 13) + 13 = 24\nInput: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n9 * 1 = 9 (left: 9)\nAnswer: (3 * 3) - (8 - 9) + 9 = 24\nInput: 1 3 5 8\nSteps:\n3 * 5 = 15 (left: 1 8 15)\n15 - 8 = 7 (left: 1 7)\n7 * 1 = 7 (left: 7)\nAnswer: (3 * 5) - (8 - 1) + 7 = 24\nInput: 2 3 4 6\nSteps:\n3 * 4 = 12 (left: 2 6 12)\n12 - 6 = 6 (left: 2 6)\n6 * 2 = 12 (left: 12)\nAnswer: (3 * 4) - (6 - 2) * 12 = 24",
                "6 - 4 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (6 - 4) + (13 - 13) + 13 = 24\nInput: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n9 * 1 = 9 (left: 9)\nAnswer: (3 * 3) - (8 - 9) + 9 = 24\nInput: 4 5 6 7\nSteps:\n4 + 7 = 11 (left: 5 6 11)\n6 - 5 = 1 (left: 1 11)\n11 * 1 = 11 (left: 11)\nAnswer: (4 + 7) * (6 - 5) + 11 = 24\nInput: 2 3 3 4\nSteps:\n3 * 3 = 9 (left: 2 4 9)\n9 - 4 = 5 (left: 2 5)\n5 * 2 = 10 (left: 10)\n10 + 10 + 4 = 24\nAnswer: ((2 * 3) - 4) * (3 + 3) = 24",
                "6 - 4 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (6 - 4) + (13 - 13) + 13 = 24\nInput: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n9 * 1 = 9 (left: 9)\nAnswer: (3 * 3) - (8 - 9) + 9 = 24\nInput: 4 5 6 7\nSteps:\n4 + 7 = 11 (left: 5 6 11)\n6 - 5 = 1 (left: 1 11)\n11 * 1 = 11 (left: 11)\nAnswer: (4 + 7) * (6 - 5) + 11 = 24\nInput: 2 3 6 8\nSteps:\n6 - 3 = 3 (left: 2 3 8)\n8 - 2 = 6 (left: 3 6)\n6 * 3 = 18 (left: 18)\n18 + 6 = 24 (left: 24)\nAnswer: ((6 - 3) * (8 - 2)) + 18 = 24",
                "6 * 4 = 24 (left: 24 13 13)\n13 + 24 = 37 (left: 24 37)",
                "6 - 4 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (6 - 4) + (13 - 13) + 13 = 24\nInput: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n9 * 1 = 9 (left: 9)\nAnswer: (3 * 3) - (8 - 9) + 9 = 24\nInput: 1 3 4 6\nSteps:\n3 * 4 = 12 (left: 1 6 12)\n12 + 6 = 18 (left: 1 18)\n18 + 1 = 19 (left: 19)\n19 + 19 = 24 (left: 24)\nAnswer: ((3 * 4) + 6) + (1 + 19) = 24\nInput: 2 3 5 7\nSteps:\n2 * 3 = 6 (left: 5 6 7)\n6 + 7 = 13 (left: 5 13)\n13 + 5 = 18 (left: 18)\n18 + 18 = 36 (left: 36)\n36 / 3 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: (((2 * 3) + 7) + 5) + (12 * 2) = 24",
                "6 - 4 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (6 - 4) + (13 - 13) + 13 = 24\nInput: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n9 * 1 = 9 (left: 9)\nAnswer: (3 * 3) - (8 - 9) + 9 = 24\nInput: 1 3 5 8\nSteps:\n3 * 5 = 15 (left: 1 8 15)\n15 - 8 = 7 (left: 1 7)\n7 * 1 = 7 (left: 7)\nAnswer: (3 * 5) - (8 - 1) + 7 = 24\nInput: 2 3 3 4\nSteps:\n3 * 3 = 9 (left: 2 4 9)\n9 - 4 = 5 (left: 2 5)\n5 * 2 = 10 (left: 10)\n10 + 10 + 4 = 24\nAnswer: ((3 * 3) - 4) * 2 + 10 = 24",
                "6 - 4 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (6 - 4) + (13 - 13) + 13 = 24\nInput: 2 3 5 10\nSteps:\n2 * 10 = 20 (left: 3 5 20)\n5 - 3 = 2 (left: 2 20)\n20 / 2 = 10 (left: 10)\nAnswer: (2 * 10) - (5 - 3) = 24",
                "6 - 4 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (6 - 4) + (13 + 13) = 24\nInput: 3 3 4 7\nSteps:\n3 * 4 = 12 (left: 3 7 12)\n7 - 3 = 4 (left: 4 12)\n12 * 4 = 48 (left: 48)\nAnswer: (3 * 4) * (7 - 3) = 24",
                "6 - 4 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 / 13 = 0.846 (left: 0.846)"
            ],
            "values": [
                0.002,
                20.0,
                40.0,
                40.0,
                0.003,
                20.0,
                40.0,
                40.0,
                60.0,
                0.002
            ],
            "resampled": [
                "0 <- 3.0",
                "1 <- 6.4",
                "2 <- 4.7",
                "3 <- 7.3",
                "4 <- 4.0",
                "5 <- 3.0",
                "6 <- 6.7",
                "7 <- 7.7",
                "8 <- 2.9",
                "9 <- 6.7"
            ],
            "resampled_steps": [
                "4 * 6 = 24 (left: 24 13 13)\n24 - 13 = 11 (left: 11 13)",
                "6 - 4 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (6 - 4) + (13 + 13) = 24",
                "6 * 4 = 24 (left: 24 13 13)",
                "6 - 4 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (6 - 4) + (13 - 13) + 13 = 24\nInput: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n9 * 1 = 9 (left: 9)\nAnswer: (3 * 3) - (8 - 9) + 9 = 24\nInput: 4 5 6 7\nSteps:\n4 + 7 = 11 (left: 5 6 11)\n6 - 5 = 1 (left: 1 11)\n11 * 1 = 11 (left: 11)\nAnswer: (4 + 7) * (6 - 5) + 11 = 24\nInput: 2 3 6 8\nSteps:\n6 - 3 = 3 (left: 2 3 8)\n8 - 2 = 6 (left: 3 6)\n6 * 3 = 18 (left: 18)\n18 + 6 = 24 (left: 24)\nAnswer: ((6 - 3) * (8 - 2)) + 18 = 24",
                "6 - 4 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (6 - 4) + (13 - 13) + 13 = 24",
                "4 * 6 = 24 (left: 24 13 13)\n24 - 13 = 11 (left: 11 13)",
                "6 - 4 = 2 (left: 2 13 13)\n13 / 2 = 6.5 (left: 6.5 13)\n13 - 6.5 = 6.5 (left: 6.5 13)",
                "6 - 4 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (6 - 4) + (13 - 13) + 13 = 24\nInput: 2 3 5 10\nSteps:\n2 * 10 = 20 (left: 3 5 20)\n5 - 3 = 2 (left: 2 20)\n20 / 2 = 10 (left: 10)\nAnswer: (2 * 10) - (5 - 3) = 24",
                "13 / 4 = 3.25 (left: 3.25 6 13)",
                "6 - 4 = 2 (left: 2 13 13)\n13 / 2 = 6.5 (left: 6.5 13)\n13 - 6.5 = 6.5 (left: 6.5 13)"
            ]
        },
        "step_8": {
            "steps": [
                "4 * 6 = 24 (left: 24 13 13)\n24 - 13 = 11 (left: 11 13)\n13 - 11 = 2 (left: 2)",
                "6 - 4 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (6 - 4) + (13 + 13) = 24\nInput: 3 3 8 9\nSteps:\n8 - 3 = 5 (left: 3 5 9)\n5 * 3 = 15 (left: 15 9)\n15 - 9 = 6 (left: 6)\n6 * 4 = 24 (left: 24)\nAnswer: ((8 - 3) * 3) - 9 = 24",
                "6 * 4 = 24 (left: 24 13 13)\n13 * 13 = 169 (left: 24 169)",
                "6 - 4 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (6 - 4) + (13 - 13) + 13 = 24\nInput: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n9 * 1 = 9 (left: 9)\nAnswer: (3 * 3) - (8 - 9) + 9 = 24\nInput: 4 5 6 7\nSteps:\n4 + 7 = 11 (left: 5 6 11)\n6 - 5 = 1 (left: 1 11)\n11 * 1 = 11 (left: 11)\nAnswer: (4 + 7) * (6 - 5) + 11 = 24\nInput: 2 3 6 8\nSteps:\n6 - 3 = 3 (left: 2 3 8)\n8 - 2 = 6 (left: 3 6)\n6 * 3 = 18 (left: 18)\n18 + 6 = 24 (left: 24)\nAnswer: ((6 - 3) * (8 - 2)) + 18 = 24\nInput: 1 3 5 8\nSteps:\n5 + 8 = 13 (left: 1 3 13)\n13 - 3 = 10 (left: 1 10)\n10 * 1 = 10 (left: 10)\n10 * 10 = 24 (left: 24)\nAnswer: (5 + 8) - (13 - 3) + (10 * 1) = 24",
                "6 - 4 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (6 - 4) + (13 - 13) + 13 = 24\nInput: 3 3 8 9\n\n3 * 8 = 24 (left: 3 9 24)\n9 - 3 = 6 (left: 6 24)\n6 * 24 = 24 (left: 24)\nAnswer: (3 * 8) * (9 - 3) = 24",
                "4 * 6 = 24 (left: 24 13 13)\n24 - 13 = 11 (left: 11 13)\n11 * 13 = 143 (left: 143)",
                "6 - 4 = 2 (left: 2 13 13)\n13 / 2 = 6.5 (left: 6.5 13)\n13 - 6.5 = 6.5 (left: 6.5 13)\n13 - 6.5 = 6.5 (left: 6.5 13)",
                "6 - 4 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (6 - 4) + (13 - 13) + 13 = 24\nInput: 2 3 5 10\nSteps:\n2 * 10 = 20 (left: 3 5 20)\n5 - 3 = 2 (left: 2 20)\n20 / 2 = 10 (left: 10)\nAnswer: (2 * 10) - (5 - 3) = 24\nInput: 3 3 8 9\nSteps:\n8 - 3 = 5 (left: 3 5 9)\n5 + 3 = 8 (left: 8 9)\n8 * 9 = 72 (left: 72)\nAnswer: (8 + 3) * (8 + 9) = 24",
                "13 / 4 = 3.25 (left: 3.25 6 13)\n6 * 3.25 = 19.5 (left: 19.5 13)",
                "6 - 4 = 2 (left: 2 13 13)\n13 / 2 = 6.5 (left: 6.5 13)\n13 - 6.5 = 6.5 (left: 6.5 13)\n13 / 6.5 = 2 (left: 2 13)"
            ],
            "values": [
                0.003,
                40.0,
                20.001,
                20.0,
                20.0,
                0.003,
                20.002,
                20.0,
                1.002,
                1.002
            ],
            "resampled": [
                "0 <- 2.9",
                "1 <- 1.7",
                "2 <- 2.7",
                "3 <- 7.2",
                "4 <- 3.0",
                "5 <- 6.8",
                "6 <- 8.1",
                "7 <- 7.8",
                "8 <- 2.8",
                "9 <- 8.8"
            ],
            "resampled_steps": [
                "13 / 4 = 3.25 (left: 3.25 6 13)",
                "6 * 13 = 78 (left: 4 78 13)",
                "6 - 4 = 2 (left: 2 13 13)\n2 * 13 = 26 (left: 13 26)",
                "6 - 4 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (6 - 4) + (13 - 13) + 13 = 24\nInput: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n9 * 1 = 9 (left: 9)\nAnswer: (3 * 3) - (8 - 9) + 9 = 24\nInput: 4 5 6 7\nSteps:\n4 + 7 = 11 (left: 5 6 11)\n6 - 5 = 1 (left: 1 11)\n11 * 1 = 11 (left: 11)\nAnswer: (4 + 7) * (6 - 5) + 11 = 24\nInput: 2 3 3 4\nSteps:\n3 * 3 = 9 (left: 2 4 9)\n9 - 4 = 5 (left: 2 5)\n5 * 2 = 10 (left: 10)\n10 + 10 + 4 = 24\nAnswer: ((2 * 3) - 4) * (3 + 3) = 24",
                "4 * 6 = 24 (left: 24 13 13)\n24 - 13 = 11 (left: 11 13)",
                "6 - 4 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (6 - 4) + (13 - 13) + 13 = 24\nInput: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n9 * 1 = 9 (left: 9)\nAnswer: (3 * 3) - (8 - 9) + 9 = 24\nInput: 1 3 4 6\nSteps:\n3 * 4 = 12 (left: 1 6 12)\n12 + 6 = 18 (left: 1 18)\n18 + 1 = 19 (left: 19)\n19 + 19 = 24 (left: 24)\nAnswer: ((3 * 4) + 6) + (1 + 19) = 24",
                "6 - 4 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (6 - 4) + (13 + 13) = 24\nInput: 3 3 8 9\nSteps:\n8 - 3 = 5 (left: 3 5 9)\n5 * 3 = 15 (left: 15 9)\n15 - 9 = 6 (left: 6)\n6 * 4 = 24 (left: 24)\nAnswer: ((8 - 3) * 3) - 9 = 24",
                "6 - 4 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (6 - 4) + (13 + 13) = 24\nInput: 3 3 4 7\nSteps:\n3 * 4 = 12 (left: 3 7 12)\n7 - 3 = 4 (left: 4 12)\n12 * 4 = 48 (left: 48)\nAnswer: (3 * 4) * (7 - 3) = 24",
                "6 - 4 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)",
                "13 / 4 = 3.25 (left: 3.25 6 13)\n6 * 3.25 = 19.5 (left: 19.5 13)"
            ]
        },
        "step_9": {
            "steps": [
                "13 / 4 = 3.25 (left: 3.25 6 13)\n13 - 3.25 = 9.75 (left: 6 9.75)",
                "6 * 13 = 78 (left: 4 78 13)\n4 + 78 = 82 (left: 82 13)",
                "6 - 4 = 2 (left: 2 13 13)\n2 * 13 = 26 (left: 13 26)\n13 * 2 = 26 (left: 26)",
                "6 - 4 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (6 - 4) + (13 - 13) + 13 = 24\nInput: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n9 * 1 = 9 (left: 9)\nAnswer: (3 * 3) - (8 - 9) + 9 = 24\nInput: 4 5 6 7\nSteps:\n4 + 7 = 11 (left: 5 6 11)\n6 - 5 = 1 (left: 1 11)\n11 * 1 = 11 (left: 11)\nAnswer: (4 + 7) * (6 - 5) + 11 = 24\nInput: 2 3 3 4\nSteps:\n3 * 3 = 9 (left: 2 4 9)\n9 - 4 = 5 (left: 2 5)\n5 * 2 = 10 (left: 10)\n10 + 10 + 4 = 24\nAnswer: ((2 * 3) - 4) * (3 + 3) = 24\nInput: 1 3 5 7\nSteps:\n5 * 7 = 35 (left: 1 3 35)\n3 - 1 = 2 (left: 2 35)\n35 / 7 = 5 (left: 2 5)\n5 * 5 = 25 (left: 25)\n25 - 25 = 0 (left: 0)\n0 + 25 + 3 = 28\nAnswer: ((5 * 7) - (3 - 1)) * 5 + 3 = 28",
                "4 * 6 = 24 (left: 24 13 13)\n24 - 13 = 11 (left: 11 13)\n13 - 11 = 2 (left: 2)",
                "6 - 4 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (6 - 4) + (13 - 13) + 13 = 24\nInput: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n9 * 1 = 9 (left: 9)\nAnswer: (3 * 3) - (8 - 9) + 9 = 24\nInput: 1 3 4 6\nSteps:\n3 * 4 = 12 (left: 1 6 12)\n12 + 6 = 18 (left: 1 18)\n18 + 1 = 19 (left: 19)\n19 + 19 = 24 (left: 24)\nAnswer: ((3 * 4) + 6) + (1 + 19) = 24\nInput: 3 6 6 7\nSteps:\n6 - 3 = 3 (left: 3 6 7)\n3 * 7 = 21 (left: 6 21)\n6 * 3 = 18 (left: 18)\n21 - 18 = 3 (left: 3)\n3 * 3 = 9 (left: 9)\n9 * 6 = 54 (left: 54)\n54 / 7 = 24 (left: 24)\nAnswer: (((6 - 3) * 7) * (6 * 3)) / 7 = 24",
                "6 - 4 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (6 - 4) + (13 + 13) = 24\nInput: 3 3 8 9\nSteps:\n8 - 3 = 5 (left: 3 5 9)\n5 * 3 = 15 (left: 15 9)\n15 - 9 = 6 (left: 6)\n6 * 4 = 24 (left: 24)\nAnswer: ((8 - 3) * 3) - 9 = 24\nInput: 3 3 7 8\nSteps:\n7 - 3 = 4 (left: 3 4 8)\n4 * 3 = 12 (left: 12 8)\n12 + 8 = 20 (left: 20)\n20 + 4 = 24 (left: 24)\nAnswer: ((7 - 3) * 3) + 8 = 24",
                "6 - 4 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (6 - 4) + (13 + 13) = 24\nInput: 3 3 4 7\nSteps:\n3 * 4 = 12 (left: 3 7 12)\n7 - 3 = 4 (left: 4 12)\n12 * 4 = 48 (left: 48)\nAnswer: (3 * 4) * (7 - 3) = 24\nInput: 2 3 3 4\nSteps:\n2 * 3 = 6 (left: 3 4 6)\n6 * 4 = 24 (left: 24)\nAnswer: (2 * 3) * 4 = 24",
                "6 - 4 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 - 13 = -2 (left: -2)",
                "13 / 4 = 3.25 (left: 3.25 6 13)\n6 * 3.25 = 19.5 (left: 19.5 13)\n19.5 - 13 = 6.5 (left: 6.5)"
            ],
            "values": [
                1.002,
                0.003,
                0.002,
                40.0,
                0.002,
                40.0,
                40.0,
                40.0,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 5.2",
                "1 <- 6.6",
                "2 <- 9.5",
                "3 <- 6.7",
                "4 <- 7.1",
                "5 <- 7.2",
                "6 <- 9.6",
                "7 <- 6.2",
                "8 <- 7.7",
                "9 <- 6.9"
            ],
            "resampled_steps": [
                "6 - 4 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (6 - 4) + (13 - 13) + 13 = 24\nInput: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n9 * 1 = 9 (left: 9)\n9 * 9 = 81 (left: 81)\n81 / 3 = 27 (left: 27)\n27 - 8 = 19 (left: 19)\n19 + 9 = 28 (left: 28)\n28 - 9 = 19 (left: 19)\n19 + 8 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer: (((3 * 3) - 8) + 9) - 3 = 24",
                "6 - 4 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (6 - 4) + (13 - 13) + 13 = 24\nInput: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n9 * 1 = 9 (left: 9)\nAnswer: (3 * 3) - (8 - 9) + 9 = 24\nInput: 4 5 6 7\nSteps:\n4 + 7 = 11 (left: 5 6 11)\n6 - 5 = 1 (left: 1 11)\n11 * 1 = 11 (left: 11)\nAnswer: (4 + 7) * (6 - 5) + 11 = 24",
                "6 - 4 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (6 - 4) + (13 - 13) + 13 = 24\nInput: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n9 * 1 = 9 (left: 9)\nAnswer: (3 * 3) - (8 - 9) + 9 = 24\nInput: 1 3 4 6\nSteps:\n3 * 4 = 12 (left: 1 6 12)\n12 + 6 = 18 (left: 1 18)\n18 + 1 = 19 (left: 19)\n19 + 19 = 24 (left: 24)\nAnswer: ((3 * 4) + 6) + (1 + 19) = 24\nInput: 3 6 6 7\nSteps:\n6 - 3 = 3 (left: 3 6 7)\n3 * 7 = 21 (left: 6 21)\n6 * 3 = 18 (left: 18)\n21 - 18 = 3 (left: 3)\n3 * 3 = 9 (left: 9)\n9 * 6 = 54 (left: 54)\n54 / 7 = 24 (left: 24)\nAnswer: (((6 - 3) * 7) * (6 * 3)) / 7 = 24",
                "6 - 4 = 2 (left: 2 13 13)\n13 / 2 = 6.5 (left: 6.5 13)\n13 - 6.5 = 6.5 (left: 6.5 13)",
                "6 - 4 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (6 - 4) + (13 - 13) + 13 = 24\nInput: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n9 * 1 = 9 (left: 9)\nAnswer: (3 * 3) - (8 - 9) + 9 = 24\nInput: 1 3 5 8\nSteps:\n3 * 5 = 15 (left: 1 8 15)\n15 - 8 = 7 (left: 1 7)\n7 * 1 = 7 (left: 7)\nAnswer: (3 * 5) - (8 - 1) + 7 = 24\nInput: 2 3 4 6\nSteps:\n3 * 4 = 12 (left: 2 6 12)\n12 - 6 = 6 (left: 2 6)\n6 * 2 = 12 (left: 12)\nAnswer: (3 * 4) - (6 - 2) * 12 = 24",
                "6 - 4 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (6 - 4) + (13 - 13) + 13 = 24\nInput: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n9 * 1 = 9 (left: 9)\nAnswer: (3 * 3) - (8 - 9) + 9 = 24\nInput: 4 5 6 7\nSteps:\n4 + 7 = 11 (left: 5 6 11)\n6 - 5 = 1 (left: 1 11)\n11 * 1 = 11 (left: 11)\nAnswer: (4 + 7) * (6 - 5) + 11 = 24\nInput: 2 3 3 4\nSteps:\n3 * 3 = 9 (left: 2 4 9)\n9 - 4 = 5 (left: 2 5)\n5 * 2 = 10 (left: 10)\n10 + 10 + 4 = 24\nAnswer: ((2 * 3) - 4) * (3 + 3) = 24",
                "6 - 4 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (6 - 4) + (13 + 13) = 24\nInput: 3 3 8 9\nSteps:\n8 - 3 = 5 (left: 3 5 9)\n5 * 3 = 15 (left: 15 9)\n15 - 9 = 6 (left: 6)\n6 * 4 = 24 (left: 24)\nAnswer: ((8 - 3) * 3) - 9 = 24\nInput: 3 3 7 8\nSteps:\n7 - 3 = 4 (left: 3 4 8)\n4 * 3 = 12 (left: 12 8)\n12 + 8 = 20 (left: 20)\n20 + 4 = 24 (left: 24)\nAnswer: ((7 - 3) * 3) + 8 = 24",
                "6 - 4 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (6 - 4) + (13 + 13) = 24",
                "6 - 4 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (6 - 4) + (13 - 13) + 13 = 24\nInput: 2 3 5 10\nSteps:\n2 * 10 = 20 (left: 3 5 20)\n5 - 3 = 2 (left: 2 20)\n20 / 2 = 10 (left: 10)\nAnswer: (2 * 10) - (5 - 3) = 24",
                "6 - 4 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (6 - 4) + (13 - 13) + 13 = 24\nInput: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n9 * 1 = 9 (left: 9)\nAnswer: (3 * 3) - (8 - 9) + 9 = 24\nInput: 1 3 5 8\nSteps:\n3 * 5 = 15 (left: 1 8 15)\n15 - 8 = 7 (left: 1 7)\n7 * 1 = 7 (left: 7)\nAnswer: (3 * 5) - (8 - 1) + 7 = 24"
            ]
        },
        "step_10": {
            "steps": [
                "6 - 4 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (6 - 4) + (13 - 13) + 13 = 24\nInput: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n9 * 1 = 9 (left: 9)\n9 * 9 = 81 (left: 81)\n81 / 3 = 27 (left: 27)\n27 - 8 = 19 (left: 19)\n19 + 9 = 28 (left: 28)\n28 - 9 = 19 (left: 19)\n19 + 8 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer: (((3 * 3) - 8) + 9) - 3 = 24\nInput: 1 2 3 6\nSteps:\n3 * 6 = 18 (left: 1 2 18)\n18 - 2 = 16 (left: 1 16)\n16 + 1 = 17 (left: 17)\n17 + 17 = 34 (left: 34)\n34 / 2 = 17 (left: 17)\n17 - 1 = 16 (left: 16)\n16 + 16 = 32 (left: 32)\n32 - 8 = 24 (left: 24)\nAnswer: (((1 + 2) * 6) - 3) - 8 = 24",
                "6 - 4 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (6 - 4) + (13 - 13) + 13 = 24\nInput: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n9 * 1 = 9 (left: 9)\nAnswer: (3 * 3) - (8 - 9) + 9 = 24\nInput: 4 5 6 7\nSteps:\n4 + 7 = 11 (left: 5 6 11)\n6 - 5 = 1 (left: 1 11)\n11 * 1 = 11 (left: 11)\nAnswer: (4 + 7) * (6 - 5) + 11 = 24\nInput: 2 3 4 5\nSteps:\n2 * 3 = 6 (left: 4 5 6)\n6 + 4 = 10 (left: 5 10)\n10 * 5 = 50 (left: 50)\nAnswer: (2 * 3) + (4 + 5) * 10 = 24",
                "6 - 4 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (6 - 4) + (13 - 13) + 13 = 24\nInput: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n9 * 1 = 9 (left: 9)\nAnswer: (3 * 3) - (8 - 9) + 9 = 24\nInput: 1 3 4 6\nSteps:\n3 * 4 = 12 (left: 1 6 12)\n12 + 6 = 18 (left: 1 18)\n18 + 1 = 19 (left: 19)\n19 + 19 = 24 (left: 24)\nAnswer: ((3 * 4) + 6) + (1 + 19) = 24\nInput: 3 6 6 7\nSteps:\n6 - 3 = 3 (left: 3 6 7)\n3 * 7 = 21 (left: 6 21)\n6 * 3 = 18 (left: 18)\n21 - 18 = 3 (left: 3)\n3 * 3 = 9 (left: 9)\n9 * 6 = 54 (left: 54)\n54 / 7 = 24 (left: 24)\nAnswer: (((6 - 3) * 7) * (6 * 3)) / 7 = 24\nInput: 2 3 5 7\nSteps:\n5 * 3 = 15 (left: 2 7 15)\n15 - 7 = 8 (left: 2 8)\n8 * 2 = 16 (left: 16)\n16 + 7 = 23 (left: 23)\n23 + 1 = 24 (left: 24)\nAnswer: (((5 * 3) - 7) * 2) + (7 + 1) = 24",
                "6 - 4 = 2 (left: 2 13 13)\n13 / 2 = 6.5 (left: 6.5 13)\n13 - 6.5 = 6.5 (left: 6.5 13)\n13 / 6.5 = 2 (left: 2)",
                "6 - 4 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (6 - 4) + (13 - 13) + 13 = 24\nInput: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n9 * 1 = 9 (left: 9)\nAnswer: (3 * 3) - (8 - 9) + 9 = 24\nInput: 1 3 5 8\nSteps:\n3 * 5 = 15 (left: 1 8 15)\n15 - 8 = 7 (left: 1 7)\n7 * 1 = 7 (left: 7)\nAnswer: (3 * 5) - (8 - 1) + 7 = 24\nInput: 2 3 4 6\nSteps:\n3 * 4 = 12 (left: 2 6 12)\n12 - 6 = 6 (left: 2 6)\n6 * 2 = 12 (left: 12)\nAnswer: (3 * 4) - (6 - 2) * 12 = 24\nInput: 1 3 7 8\nSteps:\n3 * 7 = 21 (left: 1 8 21)\n21 - 8 = 13 (left: 1 13)\n13 + 1 = 14 (left: 14)\n14 * 1 = 14 (left: 14)\n21 - 7 = 14 (left: 14)\nAnswer: ((3 * 7) - (8 - 1)) + 14 = 24",
                "6 - 4 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (6 - 4) + (13 - 13) + 13 = 24\nInput: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n9 * 1 = 9 (left: 9)\nAnswer: (3 * 3) - (8 - 9) + 9 = 24\nInput: 4 5 6 7\nSteps:\n4 + 7 = 11 (left: 5 6 11)\n6 - 5 = 1 (left: 1 11)\n11 * 1 = 11 (left: 11)\nAnswer: (4 + 7) * (6 - 5) + 11 = 24\nInput: 2 3 3 4\nSteps:\n3 * 3 = 9 (left: 2 4 9)\n9 - 4 = 5 (left: 2 5)\n5 * 2 = 10 (left: 10)\n10 + 10 + 4 = 24\nAnswer: ((2 * 3) - 4) * (3 + 3) = 24\nInput: 1 3 4 8\nSteps:\n3 * 4 = 12 (left: 1 8 12)\n12 - 8 = 4 (left: 1 4)\n4 * 4 = 16 (left: 16)\n16 - 8 = 8 (left: 8)\n8 * 3 = 24 (left: 24)\nAnswer: ((1 * 3) + 8) * 4 = 24",
                "6 - 4 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (6 - 4) + (13 + 13) = 24\nInput: 3 3 8 9\nSteps:\n8 - 3 = 5 (left: 3 5 9)\n5 * 3 = 15 (left: 15 9)\n15 - 9 = 6 (left: 6)\n6 * 4 = 24 (left: 24)\nAnswer: ((8 - 3) * 3) - 9 = 24\nInput: 3 3 7 8\nSteps:\n7 - 3 = 4 (left: 3 4 8)\n4 * 3 = 12 (left: 12 8)\n12 + 8 = 20 (left: 20)\n20 + 4 = 24 (left: 24)\nAnswer: ((7 - 3) * 3) + 8 = 24\nInput: 2 5 6 7\nSteps:\n6 - 2 = 4 (left: 4 5 7)\n7 - 5 = 2 (left: 2 4)\n2 * 4 = 8 (left: 8)\n8 * 3 = 24 (left: 24)\nAnswer: ((6 - 2) * (7 - 5)) * 3 = 24",
                "6 - 4 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (6 - 4) + (13 + 13) = 24\nInput: 3 3 8 8\nSteps:\n8 - 3 = 5 (left: 3 5 8)\n8 - 5 = 3 (left: 3 3)\n3 * 3 = 9 (left: 9)\n8 * 9 = 72 (left: 72)\nAnswer: ((8 - 3) * (8 - 5)) - (3 * 3) = 24",
                "6 - 4 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (6 - 4) + (13 - 13) + 13 = 24\nInput: 2 3 5 10\nSteps:\n2 * 10 = 20 (left: 3 5 20)\n5 - 3 = 2 (left: 2 20)\n20 / 2 = 10 (left: 10)\nAnswer: (2 * 10) - (5 - 3) = 24\nInput: 3 3 8 9\nSteps:\n3 * 9 = 27 (left: 3 8 27)\n27 - 8 = 19 (left: 3 19)\n19 - 3 = 16 (left: 16)\nAnswer: ((3 * 9) - 8) - 3 = 24",
                "6 - 4 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (6 - 4) + (13 - 13) + 13 = 24\nInput: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n9 * 1 = 9 (left: 9)\nAnswer: (3 * 3) - (8 - 9) + 9 = 24\nInput: 1 3 5 8\nSteps:\n3 * 5 = 15 (left: 1 8 15)\n15 - 8 = 7 (left: 1 7)\n7 * 1 = 7 (left: 7)\nAnswer: (3 * 5) - (8 - 1) + 7 = 24\nInput: 2 3 3 4\nSteps:\n3 * 3 = 9 (left: 2 4 9)\n9 * 4 = 36 (left: 36)\nAnswer: (3 * 3) * 4 = 36"
            ],
            "values": [
                40.0,
                20.0,
                0.0,
                0.001,
                60.0,
                40.0,
                60.0,
                60.0,
                60.0,
                40.0
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 2.353448
    },
    "36": {
        "input": "12 12 12 12",
        "step_1": {
            "steps": [
                "12 - 12 = 0 (left: 0 12 12)",
                "12 - 12 = 0 (left: 0 12 12)",
                "12 + 1 = 13 (left: 12 13 12)",
                "12 + 12 = 24 (left: 12 24 12)",
                "12 / 12 = 1 (left: 1 12 12)",
                "12 + 12 = 24 (left: 12 24 12)",
                "12 - 12 = 0 (left: 0 12 12)",
                "12 + 12 = 24 (left: 12 24 12)",
                "12 / 12 = 1 (left: 1 12 12)",
                "12 * 12 = 144 (left: 12 144 12)"
            ],
            "values": [
                40.001,
                60.0,
                1.002,
                40.001,
                0.002,
                20.001,
                60.0,
                0.003,
                20.002,
                41.0
            ],
            "resampled": [
                "0 <- 1.1",
                "1 <- 1.9",
                "2 <- 1.6",
                "3 <- 1.6",
                "4 <- 1.0",
                "5 <- 1.6",
                "6 <- 1.6",
                "7 <- 1.1",
                "8 <- INIT",
                "9 <- 1.8"
            ],
            "resampled_steps": [
                "12 - 12 = 0 (left: 0 12 12)",
                "12 * 12 = 144 (left: 12 144 12)",
                "12 - 12 = 0 (left: 0 12 12)",
                "12 - 12 = 0 (left: 0 12 12)",
                "12 - 12 = 0 (left: 0 12 12)",
                "12 - 12 = 0 (left: 0 12 12)",
                "12 - 12 = 0 (left: 0 12 12)",
                "12 - 12 = 0 (left: 0 12 12)",
                "",
                "12 / 12 = 1 (left: 1 12 12)"
            ]
        },
        "step_2": {
            "steps": [
                "12 - 12 = 0 (left: 0 12 12)\n12 - 0 = 12 (left: 12 12)",
                "12 * 12 = 144 (left: 12 144 12)\n12 + 12 = 24 (left: 24 12)",
                "12 - 12 = 0 (left: 0 12 12)\n0 + 12 = 12 (left: 12 12)",
                "12 - 12 = 0 (left: 0 12 12)\n0 * 12 = 0 (left: 12 12)",
                "12 - 12 = 0 (left: 0 12 12)\n0 + 12 = 12 (left: 12 12)",
                "12 - 12 = 0 (left: 0 12 12)\n12 / 12 = 1 (left: 0 1)",
                "12 - 12 = 0 (left: 0 12 12)\n12 - 12 = 0 (left: 0 12)",
                "12 - 12 = 0 (left: 0 12 12)\n12 - 0 = 12 (left: 12 12)",
                "12 - 12 = 0 (left: 0 12 12)",
                "12 / 12 = 1 (left: 1 12 12)\n12 + 1 = 13 (left: 1 13)"
            ],
            "values": [
                40.001,
                40.001,
                40.001,
                40.001,
                40.001,
                20.001,
                21.001,
                21.001,
                60.0,
                1.002
            ],
            "resampled": [
                "0 <- 2.2",
                "1 <- 1.8",
                "2 <- 1.3",
                "3 <- 1.1",
                "4 <- 1.9",
                "5 <- 1.5",
                "6 <- 2.8",
                "7 <- 2.1",
                "8 <- 1.6",
                "9 <- 2.3"
            ],
            "resampled_steps": [
                "12 - 12 = 0 (left: 0 12 12)\n0 + 12 = 12 (left: 12 12)",
                "12 / 12 = 1 (left: 1 12 12)",
                "12 + 12 = 24 (left: 12 24 12)",
                "12 - 12 = 0 (left: 0 12 12)",
                "12 * 12 = 144 (left: 12 144 12)",
                "12 + 12 = 24 (left: 12 24 12)",
                "12 - 12 = 0 (left: 0 12 12)",
                "12 * 12 = 144 (left: 12 144 12)\n12 + 12 = 24 (left: 24 12)",
                "12 - 12 = 0 (left: 0 12 12)",
                "12 - 12 = 0 (left: 0 12 12)\n0 * 12 = 0 (left: 12 12)"
            ]
        },
        "step_3": {
            "steps": [
                "12 - 12 = 0 (left: 0 12 12)\n0 + 12 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "12 / 12 = 1 (left: 1 12 12)\n12 - 1 = 11 (left: 11 12)",
                "12 + 12 = 24 (left: 12 24 12)\n12 - 2 = 10 (left: 10 12)",
                "12 - 12 = 0 (left: 0 12 12)\n0 * 12 = 0 (left: 0 12)",
                "12 * 12 = 144 (left: 12 144 12)\n144 / 12 = 12 (left: 12 12)",
                "12 + 12 = 24 (left: 12 24 12)\n12 / 12 = 1 (left: 1 12)",
                "12 - 12 = 0 (left: 0 12 12)\n12 + 0 = 12 (left: 12 12)",
                "12 * 12 = 144 (left: 12 144 12)\n12 + 12 = 24 (left: 24 12)\n24 * 12 = 288 (left: 288)",
                "12 - 12 = 0 (left: 0 12 12)\n12 - 12 = 0 (left: 0 12)",
                "12 - 12 = 0 (left: 0 12 12)\n0 * 12 = 0 (left: 12 12)\n12 * 12 = 144 (left: 144)"
            ],
            "values": [
                40.0,
                0.002,
                2.001,
                40.001,
                22.0,
                0.003,
                41.0,
                0.003,
                20.002,
                0.002
            ],
            "resampled": [
                "0 <- 2.8",
                "1 <- 2.3",
                "2 <- 3.0",
                "3 <- 2.6",
                "4 <- 3.0",
                "5 <- 1.8",
                "6 <- 3.6",
                "7 <- 1.3",
                "8 <- 2.8",
                "9 <- 3.0"
            ],
            "resampled_steps": [
                "12 - 12 = 0 (left: 0 12 12)",
                "12 - 12 = 0 (left: 0 12 12)\n0 * 12 = 0 (left: 12 12)",
                "12 - 12 = 0 (left: 0 12 12)\n0 + 12 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "12 - 12 = 0 (left: 0 12 12)\n12 - 12 = 0 (left: 0 12)",
                "12 - 12 = 0 (left: 0 12 12)\n0 + 12 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "12 / 12 = 1 (left: 1 12 12)",
                "12 - 12 = 0 (left: 0 12 12)\n12 + 0 = 12 (left: 12 12)",
                "12 + 12 = 24 (left: 12 24 12)",
                "12 - 12 = 0 (left: 0 12 12)",
                "12 - 12 = 0 (left: 0 12 12)\n0 + 12 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)"
            ]
        },
        "step_4": {
            "steps": [
                "12 - 12 = 0 (left: 0 12 12)\n12 - 12 = 0 (left: 0 12)",
                "12 - 12 = 0 (left: 0 12 12)\n0 * 12 = 0 (left: 12 12)\n12 * 12 = 144 (left: 144)",
                "12 - 12 = 0 (left: 0 12 12)\n0 + 12 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: ((12 - 12) + 12) + 12 = 24",
                "12 - 12 = 0 (left: 0 12 12)\n12 - 12 = 0 (left: 0 12)\n12 - 12 = 0 (left: 0)",
                "12 - 12 = 0 (left: 0 12 12)\n0 + 12 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 - 12) + (12 + 12) = 24",
                "12 / 12 = 1 (left: 1 12 12)\n12 - 1 = 11 (left: 1 11)",
                "12 - 12 = 0 (left: 0 12 12)\n12 + 0 = 12 (left: 12 12)\n12 - 12 = 0 (left: 0)",
                "12 + 12 = 24 (left: 12 24 12)\n12 + 24 = 36 (left: 36 12)",
                "12 - 12 = 0 (left: 0 12 12)\n12 / 12 = 1 (left: 1 12)",
                "12 - 12 = 0 (left: 0 12 12)\n0 + 12 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 + 12) + (12 - 12) = 24"
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            }
        ],
        "cost": 2.385978
    },
    "37": {
        "input": "2 11 11 12",
        "step_1": {
            "steps": [
                "11 / 2 = 5.5 (left: 5.5 11 12)",
                "11 / 2 = 5.5 (left: 5.5 11 12)",
                "11 - 11 = 0 (left: 2 0 12)",
                "11 - 2 = 9 (left: 9 11 12)",
                "12 - 2 = 10 (left: 10 11 12)",
                "12 - 11 = 1 (left: 2 11 1)",
                "11 / 2 = 5.5 (left: 5.5 11 12)",
                "11 / 2 = 5.5 (left: 5.5 11 12)",
                "12 - 2 = 10 (left: 10 11 12)",
                "12 - 2 = 10 (left: 11 10 11)"
            ],
            "values": [
                3.0,
                2.001,
                41.0,
                2.001,
                0.003,
                0.002,
                1.002,
                3.0,
                0.0,
                0.003
            ],
            "resampled": [
                "0 <- 1.2",
                "1 <- 1.2",
                "2 <- 1.2",
                "3 <- INIT",
                "4 <- 1.2",
                "5 <- 1.0",
                "6 <- INIT",
                "7 <- INIT",
                "8 <- 1.2",
                "9 <- 1.2"
            ],
            "resampled_steps": [
                "11 - 11 = 0 (left: 2 0 12)",
                "11 - 11 = 0 (left: 2 0 12)",
                "11 - 11 = 0 (left: 2 0 12)",
                "",
                "11 - 11 = 0 (left: 2 0 12)",
                "11 / 2 = 5.5 (left: 5.5 11 12)",
                "",
                "",
                "11 - 11 = 0 (left: 2 0 12)",
                "11 - 11 = 0 (left: 2 0 12)"
            ]
        },
        "step_2": {
            "steps": [
                "11 - 11 = 0 (left: 2 0 12)\n12 - 2 = 10 (left: 2 10)",
                "11 - 11 = 0 (left: 2 0 12)\n0 * 12 = 0 (left: 0 12)",
                "11 - 11 = 0 (left: 2 0 12)\n2 + 0 = 2 (left: 2 12)",
                "2 + 11 = 13 (left: 11 13 12)",
                "11 - 11 = 0 (left: 2 0 12)\n12 - 2 = 10 (left: 2 10)",
                "11 / 2 = 5.5 (left: 5.5 11 12)\n5.5 + 5.5 = 11 (left: 11 12)",
                "11 / 2 = 5.5 (left: 5.5 11 12)",
                "11 / 2 = 5.5 (left: 5.5 11 12)",
                "11 - 11 = 0 (left: 2 0 12)\nPossible next steps:",
                "11 - 11 = 0 (left: 2 0 12)\n2 * 0 = 0 (left: 0 12)"
            ],
            "values": [
                2.0,
                0.003,
                60.0,
                40.001,
                2.0,
                0.003,
                3.0,
                1.001,
                0.003,
                20.001
            ],
            "resampled": [
                "0 <- 2.3",
                "1 <- 2.9",
                "2 <- 2.2",
                "3 <- 2.9",
                "4 <- 1.2",
                "5 <- 1.2",
                "6 <- 2.2",
                "7 <- 2.2",
                "8 <- 2.2",
                "9 <- INIT"
            ],
            "resampled_steps": [
                "2 + 11 = 13 (left: 11 13 12)",
                "11 - 11 = 0 (left: 2 0 12)\n2 * 0 = 0 (left: 0 12)",
                "11 - 11 = 0 (left: 2 0 12)\n2 + 0 = 2 (left: 2 12)",
                "11 - 11 = 0 (left: 2 0 12)\n2 * 0 = 0 (left: 0 12)",
                "11 - 11 = 0 (left: 2 0 12)",
                "11 - 11 = 0 (left: 2 0 12)",
                "11 - 11 = 0 (left: 2 0 12)\n2 + 0 = 2 (left: 2 12)",
                "11 - 11 = 0 (left: 2 0 12)\n2 + 0 = 2 (left: 2 12)",
                "11 - 11 = 0 (left: 2 0 12)\n2 + 0 = 2 (left: 2 12)",
                ""
            ]
        },
        "step_3": {
            "steps": [
                "2 + 11 = 13 (left: 11 13 12)\n11 + 13 = 24 (left: 24 12)",
                "11 - 11 = 0 (left: 2 0 12)\n2 * 0 = 0 (left: 0 12)\n12 - 0 = 12 (left: 0)",
                "11 - 11 = 0 (left: 2 0 12)\n2 + 0 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)",
                "11 - 11 = 0 (left: 2 0 12)\n2 * 0 = 0 (left: 0 12)\n12 / 0 = undefined (division by zero is undefined)",
                "11 - 11 = 0 (left: 2 0 12)\n12 + 2 = 14 (left: 2 14)",
                "11 - 11 = 0 (left: 2 0 12)\n12 - 2 = 10 (left: 2 10)",
                "11 - 11 = 0 (left: 2 0 12)\n2 + 0 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6)",
                "11 - 11 = 0 (left: 2 0 12)\n2 + 0 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6)",
                "11 - 11 = 0 (left: 2 0 12)\n2 + 0 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)",
                "11 - 2 = 9 (left: 9 11 12)"
            ],
            "values": [
                40.001,
                0.0,
                0.001,
                0.003,
                0.003,
                2.0,
                0.002,
                0.002,
                0.001,
                2.001
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- 2.2",
                "2 <- 2.2",
                "3 <- 2.3",
                "4 <- 1.2",
                "5 <- 2.2",
                "6 <- 2.3",
                "7 <- 2.2",
                "8 <- 3.0",
                "9 <- 1.2"
            ],
            "resampled_steps": [
                "",
                "11 - 11 = 0 (left: 2 0 12)\n2 + 0 = 2 (left: 2 12)",
                "11 - 11 = 0 (left: 2 0 12)\n2 + 0 = 2 (left: 2 12)",
                "2 + 11 = 13 (left: 11 13 12)",
                "11 - 11 = 0 (left: 2 0 12)",
                "11 - 11 = 0 (left: 2 0 12)\n2 + 0 = 2 (left: 2 12)",
                "2 + 11 = 13 (left: 11 13 12)",
                "11 - 11 = 0 (left: 2 0 12)\n2 + 0 = 2 (left: 2 12)",
                "2 + 11 = 13 (left: 11 13 12)\n11 + 13 = 24 (left: 24 12)",
                "11 - 11 = 0 (left: 2 0 12)"
            ]
        },
        "step_4": {
            "steps": [
                "12 - 2 = 10 (left: 11 11 10)",
                "11 - 11 = 0 (left: 2 0 12)\n2 + 0 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)",
                "11 - 11 = 0 (left: 2 0 12)\n2 + 0 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "2 + 11 = 13 (left: 11 13 12)\n11 + 13 = 24 (left: 24 12)",
                "11 - 11 = 0 (left: 2 0 12)\n2 * 0 = 0 (left: 0 12)",
                "11 - 11 = 0 (left: 2 0 12)\n2 + 0 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)",
                "2 + 11 = 13 (left: 11 13 12)\n12 * 13 = 156 (left: 156 11)",
                "11 - 11 = 0 (left: 2 0 12)\n2 + 0 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)",
                "2 + 11 = 13 (left: 11 13 12)\n11 + 13 = 24 (left: 24 12)\n24 / 12 = 2 (left: 2)",
                "11 - 11 = 0 (left: 2 0 12)\n2 - 0 = 2 (left: 2 12)"
            ],
            "values": [
                0.003,
                0.002,
                40.0,
                60.0,
                0.002,
                20.002,
                0.003,
                0.003,
                0.002,
                60.0
            ],
            "resampled": [
                "0 <- 2.3",
                "1 <- 4.2",
                "2 <- 4.3",
                "3 <- 4.2",
                "4 <- 4.9",
                "5 <- 3.0",
                "6 <- 4.9",
                "7 <- 4.2",
                "8 <- 3.0",
                "9 <- 2.3"
            ],
            "resampled_steps": [
                "2 + 11 = 13 (left: 11 13 12)",
                "11 - 11 = 0 (left: 2 0 12)\n2 + 0 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "2 + 11 = 13 (left: 11 13 12)\n11 + 13 = 24 (left: 24 12)",
                "11 - 11 = 0 (left: 2 0 12)\n2 + 0 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "11 - 11 = 0 (left: 2 0 12)\n2 - 0 = 2 (left: 2 12)",
                "2 + 11 = 13 (left: 11 13 12)\n11 + 13 = 24 (left: 24 12)",
                "11 - 11 = 0 (left: 2 0 12)\n2 - 0 = 2 (left: 2 12)",
                "11 - 11 = 0 (left: 2 0 12)\n2 + 0 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "2 + 11 = 13 (left: 11 13 12)\n11 + 13 = 24 (left: 24 12)",
                "2 + 11 = 13 (left: 11 13 12)"
            ]
        },
        "step_5": {
            "steps": [
                "2 + 11 = 13 (left: 11 13 12)\n12 - 11 = 1 (left: 1 13)",
                "11 - 11 = 0 (left: 2 0 12)\n2 + 0 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (2 + 11 - 11) * 12 = 24",
                "2 + 11 = 13 (left: 11 13 12)\n11 + 13 = 24 (left: 24 12)\n24 - 12 = 12 (left: 12)",
                "11 - 11 = 0 (left: 2 0 12)\n2 + 0 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (2 + (11 - 11)) * 12 = 24",
                "11 - 11 = 0 (left: 2 0 12)\n2 - 0 = 2 (left: 2 12)\n12 * 2 = 24 (left: 24)",
                "2 + 11 = 13 (left: 11 13 12)\n11 + 13 = 24 (left: 24 12)\n24 / 12 = 2 (left: 2)",
                "11 - 11 = 0 (left: 2 0 12)\n2 - 0 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6)",
                "11 - 11 = 0 (left: 2 0 12)\n2 + 0 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (2 + 11 - 11) * 12 = 24",
                "2 + 11 = 13 (left: 11 13 12)\n11 + 13 = 24 (left: 24 12)\n24 * 12 = 288 (left: 288)",
                "2 + 11 = 13 (left: 11 13 12)\n12 / 11 = 1.09 (left: 1.09 13)"
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 2.4249359999999998
    },
    "38": {
        "input": "4 4 4 6",
        "step_1": {
            "steps": [
                "6 + 4 = 10 (left: 4 4 10)",
                "4 / 4 = 1 (left: 1 4 6)",
                "4 * 4 = 16 (left: 16 4 6)",
                "6 - 4 = 2 (left: 4 4 2)",
                "4 - 4 = 0 (left: 0 4 6)",
                "4 + 4 = 8 (left: 4 8 6)",
                "6 / 4 = 1.5 (left: 4 4 1.5)",
                "4 / 4 = 1 (left: 4 4 6)",
                "6 / 4 = 1.5 (left: 4 4 1.5)",
                "4 / 4 = 1 (left: 1 4 6)"
            ],
            "values": [
                40.0,
                60.0,
                21.001,
                2.001,
                21.0,
                22.0,
                60.0,
                3.0,
                41.0,
                60.0
            ],
            "resampled": [
                "0 <- 1.8",
                "1 <- 1.8",
                "2 <- 1.6",
                "3 <- 1.6",
                "4 <- 1.0",
                "5 <- 1.5",
                "6 <- 1.4",
                "7 <- 1.0",
                "8 <- 1.6",
                "9 <- 1.0"
            ],
            "resampled_steps": [
                "6 / 4 = 1.5 (left: 4 4 1.5)",
                "6 / 4 = 1.5 (left: 4 4 1.5)",
                "6 / 4 = 1.5 (left: 4 4 1.5)",
                "6 / 4 = 1.5 (left: 4 4 1.5)",
                "6 + 4 = 10 (left: 4 4 10)",
                "4 + 4 = 8 (left: 4 8 6)",
                "4 - 4 = 0 (left: 0 4 6)",
                "6 + 4 = 10 (left: 4 4 10)",
                "6 / 4 = 1.5 (left: 4 4 1.5)",
                "6 + 4 = 10 (left: 4 4 10)"
            ]
        },
        "step_2": {
            "steps": [
                "6 / 4 = 1.5 (left: 4 4 1.5)\n4 * 4 = 16 (left: 16 1.5)",
                "6 / 4 = 1.5 (left: 4 4 1.5)\n1.5 + 4 = 5.5 (left: 4 5.5)",
                "6 / 4 = 1.5 (left: 4 4 1.5)\n1.5 * 4 = 6 (left: 6 4)",
                "6 / 4 = 1.5 (left: 4 4 1.5)\n4 / 4 = 1 (left: 1 1.5)",
                "6 + 4 = 10 (left: 4 4 10)\n4 + 10 = 14 (left: 14)",
                "4 + 4 = 8 (left: 4 8 6)\n4 * 6 = 24 (left: 8 24)",
                "4 - 4 = 0 (left: 0 4 6)\n4 * 6 = 24 (left: 0 24)",
                "6 + 4 = 10 (left: 4 4 10)\n4 * 4 = 16 (left: 16 10)",
                "6 / 4 = 1.5 (left: 4 4 1.5)\n4 - 1.5 = 2.5 (left: 2.5 4)",
                "6 + 4 = 10 (left: 4 4 10)\n4 / 4 = 1 (left: 1 10)"
            ],
            "values": [
                40.0,
                2.001,
                41.0,
                2.001,
                0.003,
                1.002,
                60.0,
                0.003,
                1.001,
                20.002
            ],
            "resampled": [
                "0 <- 1.8",
                "1 <- 2.2",
                "2 <- INIT",
                "3 <- 1.4",
                "4 <- 2.0",
                "5 <- 1.1",
                "6 <- 1.5",
                "7 <- 2.0",
                "8 <- 1.9",
                "9 <- INIT"
            ],
            "resampled_steps": [
                "6 / 4 = 1.5 (left: 4 4 1.5)",
                "6 / 4 = 1.5 (left: 4 4 1.5)\n1.5 * 4 = 6 (left: 6 4)",
                "",
                "4 - 4 = 0 (left: 0 4 6)",
                "6 / 4 = 1.5 (left: 4 4 1.5)\n4 * 4 = 16 (left: 16 1.5)",
                "4 / 4 = 1 (left: 1 4 6)",
                "4 + 4 = 8 (left: 4 8 6)",
                "6 / 4 = 1.5 (left: 4 4 1.5)\n4 * 4 = 16 (left: 16 1.5)",
                "4 / 4 = 1 (left: 1 4 6)",
                ""
            ]
        },
        "step_3": {
            "steps": [
                "6 / 4 = 1.5 (left: 4 4 1.5)\n4 + 4 = 8 (left: 8 1.5)",
                "6 / 4 = 1.5 (left: 4 4 1.5)\n1.5 * 4 = 6 (left: 6 4)\n6 + 4 = 10 (left: 10)",
                "6 / 4 = 1.5 (left: 4 4 1.5)",
                "4 - 4 = 0 (left: 0 4 6)\n4 - 0 = 4 (left: 4 6)",
                "6 / 4 = 1.5 (left: 4 4 1.5)\n4 * 4 = 16 (left: 16 1.5)\n16 / 1.5 = 10.666666666666666 (left: 1.5 10.666666666666666)",
                "4 / 4 = 1 (left: 1 4 6)\n4 / 1 = 4 (left: 4 6)",
                "4 + 4 = 8 (left: 4 8 6)\n8 - 4 = 4 (left: 4 6)",
                "6 / 4 = 1.5 (left: 4 4 1.5)\n4 * 4 = 16 (left: 16 1.5)\n16 / 1.5 = 10.6666666667 (left: 10.6666666667)",
                "4 / 4 = 1 (left: 1 4 6)\n1 + 4 = 5 (left: 5 6)",
                "4 * 6 = 24 (left: 4 24 6)"
            ],
            "values": [
                1.001,
                0.002,
                60.0,
                60.0,
                3.0,
                60.0,
                60.0,
                0.0,
                2.001,
                2.0
            ],
            "resampled": [
                "0 <- 1.0",
                "1 <- 1.6",
                "2 <- 2.0",
                "3 <- 1.8",
                "4 <- 3.3",
                "5 <- 3.5",
                "6 <- 1.1",
                "7 <- 3.6",
                "8 <- 2.6",
                "9 <- 3.5"
            ],
            "resampled_steps": [
                "6 + 4 = 10 (left: 4 4 10)",
                "6 / 4 = 1.5 (left: 4 4 1.5)",
                "6 / 4 = 1.5 (left: 4 4 1.5)\n4 * 4 = 16 (left: 16 1.5)",
                "6 / 4 = 1.5 (left: 4 4 1.5)",
                "4 - 4 = 0 (left: 0 4 6)\n4 - 0 = 4 (left: 4 6)",
                "4 / 4 = 1 (left: 1 4 6)\n4 / 1 = 4 (left: 4 6)",
                "4 / 4 = 1 (left: 1 4 6)",
                "4 + 4 = 8 (left: 4 8 6)\n8 - 4 = 4 (left: 4 6)",
                "4 - 4 = 0 (left: 0 4 6)\n4 * 6 = 24 (left: 0 24)",
                "4 / 4 = 1 (left: 1 4 6)\n4 / 1 = 4 (left: 4 6)"
            ]
        },
        "step_4": {
            "steps": [
                "6 + 4 = 10 (left: 4 4 10)\n4 + 4 = 8 (left: 8 10)",
                "6 / 4 = 1.5 (left: 4 4 1.5)\n4 - 4 = 0 (left: 0 1.5)",
                "6 / 4 = 1.5 (left: 4 4 1.5)\n4 * 4 = 16 (left: 16 1.5)\n16 * 1.5 = 24 (left: 24 1.5)",
                "6 / 4 = 1.5 (left: 4 4 1.5)\n4 / 4 = 1 (left: 1 1.5)",
                "4 - 4 = 0 (left: 0 4 6)\n4 - 0 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)",
                "4 / 4 = 1 (left: 1 4 6)\n4 / 1 = 4 (left: 4 6)\n6 / 4 = 1.5 (left: 1.5)",
                "4 / 4 = 1 (left: 1 4 6)\n3 * 9 = 27 (left: 27 12 5)",
                "4 + 4 = 8 (left: 4 8 6)\n8 - 4 = 4 (left: 4 6)\n4 - 6 = -2 (left: -2)",
                "4 - 4 = 0 (left: 0 4 6)\n4 * 6 = 24 (left: 0 24)\n24 / 3 = 8 (left: 8)",
                "4 / 4 = 1 (left: 1 4 6)\n4 / 1 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)"
            ],
            "values": [
                1.001,
                1.002,
                1.002,
                1.002,
                0.002,
                0.003,
                3.0,
                0.003,
                0.002,
                20.0
            ],
            "resampled": [
                "0 <- 2.9",
                "1 <- 4.9",
                "2 <- 3.5",
                "3 <- 1.1",
                "4 <- 3.2",
                "5 <- 3.0",
                "6 <- 3.2",
                "7 <- 3.3",
                "8 <- 3.6",
                "9 <- 3.5"
            ],
            "resampled_steps": [
                "6 + 4 = 10 (left: 4 4 10)\n4 / 4 = 1 (left: 1 10)",
                "4 / 4 = 1 (left: 1 4 6)\n4 / 1 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "4 / 4 = 1 (left: 1 4 6)\n4 / 1 = 4 (left: 4 6)",
                "4 / 4 = 1 (left: 1 4 6)",
                "6 / 4 = 1.5 (left: 4 4 1.5)",
                "6 / 4 = 1.5 (left: 4 4 1.5)\n4 + 4 = 8 (left: 8 1.5)",
                "6 / 4 = 1.5 (left: 4 4 1.5)",
                "4 - 4 = 0 (left: 0 4 6)\n4 - 0 = 4 (left: 4 6)",
                "4 + 4 = 8 (left: 4 8 6)\n8 - 4 = 4 (left: 4 6)",
                "4 / 4 = 1 (left: 1 4 6)\n4 / 1 = 4 (left: 4 6)"
            ]
        },
        "step_5": {
            "steps": [
                "6 + 4 = 10 (left: 4 4 10)\n4 / 4 = 1 (left: 1 10)\n10 / 1 = 10 (left: 10)",
                "4 / 4 = 1 (left: 1 4 6)\n4 / 1 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (4 / 4) * (4 * 6) = 24",
                "4 / 4 = 1 (left: 1 4 6)\n4 / 1 = 4 (left: 4 6)\n6 - 4 = 2 (left: 2)",
                "4 / 4 = 1 (left: 1 4 6)\n6 - 1 = 5 (left: 4 5)",
                "6 / 4 = 1.5 (left: 4 4 1.5)\n4 - 1.5 = 2.5 (left: 2.5 4)",
                "6 / 4 = 1.5 (left: 4 4 1.5)\n4 + 4 = 8 (left: 8 1.5)\n8 - 1.5 = 6.5 (left: 1.5 6.5)",
                "6 / 4 = 1.5 (left: 4 4 1.5)\n4 * 1.5 = 6 (left: 4 6)",
                "4 - 4 = 0 (left: 0 4 6)\n4 - 0 = 4 (left: 4 6)\n6 / 4 = 1.5 (left: 1.5)",
                "4 + 4 = 8 (left: 4 8 6)\n8 - 4 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "4 / 4 = 1 (left: 1 4 6)\n4 / 1 = 4 (left: 4 6)\n6 - 4 = 2 (left: 2)"
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 2.464076
    },
    "39": {
        "input": "1 1 1 11",
        "step_1": {
            "steps": [
                "11 - 1 * 1 = 10 (left: 1 1 10)",
                "11 - 1 = 10 (left: 1 1 10)",
                "1 + 1 = 2 (left: 2 1 11)",
                "1 + 1 = 2 (left: 1 2 11)",
                "11 / 1 = 11 (left: 1 1 11)",
                "1 * 1 = 1 (left: 1 1 11)",
                "1 * 1 = 1 (left: 1 1 11)",
                "1 + 1 = 2 (left: 1 2 11)",
                "1 * 1 = 1 (left: 1 1 11)",
                "1 + 1 = 2 (left: 2 1 11)"
            ],
            "values": [
                2.001,
                0.002,
                2.001,
                1.002,
                1.001,
                0.003,
                0.002,
                2.001,
                1.002,
                0.003
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- INIT",
                "5 <- INIT",
                "6 <- 1.3",
                "7 <- INIT",
                "8 <- INIT",
                "9 <- INIT"
            ],
            "resampled_steps": [
                "",
                "",
                "",
                "",
                "",
                "",
                "1 + 1 = 2 (left: 1 2 11)",
                "",
                "",
                ""
            ]
        },
        "step_2": {
            "steps": [
                "11 - 1 = 10 (left: 1 1 10)",
                "11 / 1 = 11 (left: 1 1 11)",
                "1 * 1 = 1 (left: 1 1 11)",
                "1 + 1 = 2 (left: 1 2 11)",
                "11 - 1 = 10 (left: 1 1 10)",
                "11 - 1 = 10 (left: 1 1 10)",
                "1 + 1 = 2 (left: 1 2 11)\n11 - 1 = 10 (left: 2 10)",
                "11 - 1 = 10 (left: 1 1 10)",
                "1 + 1 = 2 (left: 1 2 11)",
                "11 / 1 = 11 (left: 1 1 11)"
            ],
            "values": [
                21.001,
                1.002,
                1.002,
                2.001,
                1.002,
                1.002,
                2.0,
                1.002,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- 2.0",
                "2 <- INIT",
                "3 <- 2.0",
                "4 <- 2.0",
                "5 <- 2.0",
                "6 <- 2.0",
                "7 <- 2.3",
                "8 <- 1.7",
                "9 <- INIT"
            ],
            "resampled_steps": [
                "",
                "11 - 1 = 10 (left: 1 1 10)",
                "",
                "11 - 1 = 10 (left: 1 1 10)",
                "11 - 1 = 10 (left: 1 1 10)",
                "11 - 1 = 10 (left: 1 1 10)",
                "11 - 1 = 10 (left: 1 1 10)",
                "1 + 1 = 2 (left: 1 2 11)",
                "1 + 1 = 2 (left: 1 2 11)",
                ""
            ]
        },
        "step_3": {
            "steps": [
                "11 - 1 = 10 (left: 1 1 10)",
                "11 - 1 = 10 (left: 1 1 10)\n10 / 1 = 10 (left: 1 10)",
                "1 + 1 = 2 (left: 2 1 11)",
                "11 - 1 = 10 (left: 1 1 10)\n1 / 1 = 1 (left: 1 10)",
                "11 - 1 = 10 (left: 1 1 10)\n1 + 1 = 2 (left: 2 10)",
                "11 - 1 = 10 (left: 1 1 10)\n1 + 1 = 2 (left: 2 10)",
                "11 - 1 = 10 (left: 1 1 10)\n1 - 1 = 0 (left: 0 10)",
                "1 + 1 = 2 (left: 1 2 11)\n2 * 11 = 22 (left: 1 22)",
                "1 + 1 = 2 (left: 1 2 11)\n11 - 2 = 9 (left: 1 9)",
                "11 - 1 = 10 (left: 1 1 10)"
            ],
            "values": [
                0.003,
                40.0,
                0.003,
                40.0,
                2.0,
                21.0,
                40.0,
                0.002,
                0.001,
                0.003
            ],
            "resampled": [
                "0 <- 3.5",
                "1 <- 3.1",
                "2 <- 3.3",
                "3 <- 3.1",
                "4 <- 1.7",
                "5 <- 2.0",
                "6 <- 3.1",
                "7 <- 1.4",
                "8 <- INIT",
                "9 <- 3.1"
            ],
            "resampled_steps": [
                "11 - 1 = 10 (left: 1 1 10)\n1 + 1 = 2 (left: 2 10)",
                "11 - 1 = 10 (left: 1 1 10)\n10 / 1 = 10 (left: 1 10)",
                "11 - 1 = 10 (left: 1 1 10)\n1 / 1 = 1 (left: 1 10)",
                "11 - 1 = 10 (left: 1 1 10)\n10 / 1 = 10 (left: 1 10)",
                "1 + 1 = 2 (left: 1 2 11)",
                "11 - 1 = 10 (left: 1 1 10)",
                "11 - 1 = 10 (left: 1 1 10)\n10 / 1 = 10 (left: 1 10)",
                "11 / 1 = 11 (left: 1 1 11)",
                "",
                "11 - 1 = 10 (left: 1 1 10)\n10 / 1 = 10 (left: 1 10)"
            ]
        },
        "step_4": {
            "steps": [
                "11 - 1 = 10 (left: 1 1 10)\n1 + 1 = 2 (left: 2 10)\n10 - 2 = 8 (left: 2 8)",
                "11 - 1 = 10 (left: 1 1 10)\n10 / 1 = 10 (left: 1 10)\n10 / 1 = 10 (left: 10)",
                "11 - 1 = 10 (left: 1 1 10)\n1 / 1 = 1 (left: 1 10)\n1 + 10 = 11 (left: 11)",
                "11 - 1 = 10 (left: 1 1 10)\n10 / 1 = 10 (left: 1 10)\n10 - 1 = 9 (left: 9)",
                "1 + 1 = 2 (left: 1 2 11)\n11 / 2 = 5.5 (left: 1 5.5)",
                "11 - 1 = 10 (left: 1 1 10)\n10 - 1 = 9 (left: 1 9)",
                "11 - 1 = 10 (left: 1 1 10)\n10 / 1 = 10 (left: 1 10)\n10 - 1 = 9 (left: 9)",
                "11 / 1 = 11 (left: 1 1 11)\n11 - 1 = 10 (left: 1 10)",
                "1 * 1 = 1 (left: 1 1 11)",
                "11 - 1 = 10 (left: 1 1 10)\n10 / 1 = 10 (left: 1 10)\n10 - 1 = 9 (left: 9)"
            ],
            "values": [
                2.001,
                0.002,
                0.002,
                0.002,
                1.001,
                20.0,
                0.002,
                20.0,
                1.001,
                0.002
            ],
            "resampled": [
                "0 <- 4.7",
                "1 <- 2.7",
                "2 <- 4.7",
                "3 <- 3.6",
                "4 <- 4.5",
                "5 <- 4.7",
                "6 <- 2.2",
                "7 <- 2.0",
                "8 <- 4.7",
                "9 <- 2.0"
            ],
            "resampled_steps": [
                "11 / 1 = 11 (left: 1 1 11)\n11 - 1 = 10 (left: 1 10)",
                "11 - 1 = 10 (left: 1 1 10)",
                "11 / 1 = 11 (left: 1 1 11)\n11 - 1 = 10 (left: 1 10)",
                "11 - 1 = 10 (left: 1 1 10)\n1 - 1 = 0 (left: 0 10)",
                "11 - 1 = 10 (left: 1 1 10)\n10 - 1 = 9 (left: 1 9)",
                "11 / 1 = 11 (left: 1 1 11)\n11 - 1 = 10 (left: 1 10)",
                "1 * 1 = 1 (left: 1 1 11)",
                "11 - 1 = 10 (left: 1 1 10)",
                "11 / 1 = 11 (left: 1 1 11)\n11 - 1 = 10 (left: 1 10)",
                "11 - 1 = 10 (left: 1 1 10)"
            ]
        },
        "step_5": {
            "steps": [
                "11 / 1 = 11 (left: 1 1 11)\n11 - 1 = 10 (left: 1 10)\n10 - 1 = 9 (left: 9)",
                "11 - 1 = 10 (left: 1 1 10)\n10 + 1 = 11 (left: 1 11)",
                "11 / 1 = 11 (left: 1 1 11)\n11 - 1 = 10 (left: 1 10)\n10 - 10 = 0 (left: 1 0)",
                "11 - 1 = 10 (left: 1 1 10)\n1 - 1 = 0 (left: 0 10)\n10 / 0 = undefined",
                "11 - 1 = 10 (left: 1 1 10)\n10 - 1 = 9 (left: 1 9)\n1 + 9 = 10 (left: 9 10)",
                "11 / 1 = 11 (left: 1 1 11)\n11 - 1 = 10 (left: 1 10)\n10 + 1 = 11 (left: 11 10)",
                "1 * 1 = 1 (left: 1 1 11)\n1 + 1 = 2 (left: 2 11)",
                "11 - 1 = 10 (left: 1 1 10)\n10 / 1 = 10 (left: 1 10)",
                "11 / 1 = 11 (left: 1 1 11)\n11 - 1 = 10 (left: 1 10)\n1 * 10 = 10 (left: 10 10)",
                "11 - 1 = 10 (left: 1 1 10)\n10 / 1 = 10 (left: 1 10)"
            ],
            "values": [
                0.002,
                20.0,
                0.002,
                0.003,
                2.001,
                0.003,
                0.002,
                60.0,
                0.002,
                22.0
            ],
            "resampled": [
                "0 <- 3.1",
                "1 <- 3.1",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- 3.3",
                "5 <- 5.7",
                "6 <- 4.5",
                "7 <- 5.1",
                "8 <- 4.0",
                "9 <- 5.7"
            ],
            "resampled_steps": [
                "11 - 1 = 10 (left: 1 1 10)\n10 / 1 = 10 (left: 1 10)",
                "11 - 1 = 10 (left: 1 1 10)\n10 / 1 = 10 (left: 1 10)",
                "",
                "",
                "11 - 1 = 10 (left: 1 1 10)\n1 / 1 = 1 (left: 1 10)",
                "11 - 1 = 10 (left: 1 1 10)\n10 / 1 = 10 (left: 1 10)",
                "11 - 1 = 10 (left: 1 1 10)\n10 - 1 = 9 (left: 1 9)",
                "11 - 1 = 10 (left: 1 1 10)\n10 + 1 = 11 (left: 1 11)",
                "11 - 1 = 10 (left: 1 1 10)\n1 + 1 = 2 (left: 2 10)\n10 - 2 = 8 (left: 2 8)",
                "11 - 1 = 10 (left: 1 1 10)\n10 / 1 = 10 (left: 1 10)"
            ]
        },
        "step_6": {
            "steps": [
                "11 - 1 = 10 (left: 1 1 10)\n10 / 1 = 10 (left: 1 10)\n10 / 1 = 10 (left: 10)",
                "11 - 1 = 10 (left: 1 1 10)\n10 / 1 = 10 (left: 1 10)\n1 * 10 = 10 (left: 10)",
                "1 + 1 + 1 = 3 (left: 3 1 11)",
                "11 - 1 = 10 (left: 1 1 10)",
                "11 - 1 = 10 (left: 1 1 10)\n1 / 1 = 1 (left: 1 10)\n1 + 10 = 11 (left: 10 11)",
                "11 - 1 = 10 (left: 1 1 10)\n10 / 1 = 10 (left: 1 10)\n1 + 10 = 11 (left: 11)",
                "11 - 1 = 10 (left: 1 1 10)\n10 - 1 = 9 (left: 1 9)\n9 - 1 = 8 (left: 8)",
                "11 - 1 = 10 (left: 1 1 10)\n10 + 1 = 11 (left: 1 11)\n11 / 1 = 11 (left: 1 11)",
                "11 - 1 = 10 (left: 1 1 10)\n1 + 1 = 2 (left: 2 10)\n10 - 2 = 8 (left: 2 8)\n2 * 8 = 16 (left: 16)",
                "11 - 1 = 10 (left: 1 1 10)\n10 / 1 = 10 (left: 1 10)\n10 / 1 = 10 (left: 10)"
            ],
            "values": [
                0.002,
                0.002,
                0.003,
                21.001,
                1.001,
                0.003,
                0.0,
                20.001,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 3.5",
                "1 <- 6.3",
                "2 <- 5.1",
                "3 <- 4.7",
                "4 <- 3.1",
                "5 <- 5.7",
                "6 <- 4.7",
                "7 <- 3.3",
                "8 <- 5.7",
                "9 <- 3.6"
            ],
            "resampled_steps": [
                "11 - 1 = 10 (left: 1 1 10)\n1 + 1 = 2 (left: 2 10)",
                "11 - 1 = 10 (left: 1 1 10)",
                "11 - 1 = 10 (left: 1 1 10)\n10 + 1 = 11 (left: 1 11)",
                "11 / 1 = 11 (left: 1 1 11)\n11 - 1 = 10 (left: 1 10)",
                "11 - 1 = 10 (left: 1 1 10)\n10 / 1 = 10 (left: 1 10)",
                "11 - 1 = 10 (left: 1 1 10)\n10 / 1 = 10 (left: 1 10)",
                "11 / 1 = 11 (left: 1 1 11)\n11 - 1 = 10 (left: 1 10)",
                "11 - 1 = 10 (left: 1 1 10)\n1 / 1 = 1 (left: 1 10)",
                "11 - 1 = 10 (left: 1 1 10)\n10 / 1 = 10 (left: 1 10)",
                "11 - 1 = 10 (left: 1 1 10)\n1 - 1 = 0 (left: 0 10)"
            ]
        },
        "step_7": {
            "steps": [
                "11 - 1 = 10 (left: 1 1 10)\n1 + 1 = 2 (left: 2 10)\n10 / 2 = 5 (left: 2 5)",
                "11 - 1 = 10 (left: 1 1 10)\n1 + 1 = 2 (left: 2 10)",
                "11 - 1 = 10 (left: 1 1 10)\n10 + 1 = 11 (left: 1 11)\n11 + 1 = 12 (left: 12)",
                "11 / 1 = 11 (left: 1 1 11)\n11 - 1 = 10 (left: 1 10)\n1 + 10 = 11 (left: 11)",
                "11 - 1 = 10 (left: 1 1 10)\n10 / 1 = 10 (left: 1 10)\n1 + 10 = 11 (left: 11)",
                "11 - 1 = 10 (left: 1 1 10)\n10 / 1 = 10 (left: 1 10)\n10 - 1 = 9 (left: 9)",
                "11 / 1 = 11 (left: 1 1 11)\n11 - 1 = 10 (left: 1 10)\n10 - 10 = 0 (left: 0)",
                "11 - 1 = 10 (left: 1 1 10)\n1 / 1 = 1 (left: 1 10)\n10 / 1 = 10 (left: 1 10)",
                "11 - 1 = 10 (left: 1 1 10)\n10 / 1 = 10 (left: 1 10)\n1 + 10 = 11 (left: 11)",
                "11 - 1 = 10 (left: 1 1 10)\n1 - 1 = 0 (left: 0 10)\n0 / 10 = 0 (left: 0 10)"
            ],
            "values": [
                60.0,
                2.0,
                0.001,
                0.002,
                0.002,
                0.001,
                0.0,
                41.0,
                0.002,
                0.0
            ],
            "resampled": [
                "0 <- 3.5",
                "1 <- 7.7",
                "2 <- 6.3",
                "3 <- 5.7",
                "4 <- 5.1",
                "5 <- 3.1",
                "6 <- 5.7",
                "7 <- 7.0",
                "8 <- 7.0",
                "9 <- 3.3"
            ],
            "resampled_steps": [
                "11 - 1 = 10 (left: 1 1 10)\n1 + 1 = 2 (left: 2 10)",
                "11 - 1 = 10 (left: 1 1 10)\n1 / 1 = 1 (left: 1 10)\n10 / 1 = 10 (left: 1 10)",
                "11 - 1 = 10 (left: 1 1 10)",
                "11 - 1 = 10 (left: 1 1 10)\n10 / 1 = 10 (left: 1 10)",
                "11 - 1 = 10 (left: 1 1 10)\n10 + 1 = 11 (left: 1 11)",
                "11 - 1 = 10 (left: 1 1 10)\n10 / 1 = 10 (left: 1 10)",
                "11 - 1 = 10 (left: 1 1 10)\n10 / 1 = 10 (left: 1 10)",
                "11 - 1 = 10 (left: 1 1 10)\n1 + 1 = 2 (left: 2 10)\n10 / 2 = 5 (left: 2 5)",
                "11 - 1 = 10 (left: 1 1 10)\n1 + 1 = 2 (left: 2 10)\n10 / 2 = 5 (left: 2 5)",
                "11 - 1 = 10 (left: 1 1 10)\n1 / 1 = 1 (left: 1 10)"
            ]
        },
        "step_8": {
            "steps": [
                "11 - 1 = 10 (left: 1 1 10)\n1 + 1 = 2 (left: 2 10)\n2 + 10 = 12 (left: 10 12)",
                "11 - 1 = 10 (left: 1 1 10)\n1 / 1 = 1 (left: 1 10)\n10 / 1 = 10 (left: 1 10)\n10 / 1 = 10 (left: 10)",
                "11 - 1 = 10 (left: 1 1 10)\n10 - 1 = 9 (left: 1 9)",
                "11 - 1 = 10 (left: 1 1 10)\n10 / 1 = 10 (left: 1 10)\n10 - 1 = 9 (left: 9)",
                "11 - 1 = 10 (left: 1 1 10)\n10 + 1 = 11 (left: 1 11)\n1 * 11 = 11 (left: 11)",
                "11 - 1 = 10 (left: 1 1 10)\n10 / 1 = 10 (left: 1 10)\n10 / 1 = 10 (left: 10)",
                "11 - 1 = 10 (left: 1 1 10)\n10 / 1 = 10 (left: 1 10)\n1 * 10 = 10 (left: 10)",
                "11 - 1 = 10 (left: 1 1 10)\n1 + 1 = 2 (left: 2 10)\n10 / 2 = 5 (left: 2 5)\n2 * 5 = 10 (left: 5 10)",
                "11 - 1 = 10 (left: 1 1 10)\n1 + 1 = 2 (left: 2 10)\n10 / 2 = 5 (left: 2 5)\n5 / 2 = 2.5 (left: 2.5 5)",
                "11 - 1 = 10 (left: 1 1 10)\n1 / 1 = 1 (left: 1 10)\n10 / 1 = 10 (left: 10)"
            ],
            "values": [
                1.001,
                0.003,
                0.001,
                0.002,
                0.002,
                0.003,
                0.002,
                21.0,
                3.0,
                0.003
            ],
            "resampled": [
                "0 <- 8.7",
                "1 <- 6.7",
                "2 <- 8.7",
                "3 <- 3.3",
                "4 <- 7.0",
                "5 <- 4.5",
                "6 <- 7.0",
                "7 <- 5.7",
                "8 <- 7.0",
                "9 <- 5.1"
            ],
            "resampled_steps": [
                "11 - 1 = 10 (left: 1 1 10)\n1 + 1 = 2 (left: 2 10)\n10 / 2 = 5 (left: 2 5)\n2 * 5 = 10 (left: 5 10)",
                "11 - 1 = 10 (left: 1 1 10)\n10 + 1 = 11 (left: 1 11)\n11 / 1 = 11 (left: 1 11)",
                "11 - 1 = 10 (left: 1 1 10)\n1 + 1 = 2 (left: 2 10)\n10 / 2 = 5 (left: 2 5)\n2 * 5 = 10 (left: 5 10)",
                "11 - 1 = 10 (left: 1 1 10)\n1 / 1 = 1 (left: 1 10)",
                "11 - 1 = 10 (left: 1 1 10)\n1 + 1 = 2 (left: 2 10)\n10 / 2 = 5 (left: 2 5)",
                "11 - 1 = 10 (left: 1 1 10)\n10 - 1 = 9 (left: 1 9)",
                "11 - 1 = 10 (left: 1 1 10)\n1 + 1 = 2 (left: 2 10)\n10 / 2 = 5 (left: 2 5)",
                "11 - 1 = 10 (left: 1 1 10)\n10 / 1 = 10 (left: 1 10)",
                "11 - 1 = 10 (left: 1 1 10)\n1 + 1 = 2 (left: 2 10)\n10 / 2 = 5 (left: 2 5)",
                "11 - 1 = 10 (left: 1 1 10)\n10 + 1 = 11 (left: 1 11)"
            ]
        },
        "step_9": {
            "steps": [
                "11 - 1 = 10 (left: 1 1 10)\n1 + 1 = 2 (left: 2 10)\n10 / 2 = 5 (left: 2 5)\n2 * 5 = 10 (left: 5 10)\n10 / 5 = 2 (left: 2 10)",
                "11 - 1 = 10 (left: 1 1 10)\n10 + 1 = 11 (left: 1 11)\n11 / 1 = 11 (left: 1 11)\n1 + 11 = 12 (left: 12)",
                "11 - 1 = 10 (left: 1 1 10)\n1 + 1 = 2 (left: 2 10)\n10 / 2 = 5 (left: 2 5)\n2 * 5 = 10 (left: 5 10)\n10 - 5 = 5 (left: 5 10)",
                "11 - 1 = 10 (left: 1 1 10)\n1 / 1 = 1 (left: 1 10)\n10 - 1 = 9 (left: 9)",
                "11 - 1 = 10 (left: 1 1 10)\n1 + 1 = 2 (left: 2 10)\n10 / 2 = 5 (left: 2 5)\n2 + 5 = 7 (left: 5 7)",
                "11 - 1 = 10 (left: 1 1 10)\n10 - 1 = 9 (left: 1 9)\n9 - 1 = 8 (left: 8)",
                "11 - 1 = 10 (left: 1 1 10)\n1 + 1 = 2 (left: 2 10)\n10 / 2 = 5 (left: 2 5)\n5 - 2 = 3 (left: 3)",
                "11 - 1 = 10 (left: 1 1 10)\n10 / 1 = 10 (left: 1 10)\n1 * 10 = 10 (left: 10)",
                "11 - 1 = 10 (left: 1 1 10)\n1 + 1 = 2 (left: 2 10)\n10 / 2 = 5 (left: 2 5)\n9 - 3 = 6 (left: 6 9)",
                "11 - 1 = 10 (left: 1 1 10)\n10 + 1 = 11 (left: 1 11)\n1 + 11 = 12 (left: 11 12)"
            ],
            "values": [
                1.001,
                0.002,
                1.002,
                0.002,
                0.002,
                0.002,
                0.003,
                0.001,
                0.002,
                0.003
            ],
            "resampled": [
                "0 <- 7.0",
                "1 <- 5.7",
                "2 <- 5.7",
                "3 <- 7.7",
                "4 <- 5.7",
                "5 <- 7.0",
                "6 <- 3.6",
                "7 <- 7.7",
                "8 <- 5.9",
                "9 <- 3.6"
            ],
            "resampled_steps": [
                "11 - 1 = 10 (left: 1 1 10)\n1 + 1 = 2 (left: 2 10)\n10 / 2 = 5 (left: 2 5)",
                "11 - 1 = 10 (left: 1 1 10)\n10 / 1 = 10 (left: 1 10)",
                "11 - 1 = 10 (left: 1 1 10)\n10 / 1 = 10 (left: 1 10)",
                "11 - 1 = 10 (left: 1 1 10)\n1 / 1 = 1 (left: 1 10)\n10 / 1 = 10 (left: 1 10)",
                "11 - 1 = 10 (left: 1 1 10)\n10 / 1 = 10 (left: 1 10)",
                "11 - 1 = 10 (left: 1 1 10)\n1 + 1 = 2 (left: 2 10)\n10 / 2 = 5 (left: 2 5)",
                "11 - 1 = 10 (left: 1 1 10)\n1 - 1 = 0 (left: 0 10)",
                "11 - 1 = 10 (left: 1 1 10)\n1 / 1 = 1 (left: 1 10)\n10 / 1 = 10 (left: 1 10)",
                "11 - 1 = 10 (left: 1 1 10)\n10 / 1 = 10 (left: 1 10)",
                "11 - 1 = 10 (left: 1 1 10)\n1 - 1 = 0 (left: 0 10)"
            ]
        },
        "step_10": {
            "steps": [
                "11 - 1 = 10 (left: 1 1 10)\n1 + 1 = 2 (left: 2 10)\n10 / 2 = 5 (left: 2 5)\n5 - 2 = 3 (left: 3)",
                "11 - 1 = 10 (left: 1 1 10)\n10 / 1 = 10 (left: 1 10)\n10 / 1 = 10 (left: 10)",
                "11 - 1 = 10 (left: 1 1 10)\n10 / 1 = 10 (left: 1 10)\n10 - 1 = 9 (left: 9)",
                "11 - 1 = 10 (left: 1 1 10)\n1 / 1 = 1 (left: 1 10)\n10 / 1 = 10 (left: 1 10)\n1 * 10 = 10 (left: 10)",
                "11 - 1 = 10 (left: 1 1 10)\n10 / 1 = 10 (left: 1 10)\n1 * 10 = 10 (left: 10)",
                "11 - 1 = 10 (left: 1 1 10)\n1 + 1 = 2 (left: 2 10)\n10 / 2 = 5 (left: 2 5)\n5 - 2 = 3 (left: 3)",
                "11 - 1 = 10 (left: 1 1 10)\n1 - 1 = 0 (left: 0 10)\n10 - 0 = 10 (left: 10)",
                "11 - 1 = 10 (left: 1 1 10)\n1 / 1 = 1 (left: 1 10)\n10 / 1 = 10 (left: 1 10)\n10 / 1 = 10 (left: 1 10)",
                "11 - 1 = 10 (left: 1 1 10)\n10 / 1 = 10 (left: 1 10)\n1 * 10 = 10 (left: 10)",
                "11 - 1 = 10 (left: 1 1 10)\n1 - 1 = 0 (left: 0 10)\n10 - 0 = 10 (left: 10)"
            ],
            "values": [
                0.002,
                0.002,
                0.001,
                0.002,
                0.002,
                0.002,
                0.003,
                21.001,
                0.003,
                0.002
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 2.540388
    },
    "40": {
        "input": "1 1 11 12",
        "step_1": {
            "steps": [
                "12 - 1 = 11 (left: 1 11 11)",
                "1 + 1 = 2 (left: 2 11 12)",
                "1 * 11 = 11 (left: 1 11 12)",
                "11 - 1 = 10 (left: 1 10 12)",
                "1 + 1 = 2 (left: 2 11 12)",
                "11 - 1 = 10 (left: 1 10 12)",
                "11 - 1 = 10 (left: 1 10 12)",
                "1 + 1 = 2 (left: 2 11 12)",
                "11 - 1 = 10 (left: 1 10 12)",
                "1 * 11 = 11 (left: 1 11 12)"
            ],
            "values": [
                0.002,
                20.002,
                0.003,
                0.003,
                0.002,
                0.003,
                0.002,
                0.003,
                2.0,
                20.002
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- 1.9",
                "3 <- 1.1",
                "4 <- 1.9",
                "5 <- 1.9",
                "6 <- 1.9",
                "7 <- INIT",
                "8 <- 1.1",
                "9 <- INIT"
            ],
            "resampled_steps": [
                "",
                "",
                "1 * 11 = 11 (left: 1 11 12)",
                "1 + 1 = 2 (left: 2 11 12)",
                "1 * 11 = 11 (left: 1 11 12)",
                "1 * 11 = 11 (left: 1 11 12)",
                "1 * 11 = 11 (left: 1 11 12)",
                "",
                "1 + 1 = 2 (left: 2 11 12)",
                ""
            ]
        },
        "step_2": {
            "steps": [
                "11 + 1 = 12 (left: 1 12 12)",
                "12 / 1 = 12 (left: 1 11 12)",
                "1 * 11 = 11 (left: 1 11 12)\n11 - 1 = 10 (left: 10 12)",
                "1 + 1 = 2 (left: 2 11 12)\n12 + 2 = 14 (left: 2 14)",
                "1 * 11 = 11 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)",
                "1 * 11 = 11 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)",
                "1 * 11 = 11 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)",
                "11 - 1 = 10 (left: 1 10 12)",
                "1 + 1 = 2 (left: 2 11 12)\n11 - 2 = 9 (left: 9 12)",
                "11 - 1 = 10 (left: 1 10 12)"
            ],
            "values": [
                2.001,
                40.001,
                1.002,
                1.002,
                20.002,
                40.001,
                20.002,
                1.002,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 2.1",
                "1 <- 2.4",
                "2 <- 2.5",
                "3 <- 2.5",
                "4 <- 2.5",
                "5 <- 1.9",
                "6 <- 2.0",
                "7 <- 2.5",
                "8 <- 1.1",
                "9 <- 1.9"
            ],
            "resampled_steps": [
                "12 / 1 = 12 (left: 1 11 12)",
                "1 * 11 = 11 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)",
                "1 * 11 = 11 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)",
                "1 * 11 = 11 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)",
                "1 * 11 = 11 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)",
                "1 * 11 = 11 (left: 1 11 12)",
                "11 + 1 = 12 (left: 1 12 12)",
                "1 * 11 = 11 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)",
                "1 + 1 = 2 (left: 2 11 12)",
                "1 * 11 = 11 (left: 1 11 12)"
            ]
        },
        "step_3": {
            "steps": [
                "12 / 1 = 12 (left: 1 11 12)\n11 / 1 = 11 (left: 11 12)",
                "1 * 11 = 11 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)\n12 / 12 = 1 (left: 1)",
                "1 * 11 = 11 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144)",
                "1 * 11 = 11 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144)",
                "1 * 11 = 11 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)\n12 / 12 = 1 (left: 1 12)",
                "1 * 11 = 11 (left: 1 11 12)\n12 - 1 = 11 (left: 11 12)",
                "11 + 1 = 12 (left: 1 12 12)\n12 / 12 = 1 (left: 1 1)",
                "1 * 11 = 11 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)\n12 / 12 = 1 (left: 1)",
                "1 + 1 = 2 (left: 2 11 12)\n11 / 2 = 5.5 (left: 5.5 12)",
                "1 * 11 = 11 (left: 1 11 12)\n11 / 1 = 11 (left: 11 12)"
            ],
            "values": [
                0.003,
                0.003,
                20.002,
                0.002,
                0.003,
                0.003,
                1.002,
                0.003,
                3.0,
                0.002
            ],
            "resampled": [
                "0 <- 2.1",
                "1 <- 1.1",
                "2 <- 3.6",
                "3 <- 2.6",
                "4 <- 3.8",
                "5 <- 2.1",
                "6 <- 1.1",
                "7 <- INIT",
                "8 <- 2.5",
                "9 <- 3.6"
            ],
            "resampled_steps": [
                "12 / 1 = 12 (left: 1 11 12)",
                "1 + 1 = 2 (left: 2 11 12)",
                "11 + 1 = 12 (left: 1 12 12)\n12 / 12 = 1 (left: 1 1)",
                "1 * 11 = 11 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)",
                "1 + 1 = 2 (left: 2 11 12)\n11 / 2 = 5.5 (left: 5.5 12)",
                "12 / 1 = 12 (left: 1 11 12)",
                "1 + 1 = 2 (left: 2 11 12)",
                "",
                "1 * 11 = 11 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)",
                "11 + 1 = 12 (left: 1 12 12)\n12 / 12 = 1 (left: 1 1)"
            ]
        },
        "step_4": {
            "steps": [
                "12 / 1 = 12 (left: 1 11 12)\n11 - 1 = 10 (left: 10 12)",
                "1 + 1 = 2 (left: 2 11 12)\n2 * 11 = 22 (left: 22 12)",
                "11 + 1 = 12 (left: 1 12 12)\n12 / 12 = 1 (left: 1 1)\n1 * 1 = 1 (left: 1)",
                "1 * 11 = 11 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "1 + 1 = 2 (left: 2 11 12)\n11 / 2 = 5.5 (left: 5.5 12)\n5.5 + 12 = 17.5 (left: 17.5)",
                "12 / 1 = 12 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)",
                "1 + 1 = 2 (left: 2 11 12)\n12 - 2 = 10 (left: 2 11 10)",
                "1 * 11 = 11 (left: 1 11 12)",
                "1 * 11 = 11 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "11 + 1 = 12 (left: 1 12 12)\n12 / 12 = 1 (left: 1 1)\n1 * 1 = 1 (left: 1)"
            ],
            "values": [
                0.003,
                0.003,
                0.002,
                20.0,
                0.002,
                60.0,
                0.003,
                0.002,
                40.0,
                0.002
            ],
            "resampled": [
                "0 <- 4.8",
                "1 <- 4.5",
                "2 <- INIT",
                "3 <- 4.3",
                "4 <- 4.5",
                "5 <- 2.5",
                "6 <- 2.5",
                "7 <- 4.5",
                "8 <- 2.1",
                "9 <- 1.9"
            ],
            "resampled_steps": [
                "1 * 11 = 11 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "12 / 1 = 12 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)",
                "",
                "1 * 11 = 11 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "12 / 1 = 12 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)",
                "1 * 11 = 11 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)",
                "1 * 11 = 11 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)",
                "12 / 1 = 12 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)",
                "12 / 1 = 12 (left: 1 11 12)",
                "1 * 11 = 11 (left: 1 11 12)"
            ]
        },
        "step_5": {
            "steps": [
                "1 * 11 = 11 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (1 * 11) + (1 + 11) = 24",
                "12 / 1 = 12 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)\n12 - 12 = 0 (left: 0)",
                "11 + 1 = 12 (left: 1 12 12)",
                "1 * 11 = 11 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: ((1 * 11) + 1) + 12 = 24",
                "12 / 1 = 12 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "1 * 11 = 11 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)\n12 - 12 = 0 (left: 0)",
                "1 * 11 = 11 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)\n12 - 12 = 0 (left: 0)",
                "12 / 1 = 12 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)\n12 / 12 = 1 (left: 1)",
                "12 / 1 = 12 (left: 1 11 12)\n11 / 1 = 11 (left: 11 12)",
                "1 * 11 = 11 (left: 1 11 12)\n12 + 1 = 13 (left: 11 13)"
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 2.582278
    },
    "41": {
        "input": "2 7 7 12",
        "step_1": {
            "steps": [
                "12 - 2 = 10 (left: 7 10 12)",
                "2 + 7 = 9 (left: 7 9 12)",
                "2 * 7 = 14 (left: 7 14 12)",
                "2 + 7 = 9 (left: 7 9 12)",
                "2 + 7 = 9 (left: 7 9 12)",
                "12 + 2 = 14 (left: 7 7 14)",
                "7 - 2 = 5 (left: 5 7 12)",
                "12 + 2 = 14 (left: 7 7 14)",
                "12 / 2 = 6 (left: 6 7 7)",
                "12 - 7 = 5 (left: 2 5 7)"
            ],
            "values": [
                3.0,
                3.0,
                2.001,
                3.0,
                3.0,
                2.001,
                3.0,
                0.003,
                2.001,
                1.002
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- 1.8",
                "2 <- INIT",
                "3 <- 1.0",
                "4 <- INIT",
                "5 <- 1.4",
                "6 <- 1.0",
                "7 <- INIT",
                "8 <- INIT",
                "9 <- 1.8"
            ],
            "resampled_steps": [
                "",
                "12 / 2 = 6 (left: 6 7 7)",
                "",
                "12 - 2 = 10 (left: 7 10 12)",
                "",
                "2 + 7 = 9 (left: 7 9 12)",
                "12 - 2 = 10 (left: 7 10 12)",
                "",
                "",
                "12 / 2 = 6 (left: 6 7 7)"
            ]
        },
        "step_2": {
            "steps": [
                "12 - 7 = 5 (left: 2 5 7)",
                "12 / 2 = 6 (left: 6 7 7)\n7 / 6 = 1.1666666666667 (left: 1.1666666666667 7)",
                "12 - 2 = 10 (left: 7 7 10)",
                "12 - 2 = 10 (left: 7 10 12)\n10 + 12 = 22 (left: 7 22)",
                "7 * 2 = 14 (left: 7 14 12)",
                "2 + 7 = 9 (left: 7 9 12)\n9 / 3 = 3 (left: 7 3)",
                "12 - 2 = 10 (left: 7 10 12)\n10 - 7 = 3 (left: 3 12)",
                "2 + 7 = 9 (left: 7 9 12)",
                "12 + 2 = 14 (left: 7 7 14)",
                "12 / 2 = 6 (left: 6 7 7)\n7 - 6 = 1 (left: 1 7)"
            ],
            "values": [
                2.001,
                2.0,
                41.0,
                0.003,
                2.001,
                2.001,
                20.002,
                2.001,
                20.002,
                0.0
            ],
            "resampled": [
                "0 <- 2.2",
                "1 <- 2.6",
                "2 <- 1.8",
                "3 <- 2.6",
                "4 <- 2.2",
                "5 <- 2.2",
                "6 <- 2.2",
                "7 <- INIT",
                "8 <- 2.2",
                "9 <- 2.2"
            ],
            "resampled_steps": [
                "12 - 2 = 10 (left: 7 7 10)",
                "12 - 2 = 10 (left: 7 10 12)\n10 - 7 = 3 (left: 3 12)",
                "12 / 2 = 6 (left: 6 7 7)",
                "12 - 2 = 10 (left: 7 10 12)\n10 - 7 = 3 (left: 3 12)",
                "12 - 2 = 10 (left: 7 7 10)",
                "12 - 2 = 10 (left: 7 7 10)",
                "12 - 2 = 10 (left: 7 7 10)",
                "",
                "12 - 2 = 10 (left: 7 7 10)",
                "12 - 2 = 10 (left: 7 7 10)"
            ]
        },
        "step_3": {
            "steps": [
                "12 - 2 = 10 (left: 7 7 10)\n7 + 7 = 14 (left: 14 10)",
                "12 - 2 = 10 (left: 7 10 12)\n10 - 7 = 3 (left: 3 12)\n12 / 3 = 4 (left: 4)",
                "12 / 2 = 6 (left: 6 7 7)\n6 - 7 = -1 (left: -1 7)",
                "12 - 2 = 10 (left: 7 10 12)\n10 - 7 = 3 (left: 3 12)\n3 * 4 = 12 (left: 12)",
                "12 - 2 = 10 (left: 7 7 10)\n10 - 7 = 3 (left: 7 3)",
                "12 - 2 = 10 (left: 7 7 10)\n10 + 7 = 17 (left: 7 17)",
                "12 - 2 = 10 (left: 7 7 10)\n10 / 7 = 1.43 (left: 7 1.43)",
                "7 / 2 = 3.5 (left: 3.5 7 12)",
                "12 - 2 = 10 (left: 7 7 10)\n7 / 7 = 1 (left: 1 10)",
                "12 - 2 = 10 (left: 7 7 10)\n7 * 7 = 49 (left: 49 10)"
            ],
            "values": [
                41.0,
                0.002,
                2.001,
                0.001,
                0.002,
                21.0,
                2.001,
                3.0,
                20.0,
                0.003
            ],
            "resampled": [
                "0 <- 3.7",
                "1 <- 2.6",
                "2 <- 1.5",
                "3 <- 3.5",
                "4 <- 1.0",
                "5 <- 3.5",
                "6 <- 2.8",
                "7 <- 1.1",
                "8 <- 3.5",
                "9 <- 2.2"
            ],
            "resampled_steps": [
                "7 / 2 = 3.5 (left: 3.5 7 12)",
                "12 - 2 = 10 (left: 7 10 12)\n10 - 7 = 3 (left: 3 12)",
                "12 + 2 = 14 (left: 7 7 14)",
                "12 - 2 = 10 (left: 7 7 10)\n10 + 7 = 17 (left: 7 17)",
                "12 - 2 = 10 (left: 7 10 12)",
                "12 - 2 = 10 (left: 7 7 10)\n10 + 7 = 17 (left: 7 17)",
                "12 + 2 = 14 (left: 7 7 14)",
                "2 + 7 = 9 (left: 7 9 12)",
                "12 - 2 = 10 (left: 7 7 10)\n10 + 7 = 17 (left: 7 17)",
                "12 - 2 = 10 (left: 7 7 10)"
            ]
        },
        "step_4": {
            "steps": [
                "7 / 2 = 3.5 (left: 3.5 7 12)\n3.5 + 7 = 10.5 (left: 10.5 12)",
                "12 - 2 = 10 (left: 7 10 12)\n10 - 7 = 3 (left: 3 12)\n12 / 3 = 4 (left: 4)",
                "12 + 2 = 14 (left: 7 7 14)\n14 / 7 = 2 (left: 2 7)",
                "12 - 2 = 10 (left: 7 7 10)\n10 + 7 = 17 (left: 7 17)\n17 - 7 = 10 (left: 10 17)",
                "12 - 2 = 10 (left: 7 10 12)\n12 - 7 = 5 (left: 5 10)",
                "12 - 2 = 10 (left: 7 7 10)\n10 + 7 = 17 (left: 7 17)\n7 * 17 = 119 (left: 119)",
                "12 + 2 = 14 (left: 7 7 14)\n14 - 7 = 7 (left: 7 7)",
                "2 + 7 = 9 (left: 7 9 12)\n7 - 9 = -2 (left: -2 12)",
                "12 - 2 = 10 (left: 7 7 10)\n10 + 7 = 17 (left: 7 17)\n17 - 7 = 10 (left: 10 17)",
                "12 - 2 = 10 (left: 7 7 10)\n7 * 7 = 49 (left: 49 10)"
            ],
            "values": [
                2.0,
                0.003,
                1.002,
                0.003,
                21.001,
                0.003,
                0.003,
                0.0,
                0.003,
                0.002
            ],
            "resampled": [
                "0 <- 3.0",
                "1 <- 2.8",
                "2 <- 2.8",
                "3 <- 3.0",
                "4 <- 4.0",
                "5 <- 4.0",
                "6 <- 3.5",
                "7 <- 3.5",
                "8 <- 4.4",
                "9 <- 3.5"
            ],
            "resampled_steps": [
                "12 - 2 = 10 (left: 7 7 10)\n7 + 7 = 14 (left: 14 10)",
                "12 + 2 = 14 (left: 7 7 14)",
                "12 + 2 = 14 (left: 7 7 14)",
                "12 - 2 = 10 (left: 7 7 10)\n7 + 7 = 14 (left: 14 10)",
                "7 / 2 = 3.5 (left: 3.5 7 12)\n3.5 + 7 = 10.5 (left: 10.5 12)",
                "7 / 2 = 3.5 (left: 3.5 7 12)\n3.5 + 7 = 10.5 (left: 10.5 12)",
                "12 - 2 = 10 (left: 7 7 10)\n10 + 7 = 17 (left: 7 17)",
                "12 - 2 = 10 (left: 7 7 10)\n10 + 7 = 17 (left: 7 17)",
                "12 - 2 = 10 (left: 7 10 12)\n12 - 7 = 5 (left: 5 10)",
                "12 - 2 = 10 (left: 7 7 10)\n10 + 7 = 17 (left: 7 17)"
            ]
        },
        "step_5": {
            "steps": [
                "12 - 2 = 10 (left: 7 7 10)\n7 + 7 = 14 (left: 14 10)\n14 / 10 = 1.4 (left: 1.4)",
                "12 + 2 = 14 (left: 7 7 14)\n7 / 7 = 1 (left: 1 14)",
                "12 + 2 = 14 (left: 7 7 14)\n14 + 7 = 21 (left: 7 21)",
                "12 - 2 = 10 (left: 7 7 10)\n7 + 7 = 14 (left: 14 10)\n14 * 10 = 140 (left: 140)",
                "7 / 2 = 3.5 (left: 3.5 7 12)\n3.5 + 7 = 10.5 (left: 10.5 12)\n10.5 - 12 = -1.5 (left: -1.5)",
                "7 / 2 = 3.5 (left: 3.5 7 12)\n3.5 + 7 = 10.5 (left: 10.5 12)\n12 - 10.5 = 1.5 (left: 1.5)",
                "12 - 2 = 10 (left: 7 7 10)\n10 + 7 = 17 (left: 7 17)\n17 - 7 = 10 (left: 10)",
                "12 - 2 = 10 (left: 7 7 10)\n10 + 7 = 17 (left: 7 17)\n17 - 7 = 10 (left: 10)",
                "12 - 2 = 10 (left: 7 10 12)\n12 - 7 = 5 (left: 5 10)\n10 * 5 = 50 (left: 5 50)",
                "12 - 2 = 10 (left: 7 7 10)\n10 + 7 = 17 (left: 7 17)\n7 + 17 = 24 (left: 17 24)"
            ],
            "values": [
                0.003,
                1.001,
                1.002,
                0.003,
                0.003,
                0.003,
                0.003,
                0.002,
                41.0,
                0.003
            ],
            "resampled": [
                "0 <- 4.4",
                "1 <- 5.8",
                "2 <- 3.0",
                "3 <- 3.5",
                "4 <- 5.8",
                "5 <- 1.8",
                "6 <- INIT",
                "7 <- 1.3",
                "8 <- 5.8",
                "9 <- 4.4"
            ],
            "resampled_steps": [
                "12 - 2 = 10 (left: 7 10 12)\n12 - 7 = 5 (left: 5 10)",
                "12 - 2 = 10 (left: 7 10 12)\n12 - 7 = 5 (left: 5 10)\n10 * 5 = 50 (left: 5 50)",
                "12 - 2 = 10 (left: 7 7 10)\n7 + 7 = 14 (left: 14 10)",
                "12 - 2 = 10 (left: 7 7 10)\n10 + 7 = 17 (left: 7 17)",
                "12 - 2 = 10 (left: 7 10 12)\n12 - 7 = 5 (left: 5 10)\n10 * 5 = 50 (left: 5 50)",
                "12 / 2 = 6 (left: 6 7 7)",
                "",
                "2 + 7 = 9 (left: 7 9 12)",
                "12 - 2 = 10 (left: 7 10 12)\n12 - 7 = 5 (left: 5 10)\n10 * 5 = 50 (left: 5 50)",
                "12 - 2 = 10 (left: 7 10 12)\n12 - 7 = 5 (left: 5 10)"
            ]
        },
        "step_6": {
            "steps": [
                "12 - 2 = 10 (left: 7 10 12)\n12 - 7 = 5 (left: 5 10)\n5 + 10 = 15 (left: 10 15)",
                "12 - 2 = 10 (left: 7 10 12)\n12 - 7 = 5 (left: 5 10)\n10 * 5 = 50 (left: 5 50)\n50 / 5 = 10 (left: 10)",
                "12 - 2 = 10 (left: 7 7 10)\n7 + 7 = 14 (left: 14 10)\n14 - 10 = 4 (left: 4)",
                "12 - 2 = 10 (left: 7 7 10)\n10 + 7 = 17 (left: 7 17)\n7 * 17 = 119 (left: 119)",
                "12 - 2 = 10 (left: 7 10 12)\n12 - 7 = 5 (left: 5 10)\n10 * 5 = 50 (left: 5 50)\n50 / 5 = 10 (left: 10)",
                "12 / 2 = 6 (left: 6 7 7)\n7 / 6 = 1.16666666667 (left: 1.16666666667 7)",
                "7 * 2 = 14 (left: 14 7 12)",
                "2 + 7 = 9 (left: 7 9 12)\n7 * 9 = 63 (left: 63 12)",
                "12 - 2 = 10 (left: 7 10 12)\n12 - 7 = 5 (left: 5 10)\n10 * 5 = 50 (left: 5 50)\n5 * 10 = 50 (left: 10)",
                "12 - 2 = 10 (left: 7 10 12)\n12 - 7 = 5 (left: 5 10)\n10 - 5 = 5 (left: 5 10)"
            ],
            "values": [
                0.003,
                0.002,
                0.001,
                0.003,
                0.001,
                2.001,
                2.001,
                0.003,
                0.003,
                1.002
            ],
            "resampled": [
                "0 <- 3.0",
                "1 <- 2.8",
                "2 <- 3.2",
                "3 <- 5.8",
                "4 <- 5.8",
                "5 <- 4.0",
                "6 <- 3.8",
                "7 <- 5.8",
                "8 <- 3.5",
                "9 <- 3.0"
            ],
            "resampled_steps": [
                "12 - 2 = 10 (left: 7 7 10)\n7 + 7 = 14 (left: 14 10)",
                "12 + 2 = 14 (left: 7 7 14)",
                "12 / 2 = 6 (left: 6 7 7)\n6 - 7 = -1 (left: -1 7)",
                "12 - 2 = 10 (left: 7 10 12)\n12 - 7 = 5 (left: 5 10)\n10 * 5 = 50 (left: 5 50)",
                "12 - 2 = 10 (left: 7 10 12)\n12 - 7 = 5 (left: 5 10)\n10 * 5 = 50 (left: 5 50)",
                "7 / 2 = 3.5 (left: 3.5 7 12)\n3.5 + 7 = 10.5 (left: 10.5 12)",
                "12 - 2 = 10 (left: 7 7 10)\n7 / 7 = 1 (left: 1 10)",
                "12 - 2 = 10 (left: 7 10 12)\n12 - 7 = 5 (left: 5 10)\n10 * 5 = 50 (left: 5 50)",
                "12 - 2 = 10 (left: 7 7 10)\n10 + 7 = 17 (left: 7 17)",
                "12 - 2 = 10 (left: 7 7 10)\n7 + 7 = 14 (left: 14 10)"
            ]
        },
        "step_7": {
            "steps": [
                "12 - 2 = 10 (left: 7 7 10)\n7 + 7 = 14 (left: 14 10)\n14 / 10 = 1.4 (left: 1.4)",
                "12 + 2 = 14 (left: 7 7 14)\n14 - 7 = 7 (left: 7 14)",
                "12 / 2 = 6 (left: 6 7 7)\n6 - 7 = -1 (left: -1 7)\n-1 + 7 = 6 (left: 6)",
                "12 - 2 = 10 (left: 7 10 12)\n12 - 7 = 5 (left: 5 10)\n10 * 5 = 50 (left: 5 50)\n50 / 50 = 1 (left: 5 1)",
                "12 - 2 = 10 (left: 7 10 12)\n12 - 7 = 5 (left: 5 10)\n10 * 5 = 50 (left: 5 50)\n50 - 5 = 45 (left: 45)",
                "7 / 2 = 3.5 (left: 3.5 7 12)\n3.5 + 7 = 10.5 (left: 10.5 12)\n10.5 * 12 = 126 (left: 126)",
                "12 - 2 = 10 (left: 7 7 10)\n7 / 7 = 1 (left: 1 10)\n1 + 10 = 11 (left: 10 11)",
                "12 - 2 = 10 (left: 7 10 12)\n12 - 7 = 5 (left: 5 10)\n10 * 5 = 50 (left: 5 50)\n5 * 10 = 50 (left: 10)",
                "12 - 2 = 10 (left: 7 7 10)\n10 + 7 = 17 (left: 7 17)\n17 / 7 = 2.43 (left: 2.43 17)",
                "12 - 2 = 10 (left: 7 7 10)\n7 + 7 = 14 (left: 14 10)\n14 * 10 = 140 (left: 140)"
            ],
            "values": [
                0.003,
                1.002,
                0.003,
                2.0,
                0.0,
                0.003,
                2.001,
                0.003,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 2.2",
                "1 <- 3.0",
                "2 <- 5.8",
                "3 <- 4.4",
                "4 <- 2.8",
                "5 <- INIT",
                "6 <- 2.6",
                "7 <- 2.2",
                "8 <- 3.0",
                "9 <- 2.2"
            ],
            "resampled_steps": [
                "12 - 2 = 10 (left: 7 7 10)",
                "12 - 2 = 10 (left: 7 7 10)\n7 + 7 = 14 (left: 14 10)",
                "12 - 2 = 10 (left: 7 10 12)\n12 - 7 = 5 (left: 5 10)\n10 * 5 = 50 (left: 5 50)",
                "12 - 2 = 10 (left: 7 10 12)\n12 - 7 = 5 (left: 5 10)",
                "12 + 2 = 14 (left: 7 7 14)",
                "",
                "12 - 2 = 10 (left: 7 10 12)\n10 - 7 = 3 (left: 3 12)",
                "12 - 2 = 10 (left: 7 7 10)",
                "12 - 2 = 10 (left: 7 7 10)\n7 + 7 = 14 (left: 14 10)",
                "12 - 2 = 10 (left: 7 7 10)"
            ]
        },
        "step_8": {
            "steps": [
                "12 - 2 = 10 (left: 7 7 10)\n10 + 7 = 17 (left: 7 17)",
                "12 - 2 = 10 (left: 7 7 10)\n7 + 7 = 14 (left: 14 10)\n14 + 10 = 24 (left: 24)",
                "12 - 2 = 10 (left: 7 10 12)\n12 - 7 = 5 (left: 5 10)\n10 * 5 = 50 (left: 5 50)\n50 / 5 = 10 (left: 10 50)",
                "12 - 2 = 10 (left: 7 10 12)\n12 - 7 = 5 (left: 5 10)\n5 * 10 = 50 (left: 50)",
                "12 + 2 = 14 (left: 7 7 14)\n7 / 7 = 1 (left: 1 14)",
                "12 - 2 = 10 (left: 7 7 10)",
                "12 - 2 = 10 (left: 7 10 12)\n10 - 7 = 3 (left: 3 12)\n3 * 12 = 36 (left: 36)",
                "12 - 2 = 10 (left: 7 7 10)\n10 - 7 = 3 (left: 3 7)",
                "12 - 2 = 10 (left: 7 7 10)\n7 + 7 = 14 (left: 14 10)\n14 - 10 = 4 (left: 4)",
                "12 - 2 = 10 (left: 7 7 10)\n7 / 7 = 1 (left: 1 10)"
            ],
            "values": [
                60.0,
                20.0,
                1.002,
                0.002,
                0.002,
                22.0,
                40.0,
                0.0,
                0.001,
                40.0
            ],
            "resampled": [
                "0 <- 8.6",
                "1 <- 8.1",
                "2 <- 8.5",
                "3 <- 8.0",
                "4 <- 8.0",
                "5 <- 8.1",
                "6 <- 8.0",
                "7 <- 8.0",
                "8 <- 8.0",
                "9 <- 8.6"
            ],
            "resampled_steps": [
                "12 - 2 = 10 (left: 7 10 12)\n10 - 7 = 3 (left: 3 12)\n3 * 12 = 36 (left: 36)",
                "12 - 2 = 10 (left: 7 7 10)\n7 + 7 = 14 (left: 14 10)\n14 + 10 = 24 (left: 24)",
                "12 - 2 = 10 (left: 7 7 10)",
                "12 - 2 = 10 (left: 7 7 10)\n10 + 7 = 17 (left: 7 17)",
                "12 - 2 = 10 (left: 7 7 10)\n10 + 7 = 17 (left: 7 17)",
                "12 - 2 = 10 (left: 7 7 10)\n7 + 7 = 14 (left: 14 10)\n14 + 10 = 24 (left: 24)",
                "12 - 2 = 10 (left: 7 7 10)\n10 + 7 = 17 (left: 7 17)",
                "12 - 2 = 10 (left: 7 7 10)\n10 + 7 = 17 (left: 7 17)",
                "12 - 2 = 10 (left: 7 7 10)\n10 + 7 = 17 (left: 7 17)",
                "12 - 2 = 10 (left: 7 10 12)\n10 - 7 = 3 (left: 3 12)\n3 * 12 = 36 (left: 36)"
            ]
        },
        "step_9": {
            "steps": [
                "12 - 2 = 10 (left: 7 10 12)\n10 - 7 = 3 (left: 3 12)\n3 * 12 = 36 (left: 36)\n36 / 2 = 18 (left: 18 36)",
                "12 - 2 = 10 (left: 7 7 10)\n7 + 7 = 14 (left: 14 10)\n14 + 10 = 24 (left: 24)\nAnswer: ((12 - 2) + 7) + 7 = 24",
                "12 - 2 = 10 (left: 7 7 10)\n10 + 7 = 17 (left: 7 17)",
                "12 - 2 = 10 (left: 7 7 10)\n10 + 7 = 17 (left: 7 17)\n17 - 7 = 10 (left: 10 17)",
                "12 - 2 = 10 (left: 7 7 10)\n10 + 7 = 17 (left: 7 17)\n17 - 7 = 10 (left: 10)",
                "12 - 2 = 10 (left: 7 7 10)\n7 + 7 = 14 (left: 14 10)\n14 + 10 = 24 (left: 24)\nAnswer: ((12 - 2) + 7) + 7 = 24",
                "12 - 2 = 10 (left: 7 7 10)\n10 + 7 = 17 (left: 7 17)\n17 / 7 = 2.43 (left: 2.43)",
                "12 - 2 = 10 (left: 7 7 10)\n10 + 7 = 17 (left: 7 17)\n7 * 17 = 119 (left: 17 119)",
                "12 - 2 = 10 (left: 7 7 10)\n10 + 7 = 17 (left: 7 17)\n7 + 17 = 24 (left: 24)",
                "12 - 2 = 10 (left: 7 10 12)\n10 - 7 = 3 (left: 3 12)\n3 * 12 = 36 (left: 36)\n36 - 2 = 34 (left: 34)"
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 2.653778
    },
    "42": {
        "input": "1 5 7 12",
        "step_1": {
            "steps": [
                "7 - 1 = 6 (left: 6 5 12)",
                "12 / 7 = 1.71 (left: 1.71 5 12)",
                "7 / 1 = 7 (left: 5 7 12)",
                "5 + 7 = 12 (left: 1 12 12)",
                "1 + 5 = 6 (left: 6 7 12)",
                "5 * 7 = 35 (left: 1 35 12)",
                "5 + 7 = 12 (left: 1 12 12)",
                "7 - 1 = 6 (left: 5 6 12)",
                "5 * 7 = 35 (left: 1 35 12)",
                "5 + 7 = 12 (left: 1 12 12)"
            ],
            "values": [
                3.0,
                3.0,
                21.001,
                0.003,
                3.0,
                2.001,
                2.001,
                3.0,
                3.0,
                0.003
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- 1.8",
                "3 <- 1.2",
                "4 <- INIT",
                "5 <- 1.0",
                "6 <- 1.2",
                "7 <- 1.2",
                "8 <- INIT",
                "9 <- INIT"
            ],
            "resampled_steps": [
                "",
                "",
                "5 * 7 = 35 (left: 1 35 12)",
                "7 / 1 = 7 (left: 5 7 12)",
                "",
                "7 - 1 = 6 (left: 6 5 12)",
                "7 / 1 = 7 (left: 5 7 12)",
                "7 / 1 = 7 (left: 5 7 12)",
                "",
                ""
            ]
        },
        "step_2": {
            "steps": [
                "12 - 7 = 5 (left: 1 5 5)",
                "1 + 5 = 6 (left: 6 7 12)",
                "5 * 7 = 35 (left: 1 35 12)\n35 - 12 = 23 (left: 1 23)",
                "7 / 1 = 7 (left: 5 7 12)\n7 * 5 = 35 (left: 35 12)",
                "5 * 7 = 35 (left: 1 35 12)",
                "7 - 1 = 6 (left: 6 5 12)\n6 + 5 = 11 (left: 11 12)",
                "7 / 1 = 7 (left: 5 7 12)\n7 / 5 = 1.4 (left: 1.4 12)",
                "7 / 1 = 7 (left: 5 7 12)\n5 + 7 = 12 (left: 12 12)",
                "12 - 5 = 7 (left: 1 5 7)",
                "7 * 1 = 7 (left: 5 7 12)"
            ],
            "values": [
                21.001,
                2.001,
                40.001,
                0.001,
                2.0,
                0.003,
                2.001,
                41.0,
                2.001,
                3.0
            ],
            "resampled": [
                "0 <- 2.7",
                "1 <- 1.2",
                "2 <- 2.2",
                "3 <- 1.7",
                "4 <- 1.1",
                "5 <- 2.7",
                "6 <- INIT",
                "7 <- INIT",
                "8 <- 1.2",
                "9 <- 2.7"
            ],
            "resampled_steps": [
                "7 / 1 = 7 (left: 5 7 12)\n5 + 7 = 12 (left: 12 12)",
                "7 / 1 = 7 (left: 5 7 12)",
                "5 * 7 = 35 (left: 1 35 12)\n35 - 12 = 23 (left: 1 23)",
                "7 - 1 = 6 (left: 5 6 12)",
                "12 / 7 = 1.71 (left: 1.71 5 12)",
                "7 / 1 = 7 (left: 5 7 12)\n5 + 7 = 12 (left: 12 12)",
                "",
                "",
                "7 / 1 = 7 (left: 5 7 12)",
                "7 / 1 = 7 (left: 5 7 12)\n5 + 7 = 12 (left: 12 12)"
            ]
        },
        "step_3": {
            "steps": [
                "7 / 1 = 7 (left: 5 7 12)\n5 + 7 = 12 (left: 12 12)\n12 + 12 = 24 (left: 12 24)",
                "7 / 1 = 7 (left: 5 7 12)\n12 - 5 = 7 (left: 5 7)",
                "5 * 7 = 35 (left: 1 35 12)\n35 - 12 = 23 (left: 1 23)\n1 + 23 = 24 (left: 24)",
                "7 - 1 = 6 (left: 5 6 12)\n6 / 5 = 1.2 (left: 1.2 12)",
                "12 / 7 = 1.71 (left: 1.71 5 12)\n12 / 5 = 2.4 (left: 1.71 2.4)",
                "7 / 1 = 7 (left: 5 7 12)\n5 + 7 = 12 (left: 12 12)\n12 / 12 = 1 (left: 1 12)",
                "7 - 1 = 6 (left: 5 6 12)",
                "1 + 5 = 6 (left: 6 7 12)",
                "7 / 1 = 7 (left: 5 7 12)\n12 / 5 = 2.4 (left: 2.4 7)",
                "7 / 1 = 7 (left: 5 7 12)\n5 + 7 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)"
            ],
            "values": [
                20.002,
                0.002,
                60.0,
                1.002,
                2.0,
                0.003,
                3.0,
                2.001,
                2.001,
                60.0
            ],
            "resampled": [
                "0 <- 3.9",
                "1 <- 3.2",
                "2 <- 2.2",
                "3 <- 2.7",
                "4 <- 3.0",
                "5 <- 3.2",
                "6 <- 3.6",
                "7 <- 1.2",
                "8 <- 3.2",
                "9 <- 3.2"
            ],
            "resampled_steps": [
                "7 / 1 = 7 (left: 5 7 12)\n5 + 7 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "5 * 7 = 35 (left: 1 35 12)\n35 - 12 = 23 (left: 1 23)\n1 + 23 = 24 (left: 24)",
                "5 * 7 = 35 (left: 1 35 12)\n35 - 12 = 23 (left: 1 23)",
                "7 / 1 = 7 (left: 5 7 12)\n5 + 7 = 12 (left: 12 12)",
                "7 / 1 = 7 (left: 5 7 12)\n5 + 7 = 12 (left: 12 12)\n12 + 12 = 24 (left: 12 24)",
                "5 * 7 = 35 (left: 1 35 12)\n35 - 12 = 23 (left: 1 23)\n1 + 23 = 24 (left: 24)",
                "7 - 1 = 6 (left: 5 6 12)",
                "7 / 1 = 7 (left: 5 7 12)",
                "5 * 7 = 35 (left: 1 35 12)\n35 - 12 = 23 (left: 1 23)\n1 + 23 = 24 (left: 24)",
                "5 * 7 = 35 (left: 1 35 12)\n35 - 12 = 23 (left: 1 23)\n1 + 23 = 24 (left: 24)"
            ]
        },
        "step_4": {
            "steps": [
                "7 / 1 = 7 (left: 5 7 12)\n5 + 7 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (7 / 1) + (5 + 7) + 12 = 24",
                "5 * 7 = 35 (left: 1 35 12)\n35 - 12 = 23 (left: 1 23)\n1 + 23 = 24 (left: 24)\nAnswer: (5 * 7) - (12 - 1) = 24",
                "5 * 7 = 35 (left: 1 35 12)\n35 - 12 = 23 (left: 1 23)\n1 + 23 = 24 (left: 24)",
                "7 / 1 = 7 (left: 5 7 12)\n5 + 7 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "7 / 1 = 7 (left: 5 7 12)\n5 + 7 = 12 (left: 12 12)\n12 + 12 = 24 (left: 12 24)\n12 + 24 = 36 (left: 36)",
                "5 * 7 = 35 (left: 1 35 12)\n35 - 12 = 23 (left: 1 23)\n1 + 23 = 24 (left: 24)\nAnswer: (5 * 7) - (12 - 1) = 24",
                "7 - 1 = 6 (left: 5 6 12)\n5 + 6 = 11 (left: 11 12)",
                "7 / 1 = 7 (left: 5 7 12)\n12 - 5 = 7 (left: 7 7)",
                "5 * 7 = 35 (left: 1 35 12)\n35 - 12 = 23 (left: 1 23)\n1 + 23 = 24 (left: 24)\nAnswer: (5 * 7) - (12 - 1) = 24",
                "5 * 7 = 35 (left: 1 35 12)\n35 - 12 = 23 (left: 1 23)\n1 + 23 = 24 (left: 24)\nAnswer: (5 * 7) - (12 - 1) = 24"
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 1
            }
        ],
        "cost": 2.687592
    },
    "43": {
        "input": "10 10 12 12",
        "step_1": {
            "steps": [
                "12 - 10 = 2 (left: 10 2 12)",
                "12 + 10 = 22 (left: 10 22 12)",
                "12 - 10 = 2 (left: 2 12 12)",
                "12 - 10 = 2 (left: 10 12 2)",
                "10 * 10 = 100 (left: 12 12 100)",
                "12 / 10 = 1.2 (left: 10 1.2 12)",
                "10 * 10 = 100 (left: 12 100 12)",
                "10 + 10 = 20 (left: 12 20 12)",
                "10 - 10 = 0 (left: 0 12 12)",
                "10 * 10 = 100 (left: 12 12 100)"
            ],
            "values": [
                40.001,
                2.001,
                0.003,
                40.001,
                1.002,
                60.0,
                22.0,
                0.003,
                40.001,
                0.003
            ],
            "resampled": [
                "0 <- 1.8",
                "1 <- 1.5",
                "2 <- 1.5",
                "3 <- 1.6",
                "4 <- 1.8",
                "5 <- 1.5",
                "6 <- 1.5",
                "7 <- INIT",
                "8 <- 1.0",
                "9 <- 1.0"
            ],
            "resampled_steps": [
                "10 - 10 = 0 (left: 0 12 12)",
                "12 / 10 = 1.2 (left: 10 1.2 12)",
                "12 / 10 = 1.2 (left: 10 1.2 12)",
                "10 * 10 = 100 (left: 12 100 12)",
                "10 - 10 = 0 (left: 0 12 12)",
                "12 / 10 = 1.2 (left: 10 1.2 12)",
                "12 / 10 = 1.2 (left: 10 1.2 12)",
                "",
                "12 - 10 = 2 (left: 10 2 12)",
                "12 - 10 = 2 (left: 10 2 12)"
            ]
        },
        "step_2": {
            "steps": [
                "10 - 10 = 0 (left: 0 12 12)\n12 / 12 = 1 (left: 0 1)",
                "12 / 10 = 1.2 (left: 10 1.2 12)\n12 - 1.2 = 10.8 (left: 10.8 12)",
                "12 / 10 = 1.2 (left: 10 1.2 12)\n10 + 1.2 = 11.2 (left: 11.2 12)",
                "10 * 10 = 100 (left: 12 100 12)\n12 * 100 = 1200 (left: 1200 12)",
                "10 - 10 = 0 (left: 0 12 12)\n12 + 0 = 12 (left: 12 12)",
                "12 / 10 = 1.2 (left: 10 1.2 12)\n12 - 10 = 2 (left: 1.2 2 12)",
                "12 / 10 = 1.2 (left: 10 1.2 12)\n12 - 1.2 = 10.8 (left: 10.8 12)",
                "12 / 10 = 1.2 (left: 10 1.2 12)",
                "12 - 10 = 2 (left: 10 2 12)\n12 - 2 = 10 (left: 10 12)",
                "12 - 10 = 2 (left: 10 2 12)\n10 * 2 = 20 (left: 20 2 12)"
            ],
            "values": [
                40.001,
                1.002,
                0.002,
                41.0,
                60.0,
                3.0,
                1.001,
                41.0,
                1.002,
                1.001
            ],
            "resampled": [
                "0 <- 1.5",
                "1 <- 2.0",
                "2 <- 1.3",
                "3 <- 2.3",
                "4 <- 2.0",
                "5 <- 1.0",
                "6 <- 1.6",
                "7 <- 2.3",
                "8 <- 1.8",
                "9 <- 1.5"
            ],
            "resampled_steps": [
                "12 / 10 = 1.2 (left: 10 1.2 12)",
                "10 - 10 = 0 (left: 0 12 12)\n12 / 12 = 1 (left: 0 1)",
                "12 - 10 = 2 (left: 10 12 2)",
                "10 * 10 = 100 (left: 12 100 12)\n12 * 100 = 1200 (left: 1200 12)",
                "10 - 10 = 0 (left: 0 12 12)\n12 / 12 = 1 (left: 0 1)",
                "12 - 10 = 2 (left: 10 2 12)",
                "10 * 10 = 100 (left: 12 100 12)",
                "10 * 10 = 100 (left: 12 100 12)\n12 * 100 = 1200 (left: 1200 12)",
                "10 - 10 = 0 (left: 0 12 12)",
                "12 / 10 = 1.2 (left: 10 1.2 12)"
            ]
        },
        "step_3": {
            "steps": [
                "12 / 10 = 1.2 (left: 10 1.2 12)\n12 - 10 = 2 (left: 2 12)",
                "10 - 10 = 0 (left: 0 12 12)\n12 / 12 = 1 (left: 0 1)\n1 - 0 = 1 (left: 1)",
                "12 - 10 = 2 (left: 10 12 2)\n10 + 12 = 22 (left: 2 22)",
                "10 * 10 = 100 (left: 12 100 12)\n12 * 100 = 1200 (left: 1200 12)\n1200 * 12 = 14400 (left: 14400 12)",
                "10 - 10 = 0 (left: 0 12 12)\n12 / 12 = 1 (left: 0 1)\n1 - 0 = 1 (left: 1)",
                "12 - 10 = 2 (left: 10 2 12)\n12 + 2 = 14 (left: 10 14)",
                "10 * 10 = 100 (left: 12 100 12)\n12 / 100 = 0.12 (left: 0.12 12)",
                "10 * 10 = 100 (left: 12 100 12)\n12 * 100 = 1200 (left: 1200 12)\n1200 + 12 = 1212 (left: 1212)",
                "10 - 10 = 0 (left: 0 12 12)\n12 / 12 = 1 (left: 0 1)",
                "12 / 10 = 1.2 (left: 10 1.2 12)\n10 * 1.2 = 12 (left: 12 12)"
            ],
            "values": [
                60.0,
                0.001,
                40.001,
                40.0,
                0.003,
                60.0,
                0.003,
                0.002,
                20.001,
                2.001
            ],
            "resampled": [
                "0 <- 1.6",
                "1 <- 3.0",
                "2 <- 3.0",
                "3 <- 3.0",
                "4 <- 3.5",
                "5 <- 1.0",
                "6 <- 2.0",
                "7 <- INIT",
                "8 <- 3.3",
                "9 <- 3.5"
            ],
            "resampled_steps": [
                "10 * 10 = 100 (left: 12 100 12)",
                "12 / 10 = 1.2 (left: 10 1.2 12)\n12 - 10 = 2 (left: 2 12)",
                "12 / 10 = 1.2 (left: 10 1.2 12)\n12 - 10 = 2 (left: 2 12)",
                "12 / 10 = 1.2 (left: 10 1.2 12)\n12 - 10 = 2 (left: 2 12)",
                "12 - 10 = 2 (left: 10 2 12)\n12 + 2 = 14 (left: 10 14)",
                "12 - 10 = 2 (left: 10 2 12)",
                "10 - 10 = 0 (left: 0 12 12)\n12 / 12 = 1 (left: 0 1)",
                "",
                "10 * 10 = 100 (left: 12 100 12)\n12 * 100 = 1200 (left: 1200 12)\n1200 * 12 = 14400 (left: 14400 12)",
                "12 - 10 = 2 (left: 10 2 12)\n12 + 2 = 14 (left: 10 14)"
            ]
        },
        "step_4": {
            "steps": [
                "10 * 10 = 100 (left: 12 100 12)\n100 / 12 = 8.33 (left: 8.33 12)",
                "12 / 10 = 1.2 (left: 10 1.2 12)\n12 - 10 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6)",
                "12 / 10 = 1.2 (left: 10 1.2 12)\n12 - 10 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)",
                "12 / 10 = 1.2 (left: 10 1.2 12)\n12 - 10 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "12 - 10 = 2 (left: 10 2 12)\n12 + 2 = 14 (left: 10 14)\n14 - 10 = 4",
                "12 - 10 = 2 (left: 10 2 12)\n10 * 2 = 20 (left: 20 12)",
                "10 - 10 = 0 (left: 0 12 12)\n12 / 12 = 1 (left: 0 1)\n1 * 0 = 0 (left: 0)",
                "12 + 10 = 22 (left: 10 22 12)",
                "10 * 10 = 100 (left: 12 100 12)\n12 * 100 = 1200 (left: 1200 12)\n1200 * 12 = 14400 (left: 14400 12)\n14400 + 12 = 14412 (left: 12 14412)",
                "12 - 10 = 2 (left: 10 2 12)\n12 + 2 = 14 (left: 10 14)\n10 - 14 = -4 (left: -4)"
            ],
            "values": [
                2.001,
                0.001,
                0.003,
                40.0,
                0.003,
                0.003,
                0.002,
                0.003,
                41.0,
                0.002
            ],
            "resampled": [
                "0 <- 3.3",
                "1 <- 3.3",
                "2 <- 3.0",
                "3 <- 4.8",
                "4 <- 2.9",
                "5 <- 3.0",
                "6 <- 2.0",
                "7 <- 4.8",
                "8 <- INIT",
                "9 <- 3.0"
            ],
            "resampled_steps": [
                "10 * 10 = 100 (left: 12 100 12)\n12 * 100 = 1200 (left: 1200 12)\n1200 * 12 = 14400 (left: 14400 12)",
                "10 * 10 = 100 (left: 12 100 12)\n12 * 100 = 1200 (left: 1200 12)\n1200 * 12 = 14400 (left: 14400 12)",
                "12 / 10 = 1.2 (left: 10 1.2 12)\n12 - 10 = 2 (left: 2 12)",
                "10 * 10 = 100 (left: 12 100 12)\n12 * 100 = 1200 (left: 1200 12)\n1200 * 12 = 14400 (left: 14400 12)\n14400 + 12 = 14412 (left: 12 14412)",
                "12 - 10 = 2 (left: 10 2 12)\n10 * 2 = 20 (left: 20 2 12)",
                "12 / 10 = 1.2 (left: 10 1.2 12)\n12 - 10 = 2 (left: 2 12)",
                "10 - 10 = 0 (left: 0 12 12)\n12 / 12 = 1 (left: 0 1)",
                "10 * 10 = 100 (left: 12 100 12)\n12 * 100 = 1200 (left: 1200 12)\n1200 * 12 = 14400 (left: 14400 12)\n14400 + 12 = 14412 (left: 12 14412)",
                "",
                "12 / 10 = 1.2 (left: 10 1.2 12)\n12 - 10 = 2 (left: 2 12)"
            ]
        },
        "step_5": {
            "steps": [
                "10 * 10 = 100 (left: 12 100 12)\n12 * 100 = 1200 (left: 1200 12)\n1200 * 12 = 14400 (left: 14400 12)\n14400 / 12 = 1200 (left: 1200 12)",
                "10 * 10 = 100 (left: 12 100 12)\n12 * 100 = 1200 (left: 1200 12)\n1200 * 12 = 14400 (left: 14400 12)\n14400 * 12 = 172800 (left: 172800)",
                "12 / 10 = 1.2 (left: 10 1.2 12)\n12 - 10 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "10 * 10 = 100 (left: 12 100 12)\n12 * 100 = 1200 (left: 1200 12)\n1200 * 12 = 14400 (left: 14400 12)\n14400 + 12 = 14412 (left: 12 14412)\n12 + 14412 = 14424 (left: 14424)",
                "12 - 10 = 2 (left: 10 2 12)\n10 * 2 = 20 (left: 20 2 12)\n20 - 2 = 18 (left: 18 12)",
                "12 / 10 = 1.2 (left: 10 1.2 12)\n12 - 10 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)",
                "10 - 10 = 0 (left: 0 12 12)\n12 / 12 = 1 (left: 0 1)\nThere are no possible next steps for the input 0 1.",
                "10 * 10 = 100 (left: 12 100 12)\n12 * 100 = 1200 (left: 1200 12)\n1200 * 12 = 14400 (left: 14400 12)\n14400 + 12 = 14412 (left: 12 14412)\n12 - 12 = 0 (left: 0 12)",
                "12 - 10 = 2 (left: 10 2 12)",
                "12 / 10 = 1.2 (left: 10 1.2 12)\n12 - 10 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6)"
            ],
            "values": [
                60.0,
                0.002,
                40.0,
                0.003,
                0.003,
                0.003,
                0.003,
                20.001,
                0.003,
                0.002
            ],
            "resampled": [
                "0 <- 2.0",
                "1 <- 2.4",
                "2 <- 3.3",
                "3 <- 5.0",
                "4 <- 5.7",
                "5 <- 2.7",
                "6 <- 5.0",
                "7 <- 3.0",
                "8 <- 2.0",
                "9 <- 1.5"
            ],
            "resampled_steps": [
                "10 - 10 = 0 (left: 0 12 12)\n12 / 12 = 1 (left: 0 1)",
                "10 - 10 = 0 (left: 0 12 12)\n12 + 0 = 12 (left: 12 12)",
                "10 * 10 = 100 (left: 12 100 12)\n12 * 100 = 1200 (left: 1200 12)\n1200 * 12 = 14400 (left: 14400 12)",
                "10 * 10 = 100 (left: 12 100 12)\n12 * 100 = 1200 (left: 1200 12)\n1200 * 12 = 14400 (left: 14400 12)\n14400 / 12 = 1200 (left: 1200 12)",
                "10 * 10 = 100 (left: 12 100 12)\n12 * 100 = 1200 (left: 1200 12)\n1200 * 12 = 14400 (left: 14400 12)\n14400 + 12 = 14412 (left: 12 14412)\n12 - 12 = 0 (left: 0 12)",
                "12 / 10 = 1.2 (left: 10 1.2 12)",
                "10 * 10 = 100 (left: 12 100 12)\n12 * 100 = 1200 (left: 1200 12)\n1200 * 12 = 14400 (left: 14400 12)\n14400 / 12 = 1200 (left: 1200 12)",
                "12 / 10 = 1.2 (left: 10 1.2 12)\n12 - 10 = 2 (left: 2 12)",
                "10 - 10 = 0 (left: 0 12 12)\n12 / 12 = 1 (left: 0 1)",
                "12 / 10 = 1.2 (left: 10 1.2 12)"
            ]
        },
        "step_6": {
            "steps": [
                "10 - 10 = 0 (left: 0 12 12)\n12 / 12 = 1 (left: 0 1)\n0 - 1 = -1 (left: -1)",
                "10 - 10 = 0 (left: 0 12 12)\n12 + 0 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "10 * 10 = 100 (left: 12 100 12)\n12 * 100 = 1200 (left: 1200 12)\n1200 * 12 = 14400 (left: 14400 12)\n14400 / 12 = 1200 (left: 1200 12)",
                "10 * 10 = 100 (left: 12 100 12)\n12 * 100 = 1200 (left: 1200 12)\n1200 * 12 = 14400 (left: 14400 12)\n14400 / 12 = 1200 (left: 1200 12)\n1200 / 12 = 100 (left: 100 12)",
                "10 * 10 = 100 (left: 12 100 12)\n12 * 100 = 1200 (left: 1200 12)\n1200 * 12 = 14400 (left: 14400 12)\n14400 + 12 = 14412 (left: 12 14412)\n12 - 12 = 0 (left: 0 12)\nThere are no possible next steps for the input 0 12.",
                "12 / 10 = 1.2 (left: 10 1.2 12)\n12 - 10 = 2 (left: 2 1.2 12)",
                "10 * 10 = 100 (left: 12 100 12)\n12 * 100 = 1200 (left: 1200 12)\n1200 * 12 = 14400 (left: 14400 12)\n14400 / 12 = 1200 (left: 1200 12)\n1200 + 12 = 1212 (left: 1212)",
                "12 / 10 = 1.2 (left: 10 1.2 12)\n12 - 10 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "10 - 10 = 0 (left: 0 12 12)\n12 / 12 = 1 (left: 0 1)\n0 * 1 = 0 (left: 0)",
                "12 / 10 = 1.2 (left: 10 1.2 12)\n10 * 1.2 = 12 (left: 12 1.2 12)"
            ],
            "values": [
                0.0,
                20.0,
                21.0,
                2.001,
                0.003,
                1.002,
                0.002,
                60.0,
                0.0,
                0.003
            ],
            "resampled": [
                "0 <- 6.2",
                "1 <- 5.7",
                "2 <- 3.0",
                "3 <- 1.5",
                "4 <- 1.5",
                "5 <- 6.7",
                "6 <- 6.7",
                "7 <- 1.0",
                "8 <- 2.0",
                "9 <- 5.7"
            ],
            "resampled_steps": [
                "10 * 10 = 100 (left: 12 100 12)\n12 * 100 = 1200 (left: 1200 12)\n1200 * 12 = 14400 (left: 14400 12)\n14400 / 12 = 1200 (left: 1200 12)",
                "10 * 10 = 100 (left: 12 100 12)\n12 * 100 = 1200 (left: 1200 12)\n1200 * 12 = 14400 (left: 14400 12)\n14400 + 12 = 14412 (left: 12 14412)\n12 - 12 = 0 (left: 0 12)",
                "12 / 10 = 1.2 (left: 10 1.2 12)\n12 - 10 = 2 (left: 2 12)",
                "12 / 10 = 1.2 (left: 10 1.2 12)",
                "12 / 10 = 1.2 (left: 10 1.2 12)",
                "12 / 10 = 1.2 (left: 10 1.2 12)\n12 - 10 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "12 / 10 = 1.2 (left: 10 1.2 12)\n12 - 10 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "12 - 10 = 2 (left: 10 2 12)",
                "10 - 10 = 0 (left: 0 12 12)\n12 / 12 = 1 (left: 0 1)",
                "10 * 10 = 100 (left: 12 100 12)\n12 * 100 = 1200 (left: 1200 12)\n1200 * 12 = 14400 (left: 14400 12)\n14400 + 12 = 14412 (left: 12 14412)\n12 - 12 = 0 (left: 0 12)"
            ]
        },
        "step_7": {
            "steps": [
                "10 * 10 = 100 (left: 12 100 12)\n12 * 100 = 1200 (left: 1200 12)\n1200 * 12 = 14400 (left: 14400 12)\n14400 / 12 = 1200 (left: 1200 12)\n1200 / 12 = 100 (left: 100)",
                "10 * 10 = 100 (left: 12 100 12)\n12 * 100 = 1200 (left: 1200 12)\n1200 * 12 = 14400 (left: 14400 12)\n14400 + 12 = 14412 (left: 12 14412)\n12 - 12 = 0 (left: 0 12)\n12 - 0 = 12 (left: 12)",
                "12 / 10 = 1.2 (left: 10 1.2 12)\n12 - 10 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)",
                "12 / 10 = 1.2 (left: 10 1.2 12)\n12 - 10 = 2 (left: 2 1.2 12)",
                "12 / 10 = 1.2 (left: 10 1.2 12)\n10 - 1.2 = 8.8 (left: 8.8 12)",
                "12 / 10 = 1.2 (left: 10 1.2 12)\n12 - 10 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (12 / 10) * (12 - 10) * 12 = 24",
                "12 / 10 = 1.2 (left: 10 1.2 12)\n12 - 10 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (12 / 10) * (12 - 10) * 10 = 24",
                "12 - 10 = 2 (left: 10 2 12)\n2 / 10 = 0.2 (left: 0.2 12)",
                "10 - 10 = 0 (left: 0 12 12)\n12 / 12 = 1 (left: 0 1)\n1 / 0 = undefined (left: undefined)",
                "10 * 10 = 100 (left: 12 100 12)\n12 * 100 = 1200 (left: 1200 12)\n1200 * 12 = 14400 (left: 14400 12)\n14400 + 12 = 14412 (left: 12 14412)\n12 - 12 = 0 (left: 0 12)\n12 + 0 = 12 (left: 12)"
            ],
            "values": [
                0.001,
                0.001,
                0.002,
                1.002,
                2.001,
                60.0,
                60.0,
                22.0,
                0.0,
                20.0
            ],
            "resampled": [
                "0 <- 5.0",
                "1 <- 6.2",
                "2 <- 5.0",
                "3 <- 3.3",
                "4 <- 7.5",
                "5 <- 6.7",
                "6 <- 2.4",
                "7 <- 3.0",
                "8 <- 3.2",
                "9 <- 5.0"
            ],
            "resampled_steps": [
                "10 * 10 = 100 (left: 12 100 12)\n12 * 100 = 1200 (left: 1200 12)\n1200 * 12 = 14400 (left: 14400 12)\n14400 / 12 = 1200 (left: 1200 12)",
                "10 * 10 = 100 (left: 12 100 12)\n12 * 100 = 1200 (left: 1200 12)\n1200 * 12 = 14400 (left: 14400 12)\n14400 / 12 = 1200 (left: 1200 12)",
                "10 * 10 = 100 (left: 12 100 12)\n12 * 100 = 1200 (left: 1200 12)\n1200 * 12 = 14400 (left: 14400 12)\n14400 / 12 = 1200 (left: 1200 12)",
                "10 * 10 = 100 (left: 12 100 12)\n12 * 100 = 1200 (left: 1200 12)\n1200 * 12 = 14400 (left: 14400 12)",
                "12 / 10 = 1.2 (left: 10 1.2 12)\n12 - 10 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (12 / 10) * (12 - 10) * 12 = 24",
                "12 / 10 = 1.2 (left: 10 1.2 12)\n12 - 10 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "10 - 10 = 0 (left: 0 12 12)\n12 + 0 = 12 (left: 12 12)",
                "12 / 10 = 1.2 (left: 10 1.2 12)\n12 - 10 = 2 (left: 2 12)",
                "12 - 10 = 2 (left: 10 12 2)\n10 + 12 = 22 (left: 2 22)",
                "10 * 10 = 100 (left: 12 100 12)\n12 * 100 = 1200 (left: 1200 12)\n1200 * 12 = 14400 (left: 14400 12)\n14400 / 12 = 1200 (left: 1200 12)"
            ]
        },
        "step_8": {
            "steps": [
                "10 * 10 = 100 (left: 12 100 12)\n12 * 100 = 1200 (left: 1200 12)\n1200 * 12 = 14400 (left: 14400 12)\n14400 / 12 = 1200 (left: 1200 12)\n12 / 1200 = 0.01 (left: 0.01 12)",
                "10 * 10 = 100 (left: 12 100 12)\n12 * 100 = 1200 (left: 1200 12)\n1200 * 12 = 14400 (left: 14400 12)\n14400 / 12 = 1200 (left: 1200 12)\n1200 / 12 = 100 (left: 100 12)",
                "10 * 10 = 100 (left: 12 100 12)\n12 * 100 = 1200 (left: 1200 12)\n1200 * 12 = 14400 (left: 14400 12)\n14400 / 12 = 1200 (left: 1200 12)\n1200 * 12 = 14400 (left: 14400 12)",
                "10 * 10 = 100 (left: 12 100 12)\n12 * 100 = 1200 (left: 1200 12)\n1200 * 12 = 14400 (left: 14400 12)\n14400 - 12 = 14388 (left: 14388)",
                "12 / 10 = 1.2 (left: 10 1.2 12)\n12 - 10 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (12 / 10) * (12 - 10) * 12 = 24\n\nInput: 3 3 5 7\nSteps:\n5 - 3 = 2 (left: 3 2 7)\n7 - 3 = 4 (left: 2 4)\n4 * 3 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((5 - 3) * (7 - 3)) * 3 * 2 = 24",
                "12 / 10 = 1.2 (left: 10 1.2 12)\n12 - 10 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (10 / 10) * (12 - 12) = 24",
                "10 - 10 = 0 (left: 0 12 12)\n12 + 0 = 12 (left: 12 12)\n12 - 12 = 0 (left: 0)",
                "12 / 10 = 1.2 (left: 10 1.2 12)\n12 - 10 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)",
                "12 - 10 = 2 (left: 10 12 2)\n10 + 12 = 22 (left: 2 22)\n2 * 22 = 44 (left: 44)",
                "10 * 10 = 100 (left: 12 100 12)\n12 * 100 = 1200 (left: 1200 12)\n1200 * 12 = 14400 (left: 14400 12)\n14400 / 12 = 1200 (left: 1200 12)\n1200 * 12 = 14400 (left: 14400)"
            ],
            "values": [
                0.003,
                0.002,
                60.0,
                0.002,
                40.0,
                0.003,
                0.0,
                0.002,
                0.001,
                0.001
            ],
            "resampled": [
                "0 <- 6.2",
                "1 <- 2.4",
                "2 <- 8.2",
                "3 <- 8.2",
                "4 <- 7.5",
                "5 <- 7.5",
                "6 <- 7.6",
                "7 <- 8.4",
                "8 <- 2.0",
                "9 <- 3.0"
            ],
            "resampled_steps": [
                "10 * 10 = 100 (left: 12 100 12)\n12 * 100 = 1200 (left: 1200 12)\n1200 * 12 = 14400 (left: 14400 12)\n14400 / 12 = 1200 (left: 1200 12)",
                "10 - 10 = 0 (left: 0 12 12)\n12 + 0 = 12 (left: 12 12)",
                "10 * 10 = 100 (left: 12 100 12)\n12 * 100 = 1200 (left: 1200 12)\n1200 * 12 = 14400 (left: 14400 12)\n14400 / 12 = 1200 (left: 1200 12)\n1200 * 12 = 14400 (left: 14400 12)",
                "10 * 10 = 100 (left: 12 100 12)\n12 * 100 = 1200 (left: 1200 12)\n1200 * 12 = 14400 (left: 14400 12)\n14400 / 12 = 1200 (left: 1200 12)\n1200 * 12 = 14400 (left: 14400 12)",
                "12 / 10 = 1.2 (left: 10 1.2 12)\n12 - 10 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (12 / 10) * (12 - 10) * 12 = 24",
                "12 / 10 = 1.2 (left: 10 1.2 12)\n12 - 10 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (12 / 10) * (12 - 10) * 12 = 24",
                "12 / 10 = 1.2 (left: 10 1.2 12)\n12 - 10 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (12 / 10) * (12 - 10) * 10 = 24",
                "12 / 10 = 1.2 (left: 10 1.2 12)\n12 - 10 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (12 / 10) * (12 - 10) * 12 = 24\n\nInput: 3 3 5 7\nSteps:\n5 - 3 = 2 (left: 3 2 7)\n7 - 3 = 4 (left: 2 4)\n4 * 3 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((5 - 3) * (7 - 3)) * 3 * 2 = 24",
                "10 - 10 = 0 (left: 0 12 12)\n12 / 12 = 1 (left: 0 1)",
                "12 / 10 = 1.2 (left: 10 1.2 12)\n12 - 10 = 2 (left: 2 12)"
            ]
        },
        "step_9": {
            "steps": [
                "10 * 10 = 100 (left: 12 100 12)\n12 * 100 = 1200 (left: 1200 12)\n1200 * 12 = 14400 (left: 14400 12)\n14400 / 12 = 1200 (left: 1200 12)\n1200 * 12 = 14400 (left: 14400)",
                "10 - 10 = 0 (left: 0 12 12)\n12 + 0 = 12 (left: 12 12)\n12 / 12 = 1 (left: 1)",
                "10 * 10 = 100 (left: 12 100 12)\n12 * 100 = 1200 (left: 1200 12)\n1200 * 12 = 14400 (left: 14400 12)\n14400 / 12 = 1200 (left: 1200 12)\n1200 * 12 = 14400 (left: 14400 12)\n14400 * 12 = 172800 (left: 172800)",
                "10 * 10 = 100 (left: 12 100 12)\n12 * 100 = 1200 (left: 1200 12)\n1200 * 12 = 14400 (left: 14400 12)\n14400 / 12 = 1200 (left: 1200 12)\n1200 * 12 = 14400 (left: 14400 12)\n14400 / 12 = 1200 (left: 1200)",
                "12 / 10 = 1.2 (left: 10 1.2 12)\n12 - 10 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (12 / 10) * (12 - 10) * 12 = 24\nInput: 3 3 6 6\nSteps:\n6 - 3 = 3 (left: 3 6 3)\n6 * 3 = 18 (left: 18 3)\n18 - 3 = 15 (left: 15)\n15 + 6 = 21 (left: 21)\n21 + 3 = 24 (left: 24)\nAnswer: (((6 - 3) * 6) - 3) + 6 + 3 = 24",
                "12 / 10 = 1.2 (left: 10 1.2 12)\n12 - 10 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (12 / 10) * (12 - 10) * 12 = 24\nInput: 3 3 7 9\nSteps:\n3 * 3 = 9 (left: 7 9 9)\n7 - 9 = -2 (left: -2 9)\n-2 * 9 = -18 (left: -18)\nAnswer: (3 * 3) * (7 - 9) * 9 = 24",
                "12 / 10 = 1.2 (left: 10 1.2 12)\n12 - 10 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (12 / 10) * (12 - 10) * 10 = 24\nInput: 3 3 8 9\n\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n9 * 1 = 9 (left: 9)\nAnswer: (3 * 3) - 8 + 9 = 24",
                "12 / 10 = 1.2 (left: 10 1.2 12)\n12 - 10 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (12 / 10) * (12 - 10) * 12 = 24\n\nInput: 3 3 5 7\nSteps:\n5 - 3 = 2 (left: 3 2 7)\n7 - 3 = 4 (left: 2 4)\n4 * 3 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((5 - 3) * (7 - 3)) * 3 * 2 = 24\nInput: 2 3 4 6\nSteps:\n3 * 4 = 12 (left: 2 6 12)\n6 * 2 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (3 * 4) * (6 * 2) = 24",
                "10 - 10 = 0 (left: 0 12 12)\n12 / 12 = 1 (left: 0 1)\n0 + 1 = 1 (left: 1)",
                "12 / 10 = 1.2 (left: 10 1.2 12)\n12 - 10 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)"
            ],
            "values": [
                0.001,
                0.002,
                0.003,
                0.003,
                40.0,
                60.0,
                20.0,
                60.0,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 3.5",
                "1 <- 6.7",
                "2 <- 7.7",
                "3 <- 2.4",
                "4 <- 7.6",
                "5 <- 1.6",
                "6 <- 9.4",
                "7 <- 7.6",
                "8 <- 3.3",
                "9 <- 8.2"
            ],
            "resampled_steps": [
                "12 - 10 = 2 (left: 10 2 12)\n12 + 2 = 14 (left: 10 14)",
                "12 / 10 = 1.2 (left: 10 1.2 12)\n12 - 10 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "12 - 10 = 2 (left: 10 2 12)\n2 / 10 = 0.2 (left: 0.2 12)",
                "10 - 10 = 0 (left: 0 12 12)\n12 + 0 = 12 (left: 12 12)",
                "12 / 10 = 1.2 (left: 10 1.2 12)\n12 - 10 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (12 / 10) * (12 - 10) * 10 = 24",
                "10 * 10 = 100 (left: 12 100 12)",
                "12 / 10 = 1.2 (left: 10 1.2 12)\n12 - 10 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (12 / 10) * (12 - 10) * 12 = 24\nInput: 3 3 6 6\nSteps:\n6 - 3 = 3 (left: 3 6 3)\n6 * 3 = 18 (left: 18 3)\n18 - 3 = 15 (left: 15)\n15 + 6 = 21 (left: 21)\n21 + 3 = 24 (left: 24)\nAnswer: (((6 - 3) * 6) - 3) + 6 + 3 = 24",
                "12 / 10 = 1.2 (left: 10 1.2 12)\n12 - 10 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (12 / 10) * (12 - 10) * 10 = 24",
                "10 * 10 = 100 (left: 12 100 12)\n12 * 100 = 1200 (left: 1200 12)\n1200 * 12 = 14400 (left: 14400 12)",
                "10 * 10 = 100 (left: 12 100 12)\n12 * 100 = 1200 (left: 1200 12)\n1200 * 12 = 14400 (left: 14400 12)\n14400 / 12 = 1200 (left: 1200 12)\n1200 * 12 = 14400 (left: 14400 12)"
            ]
        },
        "step_10": {
            "steps": [
                "12 - 10 = 2 (left: 10 2 12)\n12 + 2 = 14 (left: 10 14)\n10 * 14 = 140 (left: 140)",
                "12 / 10 = 1.2 (left: 10 1.2 12)\n12 - 10 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (10 / 10) * (12 - 12) = 24",
                "12 - 10 = 2 (left: 10 2 12)\n2 / 10 = 0.2 (left: 0.2 12)\n0.2 + 12 = 12.2 (left: 12.2)",
                "10 - 10 = 0 (left: 0 12 12)\n12 + 0 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "12 / 10 = 1.2 (left: 10 1.2 12)\n12 - 10 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (12 / 10) * (12 - 10) * 10 = 24\nInput: 3 3 8 8\nSteps:\n3 + 8 = 11 (left: 3 11 8)\n11 - 3 = 8 (left: 8 8)\n8 * 8 = 64 (left: 64)\nAnswer: (3 + 8) * (11 - 3) = 24",
                "10 * 10 = 100 (left: 12 100 12)\n100 + 12 = 112 (left: 100 12 112)",
                "12 / 10 = 1.2 (left: 10 1.2 12)\n12 - 10 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (12 / 10) * (12 - 10) * 12 = 24\nInput: 3 3 6 6\nSteps:\n6 - 3 = 3 (left: 3 6 3)\n6 * 3 = 18 (left: 18 3)\n18 - 3 = 15 (left: 15)\n15 + 6 = 21 (left: 21)\n21 + 3 = 24 (left: 24)\nAnswer: (((6 - 3) * 6) - 3) + 6 + 3 = 24\nInput: 1 3 4 8\nSteps:\n4 * 8 = 32 (left: 1 3 32)\n32 / 3 = 10.6667 (left: 1 10.6667)\n10.6667 - 1 = 9.6667 (left: 9.6667)\n9.6667 * 3 = 29 (left: 29)\n29 - 8 = 21 (left: 21)\n21 - 1 = 20 (left: 20)\n20 + 4 = 24 (left: 24)\nAnswer: (((((4 * 8) / 3) - 1) * 3) - 8) - 1) + 4 = 24",
                "12 / 10 = 1.2 (left: 10 1.2 12)\n12 - 10 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (12 / 10) * (12 - 10) * 10 = 24\nInput: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n9 * 1 = 9 (left: 9)\nAnswer: (3 * 3) * (9 - 8) = 24",
                "10 * 10 = 100 (left: 12 100 12)\n12 * 100 = 1200 (left: 1200 12)\n1200 * 12 = 14400 (left: 14400 12)\n14400 + 12 = 14412 (left: 14412)",
                "10 * 10 = 100 (left: 12 100 12)\n12 * 100 = 1200 (left: 1200 12)\n1200 * 12 = 14400 (left: 14400 12)\n14400 / 12 = 1200 (left: 1200 12)\n1200 * 12 = 14400 (left: 14400 12)\n14400 + 12 = 14412 (left: 12 14412)"
            ],
            "values": [
                0.001,
                0.003,
                0.0,
                60.0,
                20.0,
                1.002,
                40.0,
                40.0,
                0.001,
                60.0
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 2.7667580000000003
    },
    "44": {
        "input": "1 8 8 8",
        "step_1": {
            "steps": [
                "8 - 1 = 7 (left: 7 8 8)",
                "8 - 1 = 7 (left: 7 8 8)",
                "8 / 1 = 8 (left: 8 7 8)",
                "1 + 8 = 9 (left: 8 8 9)",
                "8 * 1 = 8 (left: 8 8 8)",
                "8 * 1 = 8 (left: 8 8 8)",
                "8 - 1 = 7 (left: 7 8 8)",
                "1 * 8 = 8 (left: 8 8 8)",
                "8 / 1 = 8 (left: 8 8 8)",
                "8 / 1 = 8 (left: 8 8 8)"
            ],
            "values": [
                2.001,
                2.001,
                3.0,
                1.002,
                20.002,
                22.0,
                2.001,
                21.001,
                40.001,
                3.0
            ],
            "resampled": [
                "0 <- 1.8",
                "1 <- INIT",
                "2 <- 1.2",
                "3 <- 1.8",
                "4 <- INIT",
                "5 <- 1.5",
                "6 <- 1.5",
                "7 <- 1.5",
                "8 <- 1.8",
                "9 <- 1.7"
            ],
            "resampled_steps": [
                "8 / 1 = 8 (left: 8 8 8)",
                "",
                "8 / 1 = 8 (left: 8 7 8)",
                "8 / 1 = 8 (left: 8 8 8)",
                "",
                "8 * 1 = 8 (left: 8 8 8)",
                "8 * 1 = 8 (left: 8 8 8)",
                "8 * 1 = 8 (left: 8 8 8)",
                "8 / 1 = 8 (left: 8 8 8)",
                "1 * 8 = 8 (left: 8 8 8)"
            ]
        },
        "step_2": {
            "steps": [
                "8 / 1 = 8 (left: 8 8 8)\n8 - 8 = 0 (left: 0 8)",
                "8 * 1 = 8 (left: 8 8 8)",
                "8 / 1 = 8 (left: 8 7 8)\n7 * 8 = 56 (left: 56)",
                "8 / 1 = 8 (left: 8 8 8)\n8 * 8 = 64 (left: 8 64)",
                "1 + 8 = 9 (left: 8 8 9)",
                "8 * 1 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)",
                "8 * 1 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)",
                "8 * 1 = 8 (left: 8 8 8)\n8 * 8 = 64 (left: 64 8)",
                "8 / 1 = 8 (left: 8 8 8)\n8 * 8 = 64 (left: 8 64)",
                "1 * 8 = 8 (left: 8 8 8)\n8 / 8 = 1 (left: 1 8)"
            ],
            "values": [
                2.0,
                2.001,
                0.0,
                1.002,
                2.001,
                2.0,
                0.003,
                20.0,
                1.002,
                1.0
            ],
            "resampled": [
                "0 <- 1.4",
                "1 <- 2.7",
                "2 <- 1.5",
                "3 <- 1.4",
                "4 <- 2.0",
                "5 <- 1.8",
                "6 <- 1.8",
                "7 <- INIT",
                "8 <- INIT",
                "9 <- 1.7"
            ],
            "resampled_steps": [
                "8 * 1 = 8 (left: 8 8 8)",
                "8 * 1 = 8 (left: 8 8 8)\n8 * 8 = 64 (left: 64 8)",
                "8 * 1 = 8 (left: 8 8 8)",
                "8 * 1 = 8 (left: 8 8 8)",
                "8 / 1 = 8 (left: 8 8 8)\n8 - 8 = 0 (left: 0 8)",
                "8 / 1 = 8 (left: 8 8 8)",
                "8 / 1 = 8 (left: 8 8 8)",
                "",
                "",
                "1 * 8 = 8 (left: 8 8 8)"
            ]
        },
        "step_3": {
            "steps": [
                "8 * 1 = 8 (left: 8 8 8)\n8 * 8 = 64 (left: 64 8)",
                "8 * 1 = 8 (left: 8 8 8)\n8 * 8 = 64 (left: 64 8)\n64 * 8 = 512 (left: 8 512)",
                "8 * 1 = 8 (left: 8 8 8)\n8 - 8 = 0 (left: 0)",
                "8 * 1 = 8 (left: 8 8 8)\n8 - 8 = 0 (left: 0)",
                "8 / 1 = 8 (left: 8 8 8)\n8 - 8 = 0 (left: 0 8)\n0 + 8 = 8 (left: 8)",
                "8 / 1 = 8 (left: 8 8 8)\n8 / 8 = 1 (left: 1 8)",
                "8 / 1 = 8 (left: 8 8 8)\n8 - 8 = 0 (left: 0 8)",
                "1 + 8 = 9 (left: 8 8 9)",
                "8 / 1 = 8 (left: 8 8 8)",
                "1 * 8 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)"
            ],
            "values": [
                22.0,
                20.0,
                0.001,
                0.001,
                0.002,
                21.001,
                0.003,
                2.001,
                21.001,
                20.002
            ],
            "resampled": [
                "0 <- 3.9",
                "1 <- 1.8",
                "2 <- 2.7",
                "3 <- 1.4",
                "4 <- 3.0",
                "5 <- INIT",
                "6 <- 3.9",
                "7 <- 1.5",
                "8 <- 3.9",
                "9 <- 3.5"
            ],
            "resampled_steps": [
                "1 * 8 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)",
                "8 / 1 = 8 (left: 8 8 8)",
                "8 * 1 = 8 (left: 8 8 8)\n8 * 8 = 64 (left: 64 8)",
                "8 * 1 = 8 (left: 8 8 8)",
                "8 * 1 = 8 (left: 8 8 8)\n8 * 8 = 64 (left: 64 8)",
                "",
                "1 * 8 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)",
                "8 * 1 = 8 (left: 8 8 8)",
                "1 * 8 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)",
                "8 / 1 = 8 (left: 8 8 8)\n8 / 8 = 1 (left: 1 8)"
            ]
        },
        "step_4": {
            "steps": [
                "1 * 8 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)\n8 * 16 = 128 (left: 128)",
                "8 / 1 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)",
                "8 * 1 = 8 (left: 8 8 8)\n8 * 8 = 64 (left: 64 8)\n64 * 8 = 512 (left: 8 512)",
                "8 * 1 = 8 (left: 8 8 8)\n8 * 8 = 64 (left: 8 64)",
                "8 * 1 = 8 (left: 8 8 8)\n8 * 8 = 64 (left: 64 8)\n64 / 8 = 8 (left: 8 8)",
                "8 - 1 = 7 (left: 1 7 8)",
                "1 * 8 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)",
                "8 * 1 = 8 (left: 8 8 8)\n8 * 8 = 64 (left: 8 64)",
                "1 * 8 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)",
                "8 / 1 = 8 (left: 8 8 8)\n8 / 8 = 1 (left: 1 8)\n8 - 1 = 7 (left: 7)"
            ],
            "values": [
                0.002,
                2.001,
                0.003,
                0.003,
                0.003,
                1.002,
                60.0,
                0.003,
                40.0,
                0.002
            ],
            "resampled": [
                "0 <- 4.1",
                "1 <- 1.8",
                "2 <- 3.5",
                "3 <- 3.8",
                "4 <- 3.8",
                "5 <- 2.7",
                "6 <- 3.0",
                "7 <- 2.7",
                "8 <- 3.1",
                "9 <- 2.0"
            ],
            "resampled_steps": [
                "8 / 1 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)",
                "8 / 1 = 8 (left: 8 8 8)",
                "8 / 1 = 8 (left: 8 8 8)\n8 / 8 = 1 (left: 1 8)",
                "8 / 1 = 8 (left: 8 8 8)",
                "8 / 1 = 8 (left: 8 8 8)",
                "8 * 1 = 8 (left: 8 8 8)\n8 * 8 = 64 (left: 64 8)",
                "8 * 1 = 8 (left: 8 8 8)\n8 * 8 = 64 (left: 64 8)",
                "8 * 1 = 8 (left: 8 8 8)\n8 * 8 = 64 (left: 64 8)",
                "8 * 1 = 8 (left: 8 8 8)\n8 * 8 = 64 (left: 64 8)\n64 * 8 = 512 (left: 8 512)",
                "8 / 1 = 8 (left: 8 8 8)\n8 - 8 = 0 (left: 0 8)"
            ]
        },
        "step_5": {
            "steps": [
                "8 / 1 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)\n16 / 8 = 2 (left: 2)",
                "8 / 1 = 8 (left: 8 8 8)\n8 / 8 = 1 (left: 1 8)",
                "8 / 1 = 8 (left: 8 8 8)\n8 / 8 = 1 (left: 1 8)\n1 * 8 = 8 (left: 8)",
                "8 / 1 = 8 (left: 8 8 8)\n8 * 8 = 64 (left: 64 8)",
                "8 / 1 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)",
                "8 * 1 = 8 (left: 8 8 8)\n8 * 8 = 64 (left: 64 8)\n64 - 8 = 56 (left: 8 56)",
                "8 * 1 = 8 (left: 8 8 8)\n8 * 8 = 64 (left: 64 8)\n64 + 8 = 72 (left: 8 72)",
                "8 * 1 = 8 (left: 8 8 8)\n8 * 8 = 64 (left: 64 8)\n64 * 8 = 512 (left: 8 512)",
                "8 * 1 = 8 (left: 8 8 8)\n8 * 8 = 64 (left: 64 8)\n64 * 8 = 512 (left: 8 512)\n8 * 8 = 64 (left: 64 512)",
                "8 / 1 = 8 (left: 8 8 8)\n8 - 8 = 0 (left: 0 8)\n8 - 0 = 8 (left: 8)"
            ],
            "values": [
                0.002,
                40.0,
                0.002,
                40.0,
                20.002,
                0.001,
                0.003,
                0.003,
                1.002,
                0.002
            ],
            "resampled": [
                "0 <- 1.0",
                "1 <- 5.3",
                "2 <- 5.3",
                "3 <- 5.3",
                "4 <- 1.8",
                "5 <- 5.1",
                "6 <- 4.6",
                "7 <- 3.9",
                "8 <- 4.6",
                "9 <- 5.3"
            ],
            "resampled_steps": [
                "8 - 1 = 7 (left: 7 8 8)",
                "8 / 1 = 8 (left: 8 8 8)\n8 * 8 = 64 (left: 64 8)",
                "8 / 1 = 8 (left: 8 8 8)\n8 * 8 = 64 (left: 64 8)",
                "8 / 1 = 8 (left: 8 8 8)\n8 * 8 = 64 (left: 64 8)",
                "8 / 1 = 8 (left: 8 8 8)",
                "8 / 1 = 8 (left: 8 8 8)\n8 / 8 = 1 (left: 1 8)",
                "1 * 8 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)",
                "1 * 8 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)",
                "1 * 8 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)",
                "8 / 1 = 8 (left: 8 8 8)\n8 * 8 = 64 (left: 64 8)"
            ]
        },
        "step_6": {
            "steps": [
                "8 - 1 = 7 (left: 7 8 8)\n7 + 8 = 15 (left: 8 15)",
                "8 / 1 = 8 (left: 8 8 8)\n8 * 8 = 64 (left: 64 8)\n64 * 8 = 512 (left: 8 512)",
                "8 / 1 = 8 (left: 8 8 8)\n8 * 8 = 64 (left: 64 8)\n64 * 8 = 512 (left: 8 512)",
                "8 / 1 = 8 (left: 8 8 8)\n8 * 8 = 64 (left: 64 8)\n64 + 8 = 72 (left: 8 72)",
                "8 / 1 = 8 (left: 8 8 8)\n8 - 8 = 0 (left: 0 8)",
                "8 / 1 = 8 (left: 8 8 8)\n8 / 8 = 1 (left: 1 8)\n8 / 1 = 8 (left: 1 8)",
                "1 * 8 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)\nAnswer: (1 * 8) + (8 + 8) = 24",
                "1 * 8 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)\n16 - 8 = 8 (left: 8)",
                "1 * 8 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)\nAnswer: (1 * 8) + (8 + 8) = 24",
                "8 / 1 = 8 (left: 8 8 8)\n8 * 8 = 64 (left: 64 8)\n64 + 8 = 72 (left: 8 72)"
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            }
        ],
        "cost": 2.814591
    },
    "45": {
        "input": "2 2 3 8",
        "step_1": {
            "steps": [
                "3 * 2 = 6 (left: 6 2 8)",
                "3 * 2 = 6 (left: 6 2 8)",
                "2 * 2 = 4 (left: 4 3 8)",
                "8 - 2 = 6 (left: 2 3 6)",
                "2 * 2 = 4 (left: 4 3 8)",
                "3 * 2 = 6 (left: 6 2 8)",
                "2 * 2 = 4 (left: 4 3 8)",
                "3 + 1 = 4 (left: 2 4 8)",
                "8 / 2 = 4 (left: 2 3 4)",
                "3 + 2 = 5 (left: 5 2 8)"
            ],
            "values": [
                0.003,
                1.002,
                3.0,
                3.0,
                3.0,
                20.002,
                3.0,
                0.003,
                60.0,
                22.0
            ],
            "resampled": [
                "0 <- 1.8",
                "1 <- 1.9",
                "2 <- 1.4",
                "3 <- 1.8",
                "4 <- 1.5",
                "5 <- 1.9",
                "6 <- 1.8",
                "7 <- INIT",
                "8 <- INIT",
                "9 <- 1.3"
            ],
            "resampled_steps": [
                "8 / 2 = 4 (left: 2 3 4)",
                "3 + 2 = 5 (left: 5 2 8)",
                "2 * 2 = 4 (left: 4 3 8)",
                "8 / 2 = 4 (left: 2 3 4)",
                "3 * 2 = 6 (left: 6 2 8)",
                "3 + 2 = 5 (left: 5 2 8)",
                "8 / 2 = 4 (left: 2 3 4)",
                "",
                "",
                "8 - 2 = 6 (left: 2 3 6)"
            ]
        },
        "step_2": {
            "steps": [
                "8 / 2 = 4 (left: 2 3 4)\n4 - 3 = 1 (left: 1 4)",
                "3 + 2 = 5 (left: 5 2 8)\n8 + 2 = 10 (left: 5 10)",
                "2 * 2 = 4 (left: 4 3 8)\n3 + 8 = 11 (left: 4 11)",
                "8 / 2 = 4 (left: 2 3 4)\n2 + 3 = 5 (left: 4 5)",
                "3 * 2 = 6 (left: 6 2 8)\n6 * 2 = 12 (left: 12 8)",
                "3 + 2 = 5 (left: 5 2 8)\n8 / 2 = 4 (left: 5 4)",
                "8 / 2 = 4 (left: 2 3 4)\n2 + 3 = 5 (left: 4 5)",
                "2 + 2 = 4 (left: 3 4 8)",
                "8 - 3 = 5 (left: 2 2 5)",
                "8 - 2 = 6 (left: 2 3 6)\n2 + 3 = 5 (left: 5 6)"
            ],
            "values": [
                20.002,
                2.0,
                0.001,
                2.0,
                1.001,
                1.001,
                1.0,
                3.0,
                3.0,
                1.002
            ],
            "resampled": [
                "0 <- 2.1",
                "1 <- 1.9",
                "2 <- 1.9",
                "3 <- 2.0",
                "4 <- 1.9",
                "5 <- 1.8",
                "6 <- 2.0",
                "7 <- 1.8",
                "8 <- INIT",
                "9 <- 1.8"
            ],
            "resampled_steps": [
                "3 + 2 = 5 (left: 5 2 8)\n8 + 2 = 10 (left: 5 10)",
                "3 + 2 = 5 (left: 5 2 8)",
                "3 + 2 = 5 (left: 5 2 8)",
                "8 / 2 = 4 (left: 2 3 4)\n4 - 3 = 1 (left: 1 4)",
                "3 + 2 = 5 (left: 5 2 8)",
                "8 / 2 = 4 (left: 2 3 4)",
                "8 / 2 = 4 (left: 2 3 4)\n4 - 3 = 1 (left: 1 4)",
                "8 / 2 = 4 (left: 2 3 4)",
                "",
                "8 / 2 = 4 (left: 2 3 4)"
            ]
        },
        "step_3": {
            "steps": [
                "3 + 2 = 5 (left: 5 2 8)\n8 + 2 = 10 (left: 5 10)\n10 / 5 = 2 (left: 2)",
                "3 + 2 = 5 (left: 5 2 8)\n5 * 2 = 10 (left: 10 8)",
                "3 + 2 = 5 (left: 5 2 8)\n8 - 2 = 6 (left: 5 6)",
                "8 / 2 = 4 (left: 2 3 4)\n4 - 3 = 1 (left: 1 4)\n4 / 1 = 4 (left: 4)",
                "3 + 2 = 5 (left: 5 2 8)\n2 / 8 = 0.25 (left: 0.25 8)",
                "8 / 2 = 4 (left: 2 3 4)\n4 - 3 = 1 (left: 2 1)",
                "8 / 2 = 4 (left: 2 3 4)\n4 - 3 = 1 (left: 1 4)\n1 + 4 = 5 (left: 4 5)",
                "8 / 2 = 4 (left: 2 3 4)\n4 / 2 = 2 (left: 3 2)",
                "8 - 2 = 6 (left: 2 6 8)",
                "8 / 2 = 4 (left: 2 3 4)\n4 - 3 = 1 (left: 1 4)"
            ],
            "values": [
                0.002,
                0.002,
                1.001,
                0.0,
                1.002,
                0.002,
                21.0,
                2.0,
                1.002,
                60.0
            ],
            "resampled": [
                "0 <- 3.9",
                "1 <- 1.9",
                "2 <- INIT",
                "3 <- 1.8",
                "4 <- 2.0",
                "5 <- INIT",
                "6 <- 1.5",
                "7 <- 1.8",
                "8 <- 1.5",
                "9 <- 1.8"
            ],
            "resampled_steps": [
                "8 / 2 = 4 (left: 2 3 4)\n4 - 3 = 1 (left: 1 4)",
                "3 + 2 = 5 (left: 5 2 8)",
                "",
                "8 / 2 = 4 (left: 2 3 4)",
                "8 / 2 = 4 (left: 2 3 4)\n4 - 3 = 1 (left: 1 4)",
                "",
                "3 * 2 = 6 (left: 6 2 8)",
                "8 / 2 = 4 (left: 2 3 4)",
                "3 * 2 = 6 (left: 6 2 8)",
                "8 / 2 = 4 (left: 2 3 4)"
            ]
        },
        "step_4": {
            "steps": [
                "8 / 2 = 4 (left: 2 3 4)\n4 - 3 = 1 (left: 1 4)\n1 + 4 = 5 (left: 5)",
                "3 + 2 = 5 (left: 5 2 8)\n8 - 2 = 6 (left: 5 6)",
                "2 + 2 = 4 (left: 3 4 8)",
                "8 / 2 = 4 (left: 2 3 4)\n3 + 4 = 7 (left: 2 7)",
                "8 / 2 = 4 (left: 2 3 4)\n4 - 3 = 1 (left: 1 4)\n1 * 4 = 4 (left: 4)",
                "3 * 2 = 6 (left: 6 3 8)",
                "3 * 2 = 6 (left: 6 2 8)\n6 / 2 = 3 (left: 3 8)",
                "8 / 2 = 4 (left: 2 3 4)\n3 + 4 = 7 (left: 2 7)",
                "3 * 2 = 6 (left: 6 2 8)\n6 + 2 = 8 (left: 8 8)",
                "8 / 2 = 4 (left: 2 3 4)\n4 - 3 = 1 (left: 2 1)"
            ],
            "values": [
                0.003,
                0.003,
                2.001,
                1.002,
                0.003,
                2.001,
                60.0,
                0.002,
                1.002,
                1.002
            ],
            "resampled": [
                "0 <- 1.9",
                "1 <- 3.9",
                "2 <- 1.8",
                "3 <- 1.8",
                "4 <- 3.6",
                "5 <- 3.9",
                "6 <- 4.6",
                "7 <- 2.0",
                "8 <- 4.6",
                "9 <- 1.9"
            ],
            "resampled_steps": [
                "3 + 2 = 5 (left: 5 2 8)",
                "8 / 2 = 4 (left: 2 3 4)\n4 - 3 = 1 (left: 1 4)",
                "8 / 2 = 4 (left: 2 3 4)",
                "8 / 2 = 4 (left: 2 3 4)",
                "8 / 2 = 4 (left: 2 3 4)\n4 - 3 = 1 (left: 1 4)\n1 + 4 = 5 (left: 4 5)",
                "8 / 2 = 4 (left: 2 3 4)\n4 - 3 = 1 (left: 1 4)",
                "3 * 2 = 6 (left: 6 2 8)\n6 / 2 = 3 (left: 3 8)",
                "8 / 2 = 4 (left: 2 3 4)\n4 - 3 = 1 (left: 1 4)",
                "3 * 2 = 6 (left: 6 2 8)\n6 / 2 = 3 (left: 3 8)",
                "3 + 2 = 5 (left: 5 2 8)"
            ]
        },
        "step_5": {
            "steps": [
                "3 + 2 = 5 (left: 5 2 8)\n8 - 2 = 6 (left: 5 6)",
                "8 / 2 = 4 (left: 2 3 4)\n4 - 3 = 1 (left: 1 4)\n4 / 1 = 4 (left: 4 4)",
                "8 / 2 = 4 (left: 2 3 4)\n4 - 3 = 1 (left: 2 1)",
                "8 / 2 = 4 (left: 2 3 4)\n4 / 3 = 1.33 (left: 2 1.33)",
                "8 / 2 = 4 (left: 2 3 4)\n4 - 3 = 1 (left: 1 4)\n1 + 4 = 5 (left: 4 5)\n5 / 4 = 1.25 (left: 4 1.25)",
                "8 / 2 = 4 (left: 2 3 4)\n4 - 3 = 1 (left: 1 4)\n4 - 1 = 3 (left: 3)",
                "3 * 2 = 6 (left: 6 2 8)\n6 / 2 = 3 (left: 3 8)\n3 + 8 = 11 (left: 8 11)",
                "8 / 2 = 4 (left: 2 3 4)\n4 - 3 = 1 (left: 1 4)\n1 + 4 = 5 (left: 5)",
                "3 * 2 = 6 (left: 6 2 8)\n6 / 2 = 3 (left: 3 8)\n3 + 8 = 11 (left: 8 11)",
                "3 + 2 = 5 (left: 5 2 8)\n8 - 2 = 6 (left: 5 6)"
            ],
            "values": [
                1.001,
                1.002,
                0.002,
                3.0,
                2.0,
                0.002,
                1.002,
                0.002,
                0.001,
                2.001
            ],
            "resampled": [
                "0 <- 3.7",
                "1 <- 4.6",
                "2 <- 3.9",
                "3 <- 1.8",
                "4 <- 1.8",
                "5 <- 4.6",
                "6 <- 4.5",
                "7 <- 2.5",
                "8 <- 4.6",
                "9 <- 2.7"
            ],
            "resampled_steps": [
                "8 / 2 = 4 (left: 2 3 4)\n4 / 2 = 2 (left: 3 2)",
                "3 * 2 = 6 (left: 6 2 8)\n6 / 2 = 3 (left: 3 8)",
                "8 / 2 = 4 (left: 2 3 4)\n4 - 3 = 1 (left: 1 4)",
                "8 / 2 = 4 (left: 2 3 4)",
                "8 / 2 = 4 (left: 2 3 4)",
                "3 * 2 = 6 (left: 6 2 8)\n6 / 2 = 3 (left: 3 8)",
                "3 * 2 = 6 (left: 6 3 8)",
                "3 + 2 = 5 (left: 5 2 8)\n8 / 2 = 4 (left: 5 4)",
                "3 * 2 = 6 (left: 6 2 8)\n6 / 2 = 3 (left: 3 8)",
                "2 + 2 = 4 (left: 3 4 8)"
            ]
        },
        "step_6": {
            "steps": [
                "8 / 2 = 4 (left: 2 3 4)\n4 / 2 = 2 (left: 3 2)\n3 * 2 = 6 (left: 6)",
                "3 * 2 = 6 (left: 6 2 8)\n6 / 2 = 3 (left: 3 8)\n3 * 8 = 24 (left: 8 24)",
                "8 / 2 = 4 (left: 2 3 4)\n4 - 3 = 1 (left: 1 4)\n1 * 4 = 4 (left: 4)",
                "8 / 2 = 4 (left: 2 3 4)\n3 * 2 = 6 (left: 4 6)",
                "8 / 2 = 4 (left: 2 3 4)\n3 * 2 = 6 (left: 4 6)",
                "3 * 2 = 6 (left: 6 2 8)\n6 / 2 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5 8)",
                "3 * 2 = 6 (left: 6 3 8)\n3 - 8 = -5 (left: -5 8)",
                "3 + 2 = 5 (left: 5 2 8)\n8 / 2 = 4 (left: 5 4)\n5 / 4 = 1.25 (left: 1.25)",
                "3 * 2 = 6 (left: 6 2 8)\n6 / 2 = 3 (left: 3 8)\n8 + 3 = 11 (left: 11)",
                "2 + 2 = 4 (left: 3 4 8)\n3 + 4 = 7 (left: 7 8)"
            ],
            "values": [
                0.003,
                1.002,
                0.002,
                60.0,
                41.0,
                1.002,
                1.001,
                0.003,
                0.002,
                1.001
            ],
            "resampled": [
                "0 <- 6.3",
                "1 <- 6.3",
                "2 <- 4.6",
                "3 <- 3.6",
                "4 <- 6.4",
                "5 <- 6.3",
                "6 <- 1.8",
                "7 <- 1.5",
                "8 <- 6.3",
                "9 <- 3.9"
            ],
            "resampled_steps": [
                "8 / 2 = 4 (left: 2 3 4)\n3 * 2 = 6 (left: 4 6)",
                "8 / 2 = 4 (left: 2 3 4)\n3 * 2 = 6 (left: 4 6)",
                "3 * 2 = 6 (left: 6 2 8)\n6 / 2 = 3 (left: 3 8)",
                "8 / 2 = 4 (left: 2 3 4)\n4 - 3 = 1 (left: 1 4)\n1 + 4 = 5 (left: 4 5)",
                "8 / 2 = 4 (left: 2 3 4)\n3 * 2 = 6 (left: 4 6)",
                "8 / 2 = 4 (left: 2 3 4)\n3 * 2 = 6 (left: 4 6)",
                "8 / 2 = 4 (left: 2 3 4)",
                "3 * 2 = 6 (left: 6 2 8)",
                "8 / 2 = 4 (left: 2 3 4)\n3 * 2 = 6 (left: 4 6)",
                "8 / 2 = 4 (left: 2 3 4)\n4 - 3 = 1 (left: 1 4)"
            ]
        },
        "step_7": {
            "steps": [
                "8 / 2 = 4 (left: 2 3 4)\n3 * 2 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "8 / 2 = 4 (left: 2 3 4)\n3 * 2 = 6 (left: 4 6)\nPossible next steps:",
                "3 * 2 = 6 (left: 6 2 8)\n6 / 2 = 3 (left: 3 8)\n3 + 8 = 11 (left: 8 11)",
                "8 / 2 = 4 (left: 2 3 4)\n4 - 3 = 1 (left: 1 4)\n1 + 4 = 5 (left: 4 5)\n5 / 4 = 1.25 (left: 4 1.25)",
                "8 / 2 = 4 (left: 2 3 4)\n3 * 2 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "8 / 2 = 4 (left: 2 3 4)\n3 * 2 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)",
                "8 / 2 = 4 (left: 2 3 4)\n3 * 4 = 12 (left: 12 4)",
                "3 * 2 = 6 (left: 6 2 8)\n6 + 2 = 8 (left: 8 8)",
                "8 / 2 = 4 (left: 2 3 4)\n3 * 2 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "8 / 2 = 4 (left: 2 3 4)\n4 - 3 = 1 (left: 1 4)\n4 - 1 = 3 (left: 3)"
            ],
            "values": [
                0.0,
                0.003,
                0.003,
                2.001,
                20.0,
                0.002,
                20.002,
                0.003,
                60.0,
                0.001
            ],
            "resampled": [
                "0 <- 3.8",
                "1 <- 1.8",
                "2 <- 6.4",
                "3 <- 4.6",
                "4 <- 1.8",
                "5 <- 3.9",
                "6 <- 7.8",
                "7 <- 6.3",
                "8 <- 6.3",
                "9 <- 3.7"
            ],
            "resampled_steps": [
                "8 - 2 = 6 (left: 2 6 8)",
                "8 / 2 = 4 (left: 2 3 4)",
                "8 / 2 = 4 (left: 2 3 4)\n3 * 2 = 6 (left: 4 6)",
                "3 * 2 = 6 (left: 6 2 8)\n6 / 2 = 3 (left: 3 8)",
                "8 / 2 = 4 (left: 2 3 4)",
                "8 / 2 = 4 (left: 2 3 4)\n4 - 3 = 1 (left: 1 4)",
                "8 / 2 = 4 (left: 2 3 4)\n3 * 2 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "8 / 2 = 4 (left: 2 3 4)\n3 * 2 = 6 (left: 4 6)",
                "8 / 2 = 4 (left: 2 3 4)\n3 * 2 = 6 (left: 4 6)",
                "8 / 2 = 4 (left: 2 3 4)\n4 / 2 = 2 (left: 3 2)"
            ]
        },
        "step_8": {
            "steps": [
                "8 - 2 = 6 (left: 2 6 8)\n2 + 6 = 8 (left: 8 8)",
                "8 / 2 = 4 (left: 2 3 4)\n2 + 3 = 5 (left: 4 5)",
                "8 / 2 = 4 (left: 2 3 4)\n3 * 2 = 6 (left: 4 6)\n6 - 4 = 2 (left: 2)",
                "3 * 2 = 6 (left: 6 2 8)\n6 / 2 = 3 (left: 3 8)\n3 * 8 = 24 (left: 8 24)",
                "8 / 2 = 4 (left: 2 3 4)\n3 + 4 = 7 (left: 2 7)",
                "8 / 2 = 4 (left: 2 3 4)\n4 - 3 = 1 (left: 1 4)\n4 / 1 = 4 (left: 4)",
                "8 / 2 = 4 (left: 2 3 4)\n3 * 2 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (8 / 2) * (3 * 2) = 24",
                "8 / 2 = 4 (left: 2 3 4)\n3 * 2 = 6 (left: 4 6)\n6 / 4 = 1.5 (left: 1.5)",
                "8 / 2 = 4 (left: 2 3 4)\n3 * 2 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "8 / 2 = 4 (left: 2 3 4)\n4 / 2 = 2 (left: 3 2)\n3 * 2 = 6 (left: 6)"
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 2.878442
    },
    "46": {
        "input": "2 9 9 12",
        "step_1": {
            "steps": [
                "12 - 9 = 3 (left: 2 3 9)",
                "9 / 2 = 4.5 (left: 4.5 9 12)",
                "2 + 9 = 11 (left: 9 11 12)",
                "12 - 9 = 3 (left: 2 3 9)",
                "12 - 9 = 3 (left: 2 3 9)",
                "2 + 9 = 11 (left: 9 11 12)",
                "2 + 9 = 11 (left: 9 11 12)",
                "9 - 2 = 7 (left: 7 9 12)",
                "9 * 2 = 18 (left: 9 18 12)",
                "9 / 2 = 4.5 (left: 4.5 9 12)"
            ],
            "values": [
                1.0,
                3.0,
                2.001,
                1.001,
                0.002,
                3.0,
                20.002,
                3.0,
                2.001,
                3.0
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- 1.6",
                "3 <- 1.6",
                "4 <- INIT",
                "5 <- 1.1",
                "6 <- INIT",
                "7 <- 1.4",
                "8 <- INIT",
                "9 <- INIT"
            ],
            "resampled_steps": [
                "",
                "",
                "2 + 9 = 11 (left: 9 11 12)",
                "2 + 9 = 11 (left: 9 11 12)",
                "",
                "9 / 2 = 4.5 (left: 4.5 9 12)",
                "",
                "12 - 9 = 3 (left: 2 3 9)",
                "",
                ""
            ]
        },
        "step_2": {
            "steps": [
                "9 - 2 = 7 (left: 7 9 12)",
                "9 - 2 = 7 (left: 7 9 12)",
                "2 + 9 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)",
                "2 + 9 = 11 (left: 9 11 12)\n9 / 11 = 0.818 (left: 0.818 12)",
                "2 + 9 = 11 (left: 9 11 12)",
                "9 / 2 = 4.5 (left: 4.5 9 12)\n12 - 4.5 = 7.5 (left: 7.5 9 12)",
                "2 + 9 = 11 (left: 9 11 12)",
                "12 - 9 = 3 (left: 2 3 9)\n3 / 2 = 1.5 (left: 1.5 9)",
                "9 / 2 = 4.5 (left: 4.5 9 12)",
                "9 - 2 = 7 (left: 7 9 12)"
            ],
            "values": [
                2.001,
                3.0,
                60.0,
                1.002,
                2.001,
                2.001,
                1.002,
                2.001,
                3.0,
                2.001
            ],
            "resampled": [
                "0 <- 1.7",
                "1 <- INIT",
                "2 <- 1.6",
                "3 <- 1.6",
                "4 <- INIT",
                "5 <- 1.6",
                "6 <- 2.3",
                "7 <- 1.6",
                "8 <- INIT",
                "9 <- 1.6"
            ],
            "resampled_steps": [
                "9 - 2 = 7 (left: 7 9 12)",
                "",
                "2 + 9 = 11 (left: 9 11 12)",
                "2 + 9 = 11 (left: 9 11 12)",
                "",
                "2 + 9 = 11 (left: 9 11 12)",
                "2 + 9 = 11 (left: 9 11 12)\n9 / 11 = 0.818 (left: 0.818 12)",
                "2 + 9 = 11 (left: 9 11 12)",
                "",
                "2 + 9 = 11 (left: 9 11 12)"
            ]
        },
        "step_3": {
            "steps": [
                "9 - 2 = 7 (left: 7 9 12)\n9 + 12 = 21 (left: 7 21)",
                "9 - 2 = 7 (left: 7 9 12)",
                "2 + 9 = 11 (left: 9 11 12)\n11 + 12 = 23 (left: 9 23)",
                "2 + 9 = 11 (left: 9 11 12)\n12 / 9 = 1.33 (left: 1.33)",
                "12 - 9 = 3 (left: 2 3 9)",
                "2 + 9 = 11 (left: 9 11 12)\n11 + 12 = 23 (left: 9 23)",
                "2 + 9 = 11 (left: 9 11 12)\n9 / 11 = 0.818 (left: 0.818 12)\n12 / 0.818 = 14.66 (left: 14.66)",
                "2 + 9 = 11 (left: 9 11 12)\n12 - 11 = 1 (left: 9 1)",
                "9 * 2 = 18 (left: 9 18 12)",
                "2 + 9 = 11 (left: 9 11 12)\n12 / 9 = 1.333 (left: 1.333 11)"
            ],
            "values": [
                1.001,
                2.001,
                1.002,
                0.003,
                0.002,
                0.002,
                0.003,
                1.001,
                3.0,
                3.0
            ],
            "resampled": [
                "0 <- 1.7",
                "1 <- INIT",
                "2 <- 2.2",
                "3 <- INIT",
                "4 <- 2.2",
                "5 <- 2.2",
                "6 <- 2.2",
                "7 <- 2.2",
                "8 <- 2.2",
                "9 <- INIT"
            ],
            "resampled_steps": [
                "9 - 2 = 7 (left: 7 9 12)",
                "",
                "2 + 9 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)",
                "",
                "2 + 9 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)",
                "2 + 9 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)",
                "2 + 9 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)",
                "2 + 9 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)",
                "2 + 9 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)",
                ""
            ]
        },
        "step_4": {
            "steps": [
                "9 - 2 = 7 (left: 7 9 12)\n7 + 9 = 16 (left: 16 12)",
                "9 / 2 = 4.5 (left: 4.5 9 12)",
                "2 + 9 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "2 + 9 = 11 (left: 9 11 12)",
                "2 + 9 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)",
                "2 + 9 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)",
                "2 + 9 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)",
                "2 + 9 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6)",
                "2 + 9 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6)",
                "12 - 9 = 3 (left: 2 3 9)"
            ],
            "values": [
                1.001,
                3.0,
                40.0,
                21.001,
                0.002,
                0.001,
                0.003,
                0.002,
                0.003,
                0.002
            ],
            "resampled": [
                "0 <- 2.2",
                "1 <- 4.2",
                "2 <- 4.2",
                "3 <- 4.3",
                "4 <- 4.2",
                "5 <- 4.2",
                "6 <- 2.3",
                "7 <- 2.3",
                "8 <- 4.2",
                "9 <- INIT"
            ],
            "resampled_steps": [
                "2 + 9 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)",
                "2 + 9 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "2 + 9 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "2 + 9 = 11 (left: 9 11 12)",
                "2 + 9 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "2 + 9 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "2 + 9 = 11 (left: 9 11 12)\n9 / 11 = 0.818 (left: 0.818 12)",
                "2 + 9 = 11 (left: 9 11 12)\n9 / 11 = 0.818 (left: 0.818 12)",
                "2 + 9 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                ""
            ]
        },
        "step_5": {
            "steps": [
                "2 + 9 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6)",
                "2 + 9 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (2 + 9) * (9 - 12) = 24",
                "2 + 9 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (2 + 9) * (9 - 12) = 24",
                "2 + 9 = 11 (left: 9 11 12)\n9 + 11 = 20 (left: 20 12)",
                "2 + 9 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (2 + 9) * (9 - 12) = 24",
                "2 + 9 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (2 + 9) * (9 - 12) = 24",
                "2 + 9 = 11 (left: 9 11 12)\n9 / 11 = 0.818 (left: 0.818 12)\n12 / 0.818 = 14.66 (left: 14.66)",
                "2 + 9 = 11 (left: 9 11 12)\n9 / 11 = 0.818 (left: 0.818 12)\n12 / 0.818 = 14.652 (left: 14.652)",
                "2 + 9 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (2 + 9) + (9 - 12) * 24",
                "2 + 9 = 11 (left: 9 11 12)"
            ],
            "values": [
                0.002,
                20.002,
                60.0,
                20.002,
                20.002,
                60.0,
                0.0,
                0.003,
                0.003,
                21.001
            ],
            "resampled": [
                "0 <- 5.3",
                "1 <- 5.2",
                "2 <- 4.3",
                "3 <- 4.2",
                "4 <- 5.5",
                "5 <- 5.5",
                "6 <- 4.2",
                "7 <- 4.2",
                "8 <- 5.3",
                "9 <- 2.2"
            ],
            "resampled_steps": [
                "2 + 9 = 11 (left: 9 11 12)\n9 + 11 = 20 (left: 20 12)",
                "2 + 9 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (2 + 9) * (9 - 12) = 24",
                "2 + 9 = 11 (left: 9 11 12)",
                "2 + 9 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "2 + 9 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (2 + 9) * (9 - 12) = 24",
                "2 + 9 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (2 + 9) * (9 - 12) = 24",
                "2 + 9 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "2 + 9 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "2 + 9 = 11 (left: 9 11 12)\n9 + 11 = 20 (left: 20 12)",
                "2 + 9 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)"
            ]
        },
        "step_6": {
            "steps": [
                "2 + 9 = 11 (left: 9 11 12)\n9 + 11 = 20 (left: 20 12)\n20 + 12 = 32 (left: 32)",
                "2 + 9 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (2 + 9) * (9 - 12) = 24\nInput: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n1 * 9 = 9 (left: 9)\nAnswer: (3 * 3) - (8 - 9) = 24",
                "2 + 9 = 11 (left: 9 11 12)\n9 + 11 = 20 (left: 20 12)",
                "2 + 9 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (2 + 9) * (9 - 12) = 24",
                "2 + 9 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (2 + 9) * (9 - 12) = 24\n\nInput: 3 3 3 8\n3 * 3 = 9 (left: 3 8 9)\n9 - 3 = 6 (left: 6 8)\n6 * 8 = 48 (left: 48)\nAnswer: (3 * 3) * (3 - 8) = 24",
                "2 + 9 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (2 + 9) * (9 - 12) = 24\nInput: 3 3 6 6\nSteps:\n6 - 3 = 3 (left: 3 3 6)\n6 * 3 = 18 (left: 3 18)\n18 / 3 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\nAnswer: ((6 - 3) * 6) * 3 = 24",
                "2 + 9 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (2 + 9) * (9 - 12) = 24",
                "2 + 9 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (2 + 9) * (9 - 12) = 24",
                "2 + 9 = 11 (left: 9 11 12)\n9 + 11 = 20 (left: 20 12)\n20 - 12 = 8 (left: 8)",
                "2 + 9 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6)"
            ],
            "values": [
                0.002,
                20.0,
                0.003,
                40.001,
                40.0,
                40.0,
                40.001,
                40.001,
                0.001,
                0.003
            ],
            "resampled": [
                "0 <- 4.3",
                "1 <- INIT",
                "2 <- 6.6",
                "3 <- 2.2",
                "4 <- 5.2",
                "5 <- 6.7",
                "6 <- 5.9",
                "7 <- 6.1",
                "8 <- 6.6",
                "9 <- 6.3"
            ],
            "resampled_steps": [
                "2 + 9 = 11 (left: 9 11 12)",
                "",
                "2 + 9 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (2 + 9) * (9 - 12) = 24",
                "2 + 9 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)",
                "2 + 9 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (2 + 9) * (9 - 12) = 24",
                "2 + 9 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (2 + 9) * (9 - 12) = 24",
                "2 + 9 = 11 (left: 9 11 12)",
                "2 + 9 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (2 + 9) * (9 - 12) = 24\nInput: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n1 * 9 = 9 (left: 9)\nAnswer: (3 * 3) - (8 - 9) = 24",
                "2 + 9 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (2 + 9) * (9 - 12) = 24",
                "2 + 9 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (2 + 9) * (9 - 12) = 24"
            ]
        },
        "step_7": {
            "steps": [
                "2 + 9 = 11 (left: 9 11 12)\n11 + 12 = 23 (left: 9 23)",
                "2 + 9 = 11 (left: 9 11 12)",
                "2 + 9 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (2 + 9) * (9 - 12) = 24\nInput: 7 3 4 2\nSteps:\n7 - 3 = 4 (left: 4 2 4)\n4 * 2 = 8 (left: 8 4)\n8 * 4 = 32 (left: 32)\nAnswer: (7 - 3) * (4 * 2) = 24",
                "2 + 9 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)",
                "2 + 9 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (2 + 9) * (9 - 12) = 24\nInput: 3 3 8 9\nSteps:\n3 * 8 = 24 (left: 3 9 24)\n9 - 3 = 6 (left: 6 24)\n6 * 24 = 24 (left: 24)\nAnswer: (3 * 8) * (9 - 3) = 24",
                "2 + 9 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (2 + 9) * (9 - 12) = 24\nInput: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n9 * 1 = 9 (left: 9)\nAnswer: (3 * 3) * (8 - 9) = 24",
                "2 + 9 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)",
                "2 + 9 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (2 + 9) * (9 - 12) = 24\nInput: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n1 * 9 = 9 (left: 9)\nAnswer: (3 * 3) - (8 - 9) = 24\nInput: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n1 * 9 = 9 (left: 9)\nAnswer: (3 * 3) - (8 - 9) = 24",
                "2 + 9 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (2 + 9) * (9 - 12) = 24\nInput: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n9 * 1 = 9 (left: 9)\nAnswer: (3 * 3) - (8 - 9) = 24",
                "2 + 9 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (2 + 9) * (9 - 12) = 24\nInput: 3 3 4 4\nSteps:\n3 + 4 = 7 (left: 3 4 7)\n7 * 4 = 28 (left: 3 28)\n28 - 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 4 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = "
            ],
            "values": [
                0.003,
                3.0,
                40.0,
                0.002,
                40.0,
                20.0,
                60.0,
                20.0,
                20.0,
                40.0
            ],
            "resampled": [
                "0 <- 7.4",
                "1 <- 7.9",
                "2 <- 7.9",
                "3 <- 6.1",
                "4 <- 5.2",
                "5 <- 7.6",
                "6 <- 7.2",
                "7 <- 5.1",
                "8 <- 6.6",
                "9 <- 5.5"
            ],
            "resampled_steps": [
                "2 + 9 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (2 + 9) * (9 - 12) = 24\nInput: 3 3 8 9\nSteps:\n3 * 8 = 24 (left: 3 9 24)\n9 - 3 = 6 (left: 6 24)\n6 * 24 = 24 (left: 24)\nAnswer: (3 * 8) * (9 - 3) = 24",
                "2 + 9 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (2 + 9) * (9 - 12) = 24\nInput: 3 3 4 4\nSteps:\n3 + 4 = 7 (left: 3 4 7)\n7 * 4 = 28 (left: 3 28)\n28 - 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 4 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = ",
                "2 + 9 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (2 + 9) * (9 - 12) = 24\nInput: 3 3 4 4\nSteps:\n3 + 4 = 7 (left: 3 4 7)\n7 * 4 = 28 (left: 3 28)\n28 - 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 4 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = ",
                "2 + 9 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (2 + 9) * (9 - 12) = 24\nInput: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n1 * 9 = 9 (left: 9)\nAnswer: (3 * 3) - (8 - 9) = 24",
                "2 + 9 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (2 + 9) * (9 - 12) = 24",
                "2 + 9 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)",
                "2 + 9 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (2 + 9) * (9 - 12) = 24\nInput: 7 3 4 2\nSteps:\n7 - 3 = 4 (left: 4 2 4)\n4 * 2 = 8 (left: 8 4)\n8 * 4 = 32 (left: 32)\nAnswer: (7 - 3) * (4 * 2) = 24",
                "2 + 9 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (2 + 9) * (9 - 12) = 24",
                "2 + 9 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (2 + 9) * (9 - 12) = 24",
                "2 + 9 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (2 + 9) * (9 - 12) = 24"
            ]
        },
        "step_8": {
            "steps": [
                "2 + 9 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (2 + 9) * (9 - 12) = 24\nInput: 3 3 8 9\nSteps:\n3 * 8 = 24 (left: 3 9 24)\n9 - 3 = 6 (left: 6 24)\n6 * 24 = 24 (left: 24)\nAnswer: (3 * 8) * (9 - 3) = 24\nInput: 5 5 6 7\nSteps:\n5 * 5 = 25 (left: 6 7 25)\n7 - 6 = 1 (left: 1 25)\n25 - 1 = 24 (left: 24)\nAnswer: (5 * 5) - (7 - 6) = 24",
                "2 + 9 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (2 + 9) * (9 - 12) = 24\nInput: 3 3 4 4\nSteps:\n3 + 4 = 7 (left: 3 4 7)\n7 * 4 = 28 (left: 3 28)\n28 - 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 4 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = \n22 (left: 22)\nAnswer: There is no solution.",
                "2 + 9 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (2 + 9) * (9 - 12) = 24\nInput: 3 3 4 4\nSteps:\n3 + 4 = 7 (left: 3 4 7)\n7 * 4 = 28 (left: 3 28)\n28 - 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 4 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = \n22 (left: 22)\nAnswer: No solution",
                "2 + 9 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (2 + 9) * (9 - 12) = 24\nInput: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n1 * 9 = 9 (left: 9)\nAnswer: (3 * 3) - (8 - 9) = 24\nInput: 2 3 4 6\nSteps:\n3 * 4 = 12 (left: 2 6 12)\n6 * 2 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144)\nAnswer: (3 * 4) * (6 * 2) = 24",
                "2 + 9 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (2 + 9) * (9 - 12) = 24\nInput: 1 3 4 6\nSteps:\n3 * 4 = 12 (left: 1 6 12)\n6 - 1 = 5 (left: 5 12)\n5 * 12 = 60 (left: 60)\nAnswer: (3 * 4) * (6 - 1) = 24",
                "2 + 9 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)",
                "2 + 9 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (2 + 9) * (9 - 12) = 24\nInput: 7 3 4 2\nSteps:\n7 - 3 = 4 (left: 4 2 4)\n4 * 2 = 8 (left: 8 4)\n8 * 4 = 32 (left: 32)\nAnswer: (7 - 3) * (4 * 2) = 24\nInput: 3 3 8 5\nSteps:\n3 * 8 = 24 (left: 3 5 24)\n5 - 3 = 2 (left: 2 24)\n2 * 24 = 48 (left: 48)\nAnswer: (3 * 8) - (5 - 3) = 24",
                "2 + 9 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (2 + 9) * (9 - 12) = 24\nInput: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n9 * 1 = 9 (left: 9)\nAnswer: (3 * 3) * (8 - 9) = 24",
                "2 + 9 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (2 + 9) * (9 - 12) = 24\n\nInput: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6)\n6 - 3 = 3 (left: 3 3)\n3 * 3 = 9 (left: 9)\n9 * 24 = 24 (left: 24)\nAnswer: (3 * 8) * (6 - 3) = 24",
                "2 + 9 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (2 + 9) * (9 - 12) = 24\n\nInput: 3 3 4 8\nSteps:\n3 + 4 = 7 (left: 3 7 8)\n7 + 8 = 15 (left: 3 15)\n15 - 3 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((3 + 4) + 8) * 3 = 24"
            ],
            "values": [
                20.0,
                40.0,
                60.0,
                0.0,
                60.0,
                0.001,
                40.0,
                40.0,
                60.0,
                40.0
            ],
            "resampled": [
                "0 <- 8.1",
                "1 <- 7.9",
                "2 <- 8.1",
                "3 <- 8.8",
                "4 <- 2.2",
                "5 <- 2.2",
                "6 <- 6.7",
                "7 <- 8.6",
                "8 <- 8.2",
                "9 <- 8.7"
            ],
            "resampled_steps": [
                "2 + 9 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (2 + 9) * (9 - 12) = 24\nInput: 3 3 4 4\nSteps:\n3 + 4 = 7 (left: 3 4 7)\n7 * 4 = 28 (left: 3 28)\n28 - 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 4 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = \n22 (left: 22)\nAnswer: There is no solution.",
                "2 + 9 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (2 + 9) * (9 - 12) = 24\nInput: 3 3 4 4\nSteps:\n3 + 4 = 7 (left: 3 4 7)\n7 * 4 = 28 (left: 3 28)\n28 - 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 4 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = ",
                "2 + 9 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (2 + 9) * (9 - 12) = 24\nInput: 3 3 4 4\nSteps:\n3 + 4 = 7 (left: 3 4 7)\n7 * 4 = 28 (left: 3 28)\n28 - 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 4 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = \n22 (left: 22)\nAnswer: There is no solution.",
                "2 + 9 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (2 + 9) * (9 - 12) = 24\n\nInput: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6)\n6 - 3 = 3 (left: 3 3)\n3 * 3 = 9 (left: 9)\n9 * 24 = 24 (left: 24)\nAnswer: (3 * 8) * (6 - 3) = 24",
                "2 + 9 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)",
                "2 + 9 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)",
                "2 + 9 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (2 + 9) * (9 - 12) = 24",
                "2 + 9 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (2 + 9) * (9 - 12) = 24\nInput: 7 3 4 2\nSteps:\n7 - 3 = 4 (left: 4 2 4)\n4 * 2 = 8 (left: 8 4)\n8 * 4 = 32 (left: 32)\nAnswer: (7 - 3) * (4 * 2) = 24\nInput: 3 3 8 5\nSteps:\n3 * 8 = 24 (left: 3 5 24)\n5 - 3 = 2 (left: 2 24)\n2 * 24 = 48 (left: 48)\nAnswer: (3 * 8) - (5 - 3) = 24",
                "2 + 9 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (2 + 9) * (9 - 12) = 24\nInput: 3 3 4 4\nSteps:\n3 + 4 = 7 (left: 3 4 7)\n7 * 4 = 28 (left: 3 28)\n28 - 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 4 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = \n22 (left: 22)\nAnswer: No solution",
                "2 + 9 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (2 + 9) * (9 - 12) = 24\nInput: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n9 * 1 = 9 (left: 9)\nAnswer: (3 * 3) * (8 - 9) = 24"
            ]
        },
        "step_9": {
            "steps": [
                "2 + 9 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (2 + 9) * (9 - 12) = 24\nInput: 3 3 4 4\nSteps:\n3 + 4 = 7 (left: 3 4 7)\n7 * 4 = 28 (left: 3 28)\n28 - 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 4 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = \n22 (left: 22)\nAnswer: There is no solution.\n22 is the closest possible outcome, but it's not 24.",
                "2 + 9 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (2 + 9) * (9 - 12) = 24\nInput: 3 3 4 4\nSteps:\n3 + 4 = 7 (left: 3 4 7)\n7 * 4 = 28 (left: 3 28)\n28 - 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 4 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = \nIt seems that there is no way to obtain 24 using the numbers 3, 3, 4, and 4 with the given restrictions.",
                "2 + 9 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (2 + 9) * (9 - 12) = 24\nInput: 3 3 4 4\nSteps:\n3 + 4 = 7 (left: 3 4 7)\n7 * 4 = 28 (left: 3 28)\n28 - 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 4 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = \n22 (left: 22)\nAnswer: There is no solution.\nThere is no solution.",
                "2 + 9 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (2 + 9) * (9 - 12) = 24\n\nInput: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6)\n6 - 3 = 3 (left: 3 3)\n3 * 3 = 9 (left: 9)\n9 * 24 = 24 (left: 24)\nAnswer: (3 * 8) * (6 - 3) = 24\nInput: 4 5 6 7\nSteps:\n6 * 4 = 24 (left: 5 7 24)\n7 - 5 = 2 (left: 2 24)\n24 / 2 = 12 (left: 12)\n4 * 6 = 24 (left: 24)\nAnswer: (6 * 4) / (7 - 5) = 24",
                "2 + 9 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)",
                "2 + 9 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "2 + 9 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (2 + 9) * (9 - 12) = 24\nInput: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n9 * 1 = 9 (left: 9)\nAnswer: (3 * 3) * (8 - 9) = 24",
                "2 + 9 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (2 + 9) * (9 - 12) = 24\nInput: 7 3 4 2\nSteps:\n7 - 3 = 4 (left: 4 2 4)\n4 * 2 = 8 (left: 8 4)\n8 * 4 = 32 (left: 32)\nAnswer: (7 - 3) * (4 * 2) = 24\nInput: 3 3 8 5\nSteps:\n3 * 8 = 24 (left: 3 5 24)\n5 - 3 = 2 (left: 2 24)\n2 * 24 = 48 (left: 48)\nAnswer: (3 * 8) - (5 - 3) = 24\nInput: 5 6 3 4\nSteps:\n5 * 4 = 20 (left: 6 3 20)\n6 - 3 = 3 (left: 3 20)\n20 - 3 = 17 (left: 17)\nAnswer: (5 * 4) - (6 - 3) = 24",
                "2 + 9 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (2 + 9) * (9 - 12) = 24\nInput: 3 3 4 4\nSteps:\n3 + 4 = 7 (left: 3 4 7)\n7 * 4 = 28 (left: 3 28)\n28 - 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 4 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = \n22 (left: 22)\nAnswer: No solution\nThere is no way to obtain 24 using the numbers 3, 3, 4, and 4 with basic arithmetic operations.",
                "2 + 9 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (2 + 9) * (9 - 12) = 24\nInput: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n9 * 1 = 9 (left: 9)\nAnswer: (3 * 3) * (8 - 9) = 24\nInput: 7 3 5 2\nSteps:\n7 - 5 = 2 (left: 2 3 2)\n3 * 2 = 6 (left: 6 2)\n6 * 2 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((7 - 5) * 3) * 2 = 24"
            ],
            "values": [
                0.003,
                0.003,
                0.003,
                40.0,
                0.003,
                40.0,
                40.0,
                40.0,
                0.003,
                40.0
            ],
            "resampled": [
                "0 <- 5.5",
                "1 <- 8.2",
                "2 <- 6.3",
                "3 <- 5.2",
                "4 <- 2.2",
                "5 <- 7.2",
                "6 <- 8.6",
                "7 <- 6.3",
                "8 <- 2.2",
                "9 <- 8.4"
            ],
            "resampled_steps": [
                "2 + 9 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (2 + 9) * (9 - 12) = 24",
                "2 + 9 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (2 + 9) * (9 - 12) = 24\nInput: 3 3 4 4\nSteps:\n3 + 4 = 7 (left: 3 4 7)\n7 * 4 = 28 (left: 3 28)\n28 - 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 4 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = \n22 (left: 22)\nAnswer: No solution",
                "2 + 9 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (2 + 9) * (9 - 12) = 24",
                "2 + 9 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (2 + 9) * (9 - 12) = 24",
                "2 + 9 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)",
                "2 + 9 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (2 + 9) * (9 - 12) = 24\nInput: 7 3 4 2\nSteps:\n7 - 3 = 4 (left: 4 2 4)\n4 * 2 = 8 (left: 8 4)\n8 * 4 = 32 (left: 32)\nAnswer: (7 - 3) * (4 * 2) = 24",
                "2 + 9 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (2 + 9) * (9 - 12) = 24\nInput: 7 3 4 2\nSteps:\n7 - 3 = 4 (left: 4 2 4)\n4 * 2 = 8 (left: 8 4)\n8 * 4 = 32 (left: 32)\nAnswer: (7 - 3) * (4 * 2) = 24\nInput: 3 3 8 5\nSteps:\n3 * 8 = 24 (left: 3 5 24)\n5 - 3 = 2 (left: 2 24)\n2 * 24 = 48 (left: 48)\nAnswer: (3 * 8) - (5 - 3) = 24",
                "2 + 9 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (2 + 9) * (9 - 12) = 24",
                "2 + 9 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)",
                "2 + 9 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (2 + 9) * (9 - 12) = 24\nInput: 1 3 4 6\nSteps:\n3 * 4 = 12 (left: 1 6 12)\n6 - 1 = 5 (left: 5 12)\n5 * 12 = 60 (left: 60)\nAnswer: (3 * 4) * (6 - 1) = 24"
            ]
        },
        "step_10": {
            "steps": [
                "2 + 9 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (2 + 9) * (9 - 12) = 24\n\nAll the possible solutions using the given numbers and basic arithmetic operations have been provided.",
                "2 + 9 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (2 + 9) * (9 - 12) = 24\nInput: 3 3 4 4\nSteps:\n3 + 4 = 7 (left: 3 4 7)\n7 * 4 = 28 (left: 3 28)\n28 - 3 = 25 (left: 25)\n25 - 4 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 4 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 + 4 = 29 (left: 29)\n29 - 3 = 26 (left: 26)\n26 - 4 = \n22 (left: 22)\nAnswer: No solution\nThere is no possible way to obtain 24 using the numbers 3, 3, 4, and 4 with the given rules.",
                "2 + 9 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (2 + 9) * (9 - 12) = 24\nInput: 3 3 5 5\nSteps:\n3 + 5 = 8 (left: 3 5 8)\n8 - 3 = 5 (left: 5 5)\n5 * 5 = 25 (left: 25)\nAnswer: (3 + 5) * (3 + 5) = 24",
                "2 + 9 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (2 + 9) * (9 - 12) = 24\n\nInput: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n9 * 1 = 9 (left: 9)\nAnswer: (3 * 3) + (8 - 9) = 24",
                "2 + 9 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)",
                "2 + 9 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (2 + 9) * (9 - 12) = 24\nInput: 7 3 4 2\nSteps:\n7 - 3 = 4 (left: 4 2 4)\n4 * 2 = 8 (left: 8 4)\n8 * 4 = 32 (left: 32)\nAnswer: (7 - 3) * (4 * 2) = 24\nInput: 3 3 3 8\nSteps:\n3 * 3 = 9 (left: 8 9)\n9 - 8 = 1 (left: 1)\n1 * 24 = 24 (left: 24)\nAnswer: (3 * 3 - 8) * 24 = 24",
                "2 + 9 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (2 + 9) * (9 - 12) = 24\nInput: 7 3 4 2\nSteps:\n7 - 3 = 4 (left: 4 2 4)\n4 * 2 = 8 (left: 8 4)\n8 * 4 = 32 (left: 32)\nAnswer: (7 - 3) * (4 * 2) = 24\nInput: 3 3 8 5\nSteps:\n3 * 8 = 24 (left: 3 5 24)\n5 - 3 = 2 (left: 2 24)\n2 * 24 = 48 (left: 48)\nAnswer: (3 * 8) - (5 - 3) = 24\nInput: 1 3 5 8\nSteps:\n5 - 3 = 2 (left: 1 2 8)\n2 * 8 = 16 (left: 1 16)\n16 + 1 = 17 (left: 17)\n17 + 8 = 25 (left: 25)\n25 - 1 = 24 (left: 24)\nAnswer: ((5 - 3) * 8) + 1 - 8 = 24",
                "2 + 9 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (2 + 9) * (9 - 12) = 24\nInput: 3 3 8 8\nSteps:\n3 + 8 = 11 (left: 3 11 8)\n11 - 3 = 8 (left: 8 8)\n8 * 8 = 64 (left: 64)\nAnswer: (3 + 8) * (3 + 8) = 24",
                "2 + 9 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "2 + 9 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (2 + 9) * (9 - 12) = 24\nInput: 1 3 4 6\nSteps:\n3 * 4 = 12 (left: 1 6 12)\n6 - 1 = 5 (left: 5 12)\n5 * 12 = 60 (left: 60)\nAnswer: (3 * 4) * (6 - 1) = 24\nInput: 3 3 8 9\nSteps:\n3 * 8 = 24 (left: 3 9 24)\n9 - 3 = 6 (left: 6 24)\n6 * 24 = 144 (left: 144)\nAnswer: (3 * 8) * (9 - 3) = 24"
            ],
            "values": [
                0.003,
                0.003,
                60.0,
                40.0,
                0.001,
                60.0,
                20.0,
                40.0,
                40.0,
                40.0
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 2.976122
    },
    "47": {
        "input": "11 11 11 12",
        "step_1": {
            "steps": [
                "11 + 1 = 12 (left: 11 11 12)",
                "11 - 1 = 10 (left: 10 11 12)",
                "11 + 1 = 12 (left: 11 12 12)",
                "11 - 1 = 10 (left: 10 11 12)",
                "11 + 11 = 22 (left: 11 22 12)",
                "11 + 1 = 12 (left: 11 11 12)",
                "11 + 11 = 22 (left: 11 22 12)",
                "11 + 1 = 12 (left: 11 12 12)",
                "11 + 1 = 12 (left: 11 12 12)",
                "12 - 11 = 1 (left: 11 11 1)"
            ],
            "values": [
                0.003,
                2.001,
                0.003,
                0.003,
                1.002,
                0.003,
                20.002,
                1.002,
                0.003,
                2.001
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- 1.6",
                "2 <- 1.6",
                "3 <- INIT",
                "4 <- INIT",
                "5 <- INIT",
                "6 <- 1.6",
                "7 <- INIT",
                "8 <- 1.6",
                "9 <- INIT"
            ],
            "resampled_steps": [
                "",
                "11 + 11 = 22 (left: 11 22 12)",
                "11 + 11 = 22 (left: 11 22 12)",
                "",
                "",
                "",
                "11 + 11 = 22 (left: 11 22 12)",
                "",
                "11 + 11 = 22 (left: 11 22 12)",
                ""
            ]
        },
        "step_2": {
            "steps": [
                "12 - 11 = 1 (left: 11 11 1)",
                "11 + 11 = 22 (left: 11 22 12)\n11 * 2 = 22 (left: 22 12)",
                "11 + 11 = 22 (left: 11 22 12)\n11 * 2 = 22 (left: 22 12)",
                "11 + 11 = 22 (left: 11 22 12)",
                "11 + 11 = 22 (left: 11 22 12)",
                "12 - 11 = 1 (left: 11 11 1)",
                "11 + 11 = 22 (left: 11 22 12)\n22 / 11 = 2 (left: 2 12)",
                "11 / 11 = 1 (left: 1 11 12)",
                "11 + 11 = 22 (left: 11 22 12)\n11 * 2 = 22 (left: 22 12)",
                "11 + 1 = 12 (left: 11 12 12)"
            ],
            "values": [
                2.0,
                0.003,
                0.003,
                0.003,
                3.0,
                0.002,
                60.0,
                20.002,
                20.002,
                0.003
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- 2.6",
                "2 <- 2.6",
                "3 <- 1.6",
                "4 <- 2.6",
                "5 <- 2.7",
                "6 <- 2.6",
                "7 <- 2.8",
                "8 <- 2.8",
                "9 <- 2.6"
            ],
            "resampled_steps": [
                "",
                "11 + 11 = 22 (left: 11 22 12)\n22 / 11 = 2 (left: 2 12)",
                "11 + 11 = 22 (left: 11 22 12)\n22 / 11 = 2 (left: 2 12)",
                "11 + 11 = 22 (left: 11 22 12)",
                "11 + 11 = 22 (left: 11 22 12)\n22 / 11 = 2 (left: 2 12)",
                "11 / 11 = 1 (left: 1 11 12)",
                "11 + 11 = 22 (left: 11 22 12)\n22 / 11 = 2 (left: 2 12)",
                "11 + 11 = 22 (left: 11 22 12)\n11 * 2 = 22 (left: 22 12)",
                "11 + 11 = 22 (left: 11 22 12)\n11 * 2 = 22 (left: 22 12)",
                "11 + 11 = 22 (left: 11 22 12)\n22 / 11 = 2 (left: 2 12)"
            ]
        },
        "step_3": {
            "steps": [
                "11 + 1 = 12 (left: 11 12 12)",
                "11 + 11 = 22 (left: 11 22 12)\n22 / 11 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6)",
                "11 + 11 = 22 (left: 11 22 12)\n22 / 11 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6)",
                "11 + 11 = 22 (left: 11 22 12)\n11 * 22 = 242 (left: 242 12)",
                "11 + 11 = 22 (left: 11 22 12)\n22 / 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "11 / 11 = 1 (left: 1 11 12)\n12 + 1 = 13 (left: 11 13)",
                "11 + 11 = 22 (left: 11 22 12)\n22 / 11 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)",
                "11 + 11 = 22 (left: 11 22 12)\n11 * 2 = 22 (left: 22 12)\n22 * 12 = 264 (left: 264)",
                "11 + 11 = 22 (left: 11 22 12)\n11 * 2 = 22 (left: 22 12)\n22 / 12 = 1.83 (left: 1.83)",
                "11 + 11 = 22 (left: 11 22 12)\n22 / 11 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)"
            ],
            "values": [
                0.003,
                0.002,
                0.001,
                20.002,
                40.0,
                60.0,
                0.002,
                0.002,
                0.003,
                0.002
            ],
            "resampled": [
                "0 <- 3.3",
                "1 <- 1.6",
                "2 <- 3.5",
                "3 <- 1.6",
                "4 <- 2.6",
                "5 <- INIT",
                "6 <- 3.4",
                "7 <- 2.6",
                "8 <- 3.5",
                "9 <- 2.6"
            ],
            "resampled_steps": [
                "11 + 11 = 22 (left: 11 22 12)\n11 * 22 = 242 (left: 242 12)",
                "11 + 11 = 22 (left: 11 22 12)",
                "11 / 11 = 1 (left: 1 11 12)\n12 + 1 = 13 (left: 11 13)",
                "11 + 11 = 22 (left: 11 22 12)",
                "11 + 11 = 22 (left: 11 22 12)\n22 / 11 = 2 (left: 2 12)",
                "",
                "11 + 11 = 22 (left: 11 22 12)\n22 / 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "11 + 11 = 22 (left: 11 22 12)\n22 / 11 = 2 (left: 2 12)",
                "11 / 11 = 1 (left: 1 11 12)\n12 + 1 = 13 (left: 11 13)",
                "11 + 11 = 22 (left: 11 22 12)\n22 / 11 = 2 (left: 2 12)"
            ]
        },
        "step_4": {
            "steps": [
                "11 + 11 = 22 (left: 11 22 12)\n11 * 22 = 242 (left: 242 12)\n242 * 12 = 2904 (left: 12 2904)",
                "11 + 11 = 22 (left: 11 22 12)\n22 - 11 = 11 (left: 11 12)",
                "11 / 11 = 1 (left: 1 11 12)\n12 + 1 = 13 (left: 11 13)\n13 - 11 = 2 (left: 2)",
                "11 + 11 = 22 (left: 11 22 12)\n11 + 22 = 33 (left: 33 12)",
                "11 + 11 = 22 (left: 11 22 12)\n22 / 11 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)",
                "11 + 11 = 22 (left: 11 22 12)",
                "11 + 11 = 22 (left: 11 22 12)\n22 / 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (11 + 11) / (11/12) = 24",
                "11 + 11 = 22 (left: 11 22 12)\n22 / 11 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)",
                "11 / 11 = 1 (left: 1 11 12)\n12 + 1 = 13 (left: 11 13)\n11 + 13 = 24 (left: 24)",
                "11 + 11 = 22 (left: 11 22 12)\n22 / 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)"
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 3.0084660000000003
    },
    "48": {
        "input": "3 8 13 13",
        "step_1": {
            "steps": [
                "8 - 3 = 5 (left: 5 13 13)",
                "13 / 3 = 4.33 (left: 4.33 8 13)",
                "8 / 3 = 2.67 (left: 2.67 8 13)",
                "8 / 3 = 2.67 (left: 2.67 13 13)",
                "3 * 8 = 24 (left: 24 13 13)",
                "3 * 8 = 24 (left: 24 13 13)",
                "13 / 8 = 1.625 (left: 3 1.625 13)",
                "8 - 3 = 5 (left: 5 8 13)",
                "13 - 3 = 10 (left: 8 10 13)",
                "13 - 8 = 5 (left: 3 5 8)"
            ],
            "values": [
                3.0,
                3.0,
                3.0,
                3.0,
                20.002,
                60.0,
                3.0,
                3.0,
                2.001,
                2.001
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- 1.5",
                "2 <- 1.5",
                "3 <- 1.5",
                "4 <- 1.4",
                "5 <- 1.5",
                "6 <- 1.9",
                "7 <- 1.4",
                "8 <- 1.4",
                "9 <- 1.9"
            ],
            "resampled_steps": [
                "",
                "3 * 8 = 24 (left: 24 13 13)",
                "3 * 8 = 24 (left: 24 13 13)",
                "3 * 8 = 24 (left: 24 13 13)",
                "3 * 8 = 24 (left: 24 13 13)",
                "3 * 8 = 24 (left: 24 13 13)",
                "13 - 8 = 5 (left: 3 5 8)",
                "3 * 8 = 24 (left: 24 13 13)",
                "3 * 8 = 24 (left: 24 13 13)",
                "13 - 8 = 5 (left: 3 5 8)"
            ]
        },
        "step_2": {
            "steps": [
                "13 - 3 = 10 (left: 8 10 13)",
                "3 * 8 = 24 (left: 24 13 13)\n13 / 24 = 0.542 (left: 0.542 13)",
                "3 * 8 = 24 (left: 24 13 13)\n24 / 13 = 1.846 (left: 1.846 13)",
                "3 * 8 = 24 (left: 24 13 13)\n24 + 13 = 37 (left: 13 37)",
                "3 * 8 = 24 (left: 24 13 13)\n24 / 13 = 1.846 (left: 13 1.846)",
                "3 * 8 = 24 (left: 24 13 13)\n13 * 13 = 169 (left: 24 169)",
                "13 - 8 = 5 (left: 3 5 8)\n3 + 5 = 8 (left: 8 8)",
                "3 * 8 = 24 (left: 24 13 13)\n24 * 13 = 312 (left: 13 312)",
                "3 * 8 = 24 (left: 24 13 13)\n24 + 13 = 37 (left: 13 37)",
                "13 - 8 = 5 (left: 3 5 8)\n5 / 3 = 1.67 (left: 1.67 8)"
            ],
            "values": [
                3.0,
                0.002,
                41.0,
                0.003,
                1.0,
                2.001,
                1.002,
                0.003,
                21.001,
                1.002
            ],
            "resampled": [
                "0 <- 2.2",
                "1 <- 2.0",
                "2 <- 1.5",
                "3 <- 1.5",
                "4 <- 2.8",
                "5 <- 1.5",
                "6 <- INIT",
                "7 <- 1.5",
                "8 <- 1.5",
                "9 <- 2.2"
            ],
            "resampled_steps": [
                "3 * 8 = 24 (left: 24 13 13)\n24 / 13 = 1.846 (left: 1.846 13)",
                "13 - 3 = 10 (left: 8 10 13)",
                "3 * 8 = 24 (left: 24 13 13)",
                "3 * 8 = 24 (left: 24 13 13)",
                "3 * 8 = 24 (left: 24 13 13)\n24 + 13 = 37 (left: 13 37)",
                "3 * 8 = 24 (left: 24 13 13)",
                "",
                "3 * 8 = 24 (left: 24 13 13)",
                "3 * 8 = 24 (left: 24 13 13)",
                "3 * 8 = 24 (left: 24 13 13)\n24 / 13 = 1.846 (left: 1.846 13)"
            ]
        },
        "step_3": {
            "steps": [
                "3 * 8 = 24 (left: 24 13 13)\n24 / 13 = 1.846 (left: 1.846 13)\n13 - 1.846 = 11.154 (left: 11.154)",
                "13 - 3 = 10 (left: 8 10 13)\n8 - 10 = -2 (left: -2 13)",
                "3 * 8 = 24 (left: 24 13 13)\n13 * 13 = 169 (left: 24 169)",
                "3 * 8 = 24 (left: 24 13 13)\n24 - 13 = 11 (left: 11 13)",
                "3 * 8 = 24 (left: 24 13 13)\n24 + 13 = 37 (left: 13 37)\n37 / 13 = 2.846 (left: 2.846)",
                "3 * 8 = 24 (left: 24 13 13)\n13 * 2 = 26 (left: 26 13)",
                "3 * 8 = 24 (left: 24 13 13)",
                "3 * 8 = 24 (left: 24 13 13)\n13 - 24 = -11 (left: -11 13)",
                "3 * 8 = 24 (left: 24 13 13)\n24 / 13 = 1.846 (left: 1.846 13)",
                "3 * 8 = 24 (left: 24 13 13)\n24 / 13 = 1.846 (left: 1.846 13)\n13 - 1.846 = 11.154 (left: 11.154)"
            ],
            "values": [
                0.003,
                1.002,
                0.001,
                60.0,
                0.003,
                2.001,
                40.001,
                0.003,
                3.0,
                0.003
            ],
            "resampled": [
                "0 <- 2.8",
                "1 <- 3.3",
                "2 <- 1.4",
                "3 <- INIT",
                "4 <- 2.2",
                "5 <- 2.2",
                "6 <- 3.8",
                "7 <- 1.5",
                "8 <- 1.5",
                "9 <- 1.4"
            ],
            "resampled_steps": [
                "3 * 8 = 24 (left: 24 13 13)\n24 + 13 = 37 (left: 13 37)",
                "3 * 8 = 24 (left: 24 13 13)\n24 - 13 = 11 (left: 11 13)",
                "3 * 8 = 24 (left: 24 13 13)",
                "",
                "3 * 8 = 24 (left: 24 13 13)\n24 / 13 = 1.846 (left: 1.846 13)",
                "3 * 8 = 24 (left: 24 13 13)\n24 / 13 = 1.846 (left: 1.846 13)",
                "3 * 8 = 24 (left: 24 13 13)\n24 / 13 = 1.846 (left: 1.846 13)",
                "3 * 8 = 24 (left: 24 13 13)",
                "3 * 8 = 24 (left: 24 13 13)",
                "3 * 8 = 24 (left: 24 13 13)"
            ]
        },
        "step_4": {
            "steps": [
                "3 * 8 = 24 (left: 24 13 13)\n24 + 13 = 37 (left: 13 37)\n13 + 37 = 50 (left: 50)",
                "3 * 8 = 24 (left: 24 13 13)\n24 - 13 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)",
                "3 * 8 = 24 (left: 24 13 13)\n24 / 13 = 1.846 (left: 1.846 13)",
                "3 + 8 = 11 (left: 11 13 13)",
                "3 * 8 = 24 (left: 24 13 13)\n24 / 13 = 1.846 (left: 1.846 13)\n1.846 + 13 = 14.846 (left: 14.846)",
                "3 * 8 = 24 (left: 24 13 13)\n24 / 13 = 1.846 (left: 1.846 13)\n13 - 1.846 = 11.154 (left: 11.154)",
                "3 * 8 = 24 (left: 24 13 13)\n24 / 13 = 1.846 (left: 1.846 13)\n13 / 1.846 = 7.043 (left: 7.043)",
                "3 * 8 = 24 (left: 24 13 13)\n13 - 13 = 0 (left: 24 0)",
                "3 * 8 = 24 (left: 24 13 13)\n24 / 13 = 1.846 (left: 1.846 13)",
                "3 * 8 = 24 (left: 24 13 13)\n24 + 13 = 37 (left: 13 37)"
            ],
            "values": [
                0.003,
                40.0,
                2.001,
                0.003,
                0.003,
                0.003,
                0.002,
                60.0,
                21.001,
                20.001
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- 3.3",
                "2 <- 4.8",
                "3 <- 4.9",
                "4 <- 4.7",
                "5 <- 3.6",
                "6 <- 4.7",
                "7 <- 4.7",
                "8 <- 3.6",
                "9 <- 3.3"
            ],
            "resampled_steps": [
                "",
                "3 * 8 = 24 (left: 24 13 13)\n24 - 13 = 11 (left: 11 13)",
                "3 * 8 = 24 (left: 24 13 13)\n24 / 13 = 1.846 (left: 1.846 13)",
                "3 * 8 = 24 (left: 24 13 13)\n24 + 13 = 37 (left: 13 37)",
                "3 * 8 = 24 (left: 24 13 13)\n13 - 13 = 0 (left: 24 0)",
                "3 * 8 = 24 (left: 24 13 13)",
                "3 * 8 = 24 (left: 24 13 13)\n13 - 13 = 0 (left: 24 0)",
                "3 * 8 = 24 (left: 24 13 13)\n13 - 13 = 0 (left: 24 0)",
                "3 * 8 = 24 (left: 24 13 13)",
                "3 * 8 = 24 (left: 24 13 13)\n24 - 13 = 11 (left: 11 13)"
            ]
        },
        "step_5": {
            "steps": [
                "13 + 3 = 16 (left: 8 13 16)",
                "3 * 8 = 24 (left: 24 13 13)\n24 - 13 = 11 (left: 11 13)\n11 - 13 = -2 (left: -2)",
                "3 * 8 = 24 (left: 24 13 13)\n24 / 13 = 1.846 (left: 1.846 13)\n1.846 + 13 = 14.846 (left: 14.846)",
                "3 * 8 = 24 (left: 24 13 13)\n24 + 13 = 37 (left: 13 37)\n13 * 37 = 481 (left: 37 481)",
                "3 * 8 = 24 (left: 24 13 13)\n13 - 13 = 0 (left: 24 0)\n24 + 0 = 24 (left: 24)",
                "3 * 8 = 24 (left: 24 13 13)\n24 / 13 = 1.846 (left: 1.846 13)",
                "3 * 8 = 24 (left: 24 13 13)\n13 - 13 = 0 (left: 24 0)\n24 / 0 = undefined (division by zero is undefined)",
                "3 * 8 = 24 (left: 24 13 13)\n13 - 13 = 0 (left: 24 0)\n24 - 0 = 24 (left: 24)",
                "3 * 8 = 24 (left: 24 13 13)\n24 + 13 = 37 (left: 13 37)",
                "3 * 8 = 24 (left: 24 13 13)\n24 - 13 = 11 (left: 11 13)\n11 * 13 = 143 (left: 143)"
            ],
            "values": [
                2.001,
                0.002,
                0.001,
                0.003,
                0.0,
                2.0,
                0.003,
                40.0,
                21.001,
                0.003
            ],
            "resampled": [
                "0 <- 5.8",
                "1 <- 2.8",
                "2 <- 5.7",
                "3 <- 3.6",
                "4 <- 2.2",
                "5 <- 5.7",
                "6 <- 3.3",
                "7 <- 5.7",
                "8 <- 2.8",
                "9 <- 5.7"
            ],
            "resampled_steps": [
                "3 * 8 = 24 (left: 24 13 13)\n24 + 13 = 37 (left: 13 37)",
                "3 * 8 = 24 (left: 24 13 13)\n24 + 13 = 37 (left: 13 37)",
                "3 * 8 = 24 (left: 24 13 13)\n13 - 13 = 0 (left: 24 0)\n24 - 0 = 24 (left: 24)",
                "3 * 8 = 24 (left: 24 13 13)",
                "3 * 8 = 24 (left: 24 13 13)\n24 / 13 = 1.846 (left: 1.846 13)",
                "3 * 8 = 24 (left: 24 13 13)\n13 - 13 = 0 (left: 24 0)\n24 - 0 = 24 (left: 24)",
                "3 * 8 = 24 (left: 24 13 13)\n24 - 13 = 11 (left: 11 13)",
                "3 * 8 = 24 (left: 24 13 13)\n13 - 13 = 0 (left: 24 0)\n24 - 0 = 24 (left: 24)",
                "3 * 8 = 24 (left: 24 13 13)\n24 + 13 = 37 (left: 13 37)",
                "3 * 8 = 24 (left: 24 13 13)\n13 - 13 = 0 (left: 24 0)\n24 - 0 = 24 (left: 24)"
            ]
        },
        "step_6": {
            "steps": [
                "3 * 8 = 24 (left: 24 13 13)\n24 + 13 = 37 (left: 13 37)\n13 + 37 = 50 (left: 50)",
                "3 * 8 = 24 (left: 24 13 13)\n24 + 13 = 37 (left: 13 37)\n13 + 37 = 50 (left: 50)",
                "3 * 8 = 24 (left: 24 13 13)\n13 - 13 = 0 (left: 24 0)\n24 - 0 = 24 (left: 24)\nAnswer: (3 * 8) - (13 - 13) = 24",
                "3 * 8 = 24 (left: 24 13 13)\n24 / 13 = 1.846 (left: 1.846 13)",
                "3 * 8 = 24 (left: 24 13 13)\n24 / 13 = 1.846 (left: 1.846 13)\n1.846 + 13 = 14.846 (left: 13 14.846)",
                "3 * 8 = 24 (left: 24 13 13)\n13 - 13 = 0 (left: 24 0)\n24 - 0 = 24 (left: 24)\nAnswer: (3 * 8) - (13 - 13) = 24",
                "3 * 8 = 24 (left: 24 13 13)\n24 - 13 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)",
                "3 * 8 = 24 (left: 24 13 13)\n13 - 13 = 0 (left: 24 0)\n24 - 0 = 24 (left: 24)\nAnswer: (3 * 8) - (13 - 13) = 24",
                "3 * 8 = 24 (left: 24 13 13)\n24 + 13 = 37 (left: 13 37)\n13 * 37 = 481 (left: 481)",
                "3 * 8 = 24 (left: 24 13 13)\n13 - 13 = 0 (left: 24 0)\n24 - 0 = 24 (left: 24)\nAnswer: (3 * 8) - (13 - 13) = 24"
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 1
            }
        ],
        "cost": 3.0557670000000003
    },
    "49": {
        "input": "9 9 12 12",
        "step_1": {
            "steps": [
                "9 - 9 = 0 (left: 0 12 12)",
                "12 / 9 = 1.33 (left: 9 12 1.33)",
                "9 * 9 = 81 (left: 81 12 12)",
                "12 / 9 = 1.33 (left: 9 12 1.33)",
                "12 / 9 = 1.33 (left: 9 12 1.33) - Note: Division results in a non-integer number, so this may not be a valid next step depending on the rules of the game or puzzle.",
                "12 - 9 = 3 (left: 9 12 3)",
                "9 * 9 = 81 (left: 12 12 81)",
                "9 * 9 = 81 (left: 81 12 12)",
                "12 / 9 = 1.33 (left: 9 12 1.33)",
                "12 - 9 = 3 (left: 9 3 12)"
            ],
            "values": [
                20.002,
                2.001,
                1.002,
                3.0,
                3.0,
                22.0,
                2.001,
                2.001,
                3.0,
                3.0
            ],
            "resampled": [
                "0 <- 1.5",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- 1.0",
                "5 <- 1.0",
                "6 <- INIT",
                "7 <- INIT",
                "8 <- 1.9",
                "9 <- INIT"
            ],
            "resampled_steps": [
                "12 - 9 = 3 (left: 9 12 3)",
                "",
                "",
                "",
                "9 - 9 = 0 (left: 0 12 12)",
                "9 - 9 = 0 (left: 0 12 12)",
                "",
                "",
                "12 - 9 = 3 (left: 9 3 12)",
                ""
            ]
        },
        "step_2": {
            "steps": [
                "12 - 9 = 3 (left: 9 12 3)\n9 * 3 = 27 (left: 27 3)",
                "9 + 9 = 18 (left: 12 18 12)",
                "9 + 9 = 18 (left: 18 12 12)",
                "12 / 9 = 1.33 (left: 9 1.33 12)",
                "9 - 9 = 0 (left: 0 12 12)\n0 + 12 = 12 (left: 12 12)",
                "9 - 9 = 0 (left: 0 12 12)\n12 + 0 = 12 (left: 12 12)",
                "12 - 9 = 3 (left: 9 3 12)",
                "12 - 9 = 3 (left: 9 3 12)",
                "12 - 9 = 3 (left: 9 3 12)\n9 + 3 = 12 (left: 12 12)",
                "9 + 9 = 18 (left: 18 12 12)"
            ],
            "values": [
                41.0,
                1.002,
                1.002,
                2.001,
                60.0,
                20.002,
                2.001,
                3.0,
                60.0,
                2.001
            ],
            "resampled": [
                "0 <- 2.8",
                "1 <- 2.8",
                "2 <- 2.8",
                "3 <- 2.4",
                "4 <- 1.0",
                "5 <- 2.8",
                "6 <- 2.8",
                "7 <- 2.8",
                "8 <- 1.8",
                "9 <- 2.8"
            ],
            "resampled_steps": [
                "12 - 9 = 3 (left: 9 3 12)\n9 + 3 = 12 (left: 12 12)",
                "12 - 9 = 3 (left: 9 3 12)\n9 + 3 = 12 (left: 12 12)",
                "12 - 9 = 3 (left: 9 3 12)\n9 + 3 = 12 (left: 12 12)",
                "9 - 9 = 0 (left: 0 12 12)\n0 + 12 = 12 (left: 12 12)",
                "9 - 9 = 0 (left: 0 12 12)",
                "12 - 9 = 3 (left: 9 3 12)\n9 + 3 = 12 (left: 12 12)",
                "12 - 9 = 3 (left: 9 3 12)\n9 + 3 = 12 (left: 12 12)",
                "12 - 9 = 3 (left: 9 3 12)\n9 + 3 = 12 (left: 12 12)",
                "12 / 9 = 1.33 (left: 9 12 1.33)",
                "12 - 9 = 3 (left: 9 3 12)\n9 + 3 = 12 (left: 12 12)"
            ]
        },
        "step_3": {
            "steps": [
                "12 - 9 = 3 (left: 9 3 12)\n9 + 3 = 12 (left: 12 12)\n12 / 12 = 1 (left: 1)",
                "12 - 9 = 3 (left: 9 3 12)\n9 + 3 = 12 (left: 12 12)\n12 - 12 = 0 (left: 0)",
                "12 - 9 = 3 (left: 9 3 12)\n9 + 3 = 12 (left: 12 12)\n12 / 12 = 1 (left: 1)",
                "9 - 9 = 0 (left: 0 12 12)\n0 + 12 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144)",
                "9 - 9 = 0 (left: 0 12 12)\n12 + 0 = 12 (left: 12 12)",
                "12 - 9 = 3 (left: 9 3 12)\n9 + 3 = 12 (left: 12 12)\n12 - 12 = 0 (left: 0)",
                "12 - 9 = 3 (left: 9 3 12)\n9 + 3 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144)",
                "12 - 9 = 3 (left: 9 3 12)\n9 + 3 = 12 (left: 12 12)\n12 / 12 = 1 (left: 1)",
                "12 / 9 = 1.33 (left: 9 12 1.33)\n12 - 9 = 3 (left: 3 1.33)",
                "12 - 9 = 3 (left: 9 3 12)\n9 + 3 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144)"
            ],
            "values": [
                0.002,
                0.001,
                0.001,
                0.003,
                60.0,
                0.002,
                0.003,
                0.003,
                2.001,
                0.002
            ],
            "resampled": [
                "0 <- 3.4",
                "1 <- 2.8",
                "2 <- 2.8",
                "3 <- 2.4",
                "4 <- 1.5",
                "5 <- 1.0",
                "6 <- 2.8",
                "7 <- 2.4",
                "8 <- 2.0",
                "9 <- 2.5"
            ],
            "resampled_steps": [
                "9 - 9 = 0 (left: 0 12 12)\n12 + 0 = 12 (left: 12 12)",
                "12 - 9 = 3 (left: 9 3 12)\n9 + 3 = 12 (left: 12 12)",
                "12 - 9 = 3 (left: 9 3 12)\n9 + 3 = 12 (left: 12 12)",
                "9 - 9 = 0 (left: 0 12 12)\n0 + 12 = 12 (left: 12 12)",
                "12 - 9 = 3 (left: 9 12 3)",
                "9 - 9 = 0 (left: 0 12 12)",
                "12 - 9 = 3 (left: 9 3 12)\n9 + 3 = 12 (left: 12 12)",
                "9 - 9 = 0 (left: 0 12 12)\n0 + 12 = 12 (left: 12 12)",
                "12 - 9 = 3 (left: 9 12 3)\n9 * 3 = 27 (left: 27 3)",
                "9 - 9 = 0 (left: 0 12 12)\n12 + 0 = 12 (left: 12 12)"
            ]
        },
        "step_4": {
            "steps": [
                "9 - 9 = 0 (left: 0 12 12)\n12 + 0 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144)",
                "12 - 9 = 3 (left: 9 3 12)\n9 + 3 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "12 - 9 = 3 (left: 9 3 12)\n9 + 3 = 12 (left: 12 12)\n12 - 12 = 0 (left: 0)",
                "9 - 9 = 0 (left: 0 12 12)\n0 + 12 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144)",
                "12 - 9 = 3 (left: 9 12 3)\n9 - 3 = 6 (left: 6 3)",
                "9 - 9 = 0 (left: 0 12 12)\n12 / 0 = undefined",
                "12 - 9 = 3 (left: 9 3 12)\n9 + 3 = 12 (left: 12 12)\n12 / 12 = 1 (left: 1)",
                "9 - 9 = 0 (left: 0 12 12)\n0 + 12 = 12 (left: 12 12)\n12 / 12 = 1 (left: 1)",
                "12 - 9 = 3 (left: 9 12 3)\n9 * 3 = 27 (left: 27 3)\n27 - 3 = 24 (left: 24)",
                "9 - 9 = 0 (left: 0 12 12)\n12 + 0 = 12 (left: 12 12)\n12 / 12 = 1 (left: 1)"
            ],
            "values": [
                0.003,
                40.0,
                0.001,
                0.003,
                0.001,
                0.003,
                0.003,
                0.003,
                0.0,
                0.002
            ],
            "resampled": [
                "0 <- 4.1",
                "1 <- 4.1",
                "2 <- 1.0",
                "3 <- 1.5",
                "4 <- 2.0",
                "5 <- 2.4",
                "6 <- 2.8",
                "7 <- 2.8",
                "8 <- 2.4",
                "9 <- INIT"
            ],
            "resampled_steps": [
                "12 - 9 = 3 (left: 9 3 12)\n9 + 3 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "12 - 9 = 3 (left: 9 3 12)\n9 + 3 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "9 - 9 = 0 (left: 0 12 12)",
                "12 - 9 = 3 (left: 9 12 3)",
                "12 - 9 = 3 (left: 9 12 3)\n9 * 3 = 27 (left: 27 3)",
                "9 - 9 = 0 (left: 0 12 12)\n0 + 12 = 12 (left: 12 12)",
                "12 - 9 = 3 (left: 9 3 12)\n9 + 3 = 12 (left: 12 12)",
                "12 - 9 = 3 (left: 9 3 12)\n9 + 3 = 12 (left: 12 12)",
                "9 - 9 = 0 (left: 0 12 12)\n0 + 12 = 12 (left: 12 12)",
                ""
            ]
        },
        "step_5": {
            "steps": [
                "12 - 9 = 3 (left: 9 3 12)\n9 + 3 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: ((9 - 12) + 9 + 12) = 24",
                "12 - 9 = 3 (left: 9 3 12)\n9 + 3 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (9 - 9 + 12) + 12 = 24",
                "9 - 9 = 0 (left: 0 12 12)\n12 / 0 = undefined",
                "12 - 9 = 3 (left: 9 12 3)\n9 - 3 = 6 (left: 6 12)",
                "12 - 9 = 3 (left: 9 12 3)\n9 * 3 = 27 (left: 27 3)\n27 + 3 = 30 (left: 30)",
                "9 - 9 = 0 (left: 0 12 12)\n0 + 12 = 12 (left: 12 12)\n12 / 12 = 1 (left: 1)",
                "12 - 9 = 3 (left: 9 3 12)\n9 + 3 = 12 (left: 12 12)\n12 * 12 = 144 (left: 12 144)",
                "12 - 9 = 3 (left: 9 3 12)\n9 + 3 = 12 (left: 12 12)\n12 / 12 = 1 (left: 1)",
                "9 - 9 = 0 (left: 0 12 12)\n0 + 12 = 12 (left: 12 12)\n12 / 12 = 1 (left: 1)",
                "9 * 9 = 81 (left: 81 12 12)"
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 3.092521
    }
}