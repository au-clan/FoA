{
    "900": {
        "puzzle": "4 5 6 10",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 5 = 5 (left: 4 6 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 - 4 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 - 4 = 2 (left: 2) -> No possible next steps with only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 + 6 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 + 10 = 20",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "8 1.25"
                }
            },
            "Step 5": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 / 8 = 1.25 (left: 8 1.25) -> 8 - 1.25 = 6.75 (left: 6.75)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "8 1.25"
                }
            },
            "Step 6": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 / 8 = 1.25 (left: 8 1.25) -> 8 + 1.25 = 9.25",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 10 = 16 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 + 6 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 / 8 = 1.25 (left: 8 1.25)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 5 10"
                }
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 4 5 10) -> 10 - 4 = 6 (left: 6 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 5 = 5 (left: 4 5 10) -> 10 - 4 = 6 (left: 6 10) -> 6 * 10 = 60 (left: 60)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "1 10"
                }
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 5 6 10) -> 6 - 5 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 5 6 10) -> 6 - 5 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11) -> There are no possible next steps with the input 11.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 5 = 5 (left: 4 5 10)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 4 6  -> Possible next steps:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 4 6  -> Possible next steps: -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 5 10"
                }
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 6 5 10) -> 10 / 5 = 2 (left: 6 2)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 6 5 10) -> 10 / 5 = 2 (left: 6 2) -> 6 / 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "4 9"
                }
            },
            "Step 5": {
                "Step": "4 + 5 = 9 (left: 6 9 10) -> 10 - 6 = 4 (left: 4 9) -> 4 * 9 = 36 (left: 9 36)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 5 = 9 (left: 6 9 10) -> 10 - 6 = 4 (left: 4 9) -> 4 * 9 = 36 (left: 9 36) -> 36 / 4 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "8 / 1.25 = 6.4"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 5 10)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 6 10"
                }
            },
            "Step 1": {
                "Step": "10 / 5 = 2 (left: 4 6 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 5 = 2 (left: 4 6  -> 4 * 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "10 / 5 = 2 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 / 5) * 6 = 24",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 / 5 = 2 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 / 5) * 6 = 24 -> Input: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6)\n3 * 6 = 18 (left: 18)\n18 + 6 = 24 (left: 24)\nAnswer: (3 * 8) - 6 = 24",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "1 10"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "10 / 5 = 2 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (6 / (10 / 5)) = 24",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 / 5 = 2 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (6 / (10 / 5)) = 24 -> Input: 3 3 4 5\nSteps:\n3 + 5 = 8 (left: 3 4 8)\n4 * 3 = 12 (left: 8 12)\n12 / 8 = 1.5 (left: 1.5)\n1.5 * 16 = 24\nAnswer: ((3 + 5) * 4) / 8 = 24",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "8 / 1.25 = 6.4"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 4 10 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (10 - 5) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "10 / 5 = 2 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 / 5) * 6 = 24",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 / 5 = 2 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 / 5) * 6 = 24 -> Input: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n21 - 5 = 16 (left: 3 16)\n16 - 3 = 13 (left: 13)\n13 + 3 = 16 (left: 16)\n16 * 1 = 24 (left: 24)\nAnswer: ((3 * 7) - 5) / (16 -",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "8 1.25"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "8 1.25"
                }
            },
            "Step 5": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 / 8 = 1.25 (left: 8 1.25) -> 8 / 1.25 = 6.4 (left: 6.4)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "8 1.25"
                }
            },
            "Step 6": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 / 8 = 1.25 (left: 8 1.25) -> 8 + 1.25 = 9.25 (left: 9.25)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "8 / 1.25 = 6.4"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "4 + 5 = 9 (left: 6 9 10)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 5 10"
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 4 5 10) -> 10 - 4 = 6 (left: 6 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 4 5 10) -> 10 - 4 = 6 (left: 6 10) -> 6 / 10 = 0.6 (left: 0.6)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (10 - 5) = 24 -> Input: 3 3 8 9\nSteps:\n3 + 9 = 12 (left: 3 8 12)\n3 * 8 = 24 (left: 24 12)\nAnswer: (3 + 9) * 8 = 24",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "8 1.25"
                }
            },
            "Step 4": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 / 8 = 1.25 (left: 8 1.25) -> 8 / 1.25 = 6.4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "8 1.25"
                }
            },
            "Step 5": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 / 8 = 1.25 (left: 8 1.25) -> 8 + 1.25 = 9.25 (left: 9.25)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "8 1.25"
                }
            },
            "Step 6": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 / 8 = 1.25 (left: 8 1.25) -> 8 * 1.25 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "8 / 1.25 = 6.4"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 4 11 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 + 6 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 * 8 = 80 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "10 / 5 = 2 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 / 5) * 6 = 24",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 / 5 = 2 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 / 5) * 6 = 24 -> Input: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6)\n3 * 6 = 18 (left: 18)\n18 + 6 = 24 (left: 24)\nAnswer: (3 * 8) - 6 = 24",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "8 1.25"
                }
            },
            "Step 5": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 / 8 = 1.25 (left: 8 1.25) -> 8 - 1.25 = 6.75 (left: 6.75)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "8 1.25"
                }
            },
            "Step 6": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 / 8 = 1.25 (left: 8 1.25) -> 8 * 1.25 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "8 / 1.25 = 6.4"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "6 * 5 = 30 (left: 4 10 30)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 6 10"
                }
            },
            "Step 1": {
                "Step": "4 + 5 = 9 (left: 6 9 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 5 = 9 (left: 6 9 10) -> 9 - 6 = 3 (left: 3 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 5 10"
                }
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 6 5 10) -> 6 * 5 = 30 (left: 30 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 6 5 10) -> 6 * 5 = 30 (left: 30 10) -> 10 * 30 = 300 (left: 300)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "10 / 5 = 2 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 / 5) * 6 = 24",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 / 5 = 2 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 / 5) * 6 = 24 -> Input: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n1 * 9 = 9 (left: 9)\n9 * 9 = 81 (left: 81)\nAnswer: ((3 * 3) - 8) * 9 = 24",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "8 / 1.25 = 6.4"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "6 / 4 = 1.5 (left: 1.5 4 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 6 10"
                }
            },
            "Step 1": {
                "Step": "4 + 5 = 9 (left: 6 9 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 5 = 9 (left: 6 9 10) -> 10 - 6 = 4 (left: 4 9)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (10 - 5) = 24 -> Input: 3 6 7 8\nSteps:\n7 - 3 = 4 (left: 4 6 8)\n4 + 6 = 10 (left: 10 8)\n10 - 8 = 2 (left: 2)\n2 * 12 = 24 (left: 24)\nAnswer: ((7 - 3) + 6) * (10 - 8) = 24",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "4 9"
                }
            },
            "Step 4": {
                "Step": "4 + 5 = 9 (left: 6 9 10) -> 10 - 6 = 4 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "4 9"
                }
            },
            "Step 5": {
                "Step": "4 + 5 = 9 (left: 6 9 10) -> 10 - 6 = 4 (left: 4 9) -> 4 * 9 = 36 (left: 9 36)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 5 = 9 (left: 6 9 10) -> 10 - 6 = 4 (left: 4 9) -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "8 / 1.25 = 6.4"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "6 - 4 = 2 (left: 2 5 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 6 10"
                }
            },
            "Step 1": {
                "Step": "10 - 4 = 6 (left: 5 6 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 5 6 10) -> 6 - 5 = 1 (left: 1 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "10 / 5 = 2 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 / 5) * 6 = 24",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 / 5 = 2 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 / 5) * 6 = 24 -> All possible solutions have been provided.",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "8 1.25"
                },
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "8 1.25"
                }
            },
            "Step 5": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 / 8 = 1.25 (left: 8 1.25) -> 8 + 1.25 = 9.25 (left: 9.25)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "8 1.25"
                }
            },
            "Step 6": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 / 8 = 1.25 (left: 8 1.25) -> 8 / 1.25 = 6.4 (left: 6.4)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "8 / 1.25 = 6.4"
                }
            }
        },
        "Input": "4 5 6 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "901": {
        "puzzle": "1 2 4 7",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 4 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 4 7"
                }
            },
            "Step 1": {
                "Step": "7 - 4 = 3 (left: 1 2 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 4 = 3 (left: 1 2 3) -> 3 - 2 = 1 (left: 1 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 4 7"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 1 4 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 1 4  -> 4 / 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "6 6"
                }
            },
            "Step 5": {
                "Step": "4 + 2 = 6 (left: 1 6 7) -> 1 * 6 = 6 (left: 6 6) -> 6 / 6 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 2 = 6 (left: 1 6 7) -> 1 * 6 = 6 (left: 6 6) -> 6 / 6 = 1 (left: 1) -> There are no possible next steps with only one number provided.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 - 2 = 2 (left: 1 2 7)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 4 7"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 4 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 7 / 3 = 2 (left: 2 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 4 7"
                }
            },
            "Step 3": {
                "Step": "2 * 4 = 8 (left: 1 8 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 4 = 8 (left: 1 8 7) -> 8 + 7 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "6 6"
                }
            },
            "Step 5": {
                "Step": "4 + 2 = 6 (left: 1 6 7) -> 1 * 6 = 6 (left: 6 6) -> 6 + 6 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 2 = 6 (left: 1 6 7) -> 1 * 6 = 6 (left: 6 6) -> 6 + 6 = 12 (left: 12) -> 12 + 2 = 14 (left: 14) ",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "No possible next steps with just one number."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 * 4 = 8 (left: 1 8 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 4 7"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 1 4 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 1 4 5) -> 5 / 1 = 5 (left: 5 5)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "5 5"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 1 4 5) -> 5 / 1 = 5 (left: 5 5) -> 5 * 5 = 25 (left: 25)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 1 4 5) -> 5 / 1 = 5 (left: 5 5) -> 5 * 5 = 25 (left: 25) -> 25 / 2 = 12.5 (left: 2)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "5 5"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "6 6"
                }
            },
            "Step 5": {
                "Step": "4 + 2 = 6 (left: 1 6 7) -> 1 * 6 = 6 (left: 6 6) -> 6 * 6 = 36 (left: 36) ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 2 = 6 (left: 1 6 7) -> 1 * 6 = 6 (left: 6 6) -> 6 * 6 = 36 (left: 36)  -> 36 / 2 = 18",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 4 7)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 8 7"
                }
            },
            "Step 1": {
                "Step": "2 * 4 = 8 (left: 1 8 7) -> 8 / 1 = 8 (left: 8 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 4 = 8 (left: 1 8 7) -> 8 / 1 = 8 (left: 8 7) -> 8 - 7 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "6 6"
                }
            },
            "Step 3": {
                "Step": "4 + 2 = 6 (left: 1 6 7) -> 1 * 6 = 6 (left: 6 6) -> 6 / 6 = 1 (left: 1) ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 2 = 6 (left: 1 6 7) -> 1 * 6 = 6 (left: 6 6) -> 6 / 6 = 1 (left: 1)  -> No possible next steps with just one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "6 6"
                }
            },
            "Step 5": {
                "Step": "4 + 2 = 6 (left: 1 6 7) -> 1 * 6 = 6 (left: 6 6) -> 6 + 6 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 2 = 6 (left: 1 6 7) -> 1 * 6 = 6 (left: 6 6) -> 6 + 6 = 12 (left: 12) -> There are no possible next steps with the input of 12.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 + 7 = 11 (left: 1 2 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 2 7"
                }
            },
            "Step 1": {
                "Step": "4 - 2 = 2 (left: 1 2 7) -> 1 + 2 = 3 (left: 3 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 - 2 = 2 (left: 1 2 7) -> 1 + 2 = 3 (left: 3 7) -> 7 / 3 = 2.33333 (left: 2.33333)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "5 5"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 1 4 5) -> 5 / 1 = 5 (left: 5 5) -> 5 - 5 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 1 4 5) -> 5 / 1 = 5 (left: 5 5) -> 5 - 5 = 0 (left: 0) -> No possible next steps with the input of 0.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "6 6"
                }
            },
            "Step 5": {
                "Step": "4 + 2 = 6 (left: 1 6 7) -> 1 * 6 = 6 (left: 6 6) -> 6 - 6 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 2 = 6 (left: 1 6 7) -> 1 * 6 = 6 (left: 6 6) -> 6 - 6 = 0 (left: 0) -> There are no possible next steps as there are no numbers provided to perform operations on.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "7 - 4 = 3 (left: 1 2 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "1 2 3"
                }
            },
            "Step 1": {
                "Step": "7 - 4 = 3 (left: 1 2 3) -> 1 + 2 = 3 (left: 3 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 4 = 3 (left: 1 2 3) -> 1 + 2 = 3 (left: 3 3) -> 3 * 3 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "6 6"
                }
            },
            "Step 3": {
                "Step": "4 + 2 = 6 (left: 1 6 7) -> 1 * 6 = 6 (left: 6 6) -> 6 + 6 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 2 = 6 (left: 1 6 7) -> 1 * 6 = 6 (left: 6 6) -> 6 + 6 = 12 (left: 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "6 6"
                },
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "7 7"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 3 + 4 = 7 (left: 7 7) -> 7 * 7 = 49 (left: 49)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 3 + 4 = 7 (left: 7 7) -> 7 * 7 = 49 (left: 49) -> 49 is a prime number and cannot be broken down further.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "7 - 1 = 6 (left: 2 4 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 4 7"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 4 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 7 / 3 = 2 (left: 2 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 4 7"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 4 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 3 + 4 = 7 (left: 7 7)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "6 6"
                }
            },
            "Step 5": {
                "Step": "4 + 2 = 6 (left: 1 6 7) -> 1 * 6 = 6 (left: 6 6) -> 6 + 6 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 2 = 6 (left: 1 6 7) -> 1 * 6 = 6 (left: 6 6) -> 6 + 6 = 12 (left: 12) -> 12 / 2 = 6 (left: 6 8)",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "2 * 4 = 8 (left: 1 8 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 4 7"
                }
            },
            "Step 1": {
                "Step": "7 - 1 = 6 (left: 2 4 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 1 = 6 (left: 2 4  -> 4 / 2 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 4 7"
                }
            },
            "Step 3": {
                "Step": "2 * 4 = 8 (left: 1 8 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 4 = 8 (left: 1 8 7) -> 1 * 8 = 8 (left: 8 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "6 6"
                }
            },
            "Step 5": {
                "Step": "4 + 2 = 6 (left: 1 6 7) -> 1 * 6 = 6 (left: 6 6) -> 6 / 6 = 1 (left: 1) ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 2 = 6 (left: 1 6 7) -> 1 * 6 = 6 (left: 6 6) -> 6 / 6 = 1 (left: 1)  -> 1 + 1 = 2",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "7 - 4 = 3 (left: 1 2 3)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 4 7"
                }
            },
            "Step 1": {
                "Step": "2 * 4 = 8 (left: 1 8 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 4 = 8 (left: 1 8 7) -> 1 + 8 = 9 (left: 7 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 4 7"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 4 - 3 = 1 (left: 1 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 4 - 3 = 1 (left: 1 7) -> 7 / 1 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "6 6"
                }
            },
            "Step 5": {
                "Step": "4 + 2 = 6 (left: 1 6 7) -> 1 * 6 = 6 (left: 6 6) -> 6 * 6 = 36 (left: 36)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 2 = 6 (left: 1 6 7) -> 1 * 6 = 6 (left: 6 6) -> 6 * 6 = 36 (left: 36) -> There are no possible next steps with the input 36.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "4 - 2 = 2 (left: 1 2 7)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 4 7"
                }
            },
            "Step 1": {
                "Step": "4 + 2 = 6 (left: 1 6 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 2 = 6 (left: 1 6 7) -> 1 * 6 = 6 (left: 6 6)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "5 5"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 1 4 5) -> 5 / 1 = 5 (left: 5 5) -> 5 * 5 = 25 (left: 25)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 1 4 5) -> 5 / 1 = 5 (left: 5 5) -> 5 * 5 = 25 (left: 25) -> 25 - 2 = 23 (left: 2)",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "6 6"
                },
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "6 6"
                }
            },
            "Step 5": {
                "Step": "4 + 2 = 6 (left: 1 6 7) -> 1 * 6 = 6 (left: 6 6) -> 6 + 6 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 2 = 6 (left: 1 6 7) -> 1 * 6 = 6 (left: 6 6) -> 6 + 6 = 12 (left: 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "No possible next steps with just one number."
                }
            }
        },
        "Input": "1 2 4 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "902": {
        "puzzle": "2 5 8 11",
        "Agent 0": {
            "Step 0": {
                "Step": "11 - 5 = 6 (left: 2 6 ",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 8 11"
                }
            },
            "Step 1": {
                "Step": "8 - 2 = 6 (left: 6 5 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 2 = 6 (left: 6 5 11) -> 6 + 5 = 11 (left: 11 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 8 11"
                }
            },
            "Step 3": {
                "Step": "11 - 8 = 3 (left: 2 5 3)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 8 = 3 (left: 2 5 3) -> 10 + 3 = 13 (left: 7 13)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "11 80"
                }
            },
            "Step 5": {
                "Step": "2 * 5 = 10 (left: 10 8 11) -> 10 * 8 = 80 (left: 11 80) -> 80 - 11 = 69 (left: 69)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 5 = 10 (left: 10 8 11) -> 10 * 8 = 80 (left: 11 80) -> 80 - 11 = 69 (left: 69) -> 69 - 6 = 63 (left: 63)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "11 - 2 = 9 (left: 2 5 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 8 11"
                }
            },
            "Step 1": {
                "Step": "11 - 8 = 3 (left: 2 3 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 8 = 3 (left: 2 3 8) -> 2 + 3 = 5 (left: 5 8)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 8 11"
                }
            },
            "Step 3": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 3 = 8 (left: 8 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 3 = 8 (left: 8 11) -> 8 + 11 = 19 (left: 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "11 80"
                }
            },
            "Step 5": {
                "Step": "2 * 5 = 10 (left: 10 8 11) -> 10 * 8 = 80 (left: 11 80) -> 11 / 80 = 0.1375 (left: 0.1375)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 5 = 10 (left: 10 8 11) -> 10 * 8 = 80 (left: 11 80) -> 11 / 80 = 0.1375 (left: 0.1375) -> 0.1375 / 2 = 0.06875 (left: 0.06875)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 - 2 = 3 (left: 3 8 11)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "7 8 11"
                }
            },
            "Step 1": {
                "Step": "2 + 5 = 7 (left: 7 8 11) -> 8 + 11 = 19 (left: 7 19)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 5 = 7 (left: 7 8 11) -> 8 + 11 = 19 (left: 7 19) -> 19 / 7 = 2.71 (left: 2.71)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 8 11"
                }
            },
            "Step 3": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 8 - 3 = 5 (left: 5 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 8 - 3 = 5 (left: 5 11) -> 5 + 11 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "11 80"
                }
            },
            "Step 5": {
                "Step": "2 * 5 = 10 (left: 10 8 11) -> 10 * 8 = 80 (left: 11 80) -> 11 + 80 = 91 (left: 91)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 5 = 10 (left: 10 8 11) -> 10 * 8 = 80 (left: 11 80) -> 11 + 80 = 91 (left: 91) -> 91 is a single number, so there are no possible next steps to take.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 * 8 = 40 (left: 2 40 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 8 11"
                }
            },
            "Step 1": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 8 - 3 = 5 (left: 5 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 8 - 3 = 5 (left: 5 11) -> 11 / 5 = 2.2 (left: 2.2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 8 11"
                }
            },
            "Step 3": {
                "Step": "5 * 2 = 10 (left: 10 8 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 2 = 10 (left: 10 8 11) -> 10 - 8 = 2 (left: 2 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "2 11"
                }
            },
            "Step 5": {
                "Step": "5 * 2 = 10 (left: 10 8 11) -> 10 - 8 = 2 (left: 2 11) -> Possible next steps:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 2 = 10 (left: 10 8 11) -> 10 - 8 = 2 (left: 2 11) -> Possible next steps: -> There are no more possible next steps with the given numbers.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 5 = 7 (left: 7 8 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "7 8 11"
                }
            },
            "Step 1": {
                "Step": "2 + 5 = 7 (left: 7 8 11) -> 11 - 7 = 4 (left: 7 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 5 = 7 (left: 7 8 11) -> 11 - 7 = 4 (left: 7 4) -> 7 * 4 = 28 (left: 28)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 8 11"
                }
            },
            "Step 3": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 8 / 3 = 2.67 (left: 2.67 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 8 / 3 = 2.67 (left: 2.67 11) -> 11 - 2.67 = 8.33 (left: 8.33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "11 80"
                }
            },
            "Step 5": {
                "Step": "2 * 5 = 10 (left: 10 8 11) -> 10 * 8 = 80 (left: 11 80) -> 11 + 80 = 91 (left: 91)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 5 = 10 (left: 10 8 11) -> 10 * 8 = 80 (left: 11 80) -> 11 + 80 = 91 (left: 91) -> 9 + 1 = 10",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 2 13 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "2 13 11"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 2 13 11) -> 11 - 2 = 9 (left: 9 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 2 13 11) -> 11 - 2 = 9 (left: 9 11) -> 9 / 11 = 0.8181818181818182 (left: 0.8181818181818182)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 8 11"
                }
            },
            "Step 3": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 8 / 3 = 2.67 (left: 2.67 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 8 / 3 = 2.67 (left: 2.67 11) -> 11 - 2.67 = 8.33 (left: 8.33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "11 80"
                }
            },
            "Step 5": {
                "Step": "2 * 5 = 10 (left: 10 8 11) -> 10 * 8 = 80 (left: 11 80) -> 11 + 80 = 91 (left: 91)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 5 = 10 (left: 10 8 11) -> 10 * 8 = 80 (left: 11 80) -> 11 + 80 = 91 (left: 91) -> There are no possible next steps for the input 91.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "2 + 5 = 7 (left: 7 8 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "2 13 11"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 2 13 11) -> 2 + 13 = 15 (left: 11 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 2 13 11) -> 2 + 13 = 15 (left: 11 15) -> 11 - 15 = -4 (left: -4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "11 80"
                }
            },
            "Step 3": {
                "Step": "2 * 5 = 10 (left: 10 8 11) -> 10 * 8 = 80 (left: 11 80) -> 11 - 80 = -69 (left: -69)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 5 = 10 (left: 10 8 11) -> 10 * 8 = 80 (left: 11 80) -> 11 - 80 = -69 (left: -69) -> -69 / 2 = -34.5 (left: -34.5)",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "11 80"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "11 80"
                }
            },
            "Step 5": {
                "Step": "2 * 5 = 10 (left: 10 8 11) -> 10 * 8 = 80 (left: 11 80) -> 11 * 80 = 880 (left: 880)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 5 = 10 (left: 10 8 11) -> 10 * 8 = 80 (left: 11 80) -> 11 * 80 = 880 (left: 880) -> 8 / 8 = 1 (left: 1)",
                "Pruning": "NA"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 2 13 11)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 8 11"
                }
            },
            "Step 1": {
                "Step": "2 * 5 = 10 (left: 10 8 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 5 = 10 (left: 10 8 11) -> 11 + 10 = 21 (left: 8 21)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 8 11"
                }
            },
            "Step 3": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 8 - 3 = 5 (left: 5 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 8 - 3 = 5 (left: 5 11) -> 11 * 5 = 55 (left: 55)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "11 80"
                }
            },
            "Step 5": {
                "Step": "2 * 5 = 10 (left: 10 8 11) -> 10 * 8 = 80 (left: 11 80) -> 11 - 80 = -69 (left: -69)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 5 = 10 (left: 10 8 11) -> 10 * 8 = 80 (left: 11 80) -> 11 - 80 = -69 (left: -69) -> -69 - 2 = -71 (left: -71)",
                "Pruning": "NA"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 2 13 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 8 11"
                }
            },
            "Step 1": {
                "Step": "2 * 5 = 10 (left: 10 8 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 5 = 10 (left: 10 8 11) -> 10 * 8 = 80 (left: 11 80)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "11 80"
                }
            },
            "Step 3": {
                "Step": "2 * 5 = 10 (left: 10 8 11) -> 10 * 8 = 80 (left: 11 80) -> 11 - 80 = -69 (left: -69)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 5 = 10 (left: 10 8 11) -> 10 * 8 = 80 (left: 11 80) -> 11 - 80 = -69 (left: -69) -> -69 + 2 = -67 (left: -67)",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "11 80"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "11 80"
                }
            },
            "Step 5": {
                "Step": "2 * 5 = 10 (left: 10 8 11) -> 10 * 8 = 80 (left: 11 80) -> 11 + 80 = 91 (left: 91)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 5 = 10 (left: 10 8 11) -> 10 * 8 = 80 (left: 11 80) -> 11 + 80 = 91 (left: 91) -> 1 * 9 = 9 (left: 9)",
                "Pruning": "NA"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "8 * 11 = 88 (left: 2 5 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "2 13 11"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 2 13 11) -> 13 - 2 = 11 (left: 11 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 2 13 11) -> 13 - 2 = 11 (left: 11 11) -> 11 * 11 = 121 (left: 121)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 8 11"
                }
            },
            "Step 3": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 3 = 8 (left: 8 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 3 = 8 (left: 8 8) -> 8 / 8 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "11 80"
                }
            },
            "Step 5": {
                "Step": "2 * 5 = 10 (left: 10 8 11) -> 10 * 8 = 80 (left: 11 80) -> 11 + 80 = 91 (left: 91)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 5 = 10 (left: 10 8 11) -> 10 * 8 = 80 (left: 11 80) -> 11 + 80 = 91 (left: 91) -> 91 is a prime number, so there are no possible next steps for this input.",
                "Pruning": null
            }
        },
        "Input": "2 5 8 11",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            }
        ]
    },
    "903": {
        "puzzle": "3 4 4 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 4 = 9 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 4 9"
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 9 - 4 = 5 (left: 3 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 9 - 4 = 5 (left: 3 5) -> 5 / 3 = 1.67 (approximated) (left: 1.67)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "1 16"
                }
            },
            "Step 3": {
                "Step": "13 + 3 = 16 (left: 4 4 16) -> 4 / 4 = 1 (left: 1 16) -> 16 * ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 + 3 = 16 (left: 4 4 16) -> 4 / 4 = 1 (left: 1 16) -> 16 *  -> 8 + 14 = 22 (left: 22)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "1 16"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "4 6 13"
                }
            },
            "Step 5": {
                "Step": "13 - 3 = 10 (left: 4 4 10 13) -> 10 - 4 = 6 (left: 4 6 13) -> 13 - 4 = 9 (left: 6 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 3 = 10 (left: 4 4 10 13) -> 10 - 4 = 6 (left: 4 6 13) -> 13 - 4 = 9 (left: 6 9) -> 6 * 9 = 54 (left: 54)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "2 - 1.25 = 0.75"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 * 4 = 12 (left: 4 12 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "13 - 4 = 9 (left"
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left -> 4 - 13 = -9 (left: -9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left -> 4 - 13 = -9 (left: -9) -> -9 - 2 = -11 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 4 13"
                }
            },
            "Step 3": {
                "Step": "3 * 4 = 12 (left: 12 4 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 4 = 12 (left: 12 4 13) -> 12 / 4 = 3 (left: 3 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "1 9"
                }
            },
            "Step 5": {
                "Step": "4 - 3 = 1 (left: 1 4 13) -> 13 - 4 = 9 (left: 1 9) -> 1 * 9 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 - 3 = 1 (left: 1 4 13) -> 13 - 4 = 9 (left: 1 9) -> 1 * 9 = 9 (left: 9) -> 8 + 9 = 17 (left: 9)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "2 - 1.25 = 0.75"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 4 = 9 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 4 13"
                }
            },
            "Step 1": {
                "Step": "13 + 3 = 16 (left: 4 4 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 + 3 = 16 (left: 4 4 16) -> 4 / 4 = 1 (left: 1 16)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 4 13"
                }
            },
            "Step 3": {
                "Step": "3 * 4 = 12 (left: 4 12 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 4 = 12 (left: 4 12 13) -> 12 + 1 = 13 (left: 4 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "1 9"
                }
            },
            "Step 5": {
                "Step": "4 - 3 = 1 (left: 1 4 13) -> 13 - 4 = 9 (left: 1 9) -> 1 * 9 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 - 3 = 1 (left: 1 4 13) -> 13 - 4 = 9 (left: 1 9) -> 1 * 9 = 9 (left: 9) -> 9 * 8 = 72 (left: 72)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "2 - 1.25 = 0.75"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "13 - 4 = 9 (left: 3 4 9)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 4 13"
                }
            },
            "Step 1": {
                "Step": "4 / 3 = 1.3333 (left: 1.3333 4 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 3 = 1.3333 (left: 1.3333 4 13) -> 13 - 4 = 9 (left: 1.3333 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "13 - 4 = 9 (left"
                }
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left -> 4 - 13 = -9 (left: -9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left -> 4 - 13 = -9 (left: -9) -> There are no possible next steps with the input of -9.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "4 6 13"
                }
            },
            "Step 5": {
                "Step": "13 - 3 = 10 (left: 4 4 10 13) -> 10 - 4 = 6 (left: 4 6 13) -> 4 + 6 = 10 (left: 10 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 3 = 10 (left: 4 4 10 13) -> 10 - 4 = 6 (left: 4 6 13) -> 4 + 6 = 10 (left: 10 13) -> 13 / 10 = 1.3 (left: 1.3)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "2 - 1.25 = 0.75"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 - 4 = 9 (left",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "13 - 4 = 9 (left"
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left -> 13 / 4 = 3.25 (left: 3.25)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left -> 13 / 4 = 3.25 (left: 3.25) -> 3.25 - 2 = 1.25 (left: 2 1.25)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "13 - 4 = 9 (left"
                }
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left -> 13 - 4 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left -> 13 - 4 = 9 (left: 9) -> 9 / 8 = 1.125 (left: 1.125)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "1 9"
                }
            },
            "Step 5": {
                "Step": "4 - 3 = 1 (left: 1 4 13) -> 13 - 4 = 9 (left: 1 9) -> 1 + 9 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 - 3 = 1 (left: 1 4 13) -> 13 - 4 = 9 (left: 1 9) -> 1 + 9 = 10 (left: 10) -> 10 + 10 = 20",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "13 - 4 = 9 (left",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 4 13"
                }
            },
            "Step 1": {
                "Step": "4 / 3 = 1.3333 (left: 1.3333 4 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 3 = 1.3333 (left: 1.3333 4 13) -> 4 / 1.3333 = 3 (left: 3 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 4 13"
                }
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left:",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left: -> 13 * 4 = 52 (left: 52)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "1 9"
                }
            },
            "Step 5": {
                "Step": "4 - 3 = 1 (left: 1 4 13) -> 13 - 4 = 9 (left: 1 9) -> 9 - 1 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 - 3 = 1 (left: 1 4 13) -> 13 - 4 = 9 (left: 1 9) -> 9 - 1 = 8 (left: 8) -> 8 * 8 = 64 (left: 64)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "2 - 1.25 = 0.75"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "13 + 3 = 16 (left: 4 4 16)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 4 13"
                }
            },
            "Step 1": {
                "Step": "3 * 4 = 12 (left: 12 4 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 4 = 12 (left: 12 4 13) -> 12 - 4 = 8 (left: 8 13)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 4 13"
                }
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left:  -> There are no possible next steps with the given input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "4 6 13"
                }
            },
            "Step 5": {
                "Step": "13 - 3 = 10 (left: 4 4 10 13) -> 10 - 4 = 6 (left: 4 6 13) -> 6 + 13 = 19 (left: 4 19)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 3 = 10 (left: 4 4 10 13) -> 10 - 4 = 6 (left: 4 6 13) -> 6 + 13 = 19 (left: 4 19) -> 19 - 4 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "2 - 1.25 = 0.75"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 4 7 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 4 13"
                }
            },
            "Step 1": {
                "Step": "13 - 3 = 10 (left: 4 4 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 3 = 10 (left: 4 4 10) -> 4 + 4 = 8 (left: 8 10)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "2 1.25"
                }
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left -> 13 / 4 = 3.25 (left: 3.25) -> 3.25 - 2 = 1.25 (left: 2 1.25) -> 2 + 1.25 = 3.25",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left -> 13 / 4 = 3.25 (left: 3.25) -> 3.25 - 2 = 1.25 (left: 2 1.25) -> 2 + 1.25 = 3.25 -> 2 - 1.25 = 0.75",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "4 6 13"
                }
            },
            "Step 5": {
                "Step": "13 - 3 = 10 (left: 4 4 10 13) -> 10 - 4 = 6 (left: 4 6 13) -> 6 / 13 = 0.461538461",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 3 = 10 (left: 4 4 10 13) -> 10 - 4 = 6 (left: 4 6 13) -> 6 / 13 = 0.461538461 -> 6 * 13 = 78 (left: 78)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "2 - 1.25 = 0.75"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "4 - 3 = 1 (left: 1 4 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 4 9"
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 3 * 4 = 12 (left: 12 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 3 * 4 = 12 (left: 12 9) -> 12 * 9 = 108 (left: 108)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 4 13"
                }
            },
            "Step 3": {
                "Step": "4 - 3 = 1 (left: 1 4 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 - 3 = 1 (left: 1 4 13) -> 13 - 4 = 9 (left: 1 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "1 9"
                }
            },
            "Step 5": {
                "Step": "4 - 3 = 1 (left: 1 4 13) -> 13 - 4 = 9 (left: 1 9) -> 1 + 9 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 - 3 = 1 (left: 1 4 13) -> 13 - 4 = 9 (left: 1 9) -> 1 + 9 = 10 (left: 10) -> 10 + 10 = 20",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "4 / 3 = 1.33 (left: 1.33 4 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 4 13"
                }
            },
            "Step 1": {
                "Step": "4 - 3 = 1 (left: 1 4 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 - 3 = 1 (left: 1 4 13) -> 1 + 4 = 5 (left: 5 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 4 13"
                }
            },
            "Step 3": {
                "Step": "13 - 3 = 10 (left: 4 4 10 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 3 = 10 (left: 4 4 10 13) -> 10 - 4 = 6 (left: 4 6 13)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "4 6 13"
                }
            },
            "Step 5": {
                "Step": "13 - 3 = 10 (left: 4 4 10 13) -> 10 - 4 = 6 (left: 4 6 13) -> 4 * 6 = 24 (left: 24 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 3 = 10 (left: 4 4 10 13) -> 10 - 4 = 6 (left: 4 6 13) -> 4 * 6 = 24 (left: 24 13) -> 24 / 13 = 1.846 (left: 1.846)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "2 - 1.25 = 0.75"
                }
            }
        },
        "Input": "3 4 4 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "904": {
        "puzzle": "6 7 8 9",
        "Agent 0": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 8 9 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 9"
                }
            },
            "Step 1": {
                "Step": "8 * 9 = 72 (left: 6 7 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 * 9 = 72 (left: 6 7  -> 7 - 6 = 1 (left: 1 7)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 7"
                }
            },
            "Step 3": {
                "Step": "8 * 9 = 72 (left: 6 7  -> 7 - 6 = 1 (left: 1 7) -> 7 / 1 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 * 9 = 72 (left: 6 7  -> 7 - 6 = 1 (left: 1 7) -> 7 / 1 = 7 (left: 7) -> 7 / 8 = 0.875 (left: 0.875)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "1 7"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "1 7"
                }
            },
            "Step 5": {
                "Step": "8 * 9 = 72 (left: 6 7  -> 7 - 6 = 1 (left: 1 7) -> 7 - 1 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 * 9 = 72 (left: 6 7  -> 7 - 6 = 1 (left: 1 7) -> 7 - 1 = 6 (left: 6) -> 6 - 8 = -2 (left: -2)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "8 + 8 = 16"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 8 9 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "8 9 13"
                }
            },
            "Step 1": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 8 / 9 = 0.8888 (left: 0.8888 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 8 / 9 = 0.8888 (left: 0.8888 13) -> 13 / 0.8888 = 14.625 (left: 14.625)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 7"
                }
            },
            "Step 3": {
                "Step": "8 * 9 = 72 (left: 6 7  -> 7 - 6 = 1 (left: 1 7) -> 7 - 1 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 * 9 = 72 (left: 6 7  -> 7 - 6 = 1 (left: 1 7) -> 7 - 1 = 6 (left: 6) -> 6 / 8 = 0.75 (left: 0.75)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "1 7"
                },
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 7"
                }
            },
            "Step 5": {
                "Step": "8 * 9 = 72 (left: 6 7  -> 7 - 6 = 1 (left: 1 7) -> 7 / 1 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 * 9 = 72 (left: 6 7  -> 7 - 6 = 1 (left: 1 7) -> 7 / 1 = 7 (left: 7) -> 7 * 8 = 56 (left: 56)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "8 + 8 = 16"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 8 9 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 9 56"
                }
            },
            "Step 1": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 56 / 9 = 6 (left: 6 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 56 / 9 = 6 (left: 6 6) -> 6 / 6 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 9"
                }
            },
            "Step 3": {
                "Step": "8 + 9 = 17 (left: 6 7 17)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 + 9 = 17 (left: 6 7 17) -> 7 + 17 = 24 (left: 6 24)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1 7"
                }
            },
            "Step 5": {
                "Step": "8 * 9 = 72 (left: 6 7  -> 7 - 6 = 1 (left: 1 7) -> 7 - 1 = 6 (left: 6) ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 * 9 = 72 (left: 6 7  -> 7 - 6 = 1 (left: 1 7) -> 7 - 1 = 6 (left: 6)  -> 6 + 8 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "8 + 8 = 16"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 * 8 = 56 (left: 6 9 56)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 9 56"
                }
            },
            "Step 1": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 6 + 9 = 15 (left: ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 6 + 9 = 15 (left:  -> This input seems to be missing numbers for calculations. Could you please provide the numbers so we can suggest possible next steps?",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "8 9 13"
                }
            },
            "Step 3": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 9 - 8 = 1 (left: 1 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 9 - 8 = 1 (left: 1 13) -> 1 * 13 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1 7"
                }
            },
            "Step 5": {
                "Step": "8 * 9 = 72 (left: 6 7  -> 7 - 6 = 1 (left: 1 7) -> 7 / 1 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 * 9 = 72 (left: 6 7  -> 7 - 6 = 1 (left: 1 7) -> 7 / 1 = 7 (left: 7) -> 7 - 8 = -1 (left: -1)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "8 + 8 = 16"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "7 + 8 = 15 (left: 6 9 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 9"
                }
            },
            "Step 1": {
                "Step": "8 * 9 = 72 (left: 6 7 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 * 9 = 72 (left: 6 7  -> 7 - 6 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 7"
                }
            },
            "Step 3": {
                "Step": "8 * 9 = 72 (left: 6 7  -> 7 - 6 = 1 (left: 1 7) -> 1 + 7 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 * 9 = 72 (left: 6 7  -> 7 - 6 = 1 (left: 1 7) -> 1 + 7 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1 7"
                }
            },
            "Step 5": {
                "Step": "8 * 9 = 72 (left: 6 7  -> 7 - 6 = 1 (left: 1 7) -> 1 + 7 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 * 9 = 72 (left: 6 7  -> 7 - 6 = 1 (left: 1 7) -> 1 + 7 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "8 - 7 = 1 (left: 6 1 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 9 56"
                }
            },
            "Step 1": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 56 - 9 = 47 (",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 56 - 9 = 47 ( -> 3 + 5 = 8 (left: 7 8 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 9"
                }
            },
            "Step 3": {
                "Step": "7 + 8 = 15 (left: 6 9 15)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 + 8 = 15 (left: 6 9 15) -> 9 - 6 = 3 (left: 3 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1 7"
                }
            },
            "Step 5": {
                "Step": "8 * 9 = 72 (left: 6 7  -> 7 - 6 = 1 (left: 1 7) -> 7 - 1 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 * 9 = 72 (left: 6 7  -> 7 - 6 = 1 (left: 1 7) -> 7 - 1 = 6 (left: 6) -> 6 - 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "8 + 8 = 16"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "8 * 9 = 72 (left: 6 7 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 9"
                }
            },
            "Step 1": {
                "Step": "8 * 9 = 72 (left: 6 7 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 * 9 = 72 (left: 6 7  -> 6 + 7 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 9"
                }
            },
            "Step 3": {
                "Step": "9 - 6 = 3 (left: 3 7 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 6 = 3 (left: 3 7 8) -> 8 - 3 = 5 (left: 5 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1 7"
                }
            },
            "Step 5": {
                "Step": "8 * 9 = 72 (left: 6 7  -> 7 - 6 = 1 (left: 1 7) -> 1 + 7 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 * 9 = 72 (left: 6 7  -> 7 - 6 = 1 (left: 1 7) -> 1 + 7 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "7 * 8 = 56 (left: 6 9 56)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 9"
                }
            },
            "Step 1": {
                "Step": "6 * 7 = 42 (left: 8 9 42)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 7 = 42 (left: 8 9 42) -> 8 + 9 = 17 (left: 17 42)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 9"
                }
            },
            "Step 3": {
                "Step": "8 + 9 = 17 (left: 6 7 17)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 + 9 = 17 (left: 6 7 17) -> 6 + 7 = 13 (left: 13 17)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1 7"
                }
            },
            "Step 5": {
                "Step": "8 * 9 = 72 (left: 6 7  -> 7 - 6 = 1 (left: 1 7) -> 7 - 1 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 * 9 = 72 (left: 6 7  -> 7 - 6 = 1 (left: 1 7) -> 7 - 1 = 6 (left: 6) -> 8 / 6 = 1.33 (left: 1.33)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "8 + 8 = 16"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "8 + 9 = 17 (left: 6 7 17)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 9"
                }
            },
            "Step 1": {
                "Step": "6 + 7 = 13 (left: 8 9 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 13 - 8 = 5 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 7"
                }
            },
            "Step 3": {
                "Step": "8 * 9 = 72 (left: 6 7  -> 7 - 6 = 1 (left: 1 7) -> 1 * 7 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 * 9 = 72 (left: 6 7  -> 7 - 6 = 1 (left: 1 7) -> 1 * 7 = 7 (left: 7) -> 7 * 7 = 49 (left: 49)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "1 7"
                },
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1 7"
                }
            },
            "Step 5": {
                "Step": "8 * 9 = 72 (left: 6 7  -> 7 - 6 = 1 (left: 1 7) -> 1 + 7 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 * 9 = 72 (left: 6 7  -> 7 - 6 = 1 (left: 1 7) -> 1 + 7 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "8 + 9 = 17 (left: 6 7 17)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 9 56"
                }
            },
            "Step 1": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 6 + 9 = 15 (left: 15 56)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 6 + 9 = 15 (left: 15 56) -> 56 / 15 = 3.7333333333333334 (left: 3.733",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 9"
                }
            },
            "Step 3": {
                "Step": "7 * 8 = 56 (left: 6 9 56)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 6 * 9 = 54 (left: 54 56)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1 7"
                }
            },
            "Step 5": {
                "Step": "8 * 9 = 72 (left: 6 7  -> 7 - 6 = 1 (left: 1 7) -> 7 / 1 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 * 9 = 72 (left: 6 7  -> 7 - 6 = 1 (left: 1 7) -> 7 / 1 = 7 (left: 7) -> 7 * 8 = 56 (left: 8 56)",
                "Pruning": null
            }
        },
        "Input": "6 7 8 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "905": {
        "puzzle": "1 11 11 13",
        "Agent 0": {
            "Step 0": {
                "Step": "11 / 1 = 11 (left: 11 13 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 11 11 13"
                }
            },
            "Step 1": {
                "Step": "13 - 11 = 2 (left: 1 11 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 11 = 2 (left: 1 11  -> 11 * 1 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 3": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23) -> 13 / 23 = 0.565217 (left: 0.565217)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "1 9"
                }
            },
            "Step 5": {
                "Step": "13 - 11 = 2 (left: 1 11 2) -> 11 - 2 = 9 (left: 1 9) -> 1 + 9 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 11 = 2 (left: 1 11 2) -> 11 - 2 = 9 (left: 1 9) -> 1 + 9 = 10 (left: 10) -> 10 - 2 = 8 (left: 8 8)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "11 - 1 = 10 (left: 10 11 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 1 + 13 = 14",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 11 11 13"
                }
            },
            "Step 3": {
                "Step": "13 - 1 = 12 (left: 11 11 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 1 = 12 (left: 11 11 12) -> 12 - 11 = 1 (left: 1 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "1 9"
                }
            },
            "Step 5": {
                "Step": "13 - 11 = 2 (left: 1 11 2) -> 11 - 2 = 9 (left: 1 9) -> 1 + 9 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 11 = 2 (left: 1 11 2) -> 11 - 2 = 9 (left: 1 9) -> 1 + 9 = 10 (left: 10) -> 10 - 2 = 8 (left: 8)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 11 11 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 13 / 11 = 1.18 (left: 1.18 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 13 / 11 = 1.18 (left: 1.18 12) -> 1.18 + 12 = 13.18 (left: 13.18)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 3": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132) -> 13 + 132 = 145 (left: 145)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "1 9"
                }
            },
            "Step 5": {
                "Step": "13 - 11 = 2 (left: 1 11 2) -> 11 - 2 = 9 (left: 1 9) -> 9 - 1 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 11 = 2 (left: 1 11 2) -> 11 - 2 = 9 (left: 1 9) -> 9 - 1 = 8 (left: 8) -> 8 / 8 = 1 (left: 1)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "11 + 1 = 12 (left: 11 12 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 12 / 11 = 1.090909 (left: 1.090909 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 12 / 11 = 1.090909 (left: 1.090909 13) -> 13 - 1.090909 = 11.909091 (left: 11.909091)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 3": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 1 + 13 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "1 9"
                }
            },
            "Step 5": {
                "Step": "13 - 11 = 2 (left: 1 11 2) -> 11 - 2 = 9 (left: 1 9) -> 9 - 1 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 11 = 2 (left: 1 11 2) -> 11 - 2 = 9 (left: 1 9) -> 9 - 1 = 8 (left: 8) -> 8 / 8 = 1 (left: 1)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 11 11 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 11 2"
                }
            },
            "Step 1": {
                "Step": "13 - 11 = 2 (left: 1 11 2) -> 1 + 11 = 12 (left: 2 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 11 = 2 (left: 1 11 2) -> 1 + 11 = 12 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 3": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13) -> 13 / 2 = 6.5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 12 + 13 = 25 (left: 11 25) -> 11 + 25 = 36 (left: 36) -> 36 * 2 = 72 (left: 72)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "36"
                }
            },
            "Step 6": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 12 + 13 = 25 (left: 11 25) -> 11 + 25 = 36 (left: 36) -> There is only one number in the input, so there are no possible next steps.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "1 + 11 = 12 (left: 11 12 13)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 11 / 12 = 0.9166666666666666 (left: 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 11 / 12 = 0.9166666666666666 (left: 13) -> There are no possible next steps with the number 13.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 3": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 12 + 13 = 25 (left: 11 25)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 12 + 13 = 25 (left: 11 25) -> 11 + 25 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "1 9"
                }
            },
            "Step 5": {
                "Step": "13 - 11 = 2 (left: 1 11 2) -> 11 - 2 = 9 (left: 1 9) -> 1 * 9 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 11 = 2 (left: 1 11 2) -> 11 - 2 = 9 (left: 1 9) -> 1 * 9 = 9 (left: 9) -> 8 + 9 = 17 (left: 9)",
                "Pruning": "NA"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "13 - 11 = 2 (left: 1 11 2)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 11 11 13"
                }
            },
            "Step 1": {
                "Step": "11 / 1 = 11 (left: 11 11 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 / 1 = 11 (left: 11 11 13) -> 11 + 11 = 22 (left: 13 22)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 11 11 13"
                }
            },
            "Step 3": {
                "Step": "13 - 11 = 2 (left: 1 11 2)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 11 = 2 (left: 1 11 2) -> 11 - 2 = 9 (left: 1 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "1 9"
                }
            },
            "Step 5": {
                "Step": "13 - 11 = 2 (left: 1 11 2) -> 11 - 2 = 9 (left: 1 9) -> 1 * 9 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 11 = 2 (left: 1 11 2) -> 11 - 2 = 9 (left: 1 9) -> 1 * 9 = 9 (left: 9) -> 9 - 1 = 8 (left: 8)",
                "Pruning": "NA"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "1 + 11 = 12 (left: 11 12 13)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 11 11 13"
                }
            },
            "Step 1": {
                "Step": "1 * 11 = 11 (left: 11 11 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 * 11 = 11 (left: 11 11  -> 11 / 11 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 3": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 12 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 12 13) -> 1 * 12 = 12 (left: 12",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "1 9"
                }
            },
            "Step 5": {
                "Step": "13 - 11 = 2 (left: 1 11 2) -> 11 - 2 = 9 (left: 1 9) -> 1 + 9 = 10 (left: 9 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 11 = 2 (left: 1 11 2) -> 11 - 2 = 9 (left: 1 9) -> 1 + 9 = 10 (left: 9 10) -> 9 / 10 = 0.9 (left: 0.9)",
                "Pruning": "NA"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "1 + 11 = 12 (left: 11 12 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 12 + 13 = 25 (left: 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 12 + 13 = 25 (left: 11) -> There are no possible next steps with the input of 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 3": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 13 - 12 = 1 (left: 1 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 13 - 12 = 1 (left: 1 11) -> 11 - 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "1 9"
                }
            },
            "Step 5": {
                "Step": "13 - 11 = 2 (left: 1 11 2) -> 11 - 2 = 9 (left: 1 9) -> 9 - 1 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 11 = 2 (left: 1 11 2) -> 11 - 2 = 9 (left: 1 9) -> 9 - 1 = 8 (left: 8) -> 8 * 8 = 64 (left: 64)",
                "Pruning": "NA"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "11 + 1 = 12 (left: 11 12 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 3": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 12 /",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 12 / -> 12 / 8 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 12 + 13 = 25 (left: 11 25) -> 11 + 25 = 36 (left: 36) -> No possible next steps as there is only one number.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 12 + 13 = 25 (left: 11 25) -> 11 + 25 = 36 (left: 36) -> No possible next steps as there is only one number. -> There are no possible next steps as there is only one number.",
                "Pruning": null
            }
        },
        "Input": "1 11 11 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            }
        ]
    },
    "906": {
        "puzzle": "1 8 10 11",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 8 = 9 (left: 9 10 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 8 10 11"
                }
            },
            "Step 1": {
                "Step": "",
                "Pruning": null
            },
            "Step 2": {
                "Step": " -> It seems you haven't provided any input for the next step calculation. Please enter a set of numbers to continue.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 8 10 11"
                }
            },
            "Step 3": {
                "Step": "8 / 1 = 8 (left: 8 10 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 8 + 10 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> 18 / 2 = 9",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> 18 / 2 = 9 -> Possible next steps:",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "11 / 1 = 11 (left: 8 10 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "8 10 "
                }
            },
            "Step 1": {
                "Step": "10 / 1 = 10 (left: 8 10  -> 8 * 10 = 80 (left: 80)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 1 = 10 (left: 8 10  -> 8 * 10 = 80 (left: 80) -> There are no possible next steps with just the number 80.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 8 10 11"
                }
            },
            "Step 3": {
                "Step": "8 / 1 = 8 (left: 8 10 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 / 1 = 8 (left: 8 10 11) -> 8 / 10 = 0.8 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> No more possible next steps as there are no more numbers to compute with. The final result is 18.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> No more possible next steps as there are no more numbers to compute with. The final result is 18. -> No more possible next steps as there are no more numbers to compute with. The final result is 18.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "8 / 1 = 8 (left: 8 10 ",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "8 10 "
                }
            },
            "Step 1": {
                "Step": "10 / 1 = 10 (left: 8 10  -> 10 - 8 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 1 = 10 (left: 8 10  -> 10 - 8 = 2 (left: 2) -> 2 + 2 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "8 10 "
                }
            },
            "Step 3": {
                "Step": "10 / 1 = 10 (left: 8 10  -> Possible next steps:",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 / 1 = 10 (left: 8 10  -> Possible next steps: -> There are no possible next steps with the given input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> There are no possible next steps with the input of 18.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> There are no possible next steps with the input of 18. -> None",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "8 - 1 = 7 (left: 7 10 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "8 11 11"
                }
            },
            "Step 1": {
                "Step": "10 + 1 = 11 (left: 8 11 11) -> 8 + 11 = 19 (left: 11 11 19)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 1 = 11 (left: 8 11 11) -> 8 + 11 = 19 (left: 11 11 19) -> 11 / 11 = 1 (left: 1 19)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 8 10 11"
                }
            },
            "Step 3": {
                "Step": "11 - 1 = 10 (left: 8 10 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 1 = 10 (left: 8 10 10) -> 10 - 8 = 2 (left: 2 10)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> There are no possible next steps with just the number 18.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> There are no possible next steps with just the number 18. -> None",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "10 + 1 = 11 (left: 8 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "8 10 11"
                }
            },
            "Step 1": {
                "Step": "10 * 1 = 10 (left: 8 10 11) -> 10 - 11 = -1 (left: 8 -1)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 * 1 = 10 (left: 8 10 11) -> 10 - 11 = -1 (left: 8 -1) -> 8 / -1 = -8 (left: -8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 8 10 11"
                }
            },
            "Step 3": {
                "Step": "8 - 1 = 7 (left: 7 10 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 - 1 = 7 (left: 7 10 11) -> 11 - 7 = 4 (left: 4 10)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> 18 / 8 = 2.25 (not a whole number)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> 18 / 8 = 2.25 (not a whole number) -> 8 * 2 = 16 (left: 16)",
                "Pruning": "NA"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "10 + 1 = 11 (left: 8 11 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 8 10 11"
                }
            },
            "Step 1": {
                "Step": "10 + 1 = 11 (left: 8 11 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 1 = 11 (left: 8 11 11) -> 8 * 11 = 88 (left: 11 88)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 8 10 11"
                }
            },
            "Step 3": {
                "Step": "8 - 1 = 7 (left: 7 10 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 - 1 = 7 (left: 7 10 11) -> 11 - 7 = 4 (left: 4 10)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "4 10"
                }
            },
            "Step 5": {
                "Step": "8 - 1 = 7 (left: 7 10 11) -> 11 - 7 = 4 (left: 4 10) -> 3 + 9 = 12 (left: 12 27)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 1 = 7 (left: 7 10 11) -> 11 - 7 = 4 (left: 4 10) -> 3 + 9 = 12 (left: 12 27) -> 12 * 27 = 324 (left: 324)",
                "Pruning": "NA"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "1 + 8 = 9 (left: 9 10 11)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "8 10 "
                }
            },
            "Step 1": {
                "Step": "10 / 1 = 10 (left: 8 10  -> 8 * 10 = 80 (left: 80)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 1 = 10 (left: 8 10  -> 8 * 10 = 80 (left: 80) -> 80 - 2 = 78 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "8 9 11"
                }
            },
            "Step 3": {
                "Step": "10 - 1 = 9 (left: 8 9 11) -> 11 - 8 = 3 (left: 3 9 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 1 = 9 (left: 8 9 11) -> 11 - 8 = 3 (left: 3 9 11) -> 9 + 3 = 12 (left:",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> 18 + 8 = 26 (left: 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> 18 + 8 = 26 (left: 8) -> 8 / 8 = 1 (left: 1)",
                "Pruning": "NA"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "10 / 1 = 10 (left: 8 10 ",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 8 10 11"
                }
            },
            "Step 1": {
                "Step": "10 - 1 = 9 (left: 8 9 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 1 = 9 (left: 8 9 11) -> 9 * 11 = 99 (left: 8 99)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 8 10 11"
                }
            },
            "Step 3": {
                "Step": "1 * 8 = 8 (left: 8 10 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 * 8 = 8 (left: 8 10 11) -> 10 / 11 = 0.909 (left: 8 0.909)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> 18 / 2 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> 18 / 2 = 9 (left: 9) -> There are no possible next steps with the input 9.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "10 - 1 = 9 (left: 8 9 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "8 10 "
                }
            },
            "Step 1": {
                "Step": "10 / 1 = 10 (left: 8 10  -> 8 + 10 = 18 (left: 18)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 1 = 10 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> 18 / 2 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 8 10 11"
                }
            },
            "Step 3": {
                "Step": "1 * 8 = 8 (left: 8 10 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 * 8 = 8 (left: 8 10 11) -> 11 / 8 = 1.375 (left: 1.375 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> There are no possible next steps with the input 18. -> There are no possible next steps with the input 18.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "10 * 1 = 10 (left: 8 10 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 8 10 11"
                }
            },
            "Step 1": {
                "Step": "1 * 8 = 8 (left: 8 10 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 * 8 = 8 (left: 8 10 11) -> 11 / 10 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "9 10 11"
                }
            },
            "Step 3": {
                "Step": "1 + 8 = 9 (left: 9 10 11) -> 9 + 10 = 19 (left: 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 8 = 9 (left: 9 10 11) -> 9 + 10 = 19 (left: 11) -> 11 + 2 = 13",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "4 10"
                }
            },
            "Step 5": {
                "Step": "8 - 1 = 7 (left: 7 10 11) -> 11 - 7 = 4 (left: 4 10) -> 10 / 4 = 2.5 (left: 2.5 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 1 = 7 (left: 7 10 11) -> 11 - 7 = 4 (left: 4 10) -> 10 / 4 = 2.5 (left: 2.5 10) -> Possible next steps:",
                "Pruning": null
            }
        },
        "Input": "1 8 10 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "907": {
        "puzzle": "2 3 6 9",
        "Agent 0": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 6 9 9)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 6 9"
                }
            },
            "Step 1": {
                "Step": "9 - 6 = 3 (left: 2 3 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 6 = 3 (left: 2 3 3) -> ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "4 3"
                }
            },
            "Step 3": {
                "Step": "9 / 3 = 3 (left: 2 6 3) -> 6 - 2 = 4 (left: 4 3) -> 4 * 3 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 / 3 = 3 (left: 2 6 3) -> 6 - 2 = 4 (left: 4 3) -> 4 * 3 = 12 (left: 12) -> 12 * 2 = 24 (left: 8 24)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3 6"
                }
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 3 9) -> 9 - 3 = 6 (left: 3 6) -> 3 + 6 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 3 3 9) -> 9 - 3 = 6 (left: 3 6) -> 3 + 6 = 9 (left: 9) -> There are no possible next steps with just the number 9.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 6 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 6 9"
                }
            },
            "Step 1": {
                "Step": "9 - 3 = 6 (left: 2 6 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 3 = 6 (left: 2 6  -> 2 + 6 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3 6"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 3 9) -> 9 - 3 = 6 (left: 3 6) -> 6 - 3 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 3 9) -> 9 - 3 = 6 (left: 3 6) -> 6 - 3 = 3 (left: 3) -> 3 - 8 = -5 (left: -5)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "3 6"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "9 15"
                }
            },
            "Step 5": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 6 + 9 = 15 -> 15 - 6 = 9 (left: 9 15) -> 15 / 9 = 1.67 (left: 1.67)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "9 15"
                }
            },
            "Step 6": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 6 + 9 = 15 -> 15 - 6 = 9 (left: 9 15) -> 9 * 15 = 135 (left: 135)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "There are no possible next steps with the input 18."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 6 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 9 9"
                }
            },
            "Step 1": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9) -> Possible",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 9 9"
                }
            },
            "Step 3": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 * 9 = 81 (left: 6 9 81)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 * 9 = 81 (left: 6 9 81) -> 81 / 6 = 13.5 (left: 9 13.5)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "9 15"
                }
            },
            "Step 5": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 6 + 9 = 15 -> 15 - 6 = 9 (left: 9 15) -> 15 / 9 = 1.6666666666666667 (left: 1.6666666666666667)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "9 13.5"
                }
            },
            "Step 6": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 * 9 = 81 (left: 6 9 81) -> 81 / 6 = 13.5 (left: 9 13.5) -> 9 + 13.5 = 22.5 (left: 22.5)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "There are no possible next steps with the input 18."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: 2 3 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 6 9"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 3 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 3 9) -> 9 - 3 = 6 (left: 3 6)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 9 9"
                }
            },
            "Step 3": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9) -> 3 * 9 = 27 (left: 9 27)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "9 13.5"
                }
            },
            "Step 5": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 * 9 = 81 (left: 6 9 81) -> 81 / 6 = 13.5 (left: 9 13.5) -> 9 * 13.5 = 121.5 (left: 121.5)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "9 27"
                }
            },
            "Step 6": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9) -> 3 * 9 = 27 (left: 9 27) -> 9 + 27 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "There are no possible next steps with the input 18."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 * 3 = 6 (left: 6 6 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "2 6 7"
                }
            },
            "Step 1": {
                "Step": "9 - 2 = 7 (left: 2 6 7) -> 7 / 2 = 3.5 (left: 3.5 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 2 = 7 (left: 2 6 7) -> 7 / 2 = 3.5 (left: 3.5 7) -> 3.5 + 7 = 10.5 (left: 10.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 3 3"
                }
            },
            "Step 3": {
                "Step": "9 - 6 = 3 (left: 2 3 3) -> Possible",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 6 = 3 (left: 2 3 3) -> Possible -> It seems like you might have entered a wrong input format. Please provide a list of numbers separated by spaces.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "9 27"
                }
            },
            "Step 5": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9) -> 3 * 9 = 27 (left: 9 27) -> Input: 5 10 15",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9) -> 3 * 9 = 27 (left: 9 27) -> Input: 5 10 15 -> 10 + 15 = 25 (left: 5 25)",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "6 - 3 = 3 (left: 2 3 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 6 9"
                }
            },
            "Step 1": {
                "Step": "9 - 3 = 6 (left: 2 6 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 3 = 6 (left: 2 6 9) -> 6 * 2 = 12 (left: 12 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 9 9"
                }
            },
            "Step 3": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 6 + 9 = 15",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 6 + 9 = 15 -> 15 - 6 = 9 (left: 9 15)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3 6"
                }
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 3 9) -> 9 - 3 = 6 (left: 3 6) -> 3 + 6 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 3 3 9) -> 9 - 3 = 6 (left: 3 6) -> 3 + 6 = 9 (left: 9) -> 9 - 8 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "8 24"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 / 3 = 2 (left: 2 2 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 9 9"
                }
            },
            "Step 1": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 -> 9 - 8 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3 6"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 3 9) -> 9 - 3 = 6 (left: 3 6) -> 3 * 6 = 18 (left: 18)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 3 9) -> 9 - 3 = 6 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "9 15"
                }
            },
            "Step 5": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 6 + 9 = 15 -> 15 - 6 = 9 (left: 9 15) -> 9 * 15 = 135 (left: 135)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "9 15"
                }
            },
            "Step 6": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 6 + 9 = 15 -> 15 - 6 = 9 (left: 9 15) -> 9 * 15 = 135 (left: 135)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "8 24"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "9 - 2 = 7 (left: 2 6 7)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 6 9"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 2 6 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 2 6 3) -> 6 - 2 = 4 (left: 4 3)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3 6"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 3 9) -> 9 - 3 = 6 (left: 3 6) -> 6 / 3 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 3 9) -> 9 - 3 = 6 (left: 3 6) -> 6 / 3 = 2 (left: 2) -> 2 / 2 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "3 6"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "9 15"
                }
            },
            "Step 5": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 6 + 9 = 15 -> 15 - 6 = 9 (left: 9 15) -> 15 - 9 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "9 15"
                }
            },
            "Step 6": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 6 + 9 = 15 -> 15 - 6 = 9 (left: 9 15) -> 15 + 9 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "8 24"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 6 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 6 9"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 5 6 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 6 + 9 = 15 (left: 5 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 6 9"
                }
            },
            "Step 3": {
                "Step": "2 * 3 = 6 (left: 6 6 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 3 = 6 (left: 6 6 9) -> 6 * 6 = 36 (left: 9 36)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "9 15"
                }
            },
            "Step 5": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 6 + 9 = 15 -> 15 - 6 = 9 (left: 9 15) -> 9 + 15 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "9 15"
                }
            },
            "Step 6": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 6 + 9 = 15 -> 15 - 6 = 9 (left: 9 15) -> 9 * 15 = 135 (left: 135)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "8 24"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: 2 3 3)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 6 9"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 9 / 5 = 1.8 (left: 1.8 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 9 / 5 = 1.8 (left: 1.8 6) -> 1.8 * 6 = 10.8 (left: 10.8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 9 9"
                }
            },
            "Step 3": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 -",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - -> 9 - 2 = 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "9 27"
                }
            },
            "Step 5": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9) -> 3 * 9 = 27 (left: 9 27) -> 20 - 10 =",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9) -> 3 * 9 = 27 (left: 9 27) -> 20 - 10 = -> 20 - 10 = 10",
                "Pruning": null
            }
        },
        "Input": "2 3 6 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "908": {
        "puzzle": "1 3 5 9",
        "Agent 0": {
            "Step 0": {
                "Step": "3 * 5 = 15 (left: 1 15 9)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 5 9"
                }
            },
            "Step 1": {
                "Step": "5 * 9 = 45 (left: 1 3 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 9 = 45 (left: 1 3  -> 1 + 3 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9) -> 15 + 9 = 24 (left: 24) -> Answer: (3 * 5) + (15 / 1) = 24",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "1 15 9"
                }
            },
            "Step 4": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 - 9 = 6 (left: 1 6 9)"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 + 9 = 14 (left: 1 3 14)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 15 9"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 1 * 15 = 15 (left: 15 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 1 * 15 = 15 (left: 15 9) -> 15 - 9 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9) -> 15 + 9 = 24 (left: 24) -> Answer: (3 * 5) + (15 + 9) = 24",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "24"
                }
            },
            "Step 4": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9) -> 15 + 9 = 24 (left: 24) -> Answer: ((1 * 3) * 5) + 9 = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 - 5 = 4 (left: 1 3 4)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 15 9"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9) -> 9 - 15 = -6 (left: -",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 + 9 = 24 (left: 1 24) -> 24 / 1 = 24 (left: 24) -> Answer: (3 * 5) + 9 = 24",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "1 4"
                }
            },
            "Step 4": {
                "Step": "5 + 9 = 14 (left: 1 3 14) -> 14 / 3 = 4 (left: 1 4) -> 1 * 4 = 4 (left: 4)"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 * 9 = 45 (left: 1 3 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 5 9"
                }
            },
            "Step 1": {
                "Step": "3 + 5 = 8 (left: 1 8 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 5 = 8 (left: 1 8 9) -> Input: 3 10 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 5 9"
                }
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 4 5 9) -> 9 - 4 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 4 5 9) -> 9 - 4 = 5 (left: 5) -> There is no possible next step with just one number given."
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 - 1 = 2 (left: 2 5 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 5 9"
                }
            },
            "Step 1": {
                "Step": "9 - 1 = 8 (left: 3 5 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 1 = 8 (left: 3 5 8) -> 3 * 5 = 15 (left: 15 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 5 9"
                }
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 1 15 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9)"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 4 5 9)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 5 9"
                }
            },
            "Step 1": {
                "Step": "5 * 9 = 45 (left: 1 3 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 9 = 45 (left: 1 3  -> 1 + 3 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 5 9"
                }
            },
            "Step 3": {
                "Step": "1 * 3 = 3 (left: 3 5 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 * 3 = 3 (left: 3 5 9) -> 5 - 3 = 2 (left: 2 9)"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "3 + 5 = 8 (left: 1 8 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 5 9"
                }
            },
            "Step 1": {
                "Step": "5 + 9 = 14 (left: 1 3 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 9 = 14 (left: 1 3 14) -> 14 / 3 = 4 (left: 1 4)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 + 9 = 24 (left: 1 24) -> 24 / 1 = 24 (left: 24) -> Answer: (3 * 5) + 9 = 24",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "24"
                }
            },
            "Step 4": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9) -> 15 + 9 = 24 (left: 24) -> Answer: (3 * 5) + (15 + 9) = 24"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "5 * 9 = 45 (left: 1 3 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 15 9"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9) -> 15 + 9 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 15 9"
                }
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 - 9 = 6 (left: 1 6 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 - 9 = 6 (left: 1 6 9) -> 1 * 6 = 6 (left: 6 9)"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "5 * 9 = 45 (left: 1 3 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 15 9"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 + 9 = 24 (left: 1 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 + 9 = 24 (left: 1 24) -> 24 / 1 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 15 9"
                }
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9) -> 15 * 9 = 135 (left: 135)"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 4 5 9)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 5 9"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 4 5 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 3 = 4 (left: 4 5 9) -> 5 + 9 = 14 (left: 4 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9) -> 15 + 9 = 24 (left: 24) -> Answer: (3 * 5) + (15 + 9) = 24",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "24"
                }
            },
            "Step 4": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9) -> 15 + 9 = 24 (left: 24) -> Answer: (3 * 5) + (15 + 9) = 24"
            }
        },
        "Input": "1 3 5 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            }
        ]
    },
    "909": {
        "puzzle": "3 3 7 12",
        "Agent 0": {
            "Step 0": {
                "Step": "3 * 7 = 21 (left: 21 3 ",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "21 3 "
                }
            },
            "Step 1": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 / 3 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 / 3 = 7 (left: 7) -> 7 * 8 = 56 (left: 8 56)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 4 12"
                }
            },
            "Step 3": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 - 3 = 9 (left: 4 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 - 3 = 9 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "4 9"
                }
            },
            "Step 5": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 - 3 = 9 (left: 4 9) -> 7 - 3 = 4 (left: 4 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 - 3 = 9 (left: 4 9) -> 7 - 3 = 4 (left: 4 5) -> 10 / 3 = 3.33 (left: 3.33)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 - 3 = 9 (left: 3 7 9)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 7 12"
                }
            },
            "Step 1": {
                "Step": "3 + 7 = 10 (left: 3 10 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 7 = 10 (left: 3 10 12) -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 7 9"
                }
            },
            "Step 3": {
                "Step": "12 - 3 = 9 (left: 3 7 9) -> 3 * 7 = 21 (left: 9 21)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 3 = 9 (left: 3 7 9) -> 3 * 7 = 21 (left: 9 21) -> 21 - 9 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: (7 * 3) + 3 = 24 -> Input: 2 3 5 6\nSteps:\n2 * 6 = 12 (left: 3 5 12)\n5 + 3 = 8 (left: 8 12)\n8 * 3 = 24 (left: 24)\nAnswer: (2 * 6) * (5 + 3) = 24",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "18"
                }
            },
            "Step 6": {
                "Step": "12 - 3 = 9 (left: 3 7 9) -> 7 / 3 = 2 (left: 2 9) -> 2 * 9 = 18 (left: 18) -> 18 - 8 = 10 (left: 10)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 * 3 = 21 (left: 21 3 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "21 3 "
                }
            },
            "Step 1": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: (3 * 7) + 3 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: (3 * 7) + 3 = 24 -> Input: 6 6 6 6\nSteps:\n6 + 6 = 12 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)\n36 / 12 = 3 (left: 3)\n3 * 6 = 18 (left: 18)\n18 + 6 = 24 (left: 24)\nAnswer: (((6 + 6) * 6) / 12)",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "24"
                }
            },
            "Step 4": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: (7 * 3) + 3 = 24 -> Input: 2 3 4 6\nSteps:\n2 * 6 = 12 (left: 3 4 12)\n3 + 4 = 7 (left: 7 12)\n7 * 12 = 84 (left: 84)\nAnswer: (2 * 6) * (3 + 4) = 84",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "18"
                },
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "4 9"
                }
            },
            "Step 5": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 - 3 = 9 (left: 4 9) -> 4 * 9 = 36 (left: 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 - 3 = 9 (left: 4 9) -> 4 * 9 = 36 (left: 9) -> 8 + 1 = 9",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 - 3 = 4 (left: 3 4 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 7 9"
                }
            },
            "Step 1": {
                "Step": "12 - 3 = 9 (left: 3 7 9) -> 7 / 3 = 2 (left: 2 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 3 = 9 (left: 3 7 9) -> 7 / 3 = 2 (left: 2 9) -> 2 * 9 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 4 12"
                }
            },
            "Step 3": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 3 + 4 = 7 (left: 7 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 3 + 4 = 7 (left: 7 12) -> 12 - 7 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: (7 * 3) + 3 = 24 -> Input: 6 6 6 4\nSteps:\n6 + 6 = 12 (left: 12 6 4)\n12 + 4 = 16 (left: 16 6)\n16 - 6 = 10 (left: 10)\n10 * 6 = 60 (left: 60)\n60 / 2.5 = 24\nAnswer: ((6 + 6) + 4) * (6 - 6)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: (3 * 7) + 3 = 24 -> Input: 2 3 4 4\nSteps:\n2 * 4 = 8 (left: 3 4 8)\n3 + 4 = 7 (left: 7 8)\n7 * 8 = 56 (left: 56)\nAnswer: (4 * 2) * (4 + 3) = 56",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "7 - 3 = 4 (left: 3 4 12)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 7 12"
                }
            },
            "Step 1": {
                "Step": "3 + 7 = 10 (left: 10 3 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 7 = 10 (left: 10 3 12) -> 10 + 3 = 13 (left: 3 12 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 7 12"
                }
            },
            "Step 3": {
                "Step": "7 - 3 = 4 (left: 3 4 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 - 3 = 9 (left: 4 9)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "12 - 3 = 9 (left: 3 7 9) -> 7 / 3 = 2 (left: 2 9) -> 2 * 9 = 18 (left: 18) -> 18 - 2 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: (3 * 7) + 3 = 24 -> Input: 2 3 6 7\nSteps:\n2 * 7 = 14 (left: 3 6 14)\n6 - 3 = 3 (left: 3 14)\n14 - 3 = 11 (left: 11)\n11 * 2 = 22 (left: 22)\n22 + 2 = 24 (left: 24)\nAnswer: ((2 * 7) - (6 - 3)) +",
                "Pruning": "NA"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "7 - 3 = 4 (left: 3 4 12)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "21 3 "
                }
            },
            "Step 1": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 3 - 21 = -18 (left: -18)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 3 - 21 = -18 (left: -18) -> There are no possible next steps as there are no numbers provided to operate on with -18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "12 - 3 = 9 (left: 3 7 9) -> 7 / 3 = 2 (left: 2 9) -> 2 * 9 = 18 (left: 18) -> 18 + 2 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "21 3 "
                }
            },
            "Step 4": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 * 3 = 63 (left: 63)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "12 - 3 = 9 (left: 3 7 9) -> 7 / 3 = 2 (left: 2 9) -> 2 * 9 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 3 = 9 (left: 3 7 9) -> 7 / 3 = 2 (left: 2 9) -> 2 * 9 = 18 (left: 18) -> There are no possible next steps with the input 18. -> None",
                "Pruning": "NA"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "12 - 7 = 5 (left: 3 5 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 4 12"
                }
            },
            "Step 1": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 - 4 = 8 (left: 3 8 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 - 4 = 8 (left: 3 8 12) -> 12 - 3 = 9 (left: 3 9 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 7 9"
                }
            },
            "Step 3": {
                "Step": "12 - 3 = 9 (left: 3 7 9) -> 7 / 3 = 2 (left: 2 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 3 = 9 (left: 3 7 9) -> 7 / 3 = 2 (left: 2 9) -> 9 / 2 = 4.5 (left: 4.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: (3 * 7) + 3 = 24 -> Input: 2 3 5 7\nSteps:\n2 * 3 = 6 (left: 5 6 7)\n5 + 7 = 12 (left: 6 12)\n6 * 12 = 72 (left: 72)\nAnswer: (2 * 3) * (5 + 7) = 24",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: (7 * 3) + 3 = 24 -> Input: 1 2 3 4\nSteps:\n1 * 2 = 2 (left: 2 3 4)\n2 * 3 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: ((1 * 2) * 3) * 4 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 7 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 7 9"
                }
            },
            "Step 1": {
                "Step": "12 - 3 = 9 (left: 3 7 9) -> 7 / 3 = 2.33 (left: 2.33 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 3 = 9 (left: 3 7 9) -> 7 / 3 = 2.33 (left: 2.33 9) -> Input: 5 20 20",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 7 9"
                }
            },
            "Step 3": {
                "Step": "12 - 3 = 9 (left: 3 7 9) -> 7 / 3 = 2.33 (left: 2.33 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 3 = 9 (left: 3 7 9) -> 7 / 3 = 2.33 (left: 2.33 9) -> 9 - 2.33 = 6.67 (left: 6.67)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: (7 * 3) + 3 = 24 -> Input: 6 6 6 6\nSteps:\n6 + 6 = 12 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)\n36 / 12 = 3 (left: 3)\n3 * 6 = 18 (left: 18)\n18 + 6 = 24 (left: 24)\nAnswer: ((6 + 6) * 6) / 12 +",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: (7 * 3) + 3 = 24 -> Input: 6 6 6 6\nSteps:\n6 + 6 = 12 (left: 6 6 12)\n6 * 6 = 36 (left: 6 36)\n36 / 6 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)\nAnswer: ((6 + 6) * (6 / 6)) * 6 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "7 * 3 = 21 (left: 3 12 ",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 7 12"
                }
            },
            "Step 1": {
                "Step": "7 - 3 = 4 (left: 3 4 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 3 = 4 (left: 3 4  -> 3 + 4 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 4 12"
                }
            },
            "Step 3": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 3 * 4 = 12 (left: 12 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 3 * 4 = 12 (left: 12 12) -> 12 - 12 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "4 9"
                }
            },
            "Step 5": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 - 3 = 9 (left: 4 9) -> 4 * 9 = 36 (left: 36)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 - 3 = 9 (left: 4 9) -> 4 * 9 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 6 7 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "21 3 "
                }
            },
            "Step 1": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: (7 * 3) + 3 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 7 9"
                }
            },
            "Step 3": {
                "Step": "12 - 3 = 9 (left: 3 7 9) -> 9 - 7 = 2 (left: 2 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 3 = 9 (left: 3 7 9) -> 9 - 7 = 2 (left: 2 9) -> 2 * 9 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "4 9"
                }
            },
            "Step 5": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 - 3 = 9 (left: 4 9) -> Possible next steps:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 - 3 = 9 (left: 4 9) -> Possible next steps: -> There are no more possible next steps with the given input.",
                "Pruning": null
            }
        },
        "Input": "3 3 7 12",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "910": {
        "puzzle": "4 5 7 9",
        "Agent 0": {
            "Step 0": {
                "Step": "4 * 5 = 20 (left: 7 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 7 9"
                }
            },
            "Step 1": {
                "Step": "7 * 9 = 63 (left: 4 5 63)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 * 9 = 63 (left: 4 5 63) -> 63 / 5 = 12.6 (left: 4 12.6)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 5 16"
                }
            },
            "Step 3": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 16 - 5 = 11 (left: 4",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 16 - 5 = 11 (left: 4 -> 4 + 4 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "4 12.6"
                }
            },
            "Step 5": {
                "Step": "7 * 9 = 63 (left: 4 5 63) -> 63 / 5 = 12.6 (left: 4 12.6) -> 4 * 12.6 = 50.4 (left: 12.6 50.4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 9 = 63 (left: 4 5 63) -> 63 / 5 = 12.6 (left: 4 12.6) -> 4 * 12.6 = 50.4 (left: 12.6 50.4) -> 12.6 * 50.4 = 636.24 (left: 636.24)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "4 + 4 = 8"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 * 7 = 35 (left: 4 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 5 16"
                }
            },
            "Step 1": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 4 + 5 = 9 (left: 9 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 4 + 5 = 9 (left: 9 16) -> 16 / 9 = 1.7777777777777777 (left: 1.7777777777777777)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 7 9"
                }
            },
            "Step 3": {
                "Step": "7 * 9 = 63 (left: 4 5 63)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 * 9 = 63 (left: 4 5 63) -> 5 * 4 = 20 (left: 20 63)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "4 12.6"
                }
            },
            "Step 5": {
                "Step": "7 * 9 = 63 (left: 4 5 63) -> 63 / 5 = 12.6 (left: 4 12.6) -> 4 / 12.6 = 0.31746031746 (left: 0.31746031746)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 9 = 63 (left: 4 5 63) -> 63 / 5 = 12.6 (left: 4 12.6) -> 4 / 12.6 = 0.31746031746 (left: 0.31746031746) -> 0.31746031746 * 2 = 0.63492063492",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 * 7 = 35 (left: 4 9 35)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 7 9"
                }
            },
            "Step 1": {
                "Step": "5 + 7 = 12 (left: 4 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 7 = 12 (left: 4 9) -> 9 - 4 = 5 (left: 5 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "5 9"
                }
            },
            "Step 3": {
                "Step": "5 + 7 = 12 (left: 4 9) -> 9 - 4 = 5 (left: 5 9) -> 9 - 5 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 7 = 12 (left: 4 9) -> 9 - 4 = 5 (left: 5 9) -> 9 - 5 = 4 (left: 4) -> 4 + 4 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "4 12.6"
                }
            },
            "Step 5": {
                "Step": "7 * 9 = 63 (left: 4 5 63) -> 63 / 5 = 12.6 (left: 4 12.6) -> 12.6 / 4 = 3.15 (left: 3.15 12.6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 9 = 63 (left: 4 5 63) -> 63 / 5 = 12.6 (left: 4 12.6) -> 12.6 / 4 = 3.15 (left: 3.15 12.6) -> 15.75 / 12.6 = 1.25 (left:",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 - 5 = -1 (left:",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 9"
                }
            },
            "Step 1": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 3 + 7 = 10 (left: 7 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 3 + 7 = 10 (left: 7 10) -> 7 + 10 = 17 (left: 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 9"
                }
            },
            "Step 3": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> 2.25 + 9 = 11.25 (left: 11.25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "4 12.6"
                }
            },
            "Step 5": {
                "Step": "7 * 9 = 63 (left: 4 5 63) -> 63 / 5 = 12.6 (left: 4 12.6) -> 12.6 / 4 = 3.15 (left: 3.15)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 9 = 63 (left: 4 5 63) -> 63 / 5 = 12.6 (left: 4 12.6) -> 12.6 / 4 = 3.15 (left: 3.15) -> 3 + 15 = 18 (left: 15 18)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 * 5 = 20 (left: 7 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 9"
                }
            },
            "Step 1": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> Input: 5 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 12 9"
                }
            },
            "Step 3": {
                "Step": "5 + 7 = 12 (left: 4 12 9) -> 12 - 4 = 8 (left: 8 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 7 = 12 (left: 4 12 9) -> 12 - 4 = 8 (left: 8 9) -> 10 * 5 = 50",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "4 12.6"
                }
            },
            "Step 5": {
                "Step": "7 * 9 = 63 (left: 4 5 63) -> 63 / 5 = 12.6 (left: 4 12.6) -> 4 - 12.6 = -8.6 (left: -8.6 12.6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 9 = 63 (left: 4 5 63) -> 63 / 5 = 12.6 (left: 4 12.6) -> 4 - 12.6 = -8.6 (left: -8.6 12.6) -> -8.6 - 12.6 = -21.2 (left: -21.2)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "4 + 4 = 8"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "4 + 5 = 9 (left: 7 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 5 16"
                }
            },
            "Step 1": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 5 * 4 = 20 (left: 20 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 5 * 4 = 20 (left: 20 16) -> 20 - 16 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 9"
                }
            },
            "Step 3": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 4 + 9 = 13 (left: 9 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 4 + 9 = 13 (left: 9 13) -> 9 * 13 = 117 (left: 117)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "4 12.6"
                }
            },
            "Step 5": {
                "Step": "7 * 9 = 63 (left: 4 5 63) -> 63 / 5 = 12.6 (left: 4 12.6) -> 12.6 / 4 = 3.15 (left: 3.15)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 9 = 63 (left: 4 5 63) -> 63 / 5 = 12.6 (left: 4 12.6) -> 12.6 / 4 = 3.15 (left: 3.15) -> 15 / 3 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "4 + 4 = 8"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "7 * 9 = 63 (left: 4 5 63)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 7 9"
                }
            },
            "Step 1": {
                "Step": "4 * 5 = 20 (left: 7 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 5 = 20 (left: 7 9) -> 7 * 9 = 63 (left: 63)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 7 9"
                }
            },
            "Step 3": {
                "Step": "5 * 7 = 35 (left: 4 35 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 7 = 35 (left: 4 35 9) -> 4 * 35 = 140 (left: 140 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "4 12.6"
                }
            },
            "Step 5": {
                "Step": "7 * 9 = 63 (left: 4 5 63) -> 63 / 5 = 12.6 (left: 4 12.6) -> Possible next steps:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 9 = 63 (left: 4 5 63) -> 63 / 5 = 12.6 (left: 4 12.6) -> Possible next steps: -> There are no possible next steps with the given input.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "4 + 5 = 9 (left: 7 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 9"
                }
            },
            "Step 1": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 - 4 = 5 (left: 5 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 - 4 = 5 (left: 5 9) -> 5 + 9 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 7 9"
                }
            },
            "Step 3": {
                "Step": "5 * 7 = 35 (left: 4 35 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 7 = 35 (left: 4 35 9) -> 4 + 35 = 39 (left: 9 39)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "4 12.6"
                }
            },
            "Step 5": {
                "Step": "7 * 9 = 63 (left: 4 5 63) -> 63 / 5 = 12.6 (left: 4 12.6) -> 4 * 12.6 = 50.4 (left: 50.4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 9 = 63 (left: 4 5 63) -> 63 / 5 = 12.6 (left: 4 12.6) -> 4 * 12.6 = 50.4 (left: 50.4) -> 50.4 / 2 = 25.2",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "5 + 7 = 12 (left: 4 12 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 9"
                }
            },
            "Step 1": {
                "Step": "5 * 7 = 35 (left: 4 9) -> Input: 3 6 9",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 7 = 35 (left: 4 9) -> Input: 3 6 9 -> 3 + 6 = 9 (left: 9 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 9"
                }
            },
            "Step 3": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 4 - 9 = -5 (left: -5 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 4 - 9 = -5 (left: -5 9) -> -5 / 9 = -0.55555555556 (left: -0.55555555556)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "4 12.6"
                }
            },
            "Step 5": {
                "Step": "7 * 9 = 63 (left: 4 5 63) -> 63 / 5 = 12.6 (left: 4 12.6) -> 4 + 12.6 = 16.6 (left: 16.6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 9 = 63 (left: 4 5 63) -> 63 / 5 = 12.6 (left: 4 12.6) -> 4 + 12.6 = 16.6 (left: 16.6) -> There are no possible next steps for the number 16.6 as it is already a single value.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "7 + 9 = 16 (left: 4 5 16)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 7 9"
                }
            },
            "Step 1": {
                "Step": "4 * 5 = 20 (left: 7 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 5 = 20 (left: 7 9) -> 7 + 9 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 7 9"
                }
            },
            "Step 3": {
                "Step": "4 * 5 = 20 (left: 7 9 20)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 * 5 = 20 (left: 7 9 20) -> ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "4 12.6"
                }
            },
            "Step 5": {
                "Step": "7 * 9 = 63 (left: 4 5 63) -> 63 / 5 = 12.6 (left: 4 12.6) -> 4 + 12.6 = 16.6 (left: 16.6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 9 = 63 (left: 4 5 63) -> 63 / 5 = 12.6 (left: 4 12.6) -> 4 + 12.6 = 16.6 (left: 16.6) -> There are no possible next steps for the input 16.6 since it is a single number and not an equation or set of numbers to work with.",
                "Pruning": null
            }
        },
        "Input": "4 5 7 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "911": {
        "puzzle": "1 2 8 13",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 8 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 8 13"
                }
            },
            "Step 1": {
                "Step": "8 - 2 = 6 (left: 1 6 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 2 = 6 (left: 1 6 13) -> 1 + 6 = 7 (left: 7 13)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 * 13 = 312 (left: 312)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "8 10 13"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10 13) -> 8 + 10 = 18 (left: 18 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10 13) -> 8 + 10 = 18 (left: 18 13) -> 18 * 13 = 234 (left: 234)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 2 = 11 (left: 1 8 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 8 13"
                }
            },
            "Step 1": {
                "Step": "8 + 2 = 10 (left: 1 10 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 + 2 = 10 (left: 1 10 13) -> 13 - 1 = 12 (left: 10 12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 / 13 = 0.8461538461538461 (left: 0.8461538461538461)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "8 10 13"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10 13) -> 8 * 10 = 80 (left: 80 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10 13) -> 8 * 10 = 80 (left: 80 13) -> 80 * 13 = 1040 (left: 1040)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 2 = 11 (left: 1 8 ",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 * 13 = 312 (left: 312)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 8 "
                }
            },
            "Step 3": {
                "Step": "13 - 2 = 11 (left: 1 8  -> 1 * 8 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 2 = 11 (left: 1 8  -> 1 * 8 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "8 10 13"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10 13) -> 13 / 10 = 1.3 (left: 1.3 ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10 13) -> 13 / 10 = 1.3 (left: 1.3  -> 1.3 / 1 = 1.3 (left: )",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 * 8 = 16 (left: 1 16 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 8 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 8 13) -> 8 - 13 = -5 (left: -5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 8 13"
                }
            },
            "Step 3": {
                "Step": "13 - 8 = 5 (left: 1 5 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 8 = 5 (left: 1 5  -> 5 / 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "8 10 13"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10 13) -> 13 / 8 = 1.625 (left: 1.625)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10 13) -> 13 / 8 = 1.625 (left: 1.625) -> There is only one number, so there are no possible next steps.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 8 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 * 13 = 312 (left: 312)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 + 13 = 37 (left: 37)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "8 10 13"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10 13) -> 8 / 10 = 0.8 (",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10 13) -> 8 / 10 = 0.8 ( -> 8 * 10 = 80 ",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "13 / 1 = 13 (left: 2 8 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 8 13"
                }
            },
            "Step 1": {
                "Step": "13 - 1 = 12 (left: 2 8 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 1 = 12 (left: 2 8 12) -> 8 / 2 = 4 (left: 4 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 16 13"
                }
            },
            "Step 3": {
                "Step": "2 * 8 = 16 (left: 1 16 13) -> 16 / 1 = 16 (left: 16 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 8 = 16 (left: 1 16 13) -> 16 / 1 = 16 (left: 16 13) -> 13 / 16 = 0.81 (left: 0.81)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "8 10 13"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10 13) -> Input:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10 13) -> Input: -> There seems to be some confusion with the input. Can you please provide the numbers again?",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 2 8 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 8 "
                }
            },
            "Step 1": {
                "Step": "13 - 2 = 11 (left: 1 8  -> 1 * 8 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 2 = 11 (left: 1 8  -> 1 * 8 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5) -> 5 / 3 = 1.6666666666666667 (left: 1.6666666666666667)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "8 10 13"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10 13) -> 8 + 10 = 18 (left: 18 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10 13) -> 8 + 10 = 18 (left: 18 13) -> 18 * 13 = 234 (left: 234)",
                "Pruning": "NA"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "2 * 8 = 16 (left: 1 16 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 8 / 3 = 2.67 (left: 2.67 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 8 / 3 = 2.67 (left: 2.67 13) -> 13 - 2.67 = 10.33 (left: 10.33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 8 13"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 8 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10 13)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "8 10 13"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10 13) -> 10 + 13 = 23 (left: 8 23)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10 13) -> 10 + 13 = 23 (left: 8 23) -> 23 / 8 = 2.875 (left: 2.875)",
                "Pruning": "NA"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "2 * 8 = 16 (left: 1 16 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 8 - 3 = 5 (left: 5 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 8 - 3 = 5 (left: 5 13) -> 13 / 5 = 2.6 (left: 2.6)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 8 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 8 11) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "8 10 13"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10 13) -> 10 * 13 = 130 (left: 8 130)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10 13) -> 10 * 13 = 130 (left: 8 130) -> 130 - 8 = 122 (left: 122)",
                "Pruning": "NA"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "8 + 2 = 10 (left: 1 10 13)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 8 / 3 = 2.66666666667 (left: 2.66666666667 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 8 / 3 = 2.66666666667 (left: 2.66666666667 13) -> 13 - 2.66666666667 = 10.33333333333 (left: 10.33333333333 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 8 13"
                }
            },
            "Step 3": {
                "Step": "13 - 1 = 12 (left: 2 8 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 1 = 12 (left: 2 8 12) -> 8 - 2 = 6 (left: 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "8 10 13"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10 13) -> 13 - 8 = 5 (left: 8 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10 13) -> 13 - 8 = 5 (left: 8 5) -> 8 * 5 = 40 (left: 40)",
                "Pruning": "NA"
            }
        },
        "Input": "1 2 8 13",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "912": {
        "puzzle": "4 6 6 9",
        "Agent 0": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 6 6 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 5 6 6) -> 6 / 5 = 1.2 (left: 1.2 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 5 6 6) -> 6 / 5 = 1.2 (left: 1.2 6) -> 1.2 - 6 = -4.8 (left: -4.8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 4 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "4 6"
                }
            },
            "Step 5": {
                "Step": "9 - 4 = 5 (left: 5 6 6) -> 6 / 6 = 1 (left: 5 1 6) -> 5 - 1 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "4 6"
                }
            },
            "Step 6": {
                "Step": "9 - 4 = 5 (left: 5 6 6) -> 6 / 6 = 1 (left: 5 1 6) -> 5 - 1 = 4 (left: 4 6) -> 4 + 6 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "9 40.5"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 6 = 24 (left: 24 6 9)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "24 6 9"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 9 = 2.67 (left: 6 2.67)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 9 = 2.67 (left: 6 2.67) -> 6 - 2.67 = 3.33 (left: 3.33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 6 9"
                }
            },
            "Step 3": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 9 + 6 = 15 (left: 6 15)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 9 + 6 = 15 (left: 6 15) -> 6 + 15 = 21 (left: 21)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "5 10"
                }
            },
            "Step 5": {
                "Step": "9 - 4 = 5 (left: 4 6 5) -> 4 + 6 = 10 (left: 5 10) -> 5 * 10 = 50 (left: 10 50)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 4 = 5 (left: 4 6 5) -> 4 + 6 = 10 (left: 5 10) -> 5 * 10 = 50 (left: 10 50) -> 50 / 10 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "9 40.5"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 6 6 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 6 9"
                }
            },
            "Step 1": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 9 + 6 = 15 (left: 6 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 9 + 6 = 15 (left: 6 15) -> 6 + 15 = 21 (left: 21)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 5 6 6) -> 6 / 5 = 1.2 (left: 1.2 6 6)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 4 = 5 (left: 5 6 6) -> 6 / 5 = 1.2 (left: 1.2 6 6) -> 6 - 1.2 = 4.8 (left: 4.8 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "4 6"
                }
            },
            "Step 5": {
                "Step": "9 - 4 = 5 (left: 5 6 6) -> 6 / 6 = 1 (left: 5 1 6) -> 5 - 1 = 4 (left: 4 6) -> 4 + 6 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "4 6"
                }
            },
            "Step 6": {
                "Step": "9 - 4 = 5 (left: 5 6 6) -> 6 / 6 = 1 (left: 5 1 6) -> 5 - 1 = 4 (left: 4 6) -> 6 - 4 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "9 40.5"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 / 4 = 1.5 (left",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 6 6 9"
                }
            },
            "Step 1": {
                "Step": "6 / 4 = 1.5 (left: 1.5 6 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 4 = 1.5 (left: 1.5 6 9) -> 9 - 6 = 3 (left: 1.5 3 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1.5 3 9"
                }
            },
            "Step 3": {
                "Step": "6 / 4 = 1.5 (left: 1.5 6 9) -> 9 - 6 = 3 (left: 1.5 3 9) -> 9 - 1.5 = 7.5 (left: 7.5 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 / 4 = 1.5 (left: 1.5 6 9) -> 9 - 6 = 3 (left: 1.5 3 9) -> 9 - 1.5 = 7.5 (left: 7.5 9) -> 7.5 - 9 = -1.5 (left: -1.5)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "1.5 3 9"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "4 6"
                }
            },
            "Step 5": {
                "Step": "9 - 4 = 5 (left: 5 6 6) -> 6 / 6 = 1 (left: 5 1 6) -> 5 - 1 = 4 (left: 4 6) -> 4 + 6 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "4 6"
                }
            },
            "Step 6": {
                "Step": "9 - 4 = 5 (left: 5 6 6) -> 6 / 6 = 1 (left: 5 1 6) -> 5 - 1 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "9 40.5"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 / 4 = 1.5 (left: 1.5 6 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "24 6 9"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 9 = 2.67 (left: 2.67 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 9 = 2.67 (left: 2.67 6) -> Input: 3 9 27",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1.5 3 9"
                }
            },
            "Step 3": {
                "Step": "6 / 4 = 1.5 (left: 1.5 6 9) -> 9 - 6 = 3 (left: 1.5 3 9) -> 1.5 + 3 = 4.5 (left: 4.5 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 / 4 = 1.5 (left: 1.5 6 9) -> 9 - 6 = 3 (left: 1.5 3 9) -> 1.5 + 3 = 4.5 (left: 4.5 9) -> 4.5 * 9 = 40.5 (left: 9 40.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "4 6"
                }
            },
            "Step 5": {
                "Step": "9 - 4 = 5 (left: 5 6 6) -> 6 / 6 = 1 (left: 5 1 6) -> 5 - 1 = 4 (left: 4 6) -> Input: 3 9 27",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 4 = 5 (left: 5 6 6) -> 6 / 6 = 1 (left: 5 1 6) -> 5 - 1 = 4 (left: 4 6) -> Input: 3 9 27 -> 27 / 3 = 9 (left: 9 27)",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "9 - 6 = 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 6 6 9"
                }
            },
            "Step 1": {
                "Step": "6 - 4 = 2 (left: 2 6 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 4 = 2 (left: 2 6 9) -> 9 / 2 = 4.5 (left: 6 4.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 5 6 6) -> 6 / 5 = 1.2 (left: 1 1.2)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 4 = 5 (left: 5 6 6) -> 6 / 5 = 1.2 (left: 1 1.2) -> 1 / 1.2 = 0.8333333333333334 (left: 0.8333333333333334)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "4 6"
                }
            },
            "Step 5": {
                "Step": "9 - 4 = 5 (left: 5 6 6) -> 6 / 6 = 1 (left: 5 1 6) -> 5 - 1 = 4 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "4 6"
                }
            },
            "Step 6": {
                "Step": "9 - 4 = 5 (left: 5 6 6) -> 6 / 6 = 1 (left: 5 1 6) -> 5 - 1 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "9 40.5"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "9 - 4 = 5 (left: 5 6 6)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "24 6 9"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 9 - 6 = 3 (left: 3 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 9 - 6 = 3 (left: 3 9) -> Input: 4 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 6 6 9"
                }
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 4 6 5)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 4 = 5 (left: 4 6 5) -> 4 + 6 = 10 (left: 5 10)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "5 10"
                }
            },
            "Step 5": {
                "Step": "9 - 4 = 5 (left: 4 6 5) -> 4 + 6 = 10 (left: 5 10) -> 5 + 10 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 4 = 5 (left: 4 6 5) -> 4 + 6 = 10 (left: 5 10) -> 5 + 10 = 15 (left: 15) -> There are no possible next steps with just one number.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 6 6 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 6 6 9"
                }
            },
            "Step 1": {
                "Step": "6 - 4 = 2 (left: 2 6 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 4 = 2 (left: 2 6 9) -> 2 + 6 = 8 (left: 8 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 6 6 9"
                }
            },
            "Step 3": {
                "Step": "6 - 4 = 2 (left: 2 6 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 - 4 = 2 (left: 2 6 9) -> 6 + 9 = 15 (left: 2 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "4 6"
                }
            },
            "Step 5": {
                "Step": "9 - 4 = 5 (left: 5 6 6) -> 6 / 6 = 1 (left: 5 1 6) -> 5 - 1 = 4 (left: 4 6) -> Possible next steps:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 4 = 5 (left: 5 6 6) -> 6 / 6 = 1 (left: 5 1 6) -> 5 - 1 = 4 (left: 4 6) -> Possible next steps: -> There are no possible next steps with the given input.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 6 6 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 5 6 6) -> 6 - 6 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 5 6 6) -> 6 - 6 = 0 (left: 0) -> There are no possible next steps as there are no numbers provided in the input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 5 6 6) -> 6 / 6 = 1 (left: 5 1 6)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 4 = 5 (left: 5 6 6) -> 6 / 6 = 1 (left: 5 1 6) -> 5 - 1 = 4 (left: 4 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "4 6"
                }
            },
            "Step 5": {
                "Step": "9 - 4 = 5 (left: 5 6 6) -> 6 / 6 = 1 (left: 5 1 6) -> 5 - 1 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "4 6"
                }
            },
            "Step 6": {
                "Step": "9 - 4 = 5 (left: 5 6 6) -> 6 / 6 = 1 (left: 5 1 6) -> 5 - 1 = 4 (left: 4 6) -> 6 - 4 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "9 40.5"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "6 / 4 = 1.5 (left",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "24 6 9"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 6 = 4 (left: 4 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 6 = 4 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 6 6 9"
                }
            },
            "Step 3": {
                "Step": "6 / 4 = 1.5 (left: 1.5 6 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 / 4 = 1.5 (left: 1.5 6 9) -> 9 / 1.5 = 6 (left: 6 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "4 6"
                }
            },
            "Step 5": {
                "Step": "9 - 4 = 5 (left: 5 6 6) -> 6 / 6 = 1 (left: 5 1 6) -> 5 - 1 = 4 (left: 4 6) -> Input: 10 5 3",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 4 = 5 (left: 5 6 6) -> 6 / 6 = 1 (left: 5 1 6) -> 5 - 1 = 4 (left: 4 6) -> Input: 10 5 3 -> 5 + 3 = 8 (left: 8 10)",
                "Pruning": null
            }
        },
        "Input": "4 6 6 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "913": {
        "puzzle": "1 4 4 8",
        "Agent 0": {
            "Step 0": {
                "Step": "8 - 4 = 4 (left: 1 4 4)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 8 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 8 12) -> 12 - 8 = 4 (left: 8 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 4 8"
                }
            },
            "Step 3": {
                "Step": "8 - 4 = 4 (left: 1 4 4)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 - 4 = 4 (left: 1 4 4) -> 4 + 1 = 5 (left: 4 5)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8) -> 8 - 4 = 4 (left: 4 8)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "1 + 4 = 5 (left: 4 5 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 4 4"
                }
            },
            "Step 1": {
                "Step": "8 - 4 = 4 (left: 1 4 4) -> 4 - 1 = 3 (left: 3 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 4 = 4 (left: 1 4 4) -> 4 - 1 = 3 (left: 3 4) -> 4 / 3 = 1.33 (left: 1.33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "8 24"
                }
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 8 32) -> 32 - 8 = 24 (left: 8 24) -> 8 * 3 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "4 8 8"
                }
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "2 8 8"
                }
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8) -> 8 / 2 = 4 (left: 4 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8) -> 8 / 2 = 4 (left: 4 4) -> 4 / 4 = 1 (left: 1)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 - 1 = 3 (left: 3 4 ",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 8 32)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 8 32) -> 32 - 8 = 24 (left: 8 24)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 4 8"
                }
            },
            "Step 3": {
                "Step": "1 + 4 = 5 (left: 4 5 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 4 5 8) -> 5 / 4 = 1.25 (left: 1.25 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "2 8 8"
                }
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8) -> 8 - 2 = 6 (left: 6 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8) -> 8 - 2 = 6 (left: 6 8) -> 6 + 8 = 14 (left: 14)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 / 1 = 4 (left: 4 4 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 4 8"
                }
            },
            "Step 1": {
                "Step": "8 - 4 = 4 (left: 1 4 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 4 = 4 (left: 1 4 4) -> 4 / 1 = 4 (left: 4 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 4 4"
                }
            },
            "Step 3": {
                "Step": "8 - 4 = 4 (left: 1 4 4) -> 4 * 1 = 4 (left: 4 4)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 - 4 = 4 (left: 1 4 4) -> 4 * 1 = 4 (left: 4 4) -> 4 + 4 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "2 8 8"
                }
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8) -> 2 * 8 = 16 (left: 8 16)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8) -> 2 * 8 = 16 (left: 8 16) -> 8 + 16 = 24 (left: 24)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "8 / 4 = 2 (left: 2 4 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 4 8"
                }
            },
            "Step 1": {
                "Step": "4 / 1 = 4 (left: 4 4 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 + 4 = 8 (left: 8 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "2 8 8"
                }
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8) -> 2 + 8 = 10 (left: 8 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8) -> 2 + 8 = 10 (left: 8 10) -> 8 / 10 = 0.8 (left: 0.8)",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "2 8 8"
                },
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "2 8 8"
                }
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8) -> 2 * 8 = 16 (left: 8 16)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8) -> 2 * 8 = 16 (left: 8 16) -> 16 - 8 = 8 (left: 8)",
                "Pruning": "NA"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "4 / 1 = 4 (left: 4 4 8)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 4 8"
                }
            },
            "Step 3": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 8 / 4 = 2 (left: 2 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 8 / 4 = 2 (left: 2 8) -> 8 - 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "2 8 8"
                }
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8) -> 8 / 2 = 4 (left: 4 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8) -> 8 / 2 = 4 (left: 4 8) -> 4 + 8 = 12 (left: 12)",
                "Pruning": "NA"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "8 - 4 = 4 (left: 1 4 4)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 4 8"
                }
            },
            "Step 1": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 + 4 = 8 (left: 8 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 + 4 = 8 (left: 8 8) -> 8 / 8 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 4 8"
                }
            },
            "Step 3": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 - 4 = 0 (left: 0 4 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 - 4 = 0 (left: 0 4 8) -> 4 * 2 = 8 (left: 8 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "8 24"
                }
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 8 32) -> 32 - 8 = 24 (left: 8 24) -> 8 * 24 = 192 (left: 192)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "8 24"
                }
            },
            "Step 6": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 8 32) -> 32 - 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3)",
                "Pruning": "NA"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "4 / 1 = 4 (left: 4 4 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 4 4"
                }
            },
            "Step 1": {
                "Step": "8 - 4 = 4 (left: 1 4 4) -> 1 + 4 = 5 (left: 4 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 4 = 4 (left: 1 4 4) -> 1 + 4 = 5 (left: 4 5) -> 4 + 5 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 4 8"
                }
            },
            "Step 3": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 8 - 4 = 4 (left: 4 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 8 - 4 = 4 (left: 4 8) -> 4 + 8 = 12 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "2 8 8"
                }
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8) -> 8 + 2 = 10 (left: 10 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8) -> 8 + 2 = 10 (left: 10 8) -> 10 / 8 = 1.25 (left: 1.25 8)",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 4 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12) -> 8 * 12 = 96 (left: 96)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 4 4"
                }
            },
            "Step 3": {
                "Step": "8 - 4 = 4 (left: 1 4 4) -> 1 + 4 = 5 (left: 4 5)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 - 4 = 4 (left: 1 4 4) -> 1 + 4 = 5 (left: 4 5) -> 4 + 5 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> Possible",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> Possible -> It seems like the input is missing. Could you please provide the input for which you would like to see the possible next steps?",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "4 + 4 = 8 (left: 4 8 8)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 4 4"
                }
            },
            "Step 1": {
                "Step": "8 - 4 = 4 (left: 1 4 4) -> 1 + 4 = 5 (left: 4 4 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 4 = 4 (left: 1 4 4) -> 1 + 4 = 5 (left: 4 4 5) -> 5 * 4 = 20 (left: 4 20)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 4 8"
                }
            },
            "Step 3": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8) -> 1 + 8 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8) -> 2 + 8 = 10 (left: 8 10)",
                "Pruning": null
            }
        },
        "Input": "1 4 4 8",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "914": {
        "puzzle": "1 5 10 11",
        "Agent 0": {
            "Step 0": {
                "Step": "11 - 5 = 6 (left: 1 6 ",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 10 11"
                }
            },
            "Step 1": {
                "Step": "10 + 1 = 11 (left: 5 11 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 / 5 = 2.2 (left: 2.2 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "3 27"
                }
            },
            "Step 3": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 * 5 = 55 (left: 11 55) -> 9 / 3 = 3 (left: 3 27) -> 27 - 3 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "5 11 11"
                }
            },
            "Step 4": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 - 11 = 0 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "3 27"
                }
            },
            "Step 5": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 * 5 = 55 (left: 11 55) -> 9 / 3 = 3 (left: 3 27) -> 3 + 27 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "3 27"
                }
            },
            "Step 6": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 * 5 = 55 (left: 11 55) -> 9 / 3 = 3 (left: 3 27) -> 3 * 27 = 81 (left: 81)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "There are no possible next steps with the given input."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "1 + 5 = 6 (left: 6 10 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "5 11 11"
                }
            },
            "Step 1": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 - 5 = 6 (left: 6 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 - 5 = 6 (left: 6 11) -> 6 - 11 = -5 (left: -5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "3 27"
                }
            },
            "Step 3": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 * 5 = 55 (left: 11 55) -> 9 / 3 = 3 (left: 3 27) -> Possible next steps:",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 * 5 = 55 (left: 11 55) -> 9 / 3 = 3 (left: 3 27) -> Possible next steps: -> There are no possible next steps with the given input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "3 27"
                }
            },
            "Step 5": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 * 5 = 55 (left: 11 55) -> 9 / 3 = 3 (left: 3 27) -> 3 - ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 * 5 = 55 (left: 11 55) -> 9 / 3 = 3 (left: 3 27) -> 3 -  -> 3 + 8 = 11 (left: - 11)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "11 - 1 = 10 (left: 5 10 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 10 11"
                }
            },
            "Step 1": {
                "Step": "10 + 1 = 11 (left: 11 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 1 = 11 (left: 11 11) -> 11 * 11 = 121 (left: 121)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "3 27"
                }
            },
            "Step 3": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 * 5 = 55 (left: 11 55) -> 9 / 3 = 3 (left: 3 27) -> 3 * 27 = 81 (left: 81)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "5 11 11"
                }
            },
            "Step 4": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 / 5 = 2.2 (left: 2.2 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "3 27"
                }
            },
            "Step 5": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 * 5 = 55 (left: 11 55) -> 9 / 3 = 3 (left: 3 27) -> 3 + 27 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "3 27"
                }
            },
            "Step 6": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 * 5 = 55 (left: 11 55) -> 9 / 3 = 3 (left: 3 27) -> 27 / 3 = 9 (left: 9 27)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 + 1 = 11 (left: 5 11 11)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 10 11"
                }
            },
            "Step 1": {
                "Step": "1 + 5 = 6 (left: 6 10 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 5 = 6 (left: 6 10 11) -> 6 / 10 = 0.6 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "5 11 11"
                }
            },
            "Step 3": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> Input: 3 9 9",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> Input: 3 9 9 -> 3 + 9 = 12 (left: 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "3 27"
                }
            },
            "Step 5": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 * 5 = 55 (left: 11 55) -> 9 / 3 = 3 (left: 3 27) -> 3 * 27 = 81 (left: 81)",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "3 27"
                }
            },
            "Step 6": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 * 5 = 55 (left: 11 55) -> 9 / 3 = 3 (left: 3 27) -> 27 - 3 = 24 (left: 24 27)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 * 10 = 50 (left: 1 50 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "5 10 11"
                }
            },
            "Step 1": {
                "Step": "1 * 5 = 5 (left: 5 10 11) -> 5 + 10 = 15 (left: 11 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 * 5 = 5 (left: 5 10 11) -> 5 + 10 = 15 (left: 11 15) -> 11 - 15 = -4 (left: -4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "6 11"
                }
            },
            "Step 3": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 - 5 = 6 (left: 6 11) -> 11 - 6 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 - 5 = 6 (left: 6 11) -> 11 - 6 = 5 (left: 5) -> There are no possible next steps with the input of 5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "6 11"
                }
            },
            "Step 5": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 - 5 = 6 (left: 6 11) -> 11 - 6 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 - 5 = 6 (left: 6 11) -> 11 - 6 = 5 (left: 5) -> There are no possible next steps with just the number 5.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "11 - 1 = 10 (left: 10 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "5 10 11"
                }
            },
            "Step 1": {
                "Step": "1 * 5 = 5 (left: 5 10 11) -> 10 - 5 = 5 (left: 5 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 * 5 = 5 (left: 5 10 11) -> 10 - 5 = 5 (left: 5 11) -> Input: 3 9 27",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 10 11"
                }
            },
            "Step 3": {
                "Step": "10 + 1 = 11 (left: 5 11 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 - 5 = 6 (left: 6 11 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "3 27"
                }
            },
            "Step 5": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 * 5 = 55 (left: 11 55) -> 9 / 3 = 3 (left: 3 27) -> 3 + 27 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "3 27"
                }
            },
            "Step 6": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 * 5 = 55 (left: 11 55) -> 9 / 3 = 3 (left: 3 27) -> 3 * 27 = 81 (left: 81)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "There are no possible next steps with the input 66."
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "10 + 1 = 11 (left: 5 11 11)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 10 11"
                }
            },
            "Step 1": {
                "Step": "1 + 5 = 6 (left: 6 10 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 5 = 6 (left: 6 10 11) -> 6 + 10 = 16 (left: 16 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "3 27"
                }
            },
            "Step 3": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 * 5 = 55 (left: 11 55) -> 9 / 3 = 3 (left: 3 27) -> 27 / 3 = 9 (left: 9 27)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 * 5 = 55 (left: 11 55) -> 9 / 3 = 3 (left: 3 27) -> 27 / 3 = 9 (left: 9 27) -> 9 * 3 = 27 (left: 27)",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "3 27"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "3 27"
                }
            },
            "Step 5": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 * 5 = 55 (left: 11 55) -> 9 / 3 = 3 (left: 3 27) -> 3 * 27 = 81 (left: 81)",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "3 27"
                }
            },
            "Step 6": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 * 5 = 55 (left: 11 55) -> 9 / 3 = 3 (left: 3 27) -> 27 - 3 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "There are no possible next steps with the input 66."
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "11 - 1 = 10 (left: 5 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 10 11"
                }
            },
            "Step 1": {
                "Step": "10 + 1 = 11 (left: 5 11 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 - 5 = 6 (left: 6 11)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "6 11"
                }
            },
            "Step 3": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 - 5 = 6 (left: 6 11) -> 6 * 11 = 66 (left: 66)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 - 5 = 6 (left: 6 11) -> 6 * 11 = 66 (left: 66) -> There are no possible next steps with the input 66.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "3 27"
                }
            },
            "Step 5": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 * 5 = 55 (left: 11 55) -> 9 / 3 = 3 (left: 3 27) -> 3 - 27 = -24 (left: -24)",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "3 27"
                }
            },
            "Step 6": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 * 5 = 55 (left: 11 55) -> 9 / 3 = 3 (left: 3 27) -> 27 / 3 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "There are no possible next steps with the given input."
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "1 * 5 = 5 (left: 5 10 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 10 11"
                }
            },
            "Step 1": {
                "Step": "1 + 5 = 6 (left: 6 10 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 5 = 6 (left: 6 10 11) -> 10 / 6 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "3 27"
                }
            },
            "Step 3": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 * 5 = 55 (left: 11 55) -> 9 / 3 = 3 (left: 3 27) -> 3 + 27 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "5 11 11"
                }
            },
            "Step 4": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 / 5 = 2.2 (left: 2.2 11)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "3 27"
                }
            },
            "Step 5": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 * 5 = 55 (left: 11 55) -> 9 / 3 = 3 (left: 3 27) -> 27 / 3 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "3 27"
                }
            },
            "Step 6": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 * 5 = 55 (left: 11 55) -> 9 / 3 = 3 (left: 3 27) -> 27 / 3 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "There are no possible next steps with the input 66."
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "1 * 5 = 5 (left: 5 10 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "5 11 11"
                }
            },
            "Step 1": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 * 5 = 55 (left: 11 55)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 * 5 = 55 (left: 11 55) -> 9 / 3 = 3 (left: 3 27)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 3": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 1 + 6 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 1 + 6 = 7 (left: 7) -> 7 / 8 = 0.875 (left: 0.875)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "3 27"
                }
            },
            "Step 5": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 * 5 = 55 (left: 11 55) -> 9 / 3 = 3 (left: 3 27) -> 27 - 3 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "3 27"
                }
            },
            "Step 6": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 * 5 = 55 (left: 11 55) -> 9 / 3 = 3 (left: 3 27) -> 27 / 3 = 9 (left: 9 27)",
                "Pruning": null
            }
        },
        "Input": "1 5 10 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "915": {
        "puzzle": "3 4 6 11",
        "Agent 0": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 3 10 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "11 - 4 = 7 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 4 = 7 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9) -> 7 / 9 = 0.7777777777777778 (left: 0.7777777777777778)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "1 11"
                }
            },
            "Step 3": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 7 - 6 = 1 (left: 1 11) -> 11 / 1 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 7 - 6 = 1 (left: 1 11) -> 11 / 1 = 11 (left: 11) -> 11 + 2 = 13",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "10 14"
                }
            },
            "Step 5": {
                "Step": "4 + 6 = 10 (left: 3 10 11) -> 11 + 3 = 14 (left: 10 14) -> 10 - 14 = -4 (left: -4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 6 = 10 (left: 3 10 11) -> 11 + 3 = 14 (left: 10 14) -> 10 - 14 = -4 (left: -4) -> There are no possible next steps with -4. The input does not match any of the previous calculations."
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 6 7 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "11 - 4 = 7 (left: 3 6 7) -> Possible",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 4 = 7 (left: 3 6 7) -> Possible -> It seems like the input is missing. Could you please provide the input so that I can generate the possible next steps for you?",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 6 11"
                }
            },
            "Step 3": {
                "Step": "3 * 4 = 12 (left: 6 12 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 4 = 12 (left: 6 12 11) -> 6 + 12 = 18 (left: 11 18)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "10 14"
                }
            },
            "Step 5": {
                "Step": "4 + 6 = 10 (left: 3 10 11) -> 11 + 3 = 14 (left: 10 14) -> 10 * 14 = 140 (left: 140)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 6 = 10 (left: 3 10 11) -> 11 + 3 = 14 (left: 10 14) -> 10 * 14 = 140 (left: 140) -> 40 - 1 = 39 (left: 39)"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "11 - 6 = 5 (left: 3 4 5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 6 11"
                }
            },
            "Step 1": {
                "Step": "4 + 6 = 10 (left: 3 10 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 6 = 10 (left: 3 10 11) -> 11 + 3 = 14 (left: 10 14)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 6 11"
                }
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 4 6 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 3 = 8 (left: 4 6 8) -> Input: 3 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "10 14"
                }
            },
            "Step 5": {
                "Step": "4 + 6 = 10 (left: 3 10 11) -> 11 + 3 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 6 = 10 (left: 3 10 11) -> 11 + 3 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24) -> Answer: ((3 + 4) + 6) + 11 = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 + 4 = 10 (left: 3 10 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 6 11"
                }
            },
            "Step 1": {
                "Step": "11 - 6 = 5 (left: 3 4 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 6 = 5 (left: 3 4 5) -> 4 + 5 = 9 (left: 3 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "1 11"
                }
            },
            "Step 3": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 7 - 6 = 1 (left: 1 11) -> 1 + 11 = 12 (left: 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 7 - 6 = 1 (left: 1 11) -> 1 + 11 = 12 (left: 11) -> There are no possible next steps with the input 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "1 11"
                }
            },
            "Step 5": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 7 - 6 = 1 (left: 1 11) -> 12 - 3 =",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 7 - 6 = 1 (left: 1 11) -> 12 - 3 = -> 12 - 3 = 9"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 * 4 = 12 (left: 6 11 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 6 11"
                }
            },
            "Step 1": {
                "Step": "6 + 4 = 10 (left: 3 10 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 4 = 10 (left: 3 10  -> 10 - 3 = 7 (left: 7 10)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 6 11"
                }
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 3 11 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 3 11  -> 3 + 11 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "10 14"
                }
            },
            "Step 5": {
                "Step": "4 + 6 = 10 (left: 3 10 11) -> 11 + 3 = 14 (left: 10 14) -> 10 * 14 = 140 (left: 140)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 6 = 10 (left: 3 10 11) -> 11 + 3 = 14 (left: 10 14) -> 10 * 14 = 140 (left: 140) -> 140 - 40 = 100 (left: 40 100)"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 6 7 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 6 11"
                }
            },
            "Step 1": {
                "Step": "6 - 3 = 3 (left: 3 4 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 3 = 3 (left: 3 4 11) -> 11 / 4 = 2.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "10 14"
                }
            },
            "Step 3": {
                "Step": "4 + 6 = 10 (left: 3 10 11) -> 11 + 3 = 14 (left: 10 14) -> 10 - 14 = -4 (left: -4 14)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 6 = 10 (left: 3 10 11) -> 11 + 3 = 14 (left: 10 14) -> 10 - 14 = -4 (left: -4 14) -> 14 - (-4) = 18 (left: 18)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "10 14"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "10 14"
                }
            },
            "Step 5": {
                "Step": "4 + 6 = 10 (left: 3 10 11) -> 11 + 3 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 6 = 10 (left: 3 10 11) -> 11 + 3 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24) -> Answer: (3 + (4 + 6)) + 11 = 24"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 3 10 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 6 11"
                }
            },
            "Step 1": {
                "Step": "11 - 4 = 7 (left: 3 6 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 4 = 7 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 6 11"
                }
            },
            "Step 3": {
                "Step": "3 + 4 = 7 (left: 6 7 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 7 * 11 = 77 (left: 6 77)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "1 11"
                }
            },
            "Step 5": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 7 - 6 = 1 (left: 1 11) -> 1 * 11 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 7 - 6 = 1 (left: 1 11) -> 1 * 11 = 11 (left: 11) -> There are no possible next steps with the input 11."
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "6 * 3 = 18 (left: 4 11 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "11 - 4 = 7 (left: 3 6 7) -> 6 - 3 = 3 (left: 3 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 4 = 7 (left: 3 6 7) -> 6 - 3 = 3 (left: 3 7) -> 7 - 3 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "1 11"
                }
            },
            "Step 3": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 7 - 6 = 1 (left: 1 11) -> 11 / 1 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 7 - 6 = 1 (left: 1 11) -> 11 / 1 = 11 (left: 11) -> 11 + 2 = 13",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "1 11"
                }
            },
            "Step 5": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 7 - 6 = 1 (left: 1 11) -> 1 + 11 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 7 - 6 = 1 (left: 1 11) -> 1 + 11 = 12 (left: 12) -> 12 * 2 = 24 (left: 8 24)"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 3 10 ",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "11 - 4 = 7 (left: 3 6 7) -> 6 / 3 = 2 (left: 2 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 4 = 7 (left: 3 6 7) -> 6 / 3 = 2 (left: 2 7) -> 2 + 7 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 6 11"
                }
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 4 6 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 3 = 8 (left: 4 6 8) -> 4 + 6 = 10 (left: 8 10)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "10 14"
                }
            },
            "Step 5": {
                "Step": "4 + 6 = 10 (left: 3 10 11) -> 11 + 3 = 14 (left: 10 14) -> 14 - 10 = 4 (left: 4 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 6 = 10 (left: 3 10 11) -> 11 + 3 = 14 (left: 10 14) -> 14 - 10 = 4 (left: 4 14) -> 14 - 4 = 10 (left: 10)"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 3 6 7)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 6 11"
                }
            },
            "Step 1": {
                "Step": "3 + 4 = 7 (left: 6 7 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 7 - 6 = 1 (left: 1 11)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "10 14"
                }
            },
            "Step 3": {
                "Step": "4 + 6 = 10 (left: 3 10 11) -> 11 + 3 = 14 (left: 10 14) -> 10 - 14 = -4 (left: -4 14)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 6 = 10 (left: 3 10 11) -> 11 + 3 = 14 (left: 10 14) -> 10 - 14 = -4 (left: -4 14) -> -4 * 14 = -56 (left: -56)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "10 14"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "10 14"
                }
            },
            "Step 5": {
                "Step": "4 + 6 = 10 (left: 3 10 11) -> 11 + 3 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 14 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 6 = 10 (left: 3 10 11) -> 11 + 3 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 14 24) -> 14 - 24 = -10 (left: -10)"
            }
        },
        "Input": "3 4 6 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "916": {
        "puzzle": "2 4 8 9",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 6 8 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 8 9"
                }
            },
            "Step 1": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 9 / 4 = 2.",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 9 / 4 = 2. -> 9 - 4 = 5 (left: 5 2)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "0 9"
                }
            },
            "Step 3": {
                "Step": "4 * 2 = 8 (left: 8 8 9) -> 8 - 8 = 0 (left: 0 9) -> 9 * 0 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 * 2 = 8 (left: 8 8 9) -> 8 - 8 = 0 (left: 0 9) -> 9 * 0 = 0 (left: 0) -> There are no possible next steps as there is no input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "0 9"
                }
            },
            "Step 5": {
                "Step": "4 * 2 = 8 (left: 8 8 9) -> 8 - 8 = 0 (left: 0 9) -> 0 + 9 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 2 = 8 (left: 8 8 9) -> 8 - 8 = 0 (left: 0 9) -> 0 + 9 = 9 (left: 9) -> 8 + 9 = 17 (left: 17)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "4 9"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 - 4 = 5 (left: 2 5 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 8 9"
                }
            },
            "Step 1": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 9 - 4 = 5 (left: 4 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 9 - 4 = 5 (left: 4 5) -> 5 - 4 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 8 9"
                }
            },
            "Step 3": {
                "Step": "4 * 2 = 8 (left: 8 8 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 * 2 = 8 (left: 8 8 9) -> 8 * 8 = 64 (left: 9 64)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "4 9"
                }
            },
            "Step 5": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 4 + 8 = 12 (left: 8 9 12) -> 12 - 8 = 4 (left: 4 9) -> 9 - 4 = 5 (left: 5 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 4 + 8 = 12 (left: 8 9 12) -> 12 - 8 = 4 (left: 4 9) -> 9 - 4 = 5 (left: 5 9) -> 9 - 5 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "4 9"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "8 - 4 = 4 (left: 2 4 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 1": {
                "Step": "9 - 2 = 7 (left: 7 8 9) -> 8 / 9 = 0.888 (left: 7 0.888)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 2 = 7 (left: 7 8 9) -> 8 / 9 = 0.888 (left: 7 0.888) -> 7 * 0.888 = 6.216 (left: 6.216)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "5 2"
                }
            },
            "Step 3": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 9 / 4 = 2. -> 9 - 4 = 5 (left: 5 2) -> 5 + 2 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "0 9"
                }
            },
            "Step 4": {
                "Step": "4 * 2 = 8 (left: 8 8 9) -> 8 - 8 = 0 (left: 0 9) -> 0 + 9 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "4 9"
                }
            },
            "Step 5": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 4 + 8 = 12 (left: 8 9 12) -> 12 - 8 = 4 (left: 4 9) -> Possible next steps:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 4 + 8 = 12 (left: 8 9 12) -> 12 - 8 = 4 (left: 4 9) -> Possible next steps: -> There are no possible next steps with the current input.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "8 - 4 = 4 (left: 2 4 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 8 9"
                }
            },
            "Step 1": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 9 - 4 = 5 (left: 5 8 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 9 - 4 = 5 (left: 5 8 9) -> 5 + 8 = 13 (left: 9 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "4 9"
                }
            },
            "Step 3": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 4 + 8 = 12 (left: 8 9 12) -> 12 - 8 = 4 (left: 4 9) -> 5 - 3 = 2 (",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 4 + 8 = 12 (left: 8 9 12) -> 12 - 8 = 4 (left: 4 9) -> 5 - 3 = 2 ( -> 5 - 3 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "0 9"
                },
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "0 9"
                }
            },
            "Step 5": {
                "Step": "4 * 2 = 8 (left: 8 8 9) -> 8 - 8 = 0 (left: 0 9) -> 3 + 5 = 8 (left: 8 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 2 = 8 (left: 8 8 9) -> 8 - 8 = 0 (left: 0 9) -> 3 + 5 = 8 (left: 8 7) -> 8 - 7 = 1 (left: 1) ",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "4 9"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 * 2 = 8 (left: 8 8 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 8 9"
                }
            },
            "Step 1": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 9 - 4 = 5 (left: 5 8 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 9 - 4 = 5 (left: 5 8 9) -> 9 - 5 = 4 (left: 4 9)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "5 2"
                }
            },
            "Step 3": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 9 / 4 = 2. -> 9 - 4 = 5 (left: 5 2) -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "2 4 1"
                }
            },
            "Step 4": {
                "Step": "9 - 8 = 1 (left: 2 4 1) -> 1 + 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "0 9"
                }
            },
            "Step 5": {
                "Step": "4 * 2 = 8 (left: 8 8 9) -> 8 - 8 = 0 (left: 0 9) -> 9 - 0 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 2 = 8 (left: 8 8 9) -> 8 - 8 = 0 (left: 0 9) -> 9 - 0 = 9 (left: 9) -> 9 - 8 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "4 9"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "9 - 8 = 1 (left: 2 4 1)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 8 - 6 = 2 (left: 2 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 8 - 6 = 2 (left: 2 9) -> 2 + 9 = 11 (left: 9 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 8 9"
                }
            },
            "Step 3": {
                "Step": "8 + 2 = 10 (left: 4 8 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 + 2 = 10 (left: 4 8 10) -> 4 + 8 = 12 (left: 12 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "0 9"
                }
            },
            "Step 5": {
                "Step": "4 * 2 = 8 (left: 8 8 9) -> 8 - 8 = 0 (left: 0 9) -> Possible next steps:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 2 = 8 (left: 8 8 9) -> 8 - 8 = 0 (left: 0 9) -> Possible next steps: -> It seems like the input is missing. Please provide the numbers to calculate the possible next steps.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "9 - 2 = 7 (left: 7 8 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 8 9"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 2 8 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 2 8 5) -> 8 - 2 = 6 (left: 6 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "4 9"
                }
            },
            "Step 3": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 4 + 8 = 12 (left: 8 9 12) -> 12 - 8 = 4 (left: 4 9) -> 4 + 9 = 13 (left: 9 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 4 + 8 = 12 (left: 8 9 12) -> 12 - 8 = 4 (left: 4 9) -> 4 + 9 = 13 (left: 9 13) -> 13 / 9 = 1.4444 (left: 1.4444)",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "0 9"
                },
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "0 9"
                }
            },
            "Step 5": {
                "Step": "4 * 2 = 8 (left: 8 8 9) -> 8 - 8 = 0 (left: 0 9) -> 9 / 0 = undefined (division by zero is not possible)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 2 = 8 (left: 8 8 9) -> 8 - 8 = 0 (left: 0 9) -> 9 / 0 = undefined (division by zero is not possible) -> There are no possible next steps in this scenario since division by zero is undefined.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "4 * 2 = 8 (left: 8 8 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 8 9"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 2 8 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 2 8 5) -> 8 - 5 = 3 (left: 2 3)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "4 9"
                }
            },
            "Step 3": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 9 - 4 = 5 (left: 5 8 9) -> 9 - 5 = 4 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 9 - 4 = 5 (left: 5 8 9) -> 9 - 5 = 4 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> 9 / 2.25 = 4 (left: 4 9)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "4 9"
                }
            },
            "Step 5": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 9 - 4 = 5 (left: 5 8 9) -> 9 - 5 = 4 (left: 4 9) -> 4 * 9 = 36 (left: 9 36)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 9 - 4 = 5 (left: 5 8 9) -> 9 - 5 = 4 (left: 4 9) -> 4 * 9 = 36 (left: 9 36) -> 36 - 9 = 27 (left: 27)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "4 9"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "8 / 2 = 4 (left: 4 8 9)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 8 9"
                }
            },
            "Step 1": {
                "Step": "4 * 2 = 8 (left: 8 8 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 2 = 8 (left: 8 8 9) -> 8 - 8 = 0 (left: 0 9)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 8 9"
                }
            },
            "Step 3": {
                "Step": "9 - 2 = 7 (left: 2 4 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 2 = 7 (left: 2 4  -> 2 * 4 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "4 9"
                }
            },
            "Step 5": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 4 + 8 = 12 (left: 8 9 12) -> 12 - 8 = 4 (left: 4 9) -> 9 - 4 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "4 9"
                }
            },
            "Step 6": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 9 - 4 = 5 (left: 5 8 9) -> 9 - 5 = 4 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> 9 / 2.25 = 4 (left: 4 9) -> 4 * 9 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "4 9"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "4 * 2 = 8 (left: 8 8 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 8 9"
                }
            },
            "Step 1": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 4 + 8 = 12 (left: 8 9 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 4 + 8 = 12 (left: 8 9 12) -> 12 - 8 = 4 (left: 4 9)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "5 2"
                }
            },
            "Step 3": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 9 / 4 = 2. -> 9 - 4 = 5 (left: 5 2) -> 5 - 2 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "4 9"
                }
            },
            "Step 4": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 4 + 8 = 12 (left: 8 9 12) -> 12 - 8 = 4 (left: 4 9) -> 4 + 9 = 13 (left: 9 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "0 9"
                }
            },
            "Step 5": {
                "Step": "4 * 2 = 8 (left: 8 8 9) -> 8 - 8 = 0 (left: 0 9) -> 9 - 0 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 2 = 8 (left: 8 8 9) -> 8 - 8 = 0 (left: 0 9) -> 9 - 0 = 9 (left: 9) -> There are no possible next steps with the input 9.",
                "Pruning": null
            }
        },
        "Input": "2 4 8 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "917": {
        "puzzle": "1 4 5 13",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 4 = 5 (left: 5 5 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 5 13"
                }
            },
            "Step 1": {
                "Step": "1 + 4 = 5 (left: 5 5 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 3 + 9 = 12 (left: 12",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "5 5 13"
                }
            },
            "Step 3": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 13 - 5 = 8 (left: 5 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 13 - 5 = 8 (left: 5 8) -> 5 + 8 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "240"
                }
            },
            "Step 5": {
                "Step": "13 - 1 = 12 (left: 4 5 12) -> 5 * 4 = 20 (left: 20 12) -> 20 * 12 = 240 (left: 240) -> 240 - 2 = 238 (left: 2)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "240"
                }
            },
            "Step 6": {
                "Step": "13 - 1 = 12 (left: 4 5 12) -> 5 * 4 = 20 (left: 20 12) -> 20 * 12 = 240 (left: 240) -> 240 / 8 = 30 (left: 30)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 + 5 = 9 (left: 1 9 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 20 "
                }
            },
            "Step 1": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 20 / 1 = 20 (left: 20 20)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 20 / 1 = 20 (left: 20 20) -> 20 + 20 = 40 (left: 40)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "5 5 13"
                }
            },
            "Step 3": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 - 5 = 0 (left: 0 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 - 5 = 0 (left: 0 13) -> 13 - 0 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "240"
                }
            },
            "Step 5": {
                "Step": "13 - 1 = 12 (left: 4 5 12) -> 5 * 4 = 20 (left: 20 12) -> 20 * 12 = 240 (left: 240) -> 240 / 5 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "240"
                }
            },
            "Step 6": {
                "Step": "13 - 1 = 12 (left: 4 5 12) -> 5 * 4 = 20 (left: 20 12) -> 20 * 12 = 240 (left: 240) -> 240 + 2 = 242",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 20 "
                }
            },
            "Step 1": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 20 / 1 = 20 (left: 20)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 20 / 1 = 20 (left: 20) -> 20 - 2 = 18 (left: 2 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 20 "
                }
            },
            "Step 3": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 1 * 20 = 20 (left: 20)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 1 * 20 = 20 (left: 20) -> 20 * 2 = 40 (left: 40)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "240"
                }
            },
            "Step 5": {
                "Step": "13 - 1 = 12 (left: 4 5 12) -> 5 * 4 = 20 (left: 20 12) -> 20 * 12 = 240 (left: 240) -> There are no possible next steps for the input 240 as it is a single number.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 1 = 12 (left: 4 5 12) -> 5 * 4 = 20 (left: 20 12) -> 20 * 12 = 240 (left: 240) -> There are no possible next steps for the input 240 as it is a single number. -> There are no possible next steps for the input 240 as it is a single number.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 5 13"
                }
            },
            "Step 1": {
                "Step": "1 + 4 = 5 (left: 5 5 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5/5 = 1 (left: 1 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 20 "
                }
            },
            "Step 3": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 1 * 20 = 20 (left: 20)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 1 * 20 = 20 (left: 20) -> None, as there is only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "240"
                }
            },
            "Step 5": {
                "Step": "13 - 1 = 12 (left: 4 5 12) -> 5 * 4 = 20 (left: 20 12) -> 20 * 12 = 240 (left: 240) -> 240 / 10 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "240"
                }
            },
            "Step 6": {
                "Step": "13 - 1 = 12 (left: 4 5 12) -> 5 * 4 = 20 (left: 20 12) -> 20 * 12 = 240 (left: 240) -> 240 / 8 = 30 (left: 30)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "5 5 13"
                }
            },
            "Step 1": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 13 - 5 = 8 (left: 5 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 13 - 5 = 8 (left: 5 8) -> 5 + 8 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 5 13"
                }
            },
            "Step 3": {
                "Step": "4 + 5 = 9 (left: 1 9 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 5 = 9 (left: 1 9 13) -> 9 - 1 = 8 (left: 8 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "240"
                }
            },
            "Step 5": {
                "Step": "13 - 1 = 12 (left: 4 5 12) -> 5 * 4 = 20 (left: 20 12) -> 20 * 12 = 240 (left: 240) -> 240 / 10 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "240"
                }
            },
            "Step 6": {
                "Step": "13 - 1 = 12 (left: 4 5 12) -> 5 * 4 = 20 (left: 20 12) -> 20 * 12 = 240 (left: 240) -> 240 * 2 = 480",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 4 12 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 20 "
                }
            },
            "Step 1": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 20 - 1 = 19 (left: 1 19)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 20 - 1 = 19 (left: 1 19) -> 19 / 1 = 19 (left: 19)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "5 5 13"
                }
            },
            "Step 3": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 + 5 = 10 (left: 10 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 + 5 = 10 (left: 10 13) -> 10 * 13 = 130 (left: 130)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "240"
                }
            },
            "Step 5": {
                "Step": "13 - 1 = 12 (left: 4 5 12) -> 5 * 4 = 20 (left: 20 12) -> 20 * 12 = 240 (left: 240) -> 240 / 2 = 120 (left: 120)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "240"
                }
            },
            "Step 6": {
                "Step": "13 - 1 = 12 (left: 4 5 12) -> 5 * 4 = 20 (left: 20 12) -> 20 * 12 = 240 (left: 240) -> There are no possible next steps because there is only one number.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "5 * 4 = 20 (left: 1 20 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "5 5 13"
                }
            },
            "Step 1": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 - 13 = -8 (left: -8",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 - 13 = -8 (left: -8 -> There are no possible next steps as the input value does not match any of the remaining numbers in the list.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 5 12"
                }
            },
            "Step 3": {
                "Step": "13 - 1 = 12 (left: 4 5 12) -> 5 * 4 = 20 (left: 20 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 1 = 12 (left: 4 5 12) -> 5 * 4 = 20 (left: 20 12) -> 20 * 12 = 240 (left: 240)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "240"
                }
            },
            "Step 5": {
                "Step": "13 - 1 = 12 (left: 4 5 12) -> 5 * 4 = 20 (left: 20 12) -> 20 * 12 = 240 (left: 240) -> 240 + 2 = 242",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 1 = 12 (left: 4 5 12) -> 5 * 4 = 20 (left: 20 12) -> 20 * 12 = 240 (left: 240) -> 240 + 2 = 242 -> 240 / 2 = 120 (left: 120 242)",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "5 + 4 = 9 (left: 1 9 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 20 "
                }
            },
            "Step 1": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 1 + 20 = 21 (left: 20 21)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 1 + 20 = 21 (left: 20 21) -> 20 / 21 = 0.9523809523809523 (left: 0.9523809523809523)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 20 "
                }
            },
            "Step 3": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 20 - 1 = 19 (left: 19)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 20 - 1 = 19 (left: 19) -> There are no possible next steps with the input 19.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "240"
                }
            },
            "Step 5": {
                "Step": "13 - 1 = 12 (left: 4 5 12) -> 5 * 4 = 20 (left: 20 12) -> 20 * 12 = 240 (left: 240) -> There are no possible next steps for the number 240 as it is already a single number.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 1 = 12 (left: 4 5 12) -> 5 * 4 = 20 (left: 20 12) -> 20 * 12 = 240 (left: 240) -> There are no possible next steps for the number 240 as it is already a single number. -> There are no possible next steps for the number 240 as it is already a single number.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "1 + 4 = 5 (left: 5 5 13)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "5 5 13"
                }
            },
            "Step 1": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 * 5 = 25 (left: 25 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 * 5 = 25 (left: 25 13) -> 25 - 13 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 20 "
                }
            },
            "Step 3": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 1 * 20 = 20 (left: 20)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 1 * 20 = 20 (left: 20) -> 20 + 2 = 22 (left: 22)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "240"
                }
            },
            "Step 5": {
                "Step": "13 - 1 = 12 (left: 4 5 12) -> 5 * 4 = 20 (left: 20 12) -> 20 * 12 = 240 (left: 240) -> There are no possible next steps for the number 240 with the given operations.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 1 = 12 (left: 4 5 12) -> 5 * 4 = 20 (left: 20 12) -> 20 * 12 = 240 (left: 240) -> There are no possible next steps for the number 240 with the given operations. -> There are no possible next steps for the number 240 with the given operations.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "13 - 5 = 8 (left: 1 4 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 20 "
                }
            },
            "Step 1": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 20 * 1 = 20 (left: 20 20)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 20 * 1 = 20 (left: 20 20) -> 20 * 20 = 400 (left: 400)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "5 5 13"
                }
            },
            "Step 3": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 * 5 = 25 (left: 25 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 * 5 = 25 (left: 25 13) -> 25 - 13 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "240"
                }
            },
            "Step 5": {
                "Step": "13 - 1 = 12 (left: 4 5 12) -> 5 * 4 = 20 (left: 20 12) -> 20 * 12 = 240 (left: 240) -> 240 / 8 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "240"
                }
            },
            "Step 6": {
                "Step": "13 - 1 = 12 (left: 4 5 12) -> 5 * 4 = 20 (left: 20 12) -> 20 * 12 = 240 (left: 240) -> 240 + 1 = 241",
                "Pruning": null
            }
        },
        "Input": "1 4 5 13",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "918": {
        "puzzle": "2 2 7 12",
        "Agent 0": {
            "Step 0": {
                "Step": "7 + 2 = 9 (left: 2 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 10 - 7 = 3 (left: 2 3 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 10 - 7 = 3 (left: 2 3 10) -> 2 + 3 = 5 (left: 5 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 12 14"
                }
            },
            "Step 3": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 14 - 2 = 12 (left: 12 14)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 14 - 2 = 12 (left: 12 14) -> 12 * 14 = 168 (left: 168)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "3 12"
                }
            },
            "Step 5": {
                "Step": "2 * 2 = 4 (left: 4 7 12) -> 7 - 4 = 3 (left: 3 12) -> 12 / 3 = 4 (left: 4)"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 - 2 = 10 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 7 12"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 7 12) -> 12 / 4 = 3 (left: 3 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 7 12) -> 12 / 4 = 3 (left: 3 7) -> 3 + 7 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 3": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 10 / 2 = 5 (left: 5 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 10 / 2 = 5 (left: 5 10) -> 5 + 10 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "56"
                }
            },
            "Step 5": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 10 - 2 = 8 (left: 7 8) -> 7 * 8 = 56 (left: 56) -> 56 / 2 = 28"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 7 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 10 / 2",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 10 / 2 -> 10 / 2 = 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 3": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 10 - 2 = 8 (left: 7 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 10 - 2 = 8 (left: 7 8) -> 7 * 8 = 56 (left: 56)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (2 * 7) + (12 - 2) = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "12 / 2 = 6 (left: 2 6 ",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 7 12"
                }
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 7 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 2 = 4 (left: 4 7 12) -> 7 - 4 = 3 (left: 3 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (12 - 2) * (2 * 7) = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 * 7 = 14 (left: 2 12 14)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 / 10 = 1.4 (left: 1.4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 12 14"
                }
            },
            "Step 3": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 12 - 2 = 10 (left: 2 10 14)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 12 - 2 = 10 (left: 2 10 14) -> 2 + 10 = 12 (left: 12 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "3 12"
                }
            },
            "Step 5": {
                "Step": "2 * 2 = 4 (left: 4 7 12) -> 7 - 4 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36)"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "12 - 2 = 10 (left: 2 7 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 12 14"
                }
            },
            "Step 1": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 2 + 12 = 14 (left: 14 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 2 + 12 = 14 (left: 14 14) -> 14 * 14 = 196 (left: 196)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 12 14"
                }
            },
            "Step 3": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 14 - 12 = 2 (left: 2 14)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 14 - 12 = 2 (left: 2 14) -> 14 / 2 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "3 12"
                }
            },
            "Step 5": {
                "Step": "2 * 2 = 4 (left: 4 7 12) -> 7 - 4 = 3 (left: 3 12) -> 12 - 3 = 9 (left: 9 12)"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 7 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 3.5 12"
                }
            },
            "Step 1": {
                "Step": "7 / 2 = 3.5 (left: 2 3.5 12) -> 2 * 3.5 = 7 (left: 7 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 / 2 = 3.5 (left: 2 3.5 12) -> 2 * 3.5 = 7 (left: 7 12) -> 7 * 12 = 84 (left: 84)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 7 12"
                }
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 7 12) -> 4 + 7 = 11 (left: 11 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 2 = 4 (left: 4 7 12) -> 4 + 7 = 11 (left: 11 12) -> 11 * 12 = 132 (left: 132)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (12 - 2) + (2 * 7) = 24"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 2 5 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 12 14"
                }
            },
            "Step 1": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 2 * 12 = 24 (left: 14 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 2 * 12 = 24 (left: 14 24) -> 14 + 24 = 38 (left: 38)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 7 12"
                }
            },
            "Step 3": {
                "Step": "7 * 2 = 14 (left: 2 14 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 * 2 = 14 (left: 2 14 12) -> 14 + 2 = 16 (left: 16 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (12 - 2) * (2 + 7) = 24"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 7 12)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 3.5 12"
                }
            },
            "Step 1": {
                "Step": "7 / 2 = 3.5 (left: 2 3.5 12) -> 3.5 * 2 = 7 (left: 7 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 / 2 = 3.5 (left: 2 3.5 12) -> 3.5 * 2 = 7 (left: 7 12) -> 7 * 12 = 84 (left: 84)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 7 12"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 7 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 7 12) -> 7 / 4 = 1.75 (left: 1.75 12)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (12 - 2) * (2 + 7) = 24"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "7 / 2 = 3.5 (left: 2 3.5 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 7 12"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 2 5 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 2 5 12) -> 12 / 2 = 6 (left: 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (12 - 2) * (2 * 7) = 24",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "2 7 10"
                }
            },
            "Step 4": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 10 / 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "3 12"
                }
            },
            "Step 5": {
                "Step": "2 * 2 = 4 (left: 4 7 12) -> 7 - 4 = 3 (left: 3 12) -> 3 + 12 = 15 (left: 15)"
            }
        },
        "Input": "2 2 7 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            }
        ]
    },
    "919": {
        "puzzle": "3 3 6 7",
        "Agent 0": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 6 7"
                }
            },
            "Step 1": {
                "Step": "7 / 3 = 2 (left: 3 2 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 / 3 = 2 (left: 3 2  -> 3 - 2 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 3": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 7 / 3 = 2.33 (left: 2.33)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 7 / 3 = 2.33 (left: 2.33) -> 2.33 + 2 = 4.33",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "4 9"
                }
            },
            "Step 5": {
                "Step": "7 - 3 = 4 (left: 3 6 4) -> 3 + 6 = 9 (left: 4 9) -> 4 + 9 = 13 (left: 9 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 3 = 4 (left: 3 6 4) -> 3 + 6 = 9 (left: 4 9) -> 4 + 9 = 13 (left: 9 13) -> 9 - 13 = -4 (left: -4)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "8 18"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 6 7"
                }
            },
            "Step 1": {
                "Step": "6 + 3 = 9 (left: 6 7 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 3 = 9 (left: 6 7 9) -> 7 * 9 = 63 (left: 6 63)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 6 7"
                }
            },
            "Step 3": {
                "Step": "",
                "Pruning": null
            },
            "Step 4": {
                "Step": " -> It looks like you did not provide an input for the possible next steps. Could you please provide the numbers you would like to work with?",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "4 9"
                }
            },
            "Step 5": {
                "Step": "7 - 3 = 4 (left: 3 6 4) -> 3 + 6 = 9 (left: 4 9) -> 9 + 4 = 13 (left: 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 3 = 4 (left: 3 6 4) -> 3 + 6 = 9 (left: 4 9) -> 9 + 4 = 13 (left: 4) -> 4 + 4 = 8",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 - 3 = 3 (left: 3 6 7)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 6 - 3 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 6 - 3 =  -> 6 - 3 = 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 2 7"
                }
            },
            "Step 3": {
                "Step": "6 / 3 = 2 (left: 3 2 7) -> 3 * 2 = 6 (left: 6 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 / 3 = 2 (left: 3 2 7) -> 3 * 2 = 6 (left: 6 7) -> 6 - 7 = -1 (left: -1)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "4 9"
                }
            },
            "Step 5": {
                "Step": "7 - 3 = 4 (left: 3 6 4) -> 3 + 6 = 9 (left: 4 9) -> 4 * 9 = 36 (left: 9 36)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 3 = 4 (left: 3 6 4) -> 3 + 6 = 9 (left: 4 9) -> 4 * 9 = 36 (left: 9 36) -> 9 * 36 = 324 (left: 324)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "8 18"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9) -> 7 * 9 = 63 (left: 63)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 9 7"
                }
            },
            "Step 3": {
                "Step": "6 + 3 = 9 (left: 3 9 7) -> 9 - 3 = 6 (left: 6 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 3 = 9 (left: 3 9 7) -> 9 - 3 = 6 (left: 6 7) -> 6 * 7 = 42 (left: 42)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "4 9"
                }
            },
            "Step 5": {
                "Step": "7 - 3 = 4 (left: 3 6 4) -> 3 + 6 = 9 (left: 4 9) -> 4 + 9 = 13 (left: 9 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 3 = 4 (left: 3 6 4) -> 3 + 6 = 9 (left: 4 9) -> 4 + 9 = 13 (left: 9 13) -> 9 / 13 = 0.6923076923076923 (left: 0.6923076923076923)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "8 18"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 3 9 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 * 6 = 18 (left: 7 18)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 * 6 = 18 (left: 7 18) -> 18 / 7 = 2.57 (left: 2.57)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "4 9"
                }
            },
            "Step 3": {
                "Step": "7 - 3 = 4 (left: 3 6 4) -> 3 + 6 = 9 (left: 4 9) -> 9 - 4 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 3 = 4 (left: 3 6 4) -> 3 + 6 = 9 (left: 4 9) -> 9 - 4 = 5 (left: 5) -> There are no possible next steps with just the number 5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "4 9"
                }
            },
            "Step 5": {
                "Step": "7 - 3 = 4 (left: 3 6 4) -> 3 + 6 = 9 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 3 = 4 (left: 3 6 4) -> 3 + 6 = 9 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25) -> There are no possible next steps for the input 2.25.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 3 9 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9) -> 9 - 7 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "4 9"
                }
            },
            "Step 3": {
                "Step": "7 - 3 = 4 (left: 3 6 4) -> 3 + 6 = 9 (left: 4 9) -> 3 + 7 = 10 (left: 10 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 3 = 4 (left: 3 6 4) -> 3 + 6 = 9 (left: 4 9) -> 3 + 7 = 10 (left: 10 8) -> 10 + 8 = 18 (left: 8 18)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "4 9"
                }
            },
            "Step 5": {
                "Step": "7 - 3 = 4 (left: 3 6 4) -> 3 + 6 = 9 (left: 4 9) -> 9 + 4 = 13 (left: 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 3 = 4 (left: 3 6 4) -> 3 + 6 = 9 (left: 4 9) -> 9 + 4 = 13 (left: 4) -> There is only one possible next step which is:",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 / 3 = 2 (left: 3 2 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 6 7"
                }
            },
            "Step 1": {
                "Step": "7 - 3 = 4 (left: 3 6 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 3 = 4 (left: 3 6 4) -> 3 + 6 = 9 (left: 4 9)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 3": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 6 + 7 = 13 (left: 3 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 6 + 7 = 13 (left: 3 13) -> 3 + 13 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "4 9"
                }
            },
            "Step 5": {
                "Step": "7 - 3 = 4 (left: 3 6 4) -> 3 + 6 = 9 (left: 4 9) -> 9 - 4 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 3 = 4 (left: 3 6 4) -> 3 + 6 = 9 (left: 4 9) -> 9 - 4 = 5 (left: 5) -> There is only one possible step: 5.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 6 7"
                }
            },
            "Step 1": {
                "Step": "7 - 3 = 4 (left: 3 6 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 3 = 4 (left: 3 6 4) -> 4 * 3 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "4 9"
                }
            },
            "Step 3": {
                "Step": "7 - 3 = 4 (left: 3 6 4) -> 3 + 6 = 9 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 3 = 4 (left: 3 6 4) -> 3 + 6 = 9 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25) -> There are no possible next steps with just one number provided. Please provide more numbers for further calculations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "4 9"
                }
            },
            "Step 5": {
                "Step": "7 - 3 = 4 (left: 3 6 4) -> 3 + 6 = 9 (left: 4 9) -> 6 / 3 = 2 (left:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 3 = 4 (left: 3 6 4) -> 3 + 6 = 9 (left: 4 9) -> 6 / 3 = 2 (left: -> 3 - 2 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "8 18"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 6 9 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "9 6 7"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 7) -> 9 + 6 = 15 (left: 7 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 6 7) -> 9 + 6 = 15 (left: 7 15) -> 7 * 15 = 105 (left: 105)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "4 9"
                }
            },
            "Step 3": {
                "Step": "7 - 3 = 4 (left: 3 6 4) -> 3 + 6 = 9 (left: 4 9) -> 4 * 9 = 36 (left: 9 36)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 3 = 4 (left: 3 6 4) -> 3 + 6 = 9 (left: 4 9) -> 4 * 9 = 36 (left: 9 36) -> 36 - 9 = 27 (left: 27)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "4 9"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "4 9"
                }
            },
            "Step 5": {
                "Step": "7 - 3 = 4 (left: 3 6 4) -> 3 + 6 = 9 (left: 4 9) -> 9 - 4 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 3 = 4 (left: 3 6 4) -> 3 + 6 = 9 (left: 4 9) -> 9 - 4 = 5 (left: 5) -> There are no possible next steps with just the number 5.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 6 7"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 6 6 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 6 6 7) -> 6 * 6 = 36 (left: 36 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 6 7"
                }
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 6 6 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 6 6 7) -> 6 + 6 = 12 (left: 7 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "4 9"
                }
            },
            "Step 5": {
                "Step": "7 - 3 = 4 (left: 3 6 4) -> 3 + 6 = 9 (left: 4 9) -> 4 + 9 = 13 (left: 9 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 3 = 4 (left: 3 6 4) -> 3 + 6 = 9 (left: 4 9) -> 4 + 9 = 13 (left: 9 13) -> 13 - 9 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "8 18"
                }
            }
        },
        "Input": "3 3 6 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "920": {
        "puzzle": "1 5 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 5 = 8 (left: 1 8 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 45 13"
                }
            },
            "Step 1": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 13 + 1 = 14 (left: 14 45)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 13 + 1 = 14 (left: 14 45) -> 14 * 45 = 630 (left: 630)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "4.4 22"
                }
            },
            "Step 3": {
                "Step": "9 + 13 = 22 (left: 1 5 22) -> 1 * 5 = 5 (left: 5 22) -> 22 / 5 = 4.4 (left: 4.4 22) -> 4.4 + 22 = 26.4 (left: 22 26.4)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 + 13 = 22 (left: 1 5 22) -> 1 * 5 = 5 (left: 5 22) -> 22 / 5 = 4.4 (left: 4.4 22) -> 4.4 + 22 = 26.4 (left: 22 26.4) -> 22 / 26.4 = 0.83333333333 (left: 0.83333333333)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "4.4 22"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "4.4 22"
                }
            },
            "Step 5": {
                "Step": "9 + 13 = 22 (left: 1 5 22) -> 1 * 5 = 5 (left: 5 22) -> 22 / 5 = 4.4 (left: 4.4 22) -> 3 + 6 =",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 13 = 22 (left: 1 5 22) -> 1 * 5 = 5 (left: 5 22) -> 22 / 5 = 4.4 (left: 4.4 22) -> 3 + 6 = -> 3 + 6 = 9",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 * 9 = 45 (left: 1 45 13)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "1 5 22"
                }
            },
            "Step 1": {
                "Step": "9 + 13 = 22 (left: 1 5 22) -> 1 * 5 = 5 (left: 5 22)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 13 = 22 (left: 1 5 22) -> 1 * 5 = 5 (left: 5 22) -> 22 / 5 = 4.4 (left: 4.4 22)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9 13"
                }
            },
            "Step 3": {
                "Step": "5 - 1 = 4 (left: 4 9 13) -> 9 - 4 = 5 (left: 5 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 - 1 = 4 (left: 4 9 13) -> 9 - 4 = 5 (left: 5 13) -> 5 * 13 = 65 (left: 65)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "4.4 22"
                }
            },
            "Step 5": {
                "Step": "9 + 13 = 22 (left: 1 5 22) -> 1 * 5 = 5 (left: 5 22) -> 22 / 5 = 4.4 (left: 4.4 22) -> 4.4 + 22 = 26.4 (left: 22 26.4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 13 = 22 (left: 1 5 22) -> 1 * 5 = 5 (left: 5 22) -> 22 / 5 = 4.4 (left: 4.4 22) -> 4.4 + 22 = 26.4 (left: 22 26.4) -> 22 + 26.4 = 48.4 (left: 48.4)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "There seems to be a mistake in the input provided. Can you please clarify or provide a new set of numbers for the calculation?"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 * 5 = 5 (left: 5 9 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 45 13"
                }
            },
            "Step 1": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 13 + 1 = 14 (left: 14 45)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 13 + 1 = 14 (left: 14 45) -> 14 * 45 = 630 (left: 630)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "4.4 22"
                }
            },
            "Step 3": {
                "Step": "9 + 13 = 22 (left: 1 5 22) -> 1 * 5 = 5 (left: 5 22) -> 22 / 5 = 4.4 (left: 4.4 22) -> 22 / 4.4 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "1 45 13"
                }
            },
            "Step 4": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 / 13 = 3 (left: 3 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "4.4 22"
                }
            },
            "Step 5": {
                "Step": "9 + 13 = 22 (left: 1 5 22) -> 1 * 5 = 5 (left: 5 22) -> 22 / 5 = 4.4 (left: 4.4 22) -> 22 + 4.4 = 26.4 (left: 4.4 26.4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 13 = 22 (left: 1 5 22) -> 1 * 5 = 5 (left: 5 22) -> 22 / 5 = 4.4 (left: 4.4 22) -> 22 + 4.4 = 26.4 (left: 4.4 26.4) -> 4.4 + 26.4 = 30.8 (left: 30.8)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "There seems to be a mistake in the input provided. Can you please clarify or provide a new set of numbers for the calculation?"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 * 9 = 45 (left: 1 45 13)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 9 13"
                }
            },
            "Step 1": {
                "Step": "13 - 5 = 8 (left: 1 8 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 5 = 8 (left: 1 8 9) -> 1 + 8 = 9 (left: 9 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 45 13"
                }
            },
            "Step 3": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 1 * 45 = 45 (left: 45 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 1 * 45 = 45 (left: 45 13) -> 45 * 13 = 585 (left: 585)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "4.4 22"
                }
            },
            "Step 5": {
                "Step": "9 + 13 = 22 (left: 1 5 22) -> 1 * 5 = 5 (left: 5 22) -> 22 / 5 = 4.4 (left: 4.4 22) -> Input: 3 9 27",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 13 = 22 (left: 1 5 22) -> 1 * 5 = 5 (left: 5 22) -> 22 / 5 = 4.4 (left: 4.4 22) -> Input: 3 9 27 -> 9 / 3 = 3 (left: 3 27 27)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "9 - 5 = 4 (left: 1 4 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 45 13"
                }
            },
            "Step 1": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 1 * 32 = 32 (left: 32)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 9 13"
                }
            },
            "Step 3": {
                "Step": "5 - 1 = 4 (left: 4 9 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 - 1 = 4 (left: 4 9  -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "4.4 22"
                }
            },
            "Step 5": {
                "Step": "9 + 13 = 22 (left: 1 5 22) -> 1 * 5 = 5 (left: 5 22) -> 22 / 5 = 4.4 (left: 4.4 22) -> 22 - 4.4 = 17.6 (left: 4.4 17.6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 13 = 22 (left: 1 5 22) -> 1 * 5 = 5 (left: 5 22) -> 22 / 5 = 4.4 (left: 4.4 22) -> 22 - 4.4 = 17.6 (left: 4.4 17.6) -> 4.4 * 17.6 = 77.44 (left: 77.44)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "10 * 5 ="
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "1 * 5 = 5 (left: 5 9 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 45 13"
                }
            },
            "Step 1": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 1 = 44 (left: 44 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 1 = 44 (left: 44 13) -> 44 + 13 = 57 (left: 57)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "4.4 22"
                }
            },
            "Step 3": {
                "Step": "9 + 13 = 22 (left: 1 5 22) -> 1 * 5 = 5 (left: 5 22) -> 22 / 5 = 4.4 (left: 4.4 22) -> Input: 10 5 2.5",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 + 13 = 22 (left: 1 5 22) -> 1 * 5 = 5 (left: 5 22) -> 22 / 5 = 4.4 (left: 4.4 22) -> Input: 10 5 2.5 -> 10 * 5 =",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "4.4 22"
                }
            },
            "Step 5": {
                "Step": "9 + 13 = 22 (left: 1 5 22) -> 1 * 5 = 5 (left: 5 22) -> 22 / 5 = 4.4 (left: 4.4 22) -> 22 - 4.4 = 17.6 (left: 17.6)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "4.4 22"
                }
            },
            "Step 6": {
                "Step": "9 + 13 = 22 (left: 1 5 22) -> 1 * 5 = 5 (left: 5 22) -> 22 / 5 = 4.4 (left: 4.4 22) -> 22 - 4.4 = 17.6 (left: 17.6)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "There seems to be a mistake in the input provided. Can you please clarify or provide a new set of numbers for the calculation?"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "9 / 1 = 9 (left: 5 9 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9 13"
                }
            },
            "Step 1": {
                "Step": "5 - 1 = 4 (left: 4 9 13) -> 13 - 9 = 4 (left: 4 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 - 1 = 4 (left: 4 9 13) -> 13 - 9 = 4 (left: 4 13) -> 4 + 13 = 17 (left: 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 45 13"
                }
            },
            "Step 3": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 1 + 45 = 46 (left: 13 46)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 1 + 45 = 46 (left: 13 46) -> 13 / 46 = 0.28260869565 (left: 0.28260869565)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "4.4 22"
                }
            },
            "Step 5": {
                "Step": "9 + 13 = 22 (left: 1 5 22) -> 1 * 5 = 5 (left: 5 22) -> 22 / 5 = 4.4 (left: 4.4 22) -> 22 / 4.4 = 5 (left: 5 22)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 13 = 22 (left: 1 5 22) -> 1 * 5 = 5 (left: 5 22) -> 22 / 5 = 4.4 (left: 4.4 22) -> 22 / 4.4 = 5 (left: 5 22) -> Possible next steps:",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "9 + 13 = 22 (left: 1 5 22)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 9 13"
                }
            },
            "Step 1": {
                "Step": "5 * 9 = 45 (left: 1 45 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 13 * 1 = 13 (left: 13 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 9 13"
                }
            },
            "Step 3": {
                "Step": "5 * 9 = 45 (left: 1 45 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 1 * 45 = 45 (left: 45 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "4.4 22"
                }
            },
            "Step 5": {
                "Step": "9 + 13 = 22 (left: 1 5 22) -> 1 * 5 = 5 (left: 5 22) -> 22 / 5 = 4.4 (left: 4.4 22) -> 4.4 + 22 = 26.4 (left: 26.4)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "4.4 22"
                }
            },
            "Step 6": {
                "Step": "9 + 13 = 22 (left: 1 5 22) -> 1 * 5 = 5 (left: 5 22) -> 22 / 5 = 4.4 (left: 4.4 22) -> 3 + ",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "5 - 1 = 4 (left: 4 9 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 45 13"
                }
            },
            "Step 1": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 1 = 44 (left: 44 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 1 = 44 (left: 44 13) -> 44 * 13 = 572 (left: 572)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "4.4 22"
                }
            },
            "Step 3": {
                "Step": "9 + 13 = 22 (left: 1 5 22) -> 1 * 5 = 5 (left: 5 22) -> 22 / 5 = 4.4 (left: 4.4 22) -> Possible next steps:",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 + 13 = 22 (left: 1 5 22) -> 1 * 5 = 5 (left: 5 22) -> 22 / 5 = 4.4 (left: 4.4 22) -> Possible next steps: -> There seems to be a mistake in the input provided. Can you please clarify or provide a new set of numbers for the calculation?",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "4.4 22"
                }
            },
            "Step 5": {
                "Step": "9 + 13 = 22 (left: 1 5 22) -> 1 * 5 = 5 (left: 5 22) -> 22 / 5 = 4.4 (left: 4.4 22) -> 4.4 + 22 = 26.4 (left: 26.4)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "4.4 22"
                }
            },
            "Step 6": {
                "Step": "9 + 13 = 22 (left: 1 5 22) -> 1 * 5 = 5 (left: 5 22) -> 22 / 5 = 4.4 (left: 4.4 22) -> 3 + 9 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "10 * 5 ="
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "5 / 1 = 5 (left: 5 9 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 9 13"
                }
            },
            "Step 1": {
                "Step": "1 + 5 = 6 (left: 6 9 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 5 = 6 (left: 6 9 13) -> 13 - 6 = 7 (left: 6 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "4.4 22"
                }
            },
            "Step 3": {
                "Step": "9 + 13 = 22 (left: 1 5 22) -> 1 * 5 = 5 (left: 5 22) -> 22 / 5 = 4.4 (left: 4.4 22) -> 22 / 4.4 = 5 (left: 5 22)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 + 13 = 22 (left: 1 5 22) -> 1 * 5 = 5 (left: 5 22) -> 22 / 5 = 4.4 (left: 4.4 22) -> 22 / 4.4 = 5 (left: 5 22) -> 5 * 22 = 110 (left: 110)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "4.4 22"
                },
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "4.4 22"
                }
            },
            "Step 5": {
                "Step": "9 + 13 = 22 (left: 1 5 22) -> 1 * 5 = 5 (left: 5 22) -> 22 / 5 = 4.4 (left: 4.4 22) -> 4.4 + 22 = 26.4 (left: 22 26.4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 13 = 22 (left: 1 5 22) -> 1 * 5 = 5 (left: 5 22) -> 22 / 5 = 4.4 (left: 4.4 22) -> 4.4 + 22 = 26.4 (left: 22 26.4) -> 22 + 26.4 = 48.4 (left: 48.4)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "There seems to be a mistake in the input provided. Can you please clarify or provide a new set of numbers for the calculation?"
                }
            }
        },
        "Input": "1 5 9 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "921": {
        "puzzle": "5 6 7 13",
        "Agent 0": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 5 13 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "7 13 30"
                }
            },
            "Step 1": {
                "Step": "5 * 6 = 30 (left: 7 13 30) -> Input: 4 5 10",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 6 = 30 (left: 7 13 30) -> Input: 4 5 10 -> Input: 5 6 7 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 7 13"
                }
            },
            "Step 3": {
                "Step": "6 / 5 = 1.2 (left: 1.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 / 5 = 1.2 (left: 1. -> There are no possible next steps with the input \"1.\"",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "20 30"
                }
            },
            "Step 5": {
                "Step": "5 * 6 = 30 (left: 7 30 13) -> 13 + 7 = 20 (left: 20 30) -> 20 + 30 = 50 (left: 50)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 6 = 30 (left: 7 30 13) -> 13 + 7 = 20 (left: 20 30) -> 20 + 30 = 50 (left: 50) -> There are no possible next steps with just the number 50.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 5 13 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 7 13"
                }
            },
            "Step 1": {
                "Step": "6 * 7 = 42 (left: 5 13 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 7 = 42 (left: 5 13  -> 5 * 13 = 65 (left: 65)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 7 13"
                }
            },
            "Step 3": {
                "Step": "5 * 6 = 30 (left: 7 30 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 6 = 30 (left: 7 30 13) -> 13 + 7 = 20 (left: 20 30)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3 4 3"
                }
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 5 8 -> 8 - 5 = 3 (left: 3 4 3) -> 3 * 4 = 12 (left: 3 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 5 8 -> 8 - 5 = 3 (left: 3 4 3) -> 3 * 4 = 12 (left: 3 12) -> 12 - 3 = 9 (left: 9)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 7 = 6 (left: 5 6 6)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 7 13"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 7 11 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 7 11 13) -> 13 - 7 = 6 (left: 6 11)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 7 13"
                }
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 7 11 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 7 11 13) -> 11 + 13 = 24 (left: 7 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "20 30"
                }
            },
            "Step 5": {
                "Step": "5 * 6 = 30 (left: 7 30 13) -> 13 + 7 = 20 (left: 20 30) -> 20 / 30 = 0.6667 (left: 0.6667)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 6 = 30 (left: 7 30 13) -> 13 + 7 = 20 (left: 20 30) -> 20 / 30 = 0.6667 (left: 0.6667) -> There is only one possible next step:",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 5 13 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 5 8",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 5 8 -> 8 - 5 = 3 (left: 3 4 3)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 7 13"
                }
            },
            "Step 3": {
                "Step": "13 - 6 = 7 (left: 5 7 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 6 = 7 (left: 5 7 7) -> 7 / 5 = 1.4 (left: 1.4 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3 4 3"
                }
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 5 8 -> 8 - 5 = 3 (left: 3 4 3) -> 4 - 3 = 1 (left: 1 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 5 8 -> 8 - 5 = 3 (left: 3 4 3) -> 4 - 3 = 1 (left: 1 3) -> 3 - 1 = 2 (left: 2)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 * 6 = 30 (left: 7 13 30)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 3 + 9 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 3 + 9 =  -> 3 + 9 = 12",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 5 * 6 = 30 (left: 6 30)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 5 * 6 = 30 (left: 6 30) -> 6 * 5 = 30 (left: 30)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3 4 3"
                }
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 5 8 -> 8 - 5 = 3 (left: 3 4 3) -> 3 + 4 = 7 (left: 3 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 5 8 -> 8 - 5 = 3 (left: 3 4 3) -> 3 + 4 = 7 (left: 3 7) -> 3 + 7 = 10 (left: 10)",
                "Pruning": "NA"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "5 * 6 = 30 (left: 7 13 30)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 7 13"
                }
            },
            "Step 1": {
                "Step": "5 * 6 = 30 (left: 7 13 30)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 6 = 30 (left: 7 13 30) -> 30 / 2 = 15 (left: 7 13 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 5 + 6 = 11 (left: 6 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 5 + 6 = 11 (left: 6 11) -> 11 / 6 = 1.83 (left: 1.83)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "20 30"
                }
            },
            "Step 5": {
                "Step": "5 * 6 = 30 (left: 7 30 13) -> 13 + 7 = 20 (left: 20 30) -> 20 - 30 = -10 (left: -10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 6 = 30 (left: 7 30 13) -> 13 + 7 = 20 (left: 20 30) -> 20 - 30 = -10 (left: -10) -> -10 * 2 = -20 (left: -20)",
                "Pruning": "NA"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 7 11 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 7 13"
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 5 6 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 * 5 = 30 (left: 30)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 7 13"
                }
            },
            "Step 3": {
                "Step": "7 + 13 = 20 (left: 5 6 20)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 + 13 = 20 (left: 5 6 20) -> Input: 3 7 10 12",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3 4 3"
                }
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 5 8 -> 8 - 5 = 3 (left: 3 4 3) -> 3 + 4 = 7 (left: 3 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 5 8 -> 8 - 5 = 3 (left: 3 4 3) -> 3 + 4 = 7 (left: 3 7) -> 7 - 3 = 4 (left: 4) ",
                "Pruning": "NA"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "13 - 7 = 6 (left: 5 6 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "7 13 30"
                }
            },
            "Step 1": {
                "Step": "5 * 6 = 30 (left: 7 13 30) -> 13 + 7 = 20 (left: 20 30)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 6 = 30 (left: 7 13 30) -> 13 + 7 = 20 (left: 20 30) -> 20 * 30 = 600 (left: 600)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "20 30"
                }
            },
            "Step 5": {
                "Step": "5 * 6 = 30 (left: 7 30 13) -> 13 + 7 = 20 (left: 20 30) -> 20 / 30 = 0.6667 (left: 0.6667)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 6 = 30 (left: 7 30 13) -> 13 + 7 = 20 (left: 20 30) -> 20 / 30 = 0.6667 (left: 0.6667) -> There are no possible next steps with the input 0.6667.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 7 11 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 7 7",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 7 7 -> 3 * 4 = 12 (left: 7 7 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 7 13"
                }
            },
            "Step 3": {
                "Step": "6 + 7 = 13 (left: 5 13 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 7 = 13 (left: 5 13 13) -> 5 + 13 = 18 (left: 13 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3 4 3"
                }
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 5 8 -> 8 - 5 = 3 (left: 3 4 3) -> 3 / 4 = 0.75 (left: 0.75 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 5 8 -> 8 - 5 = 3 (left: 3 4 3) -> 3 / 4 = 0.75 (left: 0.75 3) -> 3 - 0.75 = 2.25 (left: 2.25)",
                "Pruning": "NA"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "6 / 5 = 1.2 (left: 1.",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 + 5 = 11 (left: 6 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 + 5 = 11 (left: 6 11) -> 6 + 11 = 17 (left: 17)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 7 13"
                }
            },
            "Step 3": {
                "Step": "5 * 6 = 30 (left: 7 13 30)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 6 = 30 (left: 7 13 30) -> 13 + 7 = 20 (left: 20 30)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "20 30"
                }
            },
            "Step 5": {
                "Step": "5 * 6 = 30 (left: 7 30 13) -> 13 + 7 = 20 (left: 20 30) -> 20 - 30 = -10 (left: -10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 6 = 30 (left: 7 30 13) -> 13 + 7 = 20 (left: 20 30) -> 20 - 30 = -10 (left: -10) -> -10 / 2 = -5 (left: -5)",
                "Pruning": "NA"
            }
        },
        "Input": "5 6 7 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "922": {
        "puzzle": "5 5 8 10",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 8 = 2 (left: 2 8 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 8 10"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 5 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 5 10) -> 3 + 5 = 8 (left: 8 10)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 8 10"
                }
            },
            "Step 3": {
                "Step": "5 * 8 = 40 (left: 10 40 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 8 = 40 (left: 10 40  -> 10 * 4 = 40 (left: 40)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "8 10"
                }
            },
            "Step 5": {
                "Step": "8 - 5 = 3 (left: 3 5 10) -> 3 + 5 = 8 (left: 8 10) -> 10 / 8 = 1.25 (left: 1.25)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 5 = 3 (left: 3 5 10) -> 3 + 5 = 8 (left: 8 10) -> 10 / 8 = 1.25 (left: 1.25) -> There are no possible next steps for the input 1.25.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 - 8 = 2 (left: 5 2 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 8 10"
                }
            },
            "Step 1": {
                "Step": "8 + 2 = 10 (left: 5 10 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 + 2 = 10 (left: 5 10 10) -> 10 / 5 = 2 (left: 2 10 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 8 10"
                }
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 5 5 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 5 = 5 (left: 5 5 10) -> 3 + 9 = 12 (left: 12",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "8 10"
                }
            },
            "Step 5": {
                "Step": "8 - 5 = 3 (left: 3 5 10) -> 3 + 5 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 5 = 3 (left: 3 5 10) -> 3 + 5 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> There are no possible next steps for the number 18.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 5 = 5 (left: 5 8 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "5 8 10"
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 5 * 8 = 40 (left: 10 40)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 5 * 8 = 40 (left: 10 40) -> 10 * 4 = 40 (left: 40)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 8 10"
                }
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 10 / 5 = ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 10 / 5 =  -> 10 / 5 = 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "8 10"
                }
            },
            "Step 5": {
                "Step": "8 - 5 = 3 (left: 3 5 10) -> 3 + 5 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 5 = 3 (left: 3 5 10) -> 3 + 5 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> There are no possible next steps for the number 18. It is a prime number and cannot be created by combining the numbers 2, 8, 8, and 14 using basic arithmetic operations.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 - 5 = 5 (left: 5 8 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "5 2 10"
                }
            },
            "Step 1": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 5 - 2 = 3 (left: 3 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 5 - 2 = 3 (left: 3 10) -> 10 / 3 \u2248 3.33 (left: 3 3)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "5 8 2"
                }
            },
            "Step 3": {
                "Step": "10 / 5 = 2 (left: 5 8 2) -> 5 + 8 = 13 (left: 2 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 / 5 = 2 (left: 5 8 2) -> 5 + 8 = 13 (left: 2 13) -> 2 * 13 = 26 (left: 26)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "8 10"
                }
            },
            "Step 5": {
                "Step": "8 - 5 = 3 (left: 3 5 10) -> 3 + 5 = 8 (left: 8 10) -> 10 - 8 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 5 = 3 (left: 3 5 10) -> 3 + 5 = 8 (left: 8 10) -> 10 - 8 = 2 (left: 2) -> There are no possible next steps with only one number provided.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 - 5 = 0 (left: 0 8 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 8 10"
                }
            },
            "Step 1": {
                "Step": "5 + 5 = 10 (left: 8 10 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 5 = 10 (left: 8 10 10) -> 8 + 10 = 18 (left: 10 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "8 10"
                }
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 5 10) -> 3 + 5 = 8 (left: 8 10) -> 8 / 6 = 1.33 (left: 1.33",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 - 5 = 3 (left: 3 5 10) -> 3 + 5 = 8 (left: 8 10) -> 8 / 6 = 1.33 (left: 1.33 -> 1.33 - 2 = -0.67 (left: -0.67)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "8 10"
                },
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "-2 10 25"
                }
            },
            "Step 5": {
                "Step": "5 * 5 = 25 (left: 8 10 25) -> 8 - 10 = -2 (left: -2 10 25) -> -2 + 10 = 8 (left: 8 25)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 5 = 25 (left: 8 10 25) -> 8 - 10 = -2 (left: -2 10 25) -> -2 + 10 = 8 (left: 8 25) -> 8 + 25 = 33 (left: 33)",
                "Pruning": "NA"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "5 * 10 = 50 (left: 5 8 50)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 8 10"
                }
            },
            "Step 1": {
                "Step": "10 / 5 = 2 (left: 2 8 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 5 = 2 (left: 2 8 10) -> 8 / 2 = 4 (left: 4 10)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "5 8 2"
                }
            },
            "Step 3": {
                "Step": "10 / 5 = 2 (left: 5 8 2) -> 5 + 8 = 13 (left: 2 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 / 5 = 2 (left: 5 8 2) -> 5 + 8 = 13 (left: 2 13) -> 13 / 2 = 6.5 (left: 6.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "8 10"
                }
            },
            "Step 5": {
                "Step": "8 - 5 = 3 (left: 3 5 10) -> 3 + 5 = 8 (left: 8 10) -> 10 - 8 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 5 = 3 (left: 3 5 10) -> 3 + 5 = 8 (left: 8 10) -> 10 - 8 = 2 (left: 2) -> 2 + 2 = 4",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "8 + 2 = 10 (left: 10 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 8 10"
                }
            },
            "Step 1": {
                "Step": "5 * 5 = 25 (left: 8 10 25)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 5 = 25 (left: 8 10 25) -> 8 - 10 = -2 (left: -2 10 25)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 8 10"
                }
            },
            "Step 3": {
                "Step": "10 - 8 = 2 (left: 5 2 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 5 + 2 = 7 (left: 7 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "8 10"
                }
            },
            "Step 5": {
                "Step": "8 - 5 = 3 (left: 3 5 10) -> 3 + 5 = 8 (left: 8 10) -> 8 * 10 = 80 (left: 80)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 5 = 3 (left: 3 5 10) -> 3 + 5 = 8 (left: 8 10) -> 8 * 10 = 80 (left: 80) -> 80 * 2 = 160 (left: 160)",
                "Pruning": "NA"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "5 + 5 = 10 (left: 8 10 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 8 10"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 5 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 5  -> 3 - 5 = -2 (left: -2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 8 10"
                }
            },
            "Step 3": {
                "Step": "5 / 5 = 1 (left: 8 1 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 / 5 = 1 (left: 8 1 10) -> 1 * 10 = 10 (left:",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "8 10"
                }
            },
            "Step 5": {
                "Step": "8 - 5 = 3 (left: 3 5 10) -> 3 + 5 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 5 = 3 (left: 3 5 10) -> 3 + 5 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> 18 + 2 = 20 (left: 8)",
                "Pruning": "NA"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 8 10"
                }
            },
            "Step 1": {
                "Step": "5 + 5 = 10 (left: 8 10 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 5 = 10 (left: 8 10 10) -> 10 / 10 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 8 10"
                }
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 5 + 8 = 13 (left: 10 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 5 + 8 = 13 (left: 10 13) -> 10 * 13 = 130 (left: 130)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "8 10"
                }
            },
            "Step 5": {
                "Step": "8 - 5 = 3 (left: 3 5 10) -> 3 + 5 = 8 (left: 8 10) -> 10 + 8 = 18 (left: 18)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 5 = 3 (left: 3 5 10) -> 3 + 5 = 8 (left: 8 10) -> 10 + 8 = 18 (left: 18) -> There are no possible next steps for the number 18.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "10 / 5 = 2 (left: 5 8 2)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 8 10"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 5 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 5  -> 5 - 3 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 8 10"
                }
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 5 + 8 = 13 (left: 10 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 5 + 8 = 13 (left: 10 13) -> 10 / 13 = 0.7692307692307693 (left: 0.7692307692307693)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "8 10"
                }
            },
            "Step 5": {
                "Step": "8 - 5 = 3 (left: 3 5 10) -> 3 + 5 = 8 (left: 8 10) -> 8 * 10 = 80 (left: 80)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 5 = 3 (left: 3 5 10) -> 3 + 5 = 8 (left: 8 10) -> 8 * 10 = 80 (left: 80) -> 80 / 2 = 40 (left: 40)",
                "Pruning": "NA"
            }
        },
        "Input": "5 5 8 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            }
        ]
    },
    "923": {
        "puzzle": "2 4 6 12",
        "Agent 0": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 2 10 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 / 6 = 2 (left: 6 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 / 6 = 2 (left: 6 2) -> 6 * 2 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 3": {
                "Step": "6 * 2 = 12 (left: 4 6  -> 4 + 6 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 * 2 = 12 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 + 10 = 20",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 / 6 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 / 6 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6) -> 6 * 2 = 12 (left: 12)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 ^ 2 = 16 (left: 2 16 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 - 6 = 6 (left: 6 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 - 6 = 6 (left: 6 6) -> 6 * 6 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 - 6 = 6 (left: 6 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 - 6 = 6 (left: 6 12) -> 6 + 12 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: ((2 + 4) / 6) * 12 = 24",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "36"
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 - 6 = 6 (left: 6 6) -> 6 * 6 = 36 (left: 36) -> There are no possible next steps as there is only one number.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 * 2 = 12 (left: 4 12 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 - 2 = 10 (left: 4 6 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 2 = 10 (left: 4 6 10) -> ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 - 6 = 6 (left: 6 6) -> 6 * 6 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 - 6 = 6 (left: 6 6) -> 6 * 6 = 36 (left: 36) -> 36 / 2 = 18 -> 36 + 2 = 38 (left: 38)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "36"
                },
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 - 6 = 6 (left: 6 6) -> 6 * 6 = 36 (left: 36) -> 36 + 2 = 38 (left: 38)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "0 12"
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 - 6 = 0 (left: 0 12) -> 12 / 0 = undefined (left: 0 12) -> 0 * 12 = 0 (left: 0)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 6 6 12)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 12"
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 4 12 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 4 12 12) -> 12 / 4 = 3 (left: 3 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 - 12 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 - 6 = 6 (left: 6 6) -> 6 * 6 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 - 6 = 6 (left: 6 6) -> 6 * 6 = 36 (left: 36) -> 36 / 2 = 18 -> Input: 8 * 3 = 24",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 - 2 = 10 (left: 10 6 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 4 6  -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 4 6  -> 6 / 4 = 1.5 (left: 1.5) -> 1.5 * 8 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 12"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 4 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 4 12) -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 - 6 = 6 (left: 6 6) -> 6 * 6 = 36 (left: 36) -> 36 - 2 = 34 (left: 34)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "18"
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 - 6 = 6 (left: 6 12) -> 6 + 12 = 18 (left: 18) -> 18 / 2 = 9",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 6 6 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 12"
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 4 12 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 4 12 12) -> 12 - 4 = 8 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 - 6 = 6 (left: 6 6) -> 6 * 6 = 36 (left: 36) -> 36 / 4 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "2 12"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 - 6 = 6 (left: 6 6) -> 6 * 6 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 - 6 = 6 (left: 6 6) -> 6 * 6 = 36 (left: 36) -> 36 / 2 = 18 -> 18 * 2 = 36 (left: 36)",
                "Pruning": "NA"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "12 / 2 = 6 (left: 2 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 12 12"
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 4 12 12) -> 4 + 12 = 16 (left: 12 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 4 12 12) -> 4 + 12 = 16 (left: 12 16) -> 16 - 12 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 / 6 = 2 (left: 2 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 / 6 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 - 6 = 6 (left: 6 6) -> 6 * 6 = 36 (left: 36) -> There are no possible next steps since there is only one number provided.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 - 6 = 6 (left: 6 6) -> 6 * 6 = 36 (left: 36) -> There are no possible next steps since there is only one number provided. -> There are no possible next steps since there is only one number provided.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "6 * 2 = 12 (left: 4 6 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 4 6  -> Input: 3 9 5",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 4 6  -> Input: 3 9 5 -> 9 / 3 = 3 (left: 3 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 / 6 = 2 (left: 6 2)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 / 6 = 2 (left: 6 2) -> 6 - 2 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 / 6 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 / 6 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10) -> 10 + 2 = 12",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "12 / 4 = 3 (left: 2 3 ",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 4 6  -> 4 + 6 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 - 8 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 3": {
                "Step": "6 * 2 = 12 (left: 4 6  -> 4 + 6 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 * 2 = 12 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 - 8 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (2 + 4) * (6 / 12) = 24",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (2 + 4) * (6 / 12) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "12 / 2 = 6 (left: 2 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 12"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 6 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 / 6 = 2 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 - 6 = 0 (left: 0 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 - 6 = 0 (left: 0 12) -> 12 / 0 = undefined (left: 0 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "0 12"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 - 6 = 0 (left: 0 12) -> 12 / 0 = undefined (left: 0 12) -> 12 * 0 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (2 + 4) * (6 / 12) = 24",
                "Pruning": "NA"
            }
        },
        "Input": "2 4 6 12",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "924": {
        "puzzle": "6 7 8 11",
        "Agent 0": {
            "Step 0": {
                "Step": "11 - 7 = 4 (left: 6 8 4)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 11"
                }
            },
            "Step 1": {
                "Step": "11 - 6 = 5 (left: 5 7 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 6 = 5 (left: 5 7 8) -> Input: 10 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 11"
                }
            },
            "Step 3": {
                "Step": "8 + 6 = 14 (left: 7 11 14)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 + 6 = 14 (left: 7 11 14) -> 7 + 11 = 18 (left: 14 18)"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 - 6 = 2 (left: 2 7 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 11"
                }
            },
            "Step 1": {
                "Step": "7 + 8 = 15 (left: 6 11 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 6 11 15) -> 15 - 11 = 4 (left: 4 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "11 14 18"
                }
            },
            "Step 3": {
                "Step": "6 + 8 = 14 (left: 7 11 14) -> 7 + 11 = 18 (left: 11 14 18) -> 14 + 18 = 32 (left: 11 32)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 8 = 14 (left: 7 11 14) -> 7 + 11 = 18 (left: 11 14 18) -> 14 + 18 = 32 (left: 11 32) -> 11 - 32 = -21 (left: -21)"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 + 8 = 15 (left: 6 11 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 11 15"
                }
            },
            "Step 1": {
                "Step": "7 + 8 = 15 (left: 6 11 15) -> 15 - 6 = 9 (left: 6 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 6 11 15) -> 15 - 6 = 9 (left: 6 9) -> 10 * 5 = 50",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "6 4"
                }
            },
            "Step 3": {
                "Step": "7 + 8 = 15 (left: 6 11 15) -> 15 - 11 = 4 (left: 6 4) -> 6 * 4 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 + 8 = 15 (left: 6 11 15) -> 15 - 11 = 4 (left: 6 4) -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (7 + (8 - 11)) = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "8 * 11 = 88 (left: 6 7 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 11"
                }
            },
            "Step 1": {
                "Step": "8 + 11 = 19 (left: 6 7 19)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 + 11 = 19 (left: 6 7 19) -> 6 + 7 = 13 (left: 13 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 11"
                }
            },
            "Step 3": {
                "Step": "7 + 8 = 15 (left: 6 11 15)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 + 8 = 15 (left: 6 11 15) -> 11 / 6 = 1.8333 (left: 1.8333 15)"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "8 + 11 = 19 (left: 6 7 19)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 11"
                }
            },
            "Step 1": {
                "Step": "8 * 11 = 88 (left: 6 7 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 * 11 = 88 (left: 6 7  -> 7 / 6 = 1.1666666666666667 (left: 1.1666666666666667)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 11"
                }
            },
            "Step 3": {
                "Step": "11 + 6 = 17 (left: 7 8 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 + 6 = 17 (left: 7 8  -> 8 / 7 = 1.14 (left: 1.14)"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "7 - 6 = 1 (left: 1 6 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 11"
                }
            },
            "Step 1": {
                "Step": "8 - 6 = 2 (left: 2 7 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 6 = 2 (left: 2 7 11) -> 7 - 2 = 5 (left: 2 5 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 8 4"
                }
            },
            "Step 3": {
                "Step": "11 - 7 = 4 (left: 6 8 4) -> 8 / 6 = 1.33 (left: 1.33 4)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 7 = 4 (left: 6 8 4) -> 8 / 6 = 1.33 (left: 1.33 4) -> 1.33 * 4 = 5.32 (left: 5.32)"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 * 7 = 42 (left: 8 11 42)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 11"
                }
            },
            "Step 1": {
                "Step": "7 + 8 = 15 (left: 6 11 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 6 11 15) -> 15 - 11 = 4 (left: 6 4)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 11"
                }
            },
            "Step 3": {
                "Step": "8 + 11 = 19 (left: 6 7 19)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 + 11 = 19 (left: 6 7 19) -> 6 + 7 = 13 (left: 13 19)"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "11 - 6 = 5 (left: 5 7 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 11"
                }
            },
            "Step 1": {
                "Step": "6 + 8 = 14 (left: 7 11 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 8 = 14 (left: 7 11 14) -> 7 + 11 = 18 (left: 11 14 18)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "6 4"
                }
            },
            "Step 3": {
                "Step": "7 + 8 = 15 (left: 6 11 15) -> 15 - 11 = 4 (left: 6 4) -> 6 + 4 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 + 8 = 15 (left: 6 11 15) -> 15 - 11 = 4 (left: 6 4) -> 6 + 4 = 10 (left: 10) -> 10 * 2 = 20 (left: 2)"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "7 + 8 = 15 (left: 6 11 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 11"
                }
            },
            "Step 1": {
                "Step": "6 + 7 = 13 (left: 8 11 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 7 = 13 (left: 8 11 13) -> 11 * 13 = 143 (left: 8 143)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 11"
                }
            },
            "Step 3": {
                "Step": "8 - 7 = 1 (left: 6 1 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 - 7 = 1 (left: 6 1 11) -> 6 + 1 = 7 (left: 7 11)"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "6 * 7 = 42 (left: 8 11 42)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 11"
                }
            },
            "Step 1": {
                "Step": "7 + 8 = 15 (left: 6 11 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 6 11 15) -> 15 - 6 = 9 (left: 6 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "6 4"
                }
            },
            "Step 3": {
                "Step": "7 + 8 = 15 (left: 6 11 15) -> 15 - 11 = 4 (left: 6 4) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 + 8 = 15 (left: 6 11 15) -> 15 - 11 = 4 (left: 6 4) -> 6 / 4 = 1.5 (left: 1.5) -> 1.5 * 8 = 12 (left: 12)"
            }
        },
        "Input": "6 7 8 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            }
        ]
    },
    "925": {
        "puzzle": "7 9 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "9 / 7 = 1 (left: 1 9 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 9 13"
                }
            },
            "Step 1": {
                "Step": "9 - 7 = 2 (left: 2 9 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 * 9 = 18 (left: 18 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 9 13"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 7 4 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 7 4  -> 4 - 7 = -3 (left: -3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "18 13"
                }
            },
            "Step 5": {
                "Step": "7 + 9 = 16 (left: 9 9 13) -> 9 + 9 = 18 (left: 18 13) -> 18 / 13 = 1.3846153846154 (left: 1.3846153846154)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 9 = 16 (left: 9 9 13) -> 9 + 9 = 18 (left: 18 13) -> 18 / 13 = 1.3846153846154 (left: 1.3846153846154) -> 1.3846153846154 - 1 = 0.3846153846154",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 7 9 ",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 9 13"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 7 4 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 7 4 9) -> 3 + 5 = 8 (left: 8 2 2)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 9 13"
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 6 9 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "18 13"
                }
            },
            "Step 5": {
                "Step": "7 + 9 = 16 (left: 9 9 13) -> 9 + 9 = 18 (left: 18 13) -> 18 * 13 = 234 (left: 234)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 9 = 16 (left: 9 9 13) -> 9 + 9 = 18 (left: 18 13) -> 18 * 13 = 234 (left: 234) -> Possible",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "10.2857 13"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 - 9 = -2 (left: -2 9 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "2 9 13"
                }
            },
            "Step 1": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 + 9 = 11 (left: 11 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 + 9 = 11 (left: 11 13) -> 13 - 11 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "10.2857 13"
                }
            },
            "Step 3": {
                "Step": "9 / 7 = 1.2857 (left: 1.2857 9 13) -> 9 + 1.2857 = 10.2857 (left: 10.2857 13) -> 13 - 10.2857 = 2.7143 (left: 2.7143 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 / 7 = 1.2857 (left: 1.2857 9 13) -> 9 + 1.2857 = 10.2857 (left: 10.2857 13) -> 13 - 10.2857 = 2.7143 (left: 2.7143 13) -> 13 - 2.7143 = 10.2857 (left: 10.2857 13)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "11 13"
                }
            },
            "Step 5": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 + 9 = 11 (left: 11 13) -> 11 / 13 = 0.8461538461538461 (left: 0.8461538461538461)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 + 9 = 11 (left: 11 13) -> 11 / 13 = 0.8461538461538461 (left: 0.8461538461538461) -> 0.8461538461538461 + 2 = 2.846153846153846",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 7 = 2 (left: 2 9 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 9 13"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 7 4 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 7 4 9) -> 9 + 7 = 16 (left: 4 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 9 13"
                }
            },
            "Step 3": {
                "Step": "9 - 7 = 2 (left: 2 9 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 * 9 = 18 (left: 18 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "9 50"
                }
            },
            "Step 5": {
                "Step": "7 * 9 = 63 (left: 9 13 63) -> 63 - 13 = 50 (left: 9 50) -> 9 * 50 = 450 (left: 450)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 9 = 63 (left: 9 13 63) -> 63 - 13 = 50 (left: 9 50) -> 9 * 50 = 450 (left: 450) -> 450 * 2 = 900 (left: 2)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "10.2857 13"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "7 - 9 = -2 (left: -2 9 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 9 13"
                }
            },
            "Step 1": {
                "Step": "7 + 9 = 16 (left: 9 9 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 9 = 16 (left: 9 9 13) -> 9 + 9 = 18 (left: 18 13)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 9 13"
                }
            },
            "Step 3": {
                "Step": "7 * 9 = 63 (left: 9 13 63)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 * 9 = 63 (left: 9 13 63) -> 63 - 13 = 50 (left: 9 50)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "11 13"
                }
            },
            "Step 5": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 + 9 = 11 (left: 11 13) -> 11 - 13 = -2 (left: -2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 + 9 = 11 (left: 11 13) -> 11 - 13 = -2 (left: -2) -> There are no possible next steps with the input of -2.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "7 * 9 = 63 (left: 9 13 63)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 9 13"
                }
            },
            "Step 1": {
                "Step": "7 + 9 = 16 (left: 9 9 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 9 = 16 (left: 9 9 13) -> 9 / 9 = 1 (left: 1 9 13)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 9 13"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 7 9 4)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 7 9 4) -> 7 * 9 = 63 (left: 63 4)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "63 4"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 7 9 4) -> 7 * 9 = 63 (left: 63 4) -> 63 - 4 = 59 (left: 59)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 7 9 4) -> 7 * 9 = 63 (left: 63 4) -> 63 - 4 = 59 (left: 59) -> No possible next steps as there is only one number given.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "9 - 7 = 2 (left: 2 9 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 9 13"
                }
            },
            "Step 1": {
                "Step": "9 / 7 = 1.2857 (left: 1.2857 9 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 7 = 1.2857 (left: 1.2857 9 13) -> 9 + 1.2857 = 10.2857 (left: 10.2857 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 9 13"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 7 9 4)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 7 9 4) -> 9 + 4 = 13 (left: 7 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "11 13"
                }
            },
            "Step 5": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 + 9 = 11 (left: 11 13) -> 13 - 11 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 + 9 = 11 (left: 11 13) -> 13 - 11 = 2 (left: 2) -> 2 + 2 = 4",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "13 + 7 = 20 (left: 7 9 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 9 13"
                }
            },
            "Step 1": {
                "Step": "9 / 7 = 1 (left: 1 9 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 7 = 1 (left: 1 9 13) -> 13 - 1 = 12 (left: 9 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 9 13"
                }
            },
            "Step 3": {
                "Step": "9 - 7 = 2 (left: 2 9 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 + 9 = 11 (left: 11 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "11 13"
                }
            },
            "Step 5": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 + 9 = 11 (left: 11 13) -> 11 * 13 = 143 (left: 143)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 + 9 = 11 (left: 11 13) -> 11 * 13 = 143 (left: 143) -> 1 + 4 + 3 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "10.2857 13"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "9 * 3 = 27 (left: 7 13 27)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 9 13"
                }
            },
            "Step 1": {
                "Step": "7 * 9 = 63 (left: 9 13 63)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 * 9 = 63 (left: 9 13 63) -> 63 - 9 = 54 (left: 54 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 9 13"
                }
            },
            "Step 3": {
                "Step": "9 / 7 = 1 (left: 1 9 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 / 7 = 1 (left: 1 9 13) -> 13 - 9 = 4 (left: 4 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "9 50"
                }
            },
            "Step 5": {
                "Step": "7 * 9 = 63 (left: 9 13 63) -> 63 - 13 = 50 (left: 9 50) -> 9 - 50 = -41 (left: -41)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 9 = 63 (left: 9 13 63) -> 63 - 13 = 50 (left: 9 50) -> 9 - 50 = -41 (left: -41) -> -41 + 2 = -39 (left: -39)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "10.2857 13"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "9 / 7 = 1 (left: 1 9 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 9 13"
                }
            },
            "Step 1": {
                "Step": "9 * 9 = 81 (left: 7 81 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 * 9 = 81 (left: 7 81 13) -> 13 + 7 = 20 (left: 81 20)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 9 13"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 7 9 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 7 9  -> 6 - 4 = 2 (left:",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "18 13"
                }
            },
            "Step 5": {
                "Step": "7 + 9 = 16 (left: 9 9 13) -> 9 + 9 = 18 (left: 18 13) -> 18 + 13 = 31 (left: 31)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 9 = 16 (left: 9 9 13) -> 9 + 9 = 18 (left: 18 13) -> 18 + 13 = 31 (left: 31) -> 31 - 2 = 29",
                "Pruning": null
            }
        },
        "Input": "7 9 9 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "926": {
        "puzzle": "3 6 9 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 3 = 9 (left: 9 6 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "18 9 12"
                }
            },
            "Step 1": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 18 - 12 = 6 (left: 6 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 18 - 12 = 6 (left: 6 12) -> 6 + 12 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 9 9"
                }
            },
            "Step 3": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 - 9 = 0 (left: 6 0 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 - 9 = 0 (left: 6 0 9) -> 6 + 0 = 6 (left: 6 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 18 - 12 = 6 (left: 6 12) -> 6 + 12 = 18 (left: 18) -> 18 * 8 = 144 (left: 8)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "16 144"
                }
            },
            "Step 6": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 18 - 12 = 6 (left: 6 12) -> 6 + 12 = 18 (left: 18) -> 18 * 8 = 144 (left: 8 144) -> 8 * 2 = 16 (left: 16 144) -> 144 - 16 = 128 (left: 128)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "16 144"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 * 3 = 18 (left: 9 18 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "9 12 18"
                }
            },
            "Step 1": {
                "Step": "3 * 6 = 18 (left: 9 12 18) -> 18 - 9 = 9 (left: 9 18)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 6 = 18 (left: 9 12 18) -> 18 - 9 = 9 (left: 9 18) -> Input: 3 5 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 9 9"
                }
            },
            "Step 3": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 6 + 9 = 15 (left: 9 9 15)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 6 + 9 = 15 (left: 9 9 15) -> 15 - 9 = 6 (left: 9 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "16 144"
                }
            },
            "Step 5": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 18 - 12 = 6 (left: 6 12) -> 6 + 12 = 18 (left: 18) -> 18 * 8 = 144 (left: 8 144) -> 8 * 2 = 16 (left: 16 144) -> 144 - 16 = 128 (left: 128)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "16 144"
                }
            },
            "Step 6": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 18 - 12 = 6 (left: 6 12) -> 6 + 12 = 18 (left: 18) -> 18 * 8 = 144 (left: 8 144) -> 8 * 2 = 16 (left: 16 144) -> 16 + 144 = 160 (left: 160)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "16 144"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 * 6 = 18 (left: 18 9 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 9 9"
                }
            },
            "Step 1": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9) -> 9 / 3 = 3 (left: 3 9 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 9 9"
                }
            },
            "Step 3": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 + 6 = 15 (left: 9 9 15)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 + 6 = 15 (left: 9 9 15) -> 9 + 9 = 18 (left: 15 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "16 144"
                }
            },
            "Step 5": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 18 - 12 = 6 (left: 6 12) -> 6 + 12 = 18 (left: 18) -> 18 * 8 = 144 (left: 8 144) -> 8 * 2 = 16 (left: 16 144) -> 144 - 16 = 128 (left: 128)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "16 144"
                }
            },
            "Step 6": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 18 - 12 = 6 (left: 6 12) -> 6 + 12 = 18 (left: 18) -> 18 * 8 = 144 (left: 8 144) -> 8 * 2 = 16 (left: 16 144) -> 144 / 16 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "16 144"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "12 - 3 = 9 (left: 6 9 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 6 9 12"
                }
            },
            "Step 1": {
                "Step": "3 * 6 = 18 (left: 18 9 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 9 * 12 = 108 (left:",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "9 12 18"
                }
            },
            "Step 3": {
                "Step": "3 * 6 = 18 (left: 9 12 18) -> 18 - 9 = 9 (left: 9 18)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 6 = 18 (left: 9 12 18) -> 18 - 9 = 9 (left: 9 18) -> 18 + 9 = 27 (left: 27)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "16 144"
                }
            },
            "Step 5": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 18 - 12 = 6 (left: 6 12) -> 6 + 12 = 18 (left: 18) -> 18 * 8 = 144 (left: 8 144) -> 8 * 2 = 16 (left: 16 144) -> 144 / 16 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "18"
                }
            },
            "Step 6": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 18 - 12 = 6 (left: 6 12) -> 6 + 12 = 18 (left: 18) -> 18 / 2 = 9",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 - 3 = 9 (left: 6 9 9)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "9 6 12"
                }
            },
            "Step 1": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 12 - 6 = 6 (left: 9 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 12 - 6 = 6 (left: 9 6) -> 9 / 6 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 9 9"
                }
            },
            "Step 3": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 6 / 9 = 0.6666666666666666 (left: 0.6666666666666666 9",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 6 / 9 = 0.6666666666666666 (left: 0.6666666666666666 9 -> 9 - 0.6666666666666666 = 8.333333333333334 (left: 8.333333333333334 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "16 144"
                }
            },
            "Step 5": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 18 - 12 = 6 (left: 6 12) -> 6 + 12 = 18 (left: 18) -> 18 * 8 = 144 (left: 8 144) -> 8 * 2 = 16 (left: 16 144) -> 16 * 9 = 144 (left: 144)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "16 144"
                }
            },
            "Step 6": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 18 - 12 = 6 (left: 6 12) -> 6 + 12 = 18 (left: 18) -> 18 * 8 = 144 (left: 8 144) -> 8 * 2 = 16 (left: 16 144) -> 16 * 9 = 144 (left: 144)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "16 144"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "3 + 6 = 9 (left: 9 9 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 6 9 12"
                }
            },
            "Step 1": {
                "Step": "6 / 3 = 2 (left: 2 9 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 3 = 2 (left: 2 9 12) -> 9 / 2 = 4.5 (left: 4.5 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 9 9"
                }
            },
            "Step 3": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 * 6 = 54 (left: 9 9 54)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 * 6 = 54 (left: 9 9 54) -> 9 + 9 = 18 (left: 18 54)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "16 144"
                }
            },
            "Step 5": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 18 - 12 = 6 (left: 6 12) -> 6 + 12 = 18 (left: 18) -> 18 * 8 = 144 (left: 8 144) -> 8 * 2 = 16 (left: 16 144) -> 144 - 16 = 128 (left: 128)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "16 144"
                }
            },
            "Step 6": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 18 - 12 = 6 (left: 6 12) -> 6 + 12 = 18 (left: 18) -> 18 * 8 = 144 (left: 8 144) -> 8 * 2 = 16 (left: 16 144) -> 144 - 16 = 128 (left: 128)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "16 144"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 - 3 = 3 (left: 3 9 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 9 9"
                }
            },
            "Step 1": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 6 + 9 = 15 (left: 9 9 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 6 + 9 = 15 (left: 9 9 15) -> 9 + 9 = 18 (left: 18 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 6 9 12"
                }
            },
            "Step 3": {
                "Step": "9 / 3 = 3 (left: 3 9 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 / 3 = 3 (left: 3 9 12) -> 9 - 3 = 6 (left: 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 18 - 12 = 6 (left: 6 12) -> 6 + 12 = 18 (left: 18) -> No further calculations can be made with the input of 18.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 18 - 12 = 6 (left: 6 12) -> 6 + 12 = 18 (left: 18) -> No further calculations can be made with the input of 18. -> There are no possible next steps with the input of 18.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "3 + 6 = 9 (left: 9 9 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "9 6 12"
                }
            },
            "Step 1": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 12 / 6 = 2 (left: 2 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 12 / 6 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 6 9 12"
                }
            },
            "Step 3": {
                "Step": "12 - 3 = 9 (left: 6 9 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 3 = 9 (left: 6 9 12) -> Input: 3 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "16 144"
                }
            },
            "Step 5": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 18 - 12 = 6 (left: 6 12) -> 6 + 12 = 18 (left: 18) -> 18 * 8 = 144 (left: 8 144) -> 8 * 2 = 16 (left: 16 144) -> 144 - 16 = 128 (left: 128)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "16 144"
                }
            },
            "Step 6": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 18 - 12 = 6 (left: 6 12) -> 6 + 12 = 18 (left: 18) -> 18 * 8 = 144 (left: 8 144) -> 8 * 2 = 16 (left: 16 144) -> 144 / 16 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "16 144"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "3 + 6 = 9 (left: 9 9 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "9 6 12"
                }
            },
            "Step 1": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 9 / 6 = 1.5 (left: 1.5 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 9 / 6 = 1.5 (left: 1.5 12) -> 1.5 + 12 = 13.5 (left: 13.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 9 9"
                }
            },
            "Step 3": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 / 6 = 1.5 (left: 1.5 9 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 / 6 = 1.5 (left: 1.5 9 9) -> 1.5 * 9 = 13.5 (left: 9 13.5)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "16 144"
                }
            },
            "Step 5": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 18 - 12 = 6 (left: 6 12) -> 6 + 12 = 18 (left: 18) -> 18 * 8 = 144 (left: 8 144) -> 8 * 2 = 16 (left: 16 144) -> 16 + 144 = 160 (left: 160)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "18 54"
                }
            },
            "Step 6": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 * 6 = 54 (left: 9 9 54) -> 9 + 9 = 18 (left: 18 54) -> 5 + 10 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "16 144"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "3 * 6 = 18 (left: 9 12 18)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 9 9"
                }
            },
            "Step 1": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 / 6 = 1.5 (left: 1.5 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 / 6 = 1.5 (left: 1.5 9) -> 1.5 + 9 = 10.5 (left: 10.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 18 - 12 = 6 (left: 6 12) -> 6 + 12 = 18 (left: 18) -> 18 * 8 = 144 (left: 8 144)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 18 - 12 = 6 (left: 6 12) -> 6 + 12 = 18 (left: 18) -> 18 * 8 = 144 (left: 8 144) -> 8 * 2 = 16 (left: 16 144)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 18 - 12 = 6 (left: 6 12) -> 6 + 12 = 18 (left: 18) -> 18 * 2 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "16 144"
                }
            },
            "Step 6": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 18 - 12 = 6 (left: 6 12) -> 6 + 12 = 18 (left: 18) -> 18 * 8 = 144 (left: 8 144) -> 8 * 2 = 16 (left: 16 144) -> 144 - 16 = 128 (left: 128)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "16 144"
                }
            }
        },
        "Input": "3 6 9 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "927": {
        "puzzle": "6 9 12 13",
        "Agent 0": {
            "Step 0": {
                "Step": "6 * 9 = 54 (left: 12 13 54)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 + 4 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 + 4 = 10 (left: 10) -> 10 / 2 = 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 4 "
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 4 5 7\nSteps:\n3 * 7 = 21 (left: 4 5 21)\n5 + 4 = 9 (left: 9 21)\n9 + 21 = 30 (left: 30)\nAnswer: (3 * 7) + (5 + 4) = 24",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 5 7\nSteps:\n5 + 7 = 12 (left: 3 3 12)\n3 * 3 = 9 (left: 9 12)\n12 - 9 = 3 (left: 3 3)\n3 * 3 = 9 (left: 9)\n9 * 3 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 12 13 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 12 13"
                }
            },
            "Step 1": {
                "Step": "12 + 3 = 15 (left: 6 13 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 + 3 = 15 (left: 6 13 15) -> 6 * 13 = 78 (left: 78 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 5 7 8\nSteps:\n7 - 3 = 4 (left: 4 5 8)\n8 - 5 = 3 (left: 4 3)\n4 * 3 = 12 (left: 12)\n12 + 12 = 24 (left: 24)\nAnswer: ((7 - 3) * (8 - 5)) + 12 = 24",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "2.5 4"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 / 4 = 1.5 (left: 1.5 4) -> 4 - 1.5 = 2.5 (left: 2.5 4) -> 2.5 * 4 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "2.5 4"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "2.5 4"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 / 4 = 1.5 (left: 1.5 4) -> 4 - 1.5 = 2.5 (left: 2.5 4) -> 4 - 2.5 = 1.5 (left: 1.5)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "2.5 4"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 / 4 = 1.5 (left: 1.5 4) -> 4 - 1.5 = 2.5 (left: 2.5 4) -> 4 - 2.5 = 1.5 (left: 1.5)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 12 13 15)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 12 13"
                }
            },
            "Step 3": {
                "Step": "9 + 12 = 21 (left: 6 13 21)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 + 12 = 21 (left: 6 13 21) -> 6 + 13 = 19 (left: 19 21)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "2.5 4"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 / 4 = 1.5 (left: 1.5 4) -> 4 - 1.5 = 2.5 (left: 2.5 4) -> Possible next steps:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 / 4 = 1.5 (left: 1.5 4) -> 4 - 1.5 = 2.5 (left: 2.5 4) -> Possible next steps: -> - 8 + 2 = 10 (left: 10 8)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 6 4 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 / 4 = 1.5 (left: 1.5 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 / 4 = 1.5 (left: 1.5 4) -> 4 - 1.5 = 2.5 (left: 2.5 4)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 6 8\nSteps:\n3 + 3 = 6 (left: 6 6 8)\n6 * 8 = 48 (left: 48 6)\n48 / 6 = 24 (left: 24)\nAnswer: (3 + 3) * (6 * 8) = 24",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "2.5 4"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 / 4 = 1.5 (left: 1.5 4) -> 4 - 1.5 = 2.5 (left: 2.5 4) -> 2.5 * 4 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6)\n3 + 6 = 9 (left: 9)\n9 * 24 = 24 (left: 24)\nAnswer: (3 + 6) * (3 * 8) = 24",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 8 9\nSteps:\n3 * 8 = 24 (left: 3 9 24)\n3 + 9 = 12 (left: 12 24)\n12 * 2 = 24 (left: 24)\nAnswer: (3 * 8) * (3 + 9) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 6 9 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "12 13 15"
                }
            },
            "Step 1": {
                "Step": "6 + 9 = 15 (left: 12 13 15) -> 12 * 13 = 156 (left: 15 156)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 9 = 15 (left: 12 13 15) -> 12 * 13 = 156 (left: 15 156) -> 15 * 156 = 2340 (left: 2340)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "2.5 4"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 / 4 = 1.5 (left: 1.5 4) -> 4 - 1.5 = 2.5 (left: 2.5 4) -> 2.5 * 4 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "6 4 "
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n1 * 9 = 9 (left: 9)\n9 * 3 = 27 (left: 27)\nAnswer: ((3 * 3) - 8) * 9 = 24",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "2.5 4"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 / 4 = 1.5 (left: 1.5 4) -> 4 - 1.5 = 2.5 (left: 2.5 4) -> 2.5 + 4 = 6.5 (left: 6.5)",
                "Pruning": "NA"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "6 * 9 = 54 (left: 12 13 54)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 12 13"
                }
            },
            "Step 1": {
                "Step": "9 + 12 = 21 (left: 6 13 21)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 12 = 21 (left: 6 13 21) -> 21 - 6 = 15 (left: 15 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "2.5 4"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 / 4 = 1.5 (left: 1.5 4) -> 4 - 1.5 = 2.5 (left: 2.5 4) -> 2.5 * 4 = 10 (left: 10) ",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "2.5 4"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 / 4 = 1.5 (left: 1.5 4) -> 4 - 1.5 = 2.5 (left: 2.5 4) -> 2.5 + 4 = 6.5 (left: 6.5)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "2.5 4"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 8 9\nSteps:\n8 - 3 = 5 (left: 3 5 9)\n5 * 3 = 15 (left: 15 9)\n15 + 9 = 24 (left: 24)\nAnswer: (8 - 3) * (3 + 9) = 24",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> The answer is 6 * (13 - 9) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 6 12 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 12 13"
                }
            },
            "Step 1": {
                "Step": "6 * 9 = 54 (left: 12 13 54)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 9 = 54 (left: 12 13 54) -> 13 - 12 = 1 (left: 1 54)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "2.5 4"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 / 4 = 1.5 (left: 1.5 4) -> 4 - 1.5 = 2.5 (left: 2.5 4) -> 2.5 + 4 = 6.5 (left: 6.5)",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "24"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 4 5 6\nSteps:\n3 * 4 = 12 (left: 5 6 12)\n5 + 6 = 11 (left: 11 12)\n11 * 2 = 24 (left: 24)\nAnswer: (3 * 4) * (5 + 6) = 24",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "2.5 4"
                },
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 6 9\nSteps:\n3 * 9 = 27 (left: 3 6 27)\n27 - 6 = 21 (left: 3 21)\n21 - 3 = 18 (left: 18)\nAnswer: (3 * 9) - (6 + 3) = 24",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "2.5 4"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 / 4 = 1.5 (left: 1.5 4) -> 4 - 1.5 = 2.5 (left: 2.5 4) -> 2.5 + 4 = 6.5 (left: 6.5)",
                "Pruning": "NA"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 7 12 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 12 13"
                }
            },
            "Step 1": {
                "Step": "9 - 6 = 3 (left: 3 12 13) -> 12 - 3 = 9 (left: 9 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 6 = 3 (left: 3 12 13) -> 12 - 3 = 9 (left: 9 13) -> 13 / 9 = 1.444444 (left: 1.444444)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "12 13 15"
                }
            },
            "Step 3": {
                "Step": "6 + 9 = 15 (left: 12 13 15) -> 15 - 12 = 3 (left: 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 9 = 15 (left: 12 13 15) -> 15 - 12 = 3 (left: 13) -> 13 + 2 = 15 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 3 8\nSteps:\n3 * 3 = 9 (left: 3 8 9)\n9 - 8 = 1 (left: 1 9)\n1 * 24 = 24 (left: 24)\nAnswer: (3 * 3) + (8 - 1) = 24",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 6 7\nSteps:\n3 * 7 = 21 (left: 3 6 21)\n21 - 6 = 15 (left: 3 15)\n15 + 3 = 18 (left: 18)\n18 + 6 = 24 (left: 24)\nAnswer: ((3 * 7) - 6) + 3 + 6 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: 3 12 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 5 7 8\nSteps:\n5 + 7 = 12 (left: 3 8 12)\n12 - 8 = 4 (left: 3 4)\n3 * 4 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((5 + 7) - 8) * 2 = 24",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "24"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 5 7\nSteps:\n3 + 7 = 10 (left: 3 5 10)\n5 - 3 = 2 (left: 2 10)\n2 * 10 = 20 (left: 20)\n20 + 4 = 24 (left: 24)\nAnswer: ((3 + 7) - (5 - 3)) * 4 = 24",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "2.5 4"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "2.5 4"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 / 4 = 1.5 (left: 1.5 4) -> 4 - 1.5 = 2.5 (left: 2.5 4) -> 2.5 + 4 = 6.5 (left: 6.5)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "2.5 4"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 / 4 = 1.5 (left: 1.5 4) -> 4 - 1.5 = 2.5 (left: 2.5 4) -> 4 - 2.5 = 1.5 (left: 1.5)",
                "Pruning": "NA"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: 3 12 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "6 12 13"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 6 12 13) -> 12 / 6 = 2 (left: 2 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 6 12 13) -> 12 / 6 = 2 (left: 2 13) -> 2 * 13 = 26 (left: 26)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 4 "
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 / 4 = 1.5 (left: 1.5) -> There are no possible next steps with the input of 1.5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "2.5 4"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 / 4 = 1.5 (left: 1.5 4) -> 4 - 1.5 = 2.5 (left: 2.5 4) -> 4 + 2.5 = 6",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 / 4 = 1.5 (left: 1.5 4) -> 4 - 1.5 = 2.5 (left: 2.5 4) -> 4 + 2.5 = 6 -> 6 + 2.5 = 8.5",
                "Pruning": null
            }
        },
        "Input": "6 9 12 13",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            }
        ]
    },
    "928": {
        "puzzle": "4 7 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 4 7 13)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "5 9 13"
                }
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 5 9 13) -> 13 / 5 = 2.6 (",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 4 = 5 (left: 5 9 13) -> 13 / 5 = 2.6 ( -> 13 + 5 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 + 8 = 18 (left: 18) -> There are no possible next steps as there are no more numbers to perform operations on.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 + 8 = 18 (left: 18) -> There are no possible next steps as there are no more numbers to perform operations on. -> There are no possible next steps as there are no more numbers to perform operations on.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 - 4 = 5 (left: 5 9 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 + 6 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 + 8 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24 -> Input: 3 3 6 9\nSteps:\n3 * 3 = 9 (left: 6 9)\n6 + 9 = 15 (left: 15)\n15 - 6 = 9 (left: 9)\n9 + 9 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 + 9 = 18 (left: 18)\n18 - 9 = 9",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "24"
                }
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24 -> Input: 3 3 4 7\nSteps:\n3 * 7 = 21 (left: 3 4 21)\n21 - 4 = 17 (left: 3 17)\n17 - 3 = 14 (left: 14)\nAnswer: ((3 * 7) - 4) - 3 = 24",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24 -> Input: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n9 * 1 = 9 (left: 9)\n9 * 9 = 81 (left: 81)\nAnswer: ((3 * 3) - 8) * 9 = 24",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24 -> Input: 3 3 5 7\nSteps:\n3 + 7 = 10 (left: 3 5 10)\n5 * 3 = 15 (left: 15 10)\n15 - 10 = 5 (left: 5)\n5 * 5 = 25 (left: 25)\nAnswer: ((3 + 7) * 3) - 10 = 24",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "There are no possible next steps with the given input of 18."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 * 7 = 28 (left: 9 13 28)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 7 9 13"
                }
            },
            "Step 1": {
                "Step": "4 + 7 = 11 (left: 9 11 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 7 = 11 (left: 9 11 13) -> 11 + 13 = 24 (left: 9 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 7 9 13"
                }
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 5 7 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 4 = 5 (left: 5 7 13) -> 13 - 7 = 6 (left: 5 6)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24 -> Input: 3 3 4 7\nSteps:\n3 * 4 = 12 (left: 3 7 12)\n7 + 12 = 19 (left: 3 19)\n19 - 3 = 16 (left: 16)\n16 + 8 = 24 (left: 24)\nAnswer: ((3 * 4) + 7) + 8 = 24",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "There are no possible next steps with the given input of 18."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 * 7 = 28 (left: 9 13 28)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 7 9 13"
                }
            },
            "Step 1": {
                "Step": "9 - 7 = 2 (left: 2 9 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 9 - 2 = 7 (left: 7 13)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 7 9 13"
                }
            },
            "Step 3": {
                "Step": "7 - 4 = 3 (left: 3 9 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 4 = 3 (left: 3 9 13) -> 3 + 9 = 12 (left: 12 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24 -> Input: 3 6 8 9\nSteps:\n3 * 8 = 24 (left: 6 9 24)\n6 - 9 = -3 (left: -3 24)\n-3 + 24 = 21 (left: 21)\nAnswer: (3 * 8) - (6 + 9) = 24",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24 -> Input: 3 3 4 7\nSteps:\n3 * 4 = 12 (left: 3 7 12)\n7 + 12 = 19 (left: 3 19)\n19 - 3 = 16 (left: 16)\n16 + 3 = 19 (left: 19)\n19 + 19 = 38 (left: 38)\n38 - 14 = 24 (left: 24)\nAnswer: ((",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "There are no possible next steps with the given input of 18."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 + 7 = 11 (left: 9 11 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 6 / 4 = 1.5 (left: 1.5) -> 1.5 + 2 = 3.5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 + 8 = 18 (left: 18) -> There are no possible next steps with the given input of 18.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 + 8 = 18 (left: 18) -> There are no possible next steps with the given input of 18. -> There are no possible next steps with the given input of 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24 -> Input: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9 9)\n1 * 9 = 9 (left: 9 9)\n9 * 9 = 81 (left: 81)\n81 / 3 = 27 (left: 27)\n27 - 9 = 18 (left: 18",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24 -> Input: 3 3 4 8\nSteps:\n3 * 8 = 24 (left: 3 4 24)\n4 - 3 = 1 (left: 1 24)\n1 * 24 = 24 (left: 24)\nAnswer: (3 * 8) * (4 - 3) = 24",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "There are no possible next steps with the given input of 18."
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "4 * 7 = 28 (left: 9 13 28)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 7 9 13"
                }
            },
            "Step 1": {
                "Step": "7 - 4 = 3 (left: 3 9 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 4 = 3 (left: 3 9 13) -> 3 * 9 = 27 (left: 27 13)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 + 8 = 18 (left: 18) -> 18 / 2 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "4 6 "
                }
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24 -> Input: 3 3 4 7\nSteps:\n3 + 7 = 10 (left: 3 4 10)\n3 * 4 = 12 (left: 12 10)\n12 + 10 = 22 (left: 22)\n22 + 2 = 24 (left: 24)\nAnswer: ((3 + 7) * 4) + 2 = 24",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24 -> Input: 3 5 6 7\nSteps:\n3 + 7 = 10 (left: 5 6 10)\n5 * 6 = 30 (left: 10 30)\n30 / 10 = 3 (left: 3 30)\n3 * 3 = 9 (left: 9 30)\n30 - 9 = 21 (left: 21)\n21 + 9 = 30 (left: 30",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "There are no possible next steps with the given input of 18."
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "13 - 7 = 6 (left: 4 6 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 7 9 13"
                }
            },
            "Step 1": {
                "Step": "4 + 7 = 11 (left: 9 11 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 7 = 11 (left: 9 11 13) -> 11 + 13 = 24 (left: 9 24)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24 -> Input: 3 3 5 7\nSteps:\n3 + 5 = 8 (left: 3 7 8)\n3 + 7 = 10 (left: 10 8)\n10 - 8 = 2 (left: 2)\n2 * 12 = 24 (left: 24)\nAnswer: ((3 + 5) + (3 + 7)) * 2 = 24",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "24"
                }
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24 -> Input: 3 5 6 7\nSteps:\n5 + 7 = 12 (left: 3 6 12)\n12 - 6 = 6 (left: 3 6)\n6 * 3 = 18 (left: 18)\n18 + 6 = 24 (left: 24)\nAnswer: ((5 + 7) - 6) * 3 + 6 = 24",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 + 8 = 18 (left: 18) -> There are no possible next steps with the number 18.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 + 8 = 18 (left: 18) -> There are no possible next steps with the number 18. -> There are no possible next steps with the number 18.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "4 * 7 = 28 (left: 9 13 28)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 6 - 4 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 6 - 4 = 2 (left: 2) -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 + 6 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 - 2 = 8 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24 -> Input: 3 3 5 8\nSteps:\n3 + 5 = 8 (left: 3 8 8)\n8 - 3 = 5 (left: 5 8)\n5 * 8 = 40 (left: 40)\nAnswer: (3 + 5) * (8 - 3) = 24",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24 -> Input: 3 3 5 7\nSteps:\n3 + 5 = 8 (left: 3 7 8)\n8 - 7 = 1 (left: 1 3)\n1 * 3 = 3 (left: 3)\n3 * 8 = 24 (left: 24)\nAnswer: (3 * (3 + 5)) * 7 = 24",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "There are no possible next steps with the given input of 18."
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "4 * 7 = 28 (left: 9 13 28)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 13 28"
                }
            },
            "Step 1": {
                "Step": "4 * 7 = 28 (left: 9 13 28) -> 13 / 9 = 1.4444 (left: 1.4444 9 28)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 7 = 28 (left: 9 13 28) -> 13 / 9 = 1.4444 (left: 1.4444 9 28) -> 9 * 1.4444 = 13 (left: 13 28)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24 -> Input: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6)\n3 + 6 = 9 (left: 9)\n9 * 24 = 24\nAnswer: (3 * 8) * (3 + 6) = 24",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "4 6 "
                }
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 6 * 4 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24 -> Input: 3 3 6 9\nSteps:\n3 * 9 = 27 (left: 3 6 27)\n6 - 3 = 3 (left: 3 27)\n27 / 3 = 9 (left: 9 9)\n9 - 9 = 0 (left: 0)\nAnswer: ((3 * 9) - 6) / 9 = 24",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24 -> Input: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6)\n6 - 3 = 3 (left: 3 3)\n3 * 3 = 9 (left: 9)\n9 + 15 = 24 (left: 24)\nAnswer: (3 * 8) + (6 - 3) = 24",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "There are no possible next steps with the given input of 18."
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 4 7 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24 -> Input: 3 6 8 9\nSteps:\n3 * 8 = 24 (left: 6 9 24)\n9 - 6 = 3 (left: 3 24)\n3 * 24 = 72 (left: 72)\nAnswer: (3 * 8) - (9 - 6) = 24",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "24"
                }
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24 -> Input: 3 6 8 9\nSteps:\n6 * 3 = 18 (left: 8 9 18)\n9 - 8 = 1 (left: 1 18)\n1 * 18 = 18 (left: 18)\nAnswer: (6 * 3) * (9 - 8) = 24",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24 -> Input: 3 3 5 8\nSteps:\n3 + 5 = 8 (left: 3 8 8)\n8 - 3 = 5 (left: 5 8)\n5 * 8 = 40 (left: 40)\n40 - 8 = 32 (left: 32)\n32 / 8 = 4 (left: 4)\n4 * 5 = 20 (left: 20)\n20 + ",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24 -> Input: 3 5 6 7\nSteps:\n3 + 7 = 10 (left: 5 6 10)\n5 * 6 = 30 (left: 10 30)\n30 / 10 = 3 (left: 3 30)\n3 * 30 = 90 (left: 90)\n90 / 3 = 24 (left: 24)\nAnswer: ((3 + 7) * 6) / ",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "There are no possible next steps with the given input of 18."
                }
            }
        },
        "Input": "4 7 9 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "929": {
        "puzzle": "5 6 8 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 + 6 = 10 (left: 10 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 + 6 = 10 (left: 10 12) -> 12 - 10 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 3": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 12 / 4 = ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 12 / 4 =  -> 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "4 11"
                }
            },
            "Step 5": {
                "Step": "12 - 8 = 4 (left: 5 6 4) -> 5 + 6 = 11 (left: 4 11) -> 4 + 11 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 8 = 4 (left: 5 6 4) -> 5 + 6 = 11 (left: 4 11) -> 4 + 11 = 15 (left: 15) -> There are no possible next steps with the input 15.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 - 5 = 7 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 8 12"
                }
            },
            "Step 1": {
                "Step": "12 / 6 = 2 (left: ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 6 = 2 (left:  -> It seems like you forgot to provide an input. Please enter a set of numbers to continue the calculation.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "4 11"
                }
            },
            "Step 3": {
                "Step": "12 - 8 = 4 (left: 5 6 4) -> 5 + 6 = 11 (left: 4 11) -> 4 * 11 = 44 (left: 44)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 8 = 4 (left: 5 6 4) -> 5 + 6 = 11 (left: 4 11) -> 4 * 11 = 44 (left: 44) -> There are no possible next steps for the input 44.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "4 11"
                }
            },
            "Step 5": {
                "Step": "12 - 8 = 4 (left: 5 6 4) -> 5 + 6 = 11 (left: 4 11) -> 4 + 11 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 8 = 4 (left: 5 6 4) -> 5 + 6 = 11 (left: 4 11) -> 4 + 11 = 15 (left: 15) -> None.",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "There are no possible next steps for the input 44."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 * 6 = 30 (left: 8 12 30)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "8 11 12"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 8 11 12) -> 8 * 11 = 88 (left: 88)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 8 11 12) -> 8 * 11 = 88 (left: 88) -> 8 - 8 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 3": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 / 12 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "4 11"
                }
            },
            "Step 5": {
                "Step": "12 - 8 = 4 (left: 5 6 4) -> 5 + 6 = 11 (left: 4 11) -> 11 - 4 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 8 = 4 (left: 5 6 4) -> 5 + 6 = 11 (left: 4 11) -> 11 - 4 = 7 (left: 7) -> 7 - 8 = -1 (left: -1 8)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 * 6 = 30 (left: 8 30 12)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 / 12 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 8 12"
                }
            },
            "Step 3": {
                "Step": "5 * 8 = 40 (left: 6 40 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 8 = 40 (left: 6 40 12) -> 40 / 6 = 6.67 (left: 6.67 12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "12 88"
                }
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 8 11 12) -> 8 * 11 = 88 (left: 12 88) -> 88 - 12 = 76 (left: 76)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 8 11 12) -> 8 * 11 = 88 (left: 12 88) -> 88 - 12 = 76 (left: 76) -> There are no possible next steps with the input of 76.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 - 8 = 4 (left: 4 6 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "8 11 12"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 8 11 12) -> 8 * 11 = 88 (left: 12 88)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 8 11 12) -> 8 * 11 = 88 (left: 12 88) -> 12 + 88 = 100 (left: 100)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 3": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 - 4 = 2 (left: 2 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 - 4 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "12 88"
                }
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 8 11 12) -> 8 * 11 = 88 (left: 12 88) -> 12 + 88 = 100 (left: 100)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 8 11 12) -> 8 * 11 = 88 (left: 12 88) -> 12 + 88 = 100 (left: 100) -> 100 * 2 = 200 (left: 2)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "There are no possible next steps for the input 44."
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "12 - 5 = 7 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 8 12"
                }
            },
            "Step 1": {
                "Step": "5 * 6 = 30 (left: 8 30 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 6 = 30 (left: 8 30 12) -> 12 * 8 = 96 (left:",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 8 12"
                }
            },
            "Step 3": {
                "Step": "6 + 8 = 14 (left: 5 14 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 8 = 14 (left: 5 14 12) -> 14 - 5 = 9 (left: 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "4 11"
                }
            },
            "Step 5": {
                "Step": "12 - 8 = 4 (left: 5 6 4) -> 5 + 6 = 11 (left: 4 11) -> Input: 3 9 12",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 8 = 4 (left: 5 6 4) -> 5 + 6 = 11 (left: 4 11) -> Input: 3 9 12 -> 3 + 9 = 12 (left: 12 12)",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "12 - 8 = 4 (left: 5 6 4)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 8 12"
                }
            },
            "Step 1": {
                "Step": "5 * 6 = 30 (left: 8 30 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 6 = 30 (left: 8 30 12) -> 30 - 8 = 22 (left: 22 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 3": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 12 - 4 = 8 (left: 8 6)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 12 - 4 = 8 (left: 8 6) -> 8 / 6 = 1.33 (left: 1.33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "4 11"
                }
            },
            "Step 5": {
                "Step": "12 - 8 = 4 (left: 5 6 4) -> 5 + 6 = 11 (left: 4 11) -> 4 * 11 = 44 (left: 44)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 8 = 4 (left: 5 6 4) -> 5 + 6 = 11 (left: 4 11) -> 4 * 11 = 44 (left: 44) -> There are no possible next steps with the input 44.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "12 - 8 = 4 (left: 5 6 4)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24 12) -> 24 - 12 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 8 12"
                }
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 8 11 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 8 11 12) -> 8 * 11 = 88 (left: 12 88)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "4 11"
                }
            },
            "Step 5": {
                "Step": "12 - 8 = 4 (left: 5 6 4) -> 5 + 6 = 11 (left: 4 11) -> 6 + 9 = 15 (left: 15 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 8 = 4 (left: 5 6 4) -> 5 + 6 = 11 (left: 4 11) -> 6 + 9 = 15 (left: 15 3) -> 15 * 3 = 45 (left: 45)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "There are no possible next steps for the input 44."
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "8 - 5 = 3 (left: 3 6 12)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 6 12"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 6 12) -> 3 * 6 = 18 (left: 18 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 6 12) -> 3 * 6 = 18 (left: 18 12) -> 18 + 12 = 30 (left: 30)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 8 12"
                }
            },
            "Step 3": {
                "Step": "6 + 8 = 14 (left: 5 14 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 8 = 14 (left: 5 14 12) -> 5 * 14 = 70 (left: 12 70)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "4 11"
                }
            },
            "Step 5": {
                "Step": "12 - 8 = 4 (left: 5 6 4) -> 5 + 6 = 11 (left: 4 11) -> 4 * 11 = 44 (left: 44)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 8 = 4 (left: 5 6 4) -> 5 + 6 = 11 (left: 4 11) -> 4 * 11 = 44 (left: 44) -> There are no possible next steps with the input of 44.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 8 11 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 8 12"
                }
            },
            "Step 1": {
                "Step": "12 - 8 = 4 (left: 5 6 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 8 = 4 (left: 5 6 4) -> 5 + 6 = 11 (left: 4 11)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "4 11"
                }
            },
            "Step 3": {
                "Step": "12 - 8 = 4 (left: 5 6 4) -> 5 + 6 = 11 (left: 4 11) -> 4 * 11 = 44 (left: 44)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 8 = 4 (left: 5 6 4) -> 5 + 6 = 11 (left: 4 11) -> 4 * 11 = 44 (left: 44) -> There are no possible next steps with the input 44.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "4 11"
                }
            },
            "Step 5": {
                "Step": "12 - 8 = 4 (left: 5 6 4) -> 5 + 6 = 11 (left: 4 11) -> 11 - 4 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 8 = 4 (left: 5 6 4) -> 5 + 6 = 11 (left: 4 11) -> 11 - 4 = 7 (left: 7) -> 7 + 8 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "There are no possible next steps for the input 44."
                }
            }
        },
        "Input": "5 6 8 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "930": {
        "puzzle": "2 4 6 7",
        "Agent 0": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 2 10 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 5"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 / 5 = 4.8 (left: 4.8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 7"
                }
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 2 24 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 2 24 7) -> 24 + 2 = 26 (left: 26 7)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "26 7"
                }
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 2 24 7) -> 24 + 2 = 26 (left: 26 7) -> 26 + 7 = 33 (left: 33)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 2 24 7) -> 24 + 2 = 26 (left: 26 7) -> 26 + 7 = 33 (left: 33) -> 33 + 2 = 35",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 2 10 7)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 6 7) -> 7 - 6 = 1 (left: 1 1)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 6 7) -> 7 - 6 = 1 (left: 1 1) -> 1 / 1 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 7 * 1 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "26 7"
                }
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 2 24 7) -> 24 + 2 = 26 (left: 26 7) -> 26 * 7 = 182 (left: 182)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 2 24 7) -> 24 + 2 = 26 (left: 26 7) -> 26 * 7 = 182 (left: 182) -> 1 + 8 + 2 = 11 (left: 11)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 4 6 5)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 5"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 6 - 4 = 2 (left: 2 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 6 - 4 = 2 (left: 2 5) -> 2 + 5 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 7"
                }
            },
            "Step 3": {
                "Step": "4 + 6 = 10 (left: 2 10 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 6 = 10 (left: 2 10 7) -> 2 * 10 = 20 (left: 7 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "26 7"
                }
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 2 24 7) -> 24 + 2 = 26 (left: 26 7) -> 26 - 7 = 19 (left: 19)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 2 24 7) -> 24 + 2 = 26 (left: 26 7) -> 26 - 7 = 19 (left: 19) -> 19 * 8 = 152 (left: 8) ",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 * 4 = 8 (left: 8 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 7"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 6 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 7"
                }
            },
            "Step 3": {
                "Step": "6 * 7 = 42 (left: 2 4 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 * 7 = 42 (left: 2 4  -> 2 + 4 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "26 7"
                }
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 2 24 7) -> 24 + 2 = 26 (left: 26 7) -> 26 + 7 = 33 (left: 33)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 2 24 7) -> 24 + 2 = 26 (left: 26 7) -> 26 + 7 = 33 (left: 33) -> 33 + 2 = 35",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 * 7 = 42 (left: 2 4 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 7"
                }
            },
            "Step 1": {
                "Step": "2 * 6 = 12 (left: 12 4 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 6 = 12 (left: 12 4 7) -> 4 * 7 = 28 (left: 12 28)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 7"
                }
            },
            "Step 3": {
                "Step": "7 - 4 = 3 (left: 2 6 3)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 4 = 3 (left: 2 6 3) -> 3 + 2 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "3 5"
                }
            },
            "Step 5": {
                "Step": "7 - 4 = 3 (left: 2 3 7) -> 7 - 2 = 5 (left: 3 5) -> 10 * 2 =",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 4 = 3 (left: 2 3 7) -> 7 - 2 = 5 (left: 3 5) -> 10 * 2 = -> 10 * 2 = 20",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 7"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 6 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 6 7) -> 6 * 6 = 36 (left: 7 36)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 5"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 5 + 4 = 9 (left: 6 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 5 + 4 = 9 (left: 6 9) -> 6 - 9 = -3 (left: -3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "26 7"
                }
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 2 24 7) -> 24 + 2 = 26 (left: 26 7) -> 26 / 7 = 3.7142857142857 (left: 3.7142857142857)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 2 24 7) -> 24 + 2 = 26 (left: 26 7) -> 26 / 7 = 3.7142857142857 (left: 3.7142857142857) -> 3.7142857142857 / 2 = 1.8571428571429",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 * 7 = 42 (left: 2 4 ",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 7"
                }
            },
            "Step 1": {
                "Step": "4 - 2 = 2 (left: 2 6 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 - 2 = 2 (left: 2 6 7) -> 2 * 6 = 12 (left: 7 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 7"
                }
            },
            "Step 3": {
                "Step": "7 - 4 = 3 (left: 2 3 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 4 = 3 (left: 2 3 7) -> 7 - 2 = 5 (left: 3 5)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 7"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 1 + 7 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 1 + 7 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 5"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 6 - 4 = 2 (left: 2 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 6 - 4 = 2 (left: 2 5) -> 9 - 3 = 6 (left: 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 7"
                }
            },
            "Step 3": {
                "Step": "2 * 4 = 8 (left: 8 6 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 4 = 8 (left: 8 6 7) -> 8 - 6 = 2 (left: 2 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "3 5"
                }
            },
            "Step 5": {
                "Step": "7 - 4 = 3 (left: 2 3 7) -> 7 - 2 = 5 (left: 3 5) -> 5 / 3 = 1.6666666666666667 (left: 1.6666666666666667)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 4 = 3 (left: 2 3 7) -> 7 - 2 = 5 (left: 3 5) -> 5 / 3 = 1.6666666666666667 (left: 1.6666666666666667) -> 1.6666666666666667 * 2 = 3.3333333333333335",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 2 4 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "8 6 7"
                }
            },
            "Step 1": {
                "Step": "2 * 4 = 8 (left: 8 6 7) -> 6 * 7 = 42 (left: 8 42)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 4 = 8 (left: 8 6 7) -> 6 * 7 = 42 (left: 8 42) -> 42 / 8 = 5.25 (left: 5.25)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 7"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 6 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 6 7) -> 7 / 6 = 1.16666666667 (left: 1.16666666667 6)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "3 5"
                }
            },
            "Step 5": {
                "Step": "7 - 4 = 3 (left: 2 3 7) -> 7 - 2 = 5 (left: 3 5) -> 10 * 3 = 30 (left: 30)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 4 = 3 (left: 2 3 7) -> 7 - 2 = 5 (left: 3 5) -> 10 * 3 = 30 (left: 30) -> There are no possible next steps with the input of 30.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "6 * 7 = 42 (left: 2 4 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 5"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 5 + 24 = 29 (left: 29)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 6 7) -> 7 - 6 = 1 (left: 1 6)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 6 7) -> 7 - 6 = 1 (left: 1 6) -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "26 7"
                }
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 2 24 7) -> 24 + 2 = 26 (left: 26 7) -> 26 * 7 = 182 (left: 182)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 2 24 7) -> 24 + 2 = 26 (left: 26 7) -> 26 * 7 = 182 (left: 182) -> 18 / 2 = 9 (left: 9 2)",
                "Pruning": null
            }
        },
        "Input": "2 4 6 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "931": {
        "puzzle": "2 5 10 10",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 2 = 8 (left: 8 10 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 10 "
                }
            },
            "Step 1": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 2 * 10 = 20 (left: 20)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 2 * 10 = 20 (left: 20) -> 20 * 8 = 160 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 10 10"
                }
            },
            "Step 3": {
                "Step": "10 / 2 = 5 (left: 5 10 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 2 + 10 = 12 (left: 12) -> 12 * 2 = 24 (left: 24) -> Answer: (2 + 10) * (5 + 10) = 24",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 2 + 10 = 12 (left: 12) -> 12 * 2 = 24 (left: 24) -> Answer: (2 + 10) * (5 + 10) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 / 2 = 5 (left: 5 10 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "10 10 10"
                }
            },
            "Step 1": {
                "Step": "5 * 2 = 10 (left: 10 10 10) -> 10 * 10 = 100 (left: 10 100)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 2 = 10 (left: 10 10 10) -> 10 * 10 = 100 (left: 10 100) -> 10 * 10 = 100 (left: 100)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 10 "
                }
            },
            "Step 3": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 10 / 2 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 10 / 2 = 5 (left: 5) -> There are no possible next steps with just one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 2 + 10 = 12 (left: 12) -> 12 * 2 = 24 (left: 24) -> Answer: (2 + 10) * (5 + 10) = 24",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 2 + 10 = 12 (left: 12) -> 12 * 2 = 24 (left: 24) -> Answer: 2 * (5 + 10) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 2 = 8 (left: 8 10 10)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 10 10"
                }
            },
            "Step 1": {
                "Step": "2 + 5 = 7 (left: 7 10 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 5 = 7 (left: 7 10 10) -> 7 + 10 = 17 (left: 10 10 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 10 "
                }
            },
            "Step 3": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 2 + 10 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 2 + 10 = 12 (left: 12) -> 12 * 2 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 2 + 10 = 12 (left: 12) -> 12 * 2 = 24 (left: 24) -> Answer: (2 + 10) * (5 + 10) = 24",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 2 + 10 = 12 (left: 12) -> 12 * 2 = 24 (left: 24) -> Answer: 2 * (5 + 10) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 * 2 = 10 (left: 10 10 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "10 10 10"
                }
            },
            "Step 1": {
                "Step": "5 * 2 = 10 (left: 10 10 10) -> 10 / 10 = 1 (left: 1 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 2 = 10 (left: 10 10 10) -> 10 / 10 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 10 10"
                }
            },
            "Step 3": {
                "Step": "10 / 2 = 5 (left: 5 10 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 10 * 5 = 50 (left: 10 10 50)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "1.43 10 10"
                }
            },
            "Step 5": {
                "Step": "2 + 5 = 7 (left: 7 10 10) -> 10 / 7 = 1.43 (left: 1.43 10 10) -> 1.43 + 10 = 11.43 (left: 10 11.43)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 5 = 7 (left: 7 10 10) -> 10 / 7 = 1.43 (left: 1.43 10 10) -> 1.43 + 10 = 11.43 (left: 10 11.43) -> 10 * 11.43 = 114.3 (left: 114.3)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 5 = 7 (left: 7 10 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 10 "
                }
            },
            "Step 1": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 10 - 2 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 10 - 2 = 8 (left: 8) -> 8 - 8 = 0 (left: 0) ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 10 "
                }
            },
            "Step 3": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 2 + 10 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 2 + 10 = 12 (left: 12) -> 12 + 8 = 20",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 2 + 10 = 12 (left: 12) -> 12 * 2 = 24 (left: 24) -> Answer: (2 + 10) * (5 + 10) = 24",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 2 + 10 = 12 (left: 12) -> 12 * 2 = 24 (left: 24) -> Answer: (2 + 10) * 10 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "10 / 2 = 5 (left: 5 10 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 10 10"
                }
            },
            "Step 1": {
                "Step": "10 + 2 = 12 (left: 5 10 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 2 = 12 (left: 5 10  -> 5 * 10 = 50 (left: 50)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 10 10"
                }
            },
            "Step 3": {
                "Step": "10 - 2 = 8 (left: 8 10 10) -> 10 / 8 = 1.25 (left: 1.25 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 2 = 8 (left: 8 10 10) -> 10 / 8 = 1.25 (left: 1.25 10) -> 10 / 1.25 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 2 + 10 = 12 (left: 12) -> 12 * 2 = 24 (left: 24) -> Answer: (2 + (5 + 10)) * 10 = 24",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 2 + 10 = 12 (left: 12) -> 12 * 2 = 24 (left: 24) -> Answer: (2 + 10) * (5 + 10) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "10 + 2 = 12 (left: 5 10 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 10 "
                }
            },
            "Step 1": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 2 + 10 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 2 + 10 = 12 (left: 12) -> 12 + 2 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 10 10"
                }
            },
            "Step 3": {
                "Step": "2 + 5 = 7 (left: 7 10 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 5 = 7 (left: 7 10 10) -> 10 / 7 = 1.43 (left: 1.43 10 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 2 + 10 = 12 (left: 12) -> 12 * 2 = 24 (left: 24) -> Answer: (2 + 10) * (10 + 5) = 24",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 2 + 10 = 12 (left: 12) -> 12 * 2 = 24 (left: 24) -> Answer: (2 + 10) * (5 + 10) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "5 * 2 = 10 (left: 10 10 10)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 10 "
                }
            },
            "Step 1": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 10 / 2 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 10 / 2 = 5 (left: 5) -> There are no possible next steps with just the number 5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 10 "
                }
            },
            "Step 3": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 10 - 2 = 8 (left: 8 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 10 - 2 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 2 + 10 = 12 (left: 12) -> 12 * 2 = 24 (left: 24) -> Answer: (2 + 10) * (5 + 10) = 24",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 2 + 10 = 12 (left: 12) -> 12 * 2 = 24 (left: 24) -> Answer: (2 + 10) * (5 + 10) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "5 + 10 = 15 (left: 2 10 ",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 10 "
                }
            },
            "Step 1": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 2 * 10 = 20 (left: 20)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 2 * 10 = 20 (left: 20) -> 20 / 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 10 10"
                }
            },
            "Step 3": {
                "Step": "2 + 5 = 7 (left: 7 10 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 5 = 7 (left: 7 10 10) -> 7 + 10 = 17 (left: 10 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 2 + 10 = 12 (left: 12) -> 12 * 2 = 24 (left: 24) -> Answer: (2 + 10) * (5 + 10) = 24",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 2 + 10 = 12 (left: 12) -> 12 * 2 = 24 (left: 24) -> Answer: (2 + 10) * (5 + 10) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "5 * 2 = 10 (left: 10 10 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 10 "
                }
            },
            "Step 1": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 2 + 10 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 2 + 10 = 12 (left: 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 10 "
                }
            },
            "Step 3": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 10 / 2 = 5 (left",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 10 / 2 = 5 (left -> 2 + 5 = 7 (left: 5 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 2 + 10 = 12 (left: 12) -> 12 * 2 = 24 (left: 24) -> Answer: (2 + 10) * (5 + 10) = 24",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 2 + 10 = 12 (left: 12) -> 12 * 2 = 24 (left: 24) -> Answer: (2 + 10) * (5 + 10) = 24",
                "Pruning": "NA"
            }
        },
        "Input": "2 5 10 10",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "932": {
        "puzzle": "6 6 7 12",
        "Agent 0": {
            "Step 0": {
                "Step": "6 / 6 = 1 (left: 7 1)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "7 1"
                }
            },
            "Step 1": {
                "Step": "6 / 6 = 1 (left: 7 1) -> 7 * 1 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 6 = 1 (left: 7 1) -> 7 * 1 = 7 (left: 7) -> 7 - 8 = -1 (left: -1)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "42 6"
                }
            },
            "Step 3": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "10"
                }
            },
            "Step 5": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 * 6 = 252 (left: 252) -> 2 * 5 = 10 (left: 10) -> 10 / 2 = 5",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 * 6 = 252 (left: 252) -> 2 * 5 = 10 (left: 10) -> 10 / 2 = 5 -> Input: 8 - 3 = 5",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 * 6 = 36 (left: 7 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "7 1"
                }
            },
            "Step 1": {
                "Step": "6 / 6 = 1 (left: 7 1) -> 7 - 1 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 6 = 1 (left: 7 1) -> 7 - 1 = 6 (left: 6) -> 8 - 6 = 2 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "42 6"
                }
            },
            "Step 3": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> 48 / 8 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "10"
                }
            },
            "Step 5": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 * 6 = 252 (left: 252) -> 2 * 5 = 10 (left: 10) -> There are no possible next steps with the input of 10.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 * 6 = 252 (left: 252) -> 2 * 5 = 10 (left: 10) -> There are no possible next steps with the input of 10. -> 10 - 2 = 8 (left: 2 8)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 * 7 = 42 (left: 42 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "42 6"
                }
            },
            "Step 1": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 * 6 = 252 (left: 252)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 * 6 = 252 (left: 252) -> 2 - 5 = -3 (left: -3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 6 7 12"
                }
            },
            "Step 3": {
                "Step": "12 + 7 = 19 (left: 6 19)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 + 7 = 19 (left: 6 19) -> Input: 25 13",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "10"
                }
            },
            "Step 5": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 * 6 = 252 (left: 252) -> 2 * 5 = 10 (left: 10) -> No possible next steps, as there is only one number left.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 * 6 = 252 (left: 252) -> 2 * 5 = 10 (left: 10) -> No possible next steps, as there is only one number left. -> No possible next steps, as there is only one number left.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "12 / 6 = 2 (left: 6 7 2)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 6 7 12"
                }
            },
            "Step 1": {
                "Step": "6 + 6 = 12 (left: 7 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 6 = 12 (left: 7 12) -> 12 / 7 = 1.7142857142857142 (left: 1.7142857142857142)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "10"
                }
            },
            "Step 3": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 * 6 = 252 (left: 252) -> 2 * 5 = 10 (left: 10) -> 10 / 2 = 5 (left: 5 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 * 6 = 252 (left: 252) -> 2 * 5 = 10 (left: 10) -> 10 / 2 = 5 (left: 5 8) -> 5 + 8 = 13 (left: 13)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "10"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "10"
                }
            },
            "Step 5": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 * 6 = 252 (left: 252) -> 2 * 5 = 10 (left: 10) -> None. The input is already a single number.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 * 6 = 252 (left: 252) -> 2 * 5 = 10 (left: 10) -> None. The input is already a single number. -> None. The input is already a single number.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 /",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "7 1"
                }
            },
            "Step 1": {
                "Step": "6 / 6 = 1 (left: 7 1) -> 7 + 1 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 6 = 1 (left: 7 1) -> 7 + 1 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 6 7 12"
                }
            },
            "Step 3": {
                "Step": "12 - 6 = 6 (left: 6 7 6)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 6 = 6 (left: 6 7 6) -> Input: 1.1666666666666667 1 -1",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "10"
                }
            },
            "Step 5": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 * 6 = 252 (left: 252) -> 2 * 5 = 10 (left: 10) -> None.",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "10"
                }
            },
            "Step 6": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 * 6 = 252 (left: 252) -> 2 * 5 = 10 (left: 10) -> None, as there is only one number left.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "7 + 6 = 13 (left: 6 13 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 6 7 12"
                }
            },
            "Step 1": {
                "Step": "6 / 6 = 1 (left: 1 7 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 6 = 1 (left: 1 7 12) -> 12 - 1 = 11 (left: 7 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 6 7 12"
                }
            },
            "Step 3": {
                "Step": "12 / 6 = 2 (left: 6 7 2)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 / 6 = 2 (left: 6 7 2) -> 6 + 7 = 13 (left: 2 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "10"
                }
            },
            "Step 5": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 * 6 = 252 (left: 252) -> 2 * 5 = 10 (left: 10) -> 10 + 10 = 20 (left: 10 20)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 * 6 = 252 (left: 252) -> 2 * 5 = 10 (left: 10) -> 10 + 10 = 20 (left: 10 20) -> 20 - 10 = 10 (left: 10 20)",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 / 6 = 1 (left: 1 7 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "42 6"
                }
            },
            "Step 1": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 * 6 = 252 (left: 252)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 * 6 = 252 (left: 252) -> 2 * 5 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "7 1"
                }
            },
            "Step 3": {
                "Step": "6 / 6 = 1 (left: 7 1) -> 7 / 1 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 / 6 = 1 (left: 7 1) -> 7 / 1 = 7 (left: 7) -> 7 / 2 = 3.5 (left: 3.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "10"
                }
            },
            "Step 5": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 * 6 = 252 (left: 252) -> 2 * 5 = 10 (left: 10) -> 10 + 10 = 20",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 * 6 = 252 (left: 252) -> 2 * 5 = 10 (left: 10) -> 10 + 10 = 20 -> 10 - 10 = 0 (left: 0 10 20)",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "7 1"
                }
            },
            "Step 1": {
                "Step": "6 / 6 = 1 (left: 7 1) -> 7 / 1 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 6 = 1 (left: 7 1) -> 7 / 1 = 7 (left: 7) -> 7 / 8 = 0.875 (left: 0.875)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "42 6"
                }
            },
            "Step 3": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 / 6 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 / 6 = 7 (left: 7) -> 7 / 8 = 0.875 (left: 0.875 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "10"
                }
            },
            "Step 5": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 * 6 = 252 (left: 252) -> 2 * 5 = 10 (left: 10) -> 10 / 2 = 5",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 * 6 = 252 (left: 252) -> 2 * 5 = 10 (left: 10) -> 10 / 2 = 5 -> 5 * 2 = 10 (left: 10)",
                "Pruning": "NA"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "6 + 6 = 12 (left: 7 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 6 7 12"
                }
            },
            "Step 1": {
                "Step": "12 - 6 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 6 =  -> 12 - 6 = 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "7 1"
                }
            },
            "Step 3": {
                "Step": "6 / 6 = 1 (left: 7 1) -> 7 * 1 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 / 6 = 1 (left: 7 1) -> 7 * 1 = 7 (left: 7) -> 7 - 2 = 5 (left: 5 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "10"
                }
            },
            "Step 5": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 * 6 = 252 (left: 252) -> 2 * 5 = 10 (left: 10) -> 10 + 10 = 20",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 * 6 = 252 (left: 252) -> 2 * 5 = 10 (left: 10) -> 10 + 10 = 20 -> 20 - 10 = 10 (left: 10 10)",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "7 - 6 = 1 (left: 1 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "42 6"
                }
            },
            "Step 1": {
                "Step": "6 * 7 = 42 (left: 42 6) -> Input: 10 2",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 7 = 42 (left: 42 6) -> Input: 10 2 -> 10 - 2 = 8 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 6 7 12"
                }
            },
            "Step 3": {
                "Step": "12 - 6 = 6 (left: 6 7 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 6 = 6 (left: 6 7 12) -> 12 - 6 = 6 (left: 6 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "10"
                }
            },
            "Step 5": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 * 6 = 252 (left: 252) -> 2 * 5 = 10 (left: 10) -> 10 + 10 = 20",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 * 6 = 252 (left: 252) -> 2 * 5 = 10 (left: 10) -> 10 + 10 = 20 -> 20 - 10 = 10 (left: 10 10 10)",
                "Pruning": null
            }
        },
        "Input": "6 6 7 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "933": {
        "puzzle": "6 9 9 11",
        "Agent 0": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 6 9 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 9 11"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 6 9 11) -> 6 * 9 = 54 (left: 11 54)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 6 9 11) -> 6 * 9 = 54 (left: 11 54) -> 54 / 11 = 4.909 (left: 4.909)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 11"
                }
            },
            "Step 3": {
                "Step": "11 - 6 = 5 (left: 5 9 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 6 = 5 (left: 5 9 9) -> 9 - 5 = 4 (left: 4 9)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "11 - 9 = 2 (left:"
                }
            },
            "Step 5": {
                "Step": "6 + 9 = 15 (left: 9 9 11) -> 11 - 9 = 2 (left: -> 9 / 11 = 0.8182 (left: 0.8182)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 9 = 15 (left: 9 9 11) -> 11 - 9 = 2 (left: -> 9 / 11 = 0.8182 (left: 0.8182) -> 0.8182 + 0.8182 = 1.6364",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 9 9 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 11"
                }
            },
            "Step 1": {
                "Step": "9 - 6 = 3 (left: 3 9 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 6 = 3 (left: 3 9 11) -> 3 * 9 = 27 (left: 27 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 11"
                }
            },
            "Step 3": {
                "Step": "9 - 6 = 3 (left: 3 9 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 6 = 3 (left: 3 9 11) -> 11 - 9 = 2 (left: 3 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "11 - 9 = 2 (left:"
                }
            },
            "Step 5": {
                "Step": "6 + 9 = 15 (left: 9 9 11) -> 11 - 9 = 2 (left: -> 11 - 9 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 9 = 15 (left: 9 9 11) -> 11 - 9 = 2 (left: -> 11 - 9 = 2 (left: 2) -> 2 - 2 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "There is only one number given, so there are no possible next steps."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: 3 9 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 11"
                }
            },
            "Step 1": {
                "Step": "9 - 6 = 3 (left: 3 9 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 6 = 3 (left: 3 9 11) -> 3 + 9 = 12 (left: 11 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 11"
                }
            },
            "Step 3": {
                "Step": "11 - 9 = 2 (left: 6 9 2)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 9 / 6 = 1.5 (left: 1.5 2)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "11 - 9 = 2 (left:"
                }
            },
            "Step 5": {
                "Step": "6 + 9 = 15 (left: 9 9 11) -> 11 - 9 = 2 (left: -> 11 * 9 = 99 (left: 99)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 9 = 15 (left: 9 9 11) -> 11 - 9 = 2 (left: -> 11 * 9 = 99 (left: 99) -> There is only one possible next step for the input 99, which is 9 + 9 = 18 (left: 18).",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "There is only one number given, so there are no possible next steps."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 11"
                }
            },
            "Step 1": {
                "Step": "9 - 6 = 3 (left: 3 9 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 6 = 3 (left: 3 9 11) -> 3 * 9 = 27 (left: 27 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 11"
                }
            },
            "Step 3": {
                "Step": "6 + 9 = 15 (left: 9 9 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 9 = 15 (left: 9 9 11) -> 11 - 9 = 2 (left:",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "11 - 9 = 2 (left:"
                }
            },
            "Step 5": {
                "Step": "6 + 9 = 15 (left: 9 9 11) -> 11 - 9 = 2 (left: -> 11 / 9 = 1.22 (left: 1.22)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 9 = 15 (left: 9 9 11) -> 11 - 9 = 2 (left: -> 11 / 9 = 1.22 (left: 1.22) -> There are no possible next steps for the input 1.22 as it is already a single number.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "11 - 9 = 2 (left: 6 9 2)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 11"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 6 9 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 6 9 11) -> 6 * 9 = 54 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "6 9 2"
                }
            },
            "Step 3": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 6 * 9 = 54 (left: 2 54)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 6 * 9 = 54 (left: 2 54) -> 27 - 3 =",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "11 - 9 = 2 (left:"
                }
            },
            "Step 5": {
                "Step": "6 + 9 = 15 (left: 9 9 11) -> 11 - 9 = 2 (left: -> 9 / 11 = 0.81 (left: 0.81)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 9 = 15 (left: 9 9 11) -> 11 - 9 = 2 (left: -> 9 / 11 = 0.81 (left: 0.81) -> There are no possible next steps for the input 0.81 as it is a single number and not a mathematical expression.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 6 3 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 11"
                }
            },
            "Step 1": {
                "Step": "9 - 6 = 3 (left: 3 9 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 6 = 3 (left: 3 9 11) -> 9 / 3 = 3 (left: 3 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "3 11"
                }
            },
            "Step 3": {
                "Step": "9 - 6 = 3 (left: 3 9 11) -> 9 / 3 = 3 (left: 3 11) -> 11 / 3 = 3.67 (left: 3.67)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 6 = 3 (left: 3 9 11) -> 9 / 3 = 3 (left: 3 11) -> 11 / 3 = 3.67 (left: 3.67) -> There is only one number given, so there are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "4 9"
                }
            },
            "Step 5": {
                "Step": "11 - 6 = 5 (left: 5 9 9) -> 9 - 5 = 4 (left: 4 9) -> 9 - 4 = 5 (left: 5) ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 6 = 5 (left: 5 9 9) -> 9 - 5 = 4 (left: 4 9) -> 9 - 4 = 5 (left: 5)  -> 8 - 5 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "There is only one number given, so there are no possible next steps."
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "11 - 9 = 2 (left: 6 9 2)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 11"
                }
            },
            "Step 1": {
                "Step": "6 + 9 = 15 (left: 9 9 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 9 = 15 (left: 9 9 11) -> 11 - 9 = 2 (left: 2 9)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 11"
                }
            },
            "Step 3": {
                "Step": "6 + 9 = 15 (left: 9 9 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 9 = 15 (left: 9 9 11) -> 9 / 9 = 1 (left: 1 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "11 - 9 = 2 (left:"
                }
            },
            "Step 5": {
                "Step": "6 + 9 = 15 (left: 9 9 11) -> 11 - 9 = 2 (left: -> 11 - 9 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 9 = 15 (left: 9 9 11) -> 11 - 9 = 2 (left: -> 11 - 9 = 2 (left: 2) -> 2 + 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "There is only one number given, so there are no possible next steps."
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: 3 9 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 11"
                }
            },
            "Step 1": {
                "Step": "9 - 6 = 3 (left: 3 9 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 6 = 3 (left: 3 9 11) -> 11 - 3 = 8 (left: 9 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 11"
                }
            },
            "Step 3": {
                "Step": "11 - 9 = 2 (left: 6 9 2)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 9 / 2 = 4.5 (left: 6 4.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "11 - 9 = 2 (left:"
                }
            },
            "Step 5": {
                "Step": "6 + 9 = 15 (left: 9 9 11) -> 11 - 9 = 2 (left: -> 9 / 11 = 0.82 (left: 0.82)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 9 = 15 (left: 9 9 11) -> 11 - 9 = 2 (left: -> 9 / 11 = 0.82 (left: 0.82) -> There is only one possible next step:",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 9 9 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 11"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 6 9 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 6 9 11) -> 6 - 9 = -",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 11"
                }
            },
            "Step 3": {
                "Step": "6 + 9 = 15 (left: 9 9 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 9 = 15 (left: 9 9 11) -> Input: 3 5 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "11 - 9 = 2 (left:"
                }
            },
            "Step 5": {
                "Step": "6 + 9 = 15 (left: 9 9 11) -> 11 - 9 = 2 (left: -> 11 + 9 = 20 (left: 20)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 9 = 15 (left: 9 9 11) -> 11 - 9 = 2 (left: -> 11 + 9 = 20 (left: 20) -> There are no possible next steps with the input 20.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "11 - 9 = 2 (left: 6 2 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 11"
                }
            },
            "Step 1": {
                "Step": "6 + 9 = 15 (left: 9 9 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 9 = 15 (left: 9 9 11) -> 11 + 9 = 20 (left: 9 20)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 11"
                }
            },
            "Step 3": {
                "Step": "9 - 6 = 3 (left: 3 9 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 6 = 3 (left: 3 9 11) -> 11 - 3 = 8 (left:",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "4 9"
                }
            },
            "Step 5": {
                "Step": "11 - 6 = 5 (left: 5 9 9) -> 9 - 5 = 4 (left: 4 9) -> 4 + 9 = 13 (left: 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 6 = 5 (left: 5 9 9) -> 9 - 5 = 4 (left: 4 9) -> 4 + 9 = 13 (left: 13) -> 13 - 2 = 11 (left: 2 11)",
                "Pruning": null
            }
        },
        "Input": "6 9 9 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "934": {
        "puzzle": "5 8 11 12",
        "Agent 0": {
            "Step 0": {
                "Step": "11 + 5 = 16 (left: 8 12 16)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 11 12"
                }
            },
            "Step 1": {
                "Step": "12 - 11 = 1 (left: 5 1 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 11 = 1 (left: 5 1 12) -> 12 - 5 = 7 (left: 5 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "11 13 12"
                }
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 11 13 12) -> 11 + 13 = 24 (left: 12 24)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 11 13 12) -> 11 + 13 = 24 (left: 12 24) -> 24 - 12 = 12 (left: 12 24)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "4 9"
                }
            },
            "Step 5": {
                "Step": "5 + 8 = 13 (left: 11 13 12) -> 5 + 7 = 12 (left: 9 12 3) -> 12 / 3 = 4 (left: 4 9) -> 12",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "4 9"
                }
            },
            "Step 6": {
                "Step": "5 + 8 = 13 (left: 11 13 12) -> 5 + 7 = 12 (left: 9 12 3) -> 12 / 3 = 4 (left: 4 9) -> 9 - 4 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "No possible next steps."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 11 12 13)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "11 13 12"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 11 13 12) -> 11 + 13 = 24 (left: 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 11 13 12) -> 11 + 13 = 24 (left: 12) -> 12 / 2 = 6 (left: 6 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 / 11 = 1.18 (left: 1.18 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 / 11 = 1.18 (left: 1.18 12) -> 1.18 * 12 = 14.16 (left: 14.16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "25"
                }
            },
            "Step 5": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 12 = 1 (left: -> 13 + 12 = 25 (left: 25) -> 25 + 2 = 27 (left: 27)",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "25"
                }
            },
            "Step 6": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 12 = 1 (left: -> 13 + 12 = 25 (left: 25) -> 25 + 2 = 27 (left: 2)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "No possible next steps."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 5 = 7 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132) -> 13 + 132 = 145 (left: 145)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "25"
                }
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 12 = 1 (left: -> 13 + 12 = 25 (left: 25) -> 25 / 5 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "11 12 13"
                }
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 12 / 11 = 1.0909090909090908 (left: 1.0909090909090908 13)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "4 9"
                }
            },
            "Step 5": {
                "Step": "5 + 8 = 13 (left: 11 13 12) -> 5 + 7 = 12 (left: 9 12 3) -> 12 / 3 = 4 (left: 4 9) -> Input: 6 3 7",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 8 = 13 (left: 11 13 12) -> 5 + 7 = 12 (left: 9 12 3) -> 12 / 3 = 4 (left: 4 9) -> Input: 6 3 7 -> 7 / 3 = 2.33 (left: 2.33 7)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "11 + 5 = 16 (left: 8 12 16)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 11 12"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 11 12 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "11 13 12"
                }
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 11 13 12) -> 5 + 7 = 12 (left: 9 12 3)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 11 13 12) -> 5 + 7 = 12 (left: 9 12 3) -> 12 / 3 = 4 (left: 4 9)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "4 9"
                }
            },
            "Step 5": {
                "Step": "5 + 8 = 13 (left: 11 13 12) -> 5 + 7 = 12 (left: 9 12 3) -> 12 / 3 = 4 (left: 4 9) -> 4 + 9 = 13 (left: 9)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "4 9"
                }
            },
            "Step 6": {
                "Step": "5 + 8 = 13 (left: 11 13 12) -> 5 + 7 = 12 (left: 9 12 3) -> 12 / 3 = 4 (left: 4 9) -> 4 + 9 = 13 (left: 9)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "No possible next steps."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 - 8 = 4 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 12 * 13 = 156 (left: 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 12 * 13 = 156 (left: 11) -> There are no possible next steps with just the number 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 11 12"
                }
            },
            "Step 3": {
                "Step": "5 * 8 = 40 (left: 11 12 40)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 8 = 40 (left: 11 12 40) -> 40 / 11 = 3.6363636363636362 (left: 12 3.6363636363636362)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "4 9"
                }
            },
            "Step 5": {
                "Step": "5 + 8 = 13 (left: 11 13 12) -> 5 + 7 = 12 (left: 9 12 3) -> 12 / 3 = 4 (left: 4 9) -> 7 * ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 8 = 13 (left: 11 13 12) -> 5 + 7 = 12 (left: 9 12 3) -> 12 / 3 = 4 (left: 4 9) -> 7 *  -> 7 * 8 = 56 (left: 56)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "No possible next steps."
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 11 13 12)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 12 = 1 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 12 = 1 (left: -> 13 + 12 = 25 (left: 25)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 11 12"
                }
            },
            "Step 3": {
                "Step": "8 / 5 = 1.6 (left: 11 12 1.6)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 / 5 = 1.6 (left: 11 12 1.6) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "4 9"
                }
            },
            "Step 5": {
                "Step": "5 + 8 = 13 (left: 11 13 12) -> 5 + 7 = 12 (left: 9 12 3) -> 12 / 3 = 4 (left: 4 9) -> 9 + 4 = 13 (left: 4 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 8 = 13 (left: 11 13 12) -> 5 + 7 = 12 (left: 9 12 3) -> 12 / 3 = 4 (left: 4 9) -> 9 + 4 = 13 (left: 4 13) -> Possible next steps:",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "5 * 8 = 40 (left: 11 12 40)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 11 12"
                }
            },
            "Step 1": {
                "Step": "8 + 11 = 19 (left: 5 12 19)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 + 11 = 19 (left: 5 12 19) -> 5 + 12 = 17 (left: 17 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 11 12"
                }
            },
            "Step 3": {
                "Step": "5 * 8 = 40 (left: 11 12 40)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 8 = 40 (left: 11 12 40) -> 11 * 12 = 132 (left: 132 40)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "25"
                }
            },
            "Step 5": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 12 = 1 (left: -> 13 + 12 = 25 (left: 25) -> 25 * 5 = 125 (left: 125)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "4 9"
                }
            },
            "Step 6": {
                "Step": "5 + 8 = 13 (left: 11 13 12) -> 5 + 7 = 12 (left: 9 12 3) -> 12 / 3 = 4 (left: 4 9) -> 4 / 9 = 0.4444 (left: 0.4444)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "No possible next steps."
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 11 12 13)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 11 12"
                }
            },
            "Step 1": {
                "Step": "8 / 5 = 1.6 (left: 1.6 11 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 / 5 = 1.6 (left: 1.6 11 12) -> 11 / 1.6 = 6.875 (left: 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 13 * 1 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "4 9"
                }
            },
            "Step 5": {
                "Step": "5 + 8 = 13 (left: 11 13 12) -> 5 + 7 = 12 (left: 9 12 3) -> 12 / 3 = 4 (left: 4 9) -> 4 * 9 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "4 9"
                }
            },
            "Step 6": {
                "Step": "5 + 8 = 13 (left: 11 13 12) -> 5 + 7 = 12 (left: 9 12 3) -> 12 / 3 = 4 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9)",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "11 + 5 = 16 (left: 8 12 16)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "11 13 12"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 11 13 12) -> 11 - 13 = -2 (left: -2 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 11 13 12) -> 11 - 13 = -2 (left: -2 12) -> -2 + 12 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "25"
                }
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 12 = 1 (left: -> 13 + 12 = 25 (left: 25) -> There is only one number given, so there are no possible next steps.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 12 = 1 (left: -> 13 + 12 = 25 (left: 25) -> There is only one number given, so there are no possible next steps. -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "4 9"
                }
            },
            "Step 5": {
                "Step": "5 + 8 = 13 (left: 11 13 12) -> 5 + 7 = 12 (left: 9 12 3) -> 12 / 3 = 4 (left: 4 9) -> 4 * 9 = 36 (left: 9)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "4 9"
                }
            },
            "Step 6": {
                "Step": "5 + 8 = 13 (left: 11 13 12) -> 5 + 7 = 12 (left: 9 12 3) -> 12 / 3 = 4 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "No possible next steps."
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "8 - 5 = 3 (left: 3 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 12 / 11 = 1.0909090909090908 (left: 1.0909090909090908 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 12 / 11 = 1.0909090909090908 (left: 1.0909090909090908 13) -> 1.0909090909090908 * 13 = 14.272727272727726 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 11 12"
                }
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 11 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 - 5 = 3 (left: 3 11 12) -> 11 / 3 = 3.67 (left: 3.67 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "4 9"
                }
            },
            "Step 5": {
                "Step": "5 + 8 = 13 (left: 11 13 12) -> 5 + 7 = 12 (left: 9 12 3) -> 12 / 3 = 4 (left: 4 9) -> 4 + 9 = 13 (left: 9 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 8 = 13 (left: 11 13 12) -> 5 + 7 = 12 (left: 9 12 3) -> 12 / 3 = 4 (left: 4 9) -> 4 + 9 = 13 (left: 9 13) -> 9 + 13 = 22 (left: 22)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "No possible next steps."
                }
            }
        },
        "Input": "5 8 11 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "935": {
        "puzzle": "5 6 8 10",
        "Agent 0": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 8 10 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "8 10 11"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 11 / 8 = 1.375 (left: 1.375 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 11 / 8 = 1.375 (left: 1.375 11) -> 1.375 * 11 = 15.125 (left: 15.125)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 8 10"
                }
            },
            "Step 3": {
                "Step": "10 - 8 = 2 (left: 5 2 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 5 + 2 = 7 (left: 7 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "2.67 8"
                }
            },
            "Step 5": {
                "Step": "10 - 8 = 2 (left: 2 6 10) -> Input: 3 8 8 -> 8 / 3 = 2.67 (left: 2.67 8) -> 2.67 * 8 = 21.36 (left: 21.36)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "2.67 8"
                }
            },
            "Step 6": {
                "Step": "10 - 8 = 2 (left: 2 6 10) -> Input: 3 8 8 -> 8 / 3 = 2.67 (left: 2.67 8) -> 5 + 10 = 15",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 - 8 = 2 (left: 2 6 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 8 10"
                }
            },
            "Step 1": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 4 * 2 = 8 (left: 8 8 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 4 * 2 = 8 (left: 8 8 10) -> 10 - 8 = 2 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 8 10"
                }
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 8 10 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 10 - 8 = 2 (left: 2 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "8 20 30"
                }
            },
            "Step 5": {
                "Step": "5 * 6 = 30 (left: 8 10 30) -> 10 * 2 = 20 (left: 8 20 30) -> 30 - 8 = 22 (left: 8 22)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 6 = 30 (left: 8 10 30) -> 10 * 2 = 20 (left: 8 20 30) -> 30 - 8 = 22 (left: 8 22) -> 22 - 8 = 14 (left: 14)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 8 = 2 (left: 5 2 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 2 10"
                }
            },
            "Step 1": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 5 * 2 = 10 (left: 10 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 5 * 2 = 10 (left: 10 10) -> 10 + 10 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 6 10"
                }
            },
            "Step 3": {
                "Step": "10 - 8 = 2 (left: 2 6 10) -> Input: 3 8 8",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 8 = 2 (left: 2 6 10) -> Input: 3 8 8 -> 8 / 3 = 2.67 (left: 2.67 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "8 - 1.2 = 6.8 (left:"
                }
            },
            "Step 5": {
                "Step": "6 / 5 = 1.2 (left: 1.2 8 10) -> 8 - 1.2 = 6.8 (left: -> 8 - 1.2 = 6.8 (left: 6.8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 5 = 1.2 (left: 1.2 8 10) -> 8 - 1.2 = 6.8 (left: -> 8 - 1.2 = 6.8 (left: 6.8) -> 8 / 6 = 1.33 (left: 1.33)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 8 10 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 8 10"
                }
            },
            "Step 1": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 8 + 2 = 10 (left: 4 10 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 8 + 2 = 10 (left: 4 10 10) -> 4 + 10 = 14 (left: 10 10 14)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 8 10"
                }
            },
            "Step 3": {
                "Step": "6 / 5 = 1.2 (left: 1.2 8 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 / 5 = 1.2 (left: 1.2 8 10) -> 1.2 * 8 = 9.6 (left: 9.6 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "9.6 10"
                }
            },
            "Step 5": {
                "Step": "6 / 5 = 1.2 (left: 1.2 8 10) -> 1.2 * 8 = 9.6 (left: 9.6 10) -> 9.6 - 10 = -0.4 (left: -0.4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 5 = 1.2 (left: 1.2 8 10) -> 1.2 * 8 = 9.6 (left: 9.6 10) -> 9.6 - 10 = -0.4 (left: -0.4) -> There are no possible next steps with the input of -0.4.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "10 - 8 = 2 (left: 2 6 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "8 10 11"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 10 - 8 = 2 (left: 2 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 10 - 8 = 2 (left: 2 11) -> 11 - 2 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 8 10"
                }
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 5 10 48)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 * 8 = 48 (left: 5 10 48) -> 5 * 10 = 50 (left: 50 48)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "8 20 30"
                }
            },
            "Step 5": {
                "Step": "5 * 6 = 30 (left: 8 10 30) -> 10 * 2 = 20 (left: 8 20 30) -> Input:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 6 = 30 (left: 8 10 30) -> 10 * 2 = 20 (left: 8 20 30) -> Input: -> There seems to be an error in the input provided. Please provide the correct input for me to generate possible next steps. Thank you.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 8 10 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 8 10"
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 8 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 8 10) -> 10 - 8 = 2 (left: 1 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 8 10"
                }
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 4 * 8 = 32 (left: 10 32)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 4 * 8 = 32 (left: 10 32) -> 10 * 32 = 320 (left: 320)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "8 20 30"
                }
            },
            "Step 5": {
                "Step": "5 * 6 = 30 (left: 8 10 30) -> 10 * 2 = 20 (left: 8 20 30) -> 20 * 30 = 600 (left: 8 600)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 6 = 30 (left: 8 10 30) -> 10 * 2 = 20 (left: 8 20 30) -> 20 * 30 = 600 (left: 8 600) -> 600 / 8 = 75 (left: 75)",
                "Pruning": "NA"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 8 10 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 8 10"
                }
            },
            "Step 1": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 8 / 4 = 2 (left: 2 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 8 / 4 = 2 (left: 2 10) -> 2 + 10 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 2 10"
                }
            },
            "Step 3": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 2 + 10 = 12 (left: 5 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 2 + 10 = 12 (left: 5 12) -> 5 * 12 = 60 (left: 60)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "8 20 30"
                }
            },
            "Step 5": {
                "Step": "5 * 6 = 30 (left: 8 10 30) -> 10 * 2 = 20 (left: 8 20 30) -> 8 * 20 = 160 (left: 160 30)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 6 = 30 (left: 8 10 30) -> 10 * 2 = 20 (left: 8 20 30) -> 8 * 20 = 160 (left: 160 30) -> 160 * 30 = 4800 (left: 4800)",
                "Pruning": "NA"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "10 - 6 = 4 (left: 4 8 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 8 10"
                }
            },
            "Step 1": {
                "Step": "6 / 5 = 1.2 (left: 1.2 8 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 5 = 1.2 (left: 1.2 8 10) -> 8 - 1.2 = 6.8 (left:",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 8 10"
                }
            },
            "Step 3": {
                "Step": "5 * 6 = 30 (left: 8 10 30)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 6 = 30 (left: 8 10 30) -> 8 + 10 = 18 (left: 18 30)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "2.67 8"
                }
            },
            "Step 5": {
                "Step": "10 - 8 = 2 (left: 2 6 10) -> Input: 3 8 8 -> 8 / 3 = 2.67 (left: 2.67 8) -> 2.67 + 8 = 10.67 (left: 10.67)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "2 8"
                }
            },
            "Step 6": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 4 * 2 = 8 (left: 8 8 10) -> 10 - 8 = 2 (left: 2 8) -> 2 * 8 = 16 (left: 16)",
                "Pruning": "NA"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "8 + 10 = 18 (left: 5 18 ",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 8 10"
                }
            },
            "Step 1": {
                "Step": "6 * 8 = 48 (left: 5 10 48)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 8 = 48 (left: 5 10 48) -> 48 - 10 = 38 (left: 5 38)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 8 10"
                }
            },
            "Step 3": {
                "Step": "5 * 6 = 30 (left: 8 10 30)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 6 = 30 (left: 8 10 30) -> 10 * 2 = 20 (left: 8 20 30)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "8 - 1.2 = 6.8 (left:"
                }
            },
            "Step 5": {
                "Step": "6 / 5 = 1.2 (left: 1.2 8 10) -> 8 - 1.2 = 6.8 (left: -> 8 - 0.2 = 7.8 (left: 7.8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 5 = 1.2 (left: 1.2 8 10) -> 8 - 1.2 = 6.8 (left: -> 8 - 0.2 = 7.8 (left: 7.8) -> 8 - 7 = 1 (left: 1)",
                "Pruning": "NA"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "6 - 5 = 1 (left: 1 8 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 8 10"
                }
            },
            "Step 1": {
                "Step": "6 / 5 = 1.2 (left: 1.2 8 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 5 = 1.2 (left: 1.2 8 10) -> 8 - 1.2 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 8 10"
                }
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 10 / 4 = 2.5 (left: 2.5 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 10 / 4 = 2.5 (left: 2.5 8) -> 8 / 2.5 = 3.2 (left: 3.2)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "10 10 14"
                }
            },
            "Step 5": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 8 + 2 = 10 (left: 4 10 10) -> 4 + 10 = 14 (left: 10 10 14) -> 20",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "2 8"
                }
            },
            "Step 6": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 4 * 2 = 8 (left: 8 8 10) -> 10 - 8 = 2 (left: 2 8) -> 8 - 2 = 6 (left: 6)",
                "Pruning": "NA"
            }
        },
        "Input": "5 6 8 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "936": {
        "puzzle": "6 11 12 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 7 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 11 12 13"
                }
            },
            "Step 1": {
                "Step": "6 * 11 = 66 (left: 12 13 66)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 11 = 66 (left: 12 13 66) -> 12 + 13 = 25 (left: 25 66)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 11 12 13"
                }
            },
            "Step 3": {
                "Step": "13 - 6 = 7 (left: 7 11 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 6 = 7 (left: 7 11 12) -> 11 * 7 = 77 (left: 12 77)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "6.5 13"
                }
            },
            "Step 5": {
                "Step": "13 -> 13 / 2 = 6.5 (left: 6.5 13) -> 6.5 * 2 = 13 (left: 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 -> 13 / 2 = 6.5 (left: 6.5 13) -> 6.5 * 2 = 13 (left: 13) -> 13 * 2 = 26 (left: 26)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "66 1650"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "11 + 12 = 23 (left: 6 13 23)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 11 12 13"
                }
            },
            "Step 1": {
                "Step": "12 + 13 = 25 (left: 6 11 25)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 - 6 = 19 (left: 11 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "6.5 13"
                }
            },
            "Step 3": {
                "Step": "13 -> 13 / 2 = 6.5 (left: 6.5 13) -> Input: 19.5 2",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 -> 13 / 2 = 6.5 (left: 6.5 13) -> Input: 19.5 2 -> 19.5 * 2 = 39 (left: 39)",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "6.5 13"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "25 66"
                }
            },
            "Step 5": {
                "Step": "6 * 11 = 66 (left: 12 13 66) -> 12 + 13 = 25 (left: 25 66) -> 25 * 66 = 1650 (left: 1650)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 11 = 66 (left: 12 13 66) -> 12 + 13 = 25 (left: 25 66) -> 25 * 66 = 1650 (left: 1650) -> 1650 +",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "11 + 12 = 23 (left: 6 13 23)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 11 12 13"
                }
            },
            "Step 1": {
                "Step": "6 * 11 = 66 (left: 12 13 66)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 11 = 66 (left: 12 13 66) -> Input:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 11 12 13"
                }
            },
            "Step 3": {
                "Step": "6 + 11 = 17 (left: 12 13 17)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 11 = 17 (left: 12 13 17) -> 13 * 17 = 221 (left: 12 221)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "6.5 13"
                }
            },
            "Step 5": {
                "Step": "13 -> 13 / 2 = 6.5 (left: 6.5 13) -> 13 / 6.5 = 2 (left: 2 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 -> 13 / 2 = 6.5 (left: 6.5 13) -> 13 / 6.5 = 2 (left: 2 13) -> 13 - 2 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "66 1650"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "12 + 13 = 25 (left: 6 11 25)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 11 12 13"
                }
            },
            "Step 1": {
                "Step": "13 - 6 = 7 (left: 11 12 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 6 = 7 (left: 11 12  -> 11 * 12 = 132 (left: 132)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "6.5 13"
                }
            },
            "Step 3": {
                "Step": "13 -> 13 / 2 = 6.5 (left: 6.5 13) -> 13 - 6.5 = 6.5 (left: 6.5 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 -> 13 / 2 = 6.5 (left: 6.5 13) -> 13 - 6.5 = 6.5 (left: 6.5 13) -> 6.5 * 2 = 13 (left: 13)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "25 66"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "25 66"
                }
            },
            "Step 5": {
                "Step": "6 * 11 = 66 (left: 12 13 66) -> 12 + 13 = 25 (left: 25 66) -> 25 * 66 = 1650 (left: 1650)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 11 = 66 (left: 12 13 66) -> 12 + 13 = 25 (left: 25 66) -> 25 * 66 = 1650 (left: 1650) -> 16 - 5 = 11 (left: 11 0)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 + 13 = 25 (left: 6 11 25)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 13 23"
                }
            },
            "Step 1": {
                "Step": "11 + 12 = 23 (left: 6 13 23) -> 6 + 13 = 19 (left: 19 23)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 + 12 = 23 (left: 6 13 23) -> 6 + 13 = 19 (left: 19 23) -> Input: 5 5 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "7 11 12"
                }
            },
            "Step 3": {
                "Step": "13 - 6 = 7 (left: 7 11 12) -> 7 + 11 = 18 (left: 12 18)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 6 = 7 (left: 7 11 12) -> 7 + 11 = 18 (left: 12 18) -> 12 + 18 = 30 (left: 30)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "25 66"
                }
            },
            "Step 5": {
                "Step": "6 * 11 = 66 (left: 12 13 66) -> 12 + 13 = 25 (left: 25 66) -> 25 + 66 = 91 (left: 91)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 11 = 66 (left: 12 13 66) -> 12 + 13 = 25 (left: 25 66) -> 25 + 66 = 91 (left: 91) -> There are no possible next steps for the input 91 as it is a single number.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 6 11 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 11 12 13"
                }
            },
            "Step 1": {
                "Step": "13",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 -> 13 / 2 = 6.5 (left: 6.5 13)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 11 12 13"
                }
            },
            "Step 3": {
                "Step": "13 - 12 = 1 (left: ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 12 = 1 (left:  -> It seems like you did not provide an input to work with. Please provide a set of numbers to continue with the calculations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "25 66"
                }
            },
            "Step 5": {
                "Step": "6 * 11 = 66 (left: 12 13 66) -> 12 + 13 = 25 (left: 25 66) -> 25 + 66 = 91 (left: 91)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 11 = 66 (left: 12 13 66) -> 12 + 13 = 25 (left: 25 66) -> 25 + 66 = 91 (left: 91) -> 91 / 1 = 91 (left: 9 91)",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 / 11 = 0.545 (left: 0.545 12 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 11 12 13"
                }
            },
            "Step 1": {
                "Step": "13 - 11 = 2 (left: 6 12 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 11 = 2 (left: 6 12  -> 12 / 6 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "25 66"
                }
            },
            "Step 3": {
                "Step": "6 * 11 = 66 (left: 12 13 66) -> 12 + 13 = 25 (left: 25 66) -> 25 * 66 = 1650 (left: 1650)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 * 11 = 66 (left: 12 13 66) -> 12 + 13 = 25 (left: 25 66) -> 25 * 66 = 1650 (left: 1650) -> 16 + 50 = 66 (left: 66 1650)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "25 66"
                }
            },
            "Step 5": {
                "Step": "6 * 11 = 66 (left: 12 13 66) -> 12 + 13 = 25 (left: 25 66) -> 25 - 66 = -41 (left: -41)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 11 = 66 (left: 12 13 66) -> 12 + 13 = 25 (left: 25 66) -> 25 - 66 = -41 (left: -41) -> -41 / 2 = -20.5 (left: -20.5)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "66 1650"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 7 11 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 11 12 13"
                }
            },
            "Step 1": {
                "Step": "6 + 11 = 17 (left: 12 13 17)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 11 = 17 (left: 12 13 17) -> 17 - 13 = 4 (left: 12 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 13 23"
                }
            },
            "Step 3": {
                "Step": "11 + 12 = 23 (left: 6 13 23) -> 23 / 6 = 3.8333 (left: 3.8333 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 + 12 = 23 (left: 6 13 23) -> 23 / 6 = 3.8333 (left: 3.8333  -> There are no possible next steps with the input 3.8333.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "25 66"
                }
            },
            "Step 5": {
                "Step": "6 * 11 = 66 (left: 12 13 66) -> 12 + 13 = 25 (left: 25 66) -> 25 * 66 = 1650 (left: 1650)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 11 = 66 (left: 12 13 66) -> 12 + 13 = 25 (left: 25 66) -> 25 * 66 = 1650 (left: 1650) -> 1 + 6 + 5 + 0 = 12 (left: 12 1650)",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "12 * 13 = 156 (left: 6 11 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 13 23"
                }
            },
            "Step 1": {
                "Step": "11 + 12 = 23 (left: 6 13 23) -> 6 + 13 = 19 (left: 19 23)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 + 12 = 23 (left: 6 13 23) -> 6 + 13 = 19 (left: 19 23) -> 19 / 23 = 0.82608695652 (left: 0.82608695652)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 11 12 13"
                }
            },
            "Step 3": {
                "Step": "6 + 11 = 17 (left: 12 13 17)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 11 = 17 (left: 12 13 17) -> Input: 5 7 9 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "25 66"
                }
            },
            "Step 5": {
                "Step": "6 * 11 = 66 (left: 12 13 66) -> 12 + 13 = 25 (left: 25 66) -> 25 * 66 = 1650 (left: 1650)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 11 = 66 (left: 12 13 66) -> 12 + 13 = 25 (left: 25 66) -> 25 * 66 = 1650 (left: 1650) -> 1 * 6 * 5 * 0 = 0 (left: 0 1650)",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 6 11 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 11 12 13"
                }
            },
            "Step 1": {
                "Step": "6 * 11 = 66 (left: 12 13 66)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 11 = 66 (left: 12 13 66) -> 12 / 13 = 0.9230769230769231 (left: 0.9230769230769231 66)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "25 66"
                }
            },
            "Step 3": {
                "Step": "6 * 11 = 66 (left: 12 13 66) -> 12 + 13 = 25 (left: 25 66) -> 25 + 66 = 91 (left: 91)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 * 11 = 66 (left: 12 13 66) -> 12 + 13 = 25 (left: 25 66) -> 25 + 66 = 91 (left: 91) -> 91 + 2 = 93",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "25 66"
                }
            },
            "Step 5": {
                "Step": "6 * 11 = 66 (left: 12 13 66) -> 12 + 13 = 25 (left: 25 66) -> 25 - 66 = -41 (left: -41)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 11 = 66 (left: 12 13 66) -> 12 + 13 = 25 (left: 25 66) -> 25 - 66 = -41 (left: -41) -> There are no possible next steps with the input of -41.",
                "Pruning": null
            }
        },
        "Input": "6 11 12 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "937": {
        "puzzle": "2 2 8 8",
        "Agent 0": {
            "Step 0": {
                "Step": "8 / 2 = 4 (left: 2 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8) -> 8 + 2 = 10 (left: 10 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8)"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 - 2 = 6 (left: 2 6 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 8 8"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 8 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32)"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 8 8)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8) -> 8 - 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32) -> 32 - 8 = 24 (left: 24) -> Answer: ((2 * 2) * 8) - 8 = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 8 8)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 8 8"
                }
            },
            "Step 1": {
                "Step": "8 / 2 = 4 (left: 2 4 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 / 2 = 4 (left: 2 4 8) -> 8 - 2 = 6 (left: 6 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12)"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 8 8)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32) -> 32 - 8 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8)"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 8 8)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8) -> 8 - 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8)"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "8 / 2 = 4 (left: 2 4 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 8 8"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 8 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 3 + 5 = 8 (left: 2 8",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8)"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 8 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 8 8"
                }
            },
            "Step 1": {
                "Step": "8 + 2 = 10 (left: 2 8 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 + 2 = 10 (left: 2 8 10) -> 10 - 2 = 8 (left: 8 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32)"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "8 / 2 = 4 (left: 2 4 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12) -> 12 - 8 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8)"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 8 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 8 8"
                }
            },
            "Step 1": {
                "Step": "8 / 2 = 4 (left: 2 4 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 / 2 = 4 (left: 2 4 8) -> 2 + 4 = 6 (left: 6 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32) -> 32 - 8 = 24 (left: 24) -> Answer: (2 * 2) * (8 - 8) = 24"
            }
        },
        "Input": "2 2 8 8",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            }
        ]
    },
    "938": {
        "puzzle": "2 7 12 13",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 7 = 9 (left: 9 12 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 7 12 13"
                }
            },
            "Step 1": {
                "Step": "12 + 2 = 14 (left: 7 12 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 + 2 = 14 (left: 7 12 14) -> 14 - 7 = 7 (left: 7 14)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 7 12 13"
                }
            },
            "Step 3": {
                "Step": "12 + 2 = 14 (left: 7 13 14)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 + 2 = 14 (left: 7 13 14) -> 7 * 13 = 91 (left: 91 14)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "24 20"
                }
            },
            "Step 5": {
                "Step": "7 + 13 = 20 (left: 2 12 20)  -> 12 * 2 = 24 (left: 24 20) -> 24 - 20 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 13 = 20 (left: 2 12 20)  -> 12 * 2 = 24 (left: 24 20) -> 24 - 20 = 4 (left: 4) -> 4 / 4 = 1 (left: 1)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 + 7 = 9 (left: 9 12 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 7 12 13"
                }
            },
            "Step 1": {
                "Step": "2 + 7 = 9 (left: 9 12 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 13 - 9 = 4 (left: 4 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 7 12 13"
                }
            },
            "Step 3": {
                "Step": "13 - 2 = 11 (left: 7 12 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 2 = 11 (left: 7 12  -> 12 / 7 = 1.71428571429 (left: 1.71428571429)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "7 14"
                }
            },
            "Step 5": {
                "Step": "12 + 2 = 14 (left: 7 12 14) -> 14 - 7 = 7 (left: 7 14) -> 14 - 7 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 + 2 = 14 (left: 7 12 14) -> 14 - 7 = 7 (left: 7 14) -> 14 - 7 = 7 (left: 7) -> 7 + 8 = 15 (left: 15)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 + 12 = 14 (left: 7 14 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 7 12 13"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 2 5 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 2 5 12) -> 2 + 5 = 7 (left: 7 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 7 12 13"
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 2 6 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 2 6  -> 2 * 6 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "10 21 5"
                }
            },
            "Step 5": {
                "Step": "7 + 12 = 19 (left: 2 19 13) -> 3 + 7 = 10 (left: 10 21 5) -> 10 + 21 = 31 (left: 5 31)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 12 = 19 (left: 2 19 13) -> 3 + 7 = 10 (left: 10 21 5) -> 10 + 21 = 31 (left: 5 31) -> 31 - 5 = 26 (left: 26)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 + 12 = 19 (left: 2 19 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 7 12 13"
                }
            },
            "Step 1": {
                "Step": "12 - 2 = 10 (left: ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 2 = 10 (left:  -> There are no possible next steps with the given input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 7 12 13"
                }
            },
            "Step 3": {
                "Step": "7 + 12 = 19 (left: 2 19 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 + 12 = 19 (left: 2 19 13) -> 3 + 7 = 10 (left: 10 21 5)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "24 20"
                }
            },
            "Step 5": {
                "Step": "7 + 13 = 20 (left: 2 12 20)  -> 12 * 2 = 24 (left: 24 20) -> 24 / 20 = 1.2 (left: 1.2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 13 = 20 (left: 2 12 20)  -> 12 * 2 = 24 (left: 24 20) -> 24 / 20 = 1.2 (left: 1.2) -> 1 + 2 = 3",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 - 12 = 1 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 7 12 13"
                }
            },
            "Step 1": {
                "Step": "12 + 2 = 14 (left: 7 14 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 + 2 = 14 (left: 7 14 13) -> 13 - 7 = 6 (left: 6 14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "9 12 13"
                }
            },
            "Step 3": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 12 - 9 = 3 (left: 3 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 12 - 9 = 3 (left: 3 13) -> 3 * 13 = 39 (left: 13 39)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "24 20"
                }
            },
            "Step 5": {
                "Step": "7 + 13 = 20 (left: 2 12 20)  -> 12 * 2 = 24 (left: 24 20) -> 24 / 20 = 1.2 (left: 1.2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 13 = 20 (left: 2 12 20)  -> 12 * 2 = 24 (left: 24 20) -> 24 / 20 = 1.2 (left: 1.2) -> There are no possible next steps for the input 1.2.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "2 + 7 = 9 (left: 9 12 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 7 12 13"
                }
            },
            "Step 1": {
                "Step": "13 + 2 = 15 (left: 7 12 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 + 2 = 15 (left: 7 12 15) -> 7 + 12 = 19 (left: 19 15)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 7 12 13"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 5 12 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 5 12 13) -> 12 - 5 = 7 (left: 7 13)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "24 20"
                }
            },
            "Step 5": {
                "Step": "7 + 13 = 20 (left: 2 12 20)  -> 12 * 2 = 24 (left: 24 20) -> 24 - 20 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 13 = 20 (left: 2 12 20)  -> 12 * 2 = 24 (left: 24 20) -> 24 - 20 = 4 (left: 4) -> There are no possible next steps with the input of 4.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 7 12 13"
                }
            },
            "Step 1": {
                "Step": "2 * 7 = 14 (left: 12 14 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 7 = 14 (left: 12 14 14) -> 12 + 14 = 26 (left: 14 26)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 7 12 13"
                }
            },
            "Step 3": {
                "Step": "2 + 7 = 9 (left: 9 12 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> Input: 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "24 20"
                }
            },
            "Step 5": {
                "Step": "7 + 13 = 20 (left: 2 12 20)  -> 12 * 2 = 24 (left: 24 20) -> 24 / 20 = 1.2 (left: 1.2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 13 = 20 (left: 2 12 20)  -> 12 * 2 = 24 (left: 24 20) -> 24 / 20 = 1.2 (left: 1.2) -> 1.2 - 8 = -6.8 (left: -6.8)",
                "Pruning": "NA"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "2 * 7 = 14 (left: 14 12 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 7 12 13"
                }
            },
            "Step 1": {
                "Step": "2 * 7 = 14 (left: 12 13 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 7 = 14 (left: 12 13 14) -> 13 * 14 = 182 (left: 12 182)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 7 12 13"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 5 12 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 5 12 13) -> 13 - 5 = 8 (left: 8 13)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "24 20"
                }
            },
            "Step 5": {
                "Step": "7 + 13 = 20 (left: 2 12 20)  -> 12 * 2 = 24 (left: 24 20) -> 24 + 20 = 44 (left: 44)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 13 = 20 (left: 2 12 20)  -> 12 * 2 = 24 (left: 24 20) -> 24 + 20 = 44 (left: 44) -> There are no possible next steps for the input 44 as it is a single number.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "12 + 1 = 13 (left: 2 7 13)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 7 12 13"
                }
            },
            "Step 1": {
                "Step": "12 + 2 = 14 (left: 7 13 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 + 2 = 14 (left: 7 13 14) -> 14 - 13 = 1 (left: 1 14)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 7 12 13"
                }
            },
            "Step 3": {
                "Step": "2 + 7 = 9 (left: 9 12 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 13 - 9 = 4 (left: 4 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "24 20"
                }
            },
            "Step 5": {
                "Step": "7 + 13 = 20 (left: 2 12 20)  -> 12 * 2 = 24 (left: 24 20) -> 24 / 20 = 1.2 (left: 1.2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 13 = 20 (left: 2 12 20)  -> 12 * 2 = 24 (left: 24 20) -> 24 / 20 = 1.2 (left: 1.2) -> 1.2 + 2 = 3.2 (left: 2 3.2)",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 5 12 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 7 12 13"
                }
            },
            "Step 1": {
                "Step": "7 + 12 = 19 (left: 2 13 19)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 12 = 19 (left: 2 13 19) -> 13 * 2 = 26 (left: 26 19)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 7 12 13"
                }
            },
            "Step 3": {
                "Step": "7 + 13 = 20 (left: 2 12 20) ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 + 13 = 20 (left: 2 12 20)  -> 12 * 2 = 24 (left: 24 20)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "7 14"
                }
            },
            "Step 5": {
                "Step": "12 + 2 = 14 (left: 7 12 14) -> 14 - 7 = 7 (left: 7 14) -> 7 - 14 = -7 (left: -7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 + 2 = 14 (left: 7 12 14) -> 14 - 7 = 7 (left: 7 14) -> 7 - 14 = -7 (left: -7) -> -7 - 8 = -15 (left: -15)",
                "Pruning": "NA"
            }
        },
        "Input": "2 7 12 13",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            }
        ]
    },
    "939": {
        "puzzle": "2 6 8 12",
        "Agent 0": {
            "Step 0": {
                "Step": "2 * 6 = 12 (left: 8 12 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 8 12"
                }
            },
            "Step 1": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 12 - 6 = 6 (left: 6 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 12 - 6 = 6 (left: 6 12) -> 6 * 12 = 72 (left: 72)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 3": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 12 - 8 = 4 (left: 4",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 12 - 8 = 4 (left: 4 -> 4 + 4 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (8 - 2) * (6 / 12) = 24",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (8 - 2) * (12 / 6) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 - 2 = 10 (left: 6 8 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 8 10"
                }
            },
            "Step 1": {
                "Step": "12 - 2 = 10 (left: 6 8 10) -> 8 - 6 = 2 (left: 2 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 2 = 10 (left: 6 8 10) -> 8 - 6 = 2 (left: 2 10) -> 2 + 10 = 12 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 8 12"
                }
            },
            "Step 3": {
                "Step": "12 - 8 = 4 (left: 2 4 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 8 = 4 (left: 2 4  -> 4 - 2 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (8 - 2) * (12 / 6) = 24",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (8 - 2) * (6 / 12) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 + 6 = 8 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 8 12"
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 12 8 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 12 8 12) -> 8 / 12 = 0.67 (left: 0.67 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (8 - 2) * (6 / 12) = 24",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "8 8 12"
                }
            },
            "Step 4": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 12 + 8 = 20 (left: 8 20)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (8 - 2) * (12 / 6) = 24",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (8 - 2) * (12 / 6) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 + 6 = 8 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 1": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 12 + 8 = 20 (left: 8 20)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 12 + 8 = 20 (left: 8 20) -> 8 + 20 = 28 (left: 28)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 8 12"
                }
            },
            "Step 3": {
                "Step": "2 + 6 = 8 (left: 8 8 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 + 8 = 16 (left: 16 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (8 - 2) * (12 / 6) = 24",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (8 - 2) * (12 / 6) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 * 2 = 12 (left: 12 8 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 8 12"
                }
            },
            "Step 1": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 8 / 6 = 1.33 (left: 1.33 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 8 / 6 = 1.33 (left: 1.33 12) -> 12 - 1.33 = 10.67 (left: 10.67)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 8 12"
                }
            },
            "Step 3": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 8 / 6 = 1.33 (left: 1.33 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 8 / 6 = 1.33 (left: 1.33 12) -> 12 - 1.33 = 10.67 (left: 10.67)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (8 - 2) * (12 / 6) = 24",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (8 - 2) * (6 / 12) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "2 * 6 = 12 (left: 8 12 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 8 12"
                }
            },
            "Step 1": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 6 + 8 = 14 (left: 14 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 6 + 8 = 14 (left: 14 12) -> 14 * 12 = 168 (left: 168)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 8 12"
                }
            },
            "Step 3": {
                "Step": "2 * 6 = 12 (left: 8 12 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 6 = 12 (left: 8 12 12) -> 8 + 12 = 20 (left: 12 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (8 - 2) * (12 / 6) = 24",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (8 - 2) * (6 / 12) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 * 8 = 48 (left: 12 48 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 8 12"
                }
            },
            "Step 1": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 8 - 6 = 2 (left: 2 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 8 - 6 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 3": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12) -> 64 + 12 = 76 (left: 76)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (8 - 2) * (12 / 6) = 24",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (8 - 2) * (6 / 12) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "2 + 6 = 8 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 1": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12) -> 64 / 12 = 5.33 (left: 5.33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (8 - 2) * (12 / 6) = 24",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "8 8 12"
                }
            },
            "Step 4": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 / 8 = 1 (left: 1 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (8 - 2) * (12 / 6) = 24",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (8 - 2) * (6 / 12) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "8 - 2 = 6 (left: 6 8 12)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 8 12"
                }
            },
            "Step 1": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 12 / 6 = 2 (left: 2 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (8 - 2) * (12 / 6) = 24",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "24"
                }
            },
            "Step 4": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (8 - 2) * (12 / 6) = 24",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (8 - 2) * (12 / 6) = 24",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (8 - 2) * (12 / 6) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 2 6 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 8 12"
                }
            },
            "Step 1": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 6 * 8 = 48 (left: 12 48)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 6 * 8 = 48 (left: 12 48) -> 12 - 48 = -36 (left: -36)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 8 12"
                }
            },
            "Step 3": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 6 + 8 = 14 (left: 14 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 6 + 8 = 14 (left: 14 12) -> 14 - 12 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (8 - 2) * (12 / 6) = 24",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (8 - 2) * (12 / 6) = 24",
                "Pruning": "NA"
            }
        },
        "Input": "2 6 8 12",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "940": {
        "puzzle": "3 4 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 3 4 4)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 9 13"
                }
            },
            "Step 1": {
                "Step": "9 + 3 = 12 (left: 4 12 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 3 = 12 (left: 4 12 13) -> 13 - 4 = 9 (left: 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 9 13"
                }
            },
            "Step 3": {
                "Step": "3 + 4 = 7 (left: 7 9 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 7 9 13) -> 7 * 9 = 63 (left: 63 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "1 9"
                }
            },
            "Step 5": {
                "Step": "3 + 4 = 7 (left: 7 9 13) -> 13 / 7 = 1 (left: 1 9) -> 9 - 1 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 4 = 7 (left: 7 9 13) -> 13 / 7 = 1 (left: 1 9) -> 9 - 1 = 8 (left: 8) -> There are no possible next steps with only one number.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 9 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 9 13"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 / 3 = 1.33 (left: 1.33 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 9 13"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 4 / 3 = 1.33 (left: 1.33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "1 9"
                }
            },
            "Step 5": {
                "Step": "3 + 4 = 7 (left: 7 9 13) -> 13 / 7 = 1 (left: 1 9) -> 9 / 1 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 4 = 7 (left: 7 9 13) -> 13 / 7 = 1 (left: 1 9) -> 9 / 1 = 9 (left: 9) -> 5 + 5 = 10 (left: 10)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 9 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 9 13"
                }
            },
            "Step 1": {
                "Step": "9 - 3 = 6 (left: 4 6 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 3 = 6 (left: 4 6 13) -> 4 * 6 = 24 (left: 24 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 9 13"
                }
            },
            "Step 3": {
                "Step": "9 + 3 = 12 (left: 4 12 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 + 3 = 12 (left: 4 12 13) -> 13 - 12 = 1 (left:",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "1 9"
                }
            },
            "Step 5": {
                "Step": "3 + 4 = 7 (left: 7 9 13) -> 13 / 7 = 1 (left: 1 9) -> 1 + 9 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 4 = 7 (left: 7 9 13) -> 13 / 7 = 1 (left: 1 9) -> 1 + 9 = 10 (left: 10) -> 10 + 10 = 20",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 9 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 9 13"
                }
            },
            "Step 1": {
                "Step": "4 + 9 = 13 (left: 3 13 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 9 = 13 (left: 3 13 13) -> 3 * 13 = 39 (left: 13 39)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 9 13"
                }
            },
            "Step 3": {
                "Step": "4 * 3 = 12 (left: 12 9 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 * 3 = 12 (left: 12 9 13) -> 13 * 9 = 117 (left:",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "1 9"
                }
            },
            "Step 5": {
                "Step": "3 + 4 = 7 (left: 7 9 13) -> 13 / 7 = 1 (left: 1 9) -> 9 - 1 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 4 = 7 (left: 7 9 13) -> 13 / 7 = 1 (left: 1 9) -> 9 - 1 = 8 (left: 8) -> 8 + 8 = 16 (left: 16) ",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 * 4 = 12 (left: 9 12 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 9 13"
                }
            },
            "Step 1": {
                "Step": "9 - 3 = 6 (left: 4 6 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 3 = 6 (left: 4 6 13) -> 6 - 4 = 2 (left: 2 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 9 13"
                }
            },
            "Step 3": {
                "Step": "4 - 3 = 1 (left: 1 9 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 - 3 = 1 (left: 1 9 13) -> 13 - 1 = 12 (left: 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "13 * 9 = 117 (left:"
                }
            },
            "Step 5": {
                "Step": "4 * 3 = 12 (left: 12 9 13) -> 13 * 9 = 117 (left: -> There are no possible next steps as the equation is already solved.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 3 = 12 (left: 12 9 13) -> 13 * 9 = 117 (left: -> There are no possible next steps as the equation is already solved. -> N/A",
                "Pruning": "NA"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "4 * 3 = 12 (left: 12 9 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 4 4"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 3 * 4 = 12 (left: 4 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 3 * 4 = 12 (left: 4 12) -> 12 / 4 = 3 (left: 3 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 9 13"
                }
            },
            "Step 3": {
                "Step": "3 + 4 = 7 (left: 7 9 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 7 9 13) -> 7 * 9 = 63 (left: 63 13)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "1 9"
                }
            },
            "Step 5": {
                "Step": "3 + 4 = 7 (left: 7 9 13) -> 13 / 7 = 1 (left: 1 9) -> 1 * 9 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 4 = 7 (left: 7 9 13) -> 13 / 7 = 1 (left: 1 9) -> 1 * 9 = 9 (left: 9) -> 9 - 2 = 7 (left: 7)",
                "Pruning": "NA"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "3 * 4 = 12 (left: 9 12 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 9 13"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 / 3 = 1.33 (left: 1.33 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 9 13"
                }
            },
            "Step 3": {
                "Step": "3 + 4 = 7 (left: 7 9 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 7 9 13) -> 9 - 7 = 2 (left: 2 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "1 9"
                }
            },
            "Step 5": {
                "Step": "3 + 4 = 7 (left: 7 9 13) -> 13 / 7 = 1 (left: 1 9) -> 1 * 9 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 4 = 7 (left: 7 9 13) -> 13 / 7 = 1 (left: 1 9) -> 1 * 9 = 9 (left: 9) -> There are no possible next steps with the number 9.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 9 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 4 4"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 - 3 = 1 (left: 1 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 - 3 = 1 (left: 1 4) -> 1 + 4 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 9 13"
                }
            },
            "Step 3": {
                "Step": "3 + 4 = 7 (left: 7 9 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 7 9 13) -> 9 - 13",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "13 * 9 = 117 (left:"
                }
            },
            "Step 5": {
                "Step": "4 * 3 = 12 (left: 12 9 13) -> 13 * 9 = 117 (left: -> 13 / 9 = 1.444 (left: 1.444)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 3 = 12 (left: 12 9 13) -> 13 * 9 = 117 (left: -> 13 / 9 = 1.444 (left: 1.444) -> 1.444 / 1 = 1.444 (left: 1.444 1.444)",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "3 * 4 = 12 (left: 12 9 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 9 13"
                }
            },
            "Step 1": {
                "Step": "9 - 3 = 6 (left: 4 6 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 3 = 6 (left: 4 6 13) -> 4 * 6 = 24 (left: 24 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 9 13"
                }
            },
            "Step 3": {
                "Step": "3 + 4 = 7 (left: 7 9 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 7 9 13) -> 13 / 7 = 1 (left: 1 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "1 9"
                }
            },
            "Step 5": {
                "Step": "3 + 4 = 7 (left: 7 9 13) -> 13 / 7 = 1 (left: 1 9) -> 9 / 1 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 4 = 7 (left: 7 9 13) -> 13 / 7 = 1 (left: 1 9) -> 9 / 1 = 9 (left: 9) -> 9 * 1 = 9 (left: 9)",
                "Pruning": "NA"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 9 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 4 4"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 / 4 = 1 (",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 / 4 = 1 ( -> 2 - 2 = 0 (left",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 4 4"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 3 + 4 = 7 (left: 4 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 3 + 4 = 7 (left: 4 7) -> 7 / 4 = 1.75 (left: 1.75)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "1 9"
                }
            },
            "Step 5": {
                "Step": "3 + 4 = 7 (left: 7 9 13) -> 13 / 7 = 1 (left: 1 9) -> 1 * 9 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 4 = 7 (left: 7 9 13) -> 13 / 7 = 1 (left: 1 9) -> 1 * 9 = 9 (left: 9) -> There are no possible next steps with just the input of 9.",
                "Pruning": null
            }
        },
        "Input": "3 4 9 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            }
        ]
    },
    "941": {
        "puzzle": "4 5 10 12",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 5 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "0.8 10 12"
                }
            },
            "Step 1": {
                "Step": "4 / 5 = 0.8 (left: 0.8 10 12) -> 0.8 * 10 = 8 (left: 8 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 5 = 0.8 (left: 0.8 10 12) -> 0.8 * 10 = 8 (left: 8 12) -> 8 + 12 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 3": {
                "Step": "4 * 5 = 20 (left: 20 10 12) -> 20 / 10 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 * 5 = 20 (left: 20 10 12) -> 20 / 10 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10) -> 10 * 2 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "2 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "4 * 5 = 20 (left: 20 10 12) -> 20 / 10 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 5 = 20 (left: 20 10 12) -> 20 / 10 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14) -> 14 + 14 = 28"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 * 4 = 20 (left: 20 10 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 10 12"
                }
            },
            "Step 1": {
                "Step": "4 * 5 = 20 (left: 20 10 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 5 = 20 (left: 20 10 12) -> 20 / 10 = 2 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 3": {
                "Step": "4 * 5 = 20 (left: 20 10 12) -> 20 / 10 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 * 5 = 20 (left: 20 10 12) -> 20 / 10 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6) -> 6 * 8 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "2 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "4 * 5 = 20 (left: 20 10 12) -> 20 / 10 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 5 = 20 (left: 20 10 12) -> 20 / 10 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (4 * 5) / (10 / 12) = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 10 = 2 (left: 4 5 2)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "4 5 22"
                }
            },
            "Step 1": {
                "Step": "10 + 12 = 22 (left: 4 5 22) -> 4 + 5 = 9 (left: 9 22)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 12 = 22 (left: 4 5 22) -> 4 + 5 = 9 (left: 9 22) -> 9 - 22 = -13 (left: -13)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 3": {
                "Step": "4 * 5 = 20 (left: 20 10 12) -> 20 / 10 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 * 5 = 20 (left: 20 10 12) -> 20 / 10 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14) -> 14 + 14 = 28",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "4 * 5 = 20 (left: 20 10 12) -> 20 / 10 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 5 = 20 (left: 20 10 12) -> 20 / 10 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (4 * 5) / (10 / 12) = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 / 5 = 0.8 (left: 0.8 10 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 5 2"
                }
            },
            "Step 1": {
                "Step": "12 - 10 = 2 (left: 4 5 2) -> 5 - 4 = 1 (left: 1 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 10 = 2 (left: 4 5 2) -> 5 - 4 = 1 (left: 1 2) -> 1 + 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 3": {
                "Step": "4 * 5 = 20 (left: 20 10 12) -> 20 / 10 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 * 5 = 20 (left: 20 10 12) -> 20 / 10 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6) -> 8 - 6 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "2 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "4 * 5 = 20 (left: 20 10 12) -> 20 / 10 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 5 = 20 (left: 20 10 12) -> 20 / 10 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6) -> 6 * 2 = 12 (left: 12)"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "10 / 5 = 2 (left: 4 2 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 10 12"
                }
            },
            "Step 1": {
                "Step": "12 - 10 = 2 (left: 2 4 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 10 = 2 (left: 2 4 12) -> 4 * 2 = 8 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 10 12"
                }
            },
            "Step 3": {
                "Step": "5 * 4 = 20 (left: 20 10 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 4 = 20 (left: 20 10 12) -> 10 + 12 = 22 (left: 20 22)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3"
                }
            },
            "Step 5": {
                "Step": "12 - 10 = 2 (left: 4 5 2) -> 5 - 4 = 1 (left: 1 2) -> 1 + 2 = 3 (left: 3) -> 8 + 3 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "3"
                }
            },
            "Step 6": {
                "Step": "12 - 10 = 2 (left: 4 5 2) -> 5 - 4 = 1 (left: 1 2) -> 1 + 2 = 3 (left: 3) -> There is only one possible next step: 3 + 2 = 5 (left: 5)"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "10 + 12 = 22 (left: 4 5 22)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 10 12"
                }
            },
            "Step 1": {
                "Step": "4 * 5 = 20 (left: 20 10 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 5 = 20 (left: 20 10 12) -> 20 / 10 = 2 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 3": {
                "Step": "4 * 5 = 20 (left: 20 10 12) -> 20 / 10 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 * 5 = 20 (left: 20 10 12) -> 20 / 10 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6) -> 6 - 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "2 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "4 * 5 = 20 (left: 20 10 12) -> 20 / 10 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 5 = 20 (left: 20 10 12) -> 20 / 10 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10) -> There are no possible next steps with just the number 10."
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "4 + 5 = 9 (left: 9 10 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 10 12"
                }
            },
            "Step 1": {
                "Step": "10 + 12 = 22 (left: 4 5 22)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 12 = 22 (left: 4 5 22) -> 4 + 5 = 9 (left: 9 22)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 3": {
                "Step": "4 * 5 = 20 (left: 20 10 12) -> 20 / 10 = 2 (left: 2 12) -> 2 + 12 = 14",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 * 5 = 20 (left: 20 10 12) -> 20 / 10 = 2 (left: 2 12) -> 2 + 12 = 14 -> Input: 14 + 2 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "4 * 5 = 20 (left: 20 10 12) -> 20 / 10 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 5 = 20 (left: 20 10 12) -> 20 / 10 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: ((4 * 5) / 10) * 12 = 24"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "10 / 5 = 2 (left: 4 2 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 10 12"
                }
            },
            "Step 1": {
                "Step": "10 / 5 = 2 (left: 4 2 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 5 = 2 (left: 4 2  -> 4 - 2 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 3": {
                "Step": "4 * 5 = 20 (left: 20 10 12) -> 20 / 10 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 * 5 = 20 (left: 20 10 12) -> 20 / 10 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6) -> 6 + 8 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "2 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "4 * 5 = 20 (left: 20 10 12) -> 20 / 10 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 5 = 20 (left: 20 10 12) -> 20 / 10 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: ((4 * 5) / 10) * 12 = 24"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "12 - 4 = 8 (left: 5 10 8)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 10 12"
                }
            },
            "Step 1": {
                "Step": "4 + 5 = 9 (left: 9 10 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 5 = 9 (left: 9 10 12) -> 12 - 9 = 3 (left: 3 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 3": {
                "Step": "4 * 5 = 20 (left: 20 10 12) -> 20 / 10 = 2 (left: 2 12) -> 2 + 12 = 14",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 * 5 = 20 (left: 20 10 12) -> 20 / 10 = 2 (left: 2 12) -> 2 + 12 = 14 -> 14 / 2 = 7 (left: 7 14)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "4 * 5 = 20 (left: 20 10 12) -> 20 / 10 = 2 (left: 2 12) -> 12 + 2 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 5 = 20 (left: 20 10 12) -> 20 / 10 = 2 (left: 2 12) -> 12 + 2 = 14 (left: 14) -> No possible next steps, as there is only one number left."
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "5 * 10 = 50 (left: 4 50 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "20 10 12"
                }
            },
            "Step 1": {
                "Step": "5 * 4 = 20 (left: 20 10 12) -> 12 - 10 = 2 (left: 20 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 4 = 20 (left: 20 10 12) -> 12 - 10 = 2 (left: 20 2) -> 20 / 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 3": {
                "Step": "4 * 5 = 20 (left: 20 10 12) -> 20 / 10 = 2 (left: 2 12) -> 2 + 12 = 14",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 * 5 = 20 (left: 20 10 12) -> 20 / 10 = 2 (left: 2 12) -> 2 + 12 = 14 -> 12 + 2 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "2 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3"
                }
            },
            "Step 5": {
                "Step": "12 - 10 = 2 (left: 4 5 2) -> 5 - 4 = 1 (left: 1 2) -> 1 + 2 = 3 (left: 3) -> 4 + 3 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "3"
                }
            },
            "Step 6": {
                "Step": "12 - 10 = 2 (left: 4 5 2) -> 5 - 4 = 1 (left: 1 2) -> 1 + 2 = 3 (left: 3) -> 8 - 3 = 5 (left: 5)"
            }
        },
        "Input": "4 5 10 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": -1
            }
        ]
    },
    "942": {
        "puzzle": "1 2 7 11",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 7 = 9 (left: 1 9 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 11"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 7 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> Possible",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "11 / 1 = 11 (left:"
                }
            },
            "Step 3": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 11 / 1 = 11 (left: -> 11 - 1 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 11 / 1 = 11 (left: -> 11 - 1 = 10 (left: 10) -> 10 + 8 = 18 (left: 8 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "11 / 1 = 11 (left:"
                }
            },
            "Step 5": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 11 / 1 = 11 (left: -> This input is already a final result.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 11 / 1 = 11 (left: -> This input is already a final result. -> This input is already a final result.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 7 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 11"
                }
            },
            "Step 1": {
                "Step": "2 * 7 = 14 (left: 1 14 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 11 / 1 = 11 (left:",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 14 11"
                }
            },
            "Step 3": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 14 / 1 = 14 (left: 14 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 14 / 1 = 14 (left: 14 11) -> 14 - 11 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "11 / 1 = 11 (left:"
                }
            },
            "Step 5": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 11 / 1 = 11 (left: -> 1 / 11 = 0.09090909090909091 (left: 0.09090909090909091)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 11 / 1 = 11 (left: -> 1 / 11 = 0.09090909090909091 (left: 0.09090909090909091) -> 0.09090909090909091 + 0.09090909090909091 = 0.18181818181818182",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 * 7 = 14 (left: 1 14 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 11"
                }
            },
            "Step 1": {
                "Step": "7 / 1 = 7 (left: 7 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 / 1 = 7 (left: 7 11) -> 7 / 11 = 0.6363636363636364 (left: 0.6363636363636364)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 11"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 7 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 7 - 3 = 4 (left: 4 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "11 / 1 = 11 (left:"
                }
            },
            "Step 5": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 11 / 1 = 11 (left: -> 1 + 11 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 11 / 1 = 11 (left: -> 1 + 11 = 12 (left: 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "-1 11"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "11 - 7 = 4 (left: 1 2 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 11"
                }
            },
            "Step 1": {
                "Step": "1 * 2 = 2 (left: 2 7 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 * 2 = 2 (left: 2 7 11) -> 2 * 7 = 14 (left: 14 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "11 / 1 = 11 (left:"
                }
            },
            "Step 3": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 11 / 1 = 11 (left: -> 11 + 1 = 12 (left: 1 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 11 / 1 = 11 (left: -> 11 + 1 = 12 (left: 1 12) -> 12 / 1 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "11 / 1 = 11 (left:"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "11 / 1 = 11 (left:"
                }
            },
            "Step 5": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 11 / 1 = 11 (left: -> 4 + 5 = 9 (left: 7 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 11 / 1 = 11 (left: -> 4 + 5 = 9 (left: 7 9) -> 7 * 9 = 63 (left: 63)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "-1 11"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 * 7 = 14 (left: 1 14 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 11"
                }
            },
            "Step 1": {
                "Step": "11 + 1 = 12 (left: 2 7 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 + 1 = 12 (left: 2 7 12) -> 2 * 7 = 14 (left: 14 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "8 10"
                }
            },
            "Step 3": {
                "Step": "11 - 1 = 10 (left: 2 7 10) -> 10 - 2 = 8 (left: 8 10) -> 8 * 10 = 80 (left: 80)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 1 = 10 (left: 2 7 10) -> 10 - 2 = 8 (left: 8 10) -> 8 * 10 = 80 (left: 80) -> 80 + 2 = 82",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "11 / 1 = 11 (left:"
                }
            },
            "Step 5": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 11 / 1 = 11 (left: -> 11 * 1 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 11 / 1 = 11 (left: -> 11 * 1 = 11 (left: 11) -> 11 - 8 = 3 (left: 8)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "-1 11"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "2 * 7 = 14 (left: 1 14 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 11"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 7 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 3 + 7 = 10 (left: 10 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 11"
                }
            },
            "Step 3": {
                "Step": "1 * 2 = 2 (left: 2 7 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 * 2 = 2 (left: 2 7 11) -> 11 - 7 = 4 (left: 2 4)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "11 / 1 = 11 (left:"
                }
            },
            "Step 5": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 11 / 1 = 11 (left: -> 11 * 1 = 11 (left: 1 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 11 / 1 = 11 (left: -> 11 * 1 = 11 (left: 1 11) -> 11 / 1 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "-1 11"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 7 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 11"
                }
            },
            "Step 1": {
                "Step": "7 + 11 = 18 (left: 1 2 18)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 18 - 1 = 17 (left:",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "11 / 1 = 11 (left:"
                }
            },
            "Step 3": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 11 / 1 = 11 (left: -> 11 + 1 = 12 (left: 1 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 11 / 1 = 11 (left: -> 11 + 1 = 12 (left: 1 12) -> 1 * 12 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "11 / 1 = 11 (left:"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "11 / 1 = 11 (left:"
                }
            },
            "Step 5": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 11 / 1 = 11 (left: -> 5 / 3 = ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 11 / 1 = 11 (left: -> 5 / 3 =  -> 5 / 3 = 1.67",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 7 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 11"
                }
            },
            "Step 1": {
                "Step": "1 * 2 = 2 (left: 2 7 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 * 2 = 2 (left: 2 7 11) -> 7 - 2 = 5 (left: 2 5 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 11"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 7 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 3 * 7 = 21 (left: 21 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "2 4"
                }
            },
            "Step 5": {
                "Step": "1 * 2 = 2 (left: 2 7 11) -> 11 - 7 = 4 (left: 2 4) -> 4 - 2 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 * 2 = 2 (left: 2 7 11) -> 11 - 7 = 4 (left: 2 4) -> 4 - 2 = 2 (left: 2) -> No calculation possible with only one number.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 7 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 11"
                }
            },
            "Step 1": {
                "Step": "11 - 7 = 4 (left: 1 2 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 7 = 4 (left: 1 2 4) -> 1 + 2 = 3 (left: 3 4)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 11"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 1 5 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 1 5 11) -> 11 - 1 = 10 (left: 5 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "11 / 1 = 11 (left:"
                }
            },
            "Step 5": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 11 / 1 = 11 (left: -> 11 * 1 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 11 / 1 = 11 (left: -> 11 * 1 = 11 (left: 11) -> There are no possible next steps with the input of 11.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "2 * 7 = 14 (left: 1 14 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 11"
                }
            },
            "Step 1": {
                "Step": "11 - 1 = 10 (left: 2 7 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 1 = 10 (left: 2 7 10) -> 10 - 2 = 8 (left: 8 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "11 / 1 = 11 (left:"
                }
            },
            "Step 3": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 11 / 1 = 11 (left: -> 11 - 1 = 10 (left: 10 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 11 / 1 = 11 (left: -> 11 - 1 = 10 (left: 10 11) -> 10 - 11 = -1 (left: -1 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "11 / 1 = 11 (left:"
                }
            },
            "Step 5": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 11 / 1 = 11 (left: -> 11 - 1 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 11 / 1 = 11 (left: -> 11 - 1 = 10 (left: 10) -> 10 / 10 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "-1 11"
                }
            }
        },
        "Input": "1 2 7 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "943": {
        "puzzle": "4 5 6 8",
        "Agent 0": {
            "Step 0": {
                "Step": "5 * 6 = 30 (left: 4 8 30)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 6 8"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 4 8 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 4 8 11) -> 4 + 8 = 12 (left: 12 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 6 8"
                }
            },
            "Step 3": {
                "Step": "6 + 8 = 14 (left: 4 5 14)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 8 = 14 (left: 4 5 14) -> 14 - 4 = 10 (left: 10 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "5 20"
                }
            },
            "Step 5": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 4 * 5 = 20 (left: 5 20) -> Possible next steps:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 4 * 5 = 20 (left: 5 20) -> Possible next steps: -> There are no possible next steps as the input is already in its final form.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 + 5 = 9 (left: 6 8 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 6 8"
                }
            },
            "Step 1": {
                "Step": "6 * 8 = 48 (left: 4 5 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 4 - 5 = -1 (left: -1)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 6 8"
                }
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 4 5 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 5 * 4 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "5 20"
                }
            },
            "Step 5": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 4 * 5 = 20 (left: 5 20) -> 20 / 5 = 4 (left: 4 20)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 4 * 5 = 20 (left: 5 20) -> 20 / 5 = 4 (left: 4 20) -> 20 / 4 = 5 (left: 4 5 20)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 5 = 9 (left: 6 8 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 6 8"
                }
            },
            "Step 1": {
                "Step": "4 + 5 = 9 (left: 6 8 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 8 - 6 = 2 (left: 2 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 6 8"
                }
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 4 8 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 4 8 11) -> 8 / 4 = 2 (left: 2 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "5 20"
                }
            },
            "Step 5": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 4 * 5 = 20 (left: 5 20) -> 5 * 20 = 100 (left: 100)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 4 * 5 = 20 (left: 5 20) -> 5 * 20 = 100 (left: 100) -> 100 / 4 = 25",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 * 8 = 48 (left: 4 5 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 6 8"
                }
            },
            "Step 1": {
                "Step": "5 * 6 = 30 (left: 4 8 30)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 6 = 30 (left: 4 8 30) -> 8 / 4 = 2 (left: 2 30)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 6 8"
                }
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 4 5 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 4 * 5 = 20 (left: 5 20)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "5 20"
                }
            },
            "Step 5": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 4 * 5 = 20 (left: 5 20) -> 5 + 20 = 25 (left: 25) ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 4 * 5 = 20 (left: 5 20) -> 5 + 20 = 25 (left: 25)  -> 25 * 8 = 200 (left: 8)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 * 5 = 20 (left: 6 8 20)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 8 20"
                }
            },
            "Step 1": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> 20 - 8 = 12 (left: 6 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> 20 - 8 = 12 (left: 6 12) -> 12 - 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 5 14"
                }
            },
            "Step 3": {
                "Step": "6 + 8 = 14 (left: 4 5 14) -> 14 - 4 = 10 (left: 5 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 8 = 14 (left: 4 5 14) -> 14 - 4 = 10 (left: 5 10) -> 5 * 10 = 50 (left: 50)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "5 20"
                }
            },
            "Step 5": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 4 * 5 = 20 (left: 5 20) -> 20 - 5 = 15 (left: 5 15)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 4 * 5 = 20 (left: 5 20) -> 20 - 5 = 15 (left: 5 15) -> 5 * 15 = 75 (left: 75)",
                "Pruning": "NA"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "4 * 5 = 20 (left: 6 8 20)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 8 30"
                }
            },
            "Step 1": {
                "Step": "5 * 6 = 30 (left: 4 8 30) -> 30 / 4 = 7.5 (left: 7.5 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 6 = 30 (left: 4 8 30) -> 30 / 4 = 7.5 (left: 7.5 8) -> 7.5 / 8 = 0.9375 (left: 0.9375)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 8 30"
                }
            },
            "Step 3": {
                "Step": "5 * 6 = 30 (left: 4 8 30) -> 8 * 4 = 32 (left: 32 30)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 6 = 30 (left: 4 8 30) -> 8 * 4 = 32 (left: 32 30) -> 32 + 30 = 62 (left: 62)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "5 20"
                }
            },
            "Step 5": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 4 * 5 = 20 (left: 5 20) -> 5 + 20 = 25 (left: 25)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 4 * 5 = 20 (left: 5 20) -> 5 + 20 = 25 (left: 25) -> 25 - 2 = 23 (left: 2)",
                "Pruning": "NA"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "5 * 6 = 30 (left: 4 8 30)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 1": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 9 / 6 = 1.5 (left: 1.5 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 9 / 6 = 1.5 (left: 1.5 8) -> 8 - 1.5 = 6.5 (left: 6.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 6 8"
                }
            },
            "Step 3": {
                "Step": "6 + 8 = 14 (left: 4 5 14)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 8 = 14 (left: 4 5 14) -> 5 * 4 = 20 (left: 20 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "5 20"
                }
            },
            "Step 5": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 4 * 5 = 20 (left: 5 20) -> Possible next steps:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 4 * 5 = 20 (left: 5 20) -> Possible next steps: -> - 14 / 2 = 7 (left: 8 7 14)",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "6 + 8 = 14 (left: 4 5 14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 8 30"
                }
            },
            "Step 1": {
                "Step": "5 * 6 = 30 (left: 4 8 30) -> 4 / 8 = 0.5 (left: 0.5 8 30)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 6 = 30 (left: 4 8 30) -> 4 / 8 = 0.5 (left: 0.5 8 30) -> 8 / 0.5 = 16 (left: 16 30)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 6 8"
                }
            },
            "Step 3": {
                "Step": "4 / 5 = 0.8 (left: 0.8 6 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 / 5 = 0.8 (left: 0.8 6 8) -> 0.8 + 6 = 6.8 (left: 6.8 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "5 20"
                }
            },
            "Step 5": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 4 * 5 = 20 (left: 5 20) -> 20 / 5 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 4 * 5 = 20 (left: 5 20) -> 20 / 5 = 4 (left: 4) -> There are no possible next steps with just the number 4.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "6 + 8 = 14 (left: 4 5 14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 6 8"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 4 8 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 4 8 11) -> 4 + 8 = 12 (left: 12 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 6 8"
                }
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 4 8 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 4 8 11) -> 4 * 8 = 32 (left: 32 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "5 20"
                }
            },
            "Step 5": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 4 * 5 = 20 (left: 5 20) -> 5 + 20 = 25 (left: 25)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 4 * 5 = 20 (left: 5 20) -> 5 + 20 = 25 (left: 25) -> 25 - 2 = 23 (left: 2)",
                "Pruning": "NA"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "4 * 5 = 20 (left: 6 8 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 6 8"
                }
            },
            "Step 1": {
                "Step": "4 + 5 = 9 (left: 6 8 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 8 - 6 = 2 (left: 2 9)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 6 8"
                }
            },
            "Step 3": {
                "Step": "5 * 6 = 30 (left: 4 8 30)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 6 = 30 (left: 4 8 30) -> 30 / 4 = 7.5 (left: 8 30)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "5 20"
                }
            },
            "Step 5": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 4 * 5 = 20 (left: 5 20) -> 20 / 5 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 4 * 5 = 20 (left: 5 20) -> 20 / 5 = 4 (left: 4) -> 4 + 4 = 8",
                "Pruning": null
            }
        },
        "Input": "4 5 6 8",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            }
        ]
    },
    "944": {
        "puzzle": "6 10 12 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 6 10 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "12 13 16"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 * 13 = 156 (left: 156 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 * 13 = 156 (left: 156 16) -> 156 * 16 = 2496 (left: 2496)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 10 12 13"
                }
            },
            "Step 3": {
                "Step": "10 * 12 = 120 (left: 6 120 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 * 12 = 120 (left: 6 120 13) -> 6 * 20 = 120 (left: 120 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "4 25"
                }
            },
            "Step 5": {
                "Step": "12 + 13 = 25 (left: 6 10 25) -> 10 - 6 = 4 (left: 4 25) -> 25 / 4 = 6.25 (left: 6.25)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 + 13 = 25 (left: 6 10 25) -> 10 - 6 = 4 (left: 4 25) -> 25 / 4 = 6.25 (left: 6.25) -> 6.25 * 2 = 12.5",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 + 10 = 22 (left: 6 13 22)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 13 120"
                }
            },
            "Step 1": {
                "Step": "10 * 12 = 120 (left: 6 13 120) -> 13 - 6 = 7 (left: 7 120)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 * 12 = 120 (left: 6 13 120) -> 13 - 6 = 7 (left: 7 120) -> 7 + 120 = 127 (left: 127)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "12 13 16"
                }
            },
            "Step 3": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 16 / 12 = ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 16 / 12 =  -> 16 / 12 = 1.33",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "4 25"
                }
            },
            "Step 5": {
                "Step": "12 + 13 = 25 (left: 6 10 25) -> 10 - 6 = 4 (left: 4 25) -> 25 - 4 = 21 (left: 21)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 + 13 = 25 (left: 6 10 25) -> 10 - 6 = 4 (left: 4 25) -> 25 - 4 = 21 (left: 21) -> 21 - 2 = 19 (left: 2 19)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 10 = 16 (left: 12 13 16)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 10 12 13"
                }
            },
            "Step 1": {
                "Step": "6 * 10 = 60 (left: 12 60 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 10 = 60 (left: 12 60 13) -> 13 / 12 = 1.08 (left: 1.08)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "4 25"
                }
            },
            "Step 3": {
                "Step": "12 + 13 = 25 (left: 6 10 25) -> 10 - 6 = 4 (left: 4 25) -> 25 * 4 = 100 (left: 100)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 + 13 = 25 (left: 6 10 25) -> 10 - 6 = 4 (left: 4 25) -> 25 * 4 = 100 (left: 100) -> There are not enough numbers provided to suggest possible next steps. More numbers are needed to perform operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "4 25"
                }
            },
            "Step 5": {
                "Step": "12 + 13 = 25 (left: 6 10 25) -> 10 - 6 = 4 (left: 4 25) -> 25 / 4 = 6.25 (left: 6.25)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 + 13 = 25 (left: 6 10 25) -> 10 - 6 = 4 (left: 4 25) -> 25 / 4 = 6.25 (left: 6.25) -> 6.25 * 8 = 50 (left: 8 50)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 * 12 = 120 (left: 6 120 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "12 13 16"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 + 13 = 25 (left: 25 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 + 13 = 25 (left: 25 16) -> 25 + 16 = 41 (left: 41)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "4 25"
                }
            },
            "Step 3": {
                "Step": "12 + 13 = 25 (left: 6 10 25) -> 10 - 6 = 4 (left: 4 25) -> 25 / 4 = 6.25 (left: 6.25)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 + 13 = 25 (left: 6 10 25) -> 10 - 6 = 4 (left: 4 25) -> 25 / 4 = 6.25 (left: 6.25) -> 6.25 + 8 = 14.25 (left: 8 14.25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "4 25"
                }
            },
            "Step 5": {
                "Step": "12 + 13 = 25 (left: 6 10 25) -> 10 - 6 = 4 (left: 4 25) -> 4 + 25 = 29 (left: 29)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 + 13 = 25 (left: 6 10 25) -> 10 - 6 = 4 (left: 4 25) -> 4 + 25 = 29 (left: 29) -> None, as there is only one number provided.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 10 = 16 (left: 12 16 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 10 12 13"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 12 13 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 13 + 16 = 29 (left: 12 29)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "4 25"
                }
            },
            "Step 3": {
                "Step": "12 + 13 = 25 (left: 6 10 25) -> 10 - 6 = 4 (left: 4 25) -> 25 - 4 = 21 (left: 21)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 + 13 = 25 (left: 6 10 25) -> 10 - 6 = 4 (left: 4 25) -> 25 - 4 = 21 (left: 21) -> 21 + 2 = 23",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "4 25"
                }
            },
            "Step 5": {
                "Step": "12 + 13 = 25 (left: 6 10 25) -> 10 - 6 = 4 (left: 4 25) -> 4 + 25 = 29 (left: 29)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 + 13 = 25 (left: 6 10 25) -> 10 - 6 = 4 (left: 4 25) -> 4 + 25 = 29 (left: 29) -> 29 + 2 = 31",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "10 + 12 = 22 (left: 6 13 22)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 10 12 13"
                }
            },
            "Step 1": {
                "Step": "12 + 13 = 25 (left: 6 10 25)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 + 13 = 25 (left: 6 10 25) -> 25 - 6 = 19 (left: 10 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "4 25"
                }
            },
            "Step 3": {
                "Step": "12 + 13 = 25 (left: 6 10 25) -> 10 - 6 = 4 (left: 4 25) -> 4 * 25 = 100 (left: 100)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 + 13 = 25 (left: 6 10 25) -> 10 - 6 = 4 (left: 4 25) -> 4 * 25 = 100 (left: 100) -> 100 - 2 = 98 (left: 2)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "4 25"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "4 25"
                }
            },
            "Step 5": {
                "Step": "12 + 13 = 25 (left: 6 10 25) -> 10 - 6 = 4 (left: 4 25) -> 25 / 4 = 6.25 (left: 6.25)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 + 13 = 25 (left: 6 10 25) -> 10 - 6 = 4 (left: 4 25) -> 25 / 4 = 6.25 (left: 6.25) -> There is only one possible next step for the input 6.25:",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 7 10 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 10 12 13"
                }
            },
            "Step 1": {
                "Step": "12 + 13 = 25 (left: 6 10 25)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 + 13 = 25 (left: 6 10 25) -> 10 - 6 = 4 (left: 4 25)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "4 25"
                }
            },
            "Step 3": {
                "Step": "12 + 13 = 25 (left: 6 10 25) -> 10 - 6 = 4 (left: 4 25) -> 25 - 4 = 21 (left: 21)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 + 13 = 25 (left: 6 10 25) -> 10 - 6 = 4 (left: 4 25) -> 25 - 4 = 21 (left: 21) -> 21 * 8 = 168 (left: 168)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "4 25"
                },
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "4 25"
                }
            },
            "Step 5": {
                "Step": "12 + 13 = 25 (left: 6 10 25) -> 10 - 6 = 4 (left: 4 25) -> 4 * 25 = 100 (left: 100)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 + 13 = 25 (left: 6 10 25) -> 10 - 6 = 4 (left: 4 25) -> 4 * 25 = 100 (left: 100) -> 100 + 2 = 102 (left: 102)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "8 14.25"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "10 * 12 = 120 (left: 6 13 120)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 10 12 13"
                }
            },
            "Step 1": {
                "Step": "6 * 10 = 60 (left: 12 13 60)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 10 = 60 (left: 12 13 60) -> 13 + 60 = 73 (left: 12 73)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 10 12 13"
                }
            },
            "Step 3": {
                "Step": "12 + 13 = 25 (left: 6 10 25)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 + 13 = 25 (left: 6 10 25) -> 25 - 6 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "4 25"
                }
            },
            "Step 5": {
                "Step": "12 + 13 = 25 (left: 6 10 25) -> 10 - 6 = 4 (left: 4 25) -> 25 / 4 = 6.25 (left: 6.25)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 + 13 = 25 (left: 6 10 25) -> 10 - 6 = 4 (left: 4 25) -> 25 / 4 = 6.25 (left: 6.25) -> 6.25 * 2 = 12.5 (left: 12.5)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "8 14.25"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "10 - 6 = 4 (left: 4 12 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 10 12 13"
                }
            },
            "Step 1": {
                "Step": "12 * 13 = 156 (left: 6 10 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 * 13 = 156 (left: 6 10  -> 6 * 10 = 60 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 10 12 13"
                }
            },
            "Step 3": {
                "Step": "12 + 10 = 22 (left: 6 22 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 + 10 = 22 (left: 6 22  -> 22 / 6 = 3.6666666666666665 (left: 3.67)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "4 25"
                }
            },
            "Step 5": {
                "Step": "12 + 13 = 25 (left: 6 10 25) -> 10 - 6 = 4 (left: 4 25) -> 25 - 4 = 21 (left: 21)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 + 13 = 25 (left: 6 10 25) -> 10 - 6 = 4 (left: 4 25) -> 25 - 4 = 21 (left: 21) -> 21 - 8 = 13 (left: 13)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "21 + 2 = 23"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "10 + 12 = 22 (left: 6 13 22)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 10 12 13"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 12 13 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 * 13 = 156 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "4 25"
                }
            },
            "Step 3": {
                "Step": "12 + 13 = 25 (left: 6 10 25) -> 10 - 6 = 4 (left: 4 25) -> Input: 10 5",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 + 13 = 25 (left: 6 10 25) -> 10 - 6 = 4 (left: 4 25) -> Input: 10 5 -> 10 / 5 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "4 25"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "4 25"
                }
            },
            "Step 5": {
                "Step": "12 + 13 = 25 (left: 6 10 25) -> 10 - 6 = 4 (left: 4 25) -> 4 * 25 = 100 (left: 100)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 + 13 = 25 (left: 6 10 25) -> 10 - 6 = 4 (left: 4 25) -> 4 * 25 = 100 (left: 100) -> 100 * 2 = 200 (left: 2)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "8 14.25"
                }
            }
        },
        "Input": "6 10 12 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "945": {
        "puzzle": "1 3 9 9",
        "Agent 0": {
            "Step 0": {
                "Step": "9 + 1 = 10 (left: 10 9 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 3 9"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 - 1 = 8 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 - 1 = 8 (left: -> 9 / 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 3 9"
                }
            },
            "Step 3": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 9 + 8 = 17 (left: 8 17)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 9 + 8 = 17 (left: 8 17) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 - 3 = 6 (left: 1 6) -> 1 * 6 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 - 3 = 6 (left: 1 6) -> 1 * 6 = 6 (left: 6) -> 8 - 6 = 2 (left: 2 6)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 4 9 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 3 9"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 / 3 = 3 (left: 1 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 / 3 = 3 (left: 1 3) -> 3 - 1 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "1 3"
                }
            },
            "Step 3": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 / 3 = 3 (left: 1 3) -> 1 + 3 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 / 3 = 3 (left: 1 3) -> 1 + 3 = 4 (left: 4) -> 8 / 4 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "1 3"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "1 3"
                }
            },
            "Step 5": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 / 3 = 3 (left: 1 3) -> 1 + 3 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 / 3 = 3 (left: 1 3) -> 1 + 3 = 4 (left: 4) -> 4 + 4 = 8",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 - 1 = 8 (left: 8 3 9)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 3 9"
                }
            },
            "Step 1": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 9 + 8 = 17 (left: 8 17)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 9 + 8 = 17 (left: 8 17) -> 8 * 17 = 136 (left: 136)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "1 6"
                }
            },
            "Step 3": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 - 3 = 6 (left: 1 6) -> 1 * 6 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 - 3 = 6 (left: 1 6) -> 1 * 6 = 6 (left: 6) -> 6 + 8 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "1 3"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "1 3"
                }
            },
            "Step 5": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 / 3 = 3 (left: 1 3) -> 1 * 3 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 / 3 = 3 (left: 1 3) -> 1 * 3 = 3 (left: 3) -> There are no possible next steps with just one number.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 4 9 9)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "8 3 9"
                }
            },
            "Step 1": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 - 3 = 5 (left: 5 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 - 3 = 5 (left: 5 9) -> 5 * 9 = 45 (left: 45)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 9 9"
                }
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 4 9 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 4 9 9) -> 9 - 4 = 5 (left: 5 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 - 3 = 6 (left: 1 6) -> 6 - 1 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 - 3 = 6 (left: 1 6) -> 6 - 1 = 5 (left: 5) -> There are no possible next steps with just one number.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 1 3 9)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "8 3 9"
                }
            },
            "Step 1": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 / 3 = 2.67 (left: 2.67 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 2.67 + 9 = 11.67 (left: 11.67)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "1 6"
                }
            },
            "Step 3": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 - 3 = 6 (left: 1 6) -> 6 / 1 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 - 3 = 6 (left: 1 6) -> 6 / 1 = 6 (left: 6) -> 6 + 8 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "1 6"
                },
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 - 3 = 6 (left: 1 6) -> 1 + 6 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 - 3 = 6 (left: 1 6) -> 1 + 6 = 7 (left: 7) -> 7 / 8 = 0.875 (left: 0.875)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "There are no possible next steps for the input 0.1667."
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "3 * 9 = 27 (left: 1 9 27)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "8 3 9"
                }
            },
            "Step 1": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 + 3 = 11 (left: 11 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 + 3 = 11 (left: 11 9) -> 11 / 9 = 1.2222 (left: 1.2222)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "1 6"
                }
            },
            "Step 3": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 - 3 = 6 (left: 1 6) -> 1 + 6 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 - 3 = 6 (left: 1 6) -> 1 + 6 = 7 (left: 7) -> 7 * 8 = 56 (left: 56)",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "1 6"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 - 3 = 6 (left: 1 6) -> 1 + 6 = 7",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 - 3 = 6 (left: 1 6) -> 1 + 6 = 7 -> 1 / 6 = 0.166666",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 1 9 9)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 3 9"
                }
            },
            "Step 1": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 / 3 = 2.67 (left: 2.67 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 9 / 2.67 = 3.36 (left: 3.36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 3 9"
                }
            },
            "Step 3": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 9 * 3 = ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 9 * 3 =  -> 9 * 3 = 27",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 - 3 = 6 (left: 1 6) -> 1 + 6 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 - 3 = 6 (left: 1 6) -> 1 + 6 = 7 (left: 7) -> 7 - 8 = -1 (left: -1)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "There are no possible next steps for the input 0.1667."
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "9 - 1 = 8 (left: 8 3 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 3 9"
                }
            },
            "Step 1": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 9 - 3 = 6 (left: 8 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 9 - 3 = 6 (left: 8 6) -> 8 + 6 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 9 9"
                }
            },
            "Step 3": {
                "Step": "1 * 3 = 3 (left: 3 9 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 * 3 = 3 (left: 3 9 9) -> 9 - 3 = 6 (left: 6 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 - 3 = 6 (left: 1 6) -> 1 + 6 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 - 3 = 6 (left: 1 6) -> 1 + 6 = 7 (left: 7) -> 7 - 8 = -1 (left: -1)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "There are no possible next steps for the input 0.1667."
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "9 - 3 = 6 (left: 1 6 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 9 9"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 1 3 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 / 3 = 3 (left: 1 3)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "8 3 9"
                }
            },
            "Step 3": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 - 3 = 5 (left: 5 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 - 3 = 5 (left: 5 9) -> 5 * 9 = 45 (left: 45)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "1 3"
                }
            },
            "Step 5": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 / 3 = 3 (left: 1 3) -> 1 + 3 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 / 3 = 3 (left: 1 3) -> 1 + 3 = 4 (left: 4) -> There is only one possible next step: 4 + 4 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "There are no possible next steps for the input 0.1667."
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "9 - 3 = 6 (left: 1 6 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 9 9"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 1 3 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 - 3 = 6 (left: 1 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "1 6"
                }
            },
            "Step 3": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 - 3 = 6 (left: 1 6) -> 1 / 6 = 0.1667 (left: 0.1667)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 - 3 = 6 (left: 1 6) -> 1 / 6 = 0.1667 (left: 0.1667) -> There are no possible next steps for the input 0.1667.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 - 3 = 6 (left: 1 6) -> 6 / 1 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 - 3 = 6 (left: 1 6) -> 6 / 1 = 6 (left: 6) -> 6 - 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "There are no possible next steps for the input 0.1667."
                }
            }
        },
        "Input": "1 3 9 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "946": {
        "puzzle": "1 4 4 11",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 4 = 5 (left: 4 5 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 4 12"
                }
            },
            "Step 1": {
                "Step": "11 + 1 = 12 (left: 4 4 12) -> 12 / 4 = 3 (left: 3 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 + 1 = 12 (left: 4 4 12) -> 12 / 4 = 3 (left: 3 4) -> 3 * 4 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "11 - 1 = 10 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (11 - 1) * (4 - 4) = 24",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "24"
                }
            },
            "Step 4": {
                "Step": "11 - 1 = 10 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - (11 - 1)) = 24",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 5": {
                "Step": "11 + 1 = 12 (left: 4 4 12) -> Input: 8 3 4 8 -> 8 - 4 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8)"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 1 4 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 4 11"
                }
            },
            "Step 1": {
                "Step": "11 - 4 = 7 (left: 1 4 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 4 = 7 (left: 1 4  -> 4 / 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "11 - 1 = 10 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - (11 - 1)) = 24",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "24"
                }
            },
            "Step 4": {
                "Step": "11 - 1 = 10 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (11 - 1) * (4 - 4) = 24",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "11 - 1 = 10 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - (11 - 1)) = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 + 4 = 5 (left: 4 5 11)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 4 11"
                }
            },
            "Step 1": {
                "Step": "4 * 1 = 4 (left: 4 4 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 1 = 4 (left: 4 4  -> 4 * 4 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "11 - 1 = 10 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (11 - 1) * (4 - 4) = 24",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "24"
                }
            },
            "Step 4": {
                "Step": "11 - 1 = 10 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - (11 - 1)) = 24",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "4 8 8"
                },
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "11 - 1 = 10 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (11 - 1) - (4 - 4) = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 * 1 = 4 (left: 4 4 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 4 12"
                }
            },
            "Step 1": {
                "Step": "11 + 1 = 12 (left: 4 4 12) -> 12 - 4 = 8 (left: 4 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 + 1 = 12 (left: 4 4 12) -> 12 - 4 = 8 (left: 4 8) -> 4 + 8 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 4 11"
                }
            },
            "Step 3": {
                "Step": "4 + 1 = 5 (left: 5 4 11) -> 11 - 4 = 7 (left: 5 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 1 = 5 (left: 5 4 11) -> 11 - 4 = 7 (left: 5 7) -> 5 + 7 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "11 - 1 = 10 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (11 - 1) - (4 - 4) = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 + 4 = 5 (left: 4 5 11)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 4 11"
                }
            },
            "Step 1": {
                "Step": "4 / 1 = 4 (left: 4 4 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 1 = 4 (left: 4 4 11) -> 11 - 4 = 7 (left: 4 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 3": {
                "Step": "11 + 1 = 12 (left: 4 4 12) -> Input: 8 3 4 8 -> 8 - 4 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 + 1 = 12 (left: 4 4 12) -> Input: 8 3 4 8 -> 8 - 4 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32) -> 32 - 8 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "4 8 8"
                },
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "11 - 1 = 10 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - (11 - 1)) = 24"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "4 + 1 = 5 (left: 5 4 11)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 5 11"
                }
            },
            "Step 1": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 4 = 7 (left: 7 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 4 = 7 (left: 7 11) -> 7 * 11 = 77 (left: 77)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 4 12"
                }
            },
            "Step 3": {
                "Step": "11 + 1 = 12 (left: 4 4 12) -> 12 - 4 = 8 (left: 4 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 + 1 = 12 (left: 4 4 12) -> 12 - 4 = 8 (left: 4 8) -> 4 + 8 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 5": {
                "Step": "11 + 1 = 12 (left: 4 4 12) -> Input: 8 3 4 8 -> 8 - 4 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8)"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "11 + 1 = 12 (left: 4 4 12)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 4 10"
                }
            },
            "Step 1": {
                "Step": "11 - 1 = 10 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 1 = 10 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 4 11"
                }
            },
            "Step 3": {
                "Step": "4 + 1 = 5 (left: 5 4 11) -> 4 * 11 = 44 (left: 5 44)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 1 = 5 (left: 5 4 11) -> 4 * 11 = 44 (left: 5 44) -> 44 - 5 = 39 (left: 39)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "11 - 1 = 10 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (11 - 1 - 4) * 4 = 24"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "11 - 1 = 10 (left: 4 4 10)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 4 11"
                }
            },
            "Step 1": {
                "Step": "11 - 1 = 10 (left: 4 4 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 1 = 10 (left: 4 4 10) -> 4 * 4 = 16 (left: 16 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 4 12"
                }
            },
            "Step 3": {
                "Step": "11 + 1 = 12 (left: 4 4 12) -> 12 - 4 = 8 (left: 4 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 + 1 = 12 (left: 4 4 12) -> 12 - 4 = 8 (left: 4 8) -> 4 + 8 = 12 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 5": {
                "Step": "11 + 1 = 12 (left: 4 4 12) -> Input: 8 3 4 8 -> 8 - 4 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32)"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "11 + 1 = 12 (left: 4 4 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 4 10"
                }
            },
            "Step 1": {
                "Step": "11 - 1 = 10 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 1 = 10 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 4 11"
                }
            },
            "Step 3": {
                "Step": "1 * 4 = 4 (left: 4 11 4)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 * 4 = 4 (left: 4 11 4) -> 11 - 4 = 7 (left: 7 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "11 - 1 = 10 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - (11 - 1)) = 24"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 4 12"
                }
            },
            "Step 1": {
                "Step": "11 + 1 = 12 (left: 4 4 12) -> Input: 8 3 4 8",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 + 1 = 12 (left: 4 4 12) -> Input: 8 3 4 8 -> 8 - 4 = 4 (left: 4 8 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 3": {
                "Step": "11 + 1 = 12 (left: 4 4 12) -> Input: 8 3 4 8 -> 8 - 4 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 + 1 = 12 (left: 4 4 12) -> Input: 8 3 4 8 -> 8 - 4 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8) -> 4 * 8 = 32 (left: 8)",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "4 8 8"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 5": {
                "Step": "11 + 1 = 12 (left: 4 4 12) -> Input: 8 3 4 8 -> 8 - 4 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8)"
            }
        },
        "Input": "1 4 4 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            }
        ]
    },
    "947": {
        "puzzle": "2 3 9 10",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 9 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "5 9 10"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 9 * 5 = 45 (left: 10 45)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 9 * 5 = 45 (left: 10 45) -> 10 * 45 = 450 (left: 450)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 9 10"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 9 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 5 * 9 = 45 (left: 10 45)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> Input: 3 6 -> 3 * 6 = 18 (left: 18) -> There are no possible next steps with the number 18.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> Input: 3 6 -> 3 * 6 = 18 (left: 18) -> There are no possible next steps with the number 18. -> There are no possible next steps with the number 18.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 - 2 = 8 (left: 3 8 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 8 "
                }
            },
            "Step 1": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 3 - 8 = -5 (left: -5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 3 - 8 = -5 (left: -5) -> There are no possible next steps with the input of -5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 3": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 3 + 8 = 11 (left: 8 9 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 3 + 8 = 11 (left: 8 9 11) -> 8 + 9 = 17 (left: 17 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "24.03"
                }
            },
            "Step 5": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 2.67 * 9 = 24.03 (left: 24.03) -> 24 * 3 = 72.09 (left: 72.09)",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "18"
                }
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> Input: 3 6 -> 3 * 6 = 18 (left: 18) -> 18 / 8 = 2.25 (left: 2.25)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 - 3 = 6 (left: 2 6 ",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 9 10"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 5 + 9 = 14 (left: 10 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 5 + 9 = 14 (left: 10 14) -> 10 - 14 = -4 (left: -4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 8 "
                }
            },
            "Step 3": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 8 / 3 = 2.67 (left: 2.67)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 8 / 3 = 2.67 (left: 2.67) -> 2.67 + 8 = 10.67 (left: 10.67)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "24.03"
                }
            },
            "Step 5": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 2.67 * 9 = 24.03 (left: 24.03) -> 24.03 - 2 = 22.03",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 2.67 * 9 = 24.03 (left: 24.03) -> 24.03 - 2 = 22.03 -> 24.03 / 2 = 12.015",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 3 = 6 (left: 2 6 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 1": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 8 / 3 = 2.67 (left: 2.67 8 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 8 / 3 = 2.67 (left: 2.67 8 9) -> 9 + 2.67 = 11.67 (left: 8 11.67)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 3": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 3 * 8 = 24 (left: 24 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 3 * 8 = 24 (left: 24 9) -> 24 * 9 = 216 (left: 216)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> Input: 3 6 -> 3 * 6 = 18 (left: 18) -> There are no possible next steps with the number 18.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> Input: 3 6 -> 3 * 6 = 18 (left: 18) -> There are no possible next steps with the number 18. -> There are no possible next steps with the number 18.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "10 - 2 = 8 (left: 3 8 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 "
                }
            },
            "Step 1": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 8 / 3 = 2.66667 (left: 2.66667 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 8 / 3 = 2.66667 (left: 2.66667 8) -> 2.66667 + 8 = 10.66667 (left: 10.66667)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "5 9 10"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 9 + 5 = 14 (left: 10 14)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 9 + 5 = 14 (left: 10 14) -> 10 - 14 = -4 (left: -4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "24.03"
                }
            },
            "Step 5": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 2.67 * 9 = 24.03 (left: 24.03) -> There are no possible next steps for the input 24.03 as it is a single number and cannot be combined with other numbers using basic arithmetic operations.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 2.67 * 9 = 24.03 (left: 24.03) -> There are no possible next steps for the input 24.03 as it is a single number and cannot be combined with other numbers using basic arithmetic operations. -> There are no possible next steps for the input 24.03 as it is a single number and cannot be combined with other numbers using basic arithmetic operations.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "9 + 2 = 11 (left: 3 11 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 9 10"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 5 9 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> Input: 3 6 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 3": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 8 - 3 = 5 (left: 5 8 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 8 - 3 = 5 (left: 5 8 9) -> 9 - 5 = 4 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> Input: 3 6 -> 3 * 6 = 18 (left: 18) -> 18 + 2 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "24.03"
                }
            },
            "Step 6": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 2.67 * 9 = 24.03 (left: 24.03) -> 24.03 / 2 = 12.015",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "9 + 2 = 11 (left: 3 11 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 9 10"
                }
            },
            "Step 1": {
                "Step": "2 * 3 = 6 (left: 6 9 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 3 = 6 (left: 6 9 10) -> 9 + 10 = 19 (left: 6 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 3": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 8 / 3 = 2.67 (left: 2.67 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 2.67 * 9 = 24.03 (left: 24.03)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "24.03"
                }
            },
            "Step 5": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 2.67 * 9 = 24.03 (left: 24.03) -> 24.03 - 2 = 22.03",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 2.67 * 9 = 24.03 (left: 24.03) -> 24.03 - 2 = 22.03 -> 2 * 24.03 = 48.06",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "10 - 2 = 8 (left: 3 9 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "5 9 10"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> Input: 3 6",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> Input: 3 6 -> 3 * 6 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 3": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 3 + 8 = 11 (left: 11 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 3 + 8 = 11 (left: 11 9) -> 11 - 9 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "24.03"
                }
            },
            "Step 5": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 2.67 * 9 = 24.03 (left: 24.03) -> 24.03 / 2 = 12.015",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 2.67 * 9 = 24.03 (left: 24.03) -> 24.03 / 2 = 12.015 -> 24.03 + 2 = 26.03",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "10 - 2 = 8 (left: 3 8 ",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 9 10"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 5 9 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 10 - 5 = 5 (left: 5 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 8 "
                }
            },
            "Step 3": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 3 * 8 = 24 (left: 8 24)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 3 * 8 = 24 (left: 8 24) -> 24",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "24.03"
                }
            },
            "Step 5": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 2.67 * 9 = 24.03 (left: 24.03) -> 24 + 0.03 = 24.03",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 2.67 * 9 = 24.03 (left: 24.03) -> 24 + 0.03 = 24.03 -> 24 - 0.03 = 23.97",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 9 10)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 9 10"
                }
            },
            "Step 1": {
                "Step": "10 / 2 = 5 (left: 3 5 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 2 = 5 (left: 3 5  -> 3 * 5 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 8 "
                }
            },
            "Step 3": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 7 / 4 = 1.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 7 / 4 = 1. -> 7 - 4 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> Input: 3 6 -> 3 * 6 = 18 (left: 18) -> No possible next steps, the input has only one number.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> Input: 3 6 -> 3 * 6 = 18 (left: 18) -> No possible next steps, the input has only one number. -> Input: 5",
                "Pruning": null
            }
        },
        "Input": "2 3 9 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "948": {
        "puzzle": "1 2 3 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 3 = 10 (left: 1 2 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 3 13"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 1 5 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 1 5 13) -> 13 - 5 = 8 (left: 1 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 3 13"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 - 3 = 10 (left: 3 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 - 3 = 10 (left: 3 10) -> 3 + 10 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1 8"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 1 5 13) -> 13 - 5 = 8 (left: 1 8) -> 8 / 1 = 8 (left: 8 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 1 5 13) -> 13 - 5 = 8 (left: 1 8) -> 8 / 1 = 8 (left: 8 8) -> 8 / 8 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "5 8"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 + 13 = 16 (left: 1 2 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 3 13"
                }
            },
            "Step 1": {
                "Step": "1 * 2 = 2 (left: 2 3 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 * 2 = 2 (left: 2 3 13) -> 13 - 3 = 10 (left: 2 10)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 19"
                }
            },
            "Step 3": {
                "Step": "2 * 3 = 6 (left: 1 6 13) -> 6 + 13 = 19 (left: 1 19) -> 19 / 1 = 19 (left: 19)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 3 = 6 (left: 1 6 13) -> 6 + 13 = 19 (left: 1 19) -> 19 / 1 = 19 (left: 19) -> 19 / 2 = 9.5 (left: 9.5)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "1 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1 8"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 1 5 13) -> 13 - 5 = 8 (left: 1 8) -> 8 - 1 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 1 5 13) -> 13 - 5 = 8 (left: 1 8) -> 8 - 1 = 7 (left: 7) -> 7 * 8 = 56 (left: 8 56)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 3 13)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 3 13"
                }
            },
            "Step 1": {
                "Step": "13 - 3 = 10 (left: 1 2 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 3 = 10 (left: 1 2  -> 1 + 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "1 6 13"
                }
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 6 * 13 = 78 (left: 1 78)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 6 * 13 = 78 (left: 1 78) -> 1 * 78 = 78 (left: 78)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "1 7"
                }
            },
            "Step 5": {
                "Step": "2 * 3 = 6 (left: 1 6 13) -> 13 - 6 = 7 (left: 1 7) -> 1 * 7 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 3 = 6 (left: 1 6 13) -> 13 - 6 = 7 (left: 1 7) -> 1 * 7 = 7 (left: 7) -> 7 - 2 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "5 8"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 2 3 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 3 13"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 3 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 3 * 13 = 39 (left: 3 39)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 3 13"
                }
            },
            "Step 3": {
                "Step": "13 - 2 = 11 (left: 1 3 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 2 = 11 (left: 1 3  -> 3 / 1 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "1 14"
                }
            },
            "Step 5": {
                "Step": "13 - 2 = 11 (left: 1 3 11) -> 3 + 11 = 14 (left: 1 14) -> 14 / 1 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 2 = 11 (left: 1 3 11) -> 3 + 11 = 14 (left: 1 14) -> 14 / 1 = 14 (left: 14) -> There are no possible next steps for the number 14 as it is the final result.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 * 2 = 6 (left: 1 6 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 3 13"
                }
            },
            "Step 1": {
                "Step": "2 * 3 = 6 (left: 1 6 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 3 = 6 (left: 1 6 13) -> 6 + 13 = 19 (left: 1 19)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "1 7"
                }
            },
            "Step 3": {
                "Step": "2 * 3 = 6 (left: 1 6 13) -> 13 - 6 = 7 (left: 1 7) -> 1 + 7 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 3 = 6 (left: 1 6 13) -> 13 - 6 = 7 (left: 1 7) -> 1 + 7 = 8 (left: 8) -> There is only 1 number, so there are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "1 8"
                }
            },
            "Step 5": {
                "Step": "13 - 3 = 10 (left: 1 2 10) -> 10 - 2 = 8 (left: 1 8) -> 1 + 8 = 9 (left: 8 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 3 = 10 (left: 1 2 10) -> 10 - 2 = 8 (left: 1 8) -> 1 + 8 = 9 (left: 8 9) -> 8 + 9 = 17 (left: 17)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "5 8"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 3 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 3 13"
                }
            },
            "Step 1": {
                "Step": "13 - 2 = 11 (left: 1 3 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 2 = 11 (left: 1 3 11) -> 11 / 3 = 3.6666666666666665 (left: 1 3.6666666666666665)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 8"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 1 5 13) -> 13 - 5 = 8 (left: 1 8) -> 1 + 8 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 1 5 13) -> 13 - 5 = 8 (left: 1 8) -> 1 + 8 = 9 (left: 9) -> 9 / 2 = 4.5 (left: 4.5)",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "1 14"
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "1 8"
                }
            },
            "Step 5": {
                "Step": "13 - 3 = 10 (left: 1 2 10) -> 10 - 2 = 8 (left: 1 8) -> 8 * 1 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 3 = 10 (left: 1 2 10) -> 10 - 2 = 8 (left: 1 8) -> 8 * 1 = 8 (left: 8) -> 8 + 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "5 8"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 3 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 3 13"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 3 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 3 * 3 = 9 (left: 9 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 8"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 1 5 13) -> 13 - 5 = 8 (left: 1 8) -> 8 - 1 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 1 5 13) -> 13 - 5 = 8 (left: 1 8) -> 8 - 1 = 7 (left: 7) -> 7 * 8 = 56 (left: 56)",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "1 14"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 8"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 1 5 13) -> 13 - 5 = 8 (left: 1 8) -> 1 + 8 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 1 5 13) -> 13 - 5 = 8 (left: 1 8) -> 1 + 8 = 9 (left: 9) -> There are no possible next steps with only one number provided. It requires at least two numbers to perform operations.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "13 - 2 = 11 (left: 1 3 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 3 13"
                }
            },
            "Step 1": {
                "Step": "2 * 3 = 6 (left: 1 6 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 3 = 6 (left: 1 6 13) -> 13 - 6 = 7 (left: 1 7)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 3 13"
                }
            },
            "Step 3": {
                "Step": "3 + 1 = 4 (left: 2 3 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 + 1 = 4 (left: 2 3 13) -> 13 / 3 = 4.33 (left: 2 4.33)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 19"
                }
            },
            "Step 5": {
                "Step": "2 * 3 = 6 (left: 1 6 13) -> 6 + 13 = 19 (left: 1 19) -> 19 - 1 = 18 (left: 18)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 3 = 6 (left: 1 6 13) -> 6 + 13 = 19 (left: 1 19) -> 19 - 1 = 18 (left: 18) -> 18 / 2 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "5 8"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "3 * 2 = 6 (left: 1 6 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 3 13"
                }
            },
            "Step 1": {
                "Step": "13 - 2 = 11 (left: 1 3 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 2 = 11 (left: 1 3 11) -> 3 + 11 = 14 (left: 1 14)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 8"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 1 5 13) -> 13 - 5 = 8 (left: 1 8) -> 8 - 1 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 1 5 13) -> 13 - 5 = 8 (left: 1 8) -> 8 - 1 = 7 (left: 7) -> 7 - 2 = 5 (left: 5 8)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 8"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 1 5 13) -> 13 - 5 = 8 (left: 1 8) -> 8 / 1 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 1 5 13) -> 13 - 5 = 8 (left: 1 8) -> 8 / 1 = 8 (left: 8) -> 8 + 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "5 8"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "3 * 2 = 6 (left: 1 6 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "1 6 13"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 6 * 1 = 6 (left: 6 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 6 * 1 = 6 (left: 6 13) -> 13 / 6 = 2.1667 (left: 2.1667)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 3 13"
                }
            },
            "Step 3": {
                "Step": "13 - 3 = 10 (left: 1 2 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 3 = 10 (left: 1 2 10) -> 10 - 2 = 8 (left: 1 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "1 14"
                }
            },
            "Step 5": {
                "Step": "13 - 2 = 11 (left: 1 3 11) -> 3 + 11 = 14 (left: 1 14) -> 14 - 1 = 13 (left: 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 2 = 11 (left: 1 3 11) -> 3 + 11 = 14 (left: 1 14) -> 14 - 1 = 13 (left: 13) -> 13 / 2 = 6.5",
                "Pruning": null
            }
        },
        "Input": "1 2 3 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "949": {
        "puzzle": "1 6 6 6",
        "Agent 0": {
            "Step 0": {
                "Step": "6 - 1 = 5 (left: 5 6 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 6 6 6"
                }
            },
            "Step 1": {
                "Step": "6 * 1 = 6 (left: 6 6 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 6"
                }
            },
            "Step 3": {
                "Step": "1 * 6 = 6 (left: 6 6 6) -> 6 / 6 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 * 6 = 6 (left: 6 6 6) -> 6 / 6 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6) -> 6 + 8 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "36"
                },
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "0 6"
                }
            },
            "Step 5": {
                "Step": "6 * 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6) -> 6 + 0 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6) -> 6 + 0 = 6 (left: 6) -> 6 * 8 = 48 (left: 8 48)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 / 1 = 6 (left: 6 6 6)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 6 6 6"
                }
            },
            "Step 1": {
                "Step": "1 * 6 = 6 (left: 6 6 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 * 6 = 6 (left: 6 6 6) -> 6 / 6 = 1 (left: 1 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 6 6"
                }
            },
            "Step 3": {
                "Step": "1 * 6 = 6 (left: 6 6 6) -> 6 * 6 = 36 (left: 6 36)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 * 6 = 6 (left: 6 6 6) -> 6 * 6 = 36 (left: 6 36) -> 36 / 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "1 * 6 = 6 (left: 6 6 6) -> 6 / 6 = 1 (left: 1 6) -> 6 - 1 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 * 6 = 6 (left: 6 6 6) -> 6 / 6 = 1 (left: 1 6) -> 6 - 1 = 5 (left: 5) -> There are no possible next steps with just the number 5.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 + 6 = 7 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 6 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 1 = 5 (left: 1 5 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 1 = 5 (left: 1 5  -> 1 + 5 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "1 6"
                }
            },
            "Step 3": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 / 6 = 1 (left: 1 6) -> 6 / 1 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 / 6 = 1 (left: 1 6) -> 6 / 1 = 6 (left: 6) -> 6 / 2 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "36"
                },
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 + 6 = 12 (left: 6 12) -> 6 + 12 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 + 6 = 12 (left: 6 12) -> 6 + 12 = 18 (left: 18) -> There are no possible next steps with the input 18. -> There are no possible next steps with the input 18.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "1 * 6 = 6 (left: 6 6 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 6 6 6"
                }
            },
            "Step 1": {
                "Step": "6 / 1 = 6 (left: 6 6 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 + 6 = 12 (left: 6 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "6 6 6"
                }
            },
            "Step 3": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 + 6 = 12 (left: 6 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 + 6 = 12 (left: 6 12) -> 6 + 12 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 / 6 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 / 6 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7) -> 7 * 8 = 56 (left: 8 56)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 1 = 7 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 1": {
                "Step": "6 + 1 = 7 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 1 = 7 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 7 - 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 3": {
                "Step": "1 + 6 = 7 (left: 6 6 7) -> 6 * 6 = 36 (left: 7 36)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 6 = 7 (left: 6 6 7) -> 6 * 6 = 36 (left: 7 36) -> Input: 3 9 27",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 / 6 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 / 6 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6) -> 6 + 8 = 14 (left: 8 14)",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "6 / 1 = 6 (left: 6 6 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 6 6 6"
                }
            },
            "Step 1": {
                "Step": "6 / 1 = 6 (left: 6 6 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 1 = 6 (left: 6 6  -> 6 * 6 = 36 (left: 36) ",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "6 / 1 = 6 (left: 6 6  -> 6 * 6 = 36 (left: 36)  -> None, since there is only one number left.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 / 1 = 6 (left: 6 6  -> 6 * 6 = 36 (left: 36)  -> None, since there is only one number left. -> 8 / 8 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "1 6"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "1 * 6 = 6 (left: 6 6 6) -> 6 / 6 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 * 6 = 6 (left: 6 6 6) -> 6 / 6 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6) -> 6 + 8 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "1.33 8"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 / 1 = 6 (left: 6 6 6)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 6 6 6"
                }
            },
            "Step 1": {
                "Step": "6 / 1 = 6 (left: 6 6 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 / 6 = 1 (left: 1 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "1 6"
                }
            },
            "Step 3": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 / 6 = 1 (left: 1 6) -> 6 - 1 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 / 6 = 1 (left: 1 6) -> 6 - 1 = 5 (left: 5) -> There are no possible next steps with just the number 5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "1 * 6 = 6 (left: 6 6 6) -> 6 / 6 = 1 (left: 1 6) -> 6 - 1 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 * 6 = 6 (left: 6 6 6) -> 6 / 6 = 1 (left: 1 6) -> 6 - 1 = 5 (left: 5) -> There are no possible next steps with just one number provided.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "1 + 6 = 7 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 6 6 6"
                }
            },
            "Step 1": {
                "Step": "1 * 6 = 6 (left: 6 6 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 * 6 = 6 (left: 6 6 6) -> 6 + 6 = 12 (left: 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "1 6"
                }
            },
            "Step 3": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 / 6 = 1 (left: 1 6) -> 6 - 1 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 / 6 = 1 (left: 1 6) -> 6 - 1 = 5 (left: 5) -> There is only one possible next step:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "6 / 1 = 6 (left: 6 6  -> 6 * 6 = 36 (left: 36)  -> 36 / 2 = 18",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 1 = 6 (left: 6 6  -> 6 * 6 = 36 (left: 36)  -> 36 / 2 = 18 -> 2 * 18 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "1.33 8"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "6 - 1 = 5 (left: 6 5 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "6 6 6"
                }
            },
            "Step 1": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> Possible next steps:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> Possible next steps: -> There are no possible next steps as the input has no numbers.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "0 6"
                }
            },
            "Step 3": {
                "Step": "6 * 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6) -> 0 + 6 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 * 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6) -> 0 + 6 = 6 (left: 6) -> 8 / 6 = 1.33 (left: 1.33 8)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "1 * 6 = 6 (left: 6 6 6) -> 6 / 6 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 * 6 = 6 (left: 6 6 6) -> 6 / 6 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6) -> 6 + 2 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "1.33 8"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "6 - 1 = 5 (left: 6 5 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 1": {
                "Step": "1 + 6 = 7 (left: 6 6 7) -> Input: 1 42 13",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 6 = 7 (left: 6 6 7) -> Input: 1 42 13 -> 42 / 1 = 42 (left: 42 13)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 3": {
                "Step": "1 + 6 = 7 (left: 6 6 7) -> Input: 0 1 7",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 6 = 7 (left: 6 6 7) -> Input: 0 1 7 -> Possible",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "6 / 1 = 6 (left: 6 6  -> 6 * 6 = 36 (left: 36)  -> 36 / 2 = 18",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 1 = 6 (left: 6 6  -> 6 * 6 = 36 (left: 36)  -> 36 / 2 = 18 -> 18 - 8 = 10 (left: 8 10)",
                "Pruning": null
            }
        },
        "Input": "1 6 6 6",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "950": {
        "puzzle": "1 2 2 9",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 2 3 9)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 4 9"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 5 - 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 9"
                }
            },
            "Step 3": {
                "Step": "9 - 2 = 7 (left: 1 2 7) -> 2 + 7 = 9 (left: 1 9) -> 1 + 9 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 2 = 7 (left: 1 2 7) -> 2 + 7 = 9 (left: 1 9) -> 1 + 9 = 10 (left: 10) -> 10 + 8 = 18 (left: 8)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "1 9"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1 9"
                }
            },
            "Step 5": {
                "Step": "9 - 2 = 7 (left: 1 2 7) -> 2 + 7 = 9 (left: 1 9) -> 1 * 9 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 2 = 7 (left: 1 2 7) -> 2 + 7 = 9 (left: 1 9) -> 1 * 9 = 9 (left: 9) -> There are no possible next steps with the given input of 9.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 1 4 9)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 2 9"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 2 3 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 2 3 9) -> 3 * 9 = 27 (left: 2 27)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 4 9"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 + 4 = 5 (left: 5 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 + 4 = 5 (left: 5 9) -> 9 - 5 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "8 32"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 1 = 8 (left: 4 8) -> 4 * 8 = 32 (left: 8 32) -> 32 / 8 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "36"
                }
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 4 * 1 = 4 (left: 4 9) -> 4 * 9 = 36 (left: 36) -> There are no possible next steps with the input 36.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 2 3 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 2 9"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 1 4 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 4 / 1 = 4 (left: 4 9)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 4 9"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 1 = 8 (left: 4 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 1 = 8 (left: 4 8) -> 4 * 8 = 32 (left: 8 32)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1 9"
                }
            },
            "Step 5": {
                "Step": "9 - 2 = 7 (left: 1 2 7) -> 2 + 7 = 9 (left: 1 9) -> 1 + 9 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 2 = 7 (left: 1 2 7) -> 2 + 7 = 9 (left: 1 9) -> 1 + 9 = 10 (left: 10) -> None, as there is only one number left.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 2 = 7 (left: 1 2 7)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 4 9"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 + 4 = 5 (left: 5 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 + 4 = 5 (left: 5 9) -> 3 + 6 = 9 (left: 9 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 2 9"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 1 4 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 / 1 = 9 (left:",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 9"
                }
            },
            "Step 5": {
                "Step": "9 - 2 = 7 (left: 1 2 7) -> 2 + 7 = 9 (left: 1 9) -> 9 / 1 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 2 = 7 (left: 1 2 7) -> 2 + 7 = 9 (left: 1 9) -> 9 / 1 = 9 (left: 9) -> There is only one possible next step: 9.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 2 3 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 2 9"
                }
            },
            "Step 1": {
                "Step": "9 - 2 = 7 (left: 1 2 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 2 = 7 (left: 1 2 7) -> 2 + 7 = 9 (left: 1 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 9"
                }
            },
            "Step 3": {
                "Step": "9 - 2 = 7 (left: 1 2 7) -> 2 + 7 = 9 (left: 1 9) -> 9 / 1 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 2 = 7 (left: 1 2 7) -> 2 + 7 = 9 (left: 1 9) -> 9 / 1 = 9 (left: 9) -> 8 + 9 = 17 (left: 9)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "1 9"
                },
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "1 9"
                }
            },
            "Step 5": {
                "Step": "9 - 2 = 7 (left: 1 2 7) -> 2 + 7 = 9 (left: 1 9) -> 1 * 9 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 2 = 7 (left: 1 2 7) -> 2 + 7 = 9 (left: 1 9) -> 1 * 9 = 9 (left: 9) -> There are no possible next steps with the input of 9.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "9 - 1 = 8 (left: 2 2 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 2 9"
                }
            },
            "Step 1": {
                "Step": "9 / 2 = 4.5 (left: 1 4.5 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 2 = 4.5 (left: 1 4.5 9) -> 4.5 * 9 = 40.5 (left: 1 40.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 2 9"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 2 3 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 2 3 9) -> 3 + 9 = 12 (left:",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1 9"
                }
            },
            "Step 5": {
                "Step": "9 - 2 = 7 (left: 1 2 7) -> 2 + 7 = 9 (left: 1 9) -> 9 / 1 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 2 = 7 (left: 1 2 7) -> 2 + 7 = 9 (left: 1 9) -> 9 / 1 = 9 (left: 9) -> 9 / 8 = 1.125 (left: 1.125)",
                "Pruning": "NA"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 1 4 9)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 2 9"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 1 4 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> Input: 3 6 12",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 4 9"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 4 * 1 = 4 (left: 4 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 4 * 1 = 4 (left: 4 9) -> 4 * 9 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1 9"
                }
            },
            "Step 5": {
                "Step": "9 - 2 = 7 (left: 1 2 7) -> 2 + 7 = 9 (left: 1 9) -> 1 * 9 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 2 = 7 (left: 1 2 7) -> 2 + 7 = 9 (left: 1 9) -> 1 * 9 = 9 (left: 9) -> 9 / 9 = 1 (left: 1)",
                "Pruning": "NA"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 1 4 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 4 9"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 * 4 = 4 (left: 4 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 * 4 = 4 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 4 9"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 * 4 = 4 (left: 4 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 * 4 = 4 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 9"
                }
            },
            "Step 5": {
                "Step": "9 - 2 = 7 (left: 1 2 7) -> 2 + 7 = 9 (left: 1 9) -> 9 - 1 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 2 = 7 (left: 1 2 7) -> 2 + 7 = 9 (left: 1 9) -> 9 - 1 = 8 (left: 8) -> No possible next steps, the input is already a single number.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 9)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 2 9"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 1 4 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 1 4 9) -> 4 + 9 = 13 (left: 1 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 9"
                }
            },
            "Step 3": {
                "Step": "9 - 2 = 7 (left: 1 2 7) -> 2 + 7 = 9 (left: 1 9) -> 9 / 1 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 2 = 7 (left: 1 2 7) -> 2 + 7 = 9 (left: 1 9) -> 9 / 1 = 9 (left: 9) -> 9 * 8 = 72 (left: 72)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "1 9"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1 9"
                }
            },
            "Step 5": {
                "Step": "9 - 2 = 7 (left: 1 2 7) -> 2 + 7 = 9 (left: 1 9) -> 9 - 1 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 2 = 7 (left: 1 2 7) -> 2 + 7 = 9 (left: 1 9) -> 9 - 1 = 8 (left: 8) -> 8 * 8 = 64 (left: 64)",
                "Pruning": "NA"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "9 - 1 = 8 (left: 2 2 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 2 9"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 1 4 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> Input: 3 3 6 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 4 9"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 4 + 9 = 13 (left: 1 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 4 + 9 = 13 (left: 1 13) -> 1 + 13 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1 9"
                }
            },
            "Step 5": {
                "Step": "9 - 2 = 7 (left: 1 2 7) -> 2 + 7 = 9 (left: 1 9) -> 1 * 9 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 2 = 7 (left: 1 2 7) -> 2 + 7 = 9 (left: 1 9) -> 1 * 9 = 9 (left: 9) -> There are no possible next steps with just the number 9.",
                "Pruning": null
            }
        },
        "Input": "1 2 2 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            }
        ]
    },
    "951": {
        "puzzle": "1 3 6 11",
        "Agent 0": {
            "Step 0": {
                "Step": "1 * 3 = 3 (left: 3 6 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11) -> 10 + 11 = 21 (left: 21)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 / 4 = ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 / 4 =  -> 11 / 4 = 2.75",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 10"
                }
            },
            "Step 5": {
                "Step": "6 - 3 = 3 (left: 1 3 11) -> 11 - 1 = 10 (left: 3 10) -> 10 - 3 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 3 = 3 (left: 1 3 11) -> 11 - 1 = 10 (left: 3 10) -> 10 - 3 = 7 (left: 7) -> 7 * 8 = 56 (left: 8 56)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "1 * 6 = 6 (left: 3 6 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 6 11"
                }
            },
            "Step 1": {
                "Step": "6 - 3 = 3 (left: 1 3 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 3 = 3 (left: 1 3 11) -> 11 - 1 = 10 (left: 3 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 6 11"
                }
            },
            "Step 3": {
                "Step": "6 * 1 = 6 (left: 6 6 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 * 1 = 6 (left: 6 6  -> 6 - 6 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 10"
                }
            },
            "Step 5": {
                "Step": "6 - 3 = 3 (left: 1 3 11) -> 11 - 1 = 10 (left: 3 10) -> 10 / 3 = 3.33 (left: 3.33)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 3 = 3 (left: 1 3 11) -> 11 - 1 = 10 (left: 3 10) -> 10 / 3 = 3.33 (left: 3.33) -> There are no further possible steps with the input 3.33.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 * 6 = 18 (left: 1 18 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 6 11"
                }
            },
            "Step 1": {
                "Step": "11 - 6 = 5 (left: 1 3 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 6 = 5 (left: 1 3 5) -> 5 - 3 = 2 (left: 1 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 4 = 7 (left: 4 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 4 = 7 (left: 4 7) -> 7 - 4 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 10"
                }
            },
            "Step 5": {
                "Step": "6 - 3 = 3 (left: 1 3 11) -> 11 - 1 = 10 (left: 3 10) -> 3 * 10 = 30 (left: 30)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 3 = 3 (left: 1 3 11) -> 11 - 1 = 10 (left: 3 10) -> 3 * 10 = 30 (left: 30) -> 30 + 2 = 32",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 4 6 11)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 4 = 7 (left: 4 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 4 = 7 (left: 4 7) -> 4 + 7 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 6 11"
                }
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 4 6 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 6 - 4 = 2 (left: 2 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 10"
                }
            },
            "Step 5": {
                "Step": "6 - 3 = 3 (left: 1 3 11) -> 11 - 1 = 10 (left: 3 10) -> 3 + 10 = 13 (left: 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 3 = 3 (left: 1 3 11) -> 11 - 1 = 10 (left: 3 10) -> 3 + 10 = 13 (left: 13) -> There are no possible next steps for the number 13.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "11 - 3 = 8 (left: 1 6 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 6 / 4 = 1.5 (left: 1.5 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 6 / 4 = 1.5 (left: 1.5 11) -> 11 / 1.5 = 7.33 (left: 7.33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 10"
                }
            },
            "Step 5": {
                "Step": "6 - 3 = 3 (left: 1 3 11) -> 11 - 1 = 10 (left: 3 10) -> 10 - 3 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 3 = 3 (left: 1 3 11) -> 11 - 1 = 10 (left: 3 10) -> 10 - 3 = 7 (left: 7) -> 7 * 8 = 56 (left: 56)",
                "Pruning": "NA"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "11 - 6 = 5 (left: 1 3 5)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 6 11"
                }
            },
            "Step 1": {
                "Step": "1 * 6 = 6 (left: 3 6 11) -> 11 - 6 = 5 (left: 3 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 * 6 = 6 (left: 3 6 11) -> 11 - 6 = 5 (left: 3 5) -> 3 + 5 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 6 11"
                }
            },
            "Step 3": {
                "Step": "6 - 3 = 3 (left: 1 3 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 - 3 = 3 (left: 1 3 11) -> ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 10"
                }
            },
            "Step 5": {
                "Step": "6 - 3 = 3 (left: 1 3 11) -> 11 - 1 = 10 (left: 3 10) -> 3 * 10 = 30 (left: 30)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 3 = 3 (left: 1 3 11) -> 11 - 1 = 10 (left: 3 10) -> 3 * 10 = 30 (left: 30) -> There are no possible next steps with the input of 30.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 4 6 11)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 6 11"
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 1 6 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 1 6  -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1 3 5"
                }
            },
            "Step 3": {
                "Step": "11 - 6 = 5 (left: 1 3 5) -> 3 + 5 = 8 (left: 1 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 6 = 5 (left: 1 3 5) -> 3 + 5 = 8 (left: 1 8) -> 1 + 8 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 10"
                }
            },
            "Step 5": {
                "Step": "6 - 3 = 3 (left: 1 3 11) -> 11 - 1 = 10 (left: 3 10) -> 3 * 10 = 30 (left: 30)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 3 = 3 (left: 1 3 11) -> 11 - 1 = 10 (left: 3 10) -> 3 * 10 = 30 (left: 30) -> 30 - 3 = 27 (left: 27)",
                "Pruning": "NA"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 4 6 11)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 + 5 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 5 - 4 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "10"
                }
            },
            "Step 5": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 6 / 4 = 1.5 ( -> 6 + 4 = 10 (left: 10) -> 10 + 10 = 20",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 6 / 4 = 1.5 ( -> 6 + 4 = 10 (left: 10) -> 10 + 10 = 20 -> 20 / 10 = 2 (left: 10 10 ",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "11 - 1 = 10 (left: 3 6 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 4 = 7 (left: 4 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 4 = 7 (left: 4 7) -> 4 * 7 = 28 (left: 7 28)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 6 / 4 = 1.5 (",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 6 / 4 = 1.5 ( -> 6 + 4 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 10"
                }
            },
            "Step 5": {
                "Step": "6 - 3 = 3 (left: 1 3 11) -> 11 - 1 = 10 (left: 3 10) -> 10 / 3 = 3.33 (left: 3.33)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 3 = 3 (left: 1 3 11) -> 11 - 1 = 10 (left: 3 10) -> 10 / 3 = 3.33 (left: 3.33) -> 3.33 / 2 = 1.665 (left: 1.665 2 3.33)",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "3 * 1 = 3 (left: 3 6 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 - 5 = -1 (left: -1)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11) -> 10 + 11 = 21",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 10"
                }
            },
            "Step 5": {
                "Step": "6 - 3 = 3 (left: 1 3 11) -> 11 - 1 = 10 (left: 3 10) -> 3 * 10 = 30 (left: 30)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 3 = 3 (left: 1 3 11) -> 11 - 1 = 10 (left: 3 10) -> 3 * 10 = 30 (left: 30) -> 30 - 2 = 28 (left: 2)",
                "Pruning": "NA"
            }
        },
        "Input": "1 3 6 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            }
        ]
    },
    "952": {
        "puzzle": "5 10 12 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 + 5 = 18 (left: 10 12 18)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "10 13 17"
                }
            },
            "Step 1": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 / 10 = 1.7 (left: 1.7 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 / 10 = 1.7 (left: 1.7 13) -> 13 + 1.7 = 14.7 (left: 14.7",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 3": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 / 3 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 / 3 = 4 (left: 4) -> 4 + 8 = 12 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "4.5 9"
                }
            },
            "Step 5": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 - 3 = 9 (left: 9) -> 9 / 2 = 4.5 (left: 4.5 9) -> 4.5 + 9 = 13.5 (left: 9 13.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 - 3 = 9 (left: 9) -> 9 / 2 = 4.5 (left: 4.5 9) -> 4.5 + 9 = 13.5 (left: 9 13.5) -> 9 / 1.5 = 6 (left: 6)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 * 10 = 50 (left: 12 13 50)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 1": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 - 3 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 - 3 = 9 (left: 9) -> 9 + 8 = 17 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 3": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 - 3 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 - 3 = 9 (left: 9) -> 9 / 2 = 4.5 (left: 4.5 9)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "4.5 9"
                }
            },
            "Step 5": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 - 3 = 9 (left: 9) -> 9 / 2 = 4.5 (left: 4.5 9) -> 4.5 + 9 = 13.5 (left: 9 13.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 - 3 = 9 (left: 9) -> 9 / 2 = 4.5 (left: 4.5 9) -> 4.5 + 9 = 13.5 (left: 9 13.5) -> 13.5 / 9 = 1.5 (left: 9 1.5)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 + 5 = 17 (left: 10 13 17)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "10 13 17"
                }
            },
            "Step 1": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 13 + 17 = 30 (left: 10 30)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 13 + 17 = 30 (left: 10 30) -> 5 / 5 = 1",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 3": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 / 3 = 4 (left: 4 12) -> Input: 16 3 48 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "4.5 9"
                }
            },
            "Step 5": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 - 3 = 9 (left: 9) -> 9 / 2 = 4.5 (left: 4.5 9) -> Input: 3 6 9",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 - 3 = 9 (left: 9) -> 9 / 2 = 4.5 (left: 4.5 9) -> Input: 3 6 9 -> 6 * 3 = 18 (left: 18 9)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 - 5 = 5 (left: 5 12 13)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 1": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 / 3 = 4 (left: 4 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 / 3 = 4 (left: 4 4) -> 4 / 4 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 10 12 13"
                }
            },
            "Step 3": {
                "Step": "13 - 10 = 3 (left: 5 12 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 10 = 3 (left: 5 12  -> Input: 3 9 9 27",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "4.5 9"
                }
            },
            "Step 5": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 - 3 = 9 (left: 9) -> 9 / 2 = 4.5 (left: 4.5 9) -> 9 / 4.5 = 2 (left: 2 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 - 3 = 9 (left: 9) -> 9 / 2 = 4.5 (left: 4.5 9) -> 9 / 4.5 = 2 (left: 2 9) -> 2 + 9 = 11 (left: 11)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 + 5 = 17 (left: 10 13 17)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 1": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 / 3 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 / 3 = 4 (left: 4) -> 4 + 4 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 3": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 10 / 5 = 2 (left: 2 15)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 10 / 5 = 2 (left: 2 15) -> 2 * 15 = 30 (left: 30)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "4.5 9"
                }
            },
            "Step 5": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 - 3 = 9 (left: 9) -> 9 / 2 = 4.5 (left: 4.5 9) -> 4.5 + 9 = 13.5 (left: 13.5)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "4.5 9"
                }
            },
            "Step 6": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 - 3 = 9 (left: 9) -> 9 / 2 = 4.5 (left: 4.5 9) -> 4.5 + 9 = 13.5 (left: 9 13.5)",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "13 - 10 = 3 (left: 3 12 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 1": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 - 12 = 0 (left: 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 - 12 = 0 (left: 3) -> There are no possible next steps with only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "10 13 17"
                }
            },
            "Step 3": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 10 * 13 = 130 (left: 17 130)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 10 * 13 = 130 (left: 17 130) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "4.5 9"
                }
            },
            "Step 5": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 - 3 = 9 (left: 9) -> 9 / 2 = 4.5 (left: 4.5 9) -> 9 - 4.5 = 4.5 (left: 4.5 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 - 3 = 9 (left: 9) -> 9 / 2 = 4.5 (left: 4.5 9) -> 9 - 4.5 = 4.5 (left: 4.5 9) -> 9 / 4.5 = 2 (left: 2)",
                "Pruning": "NA"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "13 - 10 = 3 (left: 3 12 ",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 12 13"
                }
            },
            "Step 1": {
                "Step": "13 - 10 = 3 (left: 3 12 13) -> Input: 4 7 9 11",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 10 = 3 (left: 3 12 13) -> Input: 4 7 9 11 -> 4 + 7 = 11 (left: 9 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 10 12 13"
                }
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 5 12 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 5 = 5 (left: 5 12 13) -> 12 / 5 = 2.4 (left: 2.4 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "4.5 9"
                }
            },
            "Step 5": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 - 3 = 9 (left: 9) -> 9 / 2 = 4.5 (left: 4.5 9) -> Possible next steps:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 - 3 = 9 (left: 9) -> 9 / 2 = 4.5 (left: 4.5 9) -> Possible next steps: -> There are no possible next steps as the numbers provided are already in their simplest form.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "5 + 10 = 15 (left: 12 13 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 1": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 3 * 12 = 36 (left: 36)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 10 12 13"
                }
            },
            "Step 3": {
                "Step": "5 + 10 = 15 (left: 12 13 15)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 10 = 15 (left: 12 13 15) -> 13 * 15 = 195 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "4.5 9"
                }
            },
            "Step 5": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 - 3 = 9 (left: 9) -> 9 / 2 = 4.5 (left: 4.5 9) -> 4.5 * 9 = 40.5 (left: 9 40.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 - 3 = 9 (left: 9) -> 9 / 2 = 4.5 (left: 4.5 9) -> 4.5 * 9 = 40.5 (left: 9 40.5) -> 40.5 / 9 = 4.5 (left: 4.5)",
                "Pruning": "NA"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "10 - 5 = 5 (left: 5 12 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 1": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 / 3 = 4 (left: 4 12) -> 12 - 4 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 3": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 / 3 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 / 3 = 4 (left: 4) -> 4 + 4 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "4.5 9"
                }
            },
            "Step 5": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 - 3 = 9 (left: 9) -> 9 / 2 = 4.5 (left: 4.5 9) -> 4.5 + 9 = 13.5 (left: 9 13.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 - 3 = 9 (left: 9) -> 9 / 2 = 4.5 (left: 4.5 9) -> 4.5 + 9 = 13.5 (left: 9 13.5) -> 13.5 - 9 = 4.5 (left: 4.5)",
                "Pruning": "NA"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "13 - 10 = 3 (left: 3 12 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 1": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 3 * 12 = 36 (left: 36)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> There are no possible next steps with the number 36.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 10 12 13"
                }
            },
            "Step 3": {
                "Step": "5 + 10 = 15 (left: 12 13 15)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 10 = 15 (left: 12 13 15) -> Possible",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "4.5 9"
                }
            },
            "Step 5": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 - 3 = 9 (left: 9) -> 9 / 2 = 4.5 (left: 4.5 9) -> 9 - 4.5 = 4.5 (left: 4.5 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 - 3 = 9 (left: 9) -> 9 / 2 = 4.5 (left: 4.5 9) -> 9 - 4.5 = 4.5 (left: 4.5 9) -> 4.5 * 9 = 40.5 (left: 40.5)",
                "Pruning": "NA"
            }
        },
        "Input": "5 10 12 13",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "953": {
        "puzzle": "2 3 6 6",
        "Agent 0": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 3 4 6)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 6 6 12) -> 12 / 6 = 2 (left: 2 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 6 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "4 60"
                }
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 + 6 = 10 ( -> 6 * 10 = 60 (left: 4 60) -> 60 / 4 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "6 6 12"
                }
            },
            "Step 4": {
                "Step": "6 * 2 = 12 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 * 2 = 12 (left: 6 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (6 * 2) * (6 / 2) = 24",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "4 60"
                }
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 + 6 = 10 ( -> 6 * 10 = 60 (left: 4 60) -> 4 * 60 = 240 (left: 60)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 4 6 6)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> Input:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> Input: -> Please provide a set of numbers to find possible next steps.",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 3": {
                "Step": "6 * 2 = 12 (left: 6 6 12) -> 12 * 6 = 72 (left: 6 72)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 * 2 = 12 (left: 6 6 12) -> 12 * 6 = 72 (left: 6 72) -> 72 / 6 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "4 60"
                }
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 + 6 = 10 ( -> 6 * 10 = 60 (left: 4 60) -> 60 - 4 = 56 (left: 56)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "4 60"
                }
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 + 6 = 10 ( -> 6 * 10 = 60 (left: 4 60) -> 60 / 4 = 15 (left: 15)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 3 4 6)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 + 6 = 10 (left: 6 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 + 6 = 10 (left: 6 10) -> 10 / 6 = 1.6666666666666667 (left: 1.6666666666666667)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 6 6"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 3 * 6 = 18 (left: 18)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 3 * 6 = 18 (left: 18) -> 18 / 2 = 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "2 6 6"
                }
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6 6) -> 6 - 2 = 4 (left: 4 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6 6) -> 6 - 2 = 4 (left: 4 6) -> 6 - 4 = 2 (left: 2)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 4 6 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 * 12 = 432 (left: 432)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 + 6 = 10 (left: 6 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 + 6 = 10 (left: 6 10) -> 6 + 10 = 16 (left: 10 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "4 60"
                }
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 + 6 = 10 ( -> 6 * 10 = 60 (left: 4 60) -> 4 + 60 = 64 (left: 64)",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "4 60"
                }
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 + 6 = 10 ( -> 6 * 10 = 60 (left: 4 60) -> 60 / 4 = 15 (left: 15)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 / 2 = 3 (left: 3 6 6)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 6 + 24 = 30 (left: 30)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 * 2 = 12 (left: 6 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (6 * 2) * (6 / 2) = 24",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "4 60"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 + 6 = 10 ( -> 6 * 10 = 60 (left: 4 60) -> 4 + 60 = 64 (left: 64)",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "4 60"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "4 60"
                }
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 + 6 = 10 ( -> 6 * 10 = 60 (left: 4 60) -> 4 * 60 = 240 (left: 240)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "6 * 2 = 12 (left: 6 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (6 * 2) * (6 / 2) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 4 6 6)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 + 6 = 10 (",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 + 6 = 10 ( -> 6 * 10 = 60 (left: 4 60)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 3": {
                "Step": "6 * 2 = 12 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 * 2 = 12 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 / 12 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 * 2 = 12 (left: 6 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: ((6 * 2) / 6) * 12 = 24",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "4 60"
                }
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 + 6 = 10 ( -> 6 * 10 = 60 (left: 4 60) -> 60 - 4 = 56 (left: 56)",
                "Pruning": "NA"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 / 2 = 3 (left: 3 6 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6) -> 6 / 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "4 60"
                }
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 + 6 = 10 ( -> 6 * 10 = 60 (left: 4 60) -> 60 / 4 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "4 6 6"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6 6)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "2 6 6"
                }
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6 6) -> 6 - 2 = 4 (left: 4 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6 6) -> 6 - 2 = 4 (left: 4 6) -> 4 + 6 = 10 (left: 10)",
                "Pruning": "NA"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "6 / 3 = 2 (left: 2 3 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 3 = 3 (left: 2 3 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 3 = 3 (left: 2 3 6) -> 3 * 2 = 6 (left: 6 6)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6) -> 1.5 * 6 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 * 2 = 12 (left: 6 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (6 * 2) * (6 / 6) = 24",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "4 60"
                }
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 + 6 = 10 ( -> 6 * 10 = 60 (left: 4 60) -> 4 + 60 = 64 (left: 60)",
                "Pruning": "NA"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "6 * 2 = 12 (left: 6 6 12)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 6 6"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 5 6 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 6 6) -> 5 * 6 = 30 (left: 30)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 3": {
                "Step": "6 * 2 = 12 (left: 6 6 12) -> 12 - 6 = 6 (left: 6 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 * 2 = 12 (left: 6 6 12) -> 12 - 6 = 6 (left: 6 12) -> 6 * 12 = 72 (left: 72)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "4 60"
                }
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 + 6 = 10 ( -> 6 * 10 = 60 (left: 4 60) -> 4 + 60 = 64 (left: 64)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "6 * 2 = 12 (left: 6 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: 2 * (6 * (6 / 2)) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "3 * 2 = 6 (left: 6 6 6)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6) -> 6 / 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6) -> 6 / 1.5 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "4 60"
                }
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 + 6 = 10 ( -> 6 * 10 = 60 (left: 4 60) -> 60 - 4 = 56 (left: 56)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "6 * 2 = 12 (left: 6 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: ((6 * 2) / 6) * 12 = 24",
                "Pruning": "NA"
            }
        },
        "Input": "2 3 6 6",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "954": {
        "puzzle": "6 7 10 12",
        "Agent 0": {
            "Step 0": {
                "Step": "6 * 7 = 42 (left: 10 12 42)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 10 12"
                }
            },
            "Step 1": {
                "Step": "6 + 7 = 13 (left: 10 12 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> 12 * 13 = 156 (left: 10 156)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "12 12"
                }
            },
            "Step 3": {
                "Step": "12 - 10 = 2 (left: 6 2 12) -> 6 * 2 = 12 (left: 12 12) -> 12 / 12 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 10 = 2 (left: 6 2 12) -> 6 * 2 = 12 (left: 12 12) -> 12 / 12 = 1 (left: 1) -> No possible next steps with the input of 1.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "1 10"
                }
            },
            "Step 5": {
                "Step": "12 - 6 = 6 (left: 6 7 10) -> 7 - 6 = 1 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 6 = 6 (left: 6 7 10) -> 7 - 6 = 1 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 - 2 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "1 24"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 + 10 = 17 (left: 6 12 17)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 10 12"
                }
            },
            "Step 1": {
                "Step": "6 + 7 = 13 (left: 10 12 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> 12 - 10 = 2 (left: 2 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "6 12 70"
                }
            },
            "Step 3": {
                "Step": "7 * 10 = 70 (left: 6 12 70) -> 6 * 12 = 72 (left: 70 72)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 * 10 = 70 (left: 6 12 70) -> 6 * 12 = 72 (left: 70 72) -> 72 - 70 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 10"
                }
            },
            "Step 5": {
                "Step": "12 - 6 = 6 (left: 6 7 10) -> 7 - 6 = 1 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 6 = 6 (left: 6 7 10) -> 7 - 6 = 1 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 + 2 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "1 24"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 + 10 = 17 (left: 6 12 17)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 10 12"
                }
            },
            "Step 1": {
                "Step": "6 + 7 = 13 (left: 10 12 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> 10 * 12 = 120 (left: 13 120)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 10 12"
                }
            },
            "Step 3": {
                "Step": "6 + 7 = 13 (left: 10 12 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> 12 - 10 = 2 (left: 2 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "1 24"
                }
            },
            "Step 5": {
                "Step": "12 - 10 = 2 (left: 6 2 12) -> 6 * 2 = 12 (left: 12 12) -> 12 + 12 = 24 -> 12 / 12 = 1 (left: 1 24) -> 24 * 1 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "1 24"
                }
            },
            "Step 6": {
                "Step": "12 - 10 = 2 (left: 6 2 12) -> 6 * 2 = 12 (left: 12 12) -> 12 + 12 = 24 -> 12 / 12 = 1 (left: 1 24) -> 24 - 1 = 23 (left: 23)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "1 24"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 * 7 = 42 (left: 10 12 42)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 10 12"
                }
            },
            "Step 1": {
                "Step": "12 - 6 = 6 (left: 6 7 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 6 = 6 (left: 6 7 10) -> 7 - 6 = 1 (left: 1 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 10"
                }
            },
            "Step 3": {
                "Step": "12 - 6 = 6 (left: 6 7 10) -> 7 - 6 = 1 (left: 1 10) -> Possible next steps:",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 6 = 6 (left: 6 7 10) -> 7 - 6 = 1 (left: 1 10) -> Possible next steps: -> No input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "1 10"
                }
            },
            "Step 5": {
                "Step": "12 - 6 = 6 (left: 6 7 10) -> 7 - 6 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 6 = 6 (left: 6 7 10) -> 7 - 6 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9) -> Input: 3 5 6 7",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 10 12 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 10 12"
                }
            },
            "Step 1": {
                "Step": "12 - 10 = 2 (left: 6 2 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 10 = 2 (left: 6 2 12) -> 6 * 2 = 12 (left: 12 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "12 12"
                }
            },
            "Step 3": {
                "Step": "12 - 10 = 2 (left: 6 2 12) -> 6 * 2 = 12 (left: 12 12) -> 12 - 12 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 10 = 2 (left: 6 2 12) -> 6 * 2 = 12 (left: 12 12) -> 12 - 12 = 0 (left: 0) -> There are no possible next steps as there is no input given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 10"
                }
            },
            "Step 5": {
                "Step": "12 - 6 = 6 (left: 6 7 10) -> 7 - 6 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 6 = 6 (left: 6 7 10) -> 7 - 6 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9) -> 9 - 8 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "1 24"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "7 * 10 = 70 (left: 6 12 70)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 10 12"
                }
            },
            "Step 1": {
                "Step": "12 - 6 = 6 (left: 6 7 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 6 = 6 (left: 6 7 10) -> 6 * 7 = 42 (left: 10 42)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 12 70"
                }
            },
            "Step 3": {
                "Step": "7 * 10 = 70 (left: 6 12 70) -> 6 + 12 = 18 (left: 18 70)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 * 10 = 70 (left: 6 12 70) -> 6 + 12 = 18 (left: 18 70) -> 18 / 70 = 0.2571 (left: 0.2571)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "1 24"
                }
            },
            "Step 5": {
                "Step": "12 - 10 = 2 (left: 6 2 12) -> 6 * 2 = 12 (left: 12 12) -> 12 + 12 = 24 -> 12 / 12 = 1 (left: 1 24) -> 24 - 1 = 23 (left: 23)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "1 24"
                }
            },
            "Step 6": {
                "Step": "12 - 10 = 2 (left: 6 2 12) -> 6 * 2 = 12 (left: 12 12) -> 12 + 12 = 24 -> 12 / 12 = 1 (left: 1 24) -> 1 + 24 = 25 (left: 25)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "1 24"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 10 12 13)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 10 12"
                }
            },
            "Step 1": {
                "Step": "7 - 6 = 1 (left: 1 10 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 6 = 1 (left: 1 10 12) -> 12 - 1 = 11 (left: 10 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 10 12"
                }
            },
            "Step 3": {
                "Step": "6 * 7 = 42 (left: 10 12 42)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 * 7 = 42 (left: 10 12 42) -> 42 / 10 = 4.2 (left: 12 4.2)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 10"
                }
            },
            "Step 5": {
                "Step": "12 - 6 = 6 (left: 6 7 10) -> 7 - 6 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 6 = 6 (left: 6 7 10) -> 7 - 6 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10) -> 10 + 10 = 20",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "7 * 10 = 70 (left: 6 12 70)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 10 12"
                }
            },
            "Step 1": {
                "Step": "12 - 10 = 2 (left: 2 7 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 10 = 2 (left: 2 7 12) -> 12 - 2 = 10 (left: 10 7)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "12 12"
                }
            },
            "Step 3": {
                "Step": "12 - 10 = 2 (left: 6 2 12) -> 6 * 2 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 10 = 2 (left: 6 2 12) -> 6 * 2 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: (6 * 2) + (10 - 12) = 24",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "1 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "12 12"
                }
            },
            "Step 5": {
                "Step": "12 - 10 = 2 (left: 6 2 12) -> 6 * 2 = 12 (left: 12 12) -> 12 / 12 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 10 = 2 (left: 6 2 12) -> 6 * 2 = 12 (left: 12 12) -> 12 / 12 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "7 * 10 = 70 (left: 6 12 70)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 12 17"
                }
            },
            "Step 1": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 12 + 6 = 18 (left: 18 17)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 12 + 6 = 18 (left: 18 17) -> 18 + 17 = 35 (left: 35)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "12 12"
                }
            },
            "Step 3": {
                "Step": "12 - 10 = 2 (left: 6 2 12) -> 6 * 2 = 12 (left: 12 12) -> 12 + 12 = 24",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 10 = 2 (left: 6 2 12) -> 6 * 2 = 12 (left: 12 12) -> 12 + 12 = 24 -> 12 / 12 = 1 (left: 1 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 10"
                }
            },
            "Step 5": {
                "Step": "12 - 6 = 6 (left: 6 7 10) -> 7 - 6 = 1 (left: 1 10) -> 10 * 1 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 6 = 6 (left: 6 7 10) -> 7 - 6 = 1 (left: 1 10) -> 10 * 1 = 10 (left: 10) -> 10 - 10 = 0",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "7 - 6 = 1 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 10 12"
                }
            },
            "Step 1": {
                "Step": "10 + 6 = 16 (left: 7 12 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 6 = 16 (left: 7 12 16) -> 16 / 7 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "12 12"
                }
            },
            "Step 3": {
                "Step": "12 - 10 = 2 (left: 6 2 12) -> 6 * 2 = 12 (left: 12 12) -> 12 + 12 = 24",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 10 = 2 (left: 6 2 12) -> 6 * 2 = 12 (left: 12 12) -> 12 + 12 = 24 -> 12 - 12 = 0 (left: 0",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "1 10"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "1 24"
                }
            },
            "Step 5": {
                "Step": "12 - 10 = 2 (left: 6 2 12) -> 6 * 2 = 12 (left: 12 12) -> 12 + 12 = 24 -> 12 / 12 = 1 (left: 1 24) -> 1 * 24 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "1 24"
                }
            },
            "Step 6": {
                "Step": "12 - 10 = 2 (left: 6 2 12) -> 6 * 2 = 12 (left: 12 12) -> 12 + 12 = 24 -> 12 / 12 = 1 (left: 1 24) -> 24 + 1 = 25 (left: 25)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "1 24"
                }
            }
        },
        "Input": "6 7 10 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "955": {
        "puzzle": "7 8 8 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 7 = 5 (left: 5 8 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 8 12"
                }
            },
            "Step 1": {
                "Step": "8 - 7 = 1 (left: 1 8 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 7 = 1 (left: 1 8 12) -> 8 / 1 = 8 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 3": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 8 * 12 = ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 8 * 12 =  -> 8 * 12 = 96",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "10.4 12"
                }
            },
            "Step 5": {
                "Step": "12 - 7 = 5 (left: 5 8 12) -> 8 / 5 = 1.6 (left: 1.6 12) -> 12 - 1.6 = 10.4 (left: 10.4 12) -> 10.4 * 12 = 124.8 (left: 124.8)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "10.4 12"
                }
            },
            "Step 6": {
                "Step": "12 - 7 = 5 (left: 5 8 12) -> 8 / 5 = 1.6 (left: 1.6 12) -> 12 - 1.6 = 10.4 (left: 10.4 12) -> 10.4 * 12 = 124.8 (left: 124.8)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 / 7 = 1.14285714286 (left: 1.14285714286 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "5 8 12"
                }
            },
            "Step 1": {
                "Step": "12 - 7 = 5 (left: 5 8 12) -> 8 / 5 = 1.6 (left: 1.6 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 7 = 5 (left: 5 8 12) -> 8 / 5 = 1.6 (left: 1.6 12) -> 12 - 1.6 = 10.4 (left: 10.4 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 8 12"
                }
            },
            "Step 3": {
                "Step": "8 - 7 = 1 (left: 1 8 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 - 7 = 1 (left: 1 8 12) -> 1 * 8 = 8 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "8 12"
                }
            },
            "Step 5": {
                "Step": "8 - 7 = 1 (left: 1 8 12) -> 1 * 8 = 8 (left: 8 12) -> 8 * 12 = 96 (left: 96)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 7 = 1 (left: 1 8 12) -> 1 * 8 = 8 (left: 8 12) -> 8 * 12 = 96 (left: 96) -> There are no possible next steps as there are no other numbers to operate with.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 * 8 = 56 (left: 56 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 8 12"
                }
            },
            "Step 1": {
                "Step": "7 + 8 = 15 (left: 8 8 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 8 / 8 = 1 (left: 1 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 8 12"
                }
            },
            "Step 3": {
                "Step": "7 * 8 = 56 (left: 8 8 56)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 * 8 = 56 (left: 8 8 56) -> 8 + 8 = 16 (left: 16 56)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "8 12"
                }
            },
            "Step 5": {
                "Step": "8 - 7 = 1 (left: 1 8 12) -> 1 * 8 = 8 (left: 8 12) -> 12 / 8 = 1.5 (left: 1.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 7 = 1 (left: 1 8 12) -> 1 * 8 = 8 (left: 8 12) -> 12 / 8 = 1.5 (left: 1.5) -> 1.5 - 8 = -6.5 (left: -6.5)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 * 8 = 56 (left: 56 8 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 1": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12) -> 64 / 12 = 5.33 (left: 5.33)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 3": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12) -> 64 / 12 = 5.33 (left: 5.33)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "8 12"
                }
            },
            "Step 5": {
                "Step": "8 - 7 = 1 (left: 1 8 12) -> 1 * 8 = 8 (left: 8 12) -> 12 - 8 = 4 (left: 4) ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 7 = 1 (left: 1 8 12) -> 1 * 8 = 8 (left: 8 12) -> 12 - 8 = 4 (left: 4)  -> There are no possible next steps with just the number 4.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "7 + 8 = 15 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "5 8 12"
                }
            },
            "Step 1": {
                "Step": "12 - 7 = 5 (left: 5 8 12) -> 5 - 8 = -",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 7 = 5 (left: 5 8 12) -> 5 - 8 = - -> 5 - 8 = -3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "56 8 12"
                }
            },
            "Step 3": {
                "Step": "7 * 8 = 56 (left: 56 8 12) -> 12 + 8 = 20 (left: 20 56)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 * 8 = 56 (left: 56 8 12) -> 12 + 8 = 20 (left: 20 56) -> 20 * 56 = 1120 (left: 1120)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "8 12"
                }
            },
            "Step 5": {
                "Step": "8 - 7 = 1 (left: 1 8 12) -> 1 * 8 = 8 (left: 8 12) -> 8 - 12 = -4 (left: -4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 7 = 1 (left: 1 8 12) -> 1 * 8 = 8 (left: 8 12) -> 8 - 12 = -4 (left: -4) -> There are no possible next steps with the input -4.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "7 * 8 = 56 (left: 8 12 56)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "5 8 12"
                }
            },
            "Step 1": {
                "Step": "12 - 7 = 5 (left: 5 8 12) -> 5 * 8 = 40 (left: 40 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 7 = 5 (left: 5 8 12) -> 5 * 8 = 40 (left: 40 12) -> 40 - 12 = 28 (left: 28)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "5 8 12"
                }
            },
            "Step 3": {
                "Step": "12 - 7 = 5 (left: 5 8 12) -> 8 - 5 = 3 (left: 3 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 7 = 5 (left: 5 8 12) -> 8 - 5 = 3 (left: 3 12) -> 3 + 12 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "1 12"
                }
            },
            "Step 5": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 8 / 8 = 1 (left: 1 12) -> 1 * 12 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 8 / 8 = 1 (left: 1 12) -> 1 * 12 = 12 (left: 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": "NA"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "8 - 7 = 1 (left: 1 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "5 8 12"
                }
            },
            "Step 1": {
                "Step": "12 - 7 = 5 (left: 5 8 12) -> 5 * 8 = 40 (left: 12 40)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 7 = 5 (left: 5 8 12) -> 5 * 8 = 40 (left: 12 40) -> Input: 28 31 12",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 8 8"
                }
            },
            "Step 3": {
                "Step": "12 - 7 = 5 (left: 5 8 8) -> 5 * 8 = 40 (left: 8 40)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 7 = 5 (left: 5 8 8) -> 5 * 8 = 40 (left: 8 40) -> 40 / 8 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "8 12"
                }
            },
            "Step 5": {
                "Step": "8 - 7 = 1 (left: 1 8 12) -> 1 * 8 = 8 (left: 8 12) -> 8 + 12 = 20 (left: 20) ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 7 = 1 (left: 1 8 12) -> 1 * 8 = 8 (left: 8 12) -> 8 + 12 = 20 (left: 20)  -> There is only one possible next step: 20 / 2 = 10 (left: 10)",
                "Pruning": "NA"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "8 - 7 = 1 (left: 1 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 8 12"
                }
            },
            "Step 1": {
                "Step": "7 + 8 = 15 (left: 8 8 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 + 8 = 20 (left: 8 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 8 12"
                }
            },
            "Step 3": {
                "Step": "8 - 7 = 1 (left: 1 8 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 - 7 = 1 (left: 1 8 12) -> 8 * 1 = 8 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "10.4 12"
                }
            },
            "Step 5": {
                "Step": "12 - 7 = 5 (left: 5 8 12) -> 8 / 5 = 1.6 (left: 1.6 12) -> 12 - 1.6 = 10.4 (left: 10.4 12) -> 12 - 10.4 = 1.6 (left: 1.6 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 7 = 5 (left: 5 8 12) -> 8 / 5 = 1.6 (left: 1.6 12) -> 12 - 1.6 = 10.4 (left: 10.4 12) -> 12 - 10.4 = 1.6 (left: 1.6 12) -> 1.6 * 12 = 19.2 (left: 19.2)",
                "Pruning": "NA"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "12",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 8 12"
                }
            },
            "Step 1": {
                "Step": "8 - 7 = 1 (left: 1 8 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 7 = 1 (left: 1 8 12) -> 12 - 1 = 11 (left:",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "8 12 56"
                }
            },
            "Step 3": {
                "Step": "7 * 8 = 56 (left: 8 12 56) -> 8 + 12 = 20 (left: 20 56)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 * 8 = 56 (left: 8 12 56) -> 8 + 12 = 20 (left: 20 56) -> 20 / 56 = 0.357 (left: 0.357)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "10.4 12"
                }
            },
            "Step 5": {
                "Step": "12 - 7 = 5 (left: 5 8 12) -> 8 / 5 = 1.6 (left: 1.6 12) -> 12 - 1.6 = 10.4 (left: 10.4 12) -> 10.4 * 12 = 124.8 (left: 124.8)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "8 * 12 = 96"
                }
            },
            "Step 6": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 8 * 12 =  -> 8 * 12 = 96 -> 8 + 12 = 20 (left: 20)",
                "Pruning": "NA"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "12 - 7 = 5 (left: 5 8 12)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 8 12"
                }
            },
            "Step 1": {
                "Step": "12",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 -> 12 * 2 = 24 (left: 8 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 8 12"
                }
            },
            "Step 3": {
                "Step": "8 - 7 = 1 (left: 1 8 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 - 7 = 1 (left: 1 8 12) -> 8 - 1 = 7 (left: 7 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "1 12"
                }
            },
            "Step 5": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 8 / 8 = 1 (left: 1 12) -> Possible next steps:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 8 / 8 = 1 (left: 1 12) -> Possible next steps: -> - 8 - 2 = 6 (left: 6 8 14)",
                "Pruning": null
            }
        },
        "Input": "7 8 8 12",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            }
        ]
    },
    "956": {
        "puzzle": "3 4 6 8",
        "Agent 0": {
            "Step 0": {
                "Step": "4 * 6 = 24 (left: 3 8 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 6 8"
                }
            },
            "Step 1": {
                "Step": "4 / 3 = 1.3333 (left: 1.3333 6 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 3 = 1.3333 (left: 1.3333 6 8) -> 8 / 6 = 1.3333 (left: 1.3333 1.3333)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 - 8 = 16 (left: 16 24)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 - 8 = 16 (left: 16 24) -> 16 + 24 = 40 (left: 40)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "2.67 24"
                }
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 / 3 = 2.67 (approximated) (left: 2.67 24) -> 24 / 2.67 \u2248 8.98 (left: 8.98)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 / 3 = 2.67 (approximated) (left: 2.67 24) -> 24 / 2.67 \u2248 8.98 (left: 8.98) -> There are no possible next steps with the input 8.98 as it is already a single number.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 6 = 24 (left: 3 8 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 - 3 = 21 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 - 3 = 21 (left: -> 21 / 3 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 3 * 8 = 24 (left: 24 24)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 3 * 8 = 24 (left: 24 24) -> 24 * 24 = 576 (left: 576)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24) -> 24 / 3 = 8 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "8 24"
                }
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24) -> 24 / 3 = 8 (left: 8 24) -> 8 * 24 = 192 (left: 192)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "3 8"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 / 3 = 1.33 (left: 1.33 6 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24) -> 24 / 3 = 8 (left: 8 24)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 24) -> 8 * 3 = 24 (left: 24) -> Answer: (4 * 6) / (8 / 3) = 24",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "8 24"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24) -> 24 / 3 = 8 (left: 8 24) -> 24 / 8 = 3 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "8 24"
                }
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24) -> 24 / 3 = 8 (left: 8 24) -> 24 / 8 = 3 (left: 3 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24) -> 24 / 3 = 8 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> Input: 10 5",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 / 3 = 2 (left: 2 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 24) -> 8 * 3 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 24) -> 8 * 3 = 24 (left: 24) -> Answer: ((3 * 4) / 6) * 8 = 24",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "3 8 24"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 / 3 = 2.67 (approximated) (left: 2.67 24)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 24) -> 8 * 3 = 24 (left: 24) -> Answer: (4 * 6) / 8 * 3 = 24",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 24) -> 8 * 3 = 24 (left: 24) -> Answer: (4 * 6) / (3 + 8) = 24",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "3 8"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 * 6 = 24 (left: 3 8 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 6 8"
                }
            },
            "Step 1": {
                "Step": "8 - 4 = 4 (left: 3 6 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 4 = 4 (left: 3 6 4) -> 3 * 4 = 12 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 6 8"
                }
            },
            "Step 3": {
                "Step": "3 + 4 = 7 (left: 6 7 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 6 7 8) -> 8 - 6 = 2 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24) -> 24 / 3 = 8 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "3 8"
                }
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24) -> 24 / 3 = 8 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 8 / 3 = 2.67 (left: 2.67)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "3 8"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "4 - 3 = 1 (left: 1 6 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 8 = 3 (left: 3 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 8 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 24 24)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 24 24) -> 24 * 24 = 576 (left: 576)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 24) -> 8 * 3 = 24 (left: 24) -> Answer: ((3 * 4) / 6) * 8 = 24",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "8 24"
                }
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24) -> 24 / 3 = 8 (left: 8 24) -> 8 + 24 = 32 (left: 24 32)",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "8 - 6 = 2 (left: 2 4 2)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 8) -> 8 + 8 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "8 24"
                }
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24) -> 24 / 3 = 8 (left: 8 24) -> 24 / 8 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "3 8 24"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 8 = 3 (left: 3 24)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24) -> 24 / 3 = 8 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 24) -> 8 * 3 = 24 (left: 24) -> Answer: ((4 * 6) / 3) * 8 = 24",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "3 8"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "6 - 4 = 2 (left: 2 3 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 8) -> 8 + 8 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 / 3 = 2.6666666666666665 (left: 2.6666666666666665 24)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 / 3 = 2.6666666666666665 (left: 2.6666666666666665 24) -> 24 - 2.6666666666666665 = 21.33333333333333 (left: 21.33333333333333)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 24) -> 8 * 3 = 24 (left: 24) -> Answer: (4 * 6) / 8 * 3 = 24",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "8 24"
                }
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24) -> 24 / 3 = 8 (left: 8 24) -> 24 - 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "3 8"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 6 7 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 6 8"
                }
            },
            "Step 1": {
                "Step": "6 / 3 = 2 (left: 2 4 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 3 = 2 (left: 2 4 8) -> 8 / 2 = 4 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "2 4 2"
                }
            },
            "Step 3": {
                "Step": "8 - 6 = 2 (left: 2 4 2) -> 2 + 4 = 6 (left: 2 6)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 - 6 = 2 (left: 2 4 2) -> 2 + 4 = 6 (left: 2 6) -> 2 * 6 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24) -> 24 / 3 = 8 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> Possible next steps:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24) -> 24 / 3 = 8 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> Possible next steps: -> There are no more possible next steps with the given input.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "6 - 4 = 2 (left: 2 3 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 + 3 = 11 (left: 11 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 + 3 = 11 (left: 11 24) -> 11 / 24 = 0.4583 (left: 0.4583)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 24) -> 8 * 3 = 24 (left: 24) -> Answer: (4 * 6) / 8 * 3 = 24",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "3 8 24"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24) -> 24 / 3 = 8 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 24) -> 8 * 3 = 24 (left: 24) -> Answer: (4 * 6) / 3 * 8 = 24",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "3 8"
                }
            }
        },
        "Input": "3 4 6 8",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "957": {
        "puzzle": "1 7 9 11",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 7 = 8 (left: 8 9 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "7 10 11"
                }
            },
            "Step 1": {
                "Step": "9 + 1 = 10 (left: 7 10 11) -> 10 + 11 = 21 (left: 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 1 = 10 (left: 7 10 11) -> 10 + 11 = 21 (left: 7) -> 7 * 8 = 56 (left: 56)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "7 15 9"
                }
            },
            "Step 3": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> Input: 3 5 7 9 -> 3 * 5 = 15 (left: 7 15 9) -> 7 + 15 = 22 (left: 9 22)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> Input: 3 5 7 9 -> 3 * 5 = 15 (left: 7 15 9) -> 7 + 15 = 22 (left: 9 22) -> 5 * 3 = 15 (left: 15 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "7 15 9"
                }
            },
            "Step 5": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> Input: 3 5 7 9 -> 3 * 5 = 15 (left: 7 15 9) -> 15 - 7 = 8 (left: 8 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> Input: 3 5 7 9 -> 3 * 5 = 15 (left: 7 15 9) -> 15 - 7 = 8 (left: 8 9) -> 8 * 9 = 72 (left: 72)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "15 7"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 - 1 = 6 (left: 6 9 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 9 11"
                }
            },
            "Step 1": {
                "Step": "9 + 1 = 10 (left: 7 10 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 1 = 10 (left: 7 10 11) -> 7 + 10 = 17 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 9 11"
                }
            },
            "Step 3": {
                "Step": "9 - 7 = 2 (left: 1 2 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 7 = 2 (left: 1 2 11) -> 2 * 11 = 22 (left: 1 22)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "7 15 9"
                }
            },
            "Step 5": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> Input: 3 5 7 9 -> 3 * 5 = 15 (left: 7 15 9) -> 7 * 15 = 105 (left: 9 105)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> Input: 3 5 7 9 -> 3 * 5 = 15 (left: 7 15 9) -> 7 * 15 = 105 (left: 9 105) -> Possible",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "15 7"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 - 1 = 6 (left: 6 9 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "1 7 2"
                }
            },
            "Step 1": {
                "Step": "11 - 9 = 2 (left: 1 7 2) -> 7 - 1 = 6 (left: 6 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 9 = 2 (left: 1 7 2) -> 7 - 1 = 6 (left: 6 2) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "7 10 11"
                }
            },
            "Step 3": {
                "Step": "9 + 1 = 10 (left: 7 10 11) -> 7 * 10 = 70 (left: 11 70)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 + 1 = 10 (left: 7 10 11) -> 7 * 10 = 70 (left: 11 70) -> 11 / 70 = 0.15714285714285714 (left: 0.15714285714285714)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "7 15 9"
                }
            },
            "Step 5": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> Input: 3 5 7 9 -> 3 * 5 = 15 (left: 7 15 9) -> 9 - 7 = 2 (left: 2 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> Input: 3 5 7 9 -> 3 * 5 = 15 (left: 7 15 9) -> 9 - 7 = 2 (left: 2 9) -> 9 - 2 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "15 7"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "1 * 7 = 7 (left: 7 9 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 9 11"
                }
            },
            "Step 1": {
                "Step": "1 * 7 = 7 (left: 7 9 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 * 7 = 7 (left: 7 9 11) -> 9 * 11 = 99 (left: 7 99)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "7 10 11"
                }
            },
            "Step 3": {
                "Step": "9 + 1 = 10 (left: 7 10 11) -> 7 / 10 = 0.7 (left:",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 + 1 = 10 (left: 7 10 11) -> 7 / 10 = 0.7 (left: -> 7 - 10 = -3 (left: -3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "7 15 9"
                }
            },
            "Step 5": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> Input: 3 5 7 9 -> 3 * 5 = 15 (left: 7 15 9) -> 7 + 15 = 22 (left: 9 22)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> Input: 3 5 7 9 -> 3 * 5 = 15 (left: 7 15 9) -> 7 + 15 = 22 (left: 9 22) -> 5 - 3 = 2 (left: 2 7)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 + 7 = 8 (left: 8 9 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 9 11"
                }
            },
            "Step 1": {
                "Step": "1 * 7 = 7 (left: 7 9 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 * 7 = 7 (left: 7 9 11) -> 7 * 9 = 63 (left: 63 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 9 11"
                }
            },
            "Step 3": {
                "Step": "11 - 9 = 2 (left: 1 7 2)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 9 = 2 (left: 1 7 2) -> 1 + 7 = 8 (left: 8 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "7 15 9"
                }
            },
            "Step 5": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> Input: 3 5 7 9 -> 3 * 5 = 15 (left: 7 15 9) -> 15 - 7 = 8 (left: 8 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> Input: 3 5 7 9 -> 3 * 5 = 15 (left: 7 15 9) -> 15 - 7 = 8 (left: 8 9) -> 8 + 9 = 17 (left: 17)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "15 7"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "9 + 1 = 10 (left: 7 10 11)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "7 10 11"
                }
            },
            "Step 1": {
                "Step": "9 + 1 = 10 (left: 7 10 11) -> 7 * 10 = 70 (left: 11 70)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 1 = 10 (left: 7 10 11) -> 7 * 10 = 70 (left: 11 70) -> 70 - 11 = 59 (left: 59)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 9 11"
                }
            },
            "Step 3": {
                "Step": "11 - 9 = 2 (left: 1 7 2)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 9 = 2 (left: 1 7 2) -> 7 - 1 = 6 (left: 6 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "4 10 17"
                }
            },
            "Step 5": {
                "Step": "9 + 1 = 10 (left: 7 10 11) -> 11 - 7 = 4 (left: 4 10 17) -> 10 * 4 = 40 (left: 40 17)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 1 = 10 (left: 7 10 11) -> 11 - 7 = 4 (left: 4 10 17) -> 10 * 4 = 40 (left: 40 17) -> 40 - 17 = 23 (left: 23)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "15 7"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "7 - 1 = 6 (left: 6 9 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "8 9 11"
                }
            },
            "Step 1": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 9 + 11 = 20 (left: 8 20)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 9 + 11 = 20 (left: 8 20) -> 8 + 20 = 28 (left: 28)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "7 10 11"
                }
            },
            "Step 3": {
                "Step": "9 + 1 = 10 (left: 7 10 11) -> 7 * 10 = 70 (left: 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 + 1 = 10 (left: 7 10 11) -> 7 * 10 = 70 (left: 11) -> There are no possible next steps with the input of 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "7 15 9"
                }
            },
            "Step 5": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> Input: 3 5 7 9 -> 3 * 5 = 15 (left: 7 15 9) -> 9 - 7 = 2 (left: 2 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> Input: 3 5 7 9 -> 3 * 5 = 15 (left: 7 15 9) -> 9 - 7 = 2 (left: 2 9) -> 2 * 9 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "15 7"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "1 + 7 = 8 (left: 8 9 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 9 11"
                }
            },
            "Step 1": {
                "Step": "7 - 1 = 6 (left: 6 9 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 6 * 9 = 54 (left: 54 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 9 11"
                }
            },
            "Step 3": {
                "Step": "9 + 1 = 10 (left: 7 10 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 + 1 = 10 (left: 7 10 11) -> 11 - 7 = 4 (left: 4 10 17)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "7 15 9"
                }
            },
            "Step 5": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> Input: 3 5 7 9 -> 3 * 5 = 15 (left: 7 15 9) -> 9 + 7 = 16 (left: 16 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> Input: 3 5 7 9 -> 3 * 5 = 15 (left: 7 15 9) -> 9 + 7 = 16 (left: 16 9) -> 16 * 9 = 144 (left: 144)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "15 7"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "7 - 1 = 6 (left: 6 9 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 9 11"
                }
            },
            "Step 1": {
                "Step": "1 + 7 = 8 (left: 8 9 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 11 - 8 = 3 (left: 3 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 9 11"
                }
            },
            "Step 3": {
                "Step": "7 - 1 = 6 (left: 6 9 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 6 * 9 = 54 (left: 54",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "7 15 9"
                }
            },
            "Step 5": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> Input: 3 5 7 9 -> 3 * 5 = 15 (left: 7 15 9) -> 7 + 15 = 22 (left: 9 22)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> Input: 3 5 7 9 -> 3 * 5 = 15 (left: 7 15 9) -> 7 + 15 = 22 (left: 9 22) -> 9 * 22 = 198 (left: 198)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "15 7"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "11 - 9 = 2 (left: 1 7 2)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "8 9 11"
                }
            },
            "Step 1": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> Input: 3 5 7 9",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> Input: 3 5 7 9 -> 3 * 5 = 15 (left: 7 15 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 9 11"
                }
            },
            "Step 3": {
                "Step": "9 + 1 = 10 (left: 7 10 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 + 1 = 10 (left: 7 10 11) -> 7 * 10 = 70 (left: 11 70)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "7 15 9"
                }
            },
            "Step 5": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> Input: 3 5 7 9 -> 3 * 5 = 15 (left: 7 15 9) -> 15 / 7 = 2 (left: 2 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> Input: 3 5 7 9 -> 3 * 5 = 15 (left: 7 15 9) -> 15 / 7 = 2 (left: 2 9) -> 2 + 9 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "15 7"
                }
            }
        },
        "Input": "1 7 9 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "958": {
        "puzzle": "2 3 6 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 2 = 11 (left: 6 11 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 6 13"
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 3 12 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 20",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 6 13"
                }
            },
            "Step 3": {
                "Step": "13 - 2 = 11 (left: 6 11 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 2 = 11 (left: 6 11 13) -> 13 - 11 = 2 (left: 6 2)"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 2 9 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 9 13"
                }
            },
            "Step 1": {
                "Step": "6 + 3 = 9 (left: 2 9 13) -> 2 * 9 = 18 (left: 18 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 3 = 9 (left: 2 9 13) -> 2 * 9 = 18 (left: 18 13) -> 18 + 13 = 31 (left: 31)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 6 13"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 6 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 6 13) -> 13 - 6 = 7 (left: 5 7)"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 2 = 11 (left: 6 3 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 6 13"
                }
            },
            "Step 1": {
                "Step": "6 + 2 = 8 (left: 3 8 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 2 = 8 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 6 13"
                }
            },
            "Step 3": {
                "Step": "6 + 2 = 8 (left: 3 8 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 2 = 8 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13)"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 2 13 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 / 3 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 / 3 = 4 (left: 4) -> 4 + 4 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 6 13"
                }
            },
            "Step 3": {
                "Step": "6 * 2 = 12 (left: 3 12 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 - 3 = 9 (left: 9 12)"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 * 2 = 12 (left: 3 12 ",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 3 + 12 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 3 + 12 = 15 (left: 15) -> There is only one possible next step:",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "2 6 7"
                }
            },
            "Step 3": {
                "Step": "13 - 6 = 7 (left: 2 6 7) -> 2 + 6 = 8 (left: 7 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 6 = 7 (left: 2 6 7) -> 2 + 6 = 8 (left: 7 8) -> 7 / 8 = 0.875 (left: 0.875)"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 2 13 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "5 6 13"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 5 6 13) -> 5 / 6 = 0.83333",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 6 13) -> 5 / 6 = 0.83333 -> 5 + 6 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 6 13"
                }
            },
            "Step 3": {
                "Step": "6 + 3 = 9 (left: 9 6 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 3 = 9 (left: 9 6 13) -> 6 - 9 = -3 (left: -3 13)"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 6 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 3 * 4 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 3 * 4 = 12 (left: 12) -> 12 / 8 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "11 13"
                }
            },
            "Step 3": {
                "Step": "6 + 2 = 8 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 2 = 8 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((6 + 2) + 3) + 13 = 24"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 2 6 7)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 3 + 12 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 3 + 12 = 15 (left: 15) -> There is no possible next step with the input of 15.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 3": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 3 * 12 = 36 (left: 36)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "6 * 2 = 12 (left: 3 12 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 / 3 = 4 (left: 4 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 / 3 = 4 (left: 4 4) -> 4 * 4 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 6 13"
                }
            },
            "Step 3": {
                "Step": "2 * 3 = 6 (left: 6 6 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 3 = 6 (left: 6 6 13) -> 6 + 6 = 12 (left: 12 13)"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "6 * 2 = 12 (left: 3 12 ",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 3 + 12 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 3 + 12 = 15 (left: 15) -> There are no possible next steps with just one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "11 13"
                }
            },
            "Step 3": {
                "Step": "6 + 2 = 8 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 2 = 8 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((6 + 2) + 3) + 13 = 24"
            }
        },
        "Input": "2 3 6 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            }
        ]
    },
    "959": {
        "puzzle": "2 2 5 12",
        "Agent 0": {
            "Step 0": {
                "Step": "2 * 5 = 10 (left: 2 10 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 5 12"
                }
            },
            "Step 1": {
                "Step": "12 - 2 = 10 (left: 2 5 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 2 = 10 (left: 2 5 10) -> 10 - 2 = 8 (left: 8 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "14 / 3.5 = 4 (left:"
                }
            },
            "Step 3": {
                "Step": "5 + 2 = 7 (left: 2 7  -> 14 / 3.5 = 4 (left: -> 14 / 3.5 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 2 = 7 (left: 2 7  -> 14 / 3.5 = 4 (left: -> 14 / 3.5 = 4 (left: 4) -> There are no possible next steps with just the number 4.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "5 12"
                }
            },
            "Step 5": {
                "Step": "5 + 2 = 7 (left: 2 7 12) -> 7 - 2 = 5 (left: 5 12) -> 12 - 5 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 2 = 7 (left: 2 7 12) -> 7 - 2 = 5 (left: 5 12) -> 12 - 5 = 7 (left: 7) -> 7 + 8 = 15 (left: 7 15)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 5 12"
                }
            },
            "Step 1": {
                "Step": "12 - 2 = 10 (left: 2 5 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 2 = 10 (left: 2 5 10) -> 10 / 2 = 5 (left: 5 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 5 12"
                }
            },
            "Step 3": {
                "Step": "5 + 2 = 7 (left: 2 7 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 2 = 7 (left: 2 7 12) -> 7 - 2 = 5 (left: 5 12)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "8 10"
                }
            },
            "Step 5": {
                "Step": "12 - 2 = 10 (left: 2 5 10) -> 10 - 2 = 8 (left: 8 10) -> 8 / 10 = 0.8 (left: 0.8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 2 = 10 (left: 2 5 10) -> 10 - 2 = 8 (left: 8 10) -> 8 / 10 = 0.8 (left: 0.8) -> There are no valid operations that can be performed with the input 0.8.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 5 12"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 5 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 5 12) -> 12 - 5 = 7 (left:",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "8 10"
                }
            },
            "Step 3": {
                "Step": "12 - 2 = 10 (left: 2 5 10) -> 10 - 2 = 8 (left: 8 10) -> 8 * 10 = 80 (left: 80)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 2 = 10 (left: 2 5 10) -> 10 - 2 = 8 (left: 8 10) -> 8 * 10 = 80 (left: 80) -> 80 / 2 = 40 (left: 2)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "8 10"
                },
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "14 / 3.5 = 4 (left:"
                }
            },
            "Step 5": {
                "Step": "5 + 2 = 7 (left: 2 7  -> 14 / 3.5 = 4 (left: -> 14 / 3.5 = 4 (left: )",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 2 = 7 (left: 2 7  -> 14 / 3.5 = 4 (left: -> 14 / 3.5 = 4 (left: ) -> It looks like you didn't provide an input for the next calculation. Please provide the numbers you would like to use for the next step.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 5 12"
                }
            },
            "Step 1": {
                "Step": "12 - 5 = 7 (left: 2 7 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 5 = 7 (left: 2 7  -> 2 * 7 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "8 10"
                }
            },
            "Step 3": {
                "Step": "12 - 2 = 10 (left: 2 5 10) -> 10 - 2 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 2 = 10 (left: 2 5 10) -> 10 - 2 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> 18 * 2 = 36 (left: 8)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "8 10"
                },
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "8 10"
                }
            },
            "Step 5": {
                "Step": "12 - 2 = 10 (left: 2 5 10) -> 10 - 2 = 8 (left: 8 10) -> Input: 18 2",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 2 = 10 (left: 2 5 10) -> 10 - 2 = 8 (left: 8 10) -> Input: 18 2 -> 18 - 2 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "None - there is only one number provided."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 5 12"
                }
            },
            "Step 1": {
                "Step": "5 - 2 = 3 (left: 2 3 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 - 2 = 3 (left: 2 3  -> 3 / 2 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "14 / 3.5 = 4 (left:"
                }
            },
            "Step 3": {
                "Step": "5 + 2 = 7 (left: 2 7  -> 14 / 3.5 = 4 (left: -> 14 - 3.5 = 10.5 (left: 10.5)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 2 = 7 (left: 2 7  -> 14 / 3.5 = 4 (left: -> 14 - 3.5 = 10.5 (left: 10.5) -> There are no possible next steps with the input 10.5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "8 10"
                }
            },
            "Step 5": {
                "Step": "12 - 2 = 10 (left: 2 5 10) -> 10 - 2 = 8 (left: 8 10) -> 10 / 8 = 1.25 (left: 1.25)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 2 = 10 (left: 2 5 10) -> 10 - 2 = 8 (left: 8 10) -> 10 / 8 = 1.25 (left: 1.25) -> There are no possible next steps for the input 1.25 as it is already a single number.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "2 / 2 = 1 (left: 1 5 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 5 12"
                }
            },
            "Step 1": {
                "Step": "5 + 2 = 7 (left: 2 4 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 2 = 7 (left: 2 4 7) -> 7 - 2 = 5 (left: 2 5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "14 / 3.5 = 4 (left:"
                }
            },
            "Step 3": {
                "Step": "5 + 2 = 7 (left: 2 7  -> 14 / 3.5 = 4 (left: -> 14 + 3.5 = 17.5 (left: 17.5)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 2 = 7 (left: 2 7  -> 14 / 3.5 = 4 (left: -> 14 + 3.5 = 17.5 (left: 17.5) -> There are no possible next steps as there are no other numbers provided to perform operations with 17.5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "8 10"
                }
            },
            "Step 5": {
                "Step": "12 - 2 = 10 (left: 2 5 10) -> 10 - 2 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 2 = 10 (left: 2 5 10) -> 10 - 2 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "2 * 5 = 10 (left: 10 2 ",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 5 12"
                }
            },
            "Step 1": {
                "Step": "5 + 2 = 7 (left: 2 7 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 2 = 7 (left: 2 7  -> 14 / 3.5 = 4 (left:",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 5 12"
                }
            },
            "Step 3": {
                "Step": "2 / 2 = 1 (left: 1 5 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 / 2 = 1 (left: 1 5 12) -> 5 + 12 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "8 10"
                }
            },
            "Step 5": {
                "Step": "12 - 2 = 10 (left: 2 5 10) -> 10 - 2 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 2 = 10 (left: 2 5 10) -> 10 - 2 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> 7 / 6 = 1.16666666667 (left: ",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "There are no possible next steps with just the number 4."
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "2 * 5 = 10 (left: 10 2 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 5 12"
                }
            },
            "Step 1": {
                "Step": "2 / 5 = 0.4 (left: 0.",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 / 5 = 0.4 (left: 0. -> There are no possible next steps with an input of 0 as there are no numbers to perform operations on.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "8 10"
                }
            },
            "Step 3": {
                "Step": "12 - 2 = 10 (left: 2 5 10) -> 10 - 2 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 2 = 10 (left: 2 5 10) -> 10 - 2 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> 18 - 2 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "14 / 3.5 = 4 (left:"
                },
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "8 10"
                }
            },
            "Step 5": {
                "Step": "12 - 2 = 10 (left: 2 5 10) -> 10 - 2 = 8 (left: 8 10) -> 8 * 10 = 80 (left: 80)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 2 = 10 (left: 2 5 10) -> 10 - 2 = 8 (left: 8 10) -> 8 * 10 = 80 (left: 80) -> There are no possible next steps for the input 80 as it is already a single number.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "5 + 2 = 7 (left: 2 7 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 5 12"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 5 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 5 + 4 = 9 (left: 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "14 / 3.5 = 4 (left:"
                }
            },
            "Step 3": {
                "Step": "5 + 2 = 7 (left: 2 7  -> 14 / 3.5 = 4 (left: -> 3.5 / 14 = 0.25 (left: 0.25)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 2 = 7 (left: 2 7  -> 14 / 3.5 = 4 (left: -> 3.5 / 14 = 0.25 (left: 0.25) -> There are no possible next steps with the input 0.25.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "8 10"
                }
            },
            "Step 5": {
                "Step": "12 - 2 = 10 (left: 2 5 10) -> 10 - 2 = 8 (left: 8 10) -> 10 - 8 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 2 = 10 (left: 2 5 10) -> 10 - 2 = 8 (left: 8 10) -> 10 - 8 = 2 (left: 2) -> None, as there is only one number provided.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "2 - 2 = 0 (left: 0 5 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 5 12"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 5 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 5 - 4 = 1 (left: 1 12)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "14 / 3.5 = 4 (left:"
                }
            },
            "Step 3": {
                "Step": "5 + 2 = 7 (left: 2 7  -> 14 / 3.5 = 4 (left: -> 14 + 3.5 = 17.5 (left: 17.5)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 2 = 7 (left: 2 7  -> 14 / 3.5 = 4 (left: -> 14 + 3.5 = 17.5 (left: 17.5) -> None - there is only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "14 / 3.5 = 4 (left:"
                }
            },
            "Step 5": {
                "Step": "5 + 2 = 7 (left: 2 7  -> 14 / 3.5 = 4 (left: -> 3.5 * 4 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 2 = 7 (left: 2 7  -> 14 / 3.5 = 4 (left: -> 3.5 * 4 = 14 (left: 14) -> There are no possible next steps as there is only one number left.",
                "Pruning": null
            }
        },
        "Input": "2 2 5 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "960": {
        "puzzle": "2 6 8 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 2 = 11 (left: 6 8 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 - 13 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 + 13 = 37 (left: 37)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((6 / 2) + 8) + 13 = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 / 2 = 3 (left: 3 8 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5) -> 5 - 3 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 8 13"
                }
            },
            "Step 3": {
                "Step": "13 - 6 = 7 (left: 2 8 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 6 = 7 (left: 2 8 7) -> 7 + 2 = 9 (left: 8 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((6 / 2) + 8) + 13 = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 + 6 = 8 (left: 8 8 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 / 13 = 0.846 (left: 0.846)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 8 13"
                }
            },
            "Step 3": {
                "Step": "2 + 6 = 8 (left: 8 8 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 6 = 8 (left: 8 8 13) -> 8 - 13 = -5 (left: 8 -5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((6 / 2) + 8) + 13 = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "8 - 2 = 6 (left: 6 6 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5) -> 5 - 3 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 8 + 3 = 11 (left:",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 8 + 3 = 11 (left: -> 8 / 3 = 2.66667 (left: 2.66667)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (6 / 2 + 8) + 13 = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 - 2 = 11 (left: 6 8 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 8 * 3 = 24 (left: 13 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 8 * 3 = 24 (left: 13 24) -> 13 + 24 = 37 (left: 37)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 8 - 3 = 5 (left: 5 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 8 - 3 = 5 (left: 5 13) -> 5 + 13 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10) -> 10 + 8 = 18 (left: 18) -> 8 + 7 = 15 (left: 15)"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "6 / 2 = 3 (left: 3 8 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 / 13 \u2248 0.846 (left: 0.846)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 8 - 3 = 5 (left: 5 13) -> 5 + 13 = 18 (left: 18) -> 18 / 2 = 9"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 2 7 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10) -> 8 * 10 = 80 (left: 80)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 6 5"
                }
            },
            "Step 3": {
                "Step": "13 - 8 = 5 (left: 2 6 5) -> 6 / 2 = 3 (left: 3 5)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 8 = 5 (left: 2 6 5) -> 6 / 2 = 3 (left: 3 5) -> 3 * 5 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10) -> 10 + 8 = 18 (left: 18) -> 18 - 8 = 10 (left: 10)"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "13 - 2 = 11 (left: 6 11 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 / 13 = 0.8461538461538461 (left: 0.8461538461538461)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 13 / 3 = ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 13 / 3 =  -> 13 / 3 = 4.33 (left: 4.33)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((6 / 2) + 8) + 13 = 24"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "13 - 8 = 5 (left: 2 6 5)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 8 13"
                }
            },
            "Step 1": {
                "Step": "13 - 6 = 7 (left: 2 7 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 6 = 7 (left: 2 7 8) -> 8 / 2 = 4 (left: 4 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 6 5"
                }
            },
            "Step 3": {
                "Step": "13 - 8 = 5 (left: 2 6 5) -> 2 - 6 = -4 (left: -4 5)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 8 = 5 (left: 2 6 5) -> 2 - 6 = -4 (left: -4 5) -> 5 - (-4) = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10) -> 10 + 8 = 18 (left: 18) -> 18 - 8 = 10 (left: 8)"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "13 - 8 = 5 (left: 2 6 5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 8 13"
                }
            },
            "Step 1": {
                "Step": "13 - 6 = 7 (left: 6 8 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 6 = 7 (left: 6 8 7) -> 7 / 6 = 1.17 (left: 1.17 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10) -> 10 + 8 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 8 - 3 = 5 (left: 5 13) -> 5 + 13 = 18 (left: 18) -> 18 - 10 = 8 (left: 8)"
            }
        },
        "Input": "2 6 8 13",
        "Verifications": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "961": {
        "puzzle": "8 8 10 12",
        "Agent 0": {
            "Step 0": {
                "Step": "10 * 8 = 80 (left: 12 80)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "8 8 10 12"
                }
            },
            "Step 1": {
                "Step": "8 - 8 = 0 (left: 10 0 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 8 = 0 (left: 10 0 12) -> 12 - 0 = 12 (left: 10 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "8 8 10 12"
                }
            },
            "Step 3": {
                "Step": "12 - 10 = 2 (left: 8 2 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 10 = 2 (left: 8 2  -> 8 * 2 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "6 18"
                }
            },
            "Step 5": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 18 - 12 = 6 (left: 6 18) -> 6 * 18 = 108 (left: 108)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 18 - 12 = 6 (left: 6 18) -> 6 * 18 = 108 (left: 108) -> 108 / 2 = 54 (left: 54)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "0 8"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 + 8 = 18 (left: 8 12 18)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "8 8 10 12"
                }
            },
            "Step 1": {
                "Step": "12 - 8 = 4 (left: 8 4 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 8 = 4 (left: 8 4  -> 8 / 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "12 80"
                }
            },
            "Step 3": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 - 6",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 - 6 -> 80 - 6 = 74",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "6 18"
                }
            },
            "Step 5": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 18 - 12 = 6 (left: 6 18) -> 18 - 6 = 12 (left: 6 18",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 18 - 12 = 6 (left: 6 18) -> 18 - 6 = 12 (left: 6 18 -> 6 * 3 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "0 8"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "8 - 8 = 0 (left: 10 0 12)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "10 12 64"
                }
            },
            "Step 1": {
                "Step": "8 * 8 = 64 (left: 10 12 64) -> 64 / 10 = 6.4 (left: 6.4 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 * 8 = 64 (left: 10 12 64) -> 64 / 10 = 6.4 (left: 6.4 12) -> 6.4 + 12 = 18.4 (left: 18.4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "8 8 10 12"
                }
            },
            "Step 3": {
                "Step": "8 * 10 = 80 (left: 80 8 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 * 10 = 80 (left: 80 8 12) -> 80 / 8 = 10 (left: 10 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "6 18"
                }
            },
            "Step 5": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 18 - 12 = 6 (left: 6 18) -> Input: 3 3 9",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 18 - 12 = 6 (left: 6 18) -> Input: 3 3 9 -> 3 * 3 = 9 (left: 9 9)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "8 * 8 = 64 (left: 10 12 64)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "8 8 10 12"
                }
            },
            "Step 1": {
                "Step": "8 * 8 = 64 (left: 10 12 64)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 * 8 = 64 (left: 10 12 64) -> 10 * 12 = 120 (left: 120 64)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "6 18"
                }
            },
            "Step 3": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 18 - 12 = 6 (left: 6 18) -> 6 * 18 = 108 (left: 108)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 18 - 12 = 6 (left: 6 18) -> 6 * 18 = 108 (left: 108) -> 1 * 0 * 8 = 0 (left: 0 8)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "6 18"
                }
            },
            "Step 5": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 18 - 12 = 6 (left: 6 18) -> 6 * 3 = 18 (left: 18)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 18 - 12 = 6 (left: 6 18) -> 6 * 3 = 18 (left: 18) -> 18 + 2 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "0 8"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "8 - 8 = 0 (left: 0 10 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "8 8 10 12"
                }
            },
            "Step 1": {
                "Step": "8 + 8 = 16 (left: 10 16 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 + 8 = 16 (left: 10 16 12) -> 10 * 16 = 160 (left: 12 160)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "6 18"
                }
            },
            "Step 3": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 18 - 12 = 6 (left: 6 18) -> 6 + 18 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 18 - 12 = 6 (left: 6 18) -> 6 + 18 = 24 (left: 24) -> Answer: ((10 + 8) - 8) + 12 = 24",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "0 0.8333333333333334"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "0 8"
                }
            },
            "Step 5": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 18 - 12 = 6 (left: 6 18) -> 6 * 18 = 108 (left: 108) -> 1 * 0 * 8 = 0 (left: 0 8) -> 8 - 0 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "0 8"
                }
            },
            "Step 6": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 18 - 12 = 6 (left: 6 18) -> 6 * 18 = 108 (left: 108) -> 1 * 0 * 8 = 0 (left: 0 8) -> 8 * 0 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "3 54"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "12 - 8 = 4 (left: 10 8 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "8 8 10 12"
                }
            },
            "Step 1": {
                "Step": "8 / 8 = 1 (left: 1 10 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 / 8 = 1 (left: 1 10 12) -> 12 - 1 = 11 (left: 10 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "6 18"
                }
            },
            "Step 3": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 18 - 12 = 6 (left: 6 18) -> 18 / 6 = 3 (left: 3 18)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 18 - 12 = 6 (left: 6 18) -> 18 / 6 = 3 (left: 3 18) -> 18 * 3 = 54 (left: 3 54)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "6 18"
                }
            },
            "Step 5": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 18 - 12 = 6 (left: 6 18) -> Possible next steps:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 18 - 12 = 6 (left: 6 18) -> Possible next steps: -> There are no more possible next steps with the given input.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "8 + 8 = 16 (left: 10 12 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "8 8 10 12"
                }
            },
            "Step 1": {
                "Step": "8 - 8 = 0 (left: 0 10 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 8 = 0 (left: 0 10 12) -> 10 / 12 = 0.8333333333333334 (left: 0 0.8333333333333334)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "6 18"
                }
            },
            "Step 3": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 18 - 12 = 6 (left: 6 18) -> 18 / 6 = 3 (left: 3 18)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 18 - 12 = 6 (left: 6 18) -> 18 / 6 = 3 (left: 3 18) -> 3 / 18 = 0.16666666666666666 (left: 0.16666666666666666 18)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "6 18"
                }
            },
            "Step 5": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 18 - 12 = 6 (left: 6 18) -> 6 / 18 = 0.33 (left: 0.33)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 18 - 12 = 6 (left: 6 18) -> 6 / 18 = 0.33 (left: 0.33) -> There is only one possible next step: 0.33 * 3 = 0.99",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "8 * 8 = 64 (left: 10 12 64)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "10 0 12"
                }
            },
            "Step 1": {
                "Step": "8 - 8 = 0 (left: 10 0 12) -> 10 / 0 = undefined (cannot divide by 0)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 8 = 0 (left: 10 0 12) -> 10 / 0 = undefined (cannot divide by 0) -> 5 - 3 = 2 (left: 2 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "10 12 64"
                }
            },
            "Step 3": {
                "Step": "8 * 8 = 64 (left: 10 12 64) -> Input:",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 * 8 = 64 (left: 10 12 64) -> Input: -> There seems to be a duplication in the input provided. Could you please provide a different set of numbers?",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "6 18"
                }
            },
            "Step 5": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 18 - 12 = 6 (left: 6 18) -> 18 - 6 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 18 - 12 = 6 (left: 6 18) -> 18 - 6 = 12 (left: 12) -> 12 + 2 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "0 8"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "8 * 8 = 64 (left: 10 12 64)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "8 12 18"
                }
            },
            "Step 1": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 8 * 12 = 96 (left: 18 96)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 8 * 12 = 96 (left: 18 96) -> 18 + 96 = 114 (left: 114)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "10 12 64"
                }
            },
            "Step 3": {
                "Step": "8 * 8 = 64 (left: 10 12 64) -> 10 * 64 = ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 * 8 = 64 (left: 10 12 64) -> 10 * 64 =  -> 10 * 64 = 640",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "0 8"
                }
            },
            "Step 5": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 18 - 12 = 6 (left: 6 18) -> 6 * 18 = 108 (left: 108) -> 1 * 0 * 8 = 0 (left: 0 8) -> 0 + 8 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "3 54"
                }
            },
            "Step 6": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 18 - 12 = 6 (left: 6 18) -> 18 / 6 = 3 (left: 3 18) -> 18 * 3 = 54 (left: 3 54) -> 54 - 3 = 51 (left: 51)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "3 54"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "10 + 8 = 18 (left: 8 12 18)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "8 8 10 12"
                }
            },
            "Step 1": {
                "Step": "10 + 8 = 18 (left: 8 12 18)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 18 - 12 = 6 (left: 6 18)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "8 12 18"
                }
            },
            "Step 3": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 8 + 12 = 20 (left: 18 20)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 8 + 12 = 20 (left: 18 20) -> 20 * 18 = 360 (left: 360)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "3 54"
                }
            },
            "Step 5": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 18 - 12 = 6 (left: 6 18) -> 18 / 6 = 3 (left: 3 18) -> 18 * 3 = 54 (left: 3 54) -> 54 / 3 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "0 8"
                }
            },
            "Step 6": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 18 - 12 = 6 (left: 6 18) -> 6 * 18 = 108 (left: 108) -> 1 * 0 * 8 = 0 (left: 0 8) -> 0 * 8 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "0 8"
                }
            }
        },
        "Input": "8 8 10 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "962": {
        "puzzle": "1 3 8 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 3 8 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "1 * 3 = 3 (left: 3 8 13) -> 8 - 3 = 5 (left: 5 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 * 3 = 3 (left: 3 8 13) -> 8 - 3 = 5 (left: 5 13) -> 13 - 5 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 3": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 + 8 = 11 (left: 11 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 + 8 = 11 (left: 11 12) -> 11 - 12 = -1 (left: -1)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 / 1 = 13 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: 3 * (8 + 13 / 1) = 24 -> Input: 2 3 5 5\nSteps:\n3 + 5 = 8 (left: 2 8 5)\n8 * 2 = 16 (left: 16 5)\n16 + 5 = 21 (left: 21)\n21 + 3 = 24\nAnswer: ((2 + 3) * 8) + 5 = 24",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "13 / 1 = 13 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: 3 * (8 + 13 / 1) = 24 -> Input: 2 3 5 7\nSteps:\n2 * 7 = 14 (left: 3 5 14)\n5 + 3 = 8 (left: 8 14)\n14 - 8 = 6 (left: 6 24)\n6 * 24 = 24\nAnswer: ((2 * 7) - (5 + 3)) * 24 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 4 8 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 8 13"
                }
            },
            "Step 1": {
                "Step": "13 + 1 = 14 (left: 3 8 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 + 1 = 14 (left: 3 8 14) -> 14 + 3 = 17 (left: 8 14 17)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 8 "
                }
            },
            "Step 3": {
                "Step": "13 / 1 = 13 (left: 3 8  -> 8 / 3 \u2248 2.67 (left: 2.67)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 / 1 = 13 (left: 3 8  -> 8 / 3 \u2248 2.67 (left: 2.67) -> There are no possible next steps for the input 2.67.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> There are no possible next steps with the input 36.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> There are no possible next steps with the input 36. -> None",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "8 - 3 = 5 (left: 1 5 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 1": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12) -> 24 / 12 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 3": {
                "Step": "3 * 1 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 1 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 + 13 = 37 (left: 37)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 / 1 = 13 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: 3 * (8 + 13 / 1) = 24 -> Input: 2 3 4 6\nSteps:\n2 * 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 * 2 = 20 (left: 20)\n20 + 4 = 24\nAnswer: ((2 * 3) + 4) + 6 = 24",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "36"
                }
            },
            "Step 6": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> 36 + 2 = 38 (left: 38)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 3 8 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 1": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 - 8",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 - 8 -> 3 - 8 = -5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 3": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12) -> 24 * 12 = 288 (left: 288)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> 36 / 2 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "13 / 1 = 13 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: 3 * (8 + 13 / 1) = 24 -> Input: 2 3 4 5\nSteps:\n3 * 4 = 12 (left: 2 5 12)\n2 * 5 = 10 (left: 10 12)\n10 + 12 = 22 (left: 22)\n22 + 2 = 24 (left: 24)\nAnswer: ((2 * 5) + (3 * 4)) + 2 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 * 1 = 3 (left: 3 8 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 1": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 - 3 = 5 (left: 5 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 - 3 = 5 (left: 5 12) -> 5 / 12 = 0.4167 (left: 0.4167)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 8 "
                }
            },
            "Step 3": {
                "Step": "13 / 1 = 13 (left: 3 8  -> 8 / 3 = 2.67 (left: 2.67 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 / 1 = 13 (left: 3 8  -> 8 / 3 = 2.67 (left: 2.67 8) -> 5 + 7 = 12 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 / 1 = 13 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: 3 * (8 + 13 / 1) = 24 -> Input: 2 3 5 6\nSteps:\n3 * 5 = 15 (left: 2 6 15)\n6 - 2 = 4 (left: 4 15)\n4 * 15 = 60 (left: 60)\n60 / 2.5 = 24 (left: 24)\nAnswer: ((3 * 5) - 2) * (6 - 4) = 24",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "13 / 1 = 13 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: 3 * (8 + 13 / 1) = 24 -> Input: 2 3 4 6\nSteps:\n3 * 4 = 12 (left: 2 6 12)\n2 * 6 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (2 * 6) + (3 * 4) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "8 - 1 = 7 (left: 3 7 ",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 8 "
                }
            },
            "Step 1": {
                "Step": "13 / 1 = 13 (left: 3 8  -> 4 + 5 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 / 1 = 13 (left: 3 8  -> 4 + 5 = 9 (left: 9) -> 9 * 9 = 81 (left: 81)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 3": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 / 1 = 13 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: 3 * (8 + 13 / 1) = 24 -> Input: 2 3 5 7\nSteps:\n5 + 7 = 12 (left: 2 3 12)\n3 * 2 = 6 (left: 6 12)\n12 + 6 = 18 (left: 18)\n18 + 5 = 24 (left: 24)\nAnswer: ((5 + 7) + (3 * 2)) + 18 = 24",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "13 / 1 = 13 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: 3 * (8 + 13 / 1) = 24 -> Input: 3 5 6 7\nSteps:\n3 * 7 = 21 (left: 5 6 21)\n21 + 5 = 26 (left: 6 26)\n26 - 6 = 20 (left: 20)\nAnswer: ((3 * 7) + 5) - 6 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "3 * 1 = 3 (left: 3 8 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 1": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4) -> 4 - 3 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 3": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 / 3 = 2.66667 (left: 2.66667 8 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 / 3 = 2.66667 (left: 2.66667 8 12) -> 8 - 2.66667 = 5.33333 (left: 5.33333 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 / 1 = 13 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: 3 * (8 + 13 / 1) = 24 -> Input: 2 3 6 7\nSteps:\n6 + 7 = 13 (left: 2 3 13)\n13 - 3 = 10 (left: 2 10)\n10 * 2 = 20 (left: 20)\n20 + 4 = 24 (left: 24)\nAnswer: ((6 + 7) - 3) * 2 + 4 = 24",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "13 / 1 = 13 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: 3 * (8 + 13 / 1) = 24 -> Input: 7 3 5 2\nSteps:\n7 - 3 = 4 (left: 4 5 2)\n5 - 2 = 3 (left: 4 3)\n4 * 3 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((7 - 3) * (5 - 2)) * 2 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "1 * 3 = 3 (left: 3 8 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 1": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 / 3 = 2.67 (left: 2.67 8 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 / 3 = 2.67 (left: 2.67 8 12) -> 8 / 2.67 \u2248 2.99 (left: 12 2.99)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 8 "
                }
            },
            "Step 3": {
                "Step": "13 / 1 = 13 (left: 3 8  -> 8 / 3 = 2.66666666667 (left: 2.66666666667)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 / 1 = 13 (left: 3 8  -> 8 / 3 = 2.66666666667 (left: 2.66666666667) -> There are no possible next steps with the number 2.66666666667.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 / 1 = 13 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: 3 * (8 + 13 / 1) = 24 -> Input: 2 3 5 7\nSteps:\n3 + 7 = 10 (left: 2 5 10)\n10 - 5 = 5 (left: 2 5)\n5 * 2 = 10 (left: 10)\n10 * 10 = 24 (left: 24)\nAnswer: (2 * 5) * (3 + 7) = 24",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "36"
                }
            },
            "Step 6": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 3 8 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "1 * 3 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 * 3 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5) -> 3 * 5 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 3": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 + 8 = 11 (left: 11 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 + 8 = 11 (left: 11 12) -> 11 / 12 = 0.9166666666666666 (left: 0.9166666666666666)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> There are no possible next steps with the input of 36.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> There are no possible next steps with the input of 36. -> There are no possible next steps with the input of 36.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "13 / 1 = 13 (left: 3 8 ",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "1 * 3 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 * 3 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 / 13 = 1.846 (left: 1.846)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 8 "
                }
            },
            "Step 3": {
                "Step": "13 / 1 = 13 (left: 3 8  -> 3 * 8 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 / 1 = 13 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: 3 * (8 + 13 / 1) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> 36 / 2 = 18 -> 36 / 3 = 12 (left: 12)",
                "Pruning": "NA"
            }
        },
        "Input": "1 3 8 13",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            }
        ]
    },
    "963": {
        "puzzle": "4 4 7 10",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 4 7 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 10"
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 4 4 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 4 4 3) -> 3 * 4 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 7 * 8 = 56 (left: 10 56)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 7 * 8 = 56 (left: 10 56) -> 10 + 56 = 66 (left: 66)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 + 4) * (10 - 7) = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 7 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 10"
                }
            },
            "Step 1": {
                "Step": "7 + 4 = 11 (left: 4 10 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 4 = 11 (left: 4 10 11) -> Input:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 3": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 4 - 3 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 4 - 3 = 1 (left: 1) -> 1 + 1 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 + 4) * (10 - 7) = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 7 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 5 * 10 = 50 (left: 50)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 5 * 10 = 50 (left: 50) -> 50 + 2 = 52 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 3": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 3 / 4 = 0.75 (left: 0.75)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 3 / 4 = 0.75 (left: 0.75) -> 0.75 + 2 = 2.75",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 + 4) * (10 - 7) = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 - 4 = 3 (left: 3 4 ",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 8 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 8 10) -> 10 - 1 = 9 (left: 8 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 3": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 9 / 5 = 1",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 9 / 5 = 1 -> 9 * 5 = 45 (left: 45)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 + 4) * (10 - 7) = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 + 4 = 8 (left: 7 8 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 10"
                }
            },
            "Step 1": {
                "Step": "4 / 4 = 1 (left: 1 7 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 4 = 1 (left: 1 7 10) -> ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 3": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 3 + 4 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 3 + 4 = 7 (left: 7) -> 7 + 8 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 + 4) * (10 - 7) = 24"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "7 - 4 = 3 (left: 3 4 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 10"
                }
            },
            "Step 1": {
                "Step": "7 - 4 = 3 (left: 3 4 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 4 = 3 (left: 3 4 10) -> 3 + 4 = 7 (left: 7 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 3": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 3 * 4 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 * 8 = 96 (left: 8 96)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 + 4) * (7 - 10) = 24"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "7 - 4 = 3 (left: 3 4 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 7 * 8 = 56 (left: 10 56)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 7 * 8 = 56 (left: 10 56) -> 10 + 56 = 66 (left: 66)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 3": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 3 * 4 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 + 2 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 + 4) * (10 - 7) = 24"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "7 - 4 = 3 (left: 3 4 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 3 + 4 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 3 + 4 = 7 (left: 7) -> 7 + 8 = 15 (left: 8 15)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 3": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 4 / 3 = 1.33 (left: 1.33)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 4 / 3 = 1.33 (left: 1.33) -> There is only one number given, so there are no possible next steps to perform any operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 + 4) * (10 - 7) = 24"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 7 16 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 + 4) * (10 - 7) = 24"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "4 + 4 = 8 (left: 7 8 10)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 4 / 3 = 1.33 (left: 1.33)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 4 / 3 = 1.33 (left: 1.33) -> There is only one number provided, so there are no possible next steps for calculations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 10"
                }
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 7 8 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 7 * 8 = 56 (left: 10 56)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 + 4) * (10 - 7) = 24"
            }
        },
        "Input": "4 4 7 10",
        "Verifications": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            }
        ]
    },
    "964": {
        "puzzle": "1 7 10 13",
        "Agent 0": {
            "Step 0": {
                "Step": "7 - 1 = 6 (left: 6 10 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 10 13"
                }
            },
            "Step 1": {
                "Step": "7 - 1 = 6 (left: 6 10 13) -> Input: 3 9",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 1 = 6 (left: 6 10 13) -> Input: 3 9 -> Input: 1 5 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 10 13"
                }
            },
            "Step 3": {
                "Step": "7 - 1 = 6 (left: 6 10 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 1 = 6 (left: 6 10 13) -> 13 + 6 = 19 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "1 11"
                }
            },
            "Step 5": {
                "Step": "10 + 1 = 11 (left: 7 11 13) -> 13 / 7 = 1 (left: 1 11) -> 1 + 11 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 + 1 = 11 (left: 7 11 13) -> 13 / 7 = 1 (left: 1 11) -> 1 + 11 = 12 (left: 12) -> 12 * 2 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "There are no possible next steps with the input 11."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 7 10 ",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 10 13"
                }
            },
            "Step 1": {
                "Step": "10 - 1 = 9 (left: 7 9 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 1 = 9 (left: 7 9 13) -> 9 + 13 = 22 (left: 7 22)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5) -> 7 - 5 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "1 11"
                }
            },
            "Step 5": {
                "Step": "10 + 1 = 11 (left: 7 11 13) -> 13 / 7 = 1 (left: 1 11) -> 1 + 11 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 + 1 = 11 (left: 7 11 13) -> 13 / 7 = 1 (left: 1 11) -> 1 + 11 = 12 (left: 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "There are no possible next steps with the input 11."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 + 1 = 11 (left: 7 11 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 - 1 = 5 (",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 - 1 = 5 ( -> 6 - 1 = 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 1 + 6 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 1 + 6 = 7 (left: 7) -> 7 + 8 = 15 (left: 8 15)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "1 11"
                }
            },
            "Step 5": {
                "Step": "10 + 1 = 11 (left: 7 11 13) -> 13 / 7 = 1 (left: 1 11) -> 1 * 11 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 + 1 = 11 (left: 7 11 13) -> 13 / 7 = 1 (left: 1 11) -> 1 * 11 = 11 (left: 11) -> 11 + 2 = 13",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 7 10 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 10 13"
                }
            },
            "Step 1": {
                "Step": "7 - 1 = 6 (left: 6 10 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 1 = 6 (left: 6 10 13) -> 10 + 13 = 23 (left: 6 23)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "8 10 13"
                }
            },
            "Step 3": {
                "Step": "1 + 7 = 8 (left: 8 10 13) -> 10 / 8 = 1.25 (left: 1.25 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 7 = 8 (left: 8 10 13) -> 10 / 8 = 1.25 (left: 1.25 13) -> 1.25 * 13 = 16.25 (left: 16.25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "1 11"
                }
            },
            "Step 5": {
                "Step": "10 + 1 = 11 (left: 7 11 13) -> 13 / 7 = 1 (left: 1 11) -> 1 + 11 = 12 (left: 12) ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 + 1 = 11 (left: 7 11 13) -> 13 / 7 = 1 (left: 1 11) -> 1 + 11 = 12 (left: 12)  -> 12 * 2 = 24 (left: 8 24)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 - 7 = 6 (left: 1 6 ",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 10 13"
                }
            },
            "Step 1": {
                "Step": "1 + 7 = 8 (left: 8 10 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 7 = 8 (left: 8 10 13) -> 8 - 10 = -2 (left: -2 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "1 11"
                }
            },
            "Step 3": {
                "Step": "10 + 1 = 11 (left: 7 11 13) -> 13 / 7 = 1 (left: 1 11) -> 1 * 11 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 + 1 = 11 (left: 7 11 13) -> 13 / 7 = 1 (left: 1 11) -> 1 * 11 = 11 (left: 11) -> There are no possible next steps with the input 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "1 11"
                }
            },
            "Step 5": {
                "Step": "10 + 1 = 11 (left: 7 11 13) -> 13 / 7 = 1 (left: 1 11) -> 1 * 11 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 + 1 = 11 (left: 7 11 13) -> 13 / 7 = 1 (left: 1 11) -> 1 * 11 = 11 (left: 11) -> 11 / 2 = 5.5 (left: 5.5)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "There are no possible next steps with the input 11."
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "1 * 7 = 7 (left: 7 10 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 1 + 6 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 1 + 6 = 7 (left: 7) -> 7 / 8 = 0.875 (left: 0.875 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 1 * 6 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 1 * 6 = 6 (left: 6) -> 6 + 8 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "1 11"
                }
            },
            "Step 5": {
                "Step": "10 + 1 = 11 (left: 7 11 13) -> 13 / 7 = 1 (left: 1 11) -> 1 * 11 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 + 1 = 11 (left: 7 11 13) -> 13 / 7 = 1 (left: 1 11) -> 1 * 11 = 11 (left: 11) -> There are no possible next steps with the input of 11.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "7 - 1 = 6 (left: 6 10 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 10 13"
                }
            },
            "Step 1": {
                "Step": "10 + 1 = 11 (left: 7 11 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 1 = 11 (left: 7 11 13) -> 13 / 7 = 1 (left: 1 11)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 10 13"
                }
            },
            "Step 3": {
                "Step": "7 + 10 = 17 (left: 1 17 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 + 10 = 17 (left: 1 17 13) -> 17 - 13 = 4 (left: 1 4 13)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "1 11"
                }
            },
            "Step 5": {
                "Step": "10 + 1 = 11 (left: 7 11 13) -> 13 / 7 = 1 (left: 1 11) -> 1 * 11 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 + 1 = 11 (left: 7 11 13) -> 13 / 7 = 1 (left: 1 11) -> 1 * 11 = 11 (left: 11) -> There are no possible next steps with the number 11.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "7 / 1 = 7 (left: 7 10 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 10 13"
                }
            },
            "Step 1": {
                "Step": "7 - 1 = 6 (left: 6 10 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 1 = 6 (left: 6 10 13) -> 6 * 10 = 60 (left: 60 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 10 13"
                }
            },
            "Step 3": {
                "Step": "13 - 1 = 12 (left: 7 10 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 1 = 12 (left: 7 10  -> 7 + 10 = 17 (left: 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "1 11"
                }
            },
            "Step 5": {
                "Step": "10 + 1 = 11 (left: 7 11 13) -> 13 / 7 = 1 (left: 1 11) -> 1 + 11 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 + 1 = 11 (left: 7 11 13) -> 13 / 7 = 1 (left: 1 11) -> 1 + 11 = 12 (left: 12) -> 12 + 8 = 20",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "10 + 1 = 11 (left: 7 11 13)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5) -> No possible next steps with just one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 10 13"
                }
            },
            "Step 3": {
                "Step": "10 - 1 = 9 (left: 9 7 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 1 = 9 (left: 9 7  -> 9 / 7 = 1.2857142857142858 (left: 1.2857142857142858)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "1 11"
                }
            },
            "Step 5": {
                "Step": "10 + 1 = 11 (left: 7 11 13) -> 13 / 7 = 1 (left: 1 11) -> 1 + 11 = 12 (left: 12) ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 + 1 = 11 (left: 7 11 13) -> 13 / 7 = 1 (left: 1 11) -> 1 + 11 = 12 (left: 12)  -> 12 * 2 = 24 (left: 8 24)",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "1 + 7 = 8 (left: 8 10 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 10 13"
                }
            },
            "Step 1": {
                "Step": "1 * 7 = 7 (left: 7 10 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 * 7 = 7 (left: 7 10 13) -> 13 - 10 = 3 (left: 3 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5) ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5)  -> 5 / 5 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "1 11"
                }
            },
            "Step 5": {
                "Step": "10 + 1 = 11 (left: 7 11 13) -> 13 / 7 = 1 (left: 1 11) -> 1 + 11 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 + 1 = 11 (left: 7 11 13) -> 13 / 7 = 1 (left: 1 11) -> 1 + 11 = 12 (left: 12) -> 12 * 8 = 96 (left: 8 96)",
                "Pruning": null
            }
        },
        "Input": "1 7 10 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "965": {
        "puzzle": "1 9 10 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 9 10 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "9 9 13"
                }
            },
            "Step 1": {
                "Step": "10 - 1 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 4 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 1 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 4 13) -> 4 + 13 = 17 (left: 17)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 9 10 13"
                }
            },
            "Step 3": {
                "Step": "10 + 3 = 13 (left: 1 9 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 + 3 = 13 (left: 1 9  -> 9 / 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "10 - 1 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4) -> 9 * 4 = 36 (left: 36) -> 36 - 2 = 34 (left: 34)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "36"
                }
            },
            "Step 6": {
                "Step": "10 - 1 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4) -> 9 * 4 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 1 4 ",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "1 9 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 1 9  -> 9 / 1 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 1 9  -> 9 / 1 = 9 (left: 9) -> 9 - 8 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 4 "
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 4 * 1 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 4 * 1 = 4 (left: 4) -> 4 + 4 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "10 - 1 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4) -> 9 * 4 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 1 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4) -> 9 * 4 = 36 (left: 36) -> 36 / 2 = 18 -> 100 - 5 = 95",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 / 1 = 9 (left: 10 9 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "9 9 13"
                }
            },
            "Step 1": {
                "Step": "10 - 1 = 9 (left: 9 9 13) -> 9 / 9 = 1 (left: 1 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 1 = 9 (left: 9 9 13) -> 9 / 9 = 1 (left: 1 13) -> 1 * 13 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 9 10 13"
                }
            },
            "Step 3": {
                "Step": "13 - 10 = 3 (left: 1 9 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 10 = 3 (left: 1 9  -> 1 * 9 = 9 (left: 9 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "10 - 1 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4) -> 9 * 4 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 1 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4) -> 9 * 4 = 36 (left: 36) -> 36 / 2 = 18 -> 18 - 8 = 10 (left: 8 10)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "1 + 9 = 10 (left: 10 10 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 4 / 1 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 4 / 1 = 4 (left: 4) -> There are no possible next steps with just the number 4.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "1 9 "
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 1 9  -> 1 + 9 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 1 9  -> 1 + 9 = 10 (left: 10) -> 10 / 8 = 1.25 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "10 - 1 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4) -> 9 * 4 = 36 (left: 36) -> 36 - 8 = 28 (left: 28)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "36"
                }
            },
            "Step 6": {
                "Step": "10 - 1 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4) -> 9 * 4 = 36 (left: 36) -> There are no possible next steps with just the number 36.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 * 9 = 9 (left: 9 10 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "9 9 13"
                }
            },
            "Step 1": {
                "Step": "10 - 1 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 1 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4) -> 9 * 4 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 4 "
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 1 * 4 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 1 * 4 = 4 (left: 4) -> 4 * 8 = 32 (left: 32)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "10 - 1 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4) -> 9 * 4 = 36 (left: 36) -> 36 + 8 = 44",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 1 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4) -> 9 * 4 = 36 (left: 36) -> 36 + 8 = 44 -> 8 / 36 = 0.2222 (left: 0.2222 44)",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "9 + 1 = 10 (left: 10 10 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 9 10 13"
                }
            },
            "Step 1": {
                "Step": "10 + 1 = 11 (left: 9 11 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 1 = 11 (left: 9 11 13) -> 11 + 13 = 24 (left: 9 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 9 10 13"
                }
            },
            "Step 3": {
                "Step": "1 + 9 = 10 (left: 10 10 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 9 = 10 (left: 10 10 13) -> 10 + 13 = 23 (left: 10 23)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "10 - 1 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4) -> 9 * 4 = 36 (left: 36) -> 36 / 2 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "36"
                }
            },
            "Step 6": {
                "Step": "10 - 1 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4) -> 9 * 4 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "9 - 1 = 8 (left: 8 10 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "1 9 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 1 9  -> 1 * 9 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 1 9  -> 1 * 9 = 9 (left: 9) -> 8 + 9 = 17 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "10 - 1 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4) -> 9 * 4 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 1 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4) -> 9 * 4 = 36 (left: 36) -> 36 / 2 = 18 -> 36 - 2 = 34 (left: 34)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "36"
                },
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "10 - 1 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4) -> 9 * 4 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 1 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4) -> 9 * 4 = 36 (left: 36) -> 36 / 2 = 18 -> 18 + 18 = 36 (left: 18 18)",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "1 + 9 = 10 (left: 10 10 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "9 9 13"
                }
            },
            "Step 1": {
                "Step": "10 - 1 = 9 (left: 9 9 13) -> 9 / 9 = 1 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 1 = 9 (left: 9 9 13) -> 9 / 9 = 1 (left: -> 9 * 9 = 81 (left: 81)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "10 - 1 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4) -> 9 * 4 = 36 (left: 36) -> 36 + 8 = 44",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 1 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4) -> 9 * 4 = 36 (left: 36) -> 36 + 8 = 44 -> 36 * 8 = 288 (left: 288 44)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "10 - 1 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4) -> 9 * 4 = 36 (left: 36) -> 36 + 1 = 37",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 1 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4) -> 9 * 4 = 36 (left: 36) -> 36 + 1 = 37 -> 36 / 1 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "No possible next steps as there is only one number in the input."
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "10 - 1 = 9 (left: 9 9 13)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "1 9 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 1 9  -> 1 + 9 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 1 9  -> 1 + 9 = 10 (left: 10) -> 10 + 8 = 18 (left: 8 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 9 10 13"
                }
            },
            "Step 3": {
                "Step": "1 + 9 = 10 (left: 10 10 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 9 = 10 (left: 10 10 13) -> 13 - 10 = 3 (left:",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "10 - 1 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4) -> 9 * 4 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 1 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4) -> 9 * 4 = 36 (left: 36) -> 36 / 2 = 18 -> 18 - 8 = 10 (left: 8 10)",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 1 9 ",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 9 10 13"
                }
            },
            "Step 1": {
                "Step": "1 + 9 = 10 (left: 10 10 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 9 = 10 (left: 10 10 13) -> 10 - 10 = 0 (left: 0 13)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "10 - 1 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4) -> 9 * 4 = 36 (left: 36) -> No possible next steps as there is only one number in the input.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 1 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4) -> 9 * 4 = 36 (left: 36) -> No possible next steps as there is only one number in the input. -> No possible next steps as there is only one number in the input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "10 - 1 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4) -> 9 * 4 = 36 (left: 36) -> There are no possible next steps for the number 36 as it is already a single number.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 1 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4) -> 9 * 4 = 36 (left: 36) -> There are no possible next steps for the number 36 as it is already a single number. -> There are no possible next steps for the number 36 as it is already a single number.",
                "Pruning": null
            }
        },
        "Input": "1 9 10 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "966": {
        "puzzle": "3 3 4 11",
        "Agent 0": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 3 7 4)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 4 11"
                }
            },
            "Step 1": {
                "Step": "4 + 3 = 7 (left: 3 7 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 3 = 7 (left: 3 7 11) -> 11 - 7 = 4 (left: 3 4)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11) -> 10 / 11 \u2248 0.9091 (left: 0.9091)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1 8"
                }
            },
            "Step 5": {
                "Step": "11 - 3 = 8 (left: 3 4 8) -> 4 - 3 = 1 (left: 1 8) -> 1 + 8 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 3 = 8 (left: 3 4 8) -> 4 - 3 = 1 (left: 1 8) -> 1 + 8 = 9 (left: 9) -> There are no possible next steps with the input 9.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 3 7 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 3 4  -> 3 * 4 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 / 2 = 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 3": {
                "Step": "4 * 3 = 12 (left: 3 12  -> 4 + 9 = 13 (left: ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 * 3 = 12 (left: 3 12  -> 4 + 9 = 13 (left:  -> It seems like you did not provide any input. Could you please provide the numbers you want to work with?",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "1 8"
                }
            },
            "Step 5": {
                "Step": "11 - 3 = 8 (left: 3 4 8) -> 4 - 3 = 1 (left: 1 8) -> 1 * 8 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 3 = 8 (left: 3 4 8) -> 4 - 3 = 1 (left: 1 8) -> 1 * 8 = 8 (left: 8) -> 8 + 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "1.3333333333333333 / 2 = 0.6666666666666667"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 4 6 11)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 + 11 = 17 (left: 4 17)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 + 11 = 17 (left: 4 17) -> 4 * 17 = 68 (left: 68)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 - 4 = 2 (left: 2 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 - 4 = 2 (left: 2 11) -> 2 + 11 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1 8"
                }
            },
            "Step 5": {
                "Step": "11 - 3 = 8 (left: 3 4 8) -> 4 - 3 = 1 (left: 1 8) -> 1 * 8 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 3 = 8 (left: 3 4 8) -> 4 - 3 = 1 (left: 1 8) -> 1 * 8 = 8 (left: 8) -> None, as there is only one number left.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 4 6 11)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 4 11"
                }
            },
            "Step 1": {
                "Step": "11 / 3 = 3 (left: 3 4 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 / 3 = 3 (left: 3 4  -> 4 / 3 = 1.33 (left: 1.33)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "1 8"
                }
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 3 4 8) -> 4 - 3 = 1 (left: 1 8) -> 1 * 8 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 3 = 8 (left: 3 4 8) -> 4 - 3 = 1 (left: 1 8) -> 1 * 8 = 8 (left: 8) -> 8 / 8 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "1 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1 8"
                }
            },
            "Step 5": {
                "Step": "11 - 3 = 8 (left: 3 4 8) -> 4 - 3 = 1 (left: 1 8) -> 8 - 1 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 3 = 8 (left: 3 4 8) -> 4 - 3 = 1 (left: 1 8) -> 8 - 1 = 7 (left: 7) -> 7 - 8 = -1 (left: -1)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "1.3333333333333333 / 2 = 0.6666666666666667"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 3 7 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 7 11"
                }
            },
            "Step 1": {
                "Step": "11 - 4 = 7 (left: 3 7 11) -> 11 / 3",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 4 = 7 (left: 3 7 11) -> 11 / 3 -> 11 * 3 = 33 (left: 3 33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "3 4"
                }
            },
            "Step 3": {
                "Step": "4 + 3 = 7 (left: 3 7 11) -> 11 - 7 = 4 (left: 3 4) -> 3 + 4 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 3 = 7 (left: 3 7 11) -> 11 - 7 = 4 (left: 3 4) -> 3 + 4 = 7 (left: 7) -> 7 + 8 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "1 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "1 8"
                }
            },
            "Step 5": {
                "Step": "11 - 3 = 8 (left: 3 4 8) -> 4 - 3 = 1 (left: 1 8) -> 8 - 1 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 3 = 8 (left: 3 4 8) -> 4 - 3 = 1 (left: 1 8) -> 8 - 1 = 7 (left: 7) -> 7 - 2 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "1.3333333333333333 / 2 = 0.6666666666666667"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "11 - 3 = 8 (left: 3 4 8)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 3 4  -> 3 * 4 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 - 8 = 4 (left: 8 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 3": {
                "Step": "4 * 3 = 12 (left: 3 12  -> 3 * 12 = 36 (left: 36)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 * 3 = 12 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> There is only one number given, so there are no possible next steps to calculate.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "1 8"
                }
            },
            "Step 5": {
                "Step": "11 - 3 = 8 (left: 3 4 8) -> 4 - 3 = 1 (left: 1 8) -> 1 + 8 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 3 = 8 (left: 3 4 8) -> 4 - 3 = 1 (left: 1 8) -> 1 + 8 = 9 (left: 9) -> 9 - ",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "11 - 3 = 8 (left: 3 4 ",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 1": {
                "Step": "4 * 3 = 12 (left: 3 12  -> 3 * 12 = 36 (left: 36)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 3 = 12 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 3": {
                "Step": "4 * 3 = 12 (left: 3 12  -> 12 / 3 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 * 3 = 12 (left: 3 12  -> 12 / 3 = 4 (left: 4) -> There is only one possible next step: 4 + 4 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "1 8"
                }
            },
            "Step 5": {
                "Step": "11 - 3 = 8 (left: 3 4 8) -> 4 - 3 = 1 (left: 1 8) -> 1 + 8 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 3 = 8 (left: 3 4 8) -> 4 - 3 = 1 (left: 1 8) -> 1 + 8 = 9 (left: 9) -> There is only one possible next step: 9.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "11 - 3 = 8 (left: 3 4 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 / 4 = 1.5 (left: 1.5 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 / 4 = 1.5 (left: 1.5 11) -> 1.5 + 11 = 12.5 (left: 12.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 3": {
                "Step": "4 * 3 = 12 (left: 3 12  -> 12 - 3 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 * 3 = 12 (left: 3 12  -> 12 - 3 = 9 (left: 9) -> 8 + 9 = 17 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "1 8"
                }
            },
            "Step 5": {
                "Step": "11 - 3 = 8 (left: 3 4 8) -> 4 - 3 = 1 (left: 1 8) -> 1 + 8 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 3 = 8 (left: 3 4 8) -> 4 - 3 = 1 (left: 1 8) -> 1 + 8 = 9 (left: 9) -> There are no possible next steps with just the number 9.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "4 * 3 = 12 (left: 3 12 ",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 4 11"
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 3 4 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 3 4 8) -> 4 - 3 = 1 (left: 1 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "3 4"
                }
            },
            "Step 3": {
                "Step": "4 + 3 = 7 (left: 3 7 11) -> 11 - 7 = 4 (left: 3 4) -> 4 / 3 = 1.3333333333333333 (left: 1.3333333333333333)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 3 = 7 (left: 3 7 11) -> 11 - 7 = 4 (left: 3 4) -> 4 / 3 = 1.3333333333333333 (left: 1.3333333333333333) -> 1.3333333333333333 / 2 = 0.6666666666666667",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "1 8"
                }
            },
            "Step 5": {
                "Step": "11 - 3 = 8 (left: 3 4 8) -> 4 - 3 = 1 (left: 1 8) -> 1 + 8 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 3 = 8 (left: 3 4 8) -> 4 - 3 = 1 (left: 1 8) -> 1 + 8 = 9 (left: 9) -> There are no possible next steps with the input 9.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 3 7 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 3 4  -> 5 + 9 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 3 4  -> 5 + 9 = 14 (left: 14) -> 14 + 14 = 28",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "1 8"
                }
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 3 4 8) -> 4 - 3 = 1 (left: 1 8) -> 8 - 1 = 7 (left: 7 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 3 = 8 (left: 3 4 8) -> 4 - 3 = 1 (left: 1 8) -> 8 - 1 = 7 (left: 7 8) -> 7 + 8 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "1 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "1 8"
                }
            },
            "Step 5": {
                "Step": "11 - 3 = 8 (left: 3 4 8) -> 4 - 3 = 1 (left: 1 8) -> 1 + 8 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 3 = 8 (left: 3 4 8) -> 4 - 3 = 1 (left: 1 8) -> 1 + 8 = 9 (left: 9) -> 9 / 8 = 1.125 (left: 1.125)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "1.3333333333333333 / 2 = 0.6666666666666667"
                }
            }
        },
        "Input": "3 3 4 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "967": {
        "puzzle": "2 5 7 7",
        "Agent 0": {
            "Step 0": {
                "Step": "5 + 7 = 12 (left: 2 7 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 7 7"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 5 7 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 5 7 7) -> 7 / 5 = 1.4 (left: 1.4 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 7 7"
                }
            },
            "Step 3": {
                "Step": "2 + 5 = 7 (left: 7 7 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 5 = 7 (left: 7 7 7) -> 7 / 7 = 1 (left: 1 7)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1 7"
                }
            },
            "Step 5": {
                "Step": "2 + 5 = 7 (left: 7 7 7) -> 7 / 7 = 1 (left: 1 7) -> 7 - 1 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 5 = 7 (left: 7 7 7) -> 7 / 7 = 1 (left: 1 7) -> 7 - 1 = 6 (left: 6) -> 6 + 8 = 14 (left: 14)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 - 5 = 2 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3.5 7 7"
                }
            },
            "Step 1": {
                "Step": "7 / 2 = 3.5 (left: 3.5 7 7) -> 7 - 3.5 = 3.5 (left: 3.5 7",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 / 2 = 3.5 (left: 3.5 7 7) -> 7 - 3.5 = 3.5 (left: 3.5 7 -> ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 7 10"
                }
            },
            "Step 3": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 / 7 = 1 (left: 1 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 / 7 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3 27"
                }
            },
            "Step 5": {
                "Step": "5 + 7 = 12 (left: 2 7 12) -> 12 - 7 = 5 (left: 2 5) -> 9 / 3 = 3 (left: 3 27) -> 27 / 3 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "3 27"
                }
            },
            "Step 6": {
                "Step": "5 + 7 = 12 (left: 2 7 12) -> 12 - 7 = 5 (left: 2 5) -> 9 / 3 = 3 (left: 3 27) -> 3 ^ 27 = 7625597484987 (left: 7625597484987)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 5 7 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 7 10"
                }
            },
            "Step 1": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 * 7 = 49 (left: 10 49)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 * 7 = 49 (left: 10 49) -> 49 / 10 = 4.9 (left: 4.9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 7 12"
                }
            },
            "Step 3": {
                "Step": "5 + 7 = 12 (left: 2 7 12) -> 12 - 7 = 5 (left: 2 5)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 7 = 12 (left: 2 7 12) -> 12 - 7 = 5 (left: 2 5) -> 9 / 3 = 3 (left: 3 27)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3 27"
                }
            },
            "Step 5": {
                "Step": "5 + 7 = 12 (left: 2 7 12) -> 12 - 7 = 5 (left: 2 5) -> 9 / 3 = 3 (left: 3 27) -> 27 - 3 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "3 27"
                }
            },
            "Step 6": {
                "Step": "5 + 7 = 12 (left: 2 7 12) -> 12 - 7 = 5 (left: 2 5) -> 9 / 3 = 3 (left: 3 27) -> 27 / 3 = 9 (left: 9 27)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 / 2 = 3.5 (left: 2 5 7)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "2 7 7"
                }
            },
            "Step 1": {
                "Step": "7 - 5 = 2 (left: 2 7 7) -> 7 / 2 = 3.5 (left: 3.5 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 5 = 2 (left: 2 7 7) -> 7 / 2 = 3.5 (left: 3.5 7) -> 7 - 3.5 = 3.5 (left: 3.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 7 7"
                }
            },
            "Step 3": {
                "Step": "2 + 5 = 7 (left: 7 7 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 5 = 7 (left: 7 7 7) -> 7 + 7 = 14 (left: 7 14)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3 27"
                }
            },
            "Step 5": {
                "Step": "5 + 7 = 12 (left: 2 7 12) -> 12 - 7 = 5 (left: 2 5) -> 9 / 3 = 3 (left: 3 27) -> 27 / 3 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "3 27"
                }
            },
            "Step 6": {
                "Step": "5 + 7 = 12 (left: 2 7 12) -> 12 - 7 = 5 (left: 2 5) -> 9 / 3 = 3 (left: 3 27) -> 27 / 3 = 9 (left: 3 9)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 * 5 = 10 (left: 7 7 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 7 10"
                }
            },
            "Step 1": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 / 7 = 1 (left: 1 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 / 7 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3.5 7 7"
                }
            },
            "Step 3": {
                "Step": "7 / 2 = 3.5 (left: 3.5 7 7) -> Input: 4 5 6 7",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 / 2 = 3.5 (left: 3.5 7 7) -> Input: 4 5 6 7 -> 4 * 5 = 20 (left: 6 7 20)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3 27"
                }
            },
            "Step 5": {
                "Step": "5 + 7 = 12 (left: 2 7 12) -> 12 - 7 = 5 (left: 2 5) -> 9 / 3 = 3 (left: 3 27) -> 27 - 3 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "3 27"
                }
            },
            "Step 6": {
                "Step": "5 + 7 = 12 (left: 2 7 12) -> 12 - 7 = 5 (left: 2 5) -> 9 / 3 = 3 (left: 3 27) -> 27 / 3 = 9 (left: 3 9)",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 5 7 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 7 7"
                }
            },
            "Step 1": {
                "Step": "7 / 2 = 3.5 (left: 2 5 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 / 2 = 3.5 (left: 2 5 7) -> 5 - 2 = 3 (left: 3 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 7 7"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 5 7 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 5 7 7) -> 5 / 7 = 0.71 (left: 0.71 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "6 7 20"
                }
            },
            "Step 5": {
                "Step": "7 / 2 = 3.5 (left: 3.5 7 7) -> Input: 4 5 6 7 -> 4 * 5 = 20 (left: 6 7 20) -> 6 - 7 = -1 (left: -1 20)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 / 2 = 3.5 (left: 3.5 7 7) -> Input: 4 5 6 7 -> 4 * 5 = 20 (left: 6 7 20) -> 6 - 7 = -1 (left: -1 20) -> 5 + 5 = 10 (left: 5 10 5)",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "7 - 5 = 2 (left: 2 7 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3.5 7 7"
                }
            },
            "Step 1": {
                "Step": "7 / 2 = 3.5 (left: 3.5 7 7) -> 7 - ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 / 2 = 3.5 (left: 3.5 7 7) -> 7 -  -> 7 - 8 = -1",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 7 7"
                }
            },
            "Step 3": {
                "Step": "2 + 5 = 7 (left: 7 7 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 5 = 7 (left: 7 7 7) -> 7 + 7 = 14 (left: 7 14)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3 27"
                }
            },
            "Step 5": {
                "Step": "5 + 7 = 12 (left: 2 7 12) -> 12 - 7 = 5 (left: 2 5) -> 9 / 3 = 3 (left: 3 27) -> 3 * 27 = 81 (left: 81)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "3 27"
                }
            },
            "Step 6": {
                "Step": "5 + 7 = 12 (left: 2 7 12) -> 12 - 7 = 5 (left: 2 5) -> 9 / 3 = 3 (left: 3 27) -> 27 - 3 = 24 (left: 24 27)",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "7 / 2 = 3.5 (left: 3.5 7 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3.5 7 7"
                }
            },
            "Step 1": {
                "Step": "7 / 2 = 3.5 (left: 3.5 7 7) -> 3.5 + 7 = 10.5 (left: 7 10.5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 / 2 = 3.5 (left: 3.5 7 7) -> 3.5 + 7 = 10.5 (left: 7 10.5) -> 10.5 + ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3.5 7 7"
                }
            },
            "Step 3": {
                "Step": "7 / 2 = 3.5 (left: 3.5 7 7) -> 7 * 3.5 = 24.5 (left: 7 24.5)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 / 2 = 3.5 (left: 3.5 7 7) -> 7 * 3.5 = 24.5 (left: 7 24.5) -> 7 + 24.5 = 31.5 (left: 31.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3 27"
                }
            },
            "Step 5": {
                "Step": "5 + 7 = 12 (left: 2 7 12) -> 12 - 7 = 5 (left: 2 5) -> 9 / 3 = 3 (left: 3 27) -> 3 + 27 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "3 27"
                }
            },
            "Step 6": {
                "Step": "5 + 7 = 12 (left: 2 7 12) -> 12 - 7 = 5 (left: 2 5) -> 9 / 3 = 3 (left: 3 27) -> 3 * 27 = 81 (left: 81)",
                "Pruning": "NA"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "2 + 5 = 7 (left: 7 7 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "2 7 7"
                }
            },
            "Step 1": {
                "Step": "7 - 5 = 2 (left: 2 7 7) -> 7 / 2 = 3.5 (left: 3.5 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 5 = 2 (left: 2 7 7) -> 7 / 2 = 3.5 (left: 3.5 7) -> 10 + 5 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "7 7 7"
                }
            },
            "Step 3": {
                "Step": "2 + 5 = 7 (left: 7 7 7) -> 7 / 7 = 1 (left: 1 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 5 = 7 (left: 7 7 7) -> 7 / 7 = 1 (left: 1 7) -> 1 + 7 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3 27"
                }
            },
            "Step 5": {
                "Step": "5 + 7 = 12 (left: 2 7 12) -> 12 - 7 = 5 (left: 2 5) -> 9 / 3 = 3 (left: 3 27) -> 3 + 27 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "3 27"
                }
            },
            "Step 6": {
                "Step": "5 + 7 = 12 (left: 2 7 12) -> 12 - 7 = 5 (left: 2 5) -> 9 / 3 = 3 (left: 3 27) -> 27 - 3 = 24 (left: 24)",
                "Pruning": "NA"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "7 / 2 = 3.5 (left: 3.5 7 7)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 7 7"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 5 7 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 5 7 7) -> 7 - 5 = 2 (left: 2 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 7 10"
                }
            },
            "Step 3": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 - 7 = 0 (left: 0 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 - 7 = 0 (left: 0 10) -> 0 + 10 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "6 7 20"
                }
            },
            "Step 5": {
                "Step": "7 / 2 = 3.5 (left: 3.5 7 7) -> Input: 4 5 6 7 -> 4 * 5 = 20 (left: 6 7 20) -> 7 * 6 = 42 (left: 42 20)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 / 2 = 3.5 (left: 3.5 7 7) -> Input: 4 5 6 7 -> 4 * 5 = 20 (left: 6 7 20) -> 7 * 6 = 42 (left: 42 20) -> 42 * 20 = 840 (left: 840)",
                "Pruning": "NA"
            }
        },
        "Input": "2 5 7 7",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "968": {
        "puzzle": "3 9 10 13",
        "Agent 0": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 3 10 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 9 10 13"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 4 - 3 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "10 12 13"
                }
            },
            "Step 3": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 12 = 1 (left: 1 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 12 = 1 (left: 1 13) -> 13 / 1 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "0.8333 13"
                }
            },
            "Step 5": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 10 / 12 = 0.8333 (left: 0.8333 13) -> 0.8333 * 13 = 10.8333 (left: 10.8333)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 10 / 12 = 0.8333 (left: 0.8333 13) -> 0.8333 * 13 = 10.8333 (left: 10.8333) -> There are no possible next steps for the input 10.8333.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 3 10 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 10 13"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 3 10 13) -> 13 - 10 = 3 (left: 3 3 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 3 10 13) -> 13 - 10 = 3 (left: 3 3 13) -> 3 * 3 = 9 (left: 9 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 4 / 3 = 1.33 (left: 1.33)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 4 / 3 = 1.33 (left: 1.33) -> 1.33 / 2 = 0.665 (left: 0.665)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "1 5"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 3 4  -> Input: 5 5 -> 5 / 5 = 1 (left: 1 5) -> 1 + 5 = 6",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 3 4  -> Input: 5 5 -> 5 / 5 = 1 (left: 1 5) -> 1 + 5 = 6 -> 1 - 5 = -4 (left: -4 6)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 + 3 = 13 (left: 9 13 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4  -> Input: 5 5",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4  -> Input: 5 5 -> 5 / 5 = 1 (left: 1 5)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 9 10 13"
                }
            },
            "Step 3": {
                "Step": "13 - 3 = 10 (left: 9 10 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 3 = 10 (left: 9 10  -> 10 - 9 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "6 8"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 / 2 = 6 (left: 6 8) -> 8 / 6 = 1.33333333333 (left: 1.33333333333)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "6 8"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 / 2 = 6 (left: 6 8) -> 8 - 6 = 2 (left: 2)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 + 3 = 13 (left: 9 13 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 9 10 13"
                }
            },
            "Step 1": {
                "Step": "10 + 3 = 13 (left: 9 13 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 3 = 13 (left: 9 13 13) -> 13 - 9 = 4 (left: 4 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 9 10 13"
                }
            },
            "Step 3": {
                "Step": "13 - 3 = 10 (left: 9 10 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 3 = 10 (left: 9 10  -> 9 * 10 = 90 (left: 90)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "0.8333 13"
                }
            },
            "Step 5": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 10 / 12 = 0.8333 (left: 0.8333 13) -> 13 / 0.8333 = 15.6000 (left: 15.6000)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 10 / 12 = 0.8333 (left: 0.8333 13) -> 13 / 0.8333 = 15.6000 (left: 15.6000) -> There is only one number given, so there are no possible next steps to calculate.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 3 4 ",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 9 10 13"
                }
            },
            "Step 1": {
                "Step": "3 + 9 = 12 (left: 10 12 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 10 / 12 = 0.8333 (left: 0.8333 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 9 10 13"
                }
            },
            "Step 3": {
                "Step": "9 - 3 = 6 (left: 6 9 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 3 = 6 (left: 6 9  -> 15 / 2 = 7.5 (left: 7.5",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "0.8333 13"
                }
            },
            "Step 5": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 10 / 12 = 0.8333 (left: 0.8333 13) -> 0.8333 + 13 = 13.8333 (left: 13.8333)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 10 / 12 = 0.8333 (left: 0.8333 13) -> 0.8333 + 13 = 13.8333 (left: 13.8333) -> There are no possible next steps for the input 13.8333.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "3 + 9 = 12 (left: 10 12 13)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 9 10 13"
                }
            },
            "Step 1": {
                "Step": "3 + 9 = 12 (left: 10 12 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 + 10 = 23 (left: 12 23)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 / 2 = 6 (left: 6 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "0.8333 13"
                }
            },
            "Step 5": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 10 / 12 = 0.8333 (left: 0.8333 13) -> 0.8333 * 13 = 10.8333 (left: 10.8333)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 10 / 12 = 0.8333 (left: 0.8333 13) -> 0.8333 * 13 = 10.8333 (left: 10.8333) -> There are no possible next steps for the input 10.8333.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "10 + 3 = 13 (left: 9 13 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 9 10 13"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 3 10 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 3 10 13) -> 13 - 10 = 3 (left: 3 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "10 12 13"
                }
            },
            "Step 3": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 12 - 10 = 2 (left: 2 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 12 - 10 = 2 (left: 2 13) -> 13 - 2 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "0.8333 13"
                }
            },
            "Step 5": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 10 / 12 = 0.8333 (left: 0.8333 13) -> Input: 5 5",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 10 / 12 = 0.8333 (left: 0.8333 13) -> Input: 5 5 -> 5 - 5 = 0 (left: 0)",
                "Pruning": "NA"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "13 - 3 = 10 (left: 9 10 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 10 13"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 3 10 13) -> 3 * 10 = 30 (left: 30 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 3 10 13) -> 3 * 10 = 30 (left: 30 13) -> 30 * 13 = 390 (left: 390)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "10 12 13"
                }
            },
            "Step 3": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 10 * 12 = 120 (left: 120 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 10 * 12 = 120 (left: 120 13) -> 120 / 13 = 9.23 (left: 9.23)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "0.8333 13"
                }
            },
            "Step 5": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 10 / 12 = 0.8333 (left: 0.8333 13) -> 0.8333 / 13 = 0.0641 (left: 0.0641)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 10 / 12 = 0.8333 (left: 0.8333 13) -> 0.8333 / 13 = 0.0641 (left: 0.0641) -> 0.0641 * 2 = 0.1282",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "3 + 9 = 12 (left: 10 12 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4  -> Possible next steps:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4  -> Possible next steps: -> There are no possible next steps with the given input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 9 10 13"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 + 4 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "6 8"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 / 2 = 6 (left: 6 8) -> 6 * 8 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "6 8"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 / 2 = 6 (left: 6 8) -> 6 + 8 = 14 (left: 8 14)",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 3 10 13)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 4 / 3 = 1.33 (left: 1.33)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 4 / 3 = 1.33 (left: 1.33) -> There is only one number provided (1.33), so there are no possible next steps to calculate.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 4 / 3 = 1.33 (left: 1.33)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 4 / 3 = 1.33 (left: 1.33) -> 1.33 / 2 = 0.665 (left: 0.665)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "0.8333 13"
                }
            },
            "Step 5": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 10 / 12 = 0.8333 (left: 0.8333 13) -> 0.8333 - 13 = -12.1667 (left: -12.1667)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 10 / 12 = 0.8333 (left: 0.8333 13) -> 0.8333 - 13 = -12.1667 (left: -12.1667) -> There are no possible next steps for the input -12.1667 as it is a single number and not an equation or expression.",
                "Pruning": null
            }
        },
        "Input": "3 9 10 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "969": {
        "puzzle": "2 3 4 7",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 4 5 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 4 7"
                }
            },
            "Step 1": {
                "Step": "4 + 3 = 7 (left: 2 7 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 3 = 7 (left: 2 7 7) -> 7 - 2 = 5 (left: 5 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 4 7"
                }
            },
            "Step 3": {
                "Step": "7 / 4 = 1.75 (left: 2 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 / 4 = 1.75 (left: 2  -> 2 + 2 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "7 17"
                }
            },
            "Step 5": {
                "Step": "2 * 3 = 6 (left: 4 6 7) -> 4 * 6 = 24 (left: 7 24) -> 24 - 7 = 17 (left: 7 17) -> 17 / 7 = 2.43 (left: 2.43)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "7 17"
                }
            },
            "Step 6": {
                "Step": "2 * 3 = 6 (left: 4 6 7) -> 4 * 6 = 24 (left: 7 24) -> 24 - 7 = 17 (left: 7 17) -> 7 * 17 = 119 (left: 119)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "Possible next steps:"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 - 3 = 1 (left: 1 3 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 4 7"
                }
            },
            "Step 1": {
                "Step": "3 + 4 = 7 (left: 2 7 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 4 = 7 (left: 2 7 7) -> 7 / 2 = 3.5 (left: 3.5 7 7)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "7 17"
                }
            },
            "Step 3": {
                "Step": "2 * 3 = 6 (left: 4 6 7) -> 4 * 6 = 24 (left: 7 24) -> 24 - 7 = 17 (left: 7 17) -> 17 / 7 = 2.42857142857 (left: 2.42857142857)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "7 17"
                }
            },
            "Step 4": {
                "Step": "2 * 3 = 6 (left: 4 6 7) -> 4 * 6 = 24 (left: 7 24) -> 24 - 7 = 17 (left: 7 17) -> 17 / 7 = 2.43 (left: 2.43)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "3.5 7 7"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "7 17"
                }
            },
            "Step 5": {
                "Step": "2 * 3 = 6 (left: 4 6 7) -> 4 * 6 = 24 (left: 7 24) -> 24 - 7 = 17 (left: 7 17) -> 17 / 7 = 2.4285714285714284 (left: 2.4285714285714284)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "7 17"
                }
            },
            "Step 6": {
                "Step": "2 * 3 = 6 (left: 4 6 7) -> 4 * 6 = 24 (left: 7 24) -> 24 - 7 = 17 (left: 7 17) -> 7 * 17 = 119 (left: 119)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "Possible next steps:"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 - 4 = 3 (left: 2 3 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 4 7"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 4 5 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 4 5 7) -> 7 - 5 = 2 (left: 2 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "7 17"
                }
            },
            "Step 3": {
                "Step": "2 * 3 = 6 (left: 4 6 7) -> 4 * 6 = 24 (left: 7 24) -> 24 - 7 = 17 (left: 7 17) -> 17 / 7 = 2.43 (left: 2.43)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "3.5 7 7"
                }
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 2 7 7) -> 7 / 2 = 3.5 (left: 3.5 7 7) -> 7 - 3.5 = 3.5 (left: 3.5 7)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "7 17"
                }
            },
            "Step 5": {
                "Step": "2 * 3 = 6 (left: 4 6 7) -> 4 * 6 = 24 (left: 7 24) -> 24 - 7 = 17 (left: 7 17) -> 7 * 17 = 119 (left: 119)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "7 17"
                }
            },
            "Step 6": {
                "Step": "2 * 3 = 6 (left: 4 6 7) -> 4 * 6 = 24 (left: 7 24) -> 24 - 7 = 17 (left: 7 17) -> 17 / 7 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "Possible next steps:"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 + 3 = 7 (left: 2 7 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> 6 / 4 = 1.5 (left: 1.5 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> 6 / 4 = 1.5 (left: 1.5 7) -> 7 - 1.5 = 5.5 (left: 5.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3.5 7 7"
                }
            },
            "Step 3": {
                "Step": "3 + 4 = 7 (left: 2 7 7) -> 7 / 2 = 3.5 (left: 3.5 7 7) -> 7 + 7 = 14 (left: 14 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 2 7 7) -> 7 / 2 = 3.5 (left: 3.5 7 7) -> 7 + 7 = 14 (left: 14 7) -> 14 * 7 = 98 (left: 98)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "7 17"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "7 17"
                }
            },
            "Step 5": {
                "Step": "2 * 3 = 6 (left: 4 6 7) -> 4 * 6 = 24 (left: 7 24) -> 24 - 7 = 17 (left: 7 17) -> 7 + 17 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "7 17"
                }
            },
            "Step 6": {
                "Step": "2 * 3 = 6 (left: 4 6 7) -> 4 * 6 = 24 (left: 7 24) -> 24 - 7 = 17 (left: 7 17) -> Input: 24 10",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 * 2 = 6 (left: 4 6 7)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 4 7"
                }
            },
            "Step 1": {
                "Step": "7 - 3 = 4 (left: 2 4 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 3 = 4 (left: 2 4 7) -> 4 - 2 = 2 (left: 2 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "7 17"
                }
            },
            "Step 3": {
                "Step": "2 * 3 = 6 (left: 4 6 7) -> 4 * 6 = 24 (left: 7 24) -> 24 - 7 = 17 (left: 7 17) -> 7 + 17 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "7 17"
                }
            },
            "Step 4": {
                "Step": "2 * 3 = 6 (left: 4 6 7) -> 4 * 6 = 24 (left: 7 24) -> 24 - 7 = 17 (left: 7 17) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "3.5 7 7"
                }
            },
            "Step 5": {
                "Step": "3 + 4 = 7 (left: 2 7 7) -> 7 / 2 = 3.5 (left: 3.5 7 7) -> 7 / 3.5 = 2 (left: 2 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 4 = 7 (left: 2 7 7) -> 7 / 2 = 3.5 (left: 3.5 7 7) -> 7 / 3.5 = 2 (left: 2 7) -> 2 + 7 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "Possible next steps:"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 4 5 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> 6 - 4 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> 6 - 4 = 2 (left: 2) -> There are no possible next steps as there are not enough numbers provided to perform any operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 3": {
                "Step": "2 * 3 = 6 (left: 4 6 7) -> 6 - 4 = 2 (left: 2 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 3 = 6 (left: 4 6 7) -> 6 - 4 = 2 (left: 2 7) -> 2 + 7 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "7 17"
                }
            },
            "Step 5": {
                "Step": "2 * 3 = 6 (left: 4 6 7) -> 4 * 6 = 24 (left: 7 24) -> 24 - 7 = 17 (left: 7 17) -> 7 + 17 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "7 17"
                }
            },
            "Step 6": {
                "Step": "2 * 3 = 6 (left: 4 6 7) -> 4 * 6 = 24 (left: 7 24) -> 24 - 7 = 17 (left: 7 17) -> 7 + 17 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "Possible next steps:"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 4 5 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 1": {
                "Step": "2 * 3 = 6 (left: 4 6 7) -> 4 * 6 = 24 (left: 7 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 3 = 6 (left: 4 6 7) -> 4 * 6 = 24 (left: 7 24) -> 24 - 7 = 17 (left: 7 17)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 4 7"
                }
            },
            "Step 3": {
                "Step": "7 - 4 = 3 (left: 2 3 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 4 = 3 (left: 2 3  -> 3 * 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "7 17"
                }
            },
            "Step 5": {
                "Step": "2 * 3 = 6 (left: 4 6 7) -> 4 * 6 = 24 (left: 7 24) -> 24 - 7 = 17 (left: 7 17) -> 17 - 7 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "7 17"
                }
            },
            "Step 6": {
                "Step": "2 * 3 = 6 (left: 4 6 7) -> 4 * 6 = 24 (left: 7 24) -> 24 - 7 = 17 (left: 7 17) -> 17 / 7 = 2.42857 (left: 2.42857)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "Possible next steps:"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 3 4 5)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 1": {
                "Step": "2 * 3 = 6 (left: 4 6 7) -> 6 / 4 = 1.5 (left: 1.5 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 3 = 6 (left: 4 6 7) -> 6 / 4 = 1.5 (left: 1.5 7) -> 7 - 1.5 = 5.5 (left: 5.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "7 17"
                }
            },
            "Step 3": {
                "Step": "2 * 3 = 6 (left: 4 6 7) -> 4 * 6 = 24 (left: 7 24) -> 24 - 7 = 17 (left: 7 17) -> 7 * 17 = 119 (left: 119)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "4 6 7"
                }
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> 7 - 4 = 3 (left: 3 6)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "7 17"
                }
            },
            "Step 5": {
                "Step": "2 * 3 = 6 (left: 4 6 7) -> 4 * 6 = 24 (left: 7 24) -> 24 - 7 = 17 (left: 7 17) -> 7 + 17 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "7 17"
                }
            },
            "Step 6": {
                "Step": "2 * 3 = 6 (left: 4 6 7) -> 4 * 6 = 24 (left: 7 24) -> 24 - 7 = 17 (left: 7 17) -> 7 * 17 = 119 (left: 119)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "Possible next steps:"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "2 * 3 = 6 (left: 4 6 7)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> 4 + 6 = 10 (left: 7 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> 4 + 6 = 10 (left: 7 10) -> 10 - 7 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> 4 + 6 = 10 (left: 7 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> 4 + 6 = 10 (left: 7 10) -> 10 / 7 = 1.43 (left: 1.43 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "7 17"
                }
            },
            "Step 5": {
                "Step": "2 * 3 = 6 (left: 4 6 7) -> 4 * 6 = 24 (left: 7 24) -> 24 - 7 = 17 (left: 7 17) -> 7 / 17 = 0.41176470588 (left: 0.41176470588)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "7 17"
                }
            },
            "Step 6": {
                "Step": "2 * 3 = 6 (left: 4 6 7) -> 4 * 6 = 24 (left: 7 24) -> 24 - 7 = 17 (left: 7 17) -> 7 * 17 = 119 (left: 119)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "Possible next steps:"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "7 - 3 = 4 (left: 2 4 4)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> 4 * 6 = 24 (left: 7 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> 4 * 6 = 24 (left: 7 24) -> 7 * 24 = 168 (left: 168)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 4 7"
                }
            },
            "Step 3": {
                "Step": "2 * 3 = 6 (left: 4 6 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 3 = 6 (left: 4 6 7) -> 7 - 4 = 3 (left: 3 6)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "7 17"
                }
            },
            "Step 5": {
                "Step": "2 * 3 = 6 (left: 4 6 7) -> 4 * 6 = 24 (left: 7 24) -> 24 - 7 = 17 (left: 7 17) -> 17 / 7 = 2.428571 (left: 2.428571)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "7 17"
                }
            },
            "Step 6": {
                "Step": "2 * 3 = 6 (left: 4 6 7) -> 4 * 6 = 24 (left: 7 24) -> 24 - 7 = 17 (left: 7 17) -> 17 / 7 = 2.43 (left: 2.43)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "Possible next steps:"
                }
            }
        },
        "Input": "2 3 4 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "970": {
        "puzzle": "4 4 8 12",
        "Agent 0": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "16 8 12"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 8 - 12 = -4 (left: -4 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 8 - 12 = -4 (left: -4 8) -> -4 * 8 = -32 (left: -32)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "1 4"
                }
            },
            "Step 3": {
                "Step": "12 - 8 = 4 (left: 4 4 4) -> 4 / 4 = 1 (left: 1 4) -> 4 - 1 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 8 = 4 (left: 4 4 4) -> 4 / 4 = 1 (left: 1 4) -> 4 - 1 = 3 (left: 3) -> 3 * 3 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "1 4"
                }
            },
            "Step 5": {
                "Step": "12 - 8 = 4 (left: 4 4 4) -> 4 / 4 = 1 (left: 1 4) -> 4 / 1 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 8 = 4 (left: 4 4 4) -> 4 / 4 = 1 (left: 1 4) -> 4 / 1 = 4 (left: 4) -> 4 + 4 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "Division by zero is undefined."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 16 8 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 8 12"
                }
            },
            "Step 1": {
                "Step": "12 - 4 = 8 (left: 4 8 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 4 = 8 (left: 4 8 8) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 8 12"
                }
            },
            "Step 3": {
                "Step": "12 / 4 = 3 (left: 3 8 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 / 4 = 3 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "1 4"
                }
            },
            "Step 5": {
                "Step": "12 - 8 = 4 (left: 4 4 4) -> 4 / 4 = 1 (left: 1 4) -> 4 - 1 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 8 = 4 (left: 4 4 4) -> 4 / 4 = 1 (left: 1 4) -> 4 - 1 = 3 (left: 3) -> 8 + 3 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "Division by zero is undefined."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 4 = 8 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 8 4"
                }
            },
            "Step 1": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 4 * 8 = 32 (left: 4 32 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 4 * 8 = 32 (left: 4 32 4) -> 12 - 3 = 9 (left: 9 6 18)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 8 12"
                }
            },
            "Step 3": {
                "Step": "12 - 4 = 8 (left: 4 8 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 4 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (4 * 8) / 4 = 24",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (4 * 8) / 4 = 24 -> Input: 3 4 5 6\nSteps:\n3 + 5 = 8 (left: 4 6 8)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * (3 + 5) = 24",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "Division by zero is undefined."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "12 - 8 = 4 (left: 4 8 4)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 8 3"
                }
            },
            "Step 1": {
                "Step": "12 / 4 = 3 (left: 4 8 3) -> 8 - 4 = 4 (left: 4 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 4 = 3 (left: 4 8 3) -> 8 - 4 = 4 (left: 4 3) -> 10 - 5 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (4 * 8) / 4 = 24",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (4 * 8) / 4 = 24 -> Input: 3 5 7 8\nSteps:\n7 - 3 = 4 (left: 4 5 8)\n4 + 8 = 12 (left: 5 12)\n5 * 12 = 60 (left: 60)\n60 / 2.5 = 24 (left: 24)\nAnswer: ((7 - 3) + 8) * (5 * 12) / 2.5 = 24",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "12 12"
                }
            },
            "Step 5": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 16 / 8 = 2 (left: 2 12 24) -> 24 / 2 = 12 (left: 12 12) -> 12 / 12 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "12 12"
                }
            },
            "Step 6": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 16 / 8 = 2 (left: 2 12 24) -> 24 / 2 = 12 (left: 12 12) -> 12 / 12 = 1 (left: 1) ",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "Division by zero is undefined."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "8 / 4 = 2 (left: 2 8 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 8 12"
                }
            },
            "Step 1": {
                "Step": "12 / 4 = 3 (left: 3 8 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 8 12"
                }
            },
            "Step 3": {
                "Step": "4 * 4 = 16 (left: 8 16 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 * 4 = 16 (left: 8 16 12) -> 8 * 12 = 96 (left: 96)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "1 4"
                }
            },
            "Step 5": {
                "Step": "12 - 8 = 4 (left: 4 4 4) -> 4 / 4 = 1 (left: 1 4) -> 4 - 1 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 8 = 4 (left: 4 4 4) -> 4 / 4 = 1 (left: 1 4) -> 4 - 1 = 3 (left: 3) -> 3 + 8 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "Division by zero is undefined."
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "8 - 4 = 4 (left: 4 4 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 8 12"
                }
            },
            "Step 1": {
                "Step": "12 - 4 = 8 (left: 4 8 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 4 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: 12 / (4 - 4) * 8 = 24",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: 12 / (4 - 4) * 8 = 24 -> Input: 3 3 4 5\nSteps:\n3 + 5 = 8 (left: 3 4 8)\n3 * 4 = 12 (left: 8 12)\n12 - 8 = 4 (left: 4)\nAnswer: ((3 + 5) * 4) - 8 = 24",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "4 8 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "3 4"
                }
            },
            "Step 5": {
                "Step": "12 / 4 = 3 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4) -> 3 + 4 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 4 = 3 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4) -> 3 + 4 = 7 (left: 7) -> 7 / 8 = 0.875 (left: 0.875)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "Division by zero is undefined."
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 8 16 12)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "16 8 12"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 16 / 8 = 2 (left: 2 12 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 16 / 8 = 2 (left: 2 12 24) -> 24 / 2 = 12 (left: 12 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 8 12"
                }
            },
            "Step 3": {
                "Step": "4 / 4 = 1 (left: 1 8 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 / 4 = 1 (left: 1 8 12) -> 8 / 1 = 8 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "12 12"
                }
            },
            "Step 5": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 16 / 8 = 2 (left: 2 12 24) -> 24 / 2 = 12 (left: 12 12) -> 12 - 12 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "12 12"
                }
            },
            "Step 6": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 16 / 8 = 2 (left: 2 12 24) -> 24 / 2 = 12 (left: 12 12) -> 12 + 12 = 24",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "12 / 4 = 3 (left: 4 8 3)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 8 4"
                }
            },
            "Step 1": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 4 * 8 = 32 (left: 4 32 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 4 * 8 = 32 (left: 4 32  -> 4 + 32 = 36 (left: 32 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "12 12"
                }
            },
            "Step 3": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 16 / 8 = 2 (left: 2 12 24) -> 24 / 2 = 12 (left: 12 12) -> 12 / 12 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "1 4"
                }
            },
            "Step 4": {
                "Step": "12 - 8 = 4 (left: 4 4 4) -> 4 / 4 = 1 (left: 1 4) -> 1 * 4 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 5": {
                "Step": "12 - 4 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 8 * 4 = 32 (left: 8 32)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 4 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 8 * 4 = 32 (left: 8 32) -> 32 / 8 = 4 (left: 4 32)",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "4 + 4 = 8 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 8 12"
                }
            },
            "Step 1": {
                "Step": "12 - 8 = 4 (left: 4 4 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 8 = 4 (left: 4 4 4) -> 4 / 4 = 1 (left: 1 4)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 8 4"
                }
            },
            "Step 3": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 4 + 8 = 12 (left: 4 12 4)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 4 + 8 = 12 (left: 4 12 4) -> 12 / 4 = 3 (left: 3 4)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (4 * 8) / (12 / 4) = 24",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (4 * 8) / (12 / 4) = 24 -> Input: 3 6 6 9\nSteps:\n3 * 6 = 18 (left: 6 6 9 18)\n9 - 6 = 3 (left: 3 3 18)\n3 * 3 = 9 (left: 9 18)\n18 - 9 = 9 (left: 9 9)\n9 * 9 = 81 (left: 81)\nAnswer: ((3 * 6)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "Division by zero is undefined."
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "12 - 8 = 4 (left: 4 8 4)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 8 12"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 8 8 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 8 8 12) -> 8 - 8 = 0 (left: 0 12)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "0 12"
                }
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 8 8 12) -> 8 - 8 = 0 (left: 0 12) -> 12 / 0 = undefined",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 8 8 12) -> 8 - 8 = 0 (left: 0 12) -> 12 / 0 = undefined -> Division by zero is undefined.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "1 4"
                }
            },
            "Step 5": {
                "Step": "12 - 8 = 4 (left: 4 4 4) -> 4 / 4 = 1 (left: 1 4) -> 1 * 4 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 8 = 4 (left: 4 4 4) -> 4 / 4 = 1 (left: 1 4) -> 1 * 4 = 4 (left: 4) -> 4 + 4 = 8",
                "Pruning": null
            }
        },
        "Input": "4 4 8 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "971": {
        "puzzle": "1 2 6 10",
        "Agent 0": {
            "Step 0": {
                "Step": "6 + 2 = 8 (left: 1 8 ",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 8 "
                }
            },
            "Step 1": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8) -> 8 + 8 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 6 10"
                }
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 1 2 4)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 6 = 4 (left: 1 2 4) -> 1 + 2 = 3 (left: 3 4)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "3 4"
                }
            },
            "Step 5": {
                "Step": "10 - 6 = 4 (left: 1 2 4) -> 1 + 2 = 3 (left: 3 4) -> 3 * 4 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 6 = 4 (left: 1 2 4) -> 1 + 2 = 3 (left: 3 4) -> 3 * 4 = 12 (left: 12) -> 12 * 2 = 24 (left: 8 24)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 8 "
                }
            },
            "Step 1": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "3 7"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 6 10) -> 10 - 3 = 7 (left: 3 7) -> 3 + 7 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 6 10) -> 10 - 3 = 7 (left: 3 7) -> 3 + 7 = 10 (left: 10) -> 10 / 10 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "3 7"
                },
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "3 7"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 6 10) -> 10 - 3 = 7 (left: 3 7) -> 3 - 7 = -4 (left: -4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 6 10) -> 10 - 3 = 7 (left: 3 7) -> 3 - 7 = -4 (left: -4) -> There are no possible next steps with the input of -4.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 6 = 4 (left: 1 2 4)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 6 10"
                }
            },
            "Step 1": {
                "Step": "2 * 6 = 12 (left: 1 12 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 6 = 12 (left: 1 12 10) -> 10 + 1 = 11 (left: 11 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 8 "
                }
            },
            "Step 3": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8) -> 8 - 8 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "3 7"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 6 10) -> 10 - 3 = 7 (left: 3 7) -> Possible next steps:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 6 10) -> 10 - 3 = 7 (left: 3 7) -> Possible next steps: -> There are no possible next steps for the input provided.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 / 2 = 3 (left: 1 3 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 6 10"
                }
            },
            "Step 1": {
                "Step": "6 + 2 = 8 (left: 1 6 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 2 = 8 (left: 1 6 8) -> Input",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "3 7"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 6 10) -> 10 - 3 = 7 (left: 3 7) -> 3 * 7 = 21 (left: 21) ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 6 10) -> 10 - 3 = 7 (left: 3 7) -> 3 * 7 = 21 (left: 21)  -> 21 + 2 = 23",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "3 7"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 6 10) -> 10 - 3 = 7 (left: 3 7) -> 3 - 7 = -4 (left: -4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 6 10) -> 10 - 3 = 7 (left: 3 7) -> 3 - 7 = -4 (left: -4) -> There are no possible next steps with the input of -4.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 * 2 = 2 (left: 2 6 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 6 10"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 1 3 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 1 3 10) -> 10 - 1 = 9 (left: 3 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 8 "
                }
            },
            "Step 3": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8) -> 8 + 8 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "3 7"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 6 10) -> 10 - 3 = 7 (left: 3 7) -> 7 - 3 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 6 10) -> 10 - 3 = 7 (left: 3 7) -> 7 - 3 = 4 (left: 4) -> There are no possible next steps with the input of 4.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "6 * 2 = 12 (left: 1 12 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 6 10"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 6 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 6 10) -> 10 - 3 = 7 (left: 3 7)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 6 10"
                }
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 1 2 4)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 6 = 4 (left: 1 2 4) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "3 7"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 6 10) -> 10 - 3 = 7 (left: 3 7) -> 5 + 9 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 6 10) -> 10 - 3 = 7 (left: 3 7) -> 5 + 9 = 14 (left: 14) -> There are no possible next steps with only one number.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "1 * 2 = 2 (left: 2 6 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 6 10"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 6 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 6 10) -> 10 - 3 = 7 (left: 3 7)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 6 10"
                }
            },
            "Step 3": {
                "Step": "2 * 6 = 12 (left: 1 12 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 6 = 12 (left: 1 12 10) -> 10 + 1 = 11 (left: 11 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "3 7"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 6 10) -> 10 - 3 = 7 (left: 3 7) -> 4 + 5 = 9 (left: 6 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 6 10) -> 10 - 3 = 7 (left: 3 7) -> 4 + 5 = 9 (left: 6 9) -> 6 / 9 = 0.6667 (left: 0.6667)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "21 + 2 = 23"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "10 - 2 = 8 (left: 1 8 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 6 10"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 6 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 6 10) -> 6 / 3 = 2 (left: 2 10)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 8 "
                }
            },
            "Step 3": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8) -> 8 - 8 = 0",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "3 4"
                }
            },
            "Step 5": {
                "Step": "10 - 6 = 4 (left: 1 2 4) -> 1 + 2 = 3 (left: 3 4) -> 3 * 4 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 6 = 4 (left: 1 2 4) -> 1 + 2 = 3 (left: 3 4) -> 3 * 4 = 12 (left: 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "4 + 4 = 8"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "6 + 10 = 16 (left: 1 2 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 6 10"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 6 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 6 10) -> 6 - 3 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "3 7"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 6 10) -> 10 - 3 = 7 (left: 3 7) -> 7 - 3 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 6 10) -> 10 - 3 = 7 (left: 3 7) -> 7 - 3 = 4 (left: 4) -> There is only one possible next step: 4 + 4 = 8.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "3 4"
                }
            },
            "Step 5": {
                "Step": "10 - 6 = 4 (left: 1 2 4) -> 1 + 2 = 3 (left: 3 4) -> 4 / 3 = 1.33 (left: 1.33)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 6 = 4 (left: 1 2 4) -> 1 + 2 = 3 (left: 3 4) -> 4 / 3 = 1.33 (left: 1.33) -> 1.33 / 8 = 0.16625 (left: 8)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "There is only one possible next step: 4 + 4 = 8."
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 6 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 8 "
                }
            },
            "Step 1": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8) -> 8 - 8 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "3 7"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 6 10) -> 10 - 3 = 7 (left: 3 7) -> 7 - 3 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 6 10) -> 10 - 3 = 7 (left: 3 7) -> 7 - 3 = 4 (left: 4) -> 4 + 4 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "3 4"
                }
            },
            "Step 5": {
                "Step": "10 - 6 = 4 (left: 1 2 4) -> 1 + 2 = 3 (left: 3 4) -> 4 / 3 = 1.33 (left: 1.33)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 6 = 4 (left: 1 2 4) -> 1 + 2 = 3 (left: 3 4) -> 4 / 3 = 1.33 (left: 1.33) -> There are no possible next steps for the input 1.33 as it is a single number and not an equation.",
                "Pruning": null
            }
        },
        "Input": "1 2 6 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "972": {
        "puzzle": "1 5 12 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 1 = 11 (left: 5 11 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "1 60 12"
                }
            },
            "Step 1": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 / 1 = 60 (left: 60 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 / 1 = 60 (left: 60 12) -> 60 + 12 = 72 (left: 72)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 60 12"
                }
            },
            "Step 3": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 - 1 = 59 (left: 59 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 - 1 = 59 (left: 59 12) -> 59 - 12 = 47 (left: 47)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "60 12"
                }
            },
            "Step 5": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 1 * 60 = 60 (left: 60 12) -> 60 + 12 = 72 (left: 72)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 1 * 60 = 60 (left: 60 12) -> 60 + 12 = 72 (left: 72) -> There are no possible next steps for the number 72 as it is already a single number.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 - 5 = 7 (left: 1 7 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 60 12"
                }
            },
            "Step 1": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 1 + 60 = 61 (left: 12 61)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 1 + 60 = 61 (left: 12 61) -> 12 * 61 = 732 (left: 732)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 60 12"
                }
            },
            "Step 3": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 - 1 = 11 (left:",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 - 1 = 11 (left: -> 11 + 3 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "1 12 12"
                }
            },
            "Step 5": {
                "Step": "12 - 1 = 11 (left: 11 12 12) -> 12 / 11 = 1.09090909091 (left: 1 12 12) -> 12 - 1 = 11 (left: 11 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 1 = 11 (left: 11 12 12) -> 12 / 11 = 1.09090909091 (left: 1 12 12) -> 12 - 1 = 11 (left: 11 12) -> 11 - 12 = -1 (left: -1)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 / 1 = 12 (left: 5 12 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 12 12"
                }
            },
            "Step 1": {
                "Step": "12 - 1 = 11 (left: 5 11 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 1 = 11 (left: 5 11 12) -> 11 / 5 = 2.2 (left: 2.2 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 7 12"
                }
            },
            "Step 3": {
                "Step": "12 - 5 = 7 (left: 1 7 12) -> 1 + 7 = 8 (left: 8 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 5 = 7 (left: 1 7 12) -> 1 + 7 = 8 (left: 8 12) -> 8 - 12 = -4 (left: -4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "1 12 12"
                }
            },
            "Step 5": {
                "Step": "12 - 1 = 11 (left: 11 12 12) -> 12 / 11 = 1.09090909091 (left: 1 12 12) -> 12 - 1 = 11 (left: 11 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 1 = 11 (left: 11 12 12) -> 12 / 11 = 1.09090909091 (left: 1 12 12) -> 12 - 1 = 11 (left: 11 12) -> 11 / 12 \u2248 0.9167 (left: 0.9167)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 * 12 = 60 (left: 1 60 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 12 12"
                }
            },
            "Step 1": {
                "Step": "12 - 1 = 11 (left: 5 11 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 1 = 11 (left: 5 11 12) -> 11 - 5 = 6 (left: 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 60 12"
                }
            },
            "Step 3": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 1 * 60 = 60 (left: 60 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 1 * 60 = 60 (left: 60 12) -> 60 - 12 = 48 (left: 48)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "1 12 12"
                }
            },
            "Step 5": {
                "Step": "12 - 1 = 11 (left: 11 12 12) -> 12 / 11 = 1.09090909091 (left: 1 12 12) -> 12 / 1 = 12 (left: 12 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 1 = 11 (left: 11 12 12) -> 12 / 11 = 1.09090909091 (left: 1 12 12) -> 12 / 1 = 12 (left: 12 12) -> 12 + 12 = 24",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 / 5 = 2 (left: 1 2 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 12 12"
                }
            },
            "Step 1": {
                "Step": "1 + 5 = 6 (left: 6 12 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 5 = 6 (left: 6 12 12) -> Input: 6 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 12 12"
                }
            },
            "Step 3": {
                "Step": "12 - 5 = 7 (left: 1 7 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 5 = 7 (left: 1 7 12) -> 12 / 1 = 12 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "2.2 12"
                }
            },
            "Step 5": {
                "Step": "12 - 1 = 11 (left: 5 11 12) -> 11 / 5 = 2.2 (left: 2.2 12) -> 12 / 2.2 = 5.4545 (left: 5.4545)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 1 = 11 (left: 5 11 12) -> 11 / 5 = 2.2 (left: 2.2 12) -> 12 / 2.2 = 5.4545 (left: 5.4545) -> There are no possible next steps for the input 5.4545.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "12 - 5 = 7 (left: 1 7 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 60 12"
                }
            },
            "Step 1": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 + 1 = 13 (left: 13 60)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 + 1 = 13 (left: 13 60) -> 13 + 60 = 73 (left: 73)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 12 12"
                }
            },
            "Step 3": {
                "Step": "12 / 1 = 12 (left: 5 12 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 / 1 = 12 (left: 5 12  -> 5 * 12 = 60 (left: 60)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "1 12 12"
                }
            },
            "Step 5": {
                "Step": "12 - 1 = 11 (left: 11 12 12) -> 12 / 11 = 1.09090909091 (left: 1 12 12) -> 12 / 1 = 12 (left: 12 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 1 = 11 (left: 11 12 12) -> 12 / 11 = 1.09090909091 (left: 1 12 12) -> 12 / 1 = 12 (left: 12 12) -> 12 + 12 = 24",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "1 + 5 = 6 (left: 6 12 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 12 12"
                }
            },
            "Step 1": {
                "Step": "12 / 1 = 12 (left: 12 12 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 1 = 12 (left: 12 12 12) -> 12 + 12 = 24 (left: 12 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 12 12"
                }
            },
            "Step 3": {
                "Step": "12 - 1 = 11 (left: 11 12 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 1 = 11 (left: 11 12 12) -> 12 / 11 = 1.09090909091 (left: 1 12 12)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "60 12"
                }
            },
            "Step 5": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 1 * 60 = 60 (left: 60 12) -> 60 * 12 = 720 (left: 720)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 1 * 60 = 60 (left: 60 12) -> 60 * 12 = 720 (left: 720) -> 720 - 2 = 718",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "5 * 12 = 60 (left: 1 60 12)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 60 12"
                }
            },
            "Step 1": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 1 + 60 = 61 (left: 12 61)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 1 + 60 = 61 (left: 12 61) -> 12 - 61 = -49 (left: -49)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 12 12"
                }
            },
            "Step 3": {
                "Step": "12 - 1 = 11 (left: 5 11 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 1 = 11 (left: 5 11 12) -> 12 - 11 = 1 (left: 5 1)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "1 12 12"
                }
            },
            "Step 5": {
                "Step": "12 - 1 = 11 (left: 11 12 12) -> 12 / 11 = 1.09090909091 (left: 1 12 12) -> 12 - 1 = 11 (left: 11 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 1 = 11 (left: 11 12 12) -> 12 / 11 = 1.09090909091 (left: 1 12 12) -> 12 - 1 = 11 (left: 11 12) -> 11 * 12 = 132 (left: 132)",
                "Pruning": "NA"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "5 * 12 = 60 (left: 1 60 12)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 12 12"
                }
            },
            "Step 1": {
                "Step": "12 / 5 = 2.4 (left: 1 2.4 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 5 = 2.4 (left: 1 2.4 12) -> 2.4 - 1 = 1.4 (left: 1.4 12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 12 12"
                }
            },
            "Step 3": {
                "Step": "5 * 12 = 60 (left: 1 60 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 1 * 60 = 60 (left: 60 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "1 12 12"
                }
            },
            "Step 5": {
                "Step": "12 - 1 = 11 (left: 11 12 12) -> 12 / 11 = 1.09090909091 (left: 1 12 12) -> 12 / 1 = 12 (left: 12 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 1 = 11 (left: 11 12 12) -> 12 / 11 = 1.09090909091 (left: 1 12 12) -> 12 / 1 = 12 (left: 12 12) -> 12 * 12 = 144 (left: 144)",
                "Pruning": "NA"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "5 * 12 = 60 (left: 1 60 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1 7 12"
                }
            },
            "Step 1": {
                "Step": "12 - 5 = 7 (left: 1 7 12) -> 12 - 1 = 11 (left: 7 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 5 = 7 (left: 1 7 12) -> 12 - 1 = 11 (left: 7 11) -> 11 - 7 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 12 12"
                }
            },
            "Step 3": {
                "Step": "12 * 12 = 144 (left: 1 5 144)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 * 12 = 144 (left: 1 5 144) -> 144 - 1 = 143 (left: 5 143)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "1 12 12"
                }
            },
            "Step 5": {
                "Step": "12 - 1 = 11 (left: 11 12 12) -> 12 / 11 = 1.09090909091 (left: 1 12 12) -> 12 - 1 = 11 (left: 11 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 1 = 11 (left: 11 12 12) -> 12 / 11 = 1.09090909091 (left: 1 12 12) -> 12 - 1 = 11 (left: 11 12) -> 11 * 12 = 132 (left: 132)",
                "Pruning": "NA"
            }
        },
        "Input": "1 5 12 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "973": {
        "puzzle": "5 6 6 8",
        "Agent 0": {
            "Step 0": {
                "Step": "8 - 6 = 2 (left: 5 6 2)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "1.2 6 8"
                }
            },
            "Step 1": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 8 - 1.2 = 6.8 (left: 6.8 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 8 - 1.2 = 6.8 (left: 6.8 8) -> 6.8 + 8 = 14.8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 6 8"
                }
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 6 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 - 5 = 3 (left: 3 6 8) -> 3 * 6 = 18 (left: 8 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "6 * 6 = 36 (left: 5 36 8) -> 8 - 5 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 6 = 36 (left: 5 36 8) -> 8 - 5 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11) -> There are no possible next steps with the input of 11.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 6 8"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 6 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 6 8) -> 8 / 3 = 2 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "1.33 11"
                }
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 6 8 11) -> 8 / 6 = 1.33 (left: 1.33 11) -> 11 / 1.33 = 8.27 (left: 8.27)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 6 8 11) -> 8 / 6 = 1.33 (left: 1.33 11) -> 11 / 1.33 = 8.27 (left: 8.27) -> 8 + 27 = 35",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "6 * 6 = 36 (left: 5 36 8) -> 8 - 5 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 8 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 6 = 36 (left: 5 36 8) -> 8 - 5 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 8 11) -> 8 * 11 = 88 (left: 88)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "8 + 27 = 35"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 - 5 = 1 (left: 1 6 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 6 8"
                }
            },
            "Step 1": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 6 + 1.2 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 6 8"
                }
            },
            "Step 3": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 1.2 + 6 = 7.2 (left: 7.2 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "6 * 6 = 36 (left: 5 36 8) -> 8 - 5 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 6 = 36 (left: 5 36 8) -> 8 - 5 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5 8) -> 10 * 3 = 30",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 - 5 = 1 (left: 1 6 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 6 8"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 6 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 6 8) -> 8 - 3 = 5 (left: 5 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 6 8"
                }
            },
            "Step 3": {
                "Step": "6 - 5 = 1 (left: 1 6 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 6 - 1 = 5 (left: 5 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "6 * 6 = 36 (left: 5 36 8) -> 8 - 5 = 3 (left: 3 8) -> 5 * 5 = 25 (left:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 6 = 36 (left: 5 36 8) -> 8 - 5 = 3 (left: 3 8) -> 5 * 5 = 25 (left: -> 3 + 9 = 12 (left: 12 5 7)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 6 8 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "1.2 6 8"
                }
            },
            "Step 1": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 8 - 1.2 = 6.8 (left: 6.8 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 8 - 1.2 = 6.8 (left: 6.8 8) -> 6.8 + 8 = 14.8 (left: 14.8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 6 8"
                }
            },
            "Step 3": {
                "Step": "8 - 6 = 2 (left: ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 - 6 = 2 (left:  -> There are no possible next steps with the given input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "6 * 6 = 36 (left: 5 36 8) -> 8 - 5 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 6 = 36 (left: 5 36 8) -> 8 - 5 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11) -> There are no possible next steps as there are no other numbers provided to perform operations with.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "5 * 6 = 30 (left: 30 6 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 6 8"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 5 = 3 -> 8 * 5 = 40 (left: 40)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 6 8"
                }
            },
            "Step 3": {
                "Step": "6 - 5 = 1 (left: 1 6 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 1 + 6 = 7 (left: 7 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "6 * 6 = 36 (left: 5 36 8) -> 8 - 5 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 6 = 36 (left: 5 36 8) -> 8 - 5 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5) -> 8 - 5 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "8 + 27 = 35"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 + 8 = 14 (left: 5 14 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 6 8"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 6 8 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 6 8 11) -> 11 - 8 = 3 (left: 6 3)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 6 8"
                }
            },
            "Step 3": {
                "Step": "8 - 6 = 2 (left: 5 2 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 - 6 = 2 (left: 5 2 8) -> 2 + 8 = 10 (left: 5 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "6 * 6 = 36 (left: 5 36 8) -> 8 - 5 = 3 (left: 3 8) -> 8 / 3 = 2.67 (left: 2.67)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 6 = 36 (left: 5 36 8) -> 8 - 5 = 3 (left: 3 8) -> 8 / 3 = 2.67 (left: 2.67) -> There are no possible next steps for the input 2.67 as it is a single number.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 6 8"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 6 8 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 6 8 11) -> 8 / 6 = 1.33 (left: 1.33 11)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 6 8"
                }
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 6 8 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 6 8 11) -> 8 / 6 = 1.33 (left: 1.33 11)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "6 * 6 = 36 (left: 5 36 8) -> 8 - 5 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 6 = 36 (left: 5 36 8) -> 8 - 5 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5) -> There are no possible next steps with just one number given.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "6 - 5 = 1 (left: 1 6 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 6 8"
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 6 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 8 / 6 = 1.33 (left: 1.33 8)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 6 8"
                }
            },
            "Step 3": {
                "Step": "6 * 6 = 36 (left: 5 36 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 * 6 = 36 (left: 5 36 8) -> 8 - 5 = 3 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "6 * 6 = 36 (left: 5 36 8) -> 8 - 5 = 3 (left: 3 8) -> Input: 4 6",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 6 = 36 (left: 5 36 8) -> 8 - 5 = 3 (left: 3 8) -> Input: 4 6 -> 4 * 6 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "8 + 27 = 35"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 6 8"
                }
            },
            "Step 1": {
                "Step": "8 - 6 = 2 (left: 2 6 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 6 = 2 (left: 2 6 8) -> 2 + 6 = 8 (left: 8 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "1.2 6 8"
                }
            },
            "Step 3": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 8 - 1.2 = 6.8 (left: 6.8 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 8 - 1.2 = 6.8 (left: 6.8 8) -> 8 - 6.8 = 1.2 (left: 1.2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "6 * 6 = 36 (left: 5 36 8) -> 8 - 5 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 6 = 36 (left: 5 36 8) -> 8 - 5 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: ((6 * 6) - 5) * 8 = 24",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "8 + 27 = 35"
                }
            }
        },
        "Input": "5 6 6 8",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "974": {
        "puzzle": "7 7 8 11",
        "Agent 0": {
            "Step 0": {
                "Step": "7 * 7 = 49 (left: 8 11 49)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 8 11"
                }
            },
            "Step 1": {
                "Step": "7 + 7 = 14 (left: 8 11 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 14 + 8 = 22 (left: 8 22)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "3 8"
                }
            },
            "Step 3": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 7 - 4 = 3 (left: 3 8) -> 4 + 9 = 13 (left: 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 7 - 4 = 3 (left: 3 8) -> 4 + 9 = 13 (left: 13) -> 13 + 8 = 21 (left: 8)",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "3 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 7 - 4 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 8 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 7 - 4 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 8 11) -> 8 + 11 = 19 (left: 19)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 * 7 = 49 (left: 8 11 49)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 8 11"
                }
            },
            "Step 1": {
                "Step": "7 + 7 = 14 (left: 8 11 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 14 / 11 = 1.272727272",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "3 8"
                }
            },
            "Step 3": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 7 - 4 = 3 (left: 3 8) -> 5 / 2 =",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 7 - 4 = 3 (left: 3 8) -> 5 / 2 = -> 2.5 (left: 2.5)",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "3 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 7 - 4 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 7 - 4 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11) -> There are no possible next steps with the input 11.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 / 7 = 1 (left: 1 8 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 8 11"
                }
            },
            "Step 1": {
                "Step": "7 + 7 = 14 (left: 8 11 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 14 - 8 = 6 (left: 6 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 8 11"
                }
            },
            "Step 3": {
                "Step": "7 + 7 = 14 (left: 8 11 14)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 11 - 8 = 3 (left: 3 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 7 - 4 = 3 (left: 3 8) -> 7 + 9 = 16 (left: 16)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 7 - 4 = 3 (left: 3 8) -> 7 + 9 = 16 (left: 16) -> There are no possible next steps with the input of 16.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 + 7 = 14 (left: 8 14 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 8 11"
                }
            },
            "Step 1": {
                "Step": "7 * 7 = 49 (left: 8 11 49)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 * 7 = 49 (left: 8 11 49) -> 49 - 8 = 41 (left: 41)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "3 8"
                }
            },
            "Step 3": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 7 - 4 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 7 - 4 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (11 - 7) * (7 - 4) * 8 = 24",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "3 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 7 - 4 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 7 - 4 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11) -> There are no possible next steps with the input 11.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "7 + 8 = 15 (left: 7 11 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "8 11 14"
                }
            },
            "Step 1": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 14 + 8 = 22 (left: 8 22)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 14 + 8 = 22 (left: 8 22) -> 8 - 22 = -14 (left: -14)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 8 11"
                }
            },
            "Step 3": {
                "Step": "7 + 7 = 14 (left: 8 14 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 + 7 = 14 (left: 8 14 11) -> 8 + 14 = 22 (left: 11 22)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 7 - 4 = 3 (left: 3 8) -> Possible next steps:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 7 - 4 = 3 (left: 3 8) -> Possible next steps: -> There are no possible next steps as all numbers are the same.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "11 - 7 = 4 (left: 4 7 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 8 11"
                }
            },
            "Step 1": {
                "Step": "7 + 7 = 14 (left: 8 11 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 8 + 11 = 19 (left: 19 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 8 11"
                }
            },
            "Step 3": {
                "Step": "7 + 7 = 14 (left: 8 11 14)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 14 - 8 = 6 (left: 6 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 7 - 4 = 3 (left: 3 8) -> 5 * 9 = 45 (left: 45)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 7 - 4 = 3 (left: 3 8) -> 5 * 9 = 45 (left: 45) -> 45 + 2 = 47",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "7 + 7 = 14 (left: 8 11 14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 8 11"
                }
            },
            "Step 1": {
                "Step": "7 - 7 = 0 (left: 0 8 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 7 = 0 (left: 0 8 11) -> 11 / 8 = 1.375 (left: 0 1.375)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 8 11"
                }
            },
            "Step 3": {
                "Step": "7 + 8 = 15 (left: 11 15)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 + 8 = 15 (left: 11 15) -> 11 * 15 = 165 (left: 165)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 7 - 4 = 3 (left: 3 8) -> 8 / 3 = 2.66666666667 (left: 2.66666666667)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 7 - 4 = 3 (left: 3 8) -> 8 / 3 = 2.66666666667 (left: 2.66666666667) -> 2.66666666667 * 8 = 21.33333333336 (left: 21.33333333336)",
                "Pruning": "NA"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "7 * 8 = 56 (left: 11 56)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 8 11"
                }
            },
            "Step 1": {
                "Step": "11 - 7 = 4 (left: 4 7 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 7 - 4 = 3 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "3 8"
                }
            },
            "Step 3": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 7 - 4 = 3 (left: 3 8) -> 4 * ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 7 - 4 = 3 (left: 3 8) -> 4 *  -> 4 * 8 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "3 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 7 - 4 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 7 - 4 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (11 - 7) * (7 - 4) * 8 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "7 + 7 = 14 (left: 8 11 14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 8 11"
                }
            },
            "Step 1": {
                "Step": "8 - 7 = 1 (left: 1 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 7 = 1 (left: 1 11) -> 11 / 1 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 8 11"
                }
            },
            "Step 3": {
                "Step": "7 + 7 = 14 (left: 8 11 14)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 14 / 8 = 1.75 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 7 - 4 = 3 (left: 3 8) -> 3 - 8 = -5 (left: -5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 7 - 4 = 3 (left: 3 8) -> 3 - 8 = -5 (left: -5) -> -5 * -5 = 25 (left: -5)",
                "Pruning": "NA"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "8 - 7 = 1 (left: 1 7 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 8 11"
                }
            },
            "Step 1": {
                "Step": "7 / 7 = 1 (left: 1 8 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 / 7 = 1 (left: 1 8 11) -> 1 + 8 = 9 (left: 9 11)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 8 11"
                }
            },
            "Step 3": {
                "Step": "11 - 8 = 3 (left: 3 7 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 8 = 3 (left: 3 7 8) -> 3 * 7 = 21 (left: 8 21)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 7 - 4 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 7 - 4 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5) -> 5 + 5 = 10 (left: 10)",
                "Pruning": "NA"
            }
        },
        "Input": "7 7 8 11",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "975": {
        "puzzle": "1 3 7 10",
        "Agent 0": {
            "Step 0": {
                "Step": "7 - 3 = 4 (left: 1 4 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 3 10"
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 * 3 = 3 (left: 3 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 * 3 = 3 (left: 3 10) -> 10 - 3 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 7 10"
                }
            },
            "Step 3": {
                "Step": "7 + 1 = 8 (left: 3 8 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 + 1 = 8 (left: 3 8 10) -> 3 + 8 = 11 (left: 10 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "3 4"
                }
            },
            "Step 5": {
                "Step": "10 - 7 = 3 (left: 1 3 3) -> 1 + 3 = 4 (left: 3 4) -> 3 + 4 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 7 = 3 (left: 1 3 3) -> 1 + 3 = 4 (left: 3 4) -> 3 + 4 = 7 (left: 7) -> 7 - 8 = -1 (left: -1)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "7 14"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 - 7 = 3 (left: 1 3 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 3 10"
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 10 - 1 = 9 (left: 9 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 10 - 1 = 9 (left: 9 3) -> 9 + 3 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "3 4"
                }
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 1 3 3) -> 1 + 3 = 4 (left: 3 4) -> 3 + 4 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 7 = 3 (left: 1 3 3) -> 1 + 3 = 4 (left: 3 4) -> 3 + 4 = 7 (left: 7) -> 7 + 7 = 14 (left: 7 14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "3"
                }
            },
            "Step 5": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 / 3 = 0.333333 -> 3 / 1 = 3 (left: 3) -> 3 - 8 = -5 (left: -5 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 / 3 = 0.333333 -> 3 / 1 = 3 (left: 3) -> 3 - 8 = -5 (left: -5 8) -> -5 - 8 = -13 (left: -13)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "7 14"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 7 = 3 (left: 1 3 10)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 7 10"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 4 7 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 3 = 4 (left: 4 7 10) -> 10 - 4 = 6 (left: 6 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 3 10"
                }
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 + 3 = 4 (left: 4 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 + 3 = 4 (left: 4 10) -> 4 * 10 = 40 (left: 40)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "3 4"
                }
            },
            "Step 5": {
                "Step": "10 - 7 = 3 (left: 1 3 3) -> 1 + 3 = 4 (left: 3 4) -> 3 * 4 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 7 = 3 (left: 1 3 3) -> 1 + 3 = 4 (left: 3 4) -> 3 * 4 = 12 (left: 12) -> 12 / 8 = 1.5 (left: 1.5 8)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 - 3 = 4 (left: 1 4 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 3 10"
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 3 + 1 = 4 (left: 4 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 3 + 1 = 4 (left: 4 10) -> 10 - 4 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "3 4"
                }
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 1 3 3) -> 1 + 3 = 4 (left: 3 4) -> 5 * 6 = 30 (left: 30 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 7 = 3 (left: 1 3 3) -> 1 + 3 = 4 (left: 3 4) -> 5 * 6 = 30 (left: 30 7) -> 7 * 30 = 210 (left: 210)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "3 4"
                },
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "3"
                }
            },
            "Step 5": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 / 3 = 0.333333 -> 3 / 1 = 3 (left: 3) -> 8 / 3 = 2.66666666667 (left: 2.66666666667 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 / 3 = 0.333333 -> 3 / 1 = 3 (left: 3) -> 8 / 3 = 2.66666666667 (left: 2.66666666667 8) -> 8 - 2.66666666667 = 5.33333333333 (left: 5.33333333333)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "7 14"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 + 7 = 10 (left: 1 10 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 7 10"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 4 7 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 3 = 4 (left: 4 7 10) -> Input: 3 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 7 10"
                }
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 4 7 10) -> 7 + 10 = 17 (left: 4 17)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 4 7 10) -> 7 + 10 = 17 (left: 4 17) -> 10 - 5 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "3"
                }
            },
            "Step 5": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 / 3 = 0.333333 -> 3 / 1 = 3 (left: 3) -> 8 / 3 = 2.67 (left: 2.67)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "3"
                }
            },
            "Step 6": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 / 3 = 0.333333 -> 3 / 1 = 3 (left: 3) -> There are no possible next steps with only one number provided.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "10 - 7 = 3 (left: 1 3 3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 7 10"
                }
            },
            "Step 1": {
                "Step": "7 - 3 = 4 (left: 1 4 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 3 = 4 (left: 1 4  -> 4 / 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "3 4"
                }
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 1 3 3) -> 1 + 3 = 4 (left: 3 4) -> 5 * 5 = 25 (left: 25)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 7 = 3 (left: 1 3 3) -> 1 + 3 = 4 (left: 3 4) -> 5 * 5 = 25 (left: 25) -> 25 + 2 = 27",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "3 4"
                }
            },
            "Step 5": {
                "Step": "10 - 7 = 3 (left: 1 3 3) -> 1 + 3 = 4 (left: 3 4) -> 4 - 3 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 7 = 3 (left: 1 3 3) -> 1 + 3 = 4 (left: 3 4) -> 4 - 3 = 1 (left: 1) -> No more possible next steps with only one number given.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 4 7 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 7 10"
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 1 3 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 1 3 3) -> 1 + 3 = 4 (left: 3 4)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 3 10"
                }
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 10 / 3 = 3.33 (left: 1 3.33)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 10 / 3 = 3.33 (left: 1 3.33) -> 1 / 3.33 = 0.30 (left: 0.30 3.33)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "3"
                }
            },
            "Step 5": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 / 3 = 0.333333 -> 3 / 1 = 3 (left: 3) -> 3 + 3 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "3"
                }
            },
            "Step 6": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 / 3 = 0.333333 -> 3 / 1 = 3 (left: 3) -> 8 / 3 = 2.6666666666666665 (left: 2.6666666666666665)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "7 14"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "1 * 3 = 3 (left: 3 7 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 3 10"
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 10 / 3 = 3.3333333333333335 (left: 1 3.333333333",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 10 / 3 = 3.3333333333333335 (left: 1 3.333333333 -> 3.333333333 - 1 = 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 3 10"
                }
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 * 3 = 3 (left: 3 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 * 3 = 3 (left: 3 10) -> 3 * 10 = 30 (left: 30)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "3 4"
                }
            },
            "Step 5": {
                "Step": "10 - 7 = 3 (left: 1 3 3) -> 1 + 3 = 4 (left: 3 4) -> 4 / 3 = 1.33 (left: 1.33)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 7 = 3 (left: 1 3 3) -> 1 + 3 = 4 (left: 3 4) -> 4 / 3 = 1.33 (left: 1.33) -> 1.33 + 2 = 3.33",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "3 + 7 = 10 (left: 1 10 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 7 10"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 4 7 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 3 = 4 (left: 4 7 10) -> 4 + 7 = 11 (left: 10 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 3 10"
                }
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 / 3 = 0.333333",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 / 3 = 0.333333 -> 3 / 1 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "3 4"
                }
            },
            "Step 5": {
                "Step": "10 - 7 = 3 (left: 1 3 3) -> 1 + 3 = 4 (left: 3 4) -> 4 - 3 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 7 = 3 (left: 1 3 3) -> 1 + 3 = 4 (left: 3 4) -> 4 - 3 = 1 (left: 1) -> There is only one number given, so there are no possible next steps.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "10 - 7 = 3 (left: 1 3 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 7 10"
                }
            },
            "Step 1": {
                "Step": "7 + 3 = 10 (left: 1 10 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 3 = 10 (left: 1 10  -> 1 * 10 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 3 10"
                }
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 * 3 = 3 (left: 3 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 * 3 = 3 (left: 3 10) -> 3 + 10 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "3 4"
                }
            },
            "Step 5": {
                "Step": "10 - 7 = 3 (left: 1 3 3) -> 1 + 3 = 4 (left: 3 4) -> 4 / 3 = 1.33 (left: 1.33)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 7 = 3 (left: 1 3 3) -> 1 + 3 = 4 (left: 3 4) -> 4 / 3 = 1.33 (left: 1.33) -> There are no possible next steps for the input 1.33 as it is already a single number.",
                "Pruning": null
            }
        },
        "Input": "1 3 7 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "976": {
        "puzzle": "3 3 9 12",
        "Agent 0": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 9 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 1": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12) -> 12 - 4 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 9 12"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 9 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 / 9 = 1 (left: 1 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "0 12"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 0 + 12 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 0 + 12 = 12 (left: 12) -> 12 - 8 = 4 (left: 4 8)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 + 3 = 12 (left: 3 12 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 9 12"
                }
            },
            "Step 1": {
                "Step": "3 * 9 = 27 (left: 3 12 27)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 9 = 27 (left: 3 12 27) -> 27 - 12 = 15 (left: 3 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 3": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 3 + 12 = 15 (left: 12 15)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 3 + 12 = 15 (left: 12 15) -> 12 + 15 = 27 (left: 27)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "3 12"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 6 9 12) -> 9 - 6 = 3 (left: 3 12) -> 12 - 3 = 9 (left: 9 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 6 9 12) -> 9 - 6 = 3 (left: 3 12) -> 12 - 3 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 9 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 1": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 3 + 12 = 15 (left: 12 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 3 + 12 = 15 (left: 12 15) -> 12 - 15 = -3 (left: -3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 3": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12) -> 16 / 8 = 2 (left: 2 3 48)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "3 12"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 6 9 12) -> 9 - 6 = 3 (left: 3 12) -> 12 - 3 = 9 (left: 9 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 6 9 12) -> 9 - 6 = 3 (left: 3 12) -> 12 - 3 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 3 = 6 (left: 3 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 1": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12) -> 4 * 12 = 48 (left: 48)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 9 12"
                }
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 6 9 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 6 9 12) -> 9 / 6 = 1.5 (left: 1.5 12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "3 12"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 6 9 12) -> 9 - 6 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 6 9 12) -> 9 - 6 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> No possible next steps with the input of 36.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "9 + 3 = 12 (left: 3 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 1": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 - 3 = 9 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 - 3 = 9 (left: -> 12 - 3 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 9 12"
                }
            },
            "Step 3": {
                "Step": "3 - 3 = 0 (left: 0 9 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 - 3 = 0 (left: 0 9 12) -> 12 / 0 is undefined (left: 0)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "3 12"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 6 9 12) -> 9 - 6 = 3 (left: 3 12) -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 6 9 12) -> 9 - 6 = 3 (left: 3 12) -> 12 / 3 = 4 (left: 4 12) -> 4 + 12 = 16 (left: 16)",
                "Pruning": "NA"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 3 9 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 9 12"
                }
            },
            "Step 1": {
                "Step": "3 * 9 = 27 (left: 3 12 27)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 9 = 27 (left: 3 12 27) -> 27 / 3 = 9 (left: 9 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 3": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12) -> 12 - 4 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "0 12"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 12 - 0 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 12 - 0 = 12 (left: 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": "NA"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 9 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 9 12"
                }
            },
            "Step 1": {
                "Step": "3 * 9 = 27 (left: 3 12 27)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 9 = 27 (left: 3 12 27) -> 12 - 3 = 9 (left: 9 27)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 9 12"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 9 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "0 12"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 12 - 0 = 12 (left: 0)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 12 - 0 = 12 (left: 0) -> There are no possible next steps as the input is 0.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "9 9 12"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 + 9 = 18 (left: 18 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 + 9 = 18 (left: 18 12) -> 18 - 12 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 9 12"
                }
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 6 9 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 6 9 12) -> 9 - 6 = 3 (left: 3 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "0 12"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 12 / 0 = undefined",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 12 / 0 = undefined -> Division by zero is undefined.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "9 * 3 = 27 (left: 3 12 27)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 1": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 - 3 = 9 (left: 9 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 - 3 = 9 (left: 9 12) -> 9 - 12 = -3 (left: -3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 3": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 3 * 12 = 36 (left: 12 36)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 3 * 12 = 36 (left: 12 36) -> 12 + 36 = 48 (left: 48)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "0 12"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 12 / 12 = 1 (left: 1 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 12 / 12 = 1 (left: 1 12) -> 12 - 1 = 11 (left: 11)",
                "Pruning": "NA"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "9 + 3 = 12 (left: 3 12 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 1": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 - 3 = 9 (left: 9 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 - 3 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 3": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 3 + 12 = 15 (left: 12 15)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 3 + 12 = 15 (left: 12 15) -> 12 + 15 = 27 (left: 27)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "0 12"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 12 / 0 = undefined",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 12 / 0 = undefined -> Division by zero is undefined.",
                "Pruning": null
            }
        },
        "Input": "3 3 9 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            }
        ]
    },
    "977": {
        "puzzle": "3 5 7 10",
        "Agent 0": {
            "Step 0": {
                "Step": "5 * 7 = 35 (left: 3 10 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 7 10"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 7 10 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 7 10 15) -> 7 * 10 = 70 (left: 70 15)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 7 10"
                }
            },
            "Step 3": {
                "Step": "3 + 5 = 8 (left: 7 8 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 7 + 8 = 15 (left: 10 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "1 2"
                }
            },
            "Step 5": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 8 10) -> 10 - 8 = 2 (left: 1 2) -> Possible next steps:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 8 10) -> 10 - 8 = 2 (left: 1 2) -> Possible next steps: -> There are no possible next steps for the given input.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 - 3 = 4 (left: 4 5 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 1": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 7 * 8 = 56 (left: 10 56)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 7 * 8 = 56 (left: 10 56) -> 10 + 56 = 66 (left: 66)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 3": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 / 7 = 1.14 (left: 1.14 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 / 7 = 1.14 (left: 1.14 10) -> 1.14 * 10 = 11.4 (left: 11.4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "-2 5 10"
                }
            },
            "Step 5": {
                "Step": "5 - 7 = -2 (left: 3 -2 10) -> 3 - (-2) = 5 (left: -2 5 10) -> 5 - (-2) = 7 (left: 7 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 - 7 = -2 (left: 3 -2 10) -> 3 - (-2) = 5 (left: -2 5 10) -> 5 - (-2) = 7 (left: 7 10) -> 7 + 10 = 17 (left: 17)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 * 7 = 35 (left: 3 10 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 7 10"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 7 10 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 7 10 15) -> 10 - 7 = 3 (left: 3 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 3": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 7 - 8 = -1 (left: -1 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 7 - 8 = -1 (left: -1 10) -> -1 + 10 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "-2 5 10"
                }
            },
            "Step 5": {
                "Step": "5 - 7 = -2 (left: 3 -2 10) -> 3 - (-2) = 5 (left: -2 5 10) -> 10 / 5 = 2 (left: -2 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 - 7 = -2 (left: 3 -2 10) -> 3 - (-2) = 5 (left: -2 5 10) -> 10 / 5 = 2 (left: -2 2) -> -2 * 2 = -4 (left: -4)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "3 + 5 = 8 (left: 7 8 10)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 1": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 7 + 8 = 15 (left: 10 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 7 + 8 = 15 (left: 10 15) -> Input: 25 30 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "-2 5 10"
                }
            },
            "Step 3": {
                "Step": "5 - 7 = -2 (left: 3 -2 10) -> 3 - (-2) = 5 (left: -2 5 10) -> -2 + 5 = 3 (left: 3 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 - 7 = -2 (left: 3 -2 10) -> 3 - (-2) = 5 (left: -2 5 10) -> -2 + 5 = 3 (left: 3 10) -> 10 / 3 = 3.33 (left: 3.33)",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "-2 5 10"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "-2 5 10"
                }
            },
            "Step 5": {
                "Step": "5 - 7 = -2 (left: 3 -2 10) -> 3 - (-2) = 5 (left: -2 5 10) -> 5 + 10 = 15 (left: -2 15)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 - 7 = -2 (left: 3 -2 10) -> 3 - (-2) = 5 (left: -2 5 10) -> 5 + 10 = 15 (left: -2 15) -> 15 / -2 = -7.5 (left: -7.5)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 + 5 = 8 (left: 7 8 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 1": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 8 = 2 (left: 2 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 8 = 2 (left: 2 8) -> 8 / 2 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 7 10"
                }
            },
            "Step 3": {
                "Step": "5 * 7 = 35 (left: 3 10 35)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 7 = 35 (left: 3 10 35) -> 3 + 10 = 13 (left: 13 35)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "1 2"
                }
            },
            "Step 5": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 8 10) -> 10 - 8 = 2 (left: 1 2) -> 2 / 1 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "1 2"
                }
            },
            "Step 6": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 8 10) -> 10 - 8 = 2 (left: 1 2) -> 1 + 2 = 3 (left: 3)",
                "Pruning": "NA"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "3 + 5 = 8 (left: 7 8 10)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 7 10"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 7 10 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 7 10 15) -> 10 / 7 = 1.43 (left: 1.43 15)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 3": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 7 * 8 = 56 (left: 10 56)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 7 * 8 = 56 (left: 10 56) -> 10 + 56 = 66 (left: 66)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "1 2"
                }
            },
            "Step 5": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 8 10) -> 10 - 8 = 2 (left: 1 2) -> 1 + 2 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "1 2"
                }
            },
            "Step 6": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 8 10) -> 10 - 8 = 2 (left: 1 2) -> 2 / 1 = 2 (left: 2)",
                "Pruning": "NA"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "3 * 5 = 15 (left: 7 10 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 1": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 7 10"
                }
            },
            "Step 3": {
                "Step": "5 + 7 = 12 (left: 3 10 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 7 = 12 (left: 3 10 12) -> ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "1 2"
                }
            },
            "Step 5": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 8 10) -> 10 - 8 = 2 (left: 1 2) -> 2 - 1 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "1 2"
                }
            },
            "Step 6": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 8 10) -> 10 - 8 = 2 (left: 1 2) -> 1 + 2 = 3 (left: 3)",
                "Pruning": "NA"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "7 + 5 = 12 (left: 3 10 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 7 10"
                }
            },
            "Step 1": {
                "Step": "5 - 7 = -2 (left: 3 -2 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 - 7 = -2 (left: 3 -2 10) -> 3 - (-2) = 5 (left: -2 5 10)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 3": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "-2 5 10"
                }
            },
            "Step 5": {
                "Step": "5 - 7 = -2 (left: 3 -2 10) -> 3 - (-2) = 5 (left: -2 5 10) -> 10 / 5 = 2 (left: -2 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 - 7 = -2 (left: 3 -2 10) -> 3 - (-2) = 5 (left: -2 5 10) -> 10 / 5 = 2 (left: -2 2) -> -2 - 2 = -4 (left: -4)",
                "Pruning": "NA"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "3 + 5 = 8 (left: 7 8 10)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 7 10"
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 3 7 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 3 7 5) -> 3 * 7 = 21 (left: 21 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 3": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 8 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 8 10) -> 10 - 8 = 2 (left: 1 2)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "-2 5 10"
                }
            },
            "Step 5": {
                "Step": "5 - 7 = -2 (left: 3 -2 10) -> 3 - (-2) = 5 (left: -2 5 10) -> 5 - (-2) = 7 (left: 7 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 - 7 = -2 (left: 3 -2 10) -> 3 - (-2) = 5 (left: -2 5 10) -> 5 - (-2) = 7 (left: 7 10) -> 10 / 7 = 1.43 (left: 1.43)",
                "Pruning": "NA"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "3 + 5 = 8 (left: 7 8 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 1": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 7 10"
                }
            },
            "Step 3": {
                "Step": "7 + 3 = 10 (left: 5 10 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 + 3 = 10 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "1.43 15"
                }
            },
            "Step 5": {
                "Step": "3 * 5 = 15 (left: 7 10 15) -> 10 / 7 = 1.43 (left: 1.43 15) -> 1.43 + 15 = 16.43 (left: 16.43)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 5 = 15 (left: 7 10 15) -> 10 / 7 = 1.43 (left: 1.43 15) -> 1.43 + 15 = 16.43 (left: 16.43) -> There are no possible next steps with the input 16.43 as it is a single number and cannot be combined with any other numbers using basic arithmetic operations.",
                "Pruning": null
            }
        },
        "Input": "3 5 7 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            }
        ]
    },
    "978": {
        "puzzle": "4 10 12 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 12 = 1 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 12 13"
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left: 9 12 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 9 12  -> 9 - 12 = -3 (left: -3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 12 13"
                }
            },
            "Step 3": {
                "Step": "13 - 10 = 3 (left: ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 10 = 3 (left:  -> It seems like you did not provide an input for the possible next steps. Please provide the numbers for which you want to find possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "13 - 12 = 1 (left:"
                }
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 13 - 12 = 1 (left: -> 13 - 12 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 13 - 12 = 1 (left: -> 13 - 12 = 1 (left: 1) -> There are no possible next steps with just one number provided.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 10 = 40 (left: 12 13 40)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "10 12 9"
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left: 10 12 9) -> 9 - 10 = -1 (left: -1 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 10 12 9) -> 9 - 10 = -1 (left: -1 9) -> -1 + 9 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 12 13"
                }
            },
            "Step 3": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 12 / 2.5 = 4.8 (left: 4.8 13",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "3.33 13"
                }
            },
            "Step 5": {
                "Step": "4 * 10 = 40 (left: 12 40 13) -> 40 / 12 = 3.33 (left: 3.33 13) -> 5 + 25 = 30 (left: 30)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 10 = 40 (left: 12 40 13) -> 40 / 12 = 3.33 (left: 3.33 13) -> 5 + 25 = 30 (left: 30) -> There are no possible next steps with the input 30.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 12 13"
                }
            },
            "Step 1": {
                "Step": "10 - 4 = 6 (left: 6 12 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 12 - 6 = 6 (left: 6 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "3.33 13"
                }
            },
            "Step 3": {
                "Step": "4 * 10 = 40 (left: 12 40 13) -> 40 / 12 = 3.33 (left: 3.33 13) -> 13 / 3.33 = 3.903 (left: 3.903)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 * 10 = 40 (left: 12 40 13) -> 40 / 12 = 3.33 (left: 3.33 13) -> 13 / 3.33 = 3.903 (left: 3.903) -> 3.903 + 3 = 6.903 (left: 3 6.903)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3 6.903"
                }
            },
            "Step 5": {
                "Step": "4 * 10 = 40 (left: 12 40 13) -> 40 / 12 = 3.33 (left: 3.33 13) -> 13 / 3.33 = 3.903 (left: 3.903) -> 3.903 + 3 = 6.903 (left: 3 6.903) -> 3 * 6.903 = 20.709 (left: 6.903 20.709)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 10 = 40 (left: 12 40 13) -> 40 / 12 = 3.33 (left: 3.33 13) -> 13 / 3.33 = 3.903 (left: 3.903) -> 3.903 + 3 = 6.903 (left: 3 6.903) -> 3 * 6.903 = 20.709 (left: 6.903 20.709) -> 6.903 + 20.709 = 27.612 (left: 20.709 27.612)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 12 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 12 13"
                }
            },
            "Step 1": {
                "Step": "12 - 4 = 8 (left: 8 10 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 4 = 8 (left: 8 10 13) -> Input:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 12 13"
                }
            },
            "Step 3": {
                "Step": "12 + 4 = 16 (left: 10 13 16)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 + 4 = 16 (left: 10 13 16) -> 10 * 13 = 130 (left: 16 130)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "13 - 12 = 1 (left:"
                }
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 13 - 12 = 1 (left: -> 5 * 5 = 25 (left: 25",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 13 - 12 = 1 (left: -> 5 * 5 = 25 (left: 25 -> 25 + 2 = 27 (left: 2)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "3 6.903"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 12 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 12 13"
                }
            },
            "Step 1": {
                "Step": "12 + 4 = 16 (left: 10 13 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 + 4 = 16 (left: 10 13 16) -> 10 * 13 = 130 (left: 130 16)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 12 13"
                }
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 6 12 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 13 - 6 = 7 (left: 6 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "4.8 13"
                }
            },
            "Step 5": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 12 / 2.5 = 4.8 (left: 4.8 13 -> 4.8 + 13 = 17.8 (left: 17.8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 12 / 2.5 = 4.8 (left: 4.8 13 -> 4.8 + 13 = 17.8 (left: 17.8) -> There are no possible next steps for the input 17.8 as it is a single number and cannot be combined with any of the other numbers.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "4 + 10 = 14 (left: 12 14 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "2.5 12 13"
                }
            },
            "Step 1": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 2.5 + 12 = 14.5 (left: 13 14.5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 2.5 + 12 = 14.5 (left: 13 14.5) -> 13 - 14.5 = -1.5 (left: -1.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 12 13"
                }
            },
            "Step 3": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 12 - 2.5 = 9.5 (left: 9.5 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3 6.903"
                }
            },
            "Step 5": {
                "Step": "4 * 10 = 40 (left: 12 40 13) -> 40 / 12 = 3.33 (left: 3.33 13) -> 13 / 3.33 = 3.903 (left: 3.903) -> 3.903 + 3 = 6.903 (left: 3 6.903) -> 3 + 6.903 = 9.903 (left: 6.903 9.903)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 10 = 40 (left: 12 40 13) -> 40 / 12 = 3.33 (left: 3.33 13) -> 13 / 3.33 = 3.903 (left: 3.903) -> 3.903 + 3 = 6.903 (left: 3 6.903) -> 3 + 6.903 = 9.903 (left: 6.903 9.903) -> Possible next steps",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "4 + 10 = 14 (left: 12 13 14)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "2.5 12 13"
                }
            },
            "Step 1": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 12 / 2.5 = 4.8 (left: 4.8 13",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 12 / 2.5 = 4.8 (left: 4.8 13 -> 4.8 * 13 = 62.4 (left: 62.4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 12 13"
                }
            },
            "Step 3": {
                "Step": "12 - 10 = 2 (left: 2 13 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 10 = 2 (left: 2 13 12) -> 13 / 2 = 6.5 (left: 6.5 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "4.8 13"
                }
            },
            "Step 5": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 12 / 2.5 = 4.8 (left: 4.8 13 -> 4.8 * 13 = 62.4 (left: 62.4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 12 / 2.5 = 4.8 (left: 4.8 13 -> 4.8 * 13 = 62.4 (left: 62.4) -> There are no possible next steps with the input 62.4.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "13 - 4 = 9 (left: 10 12 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "10 16 13"
                }
            },
            "Step 1": {
                "Step": "12 + 4 = 16 (left: 10 16 13) -> 10 + 16 = 26 (left: 13 26)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 + 4 = 16 (left: 10 16 13) -> 10 + 16 = 26 (left: 13 26) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 12 13"
                }
            },
            "Step 3": {
                "Step": "12 + 4 = 16 (left: 10 13 16)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 + 4 = 16 (left: 10 13 16) -> 10 + 13 = 23 (left: 23 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "13 - 12 = 1 (left:"
                }
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 13 - 12 = 1 (left: -> 13 - 1 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 13 - 12 = 1 (left: -> 13 - 1 = 12 (left: 12) -> 12 - 8 = 4 (left: 4 8)",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "4 * 10 = 40 (left: 12 13 40)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 12 13"
                }
            },
            "Step 1": {
                "Step": "10 - 4 = 6 (left: 6 12 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 13 - 12 = 1 (left:",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 12 13"
                }
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left:  -> It appears you did not provide an input. Please provide the numbers you would like to work with.",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "6.5 12"
                }
            },
            "Step 5": {
                "Step": "12 - 10 = 2 (left: 2 13 12) -> 13 / 2 = 6.5 (left: 6.5 12) -> 6.5 + 12 = 18.5 (left: 18.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 10 = 2 (left: 2 13 12) -> 13 / 2 = 6.5 (left: 6.5 12) -> 6.5 + 12 = 18.5 (left: 18.5) -> There are no possible next steps with the input of 18.5.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "12 + 4 = 16 (left: 10 16 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 12 13"
                }
            },
            "Step 1": {
                "Step": "4 * 10 = 40 (left: 12 40 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 10 = 40 (left: 12 40 13) -> 40 / 12 = 3.33 (left: 3.33 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 12 13"
                }
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 6 12 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 6 * 2 = 12 (left: 12 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3 6.903"
                }
            },
            "Step 5": {
                "Step": "4 * 10 = 40 (left: 12 40 13) -> 40 / 12 = 3.33 (left: 3.33 13) -> 13 / 3.33 = 3.903 (left: 3.903) -> 3.903 + 3 = 6.903 (left: 3 6.903) -> 3 + 6.903 = 9.903 (left: 6.903 9.903)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 10 = 40 (left: 12 40 13) -> 40 / 12 = 3.33 (left: 3.33 13) -> 13 / 3.33 = 3.903 (left: 3.903) -> 3.903 + 3 = 6.903 (left: 3 6.903) -> 3 + 6.903 = 9.903 (left: 6.903 9.903) -> Possible next steps:",
                "Pruning": null
            }
        },
        "Input": "4 10 12 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "979": {
        "puzzle": "2 3 10 12",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 10 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 10 12"
                }
            },
            "Step 1": {
                "Step": "2 + 10 = 12 (left: 3 12 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 10 = 12 (left: 3 12 12) -> 3 * 12 = 36 (left: 12 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 10 12"
                }
            },
            "Step 3": {
                "Step": "12 - 10 = 2 (left: 2 3 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 10 = 2 (left: 2 3 12) -> 3 + 2 = 5 (left: 5 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "1 32"
                }
            },
            "Step 5": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 12 - 6 = 6 (left: 6 10) -> 6 + 10 = 16 (left: 16) -> 16 + 16 = 32 -> 16 / 16 = 1 (left: 1 32) -> 1 + 32 = 33 (left: 33)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "16"
                }
            },
            "Step 6": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 12 - 6 = 6 (left: 6 10) -> 6 + 10 = 16 (left: 16) -> 16 / 2 = 8",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 10 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 10 12"
                }
            },
            "Step 1": {
                "Step": "10 - 3 = 7 (left: 2 7 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 3 = 7 (left: 2 7 12) -> 12 / 2 = 6 (left: 6 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 10 12"
                }
            },
            "Step 3": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 10 - 6 = 4 (left: 4 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 10 - 6 = 4 (left: 4 12) -> 12 - 4 = 8 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "1 32"
                }
            },
            "Step 5": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 12 - 6 = 6 (left: 6 10) -> 6 + 10 = 16 (left: 16) -> 16 + 16 = 32 -> 16 / 16 = 1 (left: 1 32) -> 32 - 1 = 31 (left: 1 31)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 12 - 6 = 6 (left: 6 10) -> 6 + 10 = 16 (left: 16) -> 16 + 16 = 32 -> 16 / 16 = 1 (left: 1 32) -> 32 - 1 = 31 (left: 1 31) -> 31 - 1 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "1 32"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 / 3 = 4 (left: 2 4 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 10 12"
                }
            },
            "Step 1": {
                "Step": "10 / 2 = 5 (left: 2 5 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 2 = 5 (left: 2 5  -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 10 12"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 - 5 = 5 (left: 5 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 - 5 = 5 (left: 5 12) -> 12 - 5 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 / 5 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 / 5 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (2 + 3) * (10 / 5) * 12 = 24",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "1 32"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 10 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 10 12"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 6 10 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 6 10 12) -> Input: 16 22 6 120",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "16"
                }
            },
            "Step 3": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 12 - 6 = 6 (left: 6 10) -> 6 + 10 = 16 (left: 16) -> 16 + 16 = 32",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 12 - 6 = 6 (left: 6 10) -> 6 + 10 = 16 (left: 16) -> 16 + 16 = 32 -> 16 / 16 = 1 (left: 1 32)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 6 10 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (3 * 2) * (10 / 12) = 24",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "3 * 2 = 6 (left: 6 10 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: ((2 * 3) + 10) * 12 = 24",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "1 32"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 10 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 10 12"
                }
            },
            "Step 1": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 10 + 6 = 16 (left: 16 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 10 + 6 = 16 (left: 16 12) -> 16 * 12 = 192 (left: 192)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 6 10 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (3 * 2) * (10 / 12) = 24",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "16"
                }
            },
            "Step 4": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 12 - 6 = 6 (left: 6 10) -> 6 + 10 = 16 (left: 16) -> There are no possible next steps with just the number 16.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 6 10 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: ((3 * 2) / 10) * 12 = 24",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "3 * 2 = 6 (left: 6 10 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: ((2 * 3) / 6) * 12 = 24",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "1 32"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 10 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 10 12"
                }
            },
            "Step 1": {
                "Step": "10 + 2 = 12 (left: 3 12 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 2 = 12 (left: 3 12 12) -> 12 - 3 = 9 (left: 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 10 12"
                }
            },
            "Step 3": {
                "Step": "12 - 3 = 9 (left: 2 9 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 3 = 9 (left: 2 9  -> Input: 3 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 6 10 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (3 * 2) * (10 / 12) = 24",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "16"
                }
            },
            "Step 6": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 12 - 6 = 6 (left: 6 10) -> 6 + 10 = 16 (left: 16) -> There are no possible next steps as the input is already a single number.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 10 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 10 12"
                }
            },
            "Step 1": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 12 - 6 = 6 (left: 6 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 12 - 6 = 6 (left: 6 10) -> 6 + 10 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 10 12"
                }
            },
            "Step 3": {
                "Step": "12 - 2 = 10 (left: 3 10 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 2 = 10 (left: 3 10 12) -> 3 * 10 = 30 (left: 30 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "16"
                }
            },
            "Step 5": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 12 - 6 = 6 (left: 6 10) -> 6 + 10 = 16 (left: 16) -> There are no possible next steps with the input 16.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 12 - 6 = 6 (left: 6 10) -> 6 + 10 = 16 (left: 16) -> There are no possible next steps with the input 16. -> 16 - 8 = 8 (left: 8 8)",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "3 * 2 = 6 (left: 6 10 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 10 12"
                }
            },
            "Step 1": {
                "Step": "12 - 10 = 2 (left: 2 3 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 10 = 2 (left: 2 3 12) -> 2 + 3 = 5 (left: 5 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 10 12"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 5 + 10 = 15 (left: 15 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 5 + 10 = 15 (left: 15 12) -> 15 * 12 = 180 (left: 180)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 / 5 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 / 5 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10) -> 10 + 8 = 18 (left: 8)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "1 32"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "2 * 3 = 6 (left: 6 10 12)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 10 12"
                }
            },
            "Step 1": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 12 - 6 = 6 (left: 6 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 12 - 6 = 6 (left: 6 10) -> 4 - 16 = -12 (left: -12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 10 12"
                }
            },
            "Step 3": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 6 + 10 = 16 (left: 16 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 6 + 10 = 16 (left: 16 12) -> 16 / 12 = 1.3333333333333333 (left: 1.3333333333333333)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 6 10 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (3 * 2) * (10 / 12) = 24",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "3 * 2 = 6 (left: 6 10 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (3 * 2) * (10 / 6) = 24",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "1 32"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "12 - 10 = 2 (left: 2 3 12)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 10 12"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 6 10 12) -> 12 / 6 = 2 (left: 2 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 6 10 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 10 12"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 10 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 / 5 = 2 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "1 32"
                }
            },
            "Step 5": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 12 - 6 = 6 (left: 6 10) -> 6 + 10 = 16 (left: 16) -> 16 + 16 = 32 -> 16 / 16 = 1 (left: 1 32) -> 32 - 1 = 31 (left: 1 31)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 12 - 6 = 6 (left: 6 10) -> 6 + 10 = 16 (left: 16) -> 16 + 16 = 32 -> 16 / 16 = 1 (left: 1 32) -> 32 - 1 = 31 (left: 1 31) -> 1 * 31 = 31 (left: 31)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "1 32"
                }
            }
        },
        "Input": "2 3 10 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "980": {
        "puzzle": "3 4 6 6",
        "Agent 0": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 3 6 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 1": {
                "Step": "6 / 3 = 2 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 3 = 2 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6) -> 1.5 + 6 = 7.5 (left: 7.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 6 * 1 = 6 (left: 6 6 6) -> 6 * 6 = 36 (left: 36) -> 36 / 9 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "0.6666666666666666 36"
                }
            },
            "Step 4": {
                "Step": "6 / 3 = 2 (left: 4 6 6) -> 4 / 6 = 0.6666666666666666 (left: 0.6666666666666666 6 6) -> 6 * 6 = 36 (left: 0.6666666666666666 36) -> 36 - 0.6666666666666666 = 35.333333333333336 (left: 35.333333",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "36"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "0.6666666666666666 36"
                }
            },
            "Step 5": {
                "Step": "6 / 3 = 2 (left: 4 6 6) -> 4 / 6 = 0.6666666666666666 (left: 0.6666666666666666 6 6) -> 6 * 6 = 36 (left: 0.6666666666666666 36) -> 0.6666666666666666",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "36"
                }
            },
            "Step 6": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 6 * 1 = 6 (left: 6 6 6) -> 6 * 6 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 4 = 2 (left: 2 6 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 4 = 2 (left: 2 6 6) -> 2 + 6 = 8 (left: 6 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 9 6"
                }
            },
            "Step 3": {
                "Step": "6 + 3 = 9 (left: 4 9 6) -> 6 - 4 = 2 (left: 2 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 3 = 9 (left: 4 9 6) -> 6 - 4 = 2 (left: 2 9) -> 9 - 2 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "0.6666666666666666 36"
                }
            },
            "Step 5": {
                "Step": "6 / 3 = 2 (left: 4 6 6) -> 4 / 6 = 0.6666666666666666 (left: 0.6666666666666666 6 6) -> 6 * 6 = 36 (left: 0.6666666666666666 36) -> 36 - 0.666666666",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 3 = 2 (left: 4 6 6) -> 4 / 6 = 0.6666666666666666 (left: 0.6666666666666666 6 6) -> 6 * 6 = 36 (left: 0.6666666666666666 36) -> 36 - 0.666666666 -> 36 - 0.666666666 = 35.333333334",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 4 9 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 3"
                }
            },
            "Step 1": {
                "Step": "6 - 3 = 3 (left: 4 6 3) -> 6 / 3 = 2 (left: 4 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 3 = 3 (left: 4 6 3) -> 6 / 3 = 2 (left: 4 2) -> 4 + 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 6 6"
                }
            },
            "Step 3": {
                "Step": "6 / 3 = 2 (left: 2 6 6) -> 6 / 2 = 3 (left: 3 6)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 / 3 = 2 (left: 2 6 6) -> 6 / 2 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 6 * 1 = 6 (left: 6 6 6) -> 6 * 6 = 36 (left: 36) -> 36 + 2 = 38",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 6 * 1 = 6 (left: 6 6 6) -> 6 * 6 = 36 (left: 36) -> 36 + 2 = 38 -> 36 / 2 = 18 (left: 18 2 = 38)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 - 3 = 1 (left: 1 6 6)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 6 6"
                }
            },
            "Step 1": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 6 / 1 = 6 (left: 6 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 6 / 1 = 6 (left: 6 6) -> 6 + 6 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 6 6"
                }
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 3 6 24)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 3 6 24) -> 6 / 3 = 2 (left: 2 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "6 / 3 = 2 (left: 2 6 6) -> 6 / 2 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> 18 / 8 = 2.25 (left: 2.25)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "36"
                }
            },
            "Step 6": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 6 * 1 = 6 (left: 6 6 6) -> 6 * 6 = 36 (left: 36) -> There are no possible next steps because there are no other numbers provided to perform operations with.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 / 3 = 2 (left: 4 6 6)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 6 6"
                }
            },
            "Step 1": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 6 * 1 = 6 (left: 6 6 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 6 * 1 = 6 (left: 6 6 6) -> 6 * 6 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 6 * 1 = 6 (left: 6 6 6) -> 6 * 6 = 36 (left: 36) -> None",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "4 6 6"
                }
            },
            "Step 4": {
                "Step": "6 / 3 = 2 (left: 4 6 6) -> 6 + 4 = 10 (left: 6 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 6 * 1 = 6 (left: 6 6 6) -> 6 * 6 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 6 * 1 = 6 (left: 6 6 6) -> 6 * 6 = 36 (left: 36) -> 36 / 2 = 18 -> 36 - 2 = 34 (left: 34)",
                "Pruning": "NA"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "6 / 3 = 2 (left: 2 6 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 6 6"
                }
            },
            "Step 1": {
                "Step": "6 / 3 = 2 (left: 2 6 6) -> 6 - 2 = 4 (left: 4 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 3 = 2 (left: 2 6 6) -> 6 - 2 = 4 (left: 4 6) -> 4 + 6 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 6 6"
                }
            },
            "Step 3": {
                "Step": "6 / 3 = 2 (left: 2 6 6) -> 6 * 2 = 12 (left: 6 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 / 3 = 2 (left: 2 6 6) -> 6 * 2 = 12 (left: 6 12) -> 6 * 12 = 72 (left: 72)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 6 * 1 = 6 (left: 6 6 6) -> 6 * 6 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 6 * 1 = 6 (left: 6 6 6) -> 6 * 6 = 36 (left: 36) -> 36 / 2 = 18 -> 36 + 2 = 38 (left: 38)",
                "Pruning": "NA"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 - 3 = 3 (left: 4 6 3)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 1": {
                "Step": "6 / 3 = 2 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 3 = 2 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6 6) -> 6 / 6 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 6 6"
                }
            },
            "Step 3": {
                "Step": "6 / 3 = 2 (left: 2 6 6) -> 6 - 2 = 4 (left: 4 6)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 / 3 = 2 (left: 2 6 6) -> 6 - 2 = 4 (left: 4 6) -> 3 + 9 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 6 * 1 = 6 (left: 6 6 6) -> 6 * 6 = 36 (left: 36) -> 36 / 18 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "0.6666666666666666 36"
                }
            },
            "Step 6": {
                "Step": "6 / 3 = 2 (left: 4 6 6) -> 4 / 6 = 0.6666666666666666 (left: 0.6666666666666666 6 6) -> 6 * 6 = 36 (left: 0.6666666666666666 36) -> 0.6666666666666666 + 36 = 36.66666666666666 (left: 36.66666666666666)",
                "Pruning": "NA"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "6 - 3 = 3 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 6 6"
                }
            },
            "Step 1": {
                "Step": "6 / 3 = 2 (left: 2 6 6) -> 6 - 2 = 4 (left: 4 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 3 = 2 (left: 2 6 6) -> 6 - 2 = 4 (left: 4 6) -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "0.6666666666666666 36"
                }
            },
            "Step 3": {
                "Step": "6 / 3 = 2 (left: 4 6 6) -> 4 / 6 = 0.6666666666666666 (left: 0.6666666666666666 6 6) -> 6 * 6 = 36 (left: 0.6666666666666666 36) -> 36 * 0.6666666666666666 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "2 6 6"
                }
            },
            "Step 4": {
                "Step": "6 / 3 = 2 (left: 2 6 6) -> Input: 3 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 6 * 1 = 6 (left: 6 6 6) -> 6 * 6 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 6 * 1 = 6 (left: 6 6 6) -> 6 * 6 = 36 (left: 36) -> 36 / 2 = 18 -> Input: 18 * 2 = 36",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "6 / 3 = 2 (left: 2 6 6)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 1": {
                "Step": "6 / 3 = 2 (left: 4 6 6) -> 4 / 6 = 0.6666666666666666 (left: 0.6666666666666666 6 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 3 = 2 (left: 4 6 6) -> 4 / 6 = 0.6666666666666666 (left: 0.6666666666666666 6 6) -> 6 * 6 = 36 (left: 0.6666666666666666 36)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 6 6"
                }
            },
            "Step 3": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> Input: ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> Input:  -> There was an error in the input format. Please provide a valid input sequence.",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 6 * 1 = 6 (left: 6 6 6) -> 6 * 6 = 36 (left: 36) -> No possible next steps as there is only one number.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 6 * 1 = 6 (left: 6 6 6) -> 6 * 6 = 36 (left: 36) -> No possible next steps as there is only one number. -> No possible next steps as there is only one number.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "6 - 3 = 3 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 6 6"
                }
            },
            "Step 1": {
                "Step": "6 / 3 = 2 (left: 2 6 6) -> 6 / 2 = 3 (left: 3 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 3 = 2 (left: 2 6 6) -> 6 / 2 = 3 (left: 3 6) -> 6 - 3 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 6 6"
                }
            },
            "Step 3": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 6 / 1 = 6 (left: 6 6)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 6 / 1 = 6 (left: 6 6) -> 6 * 6 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "0.6666666666666666 36"
                }
            },
            "Step 5": {
                "Step": "6 / 3 = 2 (left: 4 6 6) -> 4 / 6 = 0.6666666666666666 (left: 0.6666666666666666 6 6) -> 6 * 6 = 36 (left: 0.6666666666666666 36) -> 36 - 0.6666666666666666 = 35.333333333333336 (left: 35.333333",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "36"
                }
            },
            "Step 6": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 6 * 1 = 6 (left: 6 6 6) -> 6 * 6 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            }
        },
        "Input": "3 4 6 6",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "981": {
        "puzzle": "5 8 8 8",
        "Agent 0": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 8 8 13)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.66667 (left: 2.66667 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.66667 (left: 2.66667 8) -> 8 - 2.66667 = 5.33333 (left: 5.33333 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 * 8 = 24 (left: 8 24)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 * 8 = 24 (left: 8 24) -> 8 * 3 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "2.67 8"
                }
            },
            "Step 5": {
                "Step": "8 - 5 = 3 (left: 5 3 8) -> 8 / 3 = 2.67 (left: 2.67 8) -> 8 / 2.67 = 2.99 (left: 2.99)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 5 = 3 (left: 5 3 8) -> 8 / 3 = 2.67 (left: 2.67 8) -> 8 / 2.67 = 2.99 (left: 2.99) -> 2.99 + 2 = 4.99 (left: 4.99)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 - 5 = 3 (left: 3 8 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 8 8"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left:  -> No input provided. Please provide a list of numbers to find possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 8 8"
                }
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 8 8 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 8 8 13) -> 13 / 8 = 1.625 (left:",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "64 40"
                }
            },
            "Step 5": {
                "Step": "5 * 8 = 40 (left: 8 8 40) -> 8 * 8 = 64 (left: 64 40) -> 64 - 40 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 8 = 40 (left: 8 8 40) -> 8 * 8 = 64 (left: 64 40) -> 64 - 40 = 24 (left: 24) -> Answer: (5 * 8) - (8 * 8) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 8 8 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 + 8 = 11 (left: 8 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 + 8 = 11 (left: 8 11) -> 8 / 11 = 0.7272727272727273 (left: 0.7272727272727273)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 8 8"
                }
            },
            "Step 3": {
                "Step": "8 / 5 = 1.6 (left: 1.6 8 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 / 5 = 1.6 (left: 1.6 8 8) -> 8 - 1.6 = 6.4 (left: 6.4 8",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 * 8 = 24 (left: 8 24) -> 8 * 3 = 24 (left: 24) -> Answer: (8 - 5) * 8 = 24 or 8 * (3 * 8) = 24",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 * 8 = 24 (left: 8 24) -> 8 * 3 = 24 (left: 24) -> Answer: (8 - 5) * (8 + 8) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "8 / 5 = 1.6 (left: 1.6 8 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 8 8"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 5 3 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 5 3 8) -> 8 / 3 = 2.67 (left: 2.67 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 8 8"
                }
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 8 8 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 8 8 13) -> 13 - 8 = 5 (left: 8 5)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 * 8 = 24 (left: 8 24) -> 8 * 3 = 24 (left: 24) -> Answer: (8 - 5) * 8 = 24",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 * 8 = 24 (left: 8 24) -> 8 * 3 = 24 (left: 24) -> Answer: (8 - 5) * 8 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "8 / 5 = 1.6 (left",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 8 8"
                }
            },
            "Step 1": {
                "Step": "8 / 5 = 1.6 (left: 1.6 8 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 / 5 = 1.6 (left: 1.6 8 8) -> 8 - 1.6 = 6.4 (left: 6.4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 * 3 = 24 (left: 24 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 * 3 = 24 (left: 24 8) -> 24 * 8 = 192 (left: 192)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 * 8 = 24 (left: 8 24) -> 8 * 3 = 24 (left: 24) -> Answer: (8 - 5) * (8 * 3) = 24",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 * 8 = 24 (left: 8 24) -> 8 * 3 = 24 (left: 24) -> Answer: (8 - 5) * (8 + 8) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 8 8 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.67 (left: 2.67 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.67 (left: 2.67 8) -> 8 / 2.67 = 2.99 (left: 2.99)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 + ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 +  -> 3 / 8 = 0.375 (left: 0.375)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 * 8 = 24 (left: 8 24) -> 8 * 3 = 24 (left: 24) -> Answer: (8 - 5) * 8 = 24",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 * 8 = 24 (left: 8 24) -> 8 * 3 = 24 (left: 24) -> Answer: (8 - 5) * 8 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 8 8 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 - 3 = 5 (left: 5 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 - 3 = 5 (left: 5 8) -> 5 * 8 = 40 (left: 40)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 8 8"
                }
            },
            "Step 3": {
                "Step": "5 * 8 = 40 (left: 8 8 40)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 8 = 40 (left: 8 8 40) -> 8 * 8 = 64 (left: 64 40)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 * 8 = 24 (left: 8 24) -> 8 * 3 = 24 (left: 24) -> Answer: (8 - 5) * (8 + 8) = 24",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 * 8 = 24 (left: 8 24) -> 8 * 3 = 24 (left: 24) -> Answer: (8 - 5) * (8 + 8) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "8 / 5 = 1.6 (left",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 8 8"
                }
            },
            "Step 1": {
                "Step": "8 + 5 = 13 (left: 8 8 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 + 5 = 13 (left: 8 8 13) -> 8 / 8 = 1 (left: 1 13)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 + 8 = 11 (left: 8 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 + 8 = 11 (left: 8 11) -> 8 + 11 = 19 (left: 19)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "8 5"
                }
            },
            "Step 5": {
                "Step": "5 + 8 = 13 (left: 8 8 13) -> 13 - 8 = 5 (left: 8 5) -> 8 + 5 = 13 (left: 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 8 = 13 (left: 8 8 13) -> 13 - 8 = 5 (left: 8 5) -> 8 + 5 = 13 (left: 13) -> 13 - 2 = 11 (left: 11 13)",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "8 / 5 = 1.6 (left: 1.6 8 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 8 8"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 8 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.67 (left: 2.67 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 + 8 = 11 (left: 8 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 + 8 = 11 (left: 8 11) -> 8 * 11 = 88 (left: 88)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 * 8 = 24 (left: 8 24) -> 8 * 3 = 24 (left: 24) -> Answer: (8 - 5) * 8 = 24",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 * 8 = 24 (left: 8 24) -> 8 * 3 = 24 (left: 24) -> Answer: (8 - 5) * 8 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 8 8 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> Input:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> Input: -> Please provide a set of numbers to determine the possible next steps.",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 8 8"
                }
            },
            "Step 3": {
                "Step": "8 * 5 = 40 (left: 8 8 40)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 * 5 = 40 (left: 8 8 40) -> 8 + 8 = 16 (left: 16 40)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "64 40"
                }
            },
            "Step 5": {
                "Step": "5 * 8 = 40 (left: 8 8 40) -> 8 * 8 = 64 (left: 64 40) -> 64 * 40 = 2560 (left: 2560)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 8 = 40 (left: 8 8 40) -> 8 * 8 = 64 (left: 64 40) -> 64 * 40 = 2560 (left: 2560) -> 25 + 60 = 85 (left: 85)  ",
                "Pruning": "NA"
            }
        },
        "Input": "5 8 8 8",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "982": {
        "puzzle": "6 8 8 12",
        "Agent 0": {
            "Step 0": {
                "Step": "8 / 6 = 1.3333 (left: 1.3333 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 8 12"
                }
            },
            "Step 1": {
                "Step": "6 * 8 = 48 (left: 8 12 48)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 - 8 = 4 (left: 4 48)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "44 4"
                }
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 - 8 = 4 (left: 4 48) -> 48 - 4 = 44 (left: 44 4) -> 44 / 4 = 11 (left: 4 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 - 8 = 4 (left: 4 48) -> 48 - 4 = 44 (left: 44 4) -> 44 / 4 = 11 (left: 4 11) -> 9 / 3 = 3 (left: 3 3)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "44 4"
                }
            },
            "Step 5": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 - 8 = 4 (left: 4 48) -> 48 - 4 = 44 (left: 44 4) -> 44 / 4 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "48"
                }
            },
            "Step 6": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 48 / 8 = 6 (left: 6 48) -> 6 * 8 = 48 (left: 48) -> No possible next steps as there is only one number provided.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 - 6 = 2 (left: 2 8 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 1": {
                "Step": "6 + 8 = 14 (left: 8 8 12) -> 12 / 8 = 1.5 (left: 1.5 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 8 = 14 (left: 8 8 12) -> 12 / 8 = 1.5 (left: 1.5 8) -> 1.5 * 8 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 3": {
                "Step": "6 + 8 = 14 (left: 8 8 12) -> 8 / 8 = 1 (left: 1 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 8 = 14 (left: 8 8 12) -> 8 / 8 = 1 (left: 1 12) -> 12 - 1 = 11 (left",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "3 3"
                }
            },
            "Step 5": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 - 8 = 4 (left: 4 48) -> 48 - 4 = 44 (left: 44 4) -> 44 / 4 = 11 (left: 4 11) -> 9 / 3 = 3 (left: 3 3) -> 3 + 3 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "44 4"
                }
            },
            "Step 6": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 - 8 = 4 (left: 4 48) -> 48 - 4 = 44 (left: 44 4) -> 44 * 4 = 176 (left: 4)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "3 3"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 8 = 14 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 8 12"
                }
            },
            "Step 1": {
                "Step": "6 * 8 = 48 (left: 8 12 48)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 + 8 = 20 (left: 20 48)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 3": {
                "Step": "6 + 8 = 14 (left: 8 8 12) -> 12 / 8 = 1.5 (left: 8 1.5)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 8 = 14 (left: 8 8 12) -> 12 / 8 = 1.5 (left: 8 1.5) -> 8 + 1.5 = 9.5 (left: 9.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "44 4"
                }
            },
            "Step 5": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 - 8 = 4 (left: 4 48) -> 48 - 4 = 44 (left: 44 4) -> 44 - 4 = 40 (left: 40)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "44 4"
                }
            },
            "Step 6": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 - 8 = 4 (left: 4 48) -> 48 - 4 = 44 (left: 44 4) -> 44 - 4 = 40 (left: 40)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "3 3"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 + 8 = 14 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 8 12"
                }
            },
            "Step 1": {
                "Step": "8 / 6 = 1.33 (left: 1.33 8 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 / 6 = 1.33 (left: 1.33 8 12) -> 8 - 1.33 = 6.67 (left: 6.67 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "48"
                }
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 48 / 8 = 6 (left: 6 48) -> 6 * 8 = 48 (left: 48) -> 48/2 = 24",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 48 / 8 = 6 (left: 6 48) -> 6 * 8 = 48 (left: 48) -> 48/2 = 24 -> 24 * 2 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "48"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "44 4"
                }
            },
            "Step 5": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 - 8 = 4 (left: 4 48) -> 48 - 4 = 44 (left: 44 4) -> 44 * 4 = 176 (left: 176)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "44 4"
                }
            },
            "Step 6": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 - 8 = 4 (left: 4 48) -> 48 - 4 = 44 (left: 44 4) -> 44 - 4 = 40 (left: 40)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "3 3"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 * 8 = 48 (left: 8 12 48)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "8 12 48"
                }
            },
            "Step 1": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 - 8 = 4 (left: 4 48)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 - 8 = 4 (left: 4 48) -> 48 - 4 = 44 (left: 44 4)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "44 4"
                }
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 - 8 = 4 (left: 4 48) -> 48 - 4 = 44 (left: 44 4) -> 44 + 4 = 48 (left: 4 48)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 - 8 = 4 (left: 4 48) -> 48 - 4 = 44 (left: 44 4) -> 44 + 4 = 48 (left: 4 48) -> 4 + 48 = 52",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "44 4"
                }
            },
            "Step 5": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 - 8 = 4 (left: 4 48) -> 48 - 4 = 44 (left: 44 4) -> 44 - 4 = 40 (left: 40)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "3 3"
                }
            },
            "Step 6": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 - 8 = 4 (left: 4 48) -> 48 - 4 = 44 (left: 44 4) -> 44 / 4 = 11 (left: 4 11) -> 9 / 3 = 3 (left: 3 3) -> 3 * 3 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "3 3"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "6 * 8 = 48 (left: 8 12 48)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 8 12"
                }
            },
            "Step 1": {
                "Step": "8 - 6 = 2 (left: 2 8 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 6 = 2 (left: 2 8 12) -> 8 * 12 = 96 (left: 2 96)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "44 4"
                }
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 - 8 = 4 (left: 4 48) -> 48 - 4 = 44 (left: 44 4) -> 44 + 4 = 48 (left: 4 48)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 - 8 = 4 (left: 4 48) -> 48 - 4 = 44 (left: 44 4) -> 44 + 4 = 48 (left: 4 48) -> 48 / 4 = 12 (left: 12 48)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "3 3"
                }
            },
            "Step 5": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 - 8 = 4 (left: 4 48) -> 48 - 4 = 44 (left: 44 4) -> 44 / 4 = 11 (left: 4 11) -> 9 / 3 = 3 (left: 3 3) -> 3 / 3 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "3 3"
                }
            },
            "Step 6": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 - 8 = 4 (left: 4 48) -> 48 - 4 = 44 (left: 44 4) -> 44 / 4 = 11 (left: 4 11) -> 9 / 3 = 3 (left: 3 3) -> 3 * 3 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "3 3"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "8 - 6 = 2 (left: 2 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "8 12 48"
                }
            },
            "Step 1": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 48 / 8 = 6 (left: 6 48)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 48 / 8 = 6 (left: 6 48) -> 6 * 8 = 48 (left: 48)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "44 4"
                }
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 - 8 = 4 (left: 4 48) -> 48 - 4 = 44 (left: 44 4) -> 44 * 4 = 176 (left: 176)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "44 4"
                }
            },
            "Step 4": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 - 8 = 4 (left: 4 48) -> 48 - 4 = 44 (left: 44 4) -> 44 - 4 = 40 (left: 40)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "44 4"
                },
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "44 4"
                }
            },
            "Step 5": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 - 8 = 4 (left: 4 48) -> 48 - 4 = 44 (left: 44 4) -> 44 * 4 = 176 (left: 176)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "3 3"
                }
            },
            "Step 6": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 - 8 = 4 (left: 4 48) -> 48 - 4 = 44 (left: 44 4) -> 44 / 4 = 11 (left: 4 11) -> 9 / 3 = 3 (left: 3 3) -> 3 + 3 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "3 3"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "12 + 6 = 18 (left: 8 8 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 8 12"
                }
            },
            "Step 1": {
                "Step": "6 + 8 = 14 (left: 8 8 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 8 = 14 (left: 8 8 14) -> 14 - 8 = 6 (left: 8 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 8 12"
                }
            },
            "Step 3": {
                "Step": "8 / 6 = 1.33 (approximated) (left: 1.33 8 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 / 6 = 1.33 (approximated) (left: 1.33 8 12) -> 8 / 1.33 = 6.015 (left: 6.015 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "44 4"
                }
            },
            "Step 5": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 - 8 = 4 (left: 4 48) -> 48 - 4 = 44 (left: 44 4) -> 44 * 4 = 176 (left: 4 176)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 - 8 = 4 (left: 4 48) -> 48 - 4 = 44 (left: 44 4) -> 44 * 4 = 176 (left: 4 176) -> 176 / 8 = 22 (left: 4 22)",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "8 / 6 = 1.33 (left: 1.33 8 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "8 12 48"
                }
            },
            "Step 1": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 * 4 = 48 (left: 8 48)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 * 4 = 48 (left: 8 48) -> 8 * 6 = 48 (left: 48)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 8 12"
                }
            },
            "Step 3": {
                "Step": "8 - 6 = 2 (left: 2 8 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 - 6 = 2 (left: 2 8 12) -> 2 * 8 = 16 (left: 16 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "48"
                }
            },
            "Step 5": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 48 / 8 = 6 (left: 6 48) -> 6 * 8 = 48 (left: 48) -> 48 - 4 = 44 (left: 44)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "44 4"
                }
            },
            "Step 6": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 - 8 = 4 (left: 4 48) -> 48 - 4 = 44 (left: 44 4) -> 44 * 4 = 176 (left: 4)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "3 3"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "6 + 8 = 14 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 8 12"
                }
            },
            "Step 1": {
                "Step": "8 - 6 = 2 (left: 2 8 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 6 = 2 (left: 2 8 12) -> 2 * 8 = 16 (left: 16 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "2 8 12"
                }
            },
            "Step 3": {
                "Step": "8 - 6 = 2 (left: 2 8 12) -> 8 - 2 = 6 (left: 6 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 - 6 = 2 (left: 2 8 12) -> 8 - 2 = 6 (left: 6 12) -> 6 * 2 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "44 4"
                }
            },
            "Step 5": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 - 8 = 4 (left: 4 48) -> 48 - 4 = 44 (left: 44 4) -> 44 * 4 = 176 (left: 176)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "3 3"
                }
            },
            "Step 6": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 - 8 = 4 (left: 4 48) -> 48 - 4 = 44 (left: 44 4) -> 44 / 4 = 11 (left: 4 11) -> 9 / 3 = 3 (left: 3 3) -> 3 - 3 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "3 3"
                }
            }
        },
        "Input": "6 8 8 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "983": {
        "puzzle": "2 3 4 9",
        "Agent 0": {
            "Step 0": {
                "Step": "4 * 2 = 8 (left: 3 8 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 4 9"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 2 4 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 2 4  -> 2 * 4 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 4 9"
                }
            },
            "Step 3": {
                "Step": "4 + 9 = 13 (left: 2 3 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 9 = 13 (left: 2 3 13) -> 3 + 2 = 5 (left: 5 13)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "5 13"
                }
            },
            "Step 5": {
                "Step": "4 + 9 = 13 (left: 2 3 13) -> 3 + 2 = 5 (left: 5 13) -> 27",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 9 = 13 (left: 2 3 13) -> 3 + 2 = 5 (left: 5 13) -> 27 -> There are no possible next steps with just the number 27.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 * 3 = 6 (left: 4 6 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 1": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 8 / 3 = 2.6666666666666665 (left: 2.6666666666666665 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 8 / 3 = 2.6666666666666665 (left: 2.6666666666666665 9) -> 9 / 2.6666666666666665 = 3.375",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 4 9"
                }
            },
            "Step 3": {
                "Step": "2 * 3 = 6 (left: 4 6 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 9 - 4 = 5 (left: 5 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 9"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 4 5 9) -> 9 - 5 = 4 (left: 4 9) -> 9 - 4 = 5 (left: 5 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 4 5 9) -> 9 - 5 = 4 (left: 4 9) -> 9 - 4 = 5 (left: 5 9) -> 5 * 9 = 45 (left: 45)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 4 5 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 1": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 6 - 4 = 2 (left: 2 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 6 - 4 = 2 (left: 2 9) -> 9 / 2 = 4.5 (left: 2 4.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 4 9"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 4 5 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 4 5 9) -> 9 - 5 = 4 (left: 4 9)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 9"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 4 5 9) -> 9 - 5 = 4 (left: 4 9) -> 4 + 9 = 13 (left: 9 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 4 5 9) -> 9 - 5 = 4 (left: 4 9) -> 4 + 9 = 13 (left: 9 13) -> 9 - 13 = -4 (left: -4)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 2 3 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 4 9"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 4 5 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 4 5 9) -> 4 + 5 = 9 (left: 9 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 3": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 6 / 4 = 1.5 (left: 1.5 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 6 / 4 = 1.5 (left: 1.5 9) -> 1.5 + 9 = 10.5 (left: 10.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 9"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 4 5 9) -> 9 - 5 = 4 (left: 4 9) -> 4 * 9 = 36 (left: 9 36)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 4 5 9) -> 9 - 5 = 4 (left: 4 9) -> 4 * 9 = 36 (left: 9 36) -> 36 / 9 = 4 (left: 4)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 2 3 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 1": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 3 + 8 = 11 (left: 11 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 3 + 8 = 11 (left: 11 9) -> 11 / 9 = 1.222 (left: 1.222)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 3": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 9 / 4 = 2.25 (left: 2.25 6)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 9 / 4 = 2.25 (left: 2.25 6) -> 6 - 2.25 = 3.75 (left: 3.75)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 9"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 4 5 9) -> 9 - 5 = 4 (left: 4 9) -> 4 + 9 = 13 (left: 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 4 5 9) -> 9 - 5 = 4 (left: 4 9) -> 4 + 9 = 13 (left: 13) -> There are no possible next steps with the number 13.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 2 3 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 1": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 9 / 4 = 2.25 (left: 2.25 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 9 / 4 = 2.25 (left: 2.25 6) -> 6 - 2.25 = 3.75 (left: 3.75)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 4 9"
                }
            },
            "Step 3": {
                "Step": "9 - 2 = 7 (left: 3 4 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 2 = 7 (left: 3 4 7) -> 3 + 4 = 7 (left: 7 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 9"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 4 5 9) -> 9 - 5 = 4 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 4 5 9) -> 9 - 5 = 4 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25) -> 2.25 + 8 = 10.25 (left: 10.25)",
                "Pruning": "NA"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 4 5 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 4 9"
                }
            },
            "Step 1": {
                "Step": "2 * 3 = 6 (left: 4 6 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 4 + 6 = 10 (left: 9 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 3": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 / 3",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 / 3 -> 9 * 3 = 27 (left: 27)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 9"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 4 5 9) -> 9 - 5 = 4 (left: 4 9) -> 9 - 4 = 5 (left: 5 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 4 5 9) -> 9 - 5 = 4 (left: 4 9) -> 9 - 4 = 5 (left: 5 9) -> 3 * 11 = 33",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 4 5 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 1": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 8 - 3 = 5 (left: 5 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 8 - 3 = 5 (left: 5 9) -> Input: 3 7 2",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 5 9"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 4 5 9) -> 9 - 4 = 5 (left: 5 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 4 5 9) -> 9 - 4 = 5 (left: 5 9) -> 6 / 3 = 2 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 9"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 4 5 9) -> 9 - 5 = 4 (left: 4 9) -> 6 - 3 = 3 (",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 4 5 9) -> 9 - 5 = 4 (left: 4 9) -> 6 - 3 = 3 ( -> 6 - 3 = 3 (left: 3)",
                "Pruning": "NA"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 4 5 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 1": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 - 3 = 6 (left: 6 8 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 - 3 = 6 (left: 6 8 9) -> 8 / 6 = 1.33 (left: 1.33 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 3": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 3 + 8 = 11 (left: 8 9 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 3 + 8 = 11 (left: 8 9 11) -> 9 + 11 = 20 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "1.33 9"
                }
            },
            "Step 5": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 - 3 = 6 (left: 6 8 9) -> 8 / 6 = 1.33 (left: 1.33 9) -> 1.33 + 9 = 10.33 (left: 10.33)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "1.222"
                }
            },
            "Step 6": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 3 + 8 = 11 (left: 11 9) -> 11 / 9 = 1.222 (left: 1.222) -> 1.222 + 1 = 2.222 (left: 1)",
                "Pruning": "NA"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "9 - 2 = 7 (left: 3 4 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 1": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 3 + 8 = 11 (left: 8 9 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 3 + 8 = 11 (left: 8 9 11) -> 8 / 9 = 0.8888888888888888 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 3": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 9 - 4 = 5 (left: 5 6)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 9 - 4 = 5 (left: 5 6) -> 5 - 6 = -1 (left: -1)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 9"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 4 5 9) -> 9 - 5 = 4 (left: 4 9) -> 6 - 3 = 3 (left:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 4 5 9) -> 9 - 5 = 4 (left: 4 9) -> 6 - 3 = 3 (left: -> -3 - 6 = -9 (left: -9)",
                "Pruning": "NA"
            }
        },
        "Input": "2 3 4 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "984": {
        "puzzle": "2 6 7 11",
        "Agent 0": {
            "Step 0": {
                "Step": "2 * 6 = 12 (left: 7 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 7 11"
                }
            },
            "Step 1": {
                "Step": "6 + 7 = 13 (left: 2 8 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 7 = 13 (left: 2 8 13) -> 2 + 8 = 10 (left: 10 13)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 7 11"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 5 6 11)"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 * 7 = 42 (left: 2 42 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "2 6 18"
                }
            },
            "Step 1": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 6 * 2 = 12 (left: 12 18)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 6 * 2 = 12 (left: 12 18) -> 12 + 18 = 30 (left: 30)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 7 11"
                }
            },
            "Step 3": {
                "Step": "11 + 2 = 13 (left: 6 7 13)"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 2 8 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "2 6 18"
                }
            },
            "Step 1": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 6 * 18 = 108 (left: 2 108)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 6 * 18 = 108 (left: 2 108) -> 108 - 2 = 106 (left: 2 106)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 7 11"
                }
            },
            "Step 3": {
                "Step": "6 * 7 = 42 (left: 2 42 "
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 - 6 = 1 (left: 1 6 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 7 11"
                }
            },
            "Step 1": {
                "Step": "2 * 6 = 12 (left: 7 12 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 6 = 12 (left: 7 12 11) -> 7 / 12",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 18 - 6 = 12 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (7 + 11 - 6) * 2 = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 6 = 8 (left: 7 8 11)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 5 "
                }
            },
            "Step 1": {
                "Step": "11 - 6 = 5 (left: 2 5  -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 6 = 5 (left: 2 5  -> 5 / 2 = 2.5 (left: 2.5) -> There are no possible next steps with the input 2.5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 7 11"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 5 6 11)"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "11 - 2 = 9 (left: 2 6 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 7 11"
                }
            },
            "Step 1": {
                "Step": "7 + 11 = 18 (left: 2 6 18)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 6 - 2 = 4 (left: 4 18)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 7 11"
                }
            },
            "Step 3": {
                "Step": "2 * 6 = 12 (left: 7 11 12)"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "7 + 11 = 18 (left: 2 6 18)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "2 6 18"
                }
            },
            "Step 1": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 18 - 6 = 12 (left: 2 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 18 - 6 = 12 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "6 - 2 = 4 (left:"
                }
            },
            "Step 3": {
                "Step": "11 - 2 = 9 (left: 2 6 9) -> 6 - 2 = 4 (left: -> 6 * 2 = 12 (left: 12)"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "7 * 2 = 14 (left: 6 11 14)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "2 6 18"
                }
            },
            "Step 1": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 18 - 6 = 12 (left: 2 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 18 - 6 = 12 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "6 - 2 = 4 (left:"
                }
            },
            "Step 3": {
                "Step": "11 - 2 = 9 (left: 2 6 9) -> 6 - 2 = 4 (left: -> 4 + 2 = 6 (left: 6)"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "2 + 6 = 8 (left: 7 8 11)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 7 11"
                }
            },
            "Step 1": {
                "Step": "11 - 2 = 9 (left: 2 6 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 2 = 9 (left: 2 6 9) -> 6 - 2 = 4 (left:",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 7 11"
                }
            },
            "Step 3": {
                "Step": "11 - 2 = 9 (left: 6 7 9)"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "11 - 6 = 5 (left: 2 5 ",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 7 11"
                }
            },
            "Step 1": {
                "Step": "2 + 6 = 8 (left: 7 8 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 11 / 7 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "2 6 18"
                }
            },
            "Step 3": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 2 + 6 = 8 (left: 8 18)"
            }
        },
        "Input": "2 6 7 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "985": {
        "puzzle": "5 9 12 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 5 = 7 (left: 7 9 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 9 12 12"
                }
            },
            "Step 1": {
                "Step": "9 / 5 = 1 (left: 1 12 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 5 = 1 (left: 1 12 12) -> 1 - 12 = -11 (left: -11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9 12"
                }
            },
            "Step 3": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 12 - 4 = 8 (left: 9 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 12 - 4 = 8 (left: 9 8) -> 9 * 8 = 72 (left: 72)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "168 12"
                }
            },
            "Step 5": {
                "Step": "5 + 9 = 14 (left: 12 14 12) -> 12 * 14 = 168 (left: 168 12) -> 168 - 12 = 156 (left: 156)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 9 = 14 (left: 12 14 12) -> 12 * 14 = 168 (left: 168 12) -> 168 - 12 = 156 (left: 156) -> 156 - ",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 - 5 = 4 (left: 4 12 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 9 12 12"
                }
            },
            "Step 1": {
                "Step": "5 + 9 = 14 (left: 12 14 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 9 = 14 (left: 12 14 12) -> 12 * 14 = 168 (left: 168 12)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 9 12 12"
                }
            },
            "Step 3": {
                "Step": "9 / 5 = 1.8 (left",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 / 5 = 1.8 (left -> 9 * 5 = 45 (left: 45)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "168 12"
                }
            },
            "Step 5": {
                "Step": "5 + 9 = 14 (left: 12 14 12) -> 12 * 14 = 168 (left: 168 12) -> 168 + 12 = 180 (left: 180)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 9 = 14 (left: 12 14 12) -> 12 * 14 = 168 (left: 168 12) -> 168 + 12 = 180 (left: 180) -> 180 / 2 = 90 (left: 90)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "There are no possible next steps with the input 180."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 9 = 3 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9 12"
                }
            },
            "Step 1": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 12 - 9 = 3 (left: 4 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 12 - 9 = 3 (left: 4 3) -> 4 - 3 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9 12"
                }
            },
            "Step 3": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 4 + 9 = 13 (left: 13 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 4 + 9 = 13 (left: 13 12) -> 13 - 12 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "168 12"
                }
            },
            "Step 5": {
                "Step": "5 + 9 = 14 (left: 12 14 12) -> 12 * 14 = 168 (left: 168 12) -> 168 / 12 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 9 = 14 (left: 12 14 12) -> 12 * 14 = 168 (left: 168 12) -> 168 / 12 = 14 (left: 14) -> There are no possible next steps with only one number given.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 5 = 4 (left: 4 9 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9 12"
                }
            },
            "Step 1": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12) -> 5 * 12 = 60 (left: 60)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9 12"
                }
            },
            "Step 3": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12) -> 5 - 12 = -7 (left: -7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "168 12"
                }
            },
            "Step 5": {
                "Step": "5 + 9 = 14 (left: 12 14 12) -> 12 * 14 = 168 (left: 168 12) -> 168 + 12 = 180 (left: 180)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 9 = 14 (left: 12 14 12) -> 12 * 14 = 168 (left: 168 12) -> 168 + 12 = 180 (left: 180) -> 180 + 2 = 182",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 * 9 = 45 (left: 12 12 45)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 9 12 12"
                }
            },
            "Step 1": {
                "Step": "12 + 12 = 24 (left: 5 9 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 + 12 = 24 (left: 5 9 24) -> 5 *",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 9 12 12"
                }
            },
            "Step 3": {
                "Step": "5 + 9 = 14 (left: 12 14 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 9 = 14 (left: 12 14 12) -> 14 / 12 = 1.16666666667 (left: 1.16666666667 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "168 12"
                }
            },
            "Step 5": {
                "Step": "5 + 9 = 14 (left: 12 14 12) -> 12 * 14 = 168 (left: 168 12) -> 12 * 2 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 9 = 14 (left: 12 14 12) -> 12 * 14 = 168 (left: 168 12) -> 12 * 2 = 24 (left: 24) -> Answer: (5 + 9) * (12 - 12) = 24",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "There are no possible next steps with the input 180."
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "9 / 5 = 1.8 (left: 1.8 12 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "12 12 14"
                }
            },
            "Step 1": {
                "Step": "5 + 9 = 14 (left: 12 12 14) -> 12 - 12 = 0 (left: 0 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 9 = 14 (left: 12 12 14) -> 12 - 12 = 0 (left: 0 14) -> 5 * 7 = 35 (left: 3 35)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "168 12"
                }
            },
            "Step 3": {
                "Step": "5 + 9 = 14 (left: 12 14 12) -> 12 * 14 = 168 (left: 168 12) -> 168 + 12 = 180 (left: 180)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 9 = 14 (left: 12 14 12) -> 12 * 14 = 168 (left: 168 12) -> 168 + 12 = 180 (left: 180) -> There are no possible next steps with the input 180.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "168 12"
                }
            },
            "Step 5": {
                "Step": "5 + 9 = 14 (left: 12 14 12) -> 12 * 14 = 168 (left: 168 12) -> 168 + 12 = 180 (left: 180)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 9 = 14 (left: 12 14 12) -> 12 * 14 = 168 (left: 168 12) -> 168 + 12 = 180 (left: 180) -> There are no possible next steps for the number 180.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "5 + 9 = 14 (left: 12 12 14)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "12 12 14"
                }
            },
            "Step 1": {
                "Step": "5 + 9 = 14 (left: 12 12 14) -> 12 + 14 = 26 (left: 12 26)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 9 = 14 (left: 12 12 14) -> 12 + 14 = 26 (left: 12 26) -> 26 - 12 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "168 12"
                }
            },
            "Step 3": {
                "Step": "5 + 9 = 14 (left: 12 14 12) -> 12 * 14 = 168 (left: 168 12) -> 168 - 12 = 156 (left: 156)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 9 = 14 (left: 12 14 12) -> 12 * 14 = 168 (left: 168 12) -> 168 - 12 = 156 (left: 156) -> 1 + 56 = 57 (left: 57)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "168 12"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "168 12"
                }
            },
            "Step 5": {
                "Step": "5 + 9 = 14 (left: 12 14 12) -> 12 * 14 = 168 (left: 168 12) -> 168 / 12 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 9 = 14 (left: 12 14 12) -> 12 * 14 = 168 (left: 168 12) -> 168 / 12 = 14 (left: 14) -> 14 / 2 = 7",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "5 + 9 = 14 (left: 12 14 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "7 12 12"
                }
            },
            "Step 1": {
                "Step": "12 - 5 = 7 (left: 7 12 12) -> 7 * 12 = 84 (left: 12 84)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 5 = 7 (left: 7 12 12) -> 7 * 12 = 84 (left: 12 84) -> 12 * 7 = 84 (left: 84)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9 12"
                }
            },
            "Step 3": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 12 - 9 = 3 (left: 4 3)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 12 - 9 = 3 (left: 4 3) -> 4 * 3 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "168 12"
                }
            },
            "Step 5": {
                "Step": "5 + 9 = 14 (left: 12 14 12) -> 12 * 14 = 168 (left: 168 12) -> 168 / 12 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 9 = 14 (left: 12 14 12) -> 12 * 14 = 168 (left: 168 12) -> 168 / 12 = 14 (left: 14) -> No possible next steps as there is only one number left.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "12 - 5 = 7 (left: 7 12 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 9 12 12"
                }
            },
            "Step 1": {
                "Step": "9 / 5 = 1.8 (left: 1.8 12 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 5 = 1.8 (left: 1.8 12 12) -> 12 / 1.8 = 6.67 (left: 6.67 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 9 12 12"
                }
            },
            "Step 3": {
                "Step": "9 + 5 = 14 (left: 12 12 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 + 5 = 14 (left: 12 12  -> 12 / 12 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "168 12"
                }
            },
            "Step 5": {
                "Step": "5 + 9 = 14 (left: 12 14 12) -> 12 * 14 = 168 (left: 168 12) -> 168 / 12 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 9 = 14 (left: 12 14 12) -> 12 * 14 = 168 (left: 168 12) -> 168 / 12 = 14 (left: 14) -> 14 / 2 = 7",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "12 - 5 = 7 (left: 7 12 12)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 9 12 12"
                }
            },
            "Step 1": {
                "Step": "5 * 9 = 45 (left: 12 12 45)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 9 = 45 (left: 12 12 45) -> 12 + 12 = 24 (left: 24 45)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "12 12 14"
                }
            },
            "Step 3": {
                "Step": "5 + 9 = 14 (left: 12 12 14) -> 14 - 12 = 2 (left: 2 14)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 9 = 14 (left: 12 12 14) -> 14 - 12 = 2 (left: 2 14) -> 14 - 2 = 12 (left: 12) ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "168 12"
                }
            },
            "Step 5": {
                "Step": "5 + 9 = 14 (left: 12 14 12) -> 12 * 14 = 168 (left: 168 12) -> 168 + 12 = 180 (left: 180)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 9 = 14 (left: 12 14 12) -> 12 * 14 = 168 (left: 168 12) -> 168 + 12 = 180 (left: 180) -> There are no possible next steps for the number 180 as it is not a combination of two numbers like the previous inputs.",
                "Pruning": null
            }
        },
        "Input": "5 9 12 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "986": {
        "puzzle": "1 2 7 12",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 7 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 12"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 1 5 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 1 5 12) -> 12 - 1 = 11 (left: 5 11)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 7"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 1 5 12) -> 12 - 5 = 7 (left: 1 7) -> 7 / 1 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 1 5 12) -> 12 - 5 = 7 (left: 1 7) -> 7 / 1 = 7 (left: 7) -> 7 + 8 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "2 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "1 7"
                }
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 1 5 12) -> 12 - 5 = 7 (left: 1 7) -> 7 / 1 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 1 5 12) -> 12 - 5 = 7 (left: 1 7) -> 7 / 1 = 7 (left: 7) -> 7 * 8 = 56 (left: 56)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "8 56"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 - 7 = 5 (left: 1 2 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 12"
                }
            },
            "Step 1": {
                "Step": "2 * 7 = 14 (left: 1 14 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 7 = 14 (left: 1 14 12) -> 1 + 14 = 15 (left: 12 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 7"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 1 5 12) -> 12 - 5 = 7 (left: 1 7) -> 7 / 1 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 1 5 12) -> 12 - 5 = 7 (left: 1 7) -> 7 / 1 = 7 (left: 7) -> 7 / 8 = 0.875 (left: 0.875 7)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "1 7"
                }
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 1 5 12) -> 12 - 5 = 7 (left: 1 7) -> 1 * 7 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 1 5 12) -> 12 - 5 = 7 (left: 1 7) -> 1 * 7 = 7 (left: 7) -> 7 - 2 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "0.875 7"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 * 7 = 14 (left: 1 14 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 12"
                }
            },
            "Step 1": {
                "Step": "2 * 7 = 14 (left: 1 14 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 7 = 14 (left: 1 14 12) -> 12 - 1 = 11 (left:",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "2 5"
                }
            },
            "Step 3": {
                "Step": "12 - 7 = 5 (left: 1 2 5) -> 1 * 2 = 2 (left: 2 5) -> 5 - 2 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 7 = 5 (left: 1 2 5) -> 1 * 2 = 2 (left: 2 5) -> 5 - 2 = 3 (left: 3) -> There are no possible next steps with just the number 3.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "1 7"
                }
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 1 5 12) -> 12 - 5 = 7 (left: 1 7) -> 7 / 1 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 1 5 12) -> 12 - 5 = 7 (left: 1 7) -> 7 / 1 = 7 (left: 7) -> 7 - 2 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "8 56"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 7 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 12"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 7 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 7 / 3 = 2 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 7"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 1 5 12) -> 12 - 5 = 7 (left: 1 7) -> 1 + 7 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 1 5 12) -> 12 - 5 = 7 (left: 1 7) -> 1 + 7 = 8 (left: 8) -> 8 - 8 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "1 7"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "1 7"
                }
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 1 5 12) -> 12 - 5 = 7 (left: 1 7) -> 7 / 1 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 1 5 12) -> 12 - 5 = 7 (left: 1 7) -> 7 / 1 = 7 (left: 7) -> 7 + 14 = 21 (left: 21)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "0.875 7"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "7 * 2 = 14 (left: 1 12 14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 12"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 1 5 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 1 5 12) -> 12 - 5 = 7 (left: 1 7)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 12"
                }
            },
            "Step 3": {
                "Step": "7 + 2 = 9 (left: 1 9 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 + 2 = 9 (left: 1 9  -> 9 - 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 7 / 3 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 7 / 3 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6) -> 6 * 8 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "0.875 7"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "12 - 7 = 5 (left: 1 2 5)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 12"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 7 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 12 - 7 = 5 (left: 3 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 7 12"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 3 * 7 = 21 (left: 21 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 3 * 7 = 21 (left: 21 12) -> 21 + 12 = 33 (left: 33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 7 / 3 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 7 / 3 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (1 + 2) * (7 / 3) * 12 = 24",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "8 56"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 7 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 12"
                }
            },
            "Step 1": {
                "Step": "7 + 12 = 19 (left: 1 2 19)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 12 = 19 (left: 1 2 19) -> 1 + 2 = 3 (left: 3 19)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 7 / 3 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 7 / 3 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6) -> 6 * 2 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "2 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 7 / 3 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 7 / 3 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6) -> 6 + 2 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "0.875 7"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 1 5 ",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 12"
                }
            },
            "Step 1": {
                "Step": "7 + 2 = 9 (left: 1 9 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 2 = 9 (left: 1 9 12) -> 9 / 1 = 9 (left: 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 12"
                }
            },
            "Step 3": {
                "Step": "2 * 7 = 14 (left: 1 14 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 7 = 14 (left: 1 14 12) -> 1 + 14 = 15 (left: 12 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 7 / 3 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 7 / 3 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6 12) -> 6 * 12 = 72 (left: 72)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "0.875 7"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "1 * 2 = 2 (left: 2 7 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 12"
                }
            },
            "Step 1": {
                "Step": "7 + 12 = 19 (left: 1 2 19)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 12 = 19 (left: 1 2 19) -> 2 * 19 = 38 (left: 1 38)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 12"
                }
            },
            "Step 3": {
                "Step": "7 + 2 = 9 (left: 1 9 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 + 2 = 9 (left: 1 9 12) -> 9 - 1 = 8 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 7 / 3 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 7 / 3 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6) -> 14 / 2 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "0.875 7"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "2 + 7 = 9 (left: 1 9 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 12"
                }
            },
            "Step 1": {
                "Step": "12 - 7 = 5 (left: 1 2 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 7 = 5 (left: 1 2 5) -> 1 * 2 = 2 (left: 2 5)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 7"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 1 5 12) -> 12 - 5 = 7 (left: 1 7) -> 7 / 1 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 1 5 12) -> 12 - 5 = 7 (left: 1 7) -> 7 / 1 = 7 (left: 7) -> 7 * 8 = 56 (left: 8 56)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 7 / 3 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 7 / 3 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14) -> No possible next steps as there is only one number left.",
                "Pruning": null
            }
        },
        "Input": "1 2 7 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "987": {
        "puzzle": "2 4 5 6",
        "Agent 0": {
            "Step 0": {
                "Step": "4 + 5 = 9 (left: 2 6 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 5 6"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 5 6 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 5 6"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 5 6 6)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 5 * 6 = 30 (left: 30)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 - 1 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 - 1 = 5 (left: 5) -> There are no possible next steps with the input of 5.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 4 5 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 5 6"
                }
            },
            "Step 1": {
                "Step": "4 * 5 = 20 (left: 2 6 20)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 5 = 20 (left: 2 6 20) -> 20 / 2 = 10 (left:",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 6"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6) -> 6 / 2 = 3 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 + 6 = 7",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 + 6 = 7 -> 6 + 1 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "3 8"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 4 5 6)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 5 * 6 = 30 (left: 30)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 5 * 6 = 30 (left: 30) -> 30 / 2 = 15",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 6"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6) -> 6 - 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "1 6"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6) -> 6 / 2 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "3 8"
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6) -> 6 / 2 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "3 8"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 * 4 = 8 (left: 5 6 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 5 6"
                }
            },
            "Step 1": {
                "Step": "4 * 5 = 20 (left: 2 6 20)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 5 = 20 (left: 2 6 20) -> 6 * 20 = 120 (left: 2 120)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 6"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 5 * 2 = 10 (left: 10 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 5 * 2 = 10 (left: 10 10) -> 10 / 10 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "1 6"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 / 1 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 / 1 = 6 (left: 6) -> 6 * 8 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "3 8"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 * 4 = 8 (left: 5 6 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 5 6"
                }
            },
            "Step 3": {
                "Step": "2 * 5 = 10 (left: 4 10 6)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 5 = 10 (left: 4 10 6) -> 4 * 10 = 40 (left: 40 6)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7) -> 7 * 8 = 56 (left: 56)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "3 8"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 5 6 6)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 / 5 = 1.2 (left: 1.2 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 / 5 = 1.2 (left: 1.2 6) -> 6 / 1.2 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 5 6"
                }
            },
            "Step 3": {
                "Step": "5 * 6 = 30 (left: 2 4 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 6 = 30 (left: 2 4  -> 5 * 10 = 50 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 + 6 = 7",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 + 6 = 7 -> 13 - 6 = 7 (left: 1 7 ",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 5 6 6)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 + 6 = 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 6"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 - 1 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 - 1 = 5 (left: 5) -> There are no possible next steps with just one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 / 1 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 / 1 = 6 (left: 6) -> 6 * 8 = 48 (left: 8 48)",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "4 * 5 = 20 (left: 2 6 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 5 6"
                }
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 2 4 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 2 4 11) -> 11 - 4 = 7 (left: 2 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7) -> 7 + 8 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "3 8"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "2 * 4 = 8 (left: 5 6 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 5 6"
                }
            },
            "Step 1": {
                "Step": "4 * 5 = 20 (left: 2 20 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 5 = 20 (left: 2 20 6) -> 20 / 2 = 10 (left: 10 6)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 6"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7) -> 7 + 8 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "1 6"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6) -> 6 / 2 = 3 (left: 3 8) -> 8 / 3 = 2.67 (left: 2.67)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "3 8"
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6) -> 6 / 2 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "3 8"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "4 * 5 = 20 (left: 2 6 20)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 5 6"
                }
            },
            "Step 1": {
                "Step": "4 * 5 = 20 (left: 2 6 20)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 5 = 20 (left: 2 6 20) -> 20 / 2 = 10 (left: 10 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 6"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 / 1 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 / 1 = 6 (left: 6) -> 6 * 6 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "1 6"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6) -> 6 / 2 = 3 (left: 3 8) -> 3 / 8 = 0.375 (left: 0.375)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "3 8"
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6) -> 6 / 2 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "3 8"
                }
            }
        },
        "Input": "2 4 5 6",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "988": {
        "puzzle": "5 5 8 13",
        "Agent 0": {
            "Step 0": {
                "Step": "8 - 5 = 3 (left: 3 5 13)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 5 13"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 5 13) -> 13 / 3 = 4 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 5 13) -> 13 / 3 = 4 (left: -> 13 * 3 = 39 (left: 39)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 8 13"
                }
            },
            "Step 3": {
                "Step": "5 + 5 = 10 (left: 8 10 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 5 = 10 (left: 8 10 13) -> 13 - 8 = 5 (left: 8 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "8 10 12"
                }
            },
            "Step 5": {
                "Step": "13 / 5 = 2 (left: 2 5  -> 5 - 2 = 3 (left: 3) -> 7 + 3 = 10 (left: 8 10 12) -> 8 * 10 = 80 (left: 80 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 / 5 = 2 (left: 2 5  -> 5 - 2 = 3 (left: 3) -> 7 + 3 = 10 (left: 8 10 12) -> 8 * 10 = 80 (left: 80 12) -> 80 * 12 = 960 (left: 960)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 + 5 = 10 (left: 8 10 13)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "2 5 "
                }
            },
            "Step 1": {
                "Step": "13 / 5 = 2 (left: 2 5  -> 5 - 2 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 / 5 = 2 (left: 2 5  -> 5 - 2 = 3 (left: 3) -> 7 + 3 = 10 (left: 8 10 12)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 5 13"
                }
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 5 13) -> 3 * 5 = 15 (left: 15 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 - 5 = 3 (left: 3 5 13) -> 3 * 5 = 15 (left: 15 13) -> 15 / 13 = 1.153846153846154 (left: 1.153846153846154)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "8 10 12"
                }
            },
            "Step 5": {
                "Step": "13 / 5 = 2 (left: 2 5  -> 5 - 2 = 3 (left: 3) -> 7 + 3 = 10 (left: 8 10 12) -> 8 + 10 = 18 (left: 18 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 / 5 = 2 (left: 2 5  -> 5 - 2 = 3 (left: 3) -> 7 + 3 = 10 (left: 8 10 12) -> 8 + 10 = 18 (left: 18 12) -> 18 / 12 = 1.5 (left: 1.5)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 5 = 8 (left: 5 8 8)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 5 13"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 5 13) -> 5 * 3 = 15 (left: 15 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 5 13) -> 5 * 3 = 15 (left: 15 13) -> 15 + 13 = 28 (left: 28)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "8 10 13"
                }
            },
            "Step 3": {
                "Step": "5 + 5 = 10 (left: 8 10 13) -> 8 * 10 = 80 (left:",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 5 = 10 (left: 8 10 13) -> 8 * 10 = 80 (left: -> 8 / 10 = 0.8 (left: 0.8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "8 10 12"
                }
            },
            "Step 5": {
                "Step": "13 / 5 = 2 (left: 2 5  -> 5 - 2 = 3 (left: 3) -> 7 + 3 = 10 (left: 8 10 12) -> 10 * 12 = 120 (left: 8 120)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 / 5 = 2 (left: 2 5  -> 5 - 2 = 3 (left: 3) -> 7 + 3 = 10 (left: 8 10 12) -> 10 * 12 = 120 (left: 8 120) -> 8 * 120 = 960 (left: 960)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "13 / 5 = 2 (left: 2 5 ",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 8 13"
                }
            },
            "Step 1": {
                "Step": "5 * 5 = 25 (left: 8 13 25)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 5 = 25 (left: 8 13 25) -> 13 + 25 = 38 (left: 8 38)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "0 8 13"
                }
            },
            "Step 3": {
                "Step": "5 - 5 = 0 (left: 0 8 13) -> 13 - 8 = 5 (left: 0 5)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 - 5 = 0 (left: 0 8 13) -> 13 - 8 = 5 (left: 0 5) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "8 10 12"
                }
            },
            "Step 5": {
                "Step": "13 / 5 = 2 (left: 2 5  -> 5 - 2 = 3 (left: 3) -> 7 + 3 = 10 (left: 8 10 12) -> 8 + 10 = 18 (left: 12 18)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 / 5 = 2 (left: 2 5  -> 5 - 2 = 3 (left: 3) -> 7 + 3 = 10 (left: 8 10 12) -> 8 + 10 = 18 (left: 12 18) -> 18 / 12 = 1.5 (left: 1.5)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 / 5 = 1 (left: 1 8 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 5 13"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 5 13) -> 13 / 5 = 2.6 (left: 3 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 5 13) -> 13 / 5 = 2.6 (left: 3 13) -> 3 * 13 = 39 (left: 39)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "8 10 12"
                }
            },
            "Step 3": {
                "Step": "13 / 5 = 2 (left: 2 5  -> 5 - 2 = 3 (left: 3) -> 7 + 3 = 10 (left: 8 10 12) -> 8 + 10 = 18 (left: 18 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 / 5 = 2 (left: 2 5  -> 5 - 2 = 3 (left: 3) -> 7 + 3 = 10 (left: 8 10 12) -> 8 + 10 = 18 (left: 18 12) -> 18 * 12 = 216 (left: 216)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "8 10 12"
                },
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "8 10 12"
                }
            },
            "Step 5": {
                "Step": "13 / 5 = 2 (left: 2 5  -> 5 - 2 = 3 (left: 3) -> 7 + 3 = 10 (left: 8 10 12) -> 10 + 12 = 22 (left: 8 22)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 / 5 = 2 (left: 2 5  -> 5 - 2 = 3 (left: 3) -> 7 + 3 = 10 (left: 8 10 12) -> 10 + 12 = 22 (left: 8 22) -> 22 + 8 = 30 (left: 30)",
                "Pruning": "NA"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "5 - 5 = 0 (left: 0 8 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 8 13"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 5 13 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 5 13 13) -> 5 / 13 = 0.38461538461538 (left: 0.384615",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 8 8"
                }
            },
            "Step 3": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "8 10 12"
                }
            },
            "Step 5": {
                "Step": "13 / 5 = 2 (left: 2 5  -> 5 - 2 = 3 (left: 3) -> 7 + 3 = 10 (left: 8 10 12) -> 10 + 12 = 22 (left: 8 22)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 / 5 = 2 (left: 2 5  -> 5 - 2 = 3 (left: 3) -> 7 + 3 = 10 (left: 8 10 12) -> 10 + 12 = 22 (left: 8 22) -> Input: 2 3 3 9",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "5 / 5 = 1 (left: 1 8 13)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "8 10 13"
                }
            },
            "Step 1": {
                "Step": "5 + 5 = 10 (left: 8 10 13) -> 8 * 10 = 80 (left: 80 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 5 = 10 (left: 8 10 13) -> 8 * 10 = 80 (left: 80 13) -> 80 / 13 \u2248 6.15 (left: 6.15)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 8 8"
                }
            },
            "Step 3": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 / 5 = 1.6 (left: 1.6 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 / 5 = 1.6 (left: 1.6 8) -> 1.6 + 8 = 9.6 (left: 9.6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "8 10 12"
                }
            },
            "Step 5": {
                "Step": "13 / 5 = 2 (left: 2 5  -> 5 - 2 = 3 (left: 3) -> 7 + 3 = 10 (left: 8 10 12) -> 8 - 10 = -2 (left: -2 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 / 5 = 2 (left: 2 5  -> 5 - 2 = 3 (left: 3) -> 7 + 3 = 10 (left: 8 10 12) -> 8 - 10 = -2 (left: -2 12) -> -2 - 12 = -14 (left: -14)",
                "Pruning": "NA"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "8 + 5 = 13 (left: 5 13 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 8 13"
                }
            },
            "Step 1": {
                "Step": "5 + 5 = 10 (left: 8 10 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 5 = 10 (left: 8 10 13) -> 10 / 8 = 1.25 (left: 1.25 13)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 5 13"
                }
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 5 13) -> 3 * 5 = 15 (left: 15 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 - 5 = 3 (left: 3 5 13) -> 3 * 5 = 15 (left: 15 13) -> 15 / 13 = 1.15384615385 (left: 1.15384615385)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "8 10 12"
                }
            },
            "Step 5": {
                "Step": "13 / 5 = 2 (left: 2 5  -> 5 - 2 = 3 (left: 3) -> 7 + 3 = 10 (left: 8 10 12) -> 10 + 12 = 22 (left: 8 22)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 / 5 = 2 (left: 2 5  -> 5 - 2 = 3 (left: 3) -> 7 + 3 = 10 (left: 8 10 12) -> 10 + 12 = 22 (left: 8 22) -> 8 * 22 = 176 (left: 176)",
                "Pruning": "NA"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "5 / 5 = 1 (left: 1 8 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 8 13"
                }
            },
            "Step 1": {
                "Step": "5 / 5 = 1 (left: 1 8 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 / 5 = 1 (left: 1 8 13) -> 13 - 1 = 12 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 8 8"
                }
            },
            "Step 3": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 8 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 8 = 0 (left: 0) -> There are no possible next steps as there is no input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "8 10 12"
                }
            },
            "Step 5": {
                "Step": "13 / 5 = 2 (left: 2 5  -> 5 - 2 = 3 (left: 3) -> 7 + 3 = 10 (left: 8 10 12) -> 8 * 10 = 80 (left: 80 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 / 5 = 2 (left: 2 5  -> 5 - 2 = 3 (left: 3) -> 7 + 3 = 10 (left: 8 10 12) -> 8 * 10 = 80 (left: 80 12) -> 80 * 12 = 960 (left: 960)",
                "Pruning": "NA"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "13 - 5 = 8 (left: 5 8 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "2 5 "
                }
            },
            "Step 1": {
                "Step": "13 / 5 = 2 (left: 2 5  -> 2 * 5 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 / 5 = 2 (left: 2 5  -> 2 * 5 = 10 (left: 10) -> 10 - 2 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 8 13"
                }
            },
            "Step 3": {
                "Step": "5 / 5 = 1 (left: 1 8 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 / 5 = 1 (left: 1 8 13) -> 1 + 8 = 9 (left: 9 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "8 10 12"
                }
            },
            "Step 5": {
                "Step": "13 / 5 = 2 (left: 2 5  -> 5 - 2 = 3 (left: 3) -> 7 + 3 = 10 (left: 8 10 12) -> 10 - 8 = 2 (left: 2 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 / 5 = 2 (left: 2 5  -> 5 - 2 = 3 (left: 3) -> 7 + 3 = 10 (left: 8 10 12) -> 10 - 8 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": "NA"
            }
        },
        "Input": "5 5 8 13",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "989": {
        "puzzle": "2 3 3 10",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 3 = 7 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 3 10"
                }
            },
            "Step 1": {
                "Step": "10 / 2 = 5 (left: 3 3 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 2 = 5 (left: 3 3  -> 3 - 3 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 3 10"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 2 9 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 2 9  -> 9 - 2 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "0"
                }
            },
            "Step 5": {
                "Step": "10 / 2 = 5 (left: 3 3  -> 3 - 3 = 0 (left: 0) -> There are no possible next steps as there are no numbers provided to perform operations on.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 / 2 = 5 (left: 3 3  -> 3 - 3 = 0 (left: 0) -> There are no possible next steps as there are no numbers provided to perform operations on. -> No numbers provided.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 - 3 = 7 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 3 10"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 2 9 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 2 * 9 = 18 (left: 10 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 3 10"
                }
            },
            "Step 3": {
                "Step": "3 / 2 = 1.5 (left: 1.5 3 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 / 2 = 1.5 (left: 1.5 3 10) -> 3 / 1.5 = 2 (left: 2",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "0"
                }
            },
            "Step 5": {
                "Step": "10 / 2 = 5 (left: 3 3  -> 3 - 3 = 0 (left: 0) -> There are no possible next steps since there is no input provided.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 / 2 = 5 (left: 3 3  -> 3 - 3 = 0 (left: 0) -> There are no possible next steps since there is no input provided. -> No input provided.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 2 9 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 3 10"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 3 5 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 3 5 10) -> 10 / 5 = 2 (left: 3 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "6 3 10"
                }
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 6 3 10) -> 6 / 3 = 2 (left: 2 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 6 3 10) -> 6 / 3 = 2 (left: 2 10) -> 10 - 2 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "0"
                }
            },
            "Step 5": {
                "Step": "10 / 2 = 5 (left: 3 3  -> 3 - 3 = 0 (left: 0) -> There are no possible next steps as there are no numbers provided after the input.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 / 2 = 5 (left: 3 3  -> 3 - 3 = 0 (left: 0) -> There are no possible next steps as there are no numbers provided after the input. -> There are no possible next steps as there are no numbers provided after the input.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 2 6 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 3 10"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 3 6 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 3 6 10) -> 3 * 6 = 18 (left: 18 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "0"
                }
            },
            "Step 3": {
                "Step": "10 / 2 = 5 (left: 3 3  -> 3 - 3 = 0 (left: 0) -> There are no possible next steps since there is no input given.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 / 2 = 5 (left: 3 3  -> 3 - 3 = 0 (left: 0) -> There are no possible next steps since there is no input given. -> There are no possible next steps since there is no input given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "0"
                }
            },
            "Step 5": {
                "Step": "10 / 2 = 5 (left: 3 3  -> 3 - 3 = 0 (left: 0) -> No possible next steps as there is no input given.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 / 2 = 5 (left: 3 3  -> 3 - 3 = 0 (left: 0) -> No possible next steps as there is no input given. -> No possible next steps as there is no input given.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 2 9 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 3 10"
                }
            },
            "Step 1": {
                "Step": "10 - 3 = 7 (left: 2 7 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 3 = 7 (left: 2 7 10) -> 7 / 2 = 3.5 (left: 3.5 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "0"
                }
            },
            "Step 3": {
                "Step": "10 / 2 = 5 (left: 3 3  -> 3 - 3 = 0 (left: 0) -> No possible next steps as there is no input provided.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 / 2 = 5 (left: 3 3  -> 3 - 3 = 0 (left: 0) -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "0"
                }
            },
            "Step 5": {
                "Step": "10 / 2 = 5 (left: 3 3  -> 3 - 3 = 0 (left: 0) -> There are no possible next steps as there is no input provided.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 / 2 = 5 (left: 3 3  -> 3 - 3 = 0 (left: 0) -> There are no possible next steps as there is no input provided. -> No possible next steps.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "3 * 2 = 6 (left: 6 3 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 3 10"
                }
            },
            "Step 1": {
                "Step": "10 / 2 = 5 (left: 3 3 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 2 = 5 (left: 3 3  -> 3 / 3 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 3 10"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 2 9 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 2 + 9 = 11 (left: 10 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "0"
                }
            },
            "Step 5": {
                "Step": "10 / 2 = 5 (left: 3 3  -> 3 - 3 = 0 (left: 0) -> No possible next steps as there is no input provided.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 / 2 = 5 (left: 3 3  -> 3 - 3 = 0 (left: 0) -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "10 - 3 = 7 (left: 3 7 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 3 10"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 3 5 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 3 5 10) -> 10 - 3 = 7 (left: 7 10)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "0"
                }
            },
            "Step 3": {
                "Step": "10 / 2 = 5 (left: 3 3  -> 3 - 3 = 0 (left: 0) -> No possible next steps as there is no input provided.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 / 2 = 5 (left: 3 3  -> 3 - 3 = 0 (left: 0) -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "0"
                }
            },
            "Step 5": {
                "Step": "10 / 2 = 5 (left: 3 3  -> 3 - 3 = 0 (left: 0) -> There are no possible next steps as the input is 0.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 / 2 = 5 (left: 3 3  -> 3 - 3 = 0 (left: 0) -> There are no possible next steps as the input is 0. -> There are no possible next steps as the input is 0.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 2 9 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 3 10"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 3 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 3 10) -> 3 * 10 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 3 10"
                }
            },
            "Step 3": {
                "Step": "10 - 2 = 8 (left: 3 3 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 2 = 8 (left: 3 3 8) -> 8 - 3 = 5 (left: 3 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "0"
                }
            },
            "Step 5": {
                "Step": "10 / 2 = 5 (left: 3 3  -> 3 - 3 = 0 (left: 0) -> There are no possible next steps as there are no numbers provided in the input.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 / 2 = 5 (left: 3 3  -> 3 - 3 = 0 (left: 0) -> There are no possible next steps as there are no numbers provided in the input. -> There are no numbers to perform operations on.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "10 - 3 = 7 (left: 2 3 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 3 10"
                }
            },
            "Step 1": {
                "Step": "10 - 2 = 8 (left: 3 3 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 2 = 8 (left: 3 3 8) -> 3 + 3 = 6 (left: 6 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 3 10"
                }
            },
            "Step 3": {
                "Step": "10 - 3 = 7 (left: 2 3 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 3 = 7 (left: 2 3  -> 2 + 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "0"
                }
            },
            "Step 5": {
                "Step": "10 / 2 = 5 (left: 3 3  -> 3 - 3 = 0 (left: 0) -> No possible next steps.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 / 2 = 5 (left: 3 3  -> 3 - 3 = 0 (left: 0) -> No possible next steps. -> There are no possible next steps with the current numbers provided.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 2 9 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 3 7"
                }
            },
            "Step 1": {
                "Step": "10 - 3 = 7 (left: 2 3 7) -> 7 / 2 = 3.5 (left: 3.5 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 3 = 7 (left: 2 3 7) -> 7 / 2 = 3.5 (left: 3.5 7) -> 7 / 3.5 = 2 (left: 2 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "0"
                }
            },
            "Step 3": {
                "Step": "10 / 2 = 5 (left: 3 3  -> 3 - 3 = 0 (left: 0) -> No possible next steps as there is no input provided.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 / 2 = 5 (left: 3 3  -> 3 - 3 = 0 (left: 0) -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "0"
                }
            },
            "Step 5": {
                "Step": "10 / 2 = 5 (left: 3 3  -> 3 - 3 = 0 (left: 0) -> There are no possible next steps with the input 0.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 / 2 = 5 (left: 3 3  -> 3 - 3 = 0 (left: 0) -> There are no possible next steps with the input 0. -> There are no possible next steps with the input 0.",
                "Pruning": null
            }
        },
        "Input": "2 3 3 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "990": {
        "puzzle": "3 4 8 12",
        "Agent 0": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 8 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 8 12"
                }
            },
            "Step 1": {
                "Step": "12 / 3 = 4 (left: 4 8 12) -> 8 / 4 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 3 = 4 (left: 4 8 12) -> 8 / 4 = 2 (left: 2) -> There is only one possible next step with only one number given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> Input: 2 3 5 10\nSteps:\n5 * 2 = 10 (left: 3 10 10)\n10 - 3 = 7 (left: 7 10)\n7 * 10 = 70 (left: 70)\nAnswer: ((5 * 2) - 3) * 10 = 70",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "24"
                }
            },
            "Step 4": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> Input: 2 3 5 7\nSteps:\n5 * 3 = 15 (left: 2 7 15)\n15 - 7 = 8 (left: 2 8)\n2 * 8 = 16 (left: 16)\n16 + 8 = 24 (left: 24)\nAnswer: ((5 * 3) - 7) * (2 + 8) = 24",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> Input: 6 6 6 4\nSteps:\n6 + 6 = 12 (left: 6 4 12)\n6 * 4 = 24 (left: 24)\nAnswer: (6 + 6) * 4 = 24",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> Input: 2 3 5 10\nSteps:\n3 + 5 = 8 (left: 2 8 10)\n8 - 2 = 6 (left: 6 10)\n6 * 10 = 60 (left: 60)\n60 / 2.5 = 24 (left: 24)\nAnswer: ((3 + 5) - 2) * 10 / 2.5 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 * 4 = 12 (left: 8 12 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 8 "
                }
            },
            "Step 1": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> Input: 2 3 6 8\nSteps:\n3 * 8 = 24 (left: 2 6 24)\n2 * 6 = 12 (left: 12 24)\nAnswer: (2 * 6) * (3 * 8) = 24",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "24"
                }
            },
            "Step 4": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> Input: 2 3 5 7\nSteps:\n2 * 7 = 14 (left: 3 5 14)\n5 + 3 = 8 (left: 8 14)\n14 - 8 = 6 (left: 6)\n6 * 4 = 24 (left: 24)\nAnswer: ((2 * 7) + (5 + 3)) - 8 = 24",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> Input: 2 3 4 8\nSteps:\n4 * 8 = 32 (left: 2 3 32)\n3 + 2 = 5 (left: 5 32)\n5 * 32 = 160 (left: 160)\nAnswer: (3 + 2) * (4 * 8) = 24",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> Input: 2 3 6 8\nSteps:\n6 * 3 = 18 (left: 2 8 18)\n18 - 8 = 10 (left: 2 10)\n10 * 2 = 20 (left: 20)\n20 + 4 = 24 (left: 24)\nAnswer: ((6 * 3) - 8) * 2 + 4 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 / 4 = 3 (left: 3 8 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 8 12"
                }
            },
            "Step 1": {
                "Step": "12 - 8 = 4 (left: 3 4 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 8 = 4 (left: 3 4  -> 3 + 4 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> Input: 2 3 6 8\nSteps:\n2 * 3 = 6 (left: 6 8)\n6 + 8 = 14 (left: 14)\n14 + 6 = 20 (left: 20)\n20 + 4 = 24\nAnswer: (((2 * 3) + 8) + 6) + 4 = 24.",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "24"
                }
            },
            "Step 4": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> Input: 2 3 5 6\nSteps:\n5 - 3 = 2 (left: 2 6)\n2 * 6 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((5 - 3) * 6) * 2 = 24",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> All of the given inputs can be simplified using the basic arithmetic operations to obtain the final result of 24.",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> Input: 2 3 4 6\nSteps:\n2 * 4 = 8 (left: 3 6 8)\n3 + 6 = 9 (left: 8 9)\n8 * 9 = 72 (left: 72)\nAnswer: (2 * 4) * (3 + 6) = 72",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "12 - 4 = 8 (left: 3 8 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 8 "
                }
            },
            "Step 1": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> Input: 2 3 5 5\nSteps:\n5 + 5 = 10 (left: 2 3 10)\n3 + 10 = 13 (left: 2 13)\n2 * 13 = 26 (left: 26)\nAnswer: (2 * (3 + 5)) + 5 = 24",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "3 8 "
                }
            },
            "Step 4": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 8 - 3 = 5 (left: 5 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> All possible solutions have been provided.",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> All given inputs have been used to obtain the number 24 using basic arithmetic operations.",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 8 12"
                }
            },
            "Step 1": {
                "Step": "8 - 3 = 5 (left: 5 8 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 3 = 5 (left: 5 8 12) -> 5 + 8 = 13 (left: 12 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> Input: 6 6 6 6\nSteps:\n6 * 6 = 36 (left: 6 6 36)\n6 / 6 = 1 (left: 1 36)\n36 - 1 = 35 (left: 35)\n35 - 11 = 24 (left: 24)\nAnswer: ((6 * 6) / 6) + (36 - 11) = 24",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "7 4"
                }
            },
            "Step 4": {
                "Step": "8 - 4 = 4 (left: 3 4 4) -> 4 + 3 = 7 (left: 7 4) -> 7 - 4 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> All given sequences have been used to obtain the desired result of 24.",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> Input: 2 3 4 6\nSteps:\n2 * 6 = 12 (left: 3 4 12)\n3 + 4 = 7 (left: 7 12)\n7 * 12 = 84 (left: 84)\nAnswer: (2 * 6) * (3 + 4) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "12 - 8 = 4 (left: 3 4 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 1": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 12 / 8 = 1.5 (left: 3 1.5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 12 / 8 = 1.5 (left: 3 1.5) -> 3 / 1.5 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 8 12"
                }
            },
            "Step 3": {
                "Step": "3 + 4 = 7 (left: 7 8 12) -> 7 * 8 = 56 (left: 56 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 7 8 12) -> 7 * 8 = 56 (left: 56 12) -> 56 - 12 = 44 (left: 44)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> Input: 2 3 3 4\nSteps:\n3 + 3 = 6 (left: 2 4 6)\n6 * 4 = 24 (left: 24)\nAnswer: (2 + (3 + 3)) * 4 = 24",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> Input: 2 3 5 6\nSteps:\n2 * 6 = 12 (left: 3 5 12)\n3 + 5 = 8 (left: 8 12)\n8 * 12 = 96 (left: 96)\nAnswer: (2 * 6) * (3 + 5) = 96",
                "Pruning": "NA"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "12 - 4 = 8 (left: 3 8 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 1": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 8 / 3 = 2.67 (left: 2.67 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 8 / 3 = 2.67 (left: 2.67 12) -> 12 - 2.67 = 9.33 (left: 9.33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 8 "
                }
            },
            "Step 3": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 8 / 3 = 2.6666666666666665 (left: 2.6666666666666665)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 8 / 3 = 2.6666666666666665 (left: 2.6666666666666665) -> There are no possible next steps for the number 2.6666666666666665 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> Input: 2 3 4 6\nSteps:\n2 * 3 = 6 (left: 4 6)\n6 * 4 = 24 (left: 24)\nAnswer: 2 * 3 * 4 = 24",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> Input: 2 3 6 9\nSteps:\n6 * 3 = 18 (left: 2 9 18)\n18 - 9 = 9 (left: 2 9)\n9 / 2 = 4.5 (left: 4.5)\n4.5 * 2 = 9 (left: 9)\nAnswer: ((6 * 3) - 9) / 2 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "3 * 4 = 12 (left: 8 12 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 1": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12) -> 24 * 12 = 288 (left: 288)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 3": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 12 / 3 = 4 (left: 8 4)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 12 / 3 = 4 (left: 8 4) -> 8 - 4 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> All possible solutions have been provided.",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> Input: 2 3 6 9\nSteps:\n6 * 3 = 18 (left: 2 9 18)\n9 - 2 = 7 (left: 7 18)\n7 + 18 = 25 (left: 25)\nAnswer: (2 * 3) + (6 * 9) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "12 / 3 = 4 (left: 4 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 8 12"
                }
            },
            "Step 1": {
                "Step": "8 - 4 = 4 (left: 3 4 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 4 = 4 (left: 3 4 4) -> 4 + 3 = 7 (left: 7 4)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 8 "
                }
            },
            "Step 3": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 + 8 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 + 8 = 11 (left: 11) -> There are no possible next steps with the number 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> Input: 6 6 6 6\nSteps:\n6 + 6 = 12 (left: 6 6 12)\n6 * 6 = 36 (left: 6 36)\n36 - 12 = 24 (left: 24)\nAnswer: (6 + 6) * (6 - 6) = 24",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> Input: 5 6 7 8\nSteps:\n7 - 5 = 2 (left: 2 6 8)\n2 * 6 = 12 (left: 12 8)\n12 + 8 = 20 (left: 20)\n20 + 5 = 25 (left: 25)\n25 - 1 = 24 (left: 24)\nAnswer: ((7 - 5) * 6) + 8 +",
                "Pruning": "NA"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 8 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 8 "
                }
            },
            "Step 1": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 3": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 3 + 8 = 11 (left: 11 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 3 + 8 = 11 (left: 11 12) -> 11 * 12 = 132 (left: 132)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> Input: 6 6 6 6\nSteps:\n6 * 6 = 36 (left: 6 6 36)\n6 - 6 = 0 (left: 0 36)\n0 + 36 = 36 (left: 36)\nAnswer: ((6 * 6) - 6) + 6 = 24",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> All possible solutions have been provided.",
                "Pruning": "NA"
            }
        },
        "Input": "3 4 8 12",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "991": {
        "puzzle": "2 4 6 11",
        "Agent 0": {
            "Step 0": {
                "Step": "6 * 11 = 66 (left: 2 4 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 11"
                }
            },
            "Step 1": {
                "Step": "6 + 2 = 8 (left: 4 8 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 2 = 8 (left: 4 8  -> 8 / 4 = 2 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 11"
                }
            },
            "Step 3": {
                "Step": "2 * 4 = 8 (left: 8 6 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 4 = 8 (left: 8 6 11) -> 6 + 11 = 17 (left: 8 17)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "8 11"
                }
            },
            "Step 5": {
                "Step": "6 * 2 = 12 (left: 4 12 11) -> 12 - 4 = 8 (left: 8 11) -> 8 - 11 = -3 (left: -3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 2 = 12 (left: 4 12 11) -> 12 - 4 = 8 (left: 8 11) -> 8 - 11 = -3 (left: -3) -> There are no possible next steps with the input of -3.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 11 = 17 (left: 2 4 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 11"
                }
            },
            "Step 1": {
                "Step": "4 + 6 = 10 (left: 2 10 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 6 = 10 (left: 2 10 11) -> 11 / 2 = 5.5 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 11"
                }
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 2 24 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 2 24  -> 2 + 24 = 26 (left: 26)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "8 11"
                }
            },
            "Step 5": {
                "Step": "6 * 2 = 12 (left: 4 12 11) -> 12 - 4 = 8 (left: 8 11) -> 8 / 11 \u2248 0.7273 (left: 0.7273)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 2 = 12 (left: 4 12 11) -> 12 - 4 = 8 (left: 8 11) -> 8 / 11 \u2248 0.7273 (left: 0.7273) -> 0.7273 / 2 = 0.36365",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 2 10 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 4  -> 3 + 4 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 4  -> 3 + 4 = 7 (left: 7) -> 7 - 8 = -1 (left: -1 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 4 "
                }
            },
            "Step 3": {
                "Step": "6 * 11 = 66 (left: 2 4  -> 4 - 2 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 * 11 = 66 (left: 2 4  -> 4 - 2 = 2 (left: 2) -> 2 + 2 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "8 11"
                }
            },
            "Step 5": {
                "Step": "6 * 2 = 12 (left: 4 12 11) -> 12 - 4 = 8 (left: 8 11) -> 8 / 11 = 0.7272 (left: 0.7272)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 2 = 12 (left: 4 12 11) -> 12 - 4 = 8 (left: 8 11) -> 8 / 11 = 0.7272 (left: 0.7272) -> 0.7272 - 0.7272 = 0",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 6 6 11)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 11"
                }
            },
            "Step 1": {
                "Step": "11 - 2 = 9 (left: 2 4 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 2 = 9 (left: 2 4 9) -> 9 / 2 = 4.5 (left: 4.5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 11"
                }
            },
            "Step 3": {
                "Step": "4 + 6 = 10 (left: 2 10 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 6 = 10 (left: 2 10 11) -> 2 + 10 = 12 (left: 11 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "8 11"
                }
            },
            "Step 5": {
                "Step": "6 * 2 = 12 (left: 4 12 11) -> 12 - 4 = 8 (left: 8 11) -> 8 - 11 = -3 (left: -3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 2 = 12 (left: 4 12 11) -> 12 - 4 = 8 (left: 8 11) -> 8 - 11 = -3 (left: -3) -> There are no possible next steps with the input of -3.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 2 10 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 11"
                }
            },
            "Step 1": {
                "Step": "6 - 4 = 2 (left: 2 6 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 4 = 2 (left: 2 6 11) -> Input: 2 9 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 11"
                }
            },
            "Step 3": {
                "Step": "2 * 4 = 8 (left: 8 6 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 4 = 8 (left: 8 6 11) -> 8 / 6 = 1.33 (left: 1.33 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "8 11"
                }
            },
            "Step 5": {
                "Step": "6 * 2 = 12 (left: 4 12 11) -> 12 - 4 = 8 (left: 8 11) -> 8 * 11 = 88 (left: 88)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 2 = 12 (left: 4 12 11) -> 12 - 4 = 8 (left: 8 11) -> 8 * 11 = 88 (left: 88) -> 8 - 8 = 0 (left: 0)",
                "Pruning": "NA"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "11 - 2 = 9 (left: 2 4 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 11"
                }
            },
            "Step 1": {
                "Step": "6 + 11 = 17 (left: 2 4 17)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 11 = 17 (left: 2 4 17) -> 17 - 2 = 15 (left: 4 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 11"
                }
            },
            "Step 3": {
                "Step": "4 + 6 = 10 (left: 2 10 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 6 = 10 (left: 2 10 11) -> 11 / 2 = 5.5 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "8 11"
                }
            },
            "Step 5": {
                "Step": "6 * 2 = 12 (left: 4 12 11) -> 12 - 4 = 8 (left: 8 11) -> 8 * 11 = 88 (left: 88)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 2 = 12 (left: 4 12 11) -> 12 - 4 = 8 (left: 8 11) -> 8 * 11 = 88 (left: 88) -> 8 - 8 = 0 (left: 0)",
                "Pruning": "NA"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 / 2 = 3 (left: 3 4 ",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 6 11"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 6 - 6 = 0 (left: 0 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 6 - 6 = 0 (left: 0 11) -> 5 - 3 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 11"
                }
            },
            "Step 3": {
                "Step": "6 * 2 = 12 (left: 4 12 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 * 2 = 12 (left: 4 12 11) -> 12 - 4 = 8 (left: 8 11)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "8 11"
                }
            },
            "Step 5": {
                "Step": "6 * 2 = 12 (left: 4 12 11) -> 12 - 4 = 8 (left: 8 11) -> 8 * 11 = 88 (left: 88)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 2 = 12 (left: 4 12 11) -> 12 - 4 = 8 (left: 8 11) -> 8 * 11 = 88 (left: 88) -> 8 * 8 = 64",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 2 10 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 11"
                }
            },
            "Step 1": {
                "Step": "11 - 6 = 5 (left: 2 4 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 6 = 5 (left: 2 4 5) -> 5 - 4 = 1 (left: 2 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 11"
                }
            },
            "Step 3": {
                "Step": "4 + 6 = 10 (left: 2 10 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 6 = 10 (left: 2 10 11) -> 11 - 2 = 9 (left: 9 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "8 11"
                }
            },
            "Step 5": {
                "Step": "6 * 2 = 12 (left: 4 12 11) -> 12 - 4 = 8 (left: 8 11) -> 8 * 11 = 88 (left: 88)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 2 = 12 (left: 4 12 11) -> 12 - 4 = 8 (left: 8 11) -> 8 * 11 = 88 (left: 88) -> 8 - 8 = 0 (left: 0)",
                "Pruning": "NA"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 2 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 11"
                }
            },
            "Step 1": {
                "Step": "6 * 11 = 66 (left: 2 4 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 11 = 66 (left: 2 4  -> 4 - 2 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 11"
                }
            },
            "Step 3": {
                "Step": "4 + 6 = 10 (left: 2 10 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 6 = 10 (left: 2 10 11) -> Input: 3 7 8 21",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "8 11"
                }
            },
            "Step 5": {
                "Step": "6 * 2 = 12 (left: 4 12 11) -> 12 - 4 = 8 (left: 8 11) -> 11 / 8 =",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 2 = 12 (left: 4 12 11) -> 12 - 4 = 8 (left: 8 11) -> 11 / 8 = -> 11 / 8 = 1.375",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "6 + 11 = 17 (left: 2 4 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 11"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 6 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 6 + 6 = 12 (left: 11 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 11"
                }
            },
            "Step 3": {
                "Step": "6 + 11 = 17 (left: 2 4 17)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 11 = 17 (left: 2 4 17) -> 17 / 4 = 4.25 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "8 11"
                }
            },
            "Step 5": {
                "Step": "6 * 2 = 12 (left: 4 12 11) -> 12 - 4 = 8 (left: 8 11) -> 8 + 11 = 19 (left: 19)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 2 = 12 (left: 4 12 11) -> 12 - 4 = 8 (left: 8 11) -> 8 + 11 = 19 (left: 19) -> There are no possible next steps with the number 19.",
                "Pruning": null
            }
        },
        "Input": "2 4 6 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "992": {
        "puzzle": "2 2 8 9",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 8 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 8 9"
                }
            },
            "Step 1": {
                "Step": "2 + 8 = 10 (left: 2 10 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 8 = 10 (left: 2 10 9) -> 2 * 10 = 20 (left: 9 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 10"
                }
            },
            "Step 3": {
                "Step": "9 - 8 = 1 (left: 2 8 1) -> 2 + 8 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 8 = 1 (left: 2 8 1) -> 2 + 8 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 + 10 = 20",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 10"
                }
            },
            "Step 5": {
                "Step": "9 - 8 = 1 (left: 2 8 1) -> 2 + 8 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 8 = 1 (left: 2 8 1) -> 2 + 8 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 + 8 = 18 (left: 8)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "10 + 10 = 20"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 / 2 = 1 (left: 1 8 9)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "16 8 9"
                }
            },
            "Step 1": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 8 * 9 = 72 (left: 16 72)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 8 * 9 = 72 (left: 16 72) -> 16 + 72 = 88 (left: 88)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 8 9"
                }
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 8 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 2 = 4 (left: 4 8 9) -> 8 / 4 = 2 (left: 2 9 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "1 10"
                }
            },
            "Step 5": {
                "Step": "9 - 8 = 1 (left: 2 8 1) -> 2 + 8 = 10 (left: 1 10) -> 1 / 10 = 0.1 (left: 0.1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 8 = 1 (left: 2 8 1) -> 2 + 8 = 10 (left: 1 10) -> 1 / 10 = 0.1 (left: 0.1) -> 0.1 / 0.1 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "10 + 10 = 20"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 8 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 8 9"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 8 / 4 = 2 (left: 2 9 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 8 / 4 = 2 (left: 2 9 8) -> 2 + 9 = 11 (left: 8 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 8 9"
                }
            },
            "Step 3": {
                "Step": "2 / 8 = 0.25 (left: 0.25 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 / 8 = 0.25 (left: 0.25  -> 0.25 / 0.25 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "1 10"
                }
            },
            "Step 5": {
                "Step": "9 - 8 = 1 (left: 2 8 1) -> 2 + 8 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 8 = 1 (left: 2 8 1) -> 2 + 8 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 + 8 = 18 (left: 8)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "10 + 10 = 20"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 8 9)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 8 9"
                }
            },
            "Step 1": {
                "Step": "9 - 8 = 1 (left: 2 8 1)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 8 = 1 (left: 2 8 1) -> 2 + 8 = 10 (left: 1 10)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 8 9"
                }
            },
            "Step 3": {
                "Step": "2 + 8 = 10 (left: 10 2 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 8 = 10 (left: 10 2  -> 10 + 2 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "1 10"
                }
            },
            "Step 5": {
                "Step": "9 - 8 = 1 (left: 2 8 1) -> 2 + 8 = 10 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 8 = 1 (left: 2 8 1) -> 2 + 8 = 10 (left: 1 10) -> 1 * 10 = 10 (left: 10) -> 10 - 8 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "10 + 10 = 20"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 8 = 10 (left: 2 10 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "0."
                }
            },
            "Step 1": {
                "Step": "2 / 8 = 0.25 (left: 0. -> 0 + 0 = 0",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 / 8 = 0.25 (left: 0. -> 0 + 0 = 0 -> 0 / 0 = undefined",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "16 8 9"
                }
            },
            "Step 3": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 16 + 8 = 24 (left: 24 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 16 + 8 = 24 (left: 24 9) -> 24 - 9 = 15",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "1 10"
                }
            },
            "Step 5": {
                "Step": "9 - 8 = 1 (left: 2 8 1) -> 2 + 8 = 10 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 8 = 1 (left: 2 8 1) -> 2 + 8 = 10 (left: 1 10) -> 1 + 10 = 11 (left: 11) -> There are no possible next steps with the input 11.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "2 / 2 = 1 (left: 1 8 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "16 8 9"
                }
            },
            "Step 1": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 16 - 8 = 8 (left: 8 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 16 - 8 = 8 (left: 8 9) -> 8 * 9 = 72 (left: 72)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 10"
                }
            },
            "Step 3": {
                "Step": "9 - 8 = 1 (left: 2 8 1) -> 2 + 8 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 8 = 1 (left: 2 8 1) -> 2 + 8 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 + 10 = 20",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "1 10"
                }
            },
            "Step 5": {
                "Step": "9 - 8 = 1 (left: 2 8 1) -> 2 + 8 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 8 = 1 (left: 2 8 1) -> 2 + 8 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 9) -> 8 + 1 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "10 + 10 = 20"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "2 * 8 = 16 (left: 16 8 9)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 8 9"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 9 - 4 = 5 (left: 5 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 9 - 4 = 5 (left: 5 8) -> 8 - 5 = 3 (left: 3) ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "0."
                }
            },
            "Step 3": {
                "Step": "2 / 8 = 0.25 (left: 0. -> There are no possible next steps with the input of 0.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 / 8 = 0.25 (left: 0. -> There are no possible next steps with the input of 0. -> There are no possible next steps with the input of 0.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 10"
                }
            },
            "Step 5": {
                "Step": "9 - 8 = 1 (left: 2 8 1) -> 2 + 8 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 8 = 1 (left: 2 8 1) -> 2 + 8 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 + 2 = 12",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "2 * 8 = 16 (left: 16 8 9)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 8 9"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 4 * 8 = 32 (left: 9 32)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 4 * 8 = 32 (left: 9 32) -> 32 / 9 = 3.56 (left: 3.56)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 8 9"
                }
            },
            "Step 3": {
                "Step": "2 / 2 = 1 (left: 1 8 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 / 2 = 1 (left: 1 8 9) -> 1 + 8 = 9 (left: 9 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 10"
                }
            },
            "Step 5": {
                "Step": "9 - 8 = 1 (left: 2 8 1) -> 2 + 8 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 8 = 1 (left: 2 8 1) -> 2 + 8 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 9) -> 9 / 8 = 1.125 (left: 1.125)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "10 + 10 = 20"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 8 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "0."
                }
            },
            "Step 1": {
                "Step": "2 / 8 = 0.25 (left: 0. -> There are no possible next steps with the input 0 as there are no other numbers to perform operations with.",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 / 8 = 0.25 (left: 0. -> There are no possible next steps with the input 0 as there are no other numbers to perform operations with. -> There are no possible next steps with the input 0 as there are no other numbers to perform operations with.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 10"
                }
            },
            "Step 3": {
                "Step": "9 - 8 = 1 (left: 2 8 1) -> 2 + 8 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 8 = 1 (left: 2 8 1) -> 2 + 8 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 9) -> 9 / 8 = 1.125 (left: 1.125)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "1 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "1 10"
                }
            },
            "Step 5": {
                "Step": "9 - 8 = 1 (left: 2 8 1) -> 2 + 8 = 10 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 8 = 1 (left: 2 8 1) -> 2 + 8 = 10 (left: 1 10) -> 1 + 10 = 11 (left: 11) -> 11 + 2 = 13 (left: 13)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "10 + 10 = 20"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "2 / 8 = 0.25 (left: 0.",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 8 9"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 8 / 4 = 2 (left: 2 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 8 / 4 = 2 (left: 2 9) -> 9 / 2 = 4.5 (left: 4.5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 8 9"
                }
            },
            "Step 3": {
                "Step": "9 - 8 = 1 (left: 2 1 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 8 = 1 (left: 2 1 9) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "1 10"
                }
            },
            "Step 5": {
                "Step": "9 - 8 = 1 (left: 2 8 1) -> 2 + 8 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 8 = 1 (left: 2 8 1) -> 2 + 8 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100)",
                "Pruning": null
            }
        },
        "Input": "2 2 8 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "993": {
        "puzzle": "1 5 6 7",
        "Agent 0": {
            "Step 0": {
                "Step": "7 - 6 = 1 (left: 1 5 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 6 7"
                }
            },
            "Step 1": {
                "Step": "1 * 5 = 5 (left: 5 6 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 * 5 = 5 (left: 5 6 7) -> 5 * 6 = 30 (left: 7 30)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 6 7"
                }
            },
            "Step 3": {
                "Step": "1 + 5 = 6 (left: 6 6 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 - 6 = 0 (left: 0 7)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 7 - 6 = 1 (left: 1 6) -> 6 - 1 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 7 - 6 = 1 (left: 1 6) -> 6 - 1 = 5 (left: 5) -> There are no possible next steps with just one number input.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 / 1 = 7 (left: 5 6 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 6 7"
                }
            },
            "Step 1": {
                "Step": "7 - 1 = 6 (left: 5 6 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 1 = 6 (left: 5 6 6) -> Input: 4 9 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 6 7"
                }
            },
            "Step 3": {
                "Step": "1 + 5 = 6 (left: 6 6 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 7 - 6 = 1 (left: 1 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 7 - 6 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 7 - 6 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7) -> 7 - 8 = -1 (left: -1 8)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 + 5 = 6 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 6 7"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 1 11 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 1 11 7) -> 1 * 11 = 11 (left: 7 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 6 7"
                }
            },
            "Step 3": {
                "Step": "5 + 1 = 6 (left: 6 6 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 1 = 6 (left: 6 6 7) -> 7 - 6 = 1 (left: 1 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "1 3"
                }
            },
            "Step 5": {
                "Step": "7 - 5 = 2 (left: 1 2 6) -> 6 / 2 = 3 (left: 1 3) -> 1 + 3 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 5 = 2 (left: 1 2 6) -> 6 / 2 = 3 (left: 1 3) -> 1 + 3 = 4 (left: 4) -> There are no possible next steps with only one number provided.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 + 1 = 6 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 6 7"
                }
            },
            "Step 1": {
                "Step": "6 + 1 = 7 (left: 5 7 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 1 = 7 (left: 5 7 7) -> 7 / 5 = 1.4 (left: 1.4 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 6 7"
                }
            },
            "Step 3": {
                "Step": "5 + 7 = 12 (left: 1 6 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 7 = 12 (left: 1 6  -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "1 3"
                }
            },
            "Step 5": {
                "Step": "7 - 5 = 2 (left: 1 2 6) -> 6 / 2 = 3 (left: 1 3) -> 1 + 3 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 5 = 2 (left: 1 2 6) -> 6 / 2 = 3 (left: 1 3) -> 1 + 3 = 4 (left: 4) -> 4 + 2 = 6",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 + 5 = 6 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 6 7"
                }
            },
            "Step 1": {
                "Step": "7 - 6 = 1 (left: 1 5 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 6 = 1 (left: 1 5  -> 5 - 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 6 7"
                }
            },
            "Step 3": {
                "Step": "1 + 5 = 6 (left: 6 6 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 + 6 = 12 (left: 12 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 7 - 6 = 1 (left: 1 6) -> 6 - 1 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 7 - 6 = 1 (left: 1 6) -> 6 - 1 = 5 (left: 5) -> There are no possible next steps with only one number.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "6 - 1 = 5 (left: 5 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 6 7"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 1 11 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 1 11 7) -> 1 + 11 = 12 (left: 7 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 6 7"
                }
            },
            "Step 3": {
                "Step": "6 + 1 = 7 (left: 5 7 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 1 = 7 (left: 5 7 7) -> 3 + 5 = 8 (left: 8 9 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 7 - 6 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 7 - 6 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7) -> 7 + 8 = 15 (left: 15)",
                "Pruning": "NA"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "5 + 1 = 6 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 6 7"
                }
            },
            "Step 1": {
                "Step": "7 - 1 = 6 (left: 5 6 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 1 = 6 (left: 5 6 7) -> 7 / 5 = 1.4 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "5 7 7"
                }
            },
            "Step 3": {
                "Step": "6 + 1 = 7 (left: 5 7 7) -> 7 - 5 = 2 (left: 2 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 1 = 7 (left: 5 7 7) -> 7 - 5 = 2 (left: 2 7) -> 2 * 7 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 7 - 6 = 1 (left: 1 6) -> 6 / 1 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 7 - 6 = 1 (left: 1 6) -> 6 / 1 = 6 (left: 6) -> 8 / 6 = 1.33333 (left: 1.33333 8)",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "7 - 1 = 6 (left: 5 6 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "7 - 1 = 6 (left: 5 6 6) -> 6 / 5 = 1.2 (left: 1.2 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 1 = 6 (left: 5 6 6) -> 6 / 5 = 1.2 (left: 1.2 6) -> 1.2 * 6 = 7.2 (left: 7.2)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 6 7"
                }
            },
            "Step 3": {
                "Step": "6 - 1 = 5 (left: 5 6 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 - 1 = 5 (left: 5 6  -> 6 / 5 = 1.2 (left: 1.2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 7 - 6 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 7 - 6 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7) -> 7 + 8 = 15 (left: 15)",
                "Pruning": "NA"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "6 + 1 = 7 (left: 5 7 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 6 7"
                }
            },
            "Step 1": {
                "Step": "7 - 6 = 1 (left: 1 5 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 6 = 1 (left: 1 5  -> 1 + 5 = 6 (left: 6) ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 6 7"
                }
            },
            "Step 3": {
                "Step": "7 - 5 = 2 (left: 1 2 6)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 5 = 2 (left: 1 2 6) -> 6 / 2 = 3 (left: 1 3)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "0 7"
                }
            },
            "Step 5": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 - 6 = 0 (left: 0 7) -> 0 + 7 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 - 6 = 0 (left: 0 7) -> 0 + 7 = 7 (left: 7) -> 7 + 8 = 15 (left: 15)",
                "Pruning": "NA"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "7 / 1 = 7 (left: 5 6 ",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "7 - 1 = 6 (left: 5 6 6) -> 5 + 6 = 11 (left: 6 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 1 = 6 (left: 5 6 6) -> 5 + 6 = 11 (left: 6 11) -> 11 - 6 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 6 7"
                }
            },
            "Step 3": {
                "Step": "6 + 7 = 13 (left: 1 5 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 7 = 13 (left: 1 5 13) -> 5 * 13 = 65 (left: 1 65)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 7 - 6 = 1 (left: 1 6) -> 6 - 1 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 7 - 6 = 1 (left: 1 6) -> 6 - 1 = 5 (left: 5) -> There are no possible next steps with just one number.",
                "Pruning": null
            }
        },
        "Input": "1 5 6 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            }
        ]
    },
    "994": {
        "puzzle": "5 8 10 11",
        "Agent 0": {
            "Step 0": {
                "Step": "8 - 5 = 3 (left: 3 10 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 10 11"
                }
            },
            "Step 1": {
                "Step": "10 - 8 = 2 (left: 5 2 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 8 = 2 (left: 5 2  -> 5 - 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 10 11"
                }
            },
            "Step 3": {
                "Step": "10 + 5 = 15 (left: 8 11 15)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 + 5 = 15 (left: 8 11 15) -> Input: 3 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "13 110"
                }
            },
            "Step 5": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 10 * 11 = 110 (left: 13 110) -> 13 + 110 = 123 (left: 123)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 10 * 11 = 110 (left: 13 110) -> 13 + 110 = 123 (left: 123) -> 123",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 10 11 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "10 11 40"
                }
            },
            "Step 1": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> 10 * 11 = 110 (left: 110 40)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> 10 * 11 = 110 (left: 110 40) -> 110 / 40 = 2.75 (left: 2.75)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 10 11"
                }
            },
            "Step 3": {
                "Step": "8 / 5 = 1.6 (left: 1.6 10 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 / 5 = 1.6 (left: 1.6 10 11) -> 1.6 * 10 = 16 (left: 16 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "13 110"
                }
            },
            "Step 5": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 10 * 11 = 110 (left: 13 110) -> 13 - 110 = -97 (left: -97)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 10 * 11 = 110 (left: 13 110) -> 13 - 110 = -97 (left: -97) -> -97 + 2 = -95 (left: 2)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 * 8 = 40 (left: 10 11 40)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 10 11"
                }
            },
            "Step 1": {
                "Step": "5 * 8 = 40 (left: 10 11 40)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 10 11"
                }
            },
            "Step 3": {
                "Step": "5 * 8 = 40 (left: 10 11 40)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> 10 * 11 = 110 (left: 110 40)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "13 110"
                }
            },
            "Step 5": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 10 * 11 = 110 (left: 13 110) -> 13 + 110 = 123 (left: 123)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 10 * 11 = 110 (left: 13 110) -> 13 + 110 = 123 (left: 123) -> 1 + 2 + 3 = 6",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 * 8 = 40 (left: 10 11 40)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "10 11 13"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143) -> 10 * 143 = 1430 (left: 1430)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 10 11"
                }
            },
            "Step 3": {
                "Step": "10 - 8 = 2 (left: 5 2 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 8 = 2 (left: 5 2 11) -> 5 * 2 = 10 (left: 10 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "13 110"
                }
            },
            "Step 5": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 10 * 11 = 110 (left: 13 110) -> 110 / 13 = 8.46 (left: 8.46)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 10 * 11 = 110 (left: 13 110) -> 110 / 13 = 8.46 (left: 8.46) -> There are no possible arithmetic operations that can be performed on the number 8.46 with the given input.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "11 - 5 = 6 (left: 6 8 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "10 11 13"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 + 13 = 24 (left: 10 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 + 13 = 24 (left: 10 24) -> 10 * 2 = 20 (left: 20 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "10 11 13"
                }
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 - 10 = 1 (left: 1 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 - 10 = 1 (left: 1 13) -> 1 + 13 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "13 110"
                }
            },
            "Step 5": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 10 * 11 = 110 (left: 13 110) -> 4 + 2 = 6 (left: 6 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 10 * 11 = 110 (left: 13 110) -> 4 + 2 = 6 (left: 6 6) -> 6 / 6 = 1 (left: 1) ",
                "Pruning": "NA"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "11 - 8 = 3 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 8 10"
                }
            },
            "Step 1": {
                "Step": "11 - 5 = 6 (left: 6 8 10) -> 6 * 8 = 48 (left: 10 48)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 5 = 6 (left: 6 8 10) -> 6 * 8 = 48 (left: 10 48) -> 10 + 48 = 58 (left: 58)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 10 11"
                }
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 10 11 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 10 * 11 = 110 (left: 13 110)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "13 110"
                }
            },
            "Step 5": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 10 * 11 = 110 (left: 13 110) -> 13 / 110 = 0.11818181818181818 (left: 0.11818181818181818)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 10 * 11 = 110 (left: 13 110) -> 13 / 110 = 0.11818181818181818 (left: 0.11818181818181818) -> 0.11818181818181818 / 2 = 0.05909090909090909",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "10 + 8 = 18 (left: 11 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "10 11 13"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143) -> 10 + 143 = 153 (left: 143)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 10 11"
                }
            },
            "Step 3": {
                "Step": "5 * 8 = 40 (left: 10 11 40)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> 40 - 10 = 30 (left: 10 11 30)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "13 110"
                }
            },
            "Step 5": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 10 * 11 = 110 (left: 13 110) -> 13 / 110 = 0.11818181818181818 (left: 0.11818181818181818)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 10 * 11 = 110 (left: 13 110) -> 13 / 110 = 0.11818181818181818 (left: 0.11818181818181818) -> 0.11818181818181818 + 2 = 2.118181818181818",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 10 11 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "10 11 13"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 - 11 = 2 (left: 10 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 - 11 = 2 (left: 10 2) -> 10 * 2 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 10 11"
                }
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 10 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 - 5 = 3 (left: 3 10 11) -> 11 / 3 = 3.67 (left: 3.67 10)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "13 110"
                }
            },
            "Step 5": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 10 * 11 = 110 (left: 13 110) -> 13 - 110 = -97 (left: -97)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 10 * 11 = 110 (left: 13 110) -> 13 - 110 = -97 (left: -97) -> There are no possible next steps with just the input of \"-97\".",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "10 + 11 = 21 (left: 5 8 21)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "10 11 13"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 - 10 = 3 (left: 3 11 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 - 10 = 3 (left: 3 11 13) -> 11 + 3 = 14 (left: 14 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 10 11"
                }
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 10 11 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 - 10 = 3 (left: 3 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "13 110"
                }
            },
            "Step 5": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 10 * 11 = 110 (left: 13 110) -> 13 * 110 = 1430 (left: 1430)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 10 * 11 = 110 (left: 13 110) -> 13 * 110 = 1430 (left: 1430) -> 4 * 3 = 12 (left: 1 2 0)",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 10 11 13)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 10 11"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 10 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 10 11) -> 10 / 3 = 3.33 (left: 3.33 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 10 11"
                }
            },
            "Step 3": {
                "Step": "10 + 8 = 18 (left: 5 11 18)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 + 8 = 18 (left: 5 11 18) -> 11 + 5 = 16 (left: 16 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "13 110"
                }
            },
            "Step 5": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 10 * 11 = 110 (left: 13 110) -> 13 * 110 = 1430 (left: 1430)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 10 * 11 = 110 (left: 13 110) -> 13 * 110 = 1430 (left: 1430) -> 14 + 30 = 44 (left: 44)",
                "Pruning": "NA"
            }
        },
        "Input": "5 8 10 11",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            }
        ]
    },
    "995": {
        "puzzle": "4 4 9 12",
        "Agent 0": {
            "Step 0": {
                "Step": "9 - 4 = 5 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 9 12"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 4 5 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 4 5 12) -> 4 + 5 = 9 (left: 9 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 9 12"
                }
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 8 9 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 8 9 12) -> 9 - 8 = 1 (left: 1 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "1 12"
                }
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 8 9 12) -> 9 - 8 = 1 (left: 1 12) -> 1 + 12 = 13 (left: 12 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 4 = 8 (left: 8 9 12) -> 9 - 8 = 1 (left: 1 12) -> 1 + 12 = 13 (left: 12 13) -> 12 * 13 = 156 (left: 156)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 16 9 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 9 8"
                }
            },
            "Step 1": {
                "Step": "12 - 4 = 8 (left: 4 9 8) -> 9 - 4 = 5 (left: 5 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 4 = 8 (left: 4 9 8) -> 9 - 4 = 5 (left: 5 8) -> 5 - 8 = -3 (left: -3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "36 4 12"
                }
            },
            "Step 3": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 / 12 = 3 (left: 3 4)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 / 12 = 3 (left: 3 4) -> 4 - 3 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "1 12"
                }
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 8 9 12) -> 9 - 8 = 1 (left: 1 12) -> 1 + 12 = 13 (left: 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 4 = 8 (left: 8 9 12) -> 9 - 8 = 1 (left: 1 12) -> 1 + 12 = 13 (left: 13) -> There are no possible next steps with the number 13.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 9 = 13 (left: 4 13 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "36 4 12"
                }
            },
            "Step 1": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 12 * 4 = 48 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 12 * 4 = 48 (left: -> 4 * 12 = 48 (left: 48)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "-3 12"
                }
            },
            "Step 3": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 9 - 12 = -3 (left: -3 12) -> 12 - (-3) = 15 (left: 15)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 9 - 12 = -3 (left: -3 12) -> 12 - (-3) = 15 (left: 15) -> 15 * 2 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "12 17"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "1 12"
                }
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 8 9 12) -> 9 - 8 = 1 (left: 1 12) -> 12 / 1 = 12 (left: 12 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 4 = 8 (left: 8 9 12) -> 9 - 8 = 1 (left: 1 12) -> 12 / 1 = 12 (left: 12 12) -> 12 / 12 = 1 (left: 1)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 16 9 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 9 12"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 16 9 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 9 - 12 = -3 (left: -3 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 13 12"
                }
            },
            "Step 3": {
                "Step": "4 + 9 = 13 (left: 4 13 12) -> 13 / 4 = 3.25 (left: 3.25 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 9 = 13 (left: 4 13 12) -> 13 / 4 = 3.25 (left: 3.25 12) -> 12 - 3.25 = 8.75 (left: 8.75)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "1 12"
                }
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 8 9 12) -> 9 - 8 = 1 (left: 1 12) -> 12 / 1 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 4 = 8 (left: 8 9 12) -> 9 - 8 = 1 (left: 1 12) -> 12 / 1 = 12 (left: 12) -> 12 * 2 = 24 (left: 24)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 36 4 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 9 12"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 4 5 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 4 5 12) -> 5 + 4 = 9 (left: 9 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 9 12"
                }
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 4 5 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 4 = 5 (left: 4 5 12) -> 12 / 4 = 3 (left: 3 5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "1 12"
                }
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 8 9 12) -> 9 - 8 = 1 (left: 1 12) -> 12 - 1 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 4 = 8 (left: 8 9 12) -> 9 - 8 = 1 (left: 1 12) -> 12 - 1 = 11 (left: 11) -> 11 + 2 = 13",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 36 4 12)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 9 12"
                }
            },
            "Step 1": {
                "Step": "4 - 4 = 0 (left: 0 9 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 - 4 = 0 (left: 0 9 12) -> 12 - 0 = 12 (left: 9 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "36 4 12"
                }
            },
            "Step 3": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 12 * 4 = 48 (left: 36 48)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 12 * 4 = 48 (left: 36 48) -> 36 + 48 = 84 (left: 84)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "1 12"
                }
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 8 9 12) -> 9 - 8 = 1 (left: 1 12) -> 12 - 1 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 4 = 8 (left: 8 9 12) -> 9 - 8 = 1 (left: 1 12) -> 12 - 1 = 11 (left: 11) -> There are no possible next steps with the input 11.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "9 - 4 = 5 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 9 12"
                }
            },
            "Step 1": {
                "Step": "9 + 4 = 13 (left: 4 13 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 4 = 13 (left: 4 13 12) -> 4 + 13 = 17 (left: 12 17)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "16 9 12"
                }
            },
            "Step 3": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 16 + 9 = 25 (left: 25 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 16 + 9 = 25 (left: 25 12) -> 25 * 12 = 300 (left: 300)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "1 12"
                }
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 8 9 12) -> 9 - 8 = 1 (left: 1 12) -> 1 * 12 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 4 = 8 (left: 8 9 12) -> 9 - 8 = 1 (left: 1 12) -> 1 * 12 = 12 (left: 12) -> 12 * 2 = 24 (left: 8 24)",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "12 - 4 = 8 (left: 4 9 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "16 9 12"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 16 - 9 = 7 (left: 7 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 16 - 9 = 7 (left: 7 12) -> 7 * 12 = 84 (left: 84)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "36 4 12"
                }
            },
            "Step 3": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 / 12 = 3 (left: 4 3)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 / 12 = 3 (left: 4 3) -> 4 + 3 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "1 12"
                }
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 8 9 12) -> 9 - 8 = 1 (left: 1 12) -> 12 - 1 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 4 = 8 (left: 8 9 12) -> 9 - 8 = 1 (left: 1 12) -> 12 - 1 = 11 (left: 11) -> There are no possible next steps with the input of 11.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "4 + 4 = 8 (left: 8 9 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 9 12"
                }
            },
            "Step 1": {
                "Step": "12 - 4 = 8 (left: 4 9 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 4 = 8 (left: 4 9 8) -> 9 - 4 = 5 (left: 5 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 9 12"
                }
            },
            "Step 3": {
                "Step": "4 * 4 = 16 (left: 16 9 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 9 + 12 = 21 (left: 16 21)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "1 12"
                }
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 8 9 12) -> 9 - 8 = 1 (left: 1 12) -> 12 - 1 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 4 = 8 (left: 8 9 12) -> 9 - 8 = 1 (left: 1 12) -> 12 - 1 = 11 (left: 11) -> 11 - 2 = 9 (left: 9 11)",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "12 - 4 = 8 (left: 4 9 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "16 9 12"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 16 / 9 = 1.7777777777777777 (left: 1.7777777777777777 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 16 / 9 = 1.7777777777777777 (left: 1.7777777777777777 12) -> 12 - 1.7777777777777777 = 10.222222222222223 (left: 10.222222222222223 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 9 12"
                }
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 8 9 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 8 9 12) -> 9 - 8 = 1 (left: 1 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "1 12"
                }
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 8 9 12) -> 9 - 8 = 1 (left: 1 12) -> 12 / 1 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 4 = 8 (left: 8 9 12) -> 9 - 8 = 1 (left: 1 12) -> 12 / 1 = 12 (left: 12) -> 12 + 8 = 20 (left: 8 20)",
                "Pruning": null
            }
        },
        "Input": "4 4 9 12",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "996": {
        "puzzle": "2 5 6 6",
        "Agent 0": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 4 6 6)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> Possible",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> Possible -> It seems like there was a mistake in the input provided. Can you please provide the correct input so that I can suggest possible next steps?",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 6"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 3 + 6 = 9 (left: 6 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 3 + 6 = 9 (left: 6 9) -> 6 * 9 = 54 (left: 54)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> There are no possible next steps with the input 18. -> There are no possible next steps with the input 18.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 - 5 = 1 (left: 1 6 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 + 6 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 + 6 = 7 (left: 7) -> 7 / 8 = 0.875 (left: 0.875)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 3": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 + 6 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 + 6 = 7 (left: 7) -> 7 / 2 = 3.5 (left: 3.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> 18 - 8 = 10 (left: 8)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "18"
                }
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> 18 - 8 = 10 (left: 10)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 / 2 = 3 (left: 3 6 6)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 6 / 1 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 6 / 1 = 6 (left: 6) -> 6 + 2 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 3": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 + 6 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 + 6 = 7 (left: 7) -> 7 + 8 = 15 (left: 8 15)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> 18 / 8 = 2.25 (left: 2.25 18)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> 18 / 8 = 2.25 (left: 2.25 18) -> Input: 0.5 7 3",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 - 6 = 0 (left: 2 6 ",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 6 - 1 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 6 - 1 = 5 (left: 5) -> 5 + 5 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> Possible next steps:",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> Possible next steps: -> There are no possible next steps with the input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> 18 - 2 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "18"
                }
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 6 11 6)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 6 - 1 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 6 - 1 = 5 (left: 5) -> There are no possible next steps with just the number 5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 3": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 * 6 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 * 6 = 6 (left: 6) -> 6 - 2 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> 18 / 2 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "18"
                }
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 6 11 6)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 6 - 1 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 6 - 1 = 5 (left: 5) -> 8 - 5 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 3": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 + 6 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 + 6 = 7 (left: 7) -> 7 + 8 = 15 (left: 8 15)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> 18 * 2 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "18"
                }
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> There are no possible next steps with the number 18.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 4 6 6)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 6"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 3": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 6 / 1 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 6 / 1 = 6 (left: 6) -> 6 + 8 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> 18 * 2 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "18"
                }
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> 18 / 2 = 9",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 4 6 6)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 6"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 / 3 = 2 (left: 2 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 / 3 = 2 (left: 2 6) -> 2 + 6 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 3": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 6 - 1 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 6 - 1 = 5 (left: 5) -> 8 - 5 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> There are no possible next steps with the input of 18.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> There are no possible next steps with the input of 18. -> There are no possible next steps with the input of 18.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "6 - 5 = 1 (left: 1 6 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6) -> 1.5 + 6 = 7.5 (left: 7.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 3": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 + 6 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 + 6 = 7 (left: 7) -> 7 / 8 = 0.875 (left: 0.875)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> There are no possible next steps with the input of 18.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> There are no possible next steps with the input of 18. -> 18 / 9 = 2 (left: 2)",
                "Pruning": "NA"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "6 * 2 = 12 (left: 6 6 ",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 6 / 1 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 6 / 1 = 6 (left: 6) -> 6 + 2 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 3": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 6 - 1 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 6 - 1 = 5 (left: 5) -> There is only one possible next step:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> There are no possible next steps with the input of 18.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> There are no possible next steps with the input of 18. -> There are no possible next steps with the input of 18.",
                "Pruning": null
            }
        },
        "Input": "2 5 6 6",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            }
        ]
    },
    "997": {
        "puzzle": "2 4 9 12",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 6 9 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "2 4 3"
                }
            },
            "Step 1": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 3 + 2 = 5 (left: 4 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 3 + 2 = 5 (left: 4 5) -> 5 / 4 = 1.25 (left: 1.25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 4 3"
                }
            },
            "Step 3": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 3 - 2 = 1 (left:",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 3 - 2 = 1 (left: -> 3 - 2 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "2.6666666666666665"
                }
            },
            "Step 5": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 4 = 8 (left: 3 8) -> 8 / 3 = 2.6666666666666665 (left: 2.6666666666666665) -> 2.6666666666666665 - 2 = 0.6666666666666665 (left: 0.6666666666666665)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "2.6666666666666665"
                }
            },
            "Step 6": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 4 = 8 (left: 3 8) -> 8 / 3 = 2.6666666666666665 (left: 2.6666666666666665) -> 2.6666666666666665 + 2 = 4.6666666666666665 (left: 2.6666666666666665 2)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 - 4 = 5 (left: 2 5 ",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 4 3"
                }
            },
            "Step 1": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 4 = 8 (left: 3 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 4 = 8 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 9 12"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 9 12) -> 9 / 6 = 1.5 (left: 1.5 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 9 12) -> 9 / 6 = 1.5 (left: 1.5 12) -> 12 / 1.5 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "2.6666666666666665"
                }
            },
            "Step 5": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 4 = 8 (left: 3 8) -> 8 / 3 = 2.6666666666666665 (left: 2.6666666666666665) -> 2.6666666666666665 - 2 = 0.6666666666666665",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 4 = 8 (left: 3 8) -> 8 / 3 = 2.6666666666666665 (left: 2.6666666666666665) -> 2.6666666666666665 - 2 = 0.6666666666666665 -> 2.6666666666666665 / 2 = 1.3333333333333333 (left: 1.3333333333333333)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 9 = 3 (left: 2 4 3)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 9 12"
                }
            },
            "Step 1": {
                "Step": "4 * 2 = 8 (left: 8 9 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 2 = 8 (left: 8 9 12) -> 12 - 8 = 4 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "2 4 3"
                }
            },
            "Step 3": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 3 + 2 = 5 (left: 4 5)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 3 + 2 = 5 (left: 4 5) -> 4 + 5 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "2.6666666666666665"
                }
            },
            "Step 5": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 4 = 8 (left: 3 8) -> 8 / 3 = 2.6666666666666665 (left: 2.6666666666666665) -> 2.6666666666666665 / 8 = 0.3333333333333333",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 4 = 8 (left: 3 8) -> 8 / 3 = 2.6666666666666665 (left: 2.6666666666666665) -> 2.6666666666666665 / 8 = 0.3333333333333333 -> None, since the result is already calculated as 0.3333333333333333.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 * 4 = 8 (left: 8 9 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 4 3"
                }
            },
            "Step 1": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 3 + 2 = 5 (left: 4 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 3 + 2 = 5 (left: 4 5) -> 4 - 5 = -1 (left: -1)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 4 3"
                }
            },
            "Step 3": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 4 / 2 = 2 (left: 2 3)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 4 / 2 = 2 (left: 2 3) -> 2 + 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "2.6666666666666665"
                }
            },
            "Step 5": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 4 = 8 (left: 3 8) -> 8 / 3 = 2.6666666666666665 (left: 2.6666666666666665) -> 2.6666666666666665 * 2 = 5.333333333333333 (left: 5.333333333333333)",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "5"
                }
            },
            "Step 6": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 4 - 2 = 2 (left: 2 3) -> 2 + 3 = 5 (left: 5) -> There is only one possible next step: 16 - 5 = 11 (left: 5)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 - 9 = 3 (left: 2 4 3)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 4 3"
                }
            },
            "Step 1": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 4 / 2 = 2 (left: 2 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 4 / 2 = 2 (left: 2 3) -> 2 + 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 4 3"
                }
            },
            "Step 3": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 4 - 2 = 2 (left: 2 3)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 4 - 2 = 2 (left: 2 3) -> Input: 5 10",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "2.6666666666666665"
                }
            },
            "Step 5": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 4 = 8 (left: 3 8) -> 8 / 3 = 2.6666666666666665 (left: 2.6666666666666665) -> 2.6666666666666665 + 2 = 4.666666666666666 (left: 4.666666666666666)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "2.6666666666666665"
                }
            },
            "Step 6": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 4 = 8 (left: 3 8) -> 8 / 3 = 2.6666666666666665 (left: 2.6666666666666665) -> 2.",
                "Pruning": "NA"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "9 - 4 = 5 (left: 2 5 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 4 3"
                }
            },
            "Step 1": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 3 = 6 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 3 = 6 (left: -> 6 / 2 = 3 (left: 3 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 5 "
                }
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 2 5  -> 2 + 5 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 4 = 5 (left: 2 5  -> 2 + 5 = 7 (left: 7) -> 7 + 8 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "2.6666666666666665"
                }
            },
            "Step 5": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 4 = 8 (left: 3 8) -> 8 / 3 = 2.6666666666666665 (left: 2.6666666666666665) -> There are no possible next steps as the input is already a single number.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 4 = 8 (left: 3 8) -> 8 / 3 = 2.6666666666666665 (left: 2.6666666666666665) -> There are no possible next steps as the input is already a single number. -> The input is already a single number.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 6 9 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 9 12"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 9 12) -> 6 * 9 = 54 (left: 54 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 9 12) -> 6 * 9 = 54 (left: 54 12) -> 54 + 12 = 66 (left: 66)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 4 3"
                }
            },
            "Step 3": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 4 = 8 (left: 3 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 4 = 8 (left: 3 8) -> 8 / 3 = 2.6666666666666665 (left: 2.6666666666666665)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "2.6666666666666665"
                }
            },
            "Step 5": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 4 = 8 (left: 3 8) -> 8 / 3 = 2.6666666666666665 (left: 2.6666666666666665) -> 2.6666666666666665 / 2 = 1.3333333333333332",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 4 = 8 (left: 3 8) -> 8 / 3 = 2.6666666666666665 (left: 2.6666666666666665) -> 2.6666666666666665 / 2 = 1.3333333333333332 -> There are no possible next steps as the result is already simplified.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "12 - 4 = 8 (left: 2 8 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 4 3"
                }
            },
            "Step 1": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 + 4 = 6 (left: 3 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 + 4 = 6 (left: 3 6) -> 3 + 6 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 4 3"
                }
            },
            "Step 3": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 3 + 2 = 5 (left: 4 5)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 3 + 2 = 5 (left: 4 5) -> 10 + 3 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "2.6666666666666665"
                }
            },
            "Step 5": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 4 = 8 (left: 3 8) -> 8 / 3 = 2.6666666666666665 (left: 2.6666666666666665) -> 2.6666666666666665 + 2 = 4.666666666666666 (left: 4.666666666666666)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "2.6666666666666665"
                }
            },
            "Step 6": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 4 = 8 (left: 3 8) -> 8 / 3 = 2.6666666666666665 (left: 2.6666666666666665) -> 2.6666666666666665 / 2 = 1.3333333333333333 (left: 1.3333333333333333)",
                "Pruning": "NA"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "12 - 9 = 3 (left: 2 4 3)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 4 3"
                }
            },
            "Step 1": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 4 - 2 = 2 (left: 2 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 4 - 2 = 2 (left: 2 3) -> 2 + 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 5 "
                }
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 2 5  -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 4 = 5 (left: 2 5  -> 5 / 2 = 2.5 (left: 2.5) -> There are no possible next steps with the input 2.5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "2.6666666666666665"
                }
            },
            "Step 5": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 4 = 8 (left: 3 8) -> 8 / 3 = 2.6666666666666665 (left: 2.6666666666666665) -> 2.6666666666666665 * 2 = 5.333333333333333 (left: 5.333333333333333)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "2.6666666666666665"
                }
            },
            "Step 6": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 4 = 8 (left: 3 8) -> 8 / 3 = 2.6666666666666665 (left: 2.6666666666666665) -> 2.6666666666666665 + 2 = 4.666666666666667",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "12 - 9 = 3 (left: 2 4 3)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "2 4 3"
                }
            },
            "Step 1": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 4 - 2 = 2 (left: 2 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 4 - 2 = 2 (left: 2 3) -> 2 + 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 4 3"
                }
            },
            "Step 3": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 4 = 8 (left: 3 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 4 = 8 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "2.6666666666666665"
                }
            },
            "Step 5": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 4 = 8 (left: 3 8) -> 8 / 3 = 2.6666666666666665 (left: 2.6666666666666665) -> There are no possible next steps as the input is already a single number.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 4 = 8 (left: 3 8) -> 8 / 3 = 2.6666666666666665 (left: 2.6666666666666665) -> There are no possible next steps as the input is already a single number. -> The input is already a single number.",
                "Pruning": null
            }
        },
        "Input": "2 4 9 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "998": {
        "puzzle": "4 8 11 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 8 = 5 (left: 4 11 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "8 13 15"
                }
            },
            "Step 1": {
                "Step": "11 + 4 = 15 (left: 8 13 15) -> 8 / 13 = 0.6153846153846154 (left: 0.6153846153846154 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 + 4 = 15 (left: 8 13 15) -> 8 / 13 = 0.6153846153846154 (left: 0.6153846153846154 15) -> 15 / 0.6153846153846154 = 24.4 (left: 24.4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23) -> 13 + 23 = 36 (left: 36) -> There are no possible next steps with the input of 36.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23) -> 13 + 23 = 36 (left: 36) -> There are no possible next steps with the input of 36. -> Input: 36 divided by 2 =",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23) -> 13 + 23 = 36 (left: 36) -> No possible next steps as there is only one number.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23) -> 13 + 23 = 36 (left: 36) -> No possible next steps as there is only one number. -> There are no possible next steps as there is only one number.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 11 = 2 (left: 2 8 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23) -> 13 + 23 = 36 (left: 36) -> 36/2 = 18",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23) -> 13 + 23 = 36 (left: 36) -> 36/2 = 18 -> 18 - 2 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "36"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "2 12 2"
                }
            },
            "Step 5": {
                "Step": "13 - 11 = 2 (left: 4 8 2) -> 4 + 8 = 12 (left: 2 12 2) -> 12 + 2 = 14 (left: 14 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 11 = 2 (left: 4 8 2) -> 4 + 8 = 12 (left: 2 12 2) -> 12 + 2 = 14 (left: 14 2) -> 14 * 2 = 28 (left: 28)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "Input: 36 divided by 2 ="
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "8 / 4 = 2 (left: 2 11 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 8 11 13"
                }
            },
            "Step 1": {
                "Step": "11 - 4 = 7 (left: 7 8 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 4 = 7 (left: 7 8 13) -> 13 - 7 = 6 (left: 7 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23) -> 13 + 23 = 36 (left: 36) -> 36 + 2 = 38",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23) -> 13 + 23 = 36 (left: 36) -> 36 + 2 = 38 -> 2 * 36 = 72 (left: 72)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "36"
                },
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23) -> 13 + 23 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23) -> 13 + 23 = 36 (left: 36) -> 36 / 2 = 18 -> 36 - 2 = 34 (left: 34)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "19 38"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "8 - 4 = 4 (left: 4 11 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 8 11 13"
                }
            },
            "Step 1": {
                "Step": "4 + 8 = 12 (left: 11 12 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 11 - 13 = -2 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23) -> 13 + 23 = 36 (left: 36) -> 36 + 2 = 38",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23) -> 13 + 23 = 36 (left: 36) -> 36 + 2 = 38 -> 38 / 2 = 19 (left: 19 38)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23) -> 13 + 23 = 36 (left: 36) -> No possible next steps as there is only one number given.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23) -> 13 + 23 = 36 (left: 36) -> No possible next steps as there is only one number given. -> No possible next steps as there is only one number given.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "8 - 4 = 4 (left: 4 11 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23) -> 13 + 23 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 8 11 13"
                }
            },
            "Step 3": {
                "Step": "4 + 8 = 12 (left: 11 12 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 13 / 12 = 1.083333333333333",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23) -> 13 + 23 = 36 (left: 36) -> No possible next steps as there is only one number.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23) -> 13 + 23 = 36 (left: 36) -> No possible next steps as there is only one number. -> There are no possible next steps as there is only one number.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "4 + 8 = 12 (left: 11 12 13)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 13 - 1 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 8 11 13"
                }
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 8 11 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left: 8 11  -> 8 / 11 = 0.7272727272727273 (left: 0.7272727272727273)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23) -> 13 + 23 = 36 (left: 36) -> 36 is a single number, so there are no possible next steps.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23) -> 13 + 23 = 36 (left: 36) -> 36 is a single number, so there are no possible next steps. -> No possible next steps as 36 is a single number.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "11 + 4 = 15 (left: 8 13 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 12 + 13 = 25 (left: 11 25)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 12 + 13 = 25 (left: 11 25) -> Input: 3 9 27",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 3": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23) -> 13 + 23 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23) -> 13 + 23 = 36 (left: 36) -> None, as there is only one number given.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23) -> 13 + 23 = 36 (left: 36) -> None, as there is only one number given. -> No possible next steps as there is only one number given.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "8 / 4 = 2 (left: 2 11 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 11 / 12 = 0.9166666666666666 (left: 0.916666666666666",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 11 / 12 = 0.9166666666666666 (left: 0.916666666666666 -> 0.916666666666666 + 2 = 2.916666666666666 (left: 2.916666666666666)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 3": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23) -> 13 - 23 = -10 (left: -10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23) -> 13 + 23 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23) -> 13 + 23 = 36 (left: 36) -> 36 / 2 = 18 -> 36 * 2 = 72 (left: 72)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "19 38"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "8 - 4 = 4 (left: 4 11 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 13 * 1 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 8 11 13"
                }
            },
            "Step 3": {
                "Step": "13 - 11 = 2 (left: 4 2 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 11 = 2 (left: 4 2  -> 4 - 2 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23) -> 13 + 23 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23) -> 13 + 23 = 36 (left: 36) -> 36 / 2 = 18 -> Input: 10 * 5 = 50",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 7 8 ",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 12 / 11 = 1.0909 (left: 1.0909 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 12 / 11 = 1.0909 (left: 1.0909 13) -> 13 / 1.0909 = 11.9091 (left: 11.9091)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 8 11 13"
                }
            },
            "Step 3": {
                "Step": "13 - 11 = 2 (left: 4 8 2)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 11 = 2 (left: 4 8 2) -> 4 + 8 = 12 (left: 2 12 2)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "2 12 2"
                }
            },
            "Step 5": {
                "Step": "13 - 11 = 2 (left: 4 8 2) -> 4 + 8 = 12 (left: 2 12 2) -> 2 + 12 = 14 (left: 14 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 11 = 2 (left: 4 8 2) -> 4 + 8 = 12 (left: 2 12 2) -> 2 + 12 = 14 (left: 14 2) -> 14 / 2 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "19 38"
                }
            }
        },
        "Input": "4 8 11 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "999": {
        "puzzle": "4 9 10 13",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 9 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9 3"
                }
            },
            "Step 1": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 4 + 9 = 13 (left: 3 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 4 + 9 = 13 (left: 3 13) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 10 13"
                }
            },
            "Step 3": {
                "Step": "13 - 10 = 3 (left: 3 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 10 = 3 (left: 3 13) -> 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "9 15"
                }
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 6 9 13) -> 6 / 9 = 0.67 ( -> 6 + 9 = 15 (left: 9 15) -> 9 * 15 = 135 (left: 135)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "9 15"
                }
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 6 9 13) -> 6 / 9 = 0.67 ( -> 6 + 9 = 15 (left: 9 15) -> 9 + 15 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "There are no possible next steps with just the number 19."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 10 13 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 10 13"
                }
            },
            "Step 1": {
                "Step": "9 + 4 = 13 (left: 10 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 4 = 13 (left: 10 13) -> 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "6 13"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 4 10 13) -> 10 - 4 = 6 (left: 6 13) -> 6 + 13 = 19 (left: 19)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 4 10 13) -> 10 - 4 = 6 (left: 6 13) -> 6 + 13 = 19 (left: 19) -> There are no possible next steps with just the number 19.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "9 15"
                }
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 6 9 13) -> 6 / 9 = 0.67 ( -> 6 + 9 = 15 (left: 9 15) -> 9 - 15 = -6 (left: -6)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "9 15"
                }
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 6 9 13) -> 6 / 9 = 0.67 ( -> 6 + 9 = 15 (left: 9 15) -> 9 * 15 = 135 (left: 135)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "There are no possible next steps with just the number 19."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 10 13"
                }
            },
            "Step 1": {
                "Step": "9 + 4 = 13 (left: 10 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 4 = 13 (left: 10 13) -> 13 - 10 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "6 9 13"
                }
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 6 9 13) -> 9 / 6 = 1.5 (left: 1.5 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 6 9 13) -> 9 / 6 = 1.5 (left: 1.5 13) -> 1.5 * 13 = 19.5 (left: 19.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "9 15"
                }
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 6 9 13) -> 6 / 9 = 0.67 ( -> 6 + 9 = 15 (left: 9 15) -> 15 / 9 = 1.6666666666666667 (left: 1.6666666666666667)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "9 15"
                }
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 6 9 13) -> 6 / 9 = 0.67 ( -> 6 + 9 = 15 (left: 9 15) -> 15 / 9 = 1.66666666667 (left: 1.66666666667)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "There are no possible next steps with just the number 19."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 4 = 5 (left: 5 10 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 9 13"
                }
            },
            "Step 1": {
                "Step": "10 - 4 = 6 (left: 6 9 13) -> 6 / 9 = 0.67 (",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 6 9 13) -> 6 / 9 = 0.67 ( -> 6 + 9 = 15 (left: 9 15)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "5 10 13"
                }
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> 13 - 5 = 8 (left: 8 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> 13 - 5 = 8 (left: 8 10) -> 8 * 10 = 80 (left: 80)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "9 15"
                }
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 6 9 13) -> 6 / 9 = 0.67 ( -> 6 + 9 = 15 (left: 9 15) -> 15 - 9 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "9 15"
                }
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 6 9 13) -> 6 / 9 = 0.67 ( -> 6 + 9 = 15 (left: 9 15) -> 15 / 9 = 1.67 (left: 1.67)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "There are no possible next steps with just the number 19."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "9 / 4 = 2.25 (left: 2.25 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 10 13"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 4 10 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 4 10 13) -> 10 - 4 = 6 (left: 6 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 9 3"
                }
            },
            "Step 3": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 4 + 9 = 13 (left: 3 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 4 + 9 = 13 (left: 3 13) -> 3 * 13 = 39 (left: 39)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "9 15"
                }
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 6 9 13) -> 6 / 9 = 0.67 ( -> 6 + 9 = 15 (left: 9 15) -> 9 * 15 = 135 (left: 135)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "9 15"
                }
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 6 9 13) -> 6 / 9 = 0.67 ( -> 6 + 9 = 15 (left: 9 15) -> 15 + 9 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "There are no possible next steps with just the number 19."
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "9 / 4 = 2.25 (left: 2.25 10 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 10 13"
                }
            },
            "Step 1": {
                "Step": "9 + 4 = 13 (left: 10 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 4 = 13 (left: 10 13) -> 10 + 13 = 23 (left: 23)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9 3"
                }
            },
            "Step 3": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 4 * 9 = 36 (left: 36 3)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 4 * 9 = 36 (left: 36 3) -> 36 / 3 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "9 15"
                }
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 6 9 13) -> 6 / 9 = 0.67 ( -> 6 + 9 = 15 (left: 9 15) -> 15 / 9 = 1.6666666666666667 (left: 1.6666666666666667)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "9 15"
                }
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 6 9 13) -> 6 / 9 = 0.67 ( -> 6 + 9 = 15 (left: 9 15) -> 15 / 9 = 1.67 (left: 1.67 15)",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "4 + 9 = 13 (left: 10 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 10 13"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 5 10 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> 13 - 10 = 3 (left:",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "9 15"
                }
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 6 9 13) -> 6 / 9 = 0.67 ( -> 6 + 9 = 15 (left: 9 15) -> 15 - 9 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "9 15"
                }
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 6 9 13) -> 6 / 9 = 0.67 ( -> 6 + 9 = 15 (left: 9 15) -> 15 / 9 = 1.67 (left: 1.67)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "9 15"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "9 15"
                }
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 6 9 13) -> 6 / 9 = 0.67 ( -> 6 + 9 = 15 (left: 9 15) -> 9 - 15 = -6 (left: -6)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "9 15"
                }
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 6 9 13) -> 6 / 9 = 0.67 ( -> 6 + 9 = 15 (left: 9 15) -> 9 * 15 = 135 (left: 135)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "There are no possible next steps with just the number 19."
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "13 - 10 = 3 (left: 4 9 3)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 10 13"
                }
            },
            "Step 1": {
                "Step": "4 + 9 = 13 (left: 10 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 9 = 13 (left: 10 13) -> 10 * 13 = 130 (left: 130)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "5 10 13"
                }
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> 13 + 5 = 18 (left: 10 18)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> 13 + 5 = 18 (left: 10 18) -> 10 * 18 = 180 (left: 180)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "9 15"
                }
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 6 9 13) -> 6 / 9 = 0.67 ( -> 6 + 9 = 15 (left: 9 15) -> 9 * 15 = 135 (left: 135)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "9 15"
                }
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 6 9 13) -> 6 / 9 = 0.67 ( -> 6 + 9 = 15 (left: 9 15) -> 15 / 9 = 1.6666666666666667 (left: 1.6666666666666667)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "There are no possible next steps with just the number 19."
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "13 - 10 = 3 (left: 4 9 3)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 9 13"
                }
            },
            "Step 1": {
                "Step": "10 - 4 = 6 (left: 6 9 13) -> 9 + 13 = 22 (left: 6 22)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 6 9 13) -> 9 + 13 = 22 (left: 6 22) -> 22 / 6 = 3.6666666666666665 (left: 3.6666666666666665)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "9 15"
                }
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 6 9 13) -> 6 / 9 = 0.67 ( -> 6 + 9 = 15 (left: 9 15) -> 9 - 15 = -6 (left: -6)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "4 9 3"
                }
            },
            "Step 4": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 9 / 3 = 3 (left: 4 3)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "9 15"
                }
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 6 9 13) -> 6 / 9 = 0.67 ( -> 6 + 9 = 15 (left: 9 15) -> 15 - 9 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "9 15"
                }
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 6 9 13) -> 6 / 9 = 0.67 ( -> 6 + 9 = 15 (left: 9 15) -> 9 + 15 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "There are no possible next steps with just the number 19."
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 9 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 9 3"
                }
            },
            "Step 1": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 9 - 4 = 5 (left: 5 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 9 - 4 = 5 (left: 5 3) -> 5 - 3 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "6 9 13"
                }
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 6 9 13) -> 6 * 9 = 54 (left: 13 54)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 6 9 13) -> 6 * 9 = 54 (left: 13 54) -> 13 * 54 = 702 (left: 702)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "9 15"
                }
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 6 9 13) -> 6 / 9 = 0.67 ( -> 6 + 9 = 15 (left: 9 15) -> 15 / 9 = 1.6667 (left: 1.6667)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "9 15"
                }
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 6 9 13) -> 6 / 9 = 0.67 ( -> 6 + 9 = 15 (left: 9 15) -> 9 * 15 = 135 (left: 135)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "There are no possible next steps with just the number 19."
                }
            }
        },
        "Input": "4 9 10 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "Cost": {
        "input_tokens": 1458229,
        "output_tokens": 696733.8436507902,
        "total_cost": 1.7742152654761854
    }
}