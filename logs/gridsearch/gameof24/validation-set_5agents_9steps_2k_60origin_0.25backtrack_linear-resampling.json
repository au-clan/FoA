{
    "875": {
        "puzzle": "5 6 9 12",
        "Agent 0": {
            "Step 0": {
                "Step": "6 - 5 = 1 (left: 1 9 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 9 12"
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 6 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 9 12"
                }
            },
            "Step 3": {
                "Step": "6 - 5 = 1 (left: 1 9 12) -> 1 + 9 = 10 (left: 10 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 - 5 = 1 (left: 1 9 12) -> 1 + 9 = 10 (left: 10 12) -> 10 * 12 = 120 (left: 120) ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1 9"
                }
            },
            "Step 5": {
                "Step": "6 - 5 = 1 (left: 1 9 12) -> 12 - 9 = 3 (left: 1 3 12) -> 12 - 3 = 9 (left: 1 9) -> 1 * 9 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "1 9"
                }
            },
            "Step 6": {
                "Step": "6 - 5 = 1 (left: 1 9 12) -> 12 - 9 = 3 (left: 1 3 12) -> 12 - 3 = 9 (left: 1 9) -> 9 / 1 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "1 9"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "1 9"
                }
            },
            "Step 7": {
                "Step": "6 - 5 = 1 (left: 1 9 12) -> 12 - 9 = 3 (left: 1 3 12) -> 12 - 3 = 9 (left: 1 9) -> 1 * 9 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "1 9"
                }
            },
            "Step 8": {
                "Step": "6 - 5 = 1 (left: 1 9 12) -> 12 - 9 = 3 (left: 1 3 12) -> 12 - 3 = 9 (left: 1 9) -> 9 - 1 = 8 (left: 8)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 9 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 9 12"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 3 3 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 3 3 12) -> 12 - 3 = 9 (left: 3 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 9 12"
                }
            },
            "Step 3": {
                "Step": "6 - 5 = 1 (left: 1 9 12) -> 12 - 9 = 3 (left: 1 3 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 - 5 = 1 (left: 1 9 12) -> 12 - 9 = 3 (left: 1 3 12) -> 12 - 3 = 9 (left: 1 9)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1 9"
                }
            },
            "Step 5": {
                "Step": "6 - 5 = 1 (left: 1 9 12) -> 12 - 9 = 3 (left: 1 3 12) -> 12 - 3 = 9 (left: 1 9) -> 1 + 9 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "1 9"
                }
            },
            "Step 6": {
                "Step": "6 - 5 = 1 (left: 1 9 12) -> 12 - 9 = 3 (left: 1 3 12) -> 12 - 3 = 9 (left: 1 9) -> 9 / 1 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "3 12"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "1 9"
                }
            },
            "Step 7": {
                "Step": "6 - 5 = 1 (left: 1 9 12) -> 12 - 9 = 3 (left: 1 3 12) -> 12 - 3 = 9 (left: 1 9) -> 9 - 1 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "1 9"
                }
            },
            "Step 8": {
                "Step": "6 - 5 = 1 (left: 1 9 12) -> 12 - 9 = 3 (left: 1 3 12) -> 12 - 3 = 9 (left: 1 9) -> 9 / 1 = 9 (left: 9)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 9 = 3 (left: 3 6 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 12"
                }
            },
            "Step 1": {
                "Step": "12 - 9 = 3 (left: 3 6 12) -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 9 = 3 (left: 3 6 12) -> 12 / 3 = 4 (left: 4 12) -> 4 + 12 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 9 12"
                }
            },
            "Step 3": {
                "Step": "5 * 6 = 30 (left: 9 30 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 6 = 30 (left: 9 30 12) -> 30 / 9 = 3 (left: 3 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3 12"
                }
            },
            "Step 5": {
                "Step": "5 * 6 = 30 (left: 9 30 12) -> 30 / 9 = 3 (left: 3 12) -> 12 / 3 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 6 = 30 (left: 9 30 12) -> 30 / 9 = 3 (left: 3 12) -> 12 / 3 = 4 (left: 4) -> 4 / 2 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "3 12"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "1 9"
                }
            },
            "Step 7": {
                "Step": "6 - 5 = 1 (left: 1 9 12) -> 12 - 9 = 3 (left: 1 3 12) -> 12 - 3 = 9 (left: 1 9) -> 1 * 9 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "1 9"
                }
            },
            "Step 8": {
                "Step": "6 - 5 = 1 (left: 1 9 12) -> 12 - 9 = 3 (left: 1 3 12) -> 12 - 3 = 9 (left: 1 9) -> 9 / 1 = 9 (left: 9)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "12 + 5 = 17 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 9 12"
                }
            },
            "Step 1": {
                "Step": "12 - 9 = 3 (left: 5 3 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 9 = 3 (left: 5 3 12) -> 5 * 3 = 15 (left: 15 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 9 12"
                }
            },
            "Step 3": {
                "Step": "6 - 5 = 1 (left: 1 9 12) -> 1 * 9 = 9 (left: 9 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 - 5 = 1 (left: 1 9 12) -> 1 * 9 = 9 (left: 9 12) -> 12 / 9 = 1.33 (left: 1.33)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1 9"
                }
            },
            "Step 5": {
                "Step": "6 - 5 = 1 (left: 1 9 12) -> 12 - 9 = 3 (left: 1 3 12) -> 12 - 3 = 9 (left: 1 9) -> 1 + 9 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "1 9"
                }
            },
            "Step 6": {
                "Step": "6 - 5 = 1 (left: 1 9 12) -> 12 - 9 = 3 (left: 1 3 12) -> 12 - 3 = 9 (left: 1 9) -> 1 + 9 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "1 9"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "1 9"
                }
            },
            "Step 7": {
                "Step": "6 - 5 = 1 (left: 1 9 12) -> 12 - 9 = 3 (left: 1 3 12) -> 12 - 3 = 9 (left: 1 9) -> 1 + 9 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "1 9"
                }
            },
            "Step 8": {
                "Step": "6 - 5 = 1 (left: 1 9 12) -> 12 - 9 = 3 (left: 1 3 12) -> 12 - 3 = 9 (left: 1 9) -> 9 - 1 = 8 (left: 8)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 9 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 9 12"
                }
            },
            "Step 1": {
                "Step": "9 + 6 = 15 (left: 5 15 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 6 = 15 (left: 5 15 12) -> 15 - 5 = 10 (left: 10 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 9 12"
                }
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 9 11 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 9 11 12) -> 11 * 9 = 99 (left: 12 99)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3 12"
                }
            },
            "Step 5": {
                "Step": "5 * 6 = 30 (left: 9 30 12) -> 30 / 9 = 3 (left: 3 12) -> 12 - 3 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 6 = 30 (left: 9 30 12) -> 30 / 9 = 3 (left: 3 12) -> 12 - 3 = 9 (left: 9) -> 9 * 1 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "1 9"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "1 9"
                }
            },
            "Step 7": {
                "Step": "6 - 5 = 1 (left: 1 9 12) -> 12 - 9 = 3 (left: 1 3 12) -> 12 - 3 = 9 (left: 1 9) -> 9 / 1 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "1 9"
                }
            },
            "Step 8": {
                "Step": "6 - 5 = 1 (left: 1 9 12) -> 12 - 9 = 3 (left: 1 3 12) -> 12 - 3 = 9 (left: 1 9) -> 1 + 9 = 10 (left: 10)",
                "Pruning": "NA"
            }
        },
        "Input": "5 6 9 12",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "876": {
        "puzzle": "6 9 10 11",
        "Agent 0": {
            "Step 0": {
                "Step": "9 + 10 = 19 (left: 6 11 19)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 1": {
                "Step": "6 * 9 = 54 (left: 10 11 54)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 11 * 10 = 110 (left: 110 54)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 3": {
                "Step": "10 + 11 = 21 (left: 6 9 21)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 21 / 9 = 3 (left: 6 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 5": {
                "Step": "6 + 9 = 15 (left: 10 11 15)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 11 * 15 = 165 (left: 10 165)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "10 165"
                }
            },
            "Step 7": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 11 * 15 = 165 (left: 10 165) -> 165 - 10 = 155 (left: 10 155)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 11 * 15 = 165 (left: 10 165) -> 165 - 10 = 155 (left: 10 155) -> 155 - 10 = 145 (left: 145)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "No possible next steps as there are no numbers in the input."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 10 11 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 1": {
                "Step": "10 + 11 = 21 (left: 6 9 21)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 6 * 9 = 54 (left: 54 21)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 11 19"
                }
            },
            "Step 3": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 6 + 11 = 17 (left: 17 19)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 6 + 11 = 17 (left: 17 19) -> 17 - 19 = -2 (left: -2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 5": {
                "Step": "6 * 9 = 54 (left: 10 11 54)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> Input: 4 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "10 165"
                }
            },
            "Step 7": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 11 * 15 = 165 (left: 10 165) -> 10 + 165 = 175 (left: 175)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 11 * 15 = 165 (left: 10 165) -> 10 + 165 = 175 (left: 175) -> 75 - 1 = 74 (left: 74)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "No possible next steps as there are no numbers in the input."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 * 9 = 54 (left: 10 11 54)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 9 11 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 10 = 16 (left: 9 11 16) -> 16 - 9 = 7 (left: 7 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 9 21"
                }
            },
            "Step 3": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 9 + 21 = 30 (left: 6 30)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 9 + 21 = 30 (left: 6 30) -> 3 * 9 = 27 (left: ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "Possible next steps:"
                }
            },
            "Step 5": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> Possible next steps: -> There are no possible next steps as the input does not contain any numbers.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> Possible next steps: -> There are no possible next steps as the input does not contain any numbers. -> No possible next steps as there are no numbers in the input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "10 165"
                }
            },
            "Step 7": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 11 * 15 = 165 (left: 10 165) -> 10 - 165 = -155 (left: -155)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 11 * 15 = 165 (left: 10 165) -> 10 - 165 = -155 (left: -155) -> -155 + 2 = -153",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 + 11 = 21 (left: 6 9 21)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 1": {
                "Step": "6 + 9 = 15 (left: 10 11 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> Input: 3 6 9 12",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 3": {
                "Step": "6 * 9 = 54 (left: 10 11 54)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 10 + 11 = 21 (left: 21 54)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "7 16"
                }
            },
            "Step 5": {
                "Step": "6 + 10 = 16 (left: 9 11 16) -> 16 - 9 = 7 (left: 7 16) -> 7 + 16 = 23 (left: 23)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 10 = 16 (left: 9 11 16) -> 16 - 9 = 7 (left: 7 16) -> 7 + 16 = 23 (left: 23) -> There are no possible next steps with the input 23.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "10 165"
                }
            },
            "Step 7": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 11 * 15 = 165 (left: 10 165) -> 10 - 165 = -155 (left: -155)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 11 * 15 = 165 (left: 10 165) -> 10 - 165 = -155 (left: -155) -> -155 / 2 = -77.5",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "10 + 11 = 21 (left: 6 9 21)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 1": {
                "Step": "6 * 9 = 54 (left: 10 11 54)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 10 + 11 = 21 (left: 21 54)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 3": {
                "Step": "6 * 9 = 54 (left: 10 11 54)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 9 21"
                }
            },
            "Step 5": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 6 + 9 = 15 (left: 15 21)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 6 + 9 = 15 (left: 15 21) -> 15 - 21 = -6 (left: -6)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "10 165"
                }
            },
            "Step 7": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 11 * 15 = 165 (left: 10 165) -> 165 - 10 = 155 (left: 155 165)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 11 * 15 = 165 (left: 10 165) -> 165 - 10 = 155 (left: 155 165) -> 155 * 165 = 25575 (left: 25575)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "No possible next steps as there are no numbers in the input."
                }
            }
        },
        "Input": "6 9 10 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "877": {
        "puzzle": "2 4 5 11",
        "Agent 0": {
            "Step 0": {
                "Step": "5 + 11 = 16 (left: 2 4 16)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 5 11"
                }
            },
            "Step 1": {
                "Step": "2 * 4 = 8 (left: 5 8 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 11 - 5 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 4 16"
                }
            },
            "Step 3": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 2 + 4 = 6 (left: 6 16)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 2 + 4 = 6 (left: 6 16) -> 6 + 16 = 22 (left: 22)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "8 32"
                }
            },
            "Step 5": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 16 / 2 = 8 (left: 4 8) -> 4 * 8 = 32 (left: 8 32) -> 4 * 2.5 = 10 (left: 10 20)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 16 / 2 = 8 (left: 4 8) -> 4 * 8 = 32 (left: 8 32) -> 4 * 2.5 = 10 (left: 10 20) -> 10 * 20 = 200 (left: 200)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "22"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "22 + 2 = 24"
                }
            },
            "Step 7": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 2 + 4 = 6 (left: 6 16) -> 6 + 16 = 22 (left: 22) -> 22 + 2 = 24 -> 2 * 2 = 4 (left: 4 22 24)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 2 + 4 = 6 (left: 6 16) -> 6 + 16 = 22 (left: 22) -> 22 + 2 = 24 -> 2 * 2 = 4 (left: 4 22 24) -> 4 * 22 = 88 (left: 88 24)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 * 4 = 8 (left: 5 8 11)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "5 6 11"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 5 6 11) -> 5 + 6 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 5 6 11) -> 5 + 6 = 11 (left: 11) -> There are no possible next steps with the input 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "5 6 11"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 5 6 11) -> 5 + 6 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 5 6 11) -> 5 + 6 = 11 (left: 11) -> 11 * 2 = 22",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "22"
                }
            },
            "Step 5": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 2 + 4 = 6 (left: 6 16) -> 6 + 16 = 22 (left: 22) -> 22 + 8 = 30 (left: 8)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "22"
                }
            },
            "Step 6": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 2 + 4 = 6 (left: 6 16) -> 6 + 16 = 22 (left: 22) -> There are no possible next steps with the input 22.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "22 + 2 = 24"
                }
            },
            "Step 7": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 2 + 4 = 6 (left: 6 16) -> 6 + 16 = 22 (left: 22) -> 22 + 2 = 24 -> 24 - 2 = 22 (left: 22 2 22)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 2 + 4 = 6 (left: 6 16) -> 6 + 16 = 22 (left: 22) -> 22 + 2 = 24 -> 24 - 2 = 22 (left: 22 2 22) -> 22 * 2 = 44 (left: 44 22)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 5 = 9 (left: 2 9 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 4 16"
                }
            },
            "Step 1": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 4 * 2 = 8 (left: 8 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 4 * 2 = 8 (left: 8 16) -> 8 * 2 = 16 (left: 16 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 5 11"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 5 6 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 5 6 11) -> 5 + 6 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "22"
                }
            },
            "Step 5": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 2 + 4 = 6 (left: 6 16) -> 6 + 16 = 22 (left: 22) -> 22 + 8 = 30 (left: 8)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "8 32"
                }
            },
            "Step 6": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 16 / 2 = 8 (left: 4 8) -> 4 * 8 = 32 (left: 8 32) -> 32 / 8 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "8 32"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "22 + 2 = 24"
                }
            },
            "Step 7": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 2 + 4 = 6 (left: 6 16) -> 6 + 16 = 22 (left: 22) -> 22 + 2 = 24 -> 22 - 2 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "8 32"
                }
            },
            "Step 8": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 16 / 2 = 8 (left: 4 8) -> 4 * 8 = 32 (left: 8 32) -> Possible next steps:",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 * 4 = 8 (left: 5 8 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "5 8 11"
                }
            },
            "Step 1": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 11 - 8 = 3 (left: 5 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 11 - 8 = 3 (left: 5 3) -> 5 - 3 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 5 11"
                }
            },
            "Step 3": {
                "Step": "5 * 11 = 55 (left: 2 4 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 11 = 55 (left: 2 4  -> 4 - 2 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "22"
                }
            },
            "Step 5": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 2 + 4 = 6 (left: 6 16) -> 6 + 16 = 22 (left: 22) -> 22 + 2 = 24 (left: 2 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 2 + 4 = 6 (left: 6 16) -> 6 + 16 = 22 (left: 22) -> 22 + 2 = 24 (left: 2 24) -> 24 / 2 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "8 32"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "22 + 2 = 24"
                }
            },
            "Step 7": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 2 + 4 = 6 (left: 6 16) -> 6 + 16 = 22 (left: 22) -> 22 + 2 = 24 -> 22 - 2 = 20 (left: 20 30)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 2 + 4 = 6 (left: 6 16) -> 6 + 16 = 22 (left: 22) -> 22 + 2 = 24 -> 22 - 2 = 20 (left: 20 30) -> 20 / 30 = 0.6667 (left: 0.6667)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "22 + 2 = 24"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 5 6 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 5 11"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 5 6 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 5 6 11) -> Input: 3 7 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 4 16"
                }
            },
            "Step 3": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 16 / 2 = 8 (left: 4 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 16 / 2 = 8 (left: 4 8) -> 4 * 8 = 32 (left: 8 32)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "8 32"
                }
            },
            "Step 5": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 16 / 2 = 8 (left: 4 8) -> 4 * 8 = 32 (left: 8 32) -> 8 * 4 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "22"
                }
            },
            "Step 6": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 2 + 4 = 6 (left: 6 16) -> 6 + 16 = 22 (left: 22) -> 22 + 2 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "22 + 2 = 24"
                }
            },
            "Step 7": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 2 + 4 = 6 (left: 6 16) -> 6 + 16 = 22 (left: 22) -> 22 + 2 = 24 -> 2 * 2 = 4 (left: 22 4 24)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 2 + 4 = 6 (left: 6 16) -> 6 + 16 = 22 (left: 22) -> 22 + 2 = 24 -> 2 * 2 = 4 (left: 22 4 24) -> 22 * 4 = 88 (left: 88 24)",
                "Pruning": null
            }
        },
        "Input": "2 4 5 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "878": {
        "puzzle": "1 2 5 10",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 5 = 7 (left: 1 7 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 5 10"
                }
            },
            "Step 1": {
                "Step": "10 / 2 = 5 (left: 1 5 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 2 = 5 (left: 1 5 10) -> 1 * 5 = 5 (left:",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "10 100"
                }
            },
            "Step 3": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> Possible next steps:",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> Possible next steps: -> There are no more possible next steps as all calculations have been exhausted.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "10 100"
                }
            },
            "Step 5": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> 10 * 100 = 1000 (left: 1000)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "10 100"
                }
            },
            "Step 6": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> 100 / 10 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "10 100"
                },
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "10 100"
                }
            },
            "Step 7": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> Input: 3 9 27",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> Input: 3 9 27 -> 27 / 3 = 9 (left: 9 27)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 - 2 = 3 (left: 1 3 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 10"
                }
            },
            "Step 1": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 + 10 = 11 (left: 11) -> There are no possible next steps with the input 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "10 100"
                }
            },
            "Step 3": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> 100 / 10 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "10 100"
                }
            },
            "Step 4": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> 100 - 10 = 90 (left: 90)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "10 100"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "10 100"
                }
            },
            "Step 5": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> 100 / 10 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "10 100"
                }
            },
            "Step 6": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> 10 * 100 = 1000 (left: 1000)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "10 100"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "10 100"
                }
            },
            "Step 7": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> 10 * 10 = 100 (left: 100)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "10 100"
                }
            },
            "Step 8": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> 10 / 10 = 1 (left: 1 100)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 + 10 = 15 (left: 1 2 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 10"
                }
            },
            "Step 1": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 / 10 = 0.1 (left: 0.1)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 / 10 = 0.1 (left: 0.1) -> There are no possible next steps with the input of 0.1.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 10"
                }
            },
            "Step 3": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 + 10 = 11 (left: 11) -> 11 + 8 = 19 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "10 100"
                }
            },
            "Step 5": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> 100 / 10 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "10 100"
                }
            },
            "Step 6": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> 10 * 100 = 1000 (left: 1000)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "10 100"
                },
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "10 100"
                }
            },
            "Step 7": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> 100 - 10 = 90 (left: 90)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "10 100"
                }
            },
            "Step 8": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> 10 * 100 = 1000 (left: 1000)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "Possible next steps:"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 * 2 = 10 (left: 1 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 10"
                }
            },
            "Step 1": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 9) -> 9 * 8 = 72 (left: 72)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "10 100"
                }
            },
            "Step 3": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> 10 * 100 = 1000 (left: 1000)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "10 100"
                }
            },
            "Step 4": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> 10 / 100 = 0.1 (left: 0.1)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "10 100"
                },
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "10 100"
                }
            },
            "Step 5": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> 10 + 100 = 110 (left: 110)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "10 100"
                }
            },
            "Step 6": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "10 100"
                }
            },
            "Step 7": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> 10 - 100 = -90 (left: -90)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "10 100"
                }
            },
            "Step 8": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> 100 - 10 = 90 (left: 10)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "There are no more possible next steps as all calculations have been exhausted."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 5 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 10"
                }
            },
            "Step 1": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "10 100"
                }
            },
            "Step 3": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> 10 * 10 = 100 (left: 100)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "1 10"
                }
            },
            "Step 4": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "10 100"
                }
            },
            "Step 5": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> 10 + 100 = 110 (left: 110)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "10 100"
                }
            },
            "Step 6": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> 100 / 10 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "10 100"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "10 100"
                }
            },
            "Step 7": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> 100 / 10 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "10 100"
                }
            },
            "Step 8": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> 10 * 10 = 100 (left: 100)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "Possible next steps:"
                }
            }
        },
        "Input": "1 2 5 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "879": {
        "puzzle": "2 2 2 5",
        "Agent 0": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 2 5)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 5"
                }
            },
            "Step 1": {
                "Step": "2 / 2 = 1 (left: 1 2 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 / 2 = 1 (left: 1 2 5) -> 2 * 5 = 10 (left: 1 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "4 2.5"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 5 / 2 = 2.5 (left: 4 2.5) -> 4 + 2.5 = 6.5 (left: 2.5 6.5)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 5 / 2 = 2.5 (left: 4 2.5) -> 4 + 2.5 = 6.5 (left: 2.5 6.5) -> 2.5 + 6.5 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "1 10"
                },
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1 10"
                }
            },
            "Step 5": {
                "Step": "2 / 2 = 1 (left: 1 2 5) -> 2 * 5 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 / 2 = 1 (left: 1 2 5) -> 2 * 5 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 9) -> There is only one possible next step: 9.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "1 10"
                }
            },
            "Step 7": {
                "Step": "2 / 2 = 1 (left: 1 2 5) -> 2 * 5 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 / 2 = 1 (left: 1 2 5) -> 2 * 5 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 / 10 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "There are no possible next steps with the input of 11."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 - 2 = 3 (left: 2 3 5)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 2 5"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 2 + 5 = 7 (left: 4 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 2 + 5 = 7 (left: 4 7) -> 7 / 4 = 1.75 (left: 1.75)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 10"
                }
            },
            "Step 3": {
                "Step": "2 / 2 = 1 (left: 1 2 5) -> 2 * 5 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 / 2 = 1 (left: 1 2 5) -> 2 * 5 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 9) -> 8 + 9 = 17 (left: 9)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "1 10"
                },
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1 10"
                }
            },
            "Step 5": {
                "Step": "2 / 2 = 1 (left: 1 2 5) -> 2 * 5 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 / 2 = 1 (left: 1 2 5) -> 2 * 5 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 9) -> 8 + 9 = 17 (left: 17)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "1 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "1 10"
                }
            },
            "Step 7": {
                "Step": "2 / 2 = 1 (left: 1 2 5) -> 2 * 5 = 10 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 / 2 = 1 (left: 1 2 5) -> 2 * 5 = 10 (left: 1 10) -> 1 * 10 = 10 (left: 10) -> None, as there is only one number left.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 2 5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 5"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 2 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 4 * 2 = 8 (left: 8 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 10"
                }
            },
            "Step 3": {
                "Step": "2 / 2 = 1 (left: 1 2 5) -> 2 * 5 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 / 2 = 1 (left: 1 2 5) -> 2 * 5 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 9) -> 9 - 8 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "1 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1 10"
                }
            },
            "Step 5": {
                "Step": "2 / 2 = 1 (left: 1 2 5) -> 2 * 5 = 10 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 / 2 = 1 (left: 1 2 5) -> 2 * 5 = 10 (left: 1 10) -> 1 + 10 = 11 (left: 11) -> There are no possible next steps with the input of 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "1 10"
                }
            },
            "Step 7": {
                "Step": "2 / 2 = 1 (left: 1 2 5) -> 2 * 5 = 10 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 / 2 = 1 (left: 1 2 5) -> 2 * 5 = 10 (left: 1 10) -> 1 + 10 = 11 (left: 11) -> 11 + 8 = 19 (left: 8 8 19)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 * 5 = 10 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 5"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 2 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 5 / 2 = 2.5 (left: 4 2.5)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 10"
                }
            },
            "Step 3": {
                "Step": "2 / 2 = 1 (left: 1 2 5) -> 2 * 5 = 10 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 / 2 = 1 (left: 1 2 5) -> 2 * 5 = 10 (left: 1 10) -> 1 * 10 = 10 (left: 10) -> 10 + 8 = 18 (left: 8)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "1 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1 10"
                }
            },
            "Step 5": {
                "Step": "2 / 2 = 1 (left: 1 2 5) -> 2 * 5 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 / 2 = 1 (left: 1 2 5) -> 2 * 5 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 9) -> 9 * 8 = 72 (left: 72)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "1 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "1 10"
                }
            },
            "Step 7": {
                "Step": "2 / 2 = 1 (left: 1 2 5) -> 2 * 5 = 10 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 / 2 = 1 (left: 1 2 5) -> 2 * 5 = 10 (left: 1 10) -> 1 * 10 = 10 (left: 10) -> 10 + 8 = 18 (left: 8 18)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 - 2 = 3 (left: 2 3 3)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 3 5"
                }
            },
            "Step 1": {
                "Step": "5 - 2 = 3 (left: 2 3 5) -> Possible next steps:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 - 2 = 3 (left: 2 3 5) -> Possible next steps: -> There are no possible next steps with the given input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 10"
                }
            },
            "Step 3": {
                "Step": "2 / 2 = 1 (left: 1 2 5) -> 2 * 5 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 / 2 = 1 (left: 1 2 5) -> 2 * 5 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 / 10 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "1 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1 10"
                }
            },
            "Step 5": {
                "Step": "2 / 2 = 1 (left: 1 2 5) -> 2 * 5 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 / 2 = 1 (left: 1 2 5) -> 2 * 5 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 9) -> 9 * 8 = 72 (left: 72)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "1 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "1 10"
                }
            },
            "Step 7": {
                "Step": "2 / 2 = 1 (left: 1 2 5) -> 2 * 5 = 10 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 / 2 = 1 (left: 1 2 5) -> 2 * 5 = 10 (left: 1 10) -> 1 * 10 = 10 (left: 10) -> 10 / 2 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "There is only one possible next step: 9."
                }
            }
        },
        "Input": "2 2 2 5",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "880": {
        "puzzle": "6 12 13 13",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 6 13 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 12 13 13"
                }
            },
            "Step 1": {
                "Step": "13 + 6 = 19 (left: 12 13 19)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 + 6 = 19 (left: 12 13 19) -> 12 * 13 = 156 (left: 19 156)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 12 13 13"
                }
            },
            "Step 3": {
                "Step": "6 * 12 = 72 (left: 13 13 72)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 * 12 = 72 (left: 13 13 72) -> 13 - 13 = 0 (left: 0 72)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "0 72"
                }
            },
            "Step 5": {
                "Step": "6 * 12 = 72 (left: 13 13 72) -> 13 - 13 = 0 (left: 0 72) -> 72 / 0 = undefined (left: 0 72)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 12 = 72 (left: 13 13 72) -> 13 - 13 = 0 (left: 0 72) -> 72 / 0 = undefined (left: 0 72) -> 72 / 0 = undefined (left: 0 72)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "0 72"
                }
            },
            "Step 7": {
                "Step": "6 * 12 = 72 (left: 13 13 72) -> 13 - 13 = 0 (left: 0 72) -> 72 * 0 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 * 12 = 72 (left: 13 13 72) -> 13 - 13 = 0 (left: 0 72) -> 72 * 0 = 0 (left: 0) -> There are no possible next steps with the input 0.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 7 12 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 13 13"
                }
            },
            "Step 1": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 3 + 6 = 9 (left: ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 3 + 6 = 9 (left:  -> It seems like there is no additional input provided. If you provide the numbers, I can generate possible next steps for you.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 12 13 13"
                }
            },
            "Step 3": {
                "Step": "13 - 12 = 1 (left: 6 1 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 12 = 1 (left: 6 1 13) -> 13 - 6 = 7 (left: 6 7)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "0 72"
                }
            },
            "Step 5": {
                "Step": "6 * 12 = 72 (left: 13 13 72) -> 13 - 13 = 0 (left: 0 72) -> 0 - 72 = -72 (left: -72)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 12 = 72 (left: 13 13 72) -> 13 - 13 = 0 (left: 0 72) -> 0 - 72 = -72 (left: -72) -> -72 / 2 = -36",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "0 72"
                }
            },
            "Step 7": {
                "Step": "6 * 12 = 72 (left: 13 13 72) -> 13 - 13 = 0 (left: 0 72) -> 0 + 72 = 72 (left: 72)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 * 12 = 72 (left: 13 13 72) -> 13 - 13 = 0 (left: 0 72) -> 0 + 72 = 72 (left: 72) -> There are no possible next steps with the input 72.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 12 = 18 (left: 13 18 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 12 13 13"
                }
            },
            "Step 1": {
                "Step": "12 - 6 = 6 (left: 6 13 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 - 6 = 7 (left: 7 13)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 13 13"
                }
            },
            "Step 3": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 * 6 = 78 (left: 13 78)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 * 6 = 78 (left: 13 78) -> 13 * 78 = 1014 (left: 1014)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "0 72"
                }
            },
            "Step 5": {
                "Step": "6 * 12 = 72 (left: 13 13 72) -> 13 - 13 = 0 (left: 0 72) -> 72 - 0 = 72 (left: 72)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 12 = 72 (left: 13 13 72) -> 13 - 13 = 0 (left: 0 72) -> 72 - 0 = 72 (left: 72) -> There are no possible next steps for the input 72.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "0 72"
                }
            },
            "Step 7": {
                "Step": "6 * 12 = 72 (left: 13 13 72) -> 13 - 13 = 0 (left: 0 72) -> 0 + 72 = 72 (left: 72)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 * 12 = 72 (left: 13 13 72) -> 13 - 13 = 0 (left: 0 72) -> 0 + 72 = 72 (left: 72) -> There are no possible next steps with the number 72.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "12 / 6 = 2 (left: 2 13 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 12 13 13"
                }
            },
            "Step 1": {
                "Step": "12 - 6 = 6 (left: 6 13 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 / 6 = 2.16666666667 (left: 2.16666666667 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 12 13 13"
                }
            },
            "Step 3": {
                "Step": "13 + 6 = 19 (left: 12 13 19)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 + 6 = 19 (left: 12 13 19) -> 19 - 13 = 6 (left: 6 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "0 72"
                }
            },
            "Step 5": {
                "Step": "6 * 12 = 72 (left: 13 13 72) -> 13 - 13 = 0 (left: 0 72) -> 72 / 0 = undefined (left: 0 72)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 12 = 72 (left: 13 13 72) -> 13 - 13 = 0 (left: 0 72) -> 72 / 0 = undefined (left: 0 72) -> 0 * 72 = 0 (left: 0 72)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "0 72"
                }
            },
            "Step 7": {
                "Step": "6 * 12 = 72 (left: 13 13 72) -> 13 - 13 = 0 (left: 0 72) -> 72 / 0 = undefined (left: 0 72)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 * 12 = 72 (left: 13 13 72) -> 13 - 13 = 0 (left: 0 72) -> 72 / 0 = undefined (left: 0 72) -> Input: 5 25 3",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 + 6 = 19 (left: 12 13 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 12 13 13"
                }
            },
            "Step 1": {
                "Step": "6 + 12 = 18 (left: 13 18 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 12 = 18 (left: 13 18 13) -> 13 - 18 = -5 (left: -5 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 12 13 13"
                }
            },
            "Step 3": {
                "Step": "12 / 6 = 2 (left: 2 12 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 / 6 = 2 (left: 2 12  -> 12 - 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "0 72"
                }
            },
            "Step 5": {
                "Step": "6 * 12 = 72 (left: 13 13 72) -> 13 - 13 = 0 (left: 0 72) -> 72 * 0 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 12 = 72 (left: 13 13 72) -> 13 - 13 = 0 (left: 0 72) -> 72 * 0 = 0 (left: 0) -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "0 72"
                }
            },
            "Step 7": {
                "Step": "6 * 12 = 72 (left: 13 13 72) -> 13 - 13 = 0 (left: 0 72) -> 0 * 72 = 0 (left: 72)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 * 12 = 72 (left: 13 13 72) -> 13 - 13 = 0 (left: 0 72) -> 0 * 72 = 0 (left: 72) -> There are no possible next steps with just the number 72.",
                "Pruning": null
            }
        },
        "Input": "6 12 13 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "881": {
        "puzzle": "3 3 6 10",
        "Agent 0": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 9 6 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 6 10"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 * 6 = 60 (left: 6 60)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 * 6 = 60 (left: 6 60) -> 6 + 60 = 66 (left: 66)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (10 - 3 - 3) * 6 = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 6 6 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "22"
                }
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 + 6 = 16 (left: 6 16) -> 6 + 16 = 22 (left: 22) -> 22 * 2 = 44 (left: 8)"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 3 = 7 (left: 3 6 7)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 6 10"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 + 6 = 16 (left: 6 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 + 6 = 16 (left: 6 16) -> 6 + 16 = 22 (left: 22)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "22"
                }
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 6 + 6 = 12 (left: 10 12) -> 10 + 12 = 22 (left: 22) -> 22 / 2 = 11"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 6 6 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 6 10"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 6 + 6 = 12 (left: 10 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 6 + 6 = 12 (left: 10 12) -> 10 + 12 = 22 (left: 22)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "22"
                }
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 + 6 = 16 (left: 6 16) -> 6 + 16 = 22 (left: 22) -> 22 + 2 = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 9 6 ",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 6 10"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 / 6 = 1.67 (left: 1.67 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 / 6 = 1.67 (left: 1.67 6) -> 1.67 * 6 = 10.02 (left: 10.02)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 3": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 6 / 3 = 2 (left: 2 7)"
            }
        },
        "Input": "3 3 6 10",
        "Verifications": [
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "882": {
        "puzzle": "3 4 8 11",
        "Agent 0": {
            "Step 0": {
                "Step": "8 + 3 = 11 (left: 4 8 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 8 11"
                }
            },
            "Step 1": {
                "Step": "11 - 4 = 7 (left: 3 7 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 4 = 7 (left: 3 7 8) -> 3 / 7 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 8 11"
                }
            },
            "Step 3": {
                "Step": "3 + 4 = 7 (left: 7 8 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 7 8 11) -> 8 / 7 = 1.14 (left: 1.14 11)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1.14 11"
                }
            },
            "Step 5": {
                "Step": "3 + 4 = 7 (left: 7 8 11) -> 8 / 7 = 1.14 (left: 1.14 11) -> 1.14 + 11 = 12.14 (left: 12.14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 4 = 7 (left: 7 8 11) -> 8 / 7 = 1.14 (left: 1.14 11) -> 1.14 + 11 = 12.14 (left: 12.14) -> 12 * 14 = 168 (left: 168)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "2 11"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "2 11"
                }
            },
            "Step 7": {
                "Step": "11 - 3 = 8 (left: 8 4 11) -> 8 / 4 = 2 (left: 2 11) -> 11 - 2 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 3 = 8 (left: 8 4 11) -> 8 / 4 = 2 (left: 2 11) -> 11 - 2 = 9 (left: 9) -> There are no possible next steps with the input 9.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 + 3 = 11 (left: 4 11 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 8 11"
                }
            },
            "Step 1": {
                "Step": "8 - 4 = 4 (left: 3 4 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 4 = 4 (left: 3 4 11) -> 11 - 4 = 7 (left: 3 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 8 11"
                }
            },
            "Step 3": {
                "Step": "8 + 3 = 11 (left: 4 8 11) -> 4 * 8 = 32 (left: 32 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 + 3 = 11 (left: 4 8 11) -> 4 * 8 = 32 (left: 32 11) -> 32 / 11 = 2.909 (left: 2.909)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1.14 11"
                }
            },
            "Step 5": {
                "Step": "3 + 4 = 7 (left: 7 8 11) -> 8 / 7 = 1.14 (left: 1.14 11) -> Possible next steps:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 4 = 7 (left: 7 8 11) -> 8 / 7 = 1.14 (left: 1.14 11) -> Possible next steps: -> There are no possible next steps with the given input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "2 11"
                }
            },
            "Step 7": {
                "Step": "11 - 3 = 8 (left: 8 4 11) -> 8 / 4 = 2 (left: 2 11) -> 2 + 11 = 13 (left: 13)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 3 = 8 (left: 8 4 11) -> 8 / 4 = 2 (left: 2 11) -> 2 + 11 = 13 (left: 13) -> 13 / 2 = 6.5 (left: 6.5)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "There are no possible next steps with the input 2.75."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 3 7 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 8 11"
                }
            },
            "Step 1": {
                "Step": "11 - 4 = 7 (left: 3 7 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 4 = 7 (left: 3 7 11) -> 11 - 3 = 8 (left: 7 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 8 11"
                }
            },
            "Step 3": {
                "Step": "8 + 3 = 11 (left: 4 8 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 + 3 = 11 (left: 4 8 11) -> 8 - 4 = 4 (left: 4 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "2 11"
                }
            },
            "Step 5": {
                "Step": "11 - 3 = 8 (left: 8 4 11) -> 8 / 4 = 2 (left: 2 11) -> 2 + 11 = 13 (left: 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 3 = 8 (left: 8 4 11) -> 8 / 4 = 2 (left: 2 11) -> 2 + 11 = 13 (left: 13) -> 13 * 2 = 26 (left: 26)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "4 11"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 11"
                }
            },
            "Step 7": {
                "Step": "8 + 3 = 11 (left: 4 8 11) -> 8 - 4 = 4 (left: 4 11) -> Input: 3 9 27",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 + 3 = 11 (left: 4 8 11) -> 8 - 4 = 4 (left: 4 11) -> Input: 3 9 27 -> 27 / 3 = 9 (left: 9 27)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 8 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 8 11"
                }
            },
            "Step 1": {
                "Step": "4 * 3 = 12 (left: 8 12 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 3 = 12 (left: 8 12 11) -> 11 + 8 = 19 (left: 12 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 8 11"
                }
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 8 4 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 3 = 8 (left: 8 4 11) -> 8 / 4 = 2 (left: 2 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "2 11"
                }
            },
            "Step 5": {
                "Step": "11 - 3 = 8 (left: 8 4 11) -> 8 / 4 = 2 (left: 2 11) -> 2 * 11 = 22 (left: 22)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 3 = 8 (left: 8 4 11) -> 8 / 4 = 2 (left: 2 11) -> 2 * 11 = 22 (left: 22) -> 22 divided by 2 = 11",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 11"
                }
            },
            "Step 7": {
                "Step": "8 + 3 = 11 (left: 4 8 11) -> 8 - 4 = 4 (left: 4 11) -> Possible next steps:",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 + 3 = 11 (left: 4 8 11) -> 8 - 4 = 4 (left: 4 11) -> Possible next steps: -> It seems like there was a mistake in the input. Can you please provide the correct numbers?",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 8 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 8 11"
                }
            },
            "Step 1": {
                "Step": "3 + 4 = 7 (left: 7 8 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 4 = 7 (left: 7 8 11) -> 8 / 7 = 1.14 (left: 1.14 11)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 8 11"
                }
            },
            "Step 3": {
                "Step": "8 + 3 = 11 (left: 4 8 11) -> 11 - 8 = 3 (left: 4 3)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 + 3 = 11 (left: 4 8 11) -> 11 - 8 = 3 (left: 4 3) -> Input: 10 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 11"
                }
            },
            "Step 5": {
                "Step": "8 + 3 = 11 (left: 4 8 11) -> 8 - 4 = 4 (left: 4 11) -> 11 / 4 = 2.75 (left: 2.75)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 + 3 = 11 (left: 4 8 11) -> 8 - 4 = 4 (left: 4 11) -> 11 / 4 = 2.75 (left: 2.75) -> There are no possible next steps with the input 2.75.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "2 11"
                }
            },
            "Step 7": {
                "Step": "11 - 3 = 8 (left: 8 4 11) -> 8 / 4 = 2 (left: 2 11) -> 2 * 11 = 22 (left: 22)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 3 = 8 (left: 8 4 11) -> 8 / 4 = 2 (left: 2 11) -> 2 * 11 = 22 (left: 22) -> 22 + 2 = 24",
                "Pruning": null
            }
        },
        "Input": "3 4 8 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "883": {
        "puzzle": "4 4 6 13",
        "Agent 0": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 6 16 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 13"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 6 8 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 6 8 13) -> 8 / 6 = 1.33 (left: 1.33 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 13"
                }
            },
            "Step 3": {
                "Step": "6 - 4 = 2 (left: 2 4 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 - 4 = 2 (left: 2 4 13) -> 13 - 4 = 9 (left: 2 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 8 13"
                }
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 6 8 13) -> 8 / 6 = 1.33 (left: 1.33 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 4 = 8 (left: 6 8 13) -> 8 / 6 = 1.33 (left: 1.33 13) -> 1.33 * 13 = 17.29 (left: 17.29)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "7 8"
                }
            },
            "Step 7": {
                "Step": "4 + 4 = 8 (left: 6 8 13) -> 13 - 6 = 7 (left: 7 8) -> 7 / 8 = 0.875 (left: 0.875)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 4 = 8 (left: 6 8 13) -> 13 - 6 = 7 (left: 7 8) -> 7 / 8 = 0.875 (left: 0.875) -> There is only one number provided, so there are no possible next steps for calculation.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 4 = 10 (left: 4 10 13)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 13"
                }
            },
            "Step 1": {
                "Step": "4 / 4 = 1 (left: 1 6 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 4 = 1 (left: 1 6 13) -> 13 - 1 = 12 (left: 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 13"
                }
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 4 6 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left: 4 6  -> Input: 3 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 10 13"
                }
            },
            "Step 5": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 10 / 4 = 2.5 (left: 2.5 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 10 / 4 = 2.5 (left: 2.5 13) -> 13 - 2.5 = 10.5 (left: 10.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "7 8"
                }
            },
            "Step 7": {
                "Step": "4 + 4 = 8 (left: 6 8 13) -> 13 - 6 = 7 (left: 7 8) -> 7 + 8 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 4 = 8 (left: 6 8 13) -> 13 - 6 = 7 (left: 7 8) -> 7 + 8 = 15 (left: 15) -> 15 / 2 = 7.5 (left: 7.5)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "There are no possible next steps for the input 17.29 as it is already a single number."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 6 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 10 13"
                }
            },
            "Step 1": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> Input: 5 15",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> Input: 5 15 -> 5 * 15 = 75 (left: 75)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1.33 13"
                }
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 6 8 13) -> 8 / 6 = 1.33 (left: 1.33 13) -> 1.33 * 13 = 17.29 (left: 17.29)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 6 8 13) -> 8 / 6 = 1.33 (left: 1.33 13) -> 1.33 * 13 = 17.29 (left: 17.29) -> There are no possible next steps for the input 17.29 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 13"
                }
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 6 8 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 4 = 8 (left: 6 8 13) -> 13 - 6 = 7 (left: 7 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "7 8"
                }
            },
            "Step 7": {
                "Step": "4 + 4 = 8 (left: 6 8 13) -> 13 - 6 = 7 (left: 7 8) -> 7 / 8 = 0.875 (left: 0.875)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 4 = 8 (left: 6 8 13) -> 13 - 6 = 7 (left: 7 8) -> 7 / 8 = 0.875 (left: 0.875) -> There are no possible next steps with the input 0.875.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 6 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 10 13"
                }
            },
            "Step 1": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 4 + 10 = 14 (left: 14 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 4 + 10 = 14 (left: 14 13) -> 14 / 13 = 1.07692307692 (left: 1.07692307692)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 13"
                }
            },
            "Step 3": {
                "Step": "6 + 4 = 10 (left: 4 10 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 10 / 4 = 2.5 (left: 2.5 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 10 13"
                }
            },
            "Step 5": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 4 * 10 = 40 (left: 40 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 4 * 10 = 40 (left: 40 13) -> 40 * 13 = 520 (left: 520)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "7 8"
                }
            },
            "Step 7": {
                "Step": "4 + 4 = 8 (left: 6 8 13) -> 13 - 6 = 7 (left: 7 8) -> 8 - 7 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 4 = 8 (left: 6 8 13) -> 13 - 6 = 7 (left: 7 8) -> 8 - 7 = 1 (left: 1) -> There are no possible next steps with just one number provided.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 + 4 = 8 (left: 6 8 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 13"
                }
            },
            "Step 1": {
                "Step": "6 - 4 = 2 (left: 2 4 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 4 = 2 (left: 2 4 13) -> 13 - 4 = 9 (left: 2 9)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 16 13"
                }
            },
            "Step 3": {
                "Step": "4 * 4 = 16 (left: 6 16 13) -> 13 / 6 = ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 * 4 = 16 (left: 6 16 13) -> 13 / 6 =  -> 13 / 6 = 2.16666666667",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 13"
                }
            },
            "Step 5": {
                "Step": "4 * 4 = 16 (left: 6 16 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 4 = 16 (left: 6 16 13) -> 6 + 16 = 22 (left: 13 22)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "7 8"
                }
            },
            "Step 7": {
                "Step": "4 + 4 = 8 (left: 6 8 13) -> 13 - 6 = 7 (left: 7 8) -> 8 / 7 = 1.14 (left: 1.14)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 4 = 8 (left: 6 8 13) -> 13 - 6 = 7 (left: 7 8) -> 8 / 7 = 1.14 (left: 1.14) -> 1 * 1 = 1 (left: 1.14)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "There are no possible next steps for the input 17.29 as it is already a single number."
                }
            }
        },
        "Input": "4 4 6 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "884": {
        "puzzle": "4 6 7 10",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 7 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10) -> 9 * 10 = 90 (left: 90)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (6 - 4) * (7 + 10) = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 - 4 = 2 (left: 2 7 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 10 - 7 = 3 (left: 2 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 10 - 7 = 3 (left: 2 3) -> 3 / 2 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (6 - 4) * 7 + 10 = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 / 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 7 10"
                }
            },
            "Step 1": {
                "Step": "7 - 4 = 3 (left: 3 7 10) -> 7 - 3 =",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 4 = 3 (left: 3 7 10) -> 7 - 3 = -> 7 - 3 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (6 - 4) * (7 + 10) = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 7 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 * 10 = 140 (left: 140)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (6 - 4) * (7 + 10) = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "7 - 4 = 3 (left: 3 7 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 3": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 7 - 2 = 5 (left: 5 10)"
            }
        },
        "Input": "4 6 7 10",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            }
        ]
    },
    "885": {
        "puzzle": "6 11 11 12",
        "Agent 0": {
            "Step 0": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 11 11 12"
                }
            },
            "Step 1": {
                "Step": "6 + 11 = 17 (left: 11 11 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 11 = 17 (left: 11 11 12) -> 11 - 11 = 0 (left: 0 12)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "0 12"
                }
            },
            "Step 3": {
                "Step": "6 + 11 = 17 (left: 11 11 12) -> 11 - 11 = 0 (left: 0 12) -> 0 + 12 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 11 = 17 (left: 11 11 12) -> 11 - 11 = 0 (left: 0 12) -> 0 + 12 = 12 (left: 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "0 12"
                },
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "0 12"
                }
            },
            "Step 5": {
                "Step": "6 + 11 = 17 (left: 11 11 12) -> 11 - 11 = 0 (left: 0 12) -> 0 + 12 = 12",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 11 = 17 (left: 11 11 12) -> 11 - 11 = 0 (left: 0 12) -> 0 + 12 = 12 -> ",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "0 12"
                },
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "0 12"
                }
            },
            "Step 7": {
                "Step": "6 + 11 = 17 (left: 11 11 12) -> 11 - 11 = 0 (left: 0 12) -> 0 + 12 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 11 = 17 (left: 11 11 12) -> 11 - 11 = 0 (left: 0 12) -> 0 + 12 = 12 (left: 12) -> 12 * 2 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "Division by zero is undefined."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 6 11 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 11 12"
                }
            },
            "Step 1": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 12 - 1 = 11 (left: 11 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 12 - 1 = 11 (left: 11 11) -> 11 * 11 = 121 (left: 121)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "0 12"
                }
            },
            "Step 3": {
                "Step": "6 + 11 = 17 (left: 11 11 12) -> 11 - 11 = 0 (left: 0 12) -> 12 * 0 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 11 = 17 (left: 11 11 12) -> 11 - 11 = 0 (left: 0 12) -> 12 * 0 = 0 (left: 0) -> There are no possible next steps as the input is 0.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "0 12"
                }
            },
            "Step 5": {
                "Step": "6 + 11 = 17 (left: 11 11 12) -> 11 - 11 = 0 (left: 0 12) -> 0 + 12 = 12",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 11 = 17 (left: 11 11 12) -> 11 - 11 = 0 (left: 0 12) -> 0 + 12 = 12 -> 12 - 0 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "0 12"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "0 12"
                }
            },
            "Step 7": {
                "Step": "6 + 11 = 17 (left: 11 11 12) -> 11 - 11 = 0 (left: 0 12) -> 0 + 12 = 12",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 11 = 17 (left: 11 11 12) -> 11 - 11 = 0 (left: 0 12) -> 0 + 12 = 12 -> 0 * 12 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "Division by zero is undefined."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "11 / 6 = 1 (left: 1 11 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1.83333 11 12"
                }
            },
            "Step 1": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 11 / 1.83333 = 6 (left: 6 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 11 / 1.83333 = 6 (left: 6 12) -> 12 - 6 = 6 (left: 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "0 12"
                }
            },
            "Step 3": {
                "Step": "6 + 11 = 17 (left: 11 11 12) -> 11 - 11 = 0 (left: 0 12) -> 0 + 12 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 11 = 17 (left: 11 11 12) -> 11 - 11 = 0 (left: 0 12) -> 0 + 12 = 12 (left: 12) -> 12 + 8 = 20 (left: 8 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "0 12"
                }
            },
            "Step 5": {
                "Step": "6 + 11 = 17 (left: 11 11 12) -> 11 - 11 = 0 (left: 0 12) -> 12 / 0 = undefined",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 11 = 17 (left: 11 11 12) -> 11 - 11 = 0 (left: 0 12) -> 12 / 0 = undefined -> Division by zero is undefined.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "0 12"
                }
            },
            "Step 7": {
                "Step": "6 + 11 = 17 (left: 11 11 12) -> 11 - 11 = 0 (left: 0 12) -> 0 - 12 = -12 (left: -12)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 11 = 17 (left: 11 11 12) -> 11 - 11 = 0 (left: 0 12) -> 0 - 12 = -12 (left: -12) -> There are no possible next steps for the input -12.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "11 + 6 = 17 (left: 11 12 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 11 12"
                }
            },
            "Step 1": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 1 * 11 = 11 (left: 11 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 1 * 11 = 11 (left: 11 12) -> 11 - 12 = -1 (left: -1)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "0 12"
                }
            },
            "Step 3": {
                "Step": "6 + 11 = 17 (left: 11 11 12) -> 11 - 11 = 0 (left: 0 12) -> 0 * 12 = 0 (left: 0 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 11 = 17 (left: 11 11 12) -> 11 - 11 = 0 (left: 0 12) -> 0 * 12 = 0 (left: 0 12) -> 0 + 12 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "0 12"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "0 12"
                }
            },
            "Step 5": {
                "Step": "6 + 11 = 17 (left: 11 11 12) -> 11 - 11 = 0 (left: 0 12) -> 12 + 0 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 11 = 17 (left: 11 11 12) -> 11 - 11 = 0 (left: 0 12) -> 12 + 0 = 12 (left: 12) -> 12 + 2 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "0 12"
                },
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "0 12"
                }
            },
            "Step 7": {
                "Step": "6 + 11 = 17 (left: 11 11 12) -> 11 - 11 = 0 (left: 0 12) -> 12 + 0 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 11 = 17 (left: 11 11 12) -> 11 - 11 = 0 (left: 0 12) -> 12 + 0 = 12 (left: 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "Division by zero is undefined."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "11 / 6 = 1 (left: 1 11 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1.83333 11 12"
                }
            },
            "Step 1": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 12 / 1.83333 = 6.54545 (left: 6.54545 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 12 / 1.83333 = 6.54545 (left: 6.54545 12) -> 6.54545 * 12 = 78.5454 (left: 78.5454)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "0 12"
                }
            },
            "Step 3": {
                "Step": "6 + 11 = 17 (left: 11 11 12) -> 11 - 11 = 0 (left: 0 12) -> 0 + 12 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 11 = 17 (left: 11 11 12) -> 11 - 11 = 0 (left: 0 12) -> 0 + 12 = 12 (left: 12) -> 12 * 2 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "0 12"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "0 12"
                }
            },
            "Step 5": {
                "Step": "6 + 11 = 17 (left: 11 11 12) -> 11 - 11 = 0 (left: 0 12) -> 0 + 12 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 11 = 17 (left: 11 11 12) -> 11 - 11 = 0 (left: 0 12) -> 0 + 12 = 12 (left: 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "0 12"
                },
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "0 12"
                }
            },
            "Step 7": {
                "Step": "6 + 11 = 17 (left: 11 11 12) -> 11 - 11 = 0 (left: 0 12) -> 0 + 12 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 11 = 17 (left: 11 11 12) -> 11 - 11 = 0 (left: 0 12) -> 0 + 12 = 12 (left: 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "Division by zero is undefined."
                }
            }
        },
        "Input": "6 11 11 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "886": {
        "puzzle": "3 6 9 11",
        "Agent 0": {
            "Step 0": {
                "Step": "6 / 3 = 2 (left: 2 9 11)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 6 9 11"
                }
            },
            "Step 1": {
                "Step": "11 - 9 = 2 (left: 3 6 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 9 = 2 (left: 3 6  -> 6 - 3 = 3 (left: 3 6)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 9 11"
                }
            },
            "Step 3": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 2 + 9 = 11 (left: 11 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 2 + 9 = 11 (left: 11 11) -> 11 * 11 = 121 (left: 121)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 9 11"
                }
            },
            "Step 5": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 2 * 9 = 18 (left: 18 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 2 * 9 = 18 (left: 18 11) -> 18 + 11 = 29 (left: 29)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "9 / 3 = 3 (left:"
                }
            },
            "Step 7": {
                "Step": "6 - 3 = 3 (left: 3 9 11) -> 9 / 3 = 3 (left: -> 9 - 3 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 - 3 = 3 (left: 3 9 11) -> 9 / 3 = 3 (left: -> 9 - 3 = 6 (left: 6) -> 6 * 8 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "No possible next steps as there is only one number."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 9 9 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 9 11"
                }
            },
            "Step 1": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> Input: 3 5",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> Input: 3 5 -> 5 / 3 = 1.67 (left: 1.67)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 6 9 11"
                }
            },
            "Step 3": {
                "Step": "9 + 3 = 12 (left: 6 12 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 + 3 = 12 (left: 6 12 11) -> 6 * 11 = 66 (left: 66)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 6 9 11"
                }
            },
            "Step 5": {
                "Step": "9 + 2 = 11 (left: 3 9 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 2 = 11 (left: 3 9 11) -> 11 / 3 = 3.6666666666666665 (left: 3.666666666666666",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "9 / 3 = 3 (left:"
                }
            },
            "Step 7": {
                "Step": "6 - 3 = 3 (left: 3 9 11) -> 9 / 3 = 3 (left: -> 3 + 3 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 - 3 = 3 (left: 3 9 11) -> 9 / 3 = 3 (left: -> 3 + 3 = 6 (left: 6) -> 6 / 8 = 0.75 (left: 0.75)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "No possible next steps as there is only one number."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 / 3 = 2 (left: 2 9 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 6 9 11"
                }
            },
            "Step 1": {
                "Step": "9 - 3 = 6 (left: 6 6 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 3 = 6 (left: 6 6  -> 6 / 6 = 1 (left: 1) ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 9 11"
                }
            },
            "Step 3": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> Input: 3 5",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> Input: 3 5 -> 3 * 5 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 6 9 11"
                }
            },
            "Step 5": {
                "Step": "6 - 3 = 3 (left: 3 9 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 3 = 3 (left: 3 9 11) -> 9 / 3 = 3 (left:",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "9 / 3 = 3 (left:"
                }
            },
            "Step 7": {
                "Step": "6 - 3 = 3 (left: 3 9 11) -> 9 / 3 = 3 (left: -> 3 * 3 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 - 3 = 3 (left: 3 9 11) -> 9 / 3 = 3 (left: -> 3 * 3 = 9 (left: 9) -> 8 + 1 = 9",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 3 = 6 (left: 6 9 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 9 11"
                }
            },
            "Step 1": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 11 - 2 = 9 (left: 9 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 11 - 2 = 9 (left: 9 11) -> 9 + 11 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 6 9 11"
                }
            },
            "Step 3": {
                "Step": "3 + 6 = 9 (left: 9 9 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 + 6 = 9 (left: 9 9 11) -> 9 - 9 = 0 (left: 0 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "3 6"
                }
            },
            "Step 5": {
                "Step": "11 - 9 = 2 (left: 3 6  -> 6 - 3 = 3 (left: 3 6) -> 6 / 3 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 9 = 2 (left: 3 6  -> 6 - 3 = 3 (left: 3 6) -> 6 / 3 = 2 (left: 2) -> No possible next steps as there is only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "9 / 3 = 3 (left:"
                }
            },
            "Step 7": {
                "Step": "6 - 3 = 3 (left: 3 9 11) -> 9 / 3 = 3 (left: -> 3 + 3 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 - 3 = 3 (left: 3 9 11) -> 9 / 3 = 3 (left: -> 3 + 3 = 6 (left: 6) -> 6 - 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "No possible next steps as there is only one number."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "11 - 3 = 8 (left: 6 8 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 9 11"
                }
            },
            "Step 1": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 9 - 2 = 7 (left: 7 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 9 - 2 = 7 (left: 7 11) -> 11 / 7 = 1.57 (left: 1.57)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 6 9 11"
                }
            },
            "Step 3": {
                "Step": "6 * 3 = 18 (left: 9 18 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 * 3 = 18 (left: 9 18 11) -> 9 + 18 = 27 (left: 27 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 9 11"
                }
            },
            "Step 5": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 9 - 2 = 7 (left: 7 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 9 - 2 = 7 (left: 7 11) -> 5 * 9 = 45 (left: 3 45)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "9 / 3 = 3 (left:"
                }
            },
            "Step 7": {
                "Step": "6 - 3 = 3 (left: 3 9 11) -> 9 / 3 = 3 (left: -> 9 * 3 = 27 (left: 27)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 - 3 = 3 (left: 3 9 11) -> 9 / 3 = 3 (left: -> 9 * 3 = 27 (left: 27) -> There are no possible next steps with the input 27.",
                "Pruning": null
            }
        },
        "Input": "3 6 9 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "887": {
        "puzzle": "5 7 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "9 + 7 = 16 (left: 5 16 ",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 7 9 13"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 4 5 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 4 5 7) -> 5 * 7 = 35 (left: 4 35)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 2 13"
                }
            },
            "Step 3": {
                "Step": "9 - 7 = 2 (left: 5 2 13) -> 2 + 5 = 7 (left: 7 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 7 = 2 (left: 5 2 13) -> 2 + 5 = 7 (left: 7 13) -> 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 5": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> 17 / 7 = 2.43 (left: 2.43)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "-10"
                }
            },
            "Step 7": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> 7 - 17 = -10 (left: -10) -> There are no possible next steps with the input of -10 as there are no other numbers provided to perform operations on.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> 7 - 17 = -10 (left: -10) -> There are no possible next steps with the input of -10 as there are no other numbers provided to perform operations on. -> There are no possible next steps with the input of -10 as there are no other numbers provided to perform operations on.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 + 7 = 12 (left: 9 12 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 7 9 13"
                }
            },
            "Step 1": {
                "Step": "7 - 5 = 2 (left: 2 9 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 5 = 2 (left: 2 9 13) -> 13 - 9 = 4 (left: 2 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 3": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 7 * 8 = 56 (left: 9 56)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 7 * 8 = 56 (left: 9 56) -> 56 / 9 = 6.2222 (left: 6.2222)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 5": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> 7 + 17 = 24",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "1.6667"
                }
            },
            "Step 7": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 7 + 8 = 15 (left: 9 15) -> 15 / 9 = 1.6667 (left: 1.6667) -> There are no possible next steps as the input is a single number.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 7 + 8 = 15 (left: 9 15) -> 15 / 9 = 1.6667 (left: 1.6667) -> There are no possible next steps as the input is a single number. -> There are no possible next steps as the input is a single number.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 - 7 = 2 (left: 5 2 13)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 1": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 8 / 9 = 0.8888888888888888 (left: ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 8 / 9 = 0.8888888888888888 (left:  -> It seems like you did not provide an input for the calculation. Could you please provide the numbers you would like to use for the next step?",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "4 35"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 4 5 7) -> 5 * 7 = 35 (left: 4 35) -> 4 * 35 = 140 (left: 140)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 4 5 7) -> 5 * 7 = 35 (left: 4 35) -> 4 * 35 = 140 (left: 140) -> 1 + 4 + 0 = 5 (left: 140)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "7 8 9"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 5": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 7 + 8 = 15 (left: 9 15)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 7 + 8 = 15 (left: 9 15) -> 15 / 9 = 1.6666666666666667 (left: 1.6666666666666667)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "1.6667"
                }
            },
            "Step 7": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 7 + 8 = 15 (left: 9 15) -> 15 / 9 = 1.6667 (left: 1.6667) -> There seems to be a mistake in the input provided. Please provide a valid set of numbers for the calculation.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 7 + 8 = 15 (left: 9 15) -> 15 / 9 = 1.6667 (left: 1.6667) -> There seems to be a mistake in the input provided. Please provide a valid set of numbers for the calculation. -> Input: 4 5 7 9",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 + 7 = 12 (left: 9 12 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 2 13"
                }
            },
            "Step 1": {
                "Step": "9 - 7 = 2 (left: 5 2 13) -> 2 * 13 = 26 (left: 5 26)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 7 = 2 (left: 5 2 13) -> 2 * 13 = 26 (left: 5 26) -> 26 - 5 = 21 (left: 21)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "4 35"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 4 5 7) -> 5 * 7 = 35 (left: 4 35) -> 10 * 5 = 50 (left: 50 2)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 4 5 7) -> 5 * 7 = 35 (left: 4 35) -> 10 * 5 = 50 (left: 50 2) -> 50 - 2 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "7 8 9"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 5": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> 7 - 17 = -10 (left: -10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "2.43"
                }
            },
            "Step 7": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> 17 / 7 = 2.43 (left: 2.43) -> There are no possible next steps for the input 2.43 as it is already a single number.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> 17 / 7 = 2.43 (left: 2.43) -> There are no possible next steps for the input 2.43 as it is already a single number. -> There are no possible next steps for the input 2.43 as it is already a single number.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 - 5 = 8 (left: 7 8 9)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 1": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 9 / 8 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 9 / 8 =  -> 1. 9 / 8 = 1.125",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "4 35"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 4 5 7) -> 5 * 7 = 35 (left: 4 35) -> 4 + 35 = 39 (left: 39)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 4 5 7) -> 5 * 7 = 35 (left: 4 35) -> 4 + 35 = 39 (left: 39) -> There are no possible next steps with the input 39.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 5": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 7 + 8 = 15 (left: 9 15)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 7 + 8 = 15 (left: 9 15) -> 15 / 9 = 1.6667 (left: 1.6667)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "4 35"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 4 5 7) -> 5 * 7 = 35 (left: 4 35) -> 4 * 35 = 140 (left: 140)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 4 5 7) -> 5 * 7 = 35 (left: 4 35) -> 4 * 35 = 140 (left: 140) -> 40 / 1 = 40 (left: 40 40)",
                "Pruning": null
            }
        },
        "Input": "5 7 9 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "888": {
        "puzzle": "2 4 12 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 / 4 = 3 (left: 2 3 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 12 = 72 (left: 4 72)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 12 = 72 (left: 4 72) -> 72 - 4 = 68 (left: 68 72)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 / 4 = 1.5 (left: 1.5 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 / 4 = 1.5 (left: 1.5 12) -> 1.5 + 12 = 13.5 (left: 13.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "12 / 2 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 2 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (12 / 2) * (12 / 6) = 24",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "2 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "2 12"
                }
            },
            "Step 7": {
                "Step": "12 / 2 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 / 2 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (12 / 2) * (12 / 6) = 24",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "14 / 2 = 7"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 6 12 12)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 12 12"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 - 6 = 6 (left: 6 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 - 6 = 6 (left: 6 12) -> 6 * 2 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 12 12"
                }
            },
            "Step 3": {
                "Step": "2 * 4 = 8 (left: 8 12 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 4 = 8 (left: 8 12 12) -> 12 - 8 = 4 (left: 4 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "12 / 2 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12) -> 2 + 12 = 14",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 2 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12) -> 2 + 12 = 14 -> 12 - 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "2 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "2 12"
                }
            },
            "Step 7": {
                "Step": "12 / 2 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 / 2 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6) -> There are no possible next steps with just the number 6.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 2 = 10 (left: 4 10 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 / 6 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 / 6 =  -> 6 - 4 = 2 (left: )",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 12 12"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "12 / 2 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 2 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14) -> 14 / 2 = 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "2 12"
                }
            },
            "Step 7": {
                "Step": "12 / 2 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 / 2 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10) -> 10 / 2 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "10 + 10 = 20"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 * 3 = 12 (left: 2 12 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 * 6 = 24 (left: 24 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 * 6 = 24 (left: 24 12) -> 24 / 2 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 * 6 = 24 (left: 24 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 * 6 = 24 (left: 24 12) -> 24 - 12 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "12 / 2 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 2 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (12 / 2) * (12 / 6) = 24",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "2 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "2 12"
                }
            },
            "Step 7": {
                "Step": "12 / 2 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 / 2 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14) -> 14 / 2 = 7",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 / 2 = 6 (left: 4 6 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 * 6 = 24 (left: 24 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 * 6 = 24 (left: 24 12) -> 24 / 12 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 12 12"
                }
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 6 12 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 / 2 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "12 / 2 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 2 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10) -> 10 + 10 = 20",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "2 12"
                }
            },
            "Step 7": {
                "Step": "12 / 2 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 / 2 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6) -> 6 / 2 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "10 + 10 = 20"
                }
            }
        },
        "Input": "2 4 12 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "889": {
        "puzzle": "4 9 11 12",
        "Agent 0": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 11 12 36)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23) -> 23 - 13 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "9 12 15"
                }
            },
            "Step 3": {
                "Step": "11 + 4 = 15 (left: 9 12 15) -> 15 - 12 = 3 (left: 3 9 15)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 + 4 = 15 (left: 9 12 15) -> 15 - 12 = 3 (left: 3 9 15) -> 15 - 3 = 12 (left: 3 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "3 12"
                }
            },
            "Step 5": {
                "Step": "11 + 4 = 15 (left: 9 12 15) -> 15 - 12 = 3 (left: 3 9 15) -> 15 - 3 = 12 (left: 3 12) -> 3 + 12 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "0.9166666666666666 48"
                }
            },
            "Step 6": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 11 / 12 = 0.9166666666666666 (left: 0.9166666666666666 12 36) -> 12 + 36 = 48 (left: 0.9166666666666666 48) -> 48 - 0.9166666666666666 = 47.083333333333336 (left: 47.083333333333336)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "0.9166666666666666 48"
                },
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "3 12"
                }
            },
            "Step 7": {
                "Step": "11 + 4 = 15 (left: 9 12 15) -> 15 - 12 = 3 (left: 3 9 15) -> 15 - 3 = 12 (left: 3 12) -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 + 4 = 15 (left: 9 12 15) -> 15 - 12 = 3 (left: 3 9 15) -> 15 - 3 = 12 (left: 3 12) -> 12 / 3 = 4 (left: 4 12) -> 4 * 12 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "4 12"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "11 + 4 = 15 (left: 9 12 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2.25 11 12"
                }
            },
            "Step 1": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 12 / 2.25 = 5.",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 12 / 2.25 = 5. -> 12 - 5 = 7 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 3": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "0.9166666666666666 48"
                }
            },
            "Step 5": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 11 / 12 = 0.9166666666666666 (left: 0.9166666666666666 12 36) -> 12 + 36 = 48 (left: 0.9166666666666666 48) -> 0.916666",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "3 12"
                }
            },
            "Step 6": {
                "Step": "11 + 4 = 15 (left: 9 12 15) -> 15 - 12 = 3 (left: 3 9 15) -> 15 - 3 = 12 (left: 3 12) -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "3 12"
                }
            },
            "Step 7": {
                "Step": "11 + 4 = 15 (left: 9 12 15) -> 15 - 12 = 3 (left: 3 9 15) -> 15 - 3 = 12 (left: 3 12) -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 + 4 = 15 (left: 9 12 15) -> 15 - 12 = 3 (left: 3 9 15) -> 15 - 3 = 12 (left: 3 12) -> 12 / 3 = 4 (left: 4 12) -> 4 * 12 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "4 12"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 9 = 3 (left: 3 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2.25 11 12"
                }
            },
            "Step 1": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 11 - 2.25 = 8.75 (left: 8.75 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 11 - 2.25 = 8.75 (left: 8.75 12) -> 8.75 * 12 = 105 (left: 105)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2.25 11 12"
                }
            },
            "Step 3": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 11 / 2.25 = 4.888888888888889 (left: 4.888888888888889 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 11 / 2.25 = 4.888888888888889 (left: 4.888888888888889 12) -> 12 - 4.888888888888889 = 7.111111111111111 (left: 7.111111111111111)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "3 12"
                }
            },
            "Step 5": {
                "Step": "11 + 4 = 15 (left: 9 12 15) -> 15 - 12 = 3 (left: 3 9 15) -> 15 - 3 = 12 (left: 3 12) -> 12 / 3 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "3 12"
                }
            },
            "Step 6": {
                "Step": "11 + 4 = 15 (left: 9 12 15) -> 15 - 12 = 3 (left: 3 9 15) -> 15 - 3 = 12 (left: 3 12) -> 3 * 12 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "3 12"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "3 12"
                }
            },
            "Step 7": {
                "Step": "11 + 4 = 15 (left: 9 12 15) -> 15 - 12 = 3 (left: 3 9 15) -> 15 - 3 = 12 (left: 3 12) -> 12 / 3 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "3 12"
                }
            },
            "Step 8": {
                "Step": "11 + 4 = 15 (left: 9 12 15) -> 15 - 12 = 3 (left: 3 9 15) -> 15 - 3 = 12 (left: 3 12) -> 12 - 3 = 9 (left: 3 9)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 + 9 = 13 (left: 11 12 13)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132) -> 13 * 132 = 1716 (left: 1716)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "11 12 36"
                }
            },
            "Step 3": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 11 / 12 = 0.9166666666666666 (left: 0.9166666666666666 12 36)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 11 / 12 = 0.9166666666666666 (left: 0.9166666666666666 12 36) -> 12 + 36 = 48 (left: 0.9166666666666666 48)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "3 12"
                }
            },
            "Step 5": {
                "Step": "11 + 4 = 15 (left: 9 12 15) -> 15 - 12 = 3 (left: 3 9 15) -> 15 - 3 = 12 (left: 3 12) -> 12 - 3 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "3 12"
                }
            },
            "Step 6": {
                "Step": "11 + 4 = 15 (left: 9 12 15) -> 15 - 12 = 3 (left: 3 9 15) -> 15 - 3 = 12 (left: 3 12) -> 3 + 12 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "3 12"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "3 12"
                }
            },
            "Step 7": {
                "Step": "11 + 4 = 15 (left: 9 12 15) -> 15 - 12 = 3 (left: 3 9 15) -> 15 - 3 = 12 (left: 3 12) -> 12 - 3 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "3 12"
                }
            },
            "Step 8": {
                "Step": "11 + 4 = 15 (left: 9 12 15) -> 15 - 12 = 3 (left: 3 9 15) -> 15 - 3 = 12 (left: 3 12) -> 3 + 12 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "4 12"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "11 12 36"
                }
            },
            "Step 1": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 36 - 11 = 25 (left: 12 25)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 36 - 11 = 25 (left: 12 25) -> 25 - 12 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 3": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 / 11 = 1.090909 (left: 1.090909 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 / 11 = 1.090909 (left: 1.090909 13) -> 13 / 1.090909 = 11.9 (left: 11.9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "3 12"
                }
            },
            "Step 5": {
                "Step": "11 + 4 = 15 (left: 9 12 15) -> 15 - 12 = 3 (left: 3 9 15) -> 15 - 3 = 12 (left: 3 12) -> 12 - 3 = 9 (left: 9 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 + 4 = 15 (left: 9 12 15) -> 15 - 12 = 3 (left: 3 9 15) -> 15 - 3 = 12 (left: 3 12) -> 12 - 3 = 9 (left: 9 12) -> 12 - 9 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "3 12"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "3 12"
                }
            },
            "Step 7": {
                "Step": "11 + 4 = 15 (left: 9 12 15) -> 15 - 12 = 3 (left: 3 9 15) -> 15 - 3 = 12 (left: 3 12) -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 + 4 = 15 (left: 9 12 15) -> 15 - 12 = 3 (left: 3 9 15) -> 15 - 3 = 12 (left: 3 12) -> 12 / 3 = 4 (left: 4 12) -> 4 + 12 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "4 12"
                }
            }
        },
        "Input": "4 9 11 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "890": {
        "puzzle": "7 8 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 7 = 6 (left: 6 8 9)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 6 8 9) -> 6 * 8 = 48 (left: 9 48)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 6 8 9) -> 6 * 8 = 48 (left: 9 48) -> 9 * 48 = 432 (left: 432)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "4 4"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 7 8 4) -> 8 - 4 = 4 (left: 4 4) -> 4 - 4 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 7 8 4) -> 8 - 4 = 4 (left: 4 4) -> 4 - 4 = 0 (left: 0) -> There are no possible next steps since there is no input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 9 13"
                }
            },
            "Step 5": {
                "Step": "7 * 8 = 56 (left: 9 13 56)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 56 - 9 = 47 (left: 13 47)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "13 47"
                }
            },
            "Step 7": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 56 - 9 = 47 (left: 13 47) -> 13 * 47 = 611 (left: 611)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 56 - 9 = 47 (left: 13 47) -> 13 * 47 = 611 (left: 611) -> 1 + 1 = 2 (left: 6 2)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 + 8 = 15 (left: 9 13 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 9 13"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 7 8 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 7 8 4) -> 8 - 4 = 4 (left: 4 4)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "9 13 15"
                }
            },
            "Step 3": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 15 - 13 = 2 (left: 9 2)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 15 - 13 = 2 (left: 9 2) -> 9 - 2 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "0.5 8"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 4 8  -> 4 / 8 = 0.5 (left: 0.5 8) -> 8 - 0.5 = 7.5 (left: 7.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 4 8  -> 4 / 8 = 0.5 (left: 0.5 8) -> 8 - 0.5 = 7.5 (left: 7.5) -> 7.5 + 2 = 9.5 (left: 9.5)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "4 4"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "13 47"
                }
            },
            "Step 7": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 56 - 9 = 47 (left: 13 47) -> 47 + 13 = 60 (left: 60)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 56 - 9 = 47 (left: 13 47) -> 47 + 13 = 60 (left: 60) -> There is only one number given, so there are no possible next steps to perform.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 + 8 = 17 (left: 7 13 17)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 9 13"
                }
            },
            "Step 1": {
                "Step": "7 * 8 = 56 (left: 9 13 56)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 * 9 = 117 (left: 117 56)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 9 13"
                }
            },
            "Step 3": {
                "Step": "9 + 8 = 17 (left: 7 9 17)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 + 8 = 17 (left: 7 9 17) -> 7 / 9 = 0.777777",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "0.5 8"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 4 8  -> 4 / 8 = 0.5 (left: 0.5 8) -> 0.5 * 8 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 4 8  -> 4 / 8 = 0.5 (left: 0.5 8) -> 0.5 * 8 = 4 (left: 4) -> 4 + 4 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "13 47"
                }
            },
            "Step 7": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 56 - 9 = 47 (left: 13 47) -> 13 * 47 = 611 (left: 611)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 56 - 9 = 47 (left: 13 47) -> 13 * 47 = 611 (left: 611) -> 6 - 1 = 5 (left: 5 1 1)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 + 8 = 15 (left: 9 13 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 9 13"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 4 8 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 4 8  -> 4 / 8 = 0.5 (left: 0.5 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 9 13"
                }
            },
            "Step 3": {
                "Step": "9 + 8 = 17 (left: 7 13 17)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 + 8 = 17 (left: 7 13 17) -> 17 + 7 = 24 (left: 13 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "0.5 8"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 4 8  -> 4 / 8 = 0.5 (left: 0.5 8) -> 0.5 * 8 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 4 8  -> 4 / 8 = 0.5 (left: 0.5 8) -> 0.5 * 8 = 4 (left: 4) -> There are no possible next steps with just the number 4.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "13 47"
                }
            },
            "Step 7": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 56 - 9 = 47 (left: 13 47) -> 13 + 47 = 60 (left: 60)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 56 - 9 = 47 (left: 13 47) -> 13 + 47 = 60 (left: 60) -> There are no possible next steps for the number 60.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "9 - 8 = 1 (left: 7 1 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 9 13"
                }
            },
            "Step 1": {
                "Step": "7 * 8 = 56 (left: 9 13 56)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 56 / 13 = 4.3077 (left: 4.3077 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "0.5 8"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 4 8  -> 4 / 8 = 0.5 (left: 0.5 8) -> 8 / 0.5 = 16 (left: 16)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 4 8  -> 4 / 8 = 0.5 (left: 0.5 8) -> 8 / 0.5 = 16 (left: 16) -> No possible next steps as there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "13 24"
                }
            },
            "Step 5": {
                "Step": "9 + 8 = 17 (left: 7 13 17) -> 17 + 7 = 24 (left: 13 24) -> 13 * 24 = 312 (left: 312)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 8 = 17 (left: 7 13 17) -> 17 + 7 = 24 (left: 13 24) -> 13 * 24 = 312 (left: 312) -> 3 / 1 = 3 (left: 3 2)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "13 47"
                }
            },
            "Step 7": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 56 - 9 = 47 (left: 13 47) -> 47 - 13 = 34 (left: 34)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 56 - 9 = 47 (left: 13 47) -> 47 - 13 = 34 (left: 34) -> There are no possible next steps for the input 34 as it is a single number and not a mathematical expression.",
                "Pruning": null
            }
        },
        "Input": "7 8 9 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "891": {
        "puzzle": "2 6 12 12",
        "Agent 0": {
            "Step 0": {
                "Step": "6 * 2 = 12 (left: 12 12 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "2 12 12"
                }
            },
            "Step 1": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 + 12 = 14 (left: 12 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 + 12 = 14 (left: 12 14) -> 12 + 14 = 26 (left: 26)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "2 12 12"
                }
            },
            "Step 3": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 24)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 24) -> 12 * 24 = 288 (left: 288)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "2 12 12"
                }
            },
            "Step 5": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 12 - 2 = 10 (left: 10 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 12 - 2 = 10 (left: 10 12) -> 10 - 12 = -2 (left: -2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 * 2 = 12 (left: 12 12  -> 12 + 12 = 24 (left: 24) -> Answer: (6 * 2) + (12 + 12) = 24 -> Input: 3 3 5 8\nSteps:\n3 * 8 = 24 (left: 3 5 24)\n3 - 5 = -2 (left: -2 24)\n-2 + 24 = 22 (left: 22)\nAnswer: (3 * 8) - (5 - 3) = 24",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "24"
                }
            },
            "Step 8": {
                "Step": "6 * 2 = 12 (left: 12 12  -> 12 + 12 = 24 (left: 24) -> Answer: (6 * 2) + (12 + 12) = 24 -> Input: 3 4 5 6\nSteps:\n3 * 4 = 12 (left: 5 6 12)\n6 - 5 = 1 (left: 1 12)\n12 * 1 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((3 * 4) * (6 - 5)) * 2 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 / 6 = 2 (left: 2 2 ",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 2 "
                }
            },
            "Step 1": {
                "Step": "12 / 6 = 2 (left: 2 2  -> 2 / 2 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 6 = 2 (left: 2 2  -> 2 / 2 = 1 (left: 1) -> No possible next steps with only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 12 12"
                }
            },
            "Step 3": {
                "Step": "12 - 2 = 10 (left: 6 10 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 2 = 10 (left: 6 10 12) -> 10 / 6 = 1.6667",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "2 12 12"
                }
            },
            "Step 5": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 12 / 2 = 6 (left: 6 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 12 / 2 = 6 (left: 6 12) -> 6 + 12 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 * 2 = 12 (left: 12 12  -> 12 + 12 = 24 (left: 24) -> Answer: (6 * 2) + (12 + 12) = 24 -> Input: 3 3 6 8\nSteps:\n3 * 3 = 9 (left: 6 8 9)\n9 - 6 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (3 * 3) * (8 - 6) = 24",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "24"
                }
            },
            "Step 8": {
                "Step": "6 * 2 = 12 (left: 12 12  -> 12 + 12 = 24 (left: 24) -> Answer: (6 * 2) + (12 + 12) = 24 -> Input: 3 4 5 6\nSteps:\n4 + 6 = 10 (left: 3 5 10)\n3 * 5 = 15 (left: 10 15)\n15 - 10 = 5 (left: 5)\n5 * 5 = 25 (left: 25)\nAnswer: ((4 + 6) * (3 * 5)) - 10 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 / 6 = 2 (left: 2 12 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 2 "
                }
            },
            "Step 1": {
                "Step": "12 / 6 = 2 (left: 2 2  -> 2 + 2 = 4",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 6 = 2 (left: 2 2  -> 2 + 2 = 4 -> 2 + 2 - 2 = 2 (left: 2 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "2 12 12"
                }
            },
            "Step 3": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 12 / 2 = 6 (left: 6 12 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 12 / 2 = 6 (left: 6 12 12) -> 6 + 12 = 18 (left: 12 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "12 12 "
                }
            },
            "Step 5": {
                "Step": "6 * 2 = 12 (left: 12 12  -> 12 + 12 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 2 = 12 (left: 12 12  -> 12 + 12 = 24 (left: 24) -> Answer: (6 * 2) + (12 + 12) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 * 2 = 12 (left: 12 12  -> 12 + 12 = 24 (left: 24) -> Answer: (6 * 2) + (12 + 12) = 24 -> Input: 3 3 7 8\nSteps:\n3 * 3 = 9 (left: 7 8 9)\n9 - 7 = 2 (left: 2 8)\n2 * 8 = 16 (left: 16)\n16 + 8 = 24 (left: 24)\nAnswer: ((3 * 3) - 7) * 8 = 24",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "24"
                }
            },
            "Step 8": {
                "Step": "6 * 2 = 12 (left: 12 12  -> 12 + 12 = 24 (left: 24) -> Answer: (6 * 2) + (12 + 12) = 24 -> Input: 3 3 3 4\nSteps:\n3 * 4 = 12 (left: 3 3 12)\n3 + 3 = 6 (left: 6 12)\n6 * 4 = 24 (left: 24)\nAnswer: (3 * 4) * (3 + 3) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 * 2 = 12 (left: 12 12 ",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "2 12 12"
                }
            },
            "Step 1": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 12 - 2 = 10 (left: 10 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 12 - 2 = 10 (left: 10 12) -> 10 * 12 = 120 (left: 120)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "2 12 12"
                }
            },
            "Step 3": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 12 / 12 = 1 (left: 1",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 12 / 12 = 1 (left: 1 -> 1 - 1 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "12 12 "
                }
            },
            "Step 5": {
                "Step": "6 * 2 = 12 (left: 12 12  -> 12 + 12 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 2 = 12 (left: 12 12  -> 12 + 12 = 24 (left: 24) -> Answer: (6 * 2) + (12 + 12) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 * 2 = 12 (left: 12 12  -> 12 + 12 = 24 (left: 24) -> Answer: (6 * 2) + (12 + 12) = 24 -> Input: 3 6 7 9\nSteps:\n3 * 7 = 21 (left: 6 9 21)\n6 - 9 = -3 (left: -3 21)\n21 + (-3) = 18 (left: 18)\n18 + 9 = 27 (left: 27)\n27 - 6 = 21 (left: 21)\n21 + 21 = 42 (left: 42)\n42 /",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "24"
                }
            },
            "Step 8": {
                "Step": "6 * 2 = 12 (left: 12 12  -> 12 + 12 = 24 (left: 24) -> Answer: (6 * 2) + (12 + 12) = 24 -> Input: 3 3 7 8\nSteps:\n3 * 7 = 21 (left: 3 8 21)\n21 - 3 = 18 (left: 8 18)\n18 / 8 = 2.25 (left: 2.25)\n2.25 * 24 = 24 (left: 24)\nAnswer: ((3 * 7) - 3) / 8 * 24 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 / 2 = 6 (left: 6 12 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 12 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 6 12 12) -> 12 - 6 = 6 (left: 6 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 6 12 12) -> 12 - 6 = 6 (left: 6 12) -> 6 + 12 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 2 "
                }
            },
            "Step 3": {
                "Step": "12 / 6 = 2 (left: 2 2  -> 2 + 2 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 / 6 = 2 (left: 2 2  -> 2 + 2 = 4 (left: 4) -> 4 + 4 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "2 12 12"
                }
            },
            "Step 5": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 12 - 2 = 10 (left: 10 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 12 - 2 = 10 (left: 10 12) -> 10 / 12 = 0.8333 (left: 0.8333)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 * 2 = 12 (left: 12 12  -> 12 + 12 = 24 (left: 24) -> Answer: (6 * 2) + (12 + 12) = 24 -> Input: 3 3 4 5\nSteps:\n3 + 5 = 8 (left: 3 4 8)\n3 + 4 = 7 (left: 7 8)\n7 * 8 = 56 (left: 56)\n56 / 2 = 28 (left: 28)\n28 / 7 = 4 (left: 4)\n4 * 6 = 24 (left: 24)\nAnswer: ((",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "24"
                }
            },
            "Step 8": {
                "Step": "6 * 2 = 12 (left: 12 12  -> 12 + 12 = 24 (left: 24) -> Answer: (6 * 2) + (12 + 12) = 24 -> Input: 3 3 5 7\nSteps:\n3 + 7 = 10 (left: 3 5 10)\n10 - 5 = 5 (left: 3 5)\n5 * 3 = 15 (left: 15)\n15 + 9 = 24 (left: 24)\nAnswer: (3 + 7) * (5 + 3) = 24",
                "Pruning": "NA"
            }
        },
        "Input": "2 6 12 12",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "892": {
        "puzzle": "3 4 5 6",
        "Agent 0": {
            "Step 0": {
                "Step": "3 * 4 = 12 (left: 5 6 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 6 20"
                }
            },
            "Step 1": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 20 - 3 = 17 (left: 6 17)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 20 - 3 = 17 (left: 6 17) -> 6 + 17 = 23 (left: 23)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 5 6"
                }
            },
            "Step 3": {
                "Step": "4 + 5 = 9 (left: 3 6 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 5 = 9 (left: 3 6 9) -> 3 * 6 = 18 (left: 18 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "3.67 4 11"
                }
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 3 4 11) -> 11 / 3 = 3.67 (left: 3.67 4 11) -> 11 - 4 = 7 (left: 3.67 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 3 4 11) -> 11 / 3 = 3.67 (left: 3.67 4 11) -> 11 - 4 = 7 (left: 3.67 7) -> 7 / 3.67 = 1.91 (left: 1.91 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "3.33 7"
                }
            },
            "Step 7": {
                "Step": "5 + 6 = 11 (left: 3 4 11) -> 11 / 3 = 3.67 (left: 3.67 4 11) -> 11 - 4 = 7 (left: 3.67 7) -> 7 - 3.67 = 3.33 (left: 3.33 7) -> 3.33 + 7 = 10.33 (left: 10.33)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "3.33 7"
                }
            },
            "Step 8": {
                "Step": "5 + 6 = 11 (left: 3 4 11) -> 11 / 3 = 3.67 (left: 3.67 4 11) -> 11 - 4 = 7 (left: 3.67 7) -> 7 - 3.67 = 3.33 (left: 3.33 7) -> 7 - 3.33 = 3.67 (left: 3.67)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "3.33 7"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 5 = 20 (left: 3 6 20)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 6 20"
                }
            },
            "Step 1": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 3 * 6 = 18 (left: 18 20)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 3 * 6 = 18 (left: 18 20) -> 18 + 20 = 38 (left: 38)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 5 6"
                }
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 3 4 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 3 4 11) -> 11 / 3 = 3.67 (left: 3.67 4 11)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "3.67 4 11"
                }
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 3 4 11) -> 11 / 3 = 3.67 (left: 3.67 4 11) -> 11 - 4 = 7 (left: 3.67 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 3 4 11) -> 11 / 3 = 3.67 (left: 3.67 4 11) -> 11 - 4 = 7 (left: 3.67 7) -> 7 - 3.67 = 3.33 (left: 3.33 7)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "3.33 7"
                }
            },
            "Step 7": {
                "Step": "5 + 6 = 11 (left: 3 4 11) -> 11 / 3 = 3.67 (left: 3.67 4 11) -> 11 - 4 = 7 (left: 3.67 7) -> 7 - 3.67 = 3.33 (left: 3.33 7) -> 7 - 3.33 = 3.67 (left: 3.67)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "3.33 7"
                }
            },
            "Step 8": {
                "Step": "5 + 6 = 11 (left: 3 4 11) -> 11 / 3 = 3.67 (left: 3.67 4 11) -> 11 - 4 = 7 (left: 3.67 7) -> 7 - 3.67 = 3.33 (left: 3.33 7) -> 3.33 + 7 = 10.33 (left: 10.33)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "3.33 7"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 * 5 = 20 (left: 3 6 20)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 6 20"
                }
            },
            "Step 1": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 6 + 3 = 9 (left: 9 20)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 6 + 3 = 9 (left: 9 20) -> 20 - 9 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 6 20"
                }
            },
            "Step 3": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 20 - 6 = 14 (left: 3 14)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 20 - 6 = 14 (left: 3 14) -> 3 * 14 = 42 (left: 42)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "3.67 4 11"
                }
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 3 4 11) -> 11 / 3 = 3.67 (left: 3.67 4 11) -> 11 / ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 3 4 11) -> 11 / 3 = 3.67 (left: 3.67 4 11) -> 11 /  -> 11 / 8 = 1 remainder 3 (left: 1 3)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "3.67 4 11"
                }
            },
            "Step 7": {
                "Step": "5 + 6 = 11 (left: 3 4 11) -> 11 / 3 = 3.67 (left: 3.67 4 11) -> 11 / 4 = 2.75 (left: 2.75 11)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 6 = 11 (left: 3 4 11) -> 11 / 3 = 3.67 (left: 3.67 4 11) -> 11 / 4 = 2.75 (left: 2.75 11) -> 2.75 + 11 = 13.75 (left: 13.75)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "3.33 7"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 3 4 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 5 6"
                }
            },
            "Step 1": {
                "Step": "3 * 4 = 12 (left: 5 6 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 4 = 12 (left: 5 6 12) -> 6 * 5 = 30 (left: 30 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "6.67 13.33"
                }
            },
            "Step 3": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 20 / 3 = 6.67 (left: 6.67 20) -> 20 - 6.67 = 13.33 (left: 6.67 13.33) -> 13.33 / 6.67 = 1.995 (left: 1.995)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "6.67 13.33"
                }
            },
            "Step 4": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 20 / 3 = 6.67 (left: 6.67 20) -> 20 - 6.67 = 13.33 (left: 6.67 13.33) -> 6.67 + 13.33 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "6.67 13.33"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "3.67 4 11"
                }
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 3 4 11) -> 11 / 3 = 3.67 (left: 3.67 4 11) -> 4 / ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 3 4 11) -> 11 / 3 = 3.67 (left: 3.67 4 11) -> 4 /  -> 4 / 8 = 0.5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "6.67 13.33"
                }
            },
            "Step 7": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 20 / 3 = 6.67 (left: 6.67 20) -> 20 - 6.67 = 13.33 (left: 6.67 13.33) -> 6.67 + 13.33 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "3.33 7"
                }
            },
            "Step 8": {
                "Step": "5 + 6 = 11 (left: 3 4 11) -> 11 / 3 = 3.67 (left: 3.67 4 11) -> 11 - 4 = 7 (left: 3.67 7) -> 7 - 3.67 = 3.33 (left: 3.33 7) -> 7 / 3.33 = 2.102 (left: 2.102)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "3.33 7"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 * 5 = 20 (left: 3 6 20)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 6 20"
                }
            },
            "Step 1": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 20 / 3 = 6.67 (left: 6.67 20)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 20 / 3 = 6.67 (left: 6.67 20) -> 20 - 6.67 = 13.33 (left: 6.67 13.33)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "6.67 13.33"
                }
            },
            "Step 3": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 20 / 3 = 6.67 (left: 6.67 20) -> 20 - 6.67 = 13.33 (left: 6.67 13.33) -> 13.33 - 6.67 = 6.66 (left: 6.66)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "6.67 13.33"
                }
            },
            "Step 4": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 20 / 3 = 6.67 (left: 6.67 20) -> 20 - 6.67 = 13.33 (left: 6.67 13.33) -> 6.67 + 13.33 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "6.67 13.33"
                },
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "3.67 4 11"
                }
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 3 4 11) -> 11 / 3 = 3.67 (left: 3.67 4 11) -> 11 - 4 = 7 (left: 3.67 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 3 4 11) -> 11 / 3 = 3.67 (left: 3.67 4 11) -> 11 - 4 = 7 (left: 3.67 7) -> 7 - 3.67 = 3.33 (left: 3.33 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "3.33 7"
                }
            },
            "Step 7": {
                "Step": "5 + 6 = 11 (left: 3 4 11) -> 11 / 3 = 3.67 (left: 3.67 4 11) -> 11 - 4 = 7 (left: 3.67 7) -> 7 - 3.67 = 3.33 (left: 3.33 7) -> 7 - 3.33 = 3.67 (left: 3.67)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "6.67 13.33"
                }
            },
            "Step 8": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 20 / 3 = 6.67 (left: 6.67 20) -> 20 - 6.67 = 13.33 (left: 6.67 13.33) -> 6.67 + 13.33 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "3.33 7"
                }
            }
        },
        "Input": "3 4 5 6",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "893": {
        "puzzle": "6 10 12 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 6 10 ",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "12 16 12"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 16 - 12 = 4 (left: 12 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 16 - 12 = 4 (left: 12 4) -> 12 - 4 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "0 16"
                }
            },
            "Step 3": {
                "Step": "6 + 10 = 16 (left: 12 12 16) -> 12 - 12 = 0 (left: 0 16) -> 16 / 0 = undefined (left: 0 16)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 10 = 16 (left: 12 12 16) -> 12 - 12 = 0 (left: 0 16) -> 16 / 0 = undefined (left: 0 16) -> 4 + 4 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "0 16"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "2304"
                }
            },
            "Step 5": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 * 16 = 192 (left: 192 12) -> 192 * 12 = 2304 (left: 2304) -> 2 + 3 + 0 + 4 = 9",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 * 16 = 192 (left: 192 12) -> 192 * 12 = 2304 (left: 2304) -> 2 + 3 + 0 + 4 = 9 -> 3 + 4 = 7 (left: 2 + 7 = 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "2304"
                }
            },
            "Step 7": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 * 16 = 192 (left: 192 12) -> 192 * 12 = 2304 (left: 2304) -> 2 + 3 + 0 + 4 = 9",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 * 16 = 192 (left: 192 12) -> 192 * 12 = 2304 (left: 2304) -> 2 + 3 + 0 + 4 = 9 -> 2 + 3 = 5 (left: 5 + 4 = 9)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 / 2 = 6 (left: 6 10 ",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "12 16 12"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 28 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 28 12) -> 28 / 12 = 2.33 (left: 2.33)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "0 16"
                }
            },
            "Step 3": {
                "Step": "6 + 10 = 16 (left: 12 12 16) -> 12 - 12 = 0 (left: 0 16) -> 16 - 0 = 16 (left: 16)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 10 = 16 (left: 12 12 16) -> 12 - 12 = 0 (left: 0 16) -> 16 - 0 = 16 (left: 16) -> 16 + 16 = 32",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "0 16"
                }
            },
            "Step 5": {
                "Step": "6 + 10 = 16 (left: 12 12 16) -> 12 - 12 = 0 (left: 0 16) -> 16 / 0 = undefined",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 10 = 16 (left: 12 12 16) -> 12 - 12 = 0 (left: 0 16) -> 16 / 0 = undefined -> Division by zero is undefined.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "2304"
                }
            },
            "Step 7": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 * 16 = 192 (left: 192 12) -> 192 * 12 = 2304 (left: 2304) -> 2 + 3 + 0 + 4 = 9",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 * 16 = 192 (left: 192 12) -> 192 * 12 = 2304 (left: 2304) -> 2 + 3 + 0 + 4 = 9 -> 2 + 3 + 0 = 5 (left: 5 + 4 = 9)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "12 16 12"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 12 28)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 12 28) -> 12 * 28 = 336 (left: 336)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "12 16 12"
                }
            },
            "Step 3": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 * 16 = 192 (left: 192 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 * 16 = 192 (left: 192 12) -> 192 * 12 = 2304 (left: 2304)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "0 16"
                }
            },
            "Step 5": {
                "Step": "6 + 10 = 16 (left: 12 12 16) -> 12 - 12 = 0 (left: 0 16) -> 16 - 16 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 10 = 16 (left: 12 12 16) -> 12 - 12 = 0 (left: 0 16) -> 16 - 16 = 0 (left: 0) -> There are no possible next steps with the input 0.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "0 16"
                }
            },
            "Step 7": {
                "Step": "6 + 10 = 16 (left: 12 12 16) -> 12 - 12 = 0 (left: 0 16) -> 16 - 0 = 16 (left: 16)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 10 = 16 (left: 12 12 16) -> 12 - 12 = 0 (left: 0 16) -> 16 - 0 = 16 (left: 16) -> 16 / 2 = 8",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 + 10 = 16 (left: 12 16 12)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "12 16 12"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 28 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 28 12) -> 28 + 12 = 40 (left: 40)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "0 16"
                }
            },
            "Step 3": {
                "Step": "6 + 10 = 16 (left: 12 12 16) -> 12 - 12 = 0 (left: 0 16) -> 0 + 16 = 16 (left: 16)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 10 = 16 (left: 12 12 16) -> 12 - 12 = 0 (left: 0 16) -> 0 + 16 = 16 (left: 16) -> 16 - 8 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "0 16"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "0 16"
                }
            },
            "Step 5": {
                "Step": "6 + 10 = 16 (left: 12 12 16) -> 12 - 12 = 0 (left: 0 16) -> 16 * 0 = 0 (left: 0 16)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 10 = 16 (left: 12 12 16) -> 12 - 12 = 0 (left: 0 16) -> 16 * 0 = 0 (left: 0 16) -> 0 - 16 = -16 (left: -16)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "2304"
                },
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "0 16"
                }
            },
            "Step 7": {
                "Step": "6 + 10 = 16 (left: 12 12 16) -> 12 - 12 = 0 (left: 0 16) -> 16 - 0 = 16 (left: 16)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 10 = 16 (left: 12 12 16) -> 12 - 12 = 0 (left: 0 16) -> 16 - 0 = 16 (left: 16) -> None, as there is only one number left.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 10 = 16 (left: 12 16 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 10 12 12"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 12 12 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 10 = 16 (left: 12 12 16) -> 12 - 12 = 0 (left: 0 16)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "0 16"
                }
            },
            "Step 3": {
                "Step": "6 + 10 = 16 (left: 12 12 16) -> 12 - 12 = 0 (left: 0 16) -> 0 + 16 = 16 (left: 16)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 10 = 16 (left: 12 12 16) -> 12 - 12 = 0 (left: 0 16) -> 0 + 16 = 16 (left: 16) -> There are no possible next steps with just one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "2304"
                }
            },
            "Step 5": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 * 16 = 192 (left: 192 12) -> 192 * 12 = 2304 (left: 2304) -> 2 + 3 + 0 + 4 = 9",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 * 16 = 192 (left: 192 12) -> 192 * 12 = 2304 (left: 2304) -> 2 + 3 + 0 + 4 = 9 -> 3 + 0 = 3 + 4 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "2304"
                }
            },
            "Step 7": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 * 16 = 192 (left: 192 12) -> 192 * 12 = 2304 (left: 2304) -> 2 + 3 + 0 + 4 = 9",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 * 16 = 192 (left: 192 12) -> 192 * 12 = 2304 (left: 2304) -> 2 + 3 + 0 + 4 = 9 -> 2 + 3 = 5 (left: 5 + 4 = 9)",
                "Pruning": null
            }
        },
        "Input": "6 10 12 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "894": {
        "puzzle": "5 5 5 9",
        "Agent 0": {
            "Step 0": {
                "Step": "5 / 5 = 1 (left: 1 5 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "5 10 9"
                }
            },
            "Step 1": {
                "Step": "5 + 5 = 10 (left: 5 10 9) -> 5 * 10 = 50 (left: 9 50)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 5 = 10 (left: 5 10 9) -> 5 * 10 = 50 (left: 9 50) -> 9 * 50 = 450 (left: 450)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "10 14"
                }
            },
            "Step 3": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 5 + 9 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 5 + 9 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24) -> Answer: ((5 + 5) + (5 + 9)) = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 - 5 = 4 (left: 5 5 4)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 5 9"
                }
            },
            "Step 1": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> Input: 3 7",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> Input: 3 7 -> 7 - 3 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "10 14"
                }
            },
            "Step 3": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 5 + 9 = 14 (left: 10 14) -> 10 * 14 = 140 (left: 140)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 5 + 9 = 14 (left: 10 14) -> 10 * 14 = 140 (left: 140) -> No possible next steps with the given input."
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 + 5 = 10 (left: 5 10 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 5 9"
                }
            },
            "Step 1": {
                "Step": "5 * 5 = 25 (left: 25 5 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 5 = 25 (left: 25 5 9) -> 25 / 9 = 2.7777777777777777 (left: 2.777777777777777",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "10 14"
                }
            },
            "Step 3": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 5 + 9 = 14 (left: 10 14) -> 10 - 14 = -4 (left: -4 14)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 5 + 9 = 14 (left: 10 14) -> 10 - 14 = -4 (left: -4 14) -> -4 / 14 = -0.2857 (left: -0.2857)"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 / 5 = 1 (left: 1 5 9)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 5 9"
                }
            },
            "Step 1": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> 9 - 5 = 4 (left: 1 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> 9 - 5 = 4 (left: 1 4) -> 4 - 1 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "10 14"
                }
            },
            "Step 3": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 5 + 9 = 14 (left: 10 14) -> 10 * 14 = 140 (left: 140)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 5 + 9 = 14 (left: 10 14) -> 10 * 14 = 140 (left: 140) -> 4. 14 * 2 = 28 (left: 10 28)"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 + 5 = 10 (left: 5 10 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 5 9"
                }
            },
            "Step 1": {
                "Step": "5 + 5 = 10 (left: 10 5 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 5 + 9 = 14 (left: 10 14)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "10 14"
                }
            },
            "Step 3": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 5 + 9 = 14 (left: 10 14) -> 10 - 14 = -4 (left: -4)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 5 + 9 = 14 (left: 10 14) -> 10 - 14 = -4 (left: -4) -> There are no possible next steps with the input of -4."
            }
        },
        "Input": "5 5 5 9",
        "Verifications": [
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "895": {
        "puzzle": "5 5 6 11",
        "Agent 0": {
            "Step 0": {
                "Step": "5 + 5 = 10 (left: 6 10 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 5 "
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 5  -> 5 / 1 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 5  -> 5 / 1 = 5 (left: 5) -> There are no possible next steps with just the number 5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 10 11"
                }
            },
            "Step 3": {
                "Step": "5 + 5 = 10 (left: 6 10 11) -> 11 - 6 = 5 (left: 5 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 5 = 10 (left: 6 10 11) -> 11 - 6 = 5 (left: 5 11) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "0 5"
                }
            },
            "Step 5": {
                "Step": "5 - 5 = 0 (left: 0 6 11) -> 11 - 6 = 5 (left: 0 5) -> 0 + 5 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 - 5 = 0 (left: 0 6 11) -> 11 - 6 = 5 (left: 0 5) -> 0 + 5 = 5 (left: 5) -> There are no possible next steps with the input: 5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "0 5"
                }
            },
            "Step 7": {
                "Step": "5 - 5 = 0 (left: 0 6 11) -> 11 - 6 = 5 (left: 0 5) -> 0 + 5 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 - 5 = 0 (left: 0 6 11) -> 11 - 6 = 5 (left: 0 5) -> 0 + 5 = 5 (left: 5) -> There is only one possible next step:",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 * 5 = 25 (left: 6 11 25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 5 "
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 5  -> 1 * 5 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 5  -> 1 * 5 = 5 (left: 5) -> There is not enough information to determine the next steps without additional numbers or operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 6 11"
                }
            },
            "Step 3": {
                "Step": "5 - 5 = 0 (left: 0 6 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 - 5 = 0 (left: 0 6 11) -> 11 - 6 = 5 (left: 0 5)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "0 5"
                }
            },
            "Step 5": {
                "Step": "5 - 5 = 0 (left: 0 6 11) -> 11 - 6 = 5 (left: 0 5) -> 5 - 0 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 - 5 = 0 (left: 0 6 11) -> 11 - 6 = 5 (left: 0 5) -> 5 - 0 = 5 (left: 5) -> There are no possible next steps with just the number 5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "0 5"
                }
            },
            "Step 7": {
                "Step": "5 - 5 = 0 (left: 0 6 11) -> 11 - 6 = 5 (left: 0 5) -> 0 / 5 = 0.0 (left: 0.0)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 - 5 = 0 (left: 0 6 11) -> 11 - 6 = 5 (left: 0 5) -> 0 / 5 = 0.0 (left: 0.0) -> There are no possible next steps with the input 0.0.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 5 = 11 (left: 5 11 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 6 11"
                }
            },
            "Step 1": {
                "Step": "5 + 5 = 10 (left: 6 10 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 5 = 10 (left: 6 10 11) -> 10 / 6 = 1.67 (left: 1.67 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 6 11"
                }
            },
            "Step 3": {
                "Step": "6 - 5 = 1 (left: 1 5 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 - 5 = 1 (left: 1 5  -> 5 / 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "0 5"
                }
            },
            "Step 5": {
                "Step": "5 - 5 = 0 (left: 0 6 11) -> 11 - 6 = 5 (left: 0 5) -> 5 - 0 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 - 5 = 0 (left: 0 6 11) -> 11 - 6 = 5 (left: 0 5) -> 5 - 0 = 5 (left: 5) -> 5 * 5 = 25 (left: 25)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "0 5"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "0 5"
                }
            },
            "Step 7": {
                "Step": "5 - 5 = 0 (left: 0 6 11) -> 11 - 6 = 5 (left: 0 5) -> 5 / 0 is undefined.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 - 5 = 0 (left: 0 6 11) -> 11 - 6 = 5 (left: 0 5) -> 5 / 0 is undefined. -> Division by zero is undefined. No valid next steps.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 - 5 = 1 (left: 1 5 ",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 5 "
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 5  -> 5 - 1 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 5  -> 5 - 1 = 4 (left: 4) -> 4 + 4 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 5 "
                }
            },
            "Step 3": {
                "Step": "6 - 5 = 1 (left: 1 5  -> 1 * 5 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 - 5 = 1 (left: 1 5  -> 1 * 5 = 5 (left: 5) -> 5 / 5 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "0 5"
                }
            },
            "Step 5": {
                "Step": "5 - 5 = 0 (left: 0 6 11) -> 11 - 6 = 5 (left: 0 5) -> 5 * 0 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 - 5 = 0 (left: 0 6 11) -> 11 - 6 = 5 (left: 0 5) -> 5 * 0 = 0 (left: 0) -> There are no possible next steps with the input of 0.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "0 5"
                }
            },
            "Step 7": {
                "Step": "5 - 5 = 0 (left: 0 6 11) -> 11 - 6 = 5 (left: 0 5) -> 0 - 5 = -5 (left: -5)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 - 5 = 0 (left: 0 6 11) -> 11 - 6 = 5 (left: 0 5) -> 0 - 5 = -5 (left: -5) -> There are no possible next steps with the input of -5.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 + 5 = 10 (left: 6 10 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 5 "
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 5  -> 1 * 5 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 5  -> 1 * 5 = 5 (left: 5) -> 5 * 5 = 25 (left: 25)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 6 11"
                }
            },
            "Step 3": {
                "Step": "5 * 5 = 25 (left: 6 25 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 5 = 25 (left: 6 25 11) -> 6 + 25 = 31 (left: 11 31)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "0 5"
                }
            },
            "Step 5": {
                "Step": "5 - 5 = 0 (left: 0 6 11) -> 11 - 6 = 5 (left: 0 5) -> 0 * 5 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 - 5 = 0 (left: 0 6 11) -> 11 - 6 = 5 (left: 0 5) -> 0 * 5 = 0 (left: 0) -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "0 5"
                }
            },
            "Step 7": {
                "Step": "5 - 5 = 0 (left: 0 6 11) -> 11 - 6 = 5 (left: 0 5) -> 5 / 0 = undefined",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 - 5 = 0 (left: 0 6 11) -> 11 - 6 = 5 (left: 0 5) -> 5 / 0 = undefined -> Division by zero is undefined in mathematics.",
                "Pruning": null
            }
        },
        "Input": "5 5 6 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "896": {
        "puzzle": "6 8 9 9",
        "Agent 0": {
            "Step 0": {
                "Step": "6 + 8 = 14 (left: 9 9 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 9"
                }
            },
            "Step 1": {
                "Step": "6 * 8 = 48 (left: 9 9 48)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 8 = 48 (left: 9 9 48) -> 9 * 9 = 81 (left: 48 81)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 1 9"
                }
            },
            "Step 3": {
                "Step": "9 - 8 = 1 (left: 6 1 9) -> Input: 4 4 2 3",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 8 = 1 (left: 6 1 9) -> Input: 4 4 2 3 -> 4 / 2 = 2 (left: 4 2 3)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "9 27"
                }
            },
            "Step 5": {
                "Step": "9 - 6 = 3 (left: 3 9 9) -> 3 * 9 = 27 (left: 9 27) -> 9 + 27 = 36 (left: 36)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 6 = 3 (left: 3 9 9) -> 3 * 9 = 27 (left: 9 27) -> 9 + 27 = 36 (left: 36) -> 36 - 8 = 28",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "4 2 3"
                }
            },
            "Step 7": {
                "Step": "9 - 8 = 1 (left: 6 1 9) -> Input: 4 4 2 3 -> 4 / 2 = 2 (left: 4 2 3) -> 4 - 2 = 2 (left: 2 3)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 8 = 1 (left: 6 1 9) -> Input: 4 4 2 3 -> 4 / 2 = 2 (left: 4 2 3) -> 4 - 2 = 2 (left: 2 3) -> 2 ^ 3 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "There are no possible next steps with the input 18."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 / 6 = 1.33 (left: 1.",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 9"
                }
            },
            "Step 1": {
                "Step": "6 + 8 = 14 (left: 9 9 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 8 = 14 (left: 9 9 14) -> 9 * 9 = 81 (left: 14 81)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 9"
                }
            },
            "Step 3": {
                "Step": "9 / 6 = 1.5 (left: 1.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 / 6 = 1.5 (left: 1. -> 1 + 1 = 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "4 2 3"
                }
            },
            "Step 5": {
                "Step": "9 - 8 = 1 (left: 6 1 9) -> Input: 4 4 2 3 -> 4 / 2 = 2 (left: 4 2 3) -> 4 / 2 = 2 (left: 2 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 8 = 1 (left: 6 1 9) -> Input: 4 4 2 3 -> 4 / 2 = 2 (left: 4 2 3) -> 4 / 2 = 2 (left: 2 3) -> 2 + 3 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "9 27"
                },
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "9 27"
                }
            },
            "Step 7": {
                "Step": "9 - 6 = 3 (left: 3 9 9) -> 3 * 9 = 27 (left: 9 27) -> 27 / 9 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 6 = 3 (left: 3 9 9) -> 3 * 9 = 27 (left: 9 27) -> 27 / 9 = 3 (left: 3) -> 8 - 3 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "36 - 8 = 28"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 + 6 = 15 (left: 8 9 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 9"
                }
            },
            "Step 1": {
                "Step": "9 + 6 = 15 (left: 8 9 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 15 - 8 = 7 (left: 8 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 15"
                }
            },
            "Step 3": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 9 - 8 = 1 (left: 1 15) -> 1 + 15 = 16 (left: 15 16)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 9 - 8 = 1 (left: 1 15) -> 1 + 15 = 16 (left: 15 16) -> 15 + 16 = 31 (left: 31)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "8 9 15"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "9 27"
                }
            },
            "Step 5": {
                "Step": "9 - 6 = 3 (left: 3 9 9) -> 3 * 9 = 27 (left: 9 27) -> 27 - 9 = 18 (left: 18)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 6 = 3 (left: 3 9 9) -> 3 * 9 = 27 (left: 9 27) -> 27 - 9 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "9 27"
                }
            },
            "Step 7": {
                "Step": "9 - 6 = 3 (left: 3 9 9) -> 3 * 9 = 27 (left: 9 27) -> 9 * 27 = 243 (left: 243)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 6 = 3 (left: 3 9 9) -> 3 * 9 = 27 (left: 9 27) -> 9 * 27 = 243 (left: 243) -> 3 + 2 = 5 (left: 2 5)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 8 = 1 (left: 6 1 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 9"
                }
            },
            "Step 1": {
                "Step": "9 + 6 = 15 (left: 8 9 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 9 - 8 = 1 (left: 1 15)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 9"
                }
            },
            "Step 3": {
                "Step": "9 - 6 = 3 (left: 3 9 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 6 = 3 (left: 3 9 9) -> 3 * 9 = 27 (left: 9 27)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "4 2 3"
                }
            },
            "Step 5": {
                "Step": "9 - 8 = 1 (left: 6 1 9) -> Input: 4 4 2 3 -> 4 / 2 = 2 (left: 4 2 3) -> 2 * 3 = 6 (left: 4 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 8 = 1 (left: 6 1 9) -> Input: 4 4 2 3 -> 4 / 2 = 2 (left: 4 2 3) -> 2 * 3 = 6 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "9 27"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "9 27"
                }
            },
            "Step 7": {
                "Step": "9 - 6 = 3 (left: 3 9 9) -> 3 * 9 = 27 (left: 9 27) -> 15 + 5 =",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 6 = 3 (left: 3 9 9) -> 3 * 9 = 27 (left: 9 27) -> 15 + 5 = -> 15 + 5 = 20",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "9 - 8 = 1 (left: 6 1 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 9 15"
                }
            },
            "Step 1": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 9 / 8 = 1.125 (left: 1.125 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 9 / 8 = 1.125 (left: 1.125 15) -> 15 - 1.125 = 13.875 (left: 13.875)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 15"
                }
            },
            "Step 3": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 9 - 8 = 1 (left: 1 15) -> 1 * 15 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 9 - 8 = 1 (left: 1 15) -> 1 * 15 = 15 (left: 15) -> 15 / 8 = 1.875 (left: 8)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "1 15"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "9 27"
                }
            },
            "Step 5": {
                "Step": "9 - 6 = 3 (left: 3 9 9) -> 3 * 9 = 27 (left: 9 27) -> 4 + 10 = 14 (left: 14 20)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 6 = 3 (left: 3 9 9) -> 3 * 9 = 27 (left: 9 27) -> 4 + 10 = 14 (left: 14 20) -> 20 - 14 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "9 27"
                },
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "9 27"
                }
            },
            "Step 7": {
                "Step": "9 - 6 = 3 (left: 3 9 9) -> 3 * 9 = 27 (left: 9 27) -> 9 + 27 = 36 (left: 27)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 6 = 3 (left: 3 9 9) -> 3 * 9 = 27 (left: 9 27) -> 9 + 27 = 36 (left: 27) -> 27 / 2 = 13.5 (left: 13.5 27)",
                "Pruning": null
            }
        },
        "Input": "6 8 9 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "897": {
        "puzzle": "3 3 6 13",
        "Agent 0": {
            "Step 0": {
                "Step": "6 * 3 = 18 (left: 18 6 ",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "18 6 "
                }
            },
            "Step 1": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 4 5\nSteps:\n2 * 5 = 10 (left: 3 4 10)\n4 - 3 = 1 (left: 1 10)\n10 * 1 = 10 (left: 10)\n10 + 10 = 20 (left: 20)\n20 + 4 = 24 (left: 24)\nAnswer: ((2 * 5) + (4 - 3)) *",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "18 6 "
                }
            },
            "Step 4": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 - 6 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 5 7\nSteps:\n3 + 7 = 10 (left: 2 5 10)\n2 * 5 = 10 (left: 10 10)\n10 * 10 = 100 (left: 100)\n100 / 4 = 24 (left: 24)\nAnswer: ((2 * 5) + (3 + 7)) / 4 = 24",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 4 6\nSteps:\n3 * 4 = 12 (left: 2 6 12)\n6 * 2 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (3 * 4) + (6 * 2) = 24",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (3 * 6) + (13 - 3) = 24 -> Input: 1 2 3 8\nSteps:\n2 * 8 = 16 (left: 1 3 16)\n16 - 3 = 13 (left: 1 13)\n13 + 1 = 14 (left: 14)\n14 * 2 = 28 (left: 28)\n28 - 14 = 14 (left: 14)\n14 + 3 = 17 (left: 17)\n17 * ",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "24"
                }
            },
            "Step 8": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (3 * 6) + (13 - 3) = 24 -> Input: 7 3 5 2\nSteps:\n7 - 2 = 5 (left: 3 5 5)\n5 * 5 = 25 (left: 3 25)\n25 - 3 = 22 (left: 22)\nAnswer: ((7 - 2) * 5) - 3 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 3 7 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "9 6 13"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 + 6 = 15 (left: 15 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 + 6 = 15 (left: 15 13) -> 15 * 13 = 195 (left: 195)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 4 6\nSteps:\n2 * 6 = 12 (left: 3 4 12)\n4 * 3 = 12 (left: 12 12)\n12 * 12 = 24 (left: 24)\nAnswer: (2 * 6) * (4 * 3) = 24",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "24"
                }
            },
            "Step 4": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 5 7\nSteps:\n5 * 7 = 35 (left: 2 3 35)\n35 - 3 = 32 (left: 2 32)\n32 / 2 = 16 (left: 16)\nAnswer: (5 * 7) - (3 + 2) = 24",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 5 5\nSteps:\n5 + 5 = 10 (left: 2 3 10)\n2 * 3 = 6 (left: 6 10)\n6 * 10 = 60 (left: 60)\nAnswer: (2 * 3) * (5 + 5) = 24",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 6 9\nSteps:\n3 * 9 = 27 (left: 2 6 27)\n27 - 6 = 21 (left: 2 21)\n21 - 2 = 19 (left: 19)\nAnswer: ((2 * 3) + 9) * 6 = 24",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (3 * 6) + (13 - 3) = 24 -> Input: 2 3 4 6\nSteps:\n2 * 4 = 8 (left: 3 6 8)\n3 * 6 = 18 (left: 18 8)\n18 - 8 = 10 (left: 10)\nAnswer: (2 * 4) * (3 * 6) - 8 = 24",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "24"
                }
            },
            "Step 8": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (3 * 6) + (13 - 3) = 24 -> Input: 2 3 4 6\nSteps:\n3 + 6 = 9 (left: 2 4 9)\n9 * 2 = 18 (left: 4 18)\n18 - 4 = 14 (left: 14)\n14 + 4 = 18 (left: 18)\n18 + 6 = 24 (left: 24)\nAnswer: ((3 + 6) * 2) + 4 +",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 6 6 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "9 6 13"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 6 * 13 = 78 (left: 9 78)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 6 * 13 = 78 (left: 9 78) -> 78 / 9 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "18 6 "
                }
            },
            "Step 3": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (3 * 6) + (13 - 3) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 4 6\nSteps:\n2 * 3 = 6 (left: 4 6 6)\n6 + 4 = 10 (left: 10 6)\n10 + 6 = 16 (left: 16)\n16 + 8 = 24 (left: 24)\nAnswer: ((2 * 3) + 4) + 6 = 24",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 5 10\nSteps:\n2 * 10 = 20 (left: 3 5 20)\n20 / 5 = 4 (left: 3 4)\n4 + 3 = 7 (left: 7)\n7 * 3 = 21 (left: 21)\n21 + 10 = 31 (left: 31)\n31 - 10 = 21 (left: 21)\n21 + ",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 5 7\nSteps:\n2 + 3 = 5 (left: 5 7 5)\n5 + 5 = 10 (left: 7 10)\n10 * 7 = 70 (left: 70)\n70 / 5 = 14 (left: 14)\n14 - 10 = 4 (left: 4)\n4 * 5 = 20 (left: 20)\n20 + ",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "24"
                }
            },
            "Step 8": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 5 6\nSteps:\n5 + 3 = 8 (left: 2 6 8)\n8 * 2 = 16 (left: 6 16)\n16 + 6 = 22 (left: 22)\n22 + 2 = 24 (left: 24)\nAnswer: ((5 + 3) * 2) + 6 + 2 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 / 3 = 2 (left: 2 6 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "9 6 13"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 13 - 6 = 7 (left: 9 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 13 - 6 = 7 (left: 9 7) -> 9 + 7 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 7 7 7 3\nSteps:\n7 + 7 = 14 (left: 14 7 3)\n14 - 7 = 7 (left: 7 7)\n7 * 7 = 49 (left: 49)\n49 / 3 = 16.33 (left: 16.33)\nAnswer: ((7 + 7) - 7) * (7 * 3) = 24",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "24"
                }
            },
            "Step 4": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 5 7\nSteps:\n3 + 7 = 10 (left: 2 5 10)\n5 * 2 = 10 (left: 10 10)\n10 * 10 = 100 (left: 100)\n100 / 4 = 25 (left: 25)\n25 - 1 = 24 (left: 24)\nAnswer: ((2 * 5) + (3 + 7)) -",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 5 6\nSteps:\n5 + 3 = 8 (left: 2 6 8)\n8 * 6 = 48 (left: 2 48)\n48 / 2 = 24 (left: 24)\nAnswer: ((5 + 3) * 6) / 2 = 24",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 5 6\nSteps:\n3 * 5 = 15 (left: 2 6 15)\n15 - 6 = 9 (left: 2 9)\n9 * 2 = 18 (left: 18)\n18 + 6 = 24 (left: 24)\nAnswer: ((3 * 5) - 6) + 2 = 24",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (3 * 6) + (13 - 3) = 24 -> Input: 2 3 4 6\nSteps:\n3 * 4 = 12 (left: 2 6 12)\n6 * 2 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (2 * 6) + (3 * 4) = 24",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "24"
                }
            },
            "Step 8": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (3 * 6) + (13 - 3) = 24 -> Input: 7 3 5 2\nSteps:\n7 - 3 = 4 (left: 4 5 2)\n4 + 2 = 6 (left: 6 5)\n6 * 5 = 30 (left: 30)\n30 - 6 = 24 (left: 24)\nAnswer: ((7 - 3) + 2) * 5 - 6 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 6 13)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "9 6 13"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 + 6 = 15 (left: 15 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 + 6 = 15 (left: 15 13) -> 15 / 13 = 1.15 (left: 1.15)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 5 7\nSteps:\n3 * 7 = 21 (left: 2 5 21)\n5 - 2 = 3 (left: 3 21)\n21 - 3 = 18 (left: 18)\nAnswer: ((3 * 7) - 5) * 2 = 24",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "24"
                }
            },
            "Step 4": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 4 6\nSteps:\n3 + 6 = 9 (left: 2 4 9)\n9 * 4 = 36 (left: 2 36)\n36 / 2 = 18 (left: 18)\n18 + 18 = 36 (left: 36)\nAnswer: ((2 + (3 + 6)) * 4) - 4 = 24",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (3 * 6) + (13 - 3) = 24 -> Input: 2 3 4 5\nSteps:\n2 * 5 = 10 (left: 3 4 10)\n4 - 3 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10)\nAnswer: (2 * 5) + (4 - 3) = 24",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 4 6\nSteps:\n3 * 4 = 12 (left: 2 6 12)\n12 - 6 = 6 (left: 2 6)\n2 * 6 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((2 * 6) - 12) * 2 = 24",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (3 * 6) + (13 - 3) = 24 -> Input: 2 3 5 6\nSteps:\n3 + 5 = 8 (left: 2 6 8)\n8 - 6 = 2 (left: 2 2)\n2 * 2 = 4 (left: 4)\n4 * 6 = 24 (left: 24)\nAnswer: ((3 + 5) - 6) * 2 * 6 = 24",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "24"
                }
            },
            "Step 8": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 5 7\nSteps:\n5 + 7 = 12 (left: 2 3 12)\n3 * 2 = 6 (left: 6 12)\n12 - 6 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)\n36 / 2 = 18 (left: 18)\n18 - 3 = 15 (left: 15)\n15",
                "Pruning": "NA"
            }
        },
        "Input": "3 3 6 13",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "898": {
        "puzzle": "6 8 9 11",
        "Agent 0": {
            "Step 0": {
                "Step": "6 * 8 = 48 (left: 9 11 48)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "9 11 48"
                }
            },
            "Step 1": {
                "Step": "6 * 8 = 48 (left: 9 11 48) -> 48 - 11 = 37 (left: 9 37)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 8 = 48 (left: 9 11 48) -> 48 - 11 = 37 (left: 9 37) -> 9 - 37 = -28 (left: -28)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 11"
                }
            },
            "Step 3": {
                "Step": "8 / 6 = 1.33 (left: 1.33 9 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 / 6 = 1.33 (left: 1.33 9 11) -> 9 / 1.33 = 6.77 (left: 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "2 2"
                }
            },
            "Step 5": {
                "Step": "11 - 9 = 2 (left: 6 8 2) -> 8 - 6 = 2 (left: 2 2) -> 2 + 2 = 4",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 9 = 2 (left: 6 8 2) -> 8 - 6 = 2 (left: 2 2) -> 2 + 2 = 4 -> 2 / 2 = 1 (left: 1 2 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2 2"
                }
            },
            "Step 7": {
                "Step": "11 - 9 = 2 (left: 6 8 2) -> 8 - 6 = 2 (left: 2 2) -> 2 / 2 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 9 = 2 (left: 6 8 2) -> 8 - 6 = 2 (left: 2 2) -> 2 / 2 = 1 (left: 1) -> 1 - 1 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "1 2 4"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 + 6 = 15 (left: 8 11 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 11"
                }
            },
            "Step 1": {
                "Step": "6 * 8 = 48 (left: 9 11 48)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 8 = 48 (left: 9 11 48) -> 48 / 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1.8333 5"
                }
            },
            "Step 3": {
                "Step": "11 - 6 = 5 -> 11 / 6 = 1.8333 (left: 1.8333 5) -> 5 / 1.8333 = 2.7273 (left: 2.7273)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 6 = 5 -> 11 / 6 = 1.8333 (left: 1.8333 5) -> 5 / 1.8333 = 2.7273 (left: 2.7273) -> 2.7273 * 2 = 5.4546",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "2 2"
                }
            },
            "Step 5": {
                "Step": "11 - 9 = 2 (left: 6 8 2) -> 8 - 6 = 2 (left: 2 2) -> 2 + 2 = 4",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 9 = 2 (left: 6 8 2) -> 8 - 6 = 2 (left: 2 2) -> 2 + 2 = 4 -> 2 + 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "2 2"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2 2"
                }
            },
            "Step 7": {
                "Step": "11 - 9 = 2 (left: 6 8 2) -> 8 - 6 = 2 (left: 2 2) -> 2 - 2 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 9 = 2 (left: 6 8 2) -> 8 - 6 = 2 (left: 2 2) -> 2 - 2 = 0 (left: 0) -> There are no possible next steps as there are no numbers provided in the input.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 8 = 14 (left: 9 11 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 11"
                }
            },
            "Step 1": {
                "Step": "6 * 8 = 48 (left: 9 11 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 8 = 48 (left: 9 11  -> 9 - 11 = -2 (left: -2 11)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1.8333 5"
                }
            },
            "Step 3": {
                "Step": "11 - 6 = 5 -> 11 / 6 = 1.8333 (left: 1.8333 5) -> 5 - 1.8333 = 3.1667 (left: 3.1667)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 6 = 5 -> 11 / 6 = 1.8333 (left: 1.8333 5) -> 5 - 1.8333 = 3.1667 (left: 3.1667) -> There are no possible next steps for the input 3.1667.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "2 2"
                }
            },
            "Step 5": {
                "Step": "11 - 9 = 2 (left: 6 8 2) -> 8 - 6 = 2 (left: 2 2) -> 2 + 2 = 4",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 9 = 2 (left: 6 8 2) -> 8 - 6 = 2 (left: 2 2) -> 2 + 2 = 4 -> 2 + 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "2 2"
                },
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2 2"
                }
            },
            "Step 7": {
                "Step": "11 - 9 = 2 (left: 6 8 2) -> 8 - 6 = 2 (left: 2 2) -> 2 * 2 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 9 = 2 (left: 6 8 2) -> 8 - 6 = 2 (left: 2 2) -> 2 * 2 = 4 (left: 4) -> No possible next steps with just the number 4.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "11 - 9 = 2 (left: 6 2 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 11"
                }
            },
            "Step 1": {
                "Step": "11 - 6 = 5",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 6 = 5 -> 11 / 6 = 1.8333 (left: 1.8333 5)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "8 11 15"
                }
            },
            "Step 3": {
                "Step": "6 + 9 = 15 (left: 8 11 15) -> 15 + 8 = 23 (left: 11 23)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 9 = 15 (left: 8 11 15) -> 15 + 8 = 23 (left: 11 23) -> 11 + 23 = 34 (left: 34)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "2 2"
                }
            },
            "Step 5": {
                "Step": "11 - 9 = 2 (left: 6 8 2) -> 8 - 6 = 2 (left: 2 2) -> 2 / 2 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 9 = 2 (left: 6 8 2) -> 8 - 6 = 2 (left: 2 2) -> 2 / 2 = 1 (left: 1) -> 1 * 1 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "2 2"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2 2"
                }
            },
            "Step 7": {
                "Step": "11 - 9 = 2 (left: 6 8 2) -> 8 - 6 = 2 (left: 2 2) -> 2 / 2 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 9 = 2 (left: 6 8 2) -> 8 - 6 = 2 (left: 2 2) -> 2 / 2 = 1 (left: 1) -> There is only one number so no operations can be performed.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 8 11 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 11"
                }
            },
            "Step 1": {
                "Step": "11 - 6 = 5 (left: 5 9 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 6 = 5 (left: 5 9 11) -> 9 * 11 = 99 (left: 5 99)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 11"
                }
            },
            "Step 3": {
                "Step": "11 - 9 = 2 (left: 6 8 2)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 9 = 2 (left: 6 8 2) -> 8 - 6 = 2 (left: 2 2)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1.8333 5"
                }
            },
            "Step 5": {
                "Step": "11 - 6 = 5 -> 11 / 6 = 1.8333 (left: 1.8333 5) -> Input: 3 9 27",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 6 = 5 -> 11 / 6 = 1.8333 (left: 1.8333 5) -> Input: 3 9 27 -> 3 * 9 = 27 (left: 27 27)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2 2"
                }
            },
            "Step 7": {
                "Step": "11 - 9 = 2 (left: 6 8 2) -> 8 - 6 = 2 (left: 2 2) -> 2 + 2 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 9 = 2 (left: 6 8 2) -> 8 - 6 = 2 (left: 2 2) -> 2 + 2 = 4 (left: 4) -> There are no possible next steps with just the number 4.",
                "Pruning": null
            }
        },
        "Input": "6 8 9 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "899": {
        "puzzle": "1 3 3 11",
        "Agent 0": {
            "Step 0": {
                "Step": "11 - 1 = 10 (left: 3 3 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 3 11"
                }
            },
            "Step 1": {
                "Step": "3 - 1 = 2 (left: 2 3 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 - 1 = 2 (left: 2 3 11) -> 2 + 3 = 5 (left: 5 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "2 3.67"
                }
            },
            "Step 3": {
                "Step": "3 - 1 = 2 (left: 2 3 11) -> 11 / 3 = 3.67 (left: 2 3.67) -> 2 / 3.67 = 0.545 (left: 0.545)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 - 1 = 2 (left: 2 3 11) -> 11 / 3 = 3.67 (left: 2 3.67) -> 2 / 3.67 = 0.545 (left: 0.545) -> There are no possible next steps with the input 0.545.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "5 11"
                }
            },
            "Step 5": {
                "Step": "3 - 1 = 2 (left: 2 3 11) -> 2 + 3 = 5 (left: 5 11) -> 5 - 11 = -6 (left: -6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 - 1 = 2 (left: 2 3 11) -> 2 + 3 = 5 (left: 5 11) -> 5 - 11 = -6 (left: -6) -> There are no valid operations that can be performed on -6 in this context.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2 3.67"
                }
            },
            "Step 7": {
                "Step": "3 - 1 = 2 (left: 2 3 11) -> 11 / 3 = 3.67 (left: 2 3.67) -> 2 * 3.67 = 7.34 (left: 7.34) -> 7.34 / 2 = 3.67 (left: 2 3.67) -> 2 + 3.67 = 5.67 (left: 5.67)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "2 3.67"
                }
            },
            "Step 8": {
                "Step": "3 - 1 = 2 (left: 2 3 11) -> 11 / 3 = 3.67 (left: 2 3.67) -> 2 * 3.67 = 7.34 (left: 7.34) -> 7.34 / 2 = 3.67 (left: 2 3.67) -> 2 / 3.67 = 0.546 (left: 0.546)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "2 3.67"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 1 9 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 3 11"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 1 9 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 1 9 11) -> 9 / 1 = 9 (left: 9 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 3 11"
                }
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 1 6 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 1 6 11) -> 6 * 11 = 66 (left: 1 66)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1 66"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 1 6 11) -> 6 * 11 = 66 (left: 1 66) -> 1 + 66 = 67",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 1 6 11) -> 6 * 11 = 66 (left: 1 66) -> 1 + 66 = 67 -> 1 * 66 = 66 (left: 66 66)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2 3.67"
                }
            },
            "Step 7": {
                "Step": "3 - 1 = 2 (left: 2 3 11) -> 11 / 3 = 3.67 (left: 2 3.67) -> 2 * 3.67 = 7.34 (left: 7.34) -> 7.34 / 2 = 3.67 (left: 2 3.67) -> 2 * 3.67 = 7.34 (left: 7.34)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "2 3.67"
                }
            },
            "Step 8": {
                "Step": "3 - 1 = 2 (left: 2 3 11) -> 11 / 3 = 3.67 (left: 2 3.67) -> 2 * 3.67 = 7.34 (left: 7.34) -> 7.34 / 2 = 3.67 (left: 2 3.67) -> Input: 5 10 15",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 3 4 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 3 10"
                }
            },
            "Step 1": {
                "Step": "11 - 1 = 10 (left: 3 3 10) -> 3 * 3 = 9 (left: 9 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 1 = 10 (left: 3 3 10) -> 3 * 3 = 9 (left: 9 10) -> 9 * 10 = 90 (left: 90)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "2 3.67"
                }
            },
            "Step 3": {
                "Step": "3 - 1 = 2 (left: 2 3 11) -> 11 / 3 = 3.67 (left: 2 3.67) -> 2 * 3.67 = 7.34 (left: 7.34)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 - 1 = 2 (left: 2 3 11) -> 11 / 3 = 3.67 (left: 2 3.67) -> 2 * 3.67 = 7.34 (left: 7.34) -> 7.34 / 2 = 3.67 (left: 2 3.67)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "2 3.67"
                }
            },
            "Step 5": {
                "Step": "3 - 1 = 2 (left: 2 3 11) -> 11 / 3 = 3.67 (left: 2 3.67) -> 2 * 3.67 = 7.34 (left: 7.34) -> 7.34 / 2 = 3.67 (left: 2 3.67) -> 3.67 - 2 = 1.67 (left: 1.67)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "2 3.67"
                }
            },
            "Step 6": {
                "Step": "3 - 1 = 2 (left: 2 3 11) -> 11 / 3 = 3.67 (left: 2 3.67) -> 2 * 3.67 = 7.34 (left: 7.34) -> 7.34 / 2 = 3.67 (left: 2 3.67) -> 2 * 3.67 = 7.34 (left: 7.34)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "2 3.67"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2 3.67"
                }
            },
            "Step 7": {
                "Step": "3 - 1 = 2 (left: 2 3 11) -> 11 / 3 = 3.67 (left: 2 3.67) -> 2 * 3.67 = 7.34 (left: 7.34) -> 7.34 / 2 = 3.67 (left: 2 3.67) -> 2 / 3.67 = 0.54 (left: 0.54)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "2 3.67"
                }
            },
            "Step 8": {
                "Step": "3 - 1 = 2 (left: 2 3 11) -> 11 / 3 = 3.67 (left: 2 3.67) -> 2 * 3.67 = 7.34 (left: 7.34) -> 7.34 / 2 = 3.67 (left: 2 3.67) -> 3.67 - 2 = 1.67 (left: 1.67)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "2 3.67"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "11 - 1 = 10 (left: 3 10 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 3 10"
                }
            },
            "Step 1": {
                "Step": "11 - 1 = 10 (left: 3 3 10) -> 3 * 3 = 9 (left: 9 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 1 = 10 (left: 3 3 10) -> 3 * 3 = 9 (left: 9 10) -> 10 / 9 = 1.11 (left: 1.11 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "2 3.67"
                }
            },
            "Step 3": {
                "Step": "3 - 1 = 2 (left: 2 3 11) -> 11 / 3 = 3.67 (left: 2 3.67) -> 2 / 3.67 = 0.545 (left: 0.545)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 - 1 = 2 (left: 2 3 11) -> 11 / 3 = 3.67 (left: 2 3.67) -> 2 / 3.67 = 0.545 (left: 0.545) -> 0.545 * 2 = 1.09",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "2 3.67"
                }
            },
            "Step 5": {
                "Step": "3 - 1 = 2 (left: 2 3 11) -> 11 / 3 = 3.67 (left: 2 3.67) -> 2 * 3.67 = 7.34 (left: 7.34) -> 7.34 / 2 = 3.67 (left: 2 3.67) -> 2 * 3.67 = 7.34 (left: 7.34)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "2 3.67"
                }
            },
            "Step 6": {
                "Step": "3 - 1 = 2 (left: 2 3 11) -> 11 / 3 = 3.67 (left: 2 3.67) -> 2 * 3.67 = 7.34 (left: 7.34) -> 7.34 / 2 = 3.67 (left: 2 3.67) -> 2 / 3.67 = 0.5462 (left: 0.5462)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "1 66"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2 3.67"
                }
            },
            "Step 7": {
                "Step": "3 - 1 = 2 (left: 2 3 11) -> 11 / 3 = 3.67 (left: 2 3.67) -> 2 * 3.67 = 7.34 (left: 7.34) -> 7.34 / 2 = 3.67 (left: 2 3.67) -> 2 + 3.67 = 5.67 (left: 5.67)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "2 3.67"
                }
            },
            "Step 8": {
                "Step": "3 - 1 = 2 (left: 2 3 11) -> 11 / 3 = 3.67 (left: 2 3.67) -> 2 * 3.67 = 7.34 (left: 7.34) -> 7.34 / 2 = 3.67 (left: 2 3.67) -> 2 + 3.67 = 5.67 (left: 5.67)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "2 3.67"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 3 4 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 3 11"
                }
            },
            "Step 1": {
                "Step": "3 - 1 = 2 (left: 2 3 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 - 1 = 2 (left: 2 3 11) -> 11 / 3 = 3.67 (left: 2 3.67)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "2 3.67"
                }
            },
            "Step 3": {
                "Step": "3 - 1 = 2 (left: 2 3 11) -> 11 / 3 = 3.67 (left: 2 3.67) -> 2 / 3.67 = 0.546 (left: 0.546)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 - 1 = 2 (left: 2 3 11) -> 11 / 3 = 3.67 (left: 2 3.67) -> 2 / 3.67 = 0.546 (left: 0.546) -> There are no possible next steps for the input 0.546 as it only consists of one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1 66"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 1 6 11) -> 6 * 11 = 66 (left: 1 66) -> 1 + 66 = 67 (left: 67)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 1 6 11) -> 6 * 11 = 66 (left: 1 66) -> 1 + 66 = 67 (left: 67) -> There are no possible next steps with the input 67.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2 3.67"
                }
            },
            "Step 7": {
                "Step": "3 - 1 = 2 (left: 2 3 11) -> 11 / 3 = 3.67 (left: 2 3.67) -> 2 * 3.67 = 7.34 (left: 7.34) -> 7.34 / 2 = 3.67 (left: 2 3.67) -> 3.67 / 2 = 1.835 (left: 1.835)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "2 3.67"
                }
            },
            "Step 8": {
                "Step": "3 - 1 = 2 (left: 2 3 11) -> 11 / 3 = 3.67 (left: 2 3.67) -> 2 * 3.67 = 7.34 (left: 7.34) -> 7.34 / 2 = 3.67 (left: 2 3.67) -> 2 / 3.67 = 0.55 (left: 0.55)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "2 3.67"
                }
            }
        },
        "Input": "1 3 3 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1050": {
        "puzzle": "4 10 11 13",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 11 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "2."
                }
            },
            "Step 1": {
                "Step": "10 / 4 = 2.5 (left: 2. -> There are no possible next steps with only one number provided.",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 4 = 2.5 (left: 2. -> There are no possible next steps with only one number provided. -> Please provide more than one number to calculate possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "10 13 15"
                }
            },
            "Step 3": {
                "Step": "11 + 4 = 15 (left: 10 13 15) -> 10 * 13 = 130 (left: 15 130)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 + 4 = 15 (left: 10 13 15) -> 10 * 13 = 130 (left: 15 130) -> 5 * 20 = 100 (left: 3 100",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "3 100"
                }
            },
            "Step 5": {
                "Step": "11 + 4 = 15 (left: 10 13 15) -> 10 * 13 = 130 (left: 15 130) -> 5 * 20 = 100 (left: 3 100 -> 3 * 100 = 300 (left: 100)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "3 100"
                }
            },
            "Step 6": {
                "Step": "11 + 4 = 15 (left: 10 13 15) -> 10 * 13 = 130 (left: 15 130) -> 5 * 20 = 100 (left: 3 100 -> 100 / 3 = 33.33 (left: 3 33.33)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "3 33.33"
                }
            },
            "Step 7": {
                "Step": "11 + 4 = 15 (left: 10 13 15) -> 10 * 13 = 130 (left: 15 130) -> 5 * 20 = 100 (left: 3 100 -> 100 / 3 = 33.33 (left: 3 33.33) -> 3 + 33.33 = 36.33",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 + 4 = 15 (left: 10 13 15) -> 10 * 13 = 130 (left: 15 130) -> 5 * 20 = 100 (left: 3 100 -> 100 / 3 = 33.33 (left: 3 33.33) -> 3 + 33.33 = 36.33 -> 3 * 33.33 = 99.99 (left: 99.99 = 36.33)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 10 = 3 (left: 3 11 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 11 13"
                }
            },
            "Step 1": {
                "Step": "4 * 10 = 40 (left: 40 11 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 10 = 40 (left: 40 11 13) -> 40 - 11 = 29 (left: 29 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 11 13"
                }
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 6 11 13) -> 11 - 6 = 5 (left: 5 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 6 11 13) -> 11 - 6 = 5 (left: 5 13) -> 5 + 13 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "3 100"
                }
            },
            "Step 5": {
                "Step": "11 + 4 = 15 (left: 10 13 15) -> 10 * 13 = 130 (left: 15 130) -> 5 * 20 = 100 (left: 3 100 -> 100 - 3 = 97 (left: 3)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "3 100"
                }
            },
            "Step 6": {
                "Step": "11 + 4 = 15 (left: 10 13 15) -> 10 * 13 = 130 (left: 15 130) -> 5 * 20 = 100 (left: 3 100 -> 100 / 3 = 33.33 (left: 3 33.33)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "3 33.33"
                }
            },
            "Step 7": {
                "Step": "11 + 4 = 15 (left: 10 13 15) -> 10 * 13 = 130 (left: 15 130) -> 5 * 20 = 100 (left: 3 100 -> 100 / 3 = 33.33 (left: 3 33.33) -> 3 * 33.33 = 99.99",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 + 4 = 15 (left: 10 13 15) -> 10 * 13 = 130 (left: 15 130) -> 5 * 20 = 100 (left: 3 100 -> 100 / 3 = 33.33 (left: 3 33.33) -> 3 * 33.33 = 99.99 -> 3 * 33.33 = 99.99",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "11 + 4 = 15 (left: 10 13 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 11 13"
                }
            },
            "Step 1": {
                "Step": "11 + 4 = 15 (left: 10 13 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 + 4 = 15 (left: 10 13 15) -> 15 / 10 = 1.5 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 11 13"
                }
            },
            "Step 3": {
                "Step": "4 * 10 = 40 (left: 11 13 40)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 * 10 = 40 (left: 11 13 40) -> 40 - 13 = 27 (left: 11 27)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "3 100"
                }
            },
            "Step 5": {
                "Step": "11 + 4 = 15 (left: 10 13 15) -> 10 * 13 = 130 (left: 15 130) -> 5 * 20 = 100 (left: 3 100 -> 100 - 3 = 97 (left: 3 97)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 + 4 = 15 (left: 10 13 15) -> 10 * 13 = 130 (left: 15 130) -> 5 * 20 = 100 (left: 3 100 -> 100 - 3 = 97 (left: 3 97) -> 97 - 3 = 94 (left: 3 94)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "3 100"
                }
            },
            "Step 7": {
                "Step": "11 + 4 = 15 (left: 10 13 15) -> 10 * 13 = 130 (left: 15 130) -> 5 * 20 = 100 (left: 3 100 -> Possible next steps:",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 + 4 = 15 (left: 10 13 15) -> 10 * 13 = 130 (left: 15 130) -> 5 * 20 = 100 (left: 3 100 -> Possible next steps: -> There are no possible next steps with the given input.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 / 4 = 2.5 (left: 2.",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 11 13"
                }
            },
            "Step 1": {
                "Step": "10 / 4 = 2.5 (left: 2.5 11 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 4 = 2.5 (left: 2.5 11 13) -> 13 - 2.5 = 10.5 (left: 10.5 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 11 13"
                }
            },
            "Step 3": {
                "Step": "13 - 11 = 2 (left: ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 11 = 2 (left:  -> There are no more possible next steps with the given input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "3 100"
                }
            },
            "Step 5": {
                "Step": "11 + 4 = 15 (left: 10 13 15) -> 10 * 13 = 130 (left: 15 130) -> 5 * 20 = 100 (left: 3 100 -> 3 ^ 100 = 515377520732011331036461129765621272702107522001 (left: 100)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "3 100"
                }
            },
            "Step 6": {
                "Step": "11 + 4 = 15 (left: 10 13 15) -> 10 * 13 = 130 (left: 15 130) -> 5 * 20 = 100 (left: 3 100 -> 3 + 100 = 103 (left: 100)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "3 100"
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "3 33.33"
                }
            },
            "Step 7": {
                "Step": "11 + 4 = 15 (left: 10 13 15) -> 10 * 13 = 130 (left: 15 130) -> 5 * 20 = 100 (left: 3 100 -> 100 / 3 = 33.33 (left: 3 33.33) -> 3 + 33.33 = 36.33 (left: 36.33)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "3 33.33"
                }
            },
            "Step 8": {
                "Step": "11 + 4 = 15 (left: 10 13 15) -> 10 * 13 = 130 (left: 15 130) -> 5 * 20 = 100 (left: 3 100 -> 100 / 3 = 33.33 (left: 3 33.33) -> 3 * 33.33 = 99.99 (left: 99.99)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "3 33.33"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "11 + 4 = 15 (left: 10 13 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 11 13"
                }
            },
            "Step 1": {
                "Step": "10 - 4 = 6 (left: 6 11 13) -> 6 * 11 = 66 (left: 13 66)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 6 11 13) -> 6 * 11 = 66 (left: 13 66) -> 66 - 13 = 53 (left: 53)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 11 13"
                }
            },
            "Step 3": {
                "Step": "4 + 10 = 14 (left: 11 13 14)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 13 / 11 = 1.1818181818181819 (left: 1.181818181818181",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "3 100"
                }
            },
            "Step 5": {
                "Step": "11 + 4 = 15 (left: 10 13 15) -> 10 * 13 = 130 (left: 15 130) -> 5 * 20 = 100 (left: 3 100 -> 3 + 100 = 103 (left: 100)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "3 100"
                }
            },
            "Step 6": {
                "Step": "11 + 4 = 15 (left: 10 13 15) -> 10 * 13 = 130 (left: 15 130) -> 5 * 20 = 100 (left: 3 100 -> 3 ^ 100 = 515377520732011331036461129765621272702107522001 (left: 100)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "3 100"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "3 33.33"
                }
            },
            "Step 7": {
                "Step": "11 + 4 = 15 (left: 10 13 15) -> 10 * 13 = 130 (left: 15 130) -> 5 * 20 = 100 (left: 3 100 -> 100 / 3 = 33.33 (left: 3 33.33) -> 3 * 33.33 = 99.99 (left: 99.99)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "3 33.33"
                }
            },
            "Step 8": {
                "Step": "11 + 4 = 15 (left: 10 13 15) -> 10 * 13 = 130 (left: 15 130) -> 5 * 20 = 100 (left: 3 100 -> 100 / 3 = 33.33 (left: 3 33.33) -> 3 + 33.33 = 36.33 (left: 36.33)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "3 33.33"
                }
            }
        },
        "Input": "4 10 11 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1051": {
        "puzzle": "2 6 6 7",
        "Agent 0": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 5 6 6)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 4 + 6 = 10 (left: 7 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 4 + 6 = 10 (left: 7 10) -> 7 * 10 = 70 (left: 70)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 6 7) -> 7 / 3 = 2.33 (left: 2.33)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 6 7) -> 7 / 3 = 2.33 (left: 2.33) -> There are no possible next steps for the input 2.33 since it is a single number and there are no other numbers to perform operations with.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 6 /",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 6 / -> 6 / 2 = 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "9"
                }
            },
            "Step 7": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 7 - 4 = 3 (left: 3 6) -> 3 + 6 = 9 (left: 9) -> 8 / 9 = 0.8888888888888888 (left: 0.8888888888888888)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "6"
                }
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 / 1 = 6 (left: 6) -> 8 - 6 = 2 (left: 2)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 - 6 = 1 (left: 2 1 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 6 7"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 6 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 6 7) -> 6 / 3 = 2 (left: 2 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 7 / 4 = 1.75 (left: 1.75 6)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 7 / 4 = 1.75 (left: 1.75 6) -> 6 / 1.75 = 3.43 (left: 3.43)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "6 / 2 = 3"
                }
            },
            "Step 7": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 6 / -> 6 / 2 = 3 -> 6 - 3 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "3 + "
                }
            },
            "Step 8": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 6 / 4 = 1.5 (left: 1.5 7) -> 3 +  -> 3 + 8 = 11 (left: )",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 4 6 7)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 5 - 6 = -1 (left: -1 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 5 - 6 = -1 (left: -1 6) -> Input: 3 9 27",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 6 + 7 = 13 (left: 4 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 6 + 7 = 13 (left: 4 13) -> 4 + 13 = 17 (left: 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 6 / 4 = 1.5 (left: 1.5 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 6 / 4 = 1.5 (left: 1.5 7) -> 3 + ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2 7"
                }
            },
            "Step 7": {
                "Step": "6 / 2 = 3 (left: 3 6 7) -> 6 / 3 = 2 (left: 2 7) -> 2 * 7 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 / 2 = 3 (left: 3 6 7) -> 6 / 3 = 2 (left: 2 7) -> 2 * 7 = 14 (left: 14) -> No possible next steps as there is only one number.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 / 2 = 3 (left: 3 6 7)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 6 + 7 = 13 (left: 4 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 6 + 7 = 13 (left: 4 13) -> 13 / 4 = 3.25 (left: 3.25)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 9 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 9 7) -> 9 / 7 \u2248 1.2857 (left: 1.2857)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 7 - 4 = 3 (left: 3 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 7 - 4 = 3 (left: 3 6) -> 3 + 6 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "6"
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 / 1 = 6 (left: 6) -> 6 + 8 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "6 / 2 = 3"
                }
            },
            "Step 8": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 6 / -> 6 / 2 = 3 -> 6 / 2 = 3 (left: 3)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 4 6 7)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 7 - 4 = 3 (left: 3 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 7 - 4 = 3 (left: 3 6) -> 6 - 3 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 + 6 = 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> Input: 1.5",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> Input: 1.5 -> 1.5 * 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "Input: 3 9 27"
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 5 - 6 = -1 (left: -1 6) -> Input: 3 9 27 -> 9 / 3 = 3 (left: 3 27)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 5 - 6 = -1 (left: -1 6) -> Input: 3 9 27 -> 9 / 3 = 3 (left: 3 27) -> 27 - 3 = 24 (left: 24)",
                "Pruning": "NA"
            }
        },
        "Input": "2 6 6 7",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "1052": {
        "puzzle": "7 10 10 12",
        "Agent 0": {
            "Step 0": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 10 10 12"
                }
            },
            "Step 1": {
                "Step": "10 + 10 = 20 (left: 7 20 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 10 = 20 (left: 7 20  -> 7 * 20 = 140 (left: 140)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "22"
                }
            },
            "Step 3": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 12 + 10 = 22 (left: 22) -> 22 / 8 = 2.75 (left: 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 12 + 10 = 22 (left: 22) -> 22 / 8 = 2.75 (left: 8) -> 8 * 8 = 64 (left: 64)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "22"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "22"
                }
            },
            "Step 5": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 12 + 10 = 22 (left: 22) -> There are no possible next steps with the input of 22.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 12 + 10 = 22 (left: 22) -> There are no possible next steps with the input of 22. -> There are no possible next steps with the input of 22.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "22"
                }
            },
            "Step 7": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 12 + 10 = 22 (left: 22) -> No further steps can be taken with the number 22.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 12 + 10 = 22 (left: 22) -> No further steps can be taken with the number 22. -> No further steps can be taken with the number 22.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 - 7 = 3 (left: 3 10 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 10 10 12"
                }
            },
            "Step 1": {
                "Step": "10 * 7 = 70 (left: 70 10 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 12 + 10 = 22 (left: 22)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "22"
                }
            },
            "Step 3": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 12 + 10 = 22 (left: 22) -> 22 - 8 = 14 (left: 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 12 + 10 = 22 (left: 22) -> 22 - 8 = 14 (left: 8) -> 8 + 8 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "22"
                }
            },
            "Step 5": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 12 + 10 = 22 (left: 22) -> There are no possible next steps with the input 22.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 12 + 10 = 22 (left: 22) -> There are no possible next steps with the input 22. -> There are no possible next steps with the input 22.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "22"
                }
            },
            "Step 7": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 12 + 10 = 22 (left: 22) -> There are no possible next steps with the input 22.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 12 + 10 = 22 (left: 22) -> There are no possible next steps with the input 22. -> There are no possible next steps with the input 22.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 / 10 = 1 (left: 7 1 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 10 10 12"
                }
            },
            "Step 1": {
                "Step": "12 - 7 = 5 (left: ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 7 = 5 (left:  -> It seems there was no input provided. If you could provide the numbers, I can generate the possible next steps for you.",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "22"
                }
            },
            "Step 3": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 12 + 10 = 22 (left: 22) -> 22 / 2 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 12 + 10 = 22 (left: 22) -> 22 / 2 = 11 (left: 11) -> 11 - 2 = 9 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "2 0 14"
                }
            },
            "Step 5": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) ->  -> - Subtract the second number from the third number: 8 - 8 = 0 (left: 2 0 14) -> 2 + 0 = 2 (left: 2 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) ->  -> - Subtract the second number from the third number: 8 - 8 = 0 (left: 2 0 14) -> 2 + 0 = 2 (left: 2 14) -> 2 + 14 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "22"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "22"
                }
            },
            "Step 7": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 12 + 10 = 22 (left: 22) -> 22 * 2 = 44 (left: 44)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 12 + 10 = 22 (left: 22) -> 22 * 2 = 44 (left: 44) -> 44 / 2 = 22",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 - 7 = 3 (left: 3 10 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 10 10 12"
                }
            },
            "Step 1": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 -> There are no possible next steps with the input 1.42857142857.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "22"
                }
            },
            "Step 3": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 12 + 10 = 22 (left: 22) -> None, since there is only one number in the input.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 12 + 10 = 22 (left: 22) -> None, since there is only one number in the input. -> There are no possible next steps since there is only one number in the input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "22"
                }
            },
            "Step 5": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 12 + 10 = 22 (left: 22) -> There are no possible next steps with the input 22.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 12 + 10 = 22 (left: 22) -> There are no possible next steps with the input 22. -> There are no possible next steps with the input 22.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "22"
                }
            },
            "Step 7": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 12 + 10 = 22 (left: 22) -> 22 / 2 = 11",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 12 + 10 = 22 (left: 22) -> 22 / 2 = 11 -> 22 + 11 = 33 (left: 33)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "There are no possible next steps with the input 22."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1.42857142857 10 12"
                }
            },
            "Step 1": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) ->  -> - Subtract the second number from the third number: 8 - 8 = 0 (left: 2 0 14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "22"
                }
            },
            "Step 3": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 12 + 10 = 22 (left: 22) -> 22 - 2 = 20 (left: 20)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 12 + 10 = 22 (left: 22) -> 22 - 2 = 20 (left: 20) -> 20 * 2 = 40 (left: 40) ",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "22"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "22"
                }
            },
            "Step 5": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 12 + 10 = 22 (left: 22) -> 22 + 8 = 30 (left: 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 12 + 10 = 22 (left: 22) -> 22 + 8 = 30 (left: 8) -> 8 + 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "22"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "22"
                }
            },
            "Step 7": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 12 + 10 = 22 (left: 22) -> 22 + 2 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 12 + 10 = 22 (left: 22) -> 22 + 2 = 24 (left: 24) -> Answer: ((10 * 7) + 10) + 12 = 24",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "There are no possible next steps with the input 22."
                }
            }
        },
        "Input": "7 10 10 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1053": {
        "puzzle": "2 5 7 11",
        "Agent 0": {
            "Step 0": {
                "Step": "5 * 2 = 10 (left: 10 7 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 12 11"
                }
            },
            "Step 1": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 / 2 = 6 (left: 6 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 / 2 = 6 (left: 6 11) -> 6 - 11 = -5 (left: -5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 7 11"
                }
            },
            "Step 3": {
                "Step": "11 - 5 = 6 (left: 2 6 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 5 = 6 (left: 2 6 11) -> 11 / 2 = 5.5 (left: 6 5.5)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "6 5.5"
                }
            },
            "Step 5": {
                "Step": "11 - 5 = 6 (left: 2 6 11) -> 11 / 2 = 5.5 (left: 6 5.5) -> 6 / 5.5 = 1.0909090909090908 (left: 1.0909090909090908)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 5 = 6 (left: 2 6 11) -> 11 / 2 = 5.5 (left: 6 5.5) -> 6 / 5.5 = 1.0909090909090908 (left: 1.0909090909090908) -> 1.0909090909090908 * 2 = 2.1818181818181816 (left: 2.1818181818181816)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "2 11"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "2 11"
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 5 5 11) -> 11 / 5 = 2 (left: 2 11) -> 2 * 11 = 22 (left: 22)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 5 5 11) -> 11 / 5 = 2 (left: 2 11) -> 2 * 11 = 22 (left: 22) -> None - only one number provided.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 + 7 = 12 (left: 2 12 11)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 7 11"
                }
            },
            "Step 1": {
                "Step": "2 + 5 = 7 (left: 7 7 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 5 = 7 (left: 7 7 11) -> 11 + 7 = 18 (left: 7 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 7 11"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 5 5 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 5 5 11) -> 11 / 5 = 2 (left: 2 11)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "2 11"
                }
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 5 5 11) -> 11 / 5 = 2 (left: 2 11) -> 2 * 11 = 22 (left: 22)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 5 5 11) -> 11 / 5 = 2 (left: 2 11) -> 2 * 11 = 22 (left: 22) -> 22 * 2 = 44",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "2 11"
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 5 5 11) -> 11 / 5 = 2 (left: 2 11) -> 2 * 11 = 22 (left: 22)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 5 5 11) -> 11 / 5 = 2 (left: 2 11) -> 2 * 11 = 22 (left: 22) -> 22 - 22 = 0 (left: )",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "22 * 2 = 44"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "11 - 5 = 6 (left: 2 6 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 12 11"
                }
            },
            "Step 1": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 2 + 12 = 14 (left: 11 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 2 + 12 = 14 (left: 11 14) -> 11 * 14 = 154 (left: 154)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 7 11"
                }
            },
            "Step 3": {
                "Step": "2 + 5 = 7 (left: 7 7 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 5 = 7 (left: 7 7 11) -> 7 * 7 = 49 (left: 11 49)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "2 11"
                }
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 5 5 11) -> 11 / 5 = 2 (left: 2 11) -> 2 * 11 = 22 (left: 22)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 5 5 11) -> 11 / 5 = 2 (left: 2 11) -> 2 * 11 = 22 (left: 22) -> None - the input is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "2 11"
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 5 5 11) -> 11 / 5 = 2 (left: 2 11) -> 11 / 2 = 5.5 (left: 5.5)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 5 5 11) -> 11 / 5 = 2 (left: 2 11) -> 11 / 2 = 5.5 (left: 5.5) -> There is only one possible next step: 5.5 + 5.5 = 11.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 + 11 = 18 (left: 2 5 18)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "10 7 11"
                }
            },
            "Step 1": {
                "Step": "5 * 2 = 10 (left: 10 7 11) -> 7 * 11 = 77 (left: 10 77)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 2 = 10 (left: 10 7 11) -> 7 * 11 = 77 (left: 10 77) -> 10 * 77 = 770 (left: 770)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 12 11"
                }
            },
            "Step 3": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 6 11 9",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 6 11 9 -> 11 / 6 = 1.83 (left: 1.83 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "2 11"
                }
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 5 5 11) -> 11 / 5 = 2 (left: 2 11) -> 2 + 11 = 13 (left: 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 5 5 11) -> 11 / 5 = 2 (left: 2 11) -> 2 + 11 = 13 (left: 13) -> 13 * 2 = 26",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "2 11"
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 5 5 11) -> 11 / 5 = 2 (left: 2 11) -> 11 / 2 = 5.5 (left: 5.5)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 5 5 11) -> 11 / 5 = 2 (left: 2 11) -> 11 / 2 = 5.5 (left: 5.5) -> 5.5 + 8 = 13.5 (left: 13.5)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "13 * 2 = 26"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 5 = 7 (left: 7 7 11)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 12 11"
                }
            },
            "Step 1": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 - 2 = 10 (left: 10 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 - 2 = 10 (left: 10 11) -> 10 * 11 = 110 (left: 110)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 12 11"
                }
            },
            "Step 3": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 / 2 = 6 (left: 6 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 / 2 = 6 (left: 6 11) -> 11 / 6 = 1.83 (left: 1.83)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "2 11"
                }
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 5 5 11) -> 11 / 5 = 2 (left: 2 11) -> 11 / 2 = 5.5 (left: 5.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 5 5 11) -> 11 / 5 = 2 (left: 2 11) -> 11 / 2 = 5.5 (left: 5.5) -> 5.5 * 8 = 44 (left: 44)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "6 5.5"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "2 11"
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 5 5 11) -> 11 / 5 = 2 (left: 2 11) -> 2 + 11 = 13 (left: 13)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 5 5 11) -> 11 / 5 = 2 (left: 2 11) -> 2 + 11 = 13 (left: 13) -> 13 * 2 = 26 (left: 26)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "22 * 2 = 44"
                }
            }
        },
        "Input": "2 5 7 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1054": {
        "puzzle": "4 4 6 9",
        "Agent 0": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 16 9"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 16 - 6 = 10 (left: 10 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 16 - 6 = 10 (left: 10 9) -> 10 * 9 = 90 (left: 90)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "9 48"
                }
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 6 * 8 = 48 (left: 9 48) -> 9 * 48 = 432 (left: 432)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 6 * 8 = 48 (left: 9 48) -> 9 * 48 = 432 (left: 432) -> 4 * 3 = 12 (left: 12 2)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "12 2"
                }
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 6 * 8 = 48 (left: 9 48) -> 9 * 48 = 432 (left: 432) -> 4 * 3 = 12 (left: 12 2) -> 12 + 2 = 14 (left: 2 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 6 * 8 = 48 (left: 9 48) -> 9 * 48 = 432 (left: 432) -> 4 * 3 = 12 (left: 12 2) -> 12 + 2 = 14 (left: 2 14) -> 14 / 2 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "12 2"
                },
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "12 2"
                }
            },
            "Step 7": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 6 * 8 = 48 (left: 9 48) -> 9 * 48 = 432 (left: 432) -> 4 * 3 = 12 (left: 12 2) -> 12 * 2 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "12 2"
                }
            },
            "Step 8": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 6 * 8 = 48 (left: 9 48) -> 9 * 48 = 432 (left: 432) -> 4 * 3 = 12 (left: 12 2) -> 12 * 2 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "12 2"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 6 16 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 9"
                }
            },
            "Step 1": {
                "Step": "6 - 4 = 2 (left: 2 4 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 4 = 2 (left: 2 4  -> 2 * 4 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 6 9"
                }
            },
            "Step 3": {
                "Step": "4 / 4 = 1 (left: 1 6 9) -> 1 / 6 = 0.166666",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 / 4 = 1 (left: 1 6 9) -> 1 / 6 = 0.166666 -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "12 2"
                }
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 6 * 8 = 48 (left: 9 48) -> 9 * 48 = 432 (left: 432) -> 4 * 3 = 12 (left: 12 2) -> 12 + 2 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "12 2"
                }
            },
            "Step 6": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 6 * 8 = 48 (left: 9 48) -> 9 * 48 = 432 (left: 432) -> 4 * 3 = 12 (left: 12 2) -> 12 * 2 = 24 (left: 24 2)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "12 2"
                }
            },
            "Step 7": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 6 * 8 = 48 (left: 9 48) -> 9 * 48 = 432 (left: 432) -> 4 * 3 = 12 (left: 12 2) -> 12 * 2 = 24 (left: 24) ",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "12 2"
                }
            },
            "Step 8": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 6 * 8 = 48 (left: 9 48) -> 9 * 48 = 432 (left: 432) -> 4 * 3 = 12 (left: 12 2) -> 12 + 2 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "12 2"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 6 16 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 16 9"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 6 / 9 = 0.67 (",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 6 / 9 = 0.67 ( -> 9 / 6 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "9 48"
                }
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 6 * 8 = 48 (left: 9 48) -> 48 - 9 = 39 (left: 39)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 6 * 8 = 48 (left: 9 48) -> 48 - 9 = 39 (left: 39) -> 39 * 2 = 78 (left: 2)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "9 48"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "12 2"
                }
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 6 * 8 = 48 (left: 9 48) -> 9 * 48 = 432 (left: 432) -> 4 * 3 = 12 (left: 12 2) -> 12 * 2 = 24 (left: 2 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 6 * 8 = 48 (left: 9 48) -> 9 * 48 = 432 (left: 432) -> 4 * 3 = 12 (left: 12 2) -> 12 * 2 = 24 (left: 2 24) -> 24 / 2 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "12 2"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "12 2"
                }
            },
            "Step 7": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 6 * 8 = 48 (left: 9 48) -> 9 * 48 = 432 (left: 432) -> 4 * 3 = 12 (left: 12 2) -> 12 / 2 = 6 (left: 6 2)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 6 * 8 = 48 (left: 9 48) -> 9 * 48 = 432 (left: 432) -> 4 * 3 = 12 (left: 12 2) -> 12 / 2 = 6 (left: 6 2) -> 6 + 2 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "24 2"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 6 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 9"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 6 8 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 6 * 8 = 48 (left: 9 48)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "9 48"
                }
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 6 * 8 = 48 (left: 9 48) -> 48 - 9 = 39 (left: 39)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 6 * 8 = 48 (left: 9 48) -> 48 - 9 = 39 (left: 39) -> There is only one possible next step:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "12 2"
                }
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 6 * 8 = 48 (left: 9 48) -> 9 * 48 = 432 (left: 432) -> 4 * 3 = 12 (left: 12 2) -> 12 + 2 = 14 (left: 2 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 6 * 8 = 48 (left: 9 48) -> 9 * 48 = 432 (left: 432) -> 4 * 3 = 12 (left: 12 2) -> 12 + 2 = 14 (left: 2 14) -> 2 + 14 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "12 2"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "12 2"
                }
            },
            "Step 7": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 6 * 8 = 48 (left: 9 48) -> 9 * 48 = 432 (left: 432) -> 4 * 3 = 12 (left: 12 2) -> 12 + 2 = 14",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 6 * 8 = 48 (left: 9 48) -> 9 * 48 = 432 (left: 432) -> 4 * 3 = 12 (left: 12 2) -> 12 + 2 = 14 -> 12 - 2 = 10 (left: 10 14)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 4 = 10 (left: 4 10 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 9"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 6 16 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 6 * 16 = 96 (left: 96 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "9 48"
                }
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 6 * 8 = 48 (left: 9 48) -> 48 - 9 = 39 (left: 39)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 6 * 8 = 48 (left: 9 48) -> 48 - 9 = 39 (left: 39) -> There are no possible next steps with the number 39.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "12 2"
                }
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 6 * 8 = 48 (left: 9 48) -> 9 * 48 = 432 (left: 432) -> 4 * 3 = 12 (left: 12 2) -> 12 + 2 = 14 (left: 2 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 6 * 8 = 48 (left: 9 48) -> 9 * 48 = 432 (left: 432) -> 4 * 3 = 12 (left: 12 2) -> 12 + 2 = 14 (left: 2 14) -> 14 / 2 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "12 2"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "12 2"
                }
            },
            "Step 7": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 6 * 8 = 48 (left: 9 48) -> 9 * 48 = 432 (left: 432) -> 4 * 3 = 12 (left: 12 2) -> 12 + 2 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "12 2"
                }
            },
            "Step 8": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 6 * 8 = 48 (left: 9 48) -> 9 * 48 = 432 (left: 432) -> 4 * 3 = 12 (left: 12 2) -> 12 / 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "12 2"
                }
            }
        },
        "Input": "4 4 6 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1055": {
        "puzzle": "6 9 10 12",
        "Agent 0": {
            "Step 0": {
                "Step": "10 + 12 = 22 (left: 6 9 22)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 12"
                }
            },
            "Step 1": {
                "Step": "6 + 9 = 15 (left: 10 12 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 9 = 15 (left: 10 12 15) -> Input: 5 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "9 10 11.33"
                }
            },
            "Step 3": {
                "Step": "6 / 9 = 0.67 (left: 0.67 9 10 12) -> 12 - 0.67 = 11.33 (left: 9 10 11.33) -> 10 / 9 = 1.11 (left: 1.11 11.33)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 / 9 = 0.67 (left: 0.67 9 10 12) -> 12 - 0.67 = 11.33 (left: 9 10 11.33) -> 10 / 9 = 1.11 (left: 1.11 11.33) -> 11.33 / 1.11 = 10.20 (left: 10.20)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "6 90"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "3.67 9"
                }
            },
            "Step 5": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 22 / 6 = 3.67 (left: 3.67 9) -> Possible next steps:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 22 / 6 = 3.67 (left: 3.67 9) -> Possible next steps: -> There are no possible next steps for the input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "6 90"
                }
            },
            "Step 7": {
                "Step": "9 * 10 = 90 (left: 6 12 90) -> 12 - 6 = 6 (left: 6 90) -> 90 - 6 = 84 (left: 84)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 * 10 = 90 (left: 6 12 90) -> 12 - 6 = 6 (left: 6 90) -> 90 - 6 = 84 (left: 84) -> 8 + 4 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "There are no possible next steps for the input provided."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 * 12 = 120 (left: 6 9 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 12"
                }
            },
            "Step 1": {
                "Step": "6 / 9 = 0.67 (left: 0.67 9 10 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 9 = 0.67 (left: 0.67 9 10 12) -> 12 - 0.67 = 11.33 (left: 9 10 11.33)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "9 10 11.33"
                }
            },
            "Step 3": {
                "Step": "6 / 9 = 0.67 (left: 0.67 9 10 12) -> 12 - 0.67 = 11.33 (left: 9 10 11.33) -> 11.33 - 10 =",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 / 9 = 0.67 (left: 0.67 9 10 12) -> 12 - 0.67 = 11.33 (left: 9 10 11.33) -> 11.33 - 10 = -> 11.33 - 10 = 1.33",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "6 90"
                }
            },
            "Step 5": {
                "Step": "9 * 10 = 90 (left: 6 12 90) -> 12 - 6 = 6 (left: 6 90) -> 6 + 90 = 96 (left: 96)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 * 10 = 90 (left: 6 12 90) -> 12 - 6 = 6 (left: 6 90) -> 6 + 90 = 96 (left: 96) -> There are no possible next steps with the number 96 as it is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "3.67 9"
                }
            },
            "Step 7": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 22 / 6 = 3.67 (left: 3.67 9) -> 3.67 - 9 \u2248 -5.33 (left: -5",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 22 / 6 = 3.67 (left: 3.67 9) -> 3.67 - 9 \u2248 -5.33 (left: -5 -> There are no possible next steps with the input of -5.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 + 12 = 22 (left: 6 9 22)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 12 19"
                }
            },
            "Step 1": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 12 + 6 = 18 (left: 18 19)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 12 + 6 = 18 (left: 18 19) -> 18 + 19 = 37 (left: 37)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "6 90"
                }
            },
            "Step 3": {
                "Step": "9 * 10 = 90 (left: 6 12 90) -> 12 - 6 = 6 (left: 6 90) -> 90 / 6 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 * 10 = 90 (left: 6 12 90) -> 12 - 6 = 6 (left: 6 90) -> 90 / 6 = 15 (left: 15) -> There are no possible next steps as there are no other numbers given to perform operations on.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "6 90"
                }
            },
            "Step 5": {
                "Step": "9 * 10 = 90 (left: 6 12 90) -> 12 - 6 = 6 (left: 6 90) -> 6 + 90 = 96 (left: 96)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 * 10 = 90 (left: 6 12 90) -> 12 - 6 = 6 (left: 6 90) -> 6 + 90 = 96 (left: 96) -> 96 + 2 = 98",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "3.67 9"
                }
            },
            "Step 7": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 22 / 6 = 3.67 (left: 3.67 9) -> 9 / 3.67 = 2.45 (left: 2.45 9)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 22 / 6 = 3.67 (left: 3.67 9) -> 9 / 3.67 = 2.45 (left: 2.45 9) -> Possible next steps:",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 + 10 = 19 (left: 6 12 19)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 12 19"
                }
            },
            "Step 1": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 12 - 6 = 6 (left: 6 12 19)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 12 - 6 = 6 (left: 6 12 19) -> 19 - 6 = 13 (left: 6 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 12"
                }
            },
            "Step 3": {
                "Step": "10 + 12 = 22 (left: 6 9 22)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 22 / 6 = 3.67 (left: 3.67 9)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "3.67 9"
                }
            },
            "Step 5": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 22 / 6 = 3.67 (left: 3.67 9) -> 9 - 3.67 = 5.33 (left: 5.33)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 22 / 6 = 3.67 (left: 3.67 9) -> 9 - 3.67 = 5.33 (left: 5.33) -> There are no possible next steps with only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "6 90"
                }
            },
            "Step 7": {
                "Step": "9 * 10 = 90 (left: 6 12 90) -> 12 - 6 = 6 (left: 6 90) -> 6 * 90 = 540 (left: 540)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 * 10 = 90 (left: 6 12 90) -> 12 - 6 = 6 (left: 6 90) -> 6 * 90 = 540 (left: 540) -> 5 + 4 + 0 = 9 (left: 9 0)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "9 + 10 = 19 (left: 6 12 19)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 12"
                }
            },
            "Step 1": {
                "Step": "9 * 10 = 90 (left: 6 12 90)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 * 10 = 90 (left: 6 12 90) -> 12 - 6 = 6 (left: 6 90)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "6 90"
                }
            },
            "Step 3": {
                "Step": "9 * 10 = 90 (left: 6 12 90) -> 12 - 6 = 6 (left: 6 90) -> 6 + 90 = 96 (left: 96)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 * 10 = 90 (left: 6 12 90) -> 12 - 6 = 6 (left: 6 90) -> 6 + 90 = 96 (left: 96) -> There are no possible next steps as there is only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "3.67 9"
                }
            },
            "Step 5": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 22 / 6 = 3.67 (left: 3.67 9) -> 9 / 3.67 = 2.45 (left: 2.45)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 22 / 6 = 3.67 (left: 3.67 9) -> 9 / 3.67 = 2.45 (left: 2.45) -> There are no possible next steps for the input 2.45 as it is a single number and cannot be further manipulated using basic arithmetic operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "6 90"
                }
            },
            "Step 7": {
                "Step": "9 * 10 = 90 (left: 6 12 90) -> 12 - 6 = 6 (left: 6 90) -> 6 * 90 = 540 (left: 540)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 * 10 = 90 (left: 6 12 90) -> 12 - 6 = 6 (left: 6 90) -> 6 * 90 = 540 (left: 540) -> 5 / 4 = 1.25 (left: 1.25 0)",
                "Pruning": null
            }
        },
        "Input": "6 9 10 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1056": {
        "puzzle": "6 9 9 12",
        "Agent 0": {
            "Step 0": {
                "Step": "9 + 9 = 18 (left: 6 18 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 18 12"
                }
            },
            "Step 1": {
                "Step": "9 + 9 = 18 (left: 6 18 12) -> 6 * 18 = 108 (left: 12 108)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 9 = 18 (left: 6 18 12) -> 6 * 18 = 108 (left: 12 108) -> 12 + 108 = 120 (left: 120)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 12 27"
                }
            },
            "Step 3": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 27 / 9 = 3 (left: 12 3)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 27 / 9 = 3 (left: 12 3) -> 12 * 3 = 36 (left: 3 36)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "3 12"
                }
            },
            "Step 5": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 - 9 = 3 (left: 3 12 27) -> 12 - 9 = 3 (left: 3 12) -> 12 - 3 = 9 (left: 9 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 - 9 = 3 (left: 3 12 27) -> 12 - 9 = 3 (left: 3 12) -> 12 - 3 = 9 (left: 9 12) -> 12 / 9 = 1.33 (left: 1.33)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "3 36"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "3 12"
                }
            },
            "Step 7": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 - 9 = 3 (left: 3 12 27) -> 12 - 9 = 3 (left: 3 12) -> 3 + 12 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "3 12"
                }
            },
            "Step 8": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 - 9 = 3 (left: 3 12 27) -> 12 - 9 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: 3 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 12"
                }
            },
            "Step 1": {
                "Step": "9 - 6 = 3 (left: 3 9 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 6 = 3 (left: 3 9 12) -> 9 / 3 = 3 (left: 3 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 12 27"
                }
            },
            "Step 3": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 - 9 = 3 (left: 3 12 27)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 - 9 = 3 (left: 3 12 27) -> 12 - 9 = 3 (left: 3 12)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "3 36"
                }
            },
            "Step 5": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 27 / 9 = 3 (left: 12 3) -> 12 * 3 = 36 (left: 3 36) -> 3 * 36 = 108 (left: 108)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "3 36"
                }
            },
            "Step 6": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 27 / 9 = 3 (left: 12 3) -> 12 * 3 = 36 (left: 3 36) -> 36 - 3 = 33 (left: 33)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "3 12"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "3 12"
                }
            },
            "Step 7": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 - 9 = 3 (left: 3 12 27) -> 12 - 9 = 3 (left: 3 12) -> 3 + 12 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "3 12"
                }
            },
            "Step 8": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 - 9 = 3 (left: 3 12 27) -> 12 - 9 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 * 3 = 27 (left: 9 12 27)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 12"
                }
            },
            "Step 1": {
                "Step": "6 * 9 = 54 (left: 9 12 54)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 9 = 54 (left: 9 12 54) -> 54 - 9 = 45 (left: 12 45)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 12 27"
                }
            },
            "Step 3": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 9 + 12 = 21 (left: 21 27)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 9 + 12 = 21 (left: 21 27) -> 21 - 27 = -6 (left: -6)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "3 12"
                }
            },
            "Step 5": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 - 9 = 3 (left: 3 12 27) -> 12 - 9 = 3 (left: 3 12) -> 12 - 3 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "3 12"
                }
            },
            "Step 6": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 - 9 = 3 (left: 3 12 27) -> 12 - 9 = 3 (left: 3 12) -> 3 - 12 = -9 (left: -9)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "3 36"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "3 12"
                }
            },
            "Step 7": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 - 9 = 3 (left: 3 12 27) -> 12 - 9 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "3 12"
                }
            },
            "Step 8": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 - 9 = 3 (left: 3 12 27) -> 12 - 9 = 3 (left: 3 12) -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 9 9 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 12 27"
                }
            },
            "Step 1": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 / 9 = 1.33 (left: 1.33 27)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 / 9 = 1.33 (left: 1.33 27) -> 27 - 1.33 = 25.67 (left: 25.67)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 12 27"
                }
            },
            "Step 3": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 27 - 12 = 15 (left:",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 27 - 12 = 15 (left: -> 27 * 12 = 324 (left: 324)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "3 36"
                }
            },
            "Step 5": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 27 / 9 = 3 (left: 12 3) -> 12 * 3 = 36 (left: 3 36) -> 36 / 3 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "3 12"
                }
            },
            "Step 6": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 - 9 = 3 (left: 3 12 27) -> 12 - 9 = 3 (left: 3 12) -> 3 + 12 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "3 12"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "3 12"
                }
            },
            "Step 7": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 - 9 = 3 (left: 3 12 27) -> 12 - 9 = 3 (left: 3 12) -> 12 - 3 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "3 12"
                }
            },
            "Step 8": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 - 9 = 3 (left: 3 12 27) -> 12 - 9 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 9 9 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 12 27"
                }
            },
            "Step 1": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 9 + 12 = 21 (left: 21 27)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 9 + 12 = 21 (left: 21 27) -> 21 * 27 = 567 (left: 567)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 12 27"
                }
            },
            "Step 3": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 * 27 = 324 (left: 9 324)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 * 27 = 324 (left: 9 324) -> 9 * 324 = 2916 (left: 2916)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "3 36"
                }
            },
            "Step 5": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 27 / 9 = 3 (left: 12 3) -> 12 * 3 = 36 (left: 3 36) -> 36 - 3 = 33 (left: 33)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "3 36"
                }
            },
            "Step 6": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 27 / 9 = 3 (left: 12 3) -> 12 * 3 = 36 (left: 3 36) -> 3 * 36 = 108 (left: 108)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "3 12"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "3 12"
                }
            },
            "Step 7": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 - 9 = 3 (left: 3 12 27) -> 12 - 9 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "3 12"
                }
            },
            "Step 8": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 - 9 = 3 (left: 3 12 27) -> 12 - 9 = 3 (left: 3 12) -> 12 - 3 = 9 (left: 9 12)",
                "Pruning": null
            }
        },
        "Input": "6 9 9 12",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            }
        ]
    },
    "1057": {
        "puzzle": "2 3 6 12",
        "Agent 0": {
            "Step 0": {
                "Step": "3 * 2 = 6 (left: 6 6 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> Possible",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> Possible -> It appears that the input is not clear. Please provide a valid input for the next steps to be determined.",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 5 * 6 = 30 (left: 30 12) -> 30 - 12 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 5 * 6 = 30 (left: 30 12) -> 30 - 12 = 18 (left: 18) -> There are no possible next steps with the input 18. -> There are no possible next steps with the input 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 5 * 6 = 30 (left: 30 12) -> 30 - 12 = 18 (left: 18) -> 18 / 8 = 2.25 (left: 2.25)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "18"
                }
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 5 * 6 = 30 (left: 30 12) -> 30 - 12 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "18"
                }
            },
            "Step 7": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 5 * 6 = 30 (left: 30 12) -> 30 - 12 = 18 (left: 18) -> No possible next steps as there are not enough numbers to perform any operations.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 5 * 6 = 30 (left: 30 12) -> 30 - 12 = 18 (left: 18) -> No possible next steps as there are not enough numbers to perform any operations. -> No possible next steps as there are not enough numbers to perform any operations.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 * 2 = 6 (left: 6 6 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12) -> 12 / 1 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 5 * 6 = 30 (left: 30 12) -> 30 - 12 = 18 (left: 18) -> 18 / 2 = 9",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 5 * 6 = 30 (left: 30 12) -> 30 - 12 = 18 (left: 18) -> 18 / 2 = 9 -> 18 - 2 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "18"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 5 * 6 = 30 (left: 30 12) -> 30 - 12 = 18 (left: 18) -> 18 * 8 = 144 (left: 8)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "18"
                }
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 5 * 6 = 30 (left: 30 12) -> 30 - 12 = 18 (left: 18) -> None",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "18"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "18"
                }
            },
            "Step 7": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 5 * 6 = 30 (left: 30 12) -> 30 - 12 = 18 (left: 18) -> 18 / 2 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "18"
                }
            },
            "Step 8": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 5 * 6 = 30 (left: 30 12) -> 30 - 12 = 18 (left: 18) -> No possible next steps with the number 18.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 2 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12) -> 12 - 1 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 5 * 6 = 30 (left: 30 12) -> 30 - 12 = 18 (left: 18) -> 18 - 8 = 10 (left: 8 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 5 * 6 = 30 (left: 30 12) -> 30 - 12 = 18 (left: 18) -> 18 - 8 = 10 (left: 8 10) -> 10 - 8 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "18"
                },
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 5 * 6 = 30 (left: 30 12) -> 30 - 12 = 18 (left: 18) -> 18 - 0 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "18"
                }
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 5 * 6 = 30 (left: 30 12) -> 30 - 12 = 18 (left: 18) -> 18 / 2 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "18"
                },
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "18"
                }
            },
            "Step 7": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 5 * 6 = 30 (left: 30 12) -> 30 - 12 = 18 (left: 18) -> 18 / 2 = 9",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 5 * 6 = 30 (left: 30 12) -> 30 - 12 = 18 (left: 18) -> 18 / 2 = 9 -> 9 * 2 = 18",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 6 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "5 6 12"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 5 * 6 = 30 (left: 30 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 5 * 6 = 30 (left: 30 12) -> 30 - 12 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 5 * 6 = 30 (left: 30 12) -> 30 - 12 = 18 (left: 18) -> 18 * 2 = 36 (left: 8)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "18"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 5 * 6 = 30 (left: 30 12) -> 30 - 12 = 18 (left: 18) -> 18 / 2 = 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 5 * 6 = 30 (left: 30 12) -> 30 - 12 = 18 (left: 18) -> 18 * 8 = 144 (left: 8)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "18"
                }
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 5 * 6 = 30 (left: 30 12) -> 30 - 12 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "18"
                }
            },
            "Step 7": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 5 * 6 = 30 (left: 30 12) -> 30 - 12 = 18 (left: 18) -> 18 / 2 = 9",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 5 * 6 = 30 (left: 30 12) -> 30 - 12 = 18 (left: 18) -> 18 / 2 = 9 -> 2 * 9 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "No more possible next steps as there are no more numbers to operate on."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 6 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "5 6 12"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 5 + 6 = 11 (left: 11 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 5 + 6 = 11 (left: 11 12) -> 11 / 12 = 0.9166666666666666 (left: 0.9166666666666666)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 5 * 6 = 30 (left: 30 12) -> 30 - 12 = 18 (left: 18) -> There are no possible next steps with the input of 18.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 5 * 6 = 30 (left: 30 12) -> 30 - 12 = 18 (left: 18) -> There are no possible next steps with the input of 18. -> 18 - 8 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "18"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 5 * 6 = 30 (left: 30 12) -> 30 - 12 = 18 (left: 18) -> None, as there are no more numbers to operate on.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 5 * 6 = 30 (left: 30 12) -> 30 - 12 = 18 (left: 18) -> None, as there are no more numbers to operate on. -> No more possible next steps as there are no more numbers to operate on.",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "18"
                }
            },
            "Step 7": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 5 * 6 = 30 (left: 30 12) -> 30 - 12 = 18 (left: 18) -> 18 - 2 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "18"
                }
            },
            "Step 8": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 5 * 6 = 30 (left: 30 12) -> 30 - 12 = 18 (left: 18) -> 18 - 8 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "No more possible next steps as there are no more numbers to operate on."
                }
            }
        },
        "Input": "2 3 6 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1058": {
        "puzzle": "2 4 4 5",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 4 4 5)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 4 5"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 5 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 + 6 = 11 (left: 4 11)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 3"
                }
            },
            "Step 3": {
                "Step": "5 - 4 = 1 (left: 2 4 1) -> 4 - 2 = 2 (left: 2 1) -> 2 + 1 = 3 (left: 1 3) -> 1 + 3 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "1 3"
                }
            },
            "Step 4": {
                "Step": "5 - 4 = 1 (left: 2 4 1) -> 4 - 2 = 2 (left: 2 1) -> 2 + 1 = 3 (left: 1 3) -> 3 - 1 = 2 (left: 2 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "3 4"
                }
            },
            "Step 5": {
                "Step": "5 - 4 = 1 (left: 2 4 1) -> 4 - 2 = 2 (left: 2 1) -> 2 + 1 = 3 (left: 1 3) -> 1 + 3 = 4 (left: 3 4) -> 3 + 4 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "3 4"
                }
            },
            "Step 6": {
                "Step": "5 - 4 = 1 (left: 2 4 1) -> 4 - 2 = 2 (left: 2 1) -> 2 + 1 = 3 (left: 1 3) -> 1 + 3 = 4 (left: 3 4) -> 4 - 3 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "3 4"
                },
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "3 4"
                }
            },
            "Step 7": {
                "Step": "5 - 4 = 1 (left: 2 4 1) -> 4 - 2 = 2 (left: 2 1) -> 2 + 1 = 3 (left: 1 3) -> 1 + 3 = 4 (left: 3 4) -> 4 / 3 = 1.33 (left: 1.33)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "3 4"
                }
            },
            "Step 8": {
                "Step": "5 - 4 = 1 (left: 2 4 1) -> 4 - 2 = 2 (left: 2 1) -> 2 + 1 = 3 (left: 1 3) -> 1 + 3 = 4 (left: 3 4) -> 3 / 4 = 0.75 (left: 0.75)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "3 4"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 - 4 = 1 (left: 2 4 1)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 4 5"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 5 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 3"
                }
            },
            "Step 3": {
                "Step": "5 - 4 = 1 (left: 2 4 1) -> 4 - 2 = 2 (left: 2 1) -> 2 + 1 = 3 (left: 1 3) -> 1 * 3 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "1 3"
                }
            },
            "Step 4": {
                "Step": "5 - 4 = 1 (left: 2 4 1) -> 4 - 2 = 2 (left: 2 1) -> 2 + 1 = 3 (left: 1 3) -> 1 + 3 = 4 (left: 3 4)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "3 4"
                }
            },
            "Step 5": {
                "Step": "5 - 4 = 1 (left: 2 4 1) -> 4 - 2 = 2 (left: 2 1) -> 2 + 1 = 3 (left: 1 3) -> 1 + 3 = 4 (left: 3 4) -> 4 / 3 = 1.33333333333 (left: 1.33)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "3 4"
                }
            },
            "Step 6": {
                "Step": "5 - 4 = 1 (left: 2 4 1) -> 4 - 2 = 2 (left: 2 1) -> 2 + 1 = 3 (left: 1 3) -> 1 + 3 = 4 (left: 3 4) -> 3 + 4 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "3 4"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "3 4"
                }
            },
            "Step 7": {
                "Step": "5 - 4 = 1 (left: 2 4 1) -> 4 - 2 = 2 (left: 2 1) -> 2 + 1 = 3 (left: 1 3) -> 1 + 3 = 4 (left: 3 4) -> 3 + 4 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "3 4"
                }
            },
            "Step 8": {
                "Step": "5 - 4 = 1 (left: 2 4 1) -> 4 - 2 = 2 (left: 2 1) -> 2 + 1 = 3 (left: 1 3) -> 1 + 3 = 4 (left: 3 4) -> 3 + 4 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "3 4"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 4 5 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 5 6"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30) -> 10 + 5 = 15 (left: 15 2)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 3"
                }
            },
            "Step 3": {
                "Step": "5 - 4 = 1 (left: 2 4 1) -> 4 - 2 = 2 (left: 2 1) -> 2 + 1 = 3 (left: 1 3) -> 1 + 3 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "15 2"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30) -> 10 + 5 = 15 (left: 15 2) -> 15 - 2 = 13 (left: 13)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "15 2"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "3 4"
                }
            },
            "Step 5": {
                "Step": "5 - 4 = 1 (left: 2 4 1) -> 4 - 2 = 2 (left: 2 1) -> 2 + 1 = 3 (left: 1 3) -> 1 + 3 = 4 (left: 3 4) -> 3 + 4 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "3 4"
                }
            },
            "Step 6": {
                "Step": "5 - 4 = 1 (left: 2 4 1) -> 4 - 2 = 2 (left: 2 1) -> 2 + 1 = 3 (left: 1 3) -> 1 + 3 = 4 (left: 3 4) -> 3 + 4 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "3 4"
                },
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "3 4"
                }
            },
            "Step 7": {
                "Step": "5 - 4 = 1 (left: 2 4 1) -> 4 - 2 = 2 (left: 2 1) -> 2 + 1 = 3 (left: 1 3) -> 1 + 3 = 4 (left: 3 4) -> 4 / 3 = 1.33 (left: 1.33)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "3 4"
                }
            },
            "Step 8": {
                "Step": "5 - 4 = 1 (left: 2 4 1) -> 4 - 2 = 2 (left: 2 1) -> 2 + 1 = 3 (left: 1 3) -> 1 + 3 = 4 (left: 3 4) -> 3 + 4 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "3 4"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 - 2 = 2 (left: 2 4 5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 4 1"
                }
            },
            "Step 1": {
                "Step": "5 - 4 = 1 (left: 2 4 1) -> 4 - 2 = 2 (left: 2 1)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 - 4 = 1 (left: 2 4 1) -> 4 - 2 = 2 (left: 2 1) -> 2 + 1 = 3 (left: 1 3)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "15 2"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30) -> 10 + 5 = 15 (left: 15 2) -> 15 * 2 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "1 3"
                }
            },
            "Step 4": {
                "Step": "5 - 4 = 1 (left: 2 4 1) -> 4 - 2 = 2 (left: 2 1) -> 2 + 1 = 3 (left: 1 3) -> 1 + 3 = 4 (left: 3 4)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "3 4"
                }
            },
            "Step 5": {
                "Step": "5 - 4 = 1 (left: 2 4 1) -> 4 - 2 = 2 (left: 2 1) -> 2 + 1 = 3 (left: 1 3) -> 1 + 3 = 4 (left: 3 4) -> 3 + 4 = 7 (left: 7) ",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "3 4"
                }
            },
            "Step 6": {
                "Step": "5 - 4 = 1 (left: 2 4 1) -> 4 - 2 = 2 (left: 2 1) -> 2 + 1 = 3 (left: 1 3) -> 1 + 3 = 4 (left: 3 4) -> 4 - 3 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "3 4"
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "3 4"
                }
            },
            "Step 7": {
                "Step": "5 - 4 = 1 (left: 2 4 1) -> 4 - 2 = 2 (left: 2 1) -> 2 + 1 = 3 (left: 1 3) -> 1 + 3 = 4 (left: 3 4) -> 4 - 3 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "3 4"
                }
            },
            "Step 8": {
                "Step": "5 - 4 = 1 (left: 2 4 1) -> 4 - 2 = 2 (left: 2 1) -> 2 + 1 = 3 (left: 1 3) -> 1 + 3 = 4 (left: 3 4) -> 3 + 4 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "3 4"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 4 5 6)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 5 6"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> Input:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> Input: -> There is no input provided. Please provide a set of numbers to continue.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "15 2"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30) -> 10 + 5 = 15 (left: 15 2) -> Input: 3 5 7",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30) -> 10 + 5 = 15 (left: 15 2) -> Input: 3 5 7 -> 3 + 5 = 8 (left: 8 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "3 4"
                }
            },
            "Step 5": {
                "Step": "5 - 4 = 1 (left: 2 4 1) -> 4 - 2 = 2 (left: 2 1) -> 2 + 1 = 3 (left: 1 3) -> 1 + 3 = 4 (left: 3 4) -> 3 * 4 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "3 4"
                }
            },
            "Step 6": {
                "Step": "5 - 4 = 1 (left: 2 4 1) -> 4 - 2 = 2 (left: 2 1) -> 2 + 1 = 3 (left: 1 3) -> 1 + 3 = 4 (left: 3 4) -> 4 - 3 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "3 4"
                },
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "3 4"
                }
            },
            "Step 7": {
                "Step": "5 - 4 = 1 (left: 2 4 1) -> 4 - 2 = 2 (left: 2 1) -> 2 + 1 = 3 (left: 1 3) -> 1 + 3 = 4 (left: 3 4) -> 3 - 4 = -1 (left: -1)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "3 4"
                }
            },
            "Step 8": {
                "Step": "5 - 4 = 1 (left: 2 4 1) -> 4 - 2 = 2 (left: 2 1) -> 2 + 1 = 3 (left: 1 3) -> 1 + 3 = 4 (left: 3 4) -> 10 + 5 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "3 4"
                }
            }
        },
        "Input": "2 4 4 5",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1059": {
        "puzzle": "2 4 4 10",
        "Agent 0": {
            "Step 0": {
                "Step": "4 / 2 = 2 (left: 2 4 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 + 6 = 10 (left: 10 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 + 6 = 10 (left: 10 10) -> 10 * 10 = 100 (left: 100)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 6 * 4 = 24 (left: 24 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 6 * 4 = 24 (left: 24 10) -> 24 + 10 = 34 (left: 10 34)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 6 * 4 = 24 (left: 24 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 6 * 4 = 24 (left: 24 10) -> 24 * 10 = 240 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2 8 8"
                }
            },
            "Step 7": {
                "Step": "10 - 2 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8) -> 2 * 8 = 16 (left: 8 16)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 2 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8) -> 2 * 8 = 16 (left: 8 16) -> 16 / 8 = 2 (left: 2)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 / 2 = 2 (left: 2 4 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 / 4 = 2.5 (left: 2.5 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 / 4 = 2.5 (left: 2.5 10) -> 10 + 2.5 = 12.5 (left: 2.5 12.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 6 - 4 = 2 (left: 2 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 6 - 4 = 2 (left: 2 10) -> 10 / 2 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 6 - 4 = 2 (left: 2 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 6 - 4 = 2 (left: 2 10) -> 10 - 2 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2 8 8"
                }
            },
            "Step 7": {
                "Step": "10 - 2 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8) -> 8 - 2 = 6 (left: 6 8)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 2 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8) -> 8 - 2 = 6 (left: 6 8) -> 8 / 6 = 1.33 (left: 1.33)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 / 2 = 2 (left: 2 4 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "2 4 10"
                }
            },
            "Step 1": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 10 - 2 = 8 (left: 4 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 10 - 2 = 8 (left: 4 8) -> 4 * 8 = 32 (left: 32)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 - 4 = 6 (left: 6 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 - 4 = 6 (left: 6 10) -> 6 * 10 = 60 (left: 60)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 4 10"
                }
            },
            "Step 5": {
                "Step": "10 - 2 = 8 (left: 4 8 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 2 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2 8 8"
                }
            },
            "Step 7": {
                "Step": "10 - 2 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8) -> 8 - 2 = 6 (left: 6 8)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 2 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8) -> 8 - 2 = 6 (left: 6 8) -> 8 / 6 = 1.33 (left: 1.33)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 / 2 = 2 (left: 2 4 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "2 4 10"
                }
            },
            "Step 1": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 10 / 2 = 5 (left: 4 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 10 / 2 = 5 (left: 4 5) -> 5 - 4 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 6 / 4 = 1.5 (left: 1.5 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 6 / 4 = 1.5 (left: 1.5 10) -> 1.5 * 10 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 - 6 = 4 (left: 4 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 - 6 = 4 (left: 4 10) -> 4 + 10 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2 8 8"
                }
            },
            "Step 7": {
                "Step": "10 - 2 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8) -> 2 + 8 = 10 (left: 8 10)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 2 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8) -> 2 + 8 = 10 (left: 8 10) -> 10 / 8 = 1.25 (left: 1.25)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 4 6 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 4 10"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 6 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 6 + 4 = 10 (left: 10 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 4 10"
                }
            },
            "Step 3": {
                "Step": "4 / 2 = 2 (left: 2 4 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 4 + 2 = 6 (left: 6 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> Input: 3 5",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> Input: 3 5 -> 3 + 5 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2 8 8"
                }
            },
            "Step 7": {
                "Step": "10 - 2 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8) -> 8 / 2 = 4 (left: 4 8)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 2 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8) -> 8 / 2 = 4 (left: 4 8) -> 8 / 4 = 2 (left: 2 8)",
                "Pruning": null
            }
        },
        "Input": "2 4 4 10",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            }
        ]
    },
    "1060": {
        "puzzle": "3 3 3 4",
        "Agent 0": {
            "Step 0": {
                "Step": "4 / 3 = 1.33 (left: 1.33 3 3)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 3 4"
                }
            },
            "Step 1": {
                "Step": "3 / 3 = 1 (left: 1 3 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 / 3 = 1 (left: 1 3 4) -> 3 + 1 = 4 (left: 4 4)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 4"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 3 4) -> 3 + 4 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 3 4) -> 3 + 4 = 7 (left: 7) -> 7 + 8 = 15 (left: 8 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 4"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 3 4) -> 4 - 3 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 3 4) -> 4 - 3 = 1 (left: 1) -> 1 / 1 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "3 4"
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 4"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 3 4) -> Input: 5 10",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 3 4) -> Input: 5 10 -> 5 + 10 = 15 (left: 10)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "No possible next steps with just one number."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 / 3 = 1 (left: 1 3 4)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 3 4"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 3 4 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 3 4)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 4"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 3 4) -> 4 / 3 = 1.33 (left: 1.33)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 3 4) -> 4 / 3 = 1.33 (left: 1.33) -> 1.33 - 2 = -0.67",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "3 4"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 3 4) -> 4 - 3 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 3 4) -> 4 - 3 = 1 (left: 1) -> No possible next steps with just one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "3 4"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 3 4) -> 3 + 4 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 3 4) -> 3 + 4 = 7 (left: 7) -> 7 - 8 = -1 (left: -1)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "There are no possible next steps since there is only one number provided."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 3 6 4)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 3 4"
                }
            },
            "Step 1": {
                "Step": "3 / 3 = 1 (left: 1 3 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 / 3 = 1 (left: 1 3 4) -> 4 - 3 = 1 (left: 1 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 4"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 3 4) -> Possible next steps:",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 3 4) -> Possible next steps: -> There are no possible next steps with the given input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "3 4"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 3 4) -> 4 - 3 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 3 4) -> 4 - 3 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "3 4"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 3 4) -> 3 + 4 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 3 4) -> 3 + 4 = 7 (left: 7) -> 7 * 8 = 56 (left: 8 56)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 - 3 = 1 (left: 3 3 1)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 3 4"
                }
            },
            "Step 1": {
                "Step": "3 / 3 = 1 (left: 1 3 4) -> 3 - 1 = 2 (left: 2 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 / 3 = 1 (left: 1 3 4) -> 3 - 1 = 2 (left: 2 4) -> 4 - 2 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 4"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 3 4) -> 3 + 4 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 3 4) -> 3 + 4 = 7 (left: 7) -> 7 / 2 = 3.5 (left: 3.5)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "3 4"
                },
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 4"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 3 4) -> 4 / 3 = 1.33 (left: 1.33)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 3 4) -> 4 / 3 = 1.33 (left: 1.33) -> There are no possible next steps since there is only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "3 4"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 3 4) -> 3 - 4 = -1 (left: -1)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 3 4) -> 3 - 4 = -1 (left: -1) -> There are no possible next steps with the input of -1.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 3 3 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 3 4"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 3 6 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 3 6 4) -> 3 * 6 = 18 (left: 4 18)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "4 4"
                }
            },
            "Step 3": {
                "Step": "3 / 3 = 1 (left: 1 3 4) -> 3 + 1 = 4 (left: 4 4) -> 4 * 4 = 16 (left: 16)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 / 3 = 1 (left: 1 3 4) -> 3 + 1 = 4 (left: 4 4) -> 4 * 4 = 16 (left: 16) -> None, as there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 4"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 3 4) -> 3 + 4 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 3 4) -> 3 + 4 = 7 (left: 7) -> 7 * 8 = 56 (left: 8 56)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "3 4"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 3 4) -> 3 * 4 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 3 4) -> 3 * 4 = 12 (left: 12) -> 12 - 8 = 4 (left: 4 8)",
                "Pruning": null
            }
        },
        "Input": "3 3 3 4",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1061": {
        "puzzle": "2 2 2 7",
        "Agent 0": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 2 2 5)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 2 5"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 + 2 = 4 (left: 4 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 + 2 = 4 (left: 4 5) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 2 5"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 * 2 = 4 (left: 4 5)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 * 2 = 4 (left: 4 5) -> 3 + 9 = 12 (left: 12 27)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1 14"
                }
            },
            "Step 5": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 2 / 2 = 1 (left: 1 14) -> 14 / 1 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 2 / 2 = 1 (left: 1 14) -> 14 / 1 = 14 (left: 14) -> 14 + 14 = 28",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1 14"
                }
            },
            "Step 7": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 2 / 2 = 1 (left: 1 14) -> 14 - 1 = 13 (left: 13)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 2 / 2 = 1 (left: 1 14) -> 14 - 1 = 13 (left: 13) -> There are no possible next steps with the number 13.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 2 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 7"
                }
            },
            "Step 1": {
                "Step": "2 * 7 = 14 (left: 2 2 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 2 / 2 = 1 (left: 1 14)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 4 7"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 2 4 7) -> 7 - 4 = 3 (left:",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 2 4 7) -> 7 - 4 = 3 (left: -> 3 + 2 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1 14"
                }
            },
            "Step 5": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 2 / 2 = 1 (left: 1 14) -> 1 + 14 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 2 / 2 = 1 (left: 1 14) -> 1 + 14 = 15 (left: 15) -> 15 - 8 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "1 14"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1 14"
                }
            },
            "Step 7": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 2 / 2 = 1 (left: 1 14) -> 14 - 1 = 13 (left: 1 13)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 2 / 2 = 1 (left: 1 14) -> 14 - 1 = 13 (left: 1 13) -> 1 + 13 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "14 + 14 = 28"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 2 2 5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 2 5"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 + 2 = 4 (left: 4 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 + 2 = 4 (left: 4 5) -> 5 - 4 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 14"
                }
            },
            "Step 3": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 2 / 2 = 1 (left: 1 14) -> 1 + 14 = 15 (left: 14 15)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 2 / 2 = 1 (left: 1 14) -> 1 + 14 = 15 (left: 14 15) -> 14 + 15 = 29 (left: 29)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "2 2 5"
                },
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "2 2 5"
                }
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 + 2 = 4 (left: 4 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 + 2 = 4 (left: 4 5) -> 4 + 5 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1 14"
                }
            },
            "Step 7": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 2 / 2 = 1 (left: 1 14) -> 1 + 14 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 2 / 2 = 1 (left: 1 14) -> 1 + 14 = 15 (left: 15) -> 15 * 2 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "14 / 2 = 7"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 2 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 7"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 2 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 2 7) -> 4 / 2 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 14"
                }
            },
            "Step 3": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 2 / 2 = 1 (left: 1 14) -> 14 - 1 = 13 (left: 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 2 / 2 = 1 (left: 1 14) -> 14 - 1 = 13 (left: 13) -> 13 / 2 = 6.5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1 14"
                }
            },
            "Step 5": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 2 / 2 = 1 (left: 1 14) -> 14 / 1 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 2 / 2 = 1 (left: 1 14) -> 14 / 1 = 14 (left: 14) -> There are no possible next steps as there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1 14"
                }
            },
            "Step 7": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 2 / 2 = 1 (left: 1 14) -> 14 - 1 = 13 (left: 13)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 2 / 2 = 1 (left: 1 14) -> 14 - 1 = 13 (left: 13) -> 13 * 2 = 26 (left: 13 26)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 2 4 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 4 7"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 2 4 7) -> Possible",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 2 4 7) -> Possible -> It seems like there was an error in the input. Please provide a valid set of numbers to continue finding possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 14"
                }
            },
            "Step 3": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 2 / 2 = 1 (left: 1 14) -> 14 - 1 = 13 (left: 13 14)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 2 / 2 = 1 (left: 1 14) -> 14 - 1 = 13 (left: 13 14) -> 13 + 14 = 27 (left: 27)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "1 14"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1 14"
                }
            },
            "Step 5": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 2 / 2 = 1 (left: 1 14) -> 14 / 1 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 2 / 2 = 1 (left: 1 14) -> 14 / 1 = 14 (left: 14) -> 14 / 2 = 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1 14"
                }
            },
            "Step 7": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 2 / 2 = 1 (left: 1 14) -> 14 - 1 = 13 (left: 13)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 2 / 2 = 1 (left: 1 14) -> 14 - 1 = 13 (left: 13) -> 13 * 2 = 26 (left: 26)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "14 / 2 = 7"
                }
            }
        },
        "Input": "2 2 2 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1062": {
        "puzzle": "4 9 10 11",
        "Agent 0": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 10 11 36)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9 "
                }
            },
            "Step 1": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 9 - 4 = 5 (left: 5 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 9 - 4 = 5 (left: 5 9) -> 9 - 5 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> There is only one possible next step: 6 * 6 = 36",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> There is only one possible next step: 6 * 6 = 36 -> There is only one possible next step: 6 * 6 = 36",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> 36 - 2 = 34 (left: 34)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "36"
                }
            },
            "Step 6": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> There are no possible next steps as there are no more numbers to operate on. The final result is 36.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> None, since there is only one number in the input.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> None, since there is only one number in the input. -> No possible next steps as there is only one number in the input.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 / 4 = 2.25 (left: 2.25 10 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9 "
                }
            },
            "Step 1": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 9 / 4 = 2.25 (left: 2.25 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 9 / 4 = 2.25 (left: 2.25 9) -> 2.25 + 9 = 11.25 (left: 11.25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> None - the input is a single number and there are no other numbers to perform operations with.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> None - the input is a single number and there are no other numbers to perform operations with. -> There are no possible next steps since there are no other numbers to perform operations with.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> No possible next steps with a single number input.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> No possible next steps with a single number input. -> No possible next steps with a single number input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> 36 / 2 = 18 -> 18 * 2 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "No possible next steps with a single number input."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 9 = 13 (left: 10 11 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9 "
                }
            },
            "Step 1": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 4 * 9 = 36 (left: 9 36)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> 36 / 2 = 18 -> 10 - 2 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "36"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> There are no possible next steps with only one number given.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> There are no possible next steps with only one number given. -> Please provide more than one number for calculation.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> 36 is a prime number, so there are no possible next steps to manipulate it further.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> 36 is a prime number, so there are no possible next steps to manipulate it further. -> There are no possible next steps to manipulate a prime number like 36 further.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 * 11 = 110 (left: 4 9 ",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9 "
                }
            },
            "Step 1": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 4 * 9 = 36 (left: 9 36)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 + 36 = 45 (left: 45)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> There are no possible next steps for the input 36.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> There are no possible next steps for the input 36. -> There are no possible next steps for the input 36.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> There are no possible next steps with only the number 36.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> There are no possible next steps with only the number 36. -> None",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "36"
                },
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> 36 / 2 = 18 -> 16 + 2 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "There are no possible next steps as there are no more numbers to operate on. The final result is 36."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 10 11 36)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 10 11"
                }
            },
            "Step 1": {
                "Step": "11 - 10 = 1 (left: ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 10 = 1 (left:  -> It seems like you did not provide an input for the calculation. Could you please provide the numbers you would like to use for the next step?",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> None, as there is only one number provided.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> None, as there is only one number provided. -> There are no possible next steps as there is only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> 36 / 2 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "36"
                }
            },
            "Step 6": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> 36 * 2 = 72",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> None, as there is only one number given.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> None, as there is only one number given. -> No possible next steps as there is only one number given.",
                "Pruning": null
            }
        },
        "Input": "4 9 10 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1063": {
        "puzzle": "7 9 10 11",
        "Agent 0": {
            "Step 0": {
                "Step": "7 * 9 = 63 (left: 10 11 63)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 10 11"
                }
            },
            "Step 1": {
                "Step": "7 * 9 = 63 (left: 10 11 63)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "21 63"
                }
            },
            "Step 3": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 21 * 63 = 1323 (left: 1323)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 21 * 63 = 1323 (left: 1323) -> 2 + 3 = 5 (left: 4 5 3)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "21 63"
                }
            },
            "Step 5": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 21 / 63 = 0.3333 (left: 0.3333)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 21 / 63 = 0.3333 (left: 0.3333) -> 0.3333 + 2 = 2.3333",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "21 63"
                }
            },
            "Step 7": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 63 - 21 = 42 (left: 42)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 63 - 21 = 42 (left: 42) -> There are no possible next steps with the input of 42.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 * 11 = 110 (left: 7 9 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 10 11"
                }
            },
            "Step 1": {
                "Step": "9 * 10 = 90 (left: 7 11 90)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 7 = 12.857 (left: 12.857 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "21 63"
                }
            },
            "Step 3": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 21 - 63 = -42 (left: -42)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 21 - 63 = -42 (left: -42) -> -42 / 8 = -5.25 (left: 8)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "21 63"
                },
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "4 5 3"
                }
            },
            "Step 5": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 21 * 63 = 1323 (left: 1323) -> 2 + 3 = 5 (left: 4 5 3) -> 5 - 4 = 1 (left: 1 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 21 * 63 = 1323 (left: 1323) -> 2 + 3 = 5 (left: 4 5 3) -> 5 - 4 = 1 (left: 1 3) -> 1 * 3 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "21 63"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "21 63"
                }
            },
            "Step 7": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 21 - 3 = 18 (left: 18)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 21 - 3 = 18 (left: 18) -> There are no possible next steps as there are no other numbers given to perform operations on in this input.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 * 10 = 90 (left: 7 11 90)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 10 11"
                }
            },
            "Step 1": {
                "Step": "9 * 10 = 90 (left: 7 11 90)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 11 * 7 = 77 (left: 77 90)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "21 63"
                }
            },
            "Step 3": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 21 * 63 = 1323 (left: 1323)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 21 * 63 = 1323 (left: 1323) -> 1 + 3 + 2 + 3 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "21 63"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "21 63"
                }
            },
            "Step 5": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 21 + 63 = 84 (left: 84)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 21 + 63 = 84 (left: 84) -> 8 * 4 = 32",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "21 63"
                }
            },
            "Step 7": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 21 / 63 = 0.3333333333333333 (left: 0.3333333333333333)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 21 / 63 = 0.3333333333333333 (left: 0.3333333333333333) -> 0.3333333333333333 / 0.3333333333333333",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "11 - 10 = 1 (left: 7 9 1)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 10 11"
                }
            },
            "Step 1": {
                "Step": "9 + 10 = 19 (left: 7 11 19)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 10 = 19 (left: 7 11 19) -> 7 + 11 = 18 (left: 18 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "21 63"
                }
            },
            "Step 3": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 63 / 21 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 63 / 21 = 3 (left: 3) -> There is only one possible next step: 3.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "21 63"
                }
            },
            "Step 5": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 21 / 63 = 0.3333333333333333 (left: 0.3333333333333333)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 21 / 63 = 0.3333333333333333 (left: 0.3333333333333333) -> 0.3333333333333333 * 2 = 0.6666666666666666",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "21 63"
                }
            },
            "Step 7": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 63 - 21 = 42 (left: 42)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 63 - 21 = 42 (left: 42) -> There are no possible next steps with just the input 42.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "7 + 9 = 16 (left: 10 11 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 10 11"
                }
            },
            "Step 1": {
                "Step": "9 * 10 = 90 (left: 7 11 90)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 11 * 7 = 77 (left: 77 90)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "21 63"
                }
            },
            "Step 3": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 21 * 63 = 1323 (left: 1323)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 21 * 63 = 1323 (left: 1323) -> 1 - 3 - 2 - 3 = -7 (left: 1323 -7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "21 63"
                }
            },
            "Step 5": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 63 - 21 = 42 (left: 42)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 63 - 21 = 42 (left: 42) -> There are no possible next steps with the input of 42.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "21 63"
                }
            },
            "Step 7": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 21 + 63 = 84",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 21 + 63 = 84 -> 21 / 63 = 0.33333333333333 (left: 0.33333333333333 84)",
                "Pruning": null
            }
        },
        "Input": "7 9 10 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1064": {
        "puzzle": "1 4 5 7",
        "Agent 0": {
            "Step 0": {
                "Step": "7 - 1 = 6 (left: 4 5 ",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 5 "
                }
            },
            "Step 1": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 4 + 5 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 4 + 5 = 9 (left: 9) -> There is only one possible next step with the input 9:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 3": {
                "Step": "7 - 1 = 6 (left: 4 5  -> Input: 10 2 -> 10 + 2 = 12 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "2 12"
                }
            },
            "Step 4": {
                "Step": "7 - 1 = 6 (left: 4 5  -> Input: 10 2 -> 10 + 2 = 12 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "2 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "7 - 1 = 6 (left: 4 5  -> Input: 10 2 -> 10 + 2 = 12 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "2 12"
                }
            },
            "Step 6": {
                "Step": "7 - 1 = 6 (left: 4 5  -> Input: 10 2 -> 10 + 2 = 12 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "2 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "2 12"
                }
            },
            "Step 7": {
                "Step": "7 - 1 = 6 (left: 4 5  -> Input: 10 2 -> 10 + 2 = 12 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "2 12"
                }
            },
            "Step 8": {
                "Step": "7 - 1 = 6 (left: 4 5  -> Input: 10 2 -> 10 + 2 = 12 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "1 + 4 = 5 (left: 5 5 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 5 7"
                }
            },
            "Step 1": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10) -> 10 / 7 = 1.42857142857 (left: 1.42857142857)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 3": {
                "Step": "7 - 1 = 6 (left: 4 5  -> Input: 10 2 -> 10 + 2 = 12 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "2 12"
                }
            },
            "Step 4": {
                "Step": "7 - 1 = 6 (left: 4 5  -> Input: 10 2 -> 10 + 2 = 12 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "2 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "4 5 "
                }
            },
            "Step 5": {
                "Step": "7 - 1 = 6 (left: 4 5  -> Possible next steps:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 1 = 6 (left: 4 5  -> Possible next steps: -> There are no more possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2 12"
                }
            },
            "Step 7": {
                "Step": "7 - 1 = 6 (left: 4 5  -> Input: 10 2 -> 10 + 2 = 12 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "2 12"
                }
            },
            "Step 8": {
                "Step": "7 - 1 = 6 (left: 4 5  -> Input: 10 2 -> 10 + 2 = 12 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 1 = 5 (left: 5 5 7)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 5 7"
                }
            },
            "Step 1": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 7 - 5 = 2 (left: 2 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 7 - 5 = 2 (left: 2 5) -> 2 + 5 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 3": {
                "Step": "7 - 1 = 6 (left: 4 5  -> Input: 10 2 -> 10 + 2 = 12 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "2 12"
                }
            },
            "Step 4": {
                "Step": "7 - 1 = 6 (left: 4 5  -> Input: 10 2 -> 10 + 2 = 12 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "2 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "7 - 1 = 6 (left: 4 5  -> Input: 10 2 -> 10 + 2 = 12 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "2 12"
                }
            },
            "Step 6": {
                "Step": "7 - 1 = 6 (left: 4 5  -> Input: 10 2 -> 10 + 2 = 12 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "2 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2 12"
                }
            },
            "Step 7": {
                "Step": "7 - 1 = 6 (left: 4 5  -> Input: 10 2 -> 10 + 2 = 12 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "2 12"
                }
            },
            "Step 8": {
                "Step": "7 - 1 = 6 (left: 4 5  -> Input: 10 2 -> 10 + 2 = 12 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 + 2 = 7 (left: 4 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 5 7"
                }
            },
            "Step 1": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 7 / 5 = 1.4 (left: 1.4 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 7 / 5 = 1.4 (left: 1.4 5) -> 1.4 + 5 = 6.4 (left: 6.4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 3": {
                "Step": "7 - 1 = 6 (left: 4 5  -> Input: 10 2 -> 10 + 2 = 12 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "2 12"
                }
            },
            "Step 4": {
                "Step": "7 - 1 = 6 (left: 4 5  -> Input: 10 2 -> 10 + 2 = 12 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "4 5 "
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "7 - 1 = 6 (left: 4 5  -> Input: 10 2 -> 10 + 2 = 12 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "2 12"
                }
            },
            "Step 6": {
                "Step": "7 - 1 = 6 (left: 4 5  -> Input: 10 2 -> 10 + 2 = 12 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "2 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "2 12"
                }
            },
            "Step 7": {
                "Step": "7 - 1 = 6 (left: 4 5  -> Input: 10 2 -> 10 + 2 = 12 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "2 12"
                }
            },
            "Step 8": {
                "Step": "7 - 1 = 6 (left: 4 5  -> Input: 10 2 -> 10 + 2 = 12 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 + 4 = 5 (left: 5 5 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 5 "
                }
            },
            "Step 1": {
                "Step": "7 - 1 = 6 (left: 4 5  -> Input: 10 2",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 1 = 6 (left: 4 5  -> Input: 10 2 -> 10 + 2 = 12 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 3": {
                "Step": "7 - 1 = 6 (left: 4 5  -> Input: 10 2 -> 10 + 2 = 12 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "2 12"
                }
            },
            "Step 4": {
                "Step": "7 - 1 = 6 (left: 4 5  -> Input: 10 2 -> 10 + 2 = 12 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "2 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "7 - 1 = 6 (left: 4 5  -> Input: 10 2 -> 10 + 2 = 12 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "2 12"
                }
            },
            "Step 6": {
                "Step": "7 - 1 = 6 (left: 4 5  -> Input: 10 2 -> 10 + 2 = 12 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "2 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "2 12"
                }
            },
            "Step 7": {
                "Step": "7 - 1 = 6 (left: 4 5  -> Input: 10 2 -> 10 + 2 = 12 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "2 12"
                }
            },
            "Step 8": {
                "Step": "7 - 1 = 6 (left: 4 5  -> Input: 10 2 -> 10 + 2 = 12 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": "NA"
            }
        },
        "Input": "1 4 5 7",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "1065": {
        "puzzle": "3 4 9 9",
        "Agent 0": {
            "Step 0": {
                "Step": "9 - 4 = 5 (left: 3 5 9)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 9 9"
                }
            },
            "Step 1": {
                "Step": "4 + 9 = 13 (left: 3 13 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 9 = 13 (left: 3 13 9) -> 13 - 3 = 10 (left: 10 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 27"
                }
            },
            "Step 3": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 + 9 = 15 (left: 4 15) -> 9 / 3 = 3 (left: 3 27) -> 27 - 3 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "7 9 9"
                }
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 7 9 9) -> 9 - 7 = 2 (left: 2 9 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "3 27"
                }
            },
            "Step 5": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 + 9 = 15 (left: 4 15) -> 9 / 3 = 3 (left: 3 27) -> 27 - 3 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "9 10"
                }
            },
            "Step 6": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 4 + 6 = 10 (left: 9 10) -> 9 + 10 = 19 (left: 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "3 27"
                }
            },
            "Step 7": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 + 9 = 15 (left: 4 15) -> 9 / 3 = 3 (left: 3 27) -> 27 - 3 = 24 (left: 3 24)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 + 9 = 15 (left: 4 15) -> 9 / 3 = 3 (left: 3 27) -> 27 - 3 = 24 (left: 3 24) -> 24 - 3 = 21 (left: 21)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "90 / 2 = 45"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 4 9 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 1": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 + 9 = 15 (left: 4 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 + 9 = 15 (left: 4 15) -> 9 / 3 = 3 (left: 3 27)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 5 9"
                }
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 9 * 3 = 27 (left: 27 5)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 9 * 3 = 27 (left: 27 5) -> 27 / 5 = 5.4 (left: 5.4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "9 10"
                }
            },
            "Step 5": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 4 + 6 = 10 (left: 9 10) -> 9 * 10 = 90 (left: 90)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 4 + 6 = 10 (left: 9 10) -> 9 * 10 = 90 (left: 90) -> 90 / 2 = 45",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "3 27"
                }
            },
            "Step 7": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 + 9 = 15 (left: 4 15) -> 9 / 3 = 3 (left: 3 27) -> 27 - 3 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "19"
                }
            },
            "Step 8": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 4 + 6 = 10 (left: 9 10) -> 9 + 10 = 19 (left: 19) -> There are no possible next steps with just the number 19.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 9 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 1": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 4 + 6 = 10 (left: 10 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 4 + 6 = 10 (left: 10 9) -> 10 / 9 = 1.111... (left: 1.111...)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 27"
                }
            },
            "Step 3": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 + 9 = 15 (left: 4 15) -> 9 / 3 = 3 (left: 3 27) -> 27 - 3 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "4 6 9"
                }
            },
            "Step 4": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 4 + 6 = 10 (left: 9 10)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "3 27"
                }
            },
            "Step 5": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 + 9 = 15 (left: 4 15) -> 9 / 3 = 3 (left: 3 27) -> 27 / 3 = 9 (left: 9 27)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 + 9 = 15 (left: 4 15) -> 9 / 3 = 3 (left: 3 27) -> 27 / 3 = 9 (left: 9 27) -> 27 / 9 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "3 27"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "3 27"
                }
            },
            "Step 7": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 + 9 = 15 (left: 4 15) -> 9 / 3 = 3 (left: 3 27) -> 27 - 3 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "3 27"
                }
            },
            "Step 8": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 + 9 = 15 (left: 4 15) -> 9 / 3 = 3 (left: 3 27) -> 27 - 3 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "90 / 2 = 45"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 3 = 6 (left: 4 6 9)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 1": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 9 / 4 = 2.25 (left: 2.25 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 9 / 4 = 2.25 (left: 2.25 6) -> 6 / 2.25 = 2.67 (left: 2.67)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 27"
                }
            },
            "Step 3": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 + 9 = 15 (left: 4 15) -> 9 / 3 = 3 (left: 3 27) -> 3 * 27 = 81 (left: 81)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "3 27"
                }
            },
            "Step 4": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 + 9 = 15 (left: 4 15) -> 9 / 3 = 3 (left: 3 27) -> 27 / 3 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "3 27"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "3 27"
                }
            },
            "Step 5": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 + 9 = 15 (left: 4 15) -> 9 / 3 = 3 (left: 3 27) -> 27 / 3 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "3 27"
                }
            },
            "Step 6": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 + 9 = 15 (left: 4 15) -> 9 / 3 = 3 (left: 3 27) -> 3 * 27 = 81 (left: 81)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "9 10"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "3 27"
                }
            },
            "Step 7": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 + 9 = 15 (left: 4 15) -> 9 / 3 = 3 (left: 3 27) -> 3 * 27 = 81 (left: 81)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "3 27"
                }
            },
            "Step 8": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 + 9 = 15 (left: 4 15) -> 9 / 3 = 3 (left: 3 27) -> 3 * 27 = 81 (left: 81)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "90 / 2 = 45"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 * 3 = 12 (left: 9 9 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 5 9"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> Input: 4 6 10",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> Input: 4 6 10 -> 10 / 4 = 2.5 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 27"
                }
            },
            "Step 3": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 + 9 = 15 (left: 4 15) -> 9 / 3 = 3 (left: 3 27) -> 3 * 27 = 81 (left: 81)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "3 27"
                }
            },
            "Step 4": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 + 9 = 15 (left: 4 15) -> 9 / 3 = 3 (left: 3 27) -> 3 + 27 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "3 27"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 5": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 4 + 6 = 10 (left: 9 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 4 + 6 = 10 (left: 9 10) -> 9 + 10 = 19 (left: 19)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "3 27"
                }
            },
            "Step 7": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 + 9 = 15 (left: 4 15) -> 9 / 3 = 3 (left: 3 27) -> 3 + 27 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "19"
                }
            },
            "Step 8": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 4 + 6 = 10 (left: 9 10) -> 9 + 10 = 19 (left: 19) -> 19 + 2 = 21",
                "Pruning": null
            }
        },
        "Input": "3 4 9 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1066": {
        "puzzle": "3 3 6 8",
        "Agent 0": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 6 6 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 6 8"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8) -> 1.5 / 8 = 0.1875 (left: 0.1875)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 6 8"
                }
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 6 6 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 6 6 8) -> 6 / 6 = 1 (left: 1 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1 8"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 6 6 8) -> 6 / 6 = 1 (left: 1 8) -> 1 + 8 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 6 6 8) -> 6 / 6 = 1 (left: 1 8) -> 1 + 8 = 9 (left: 9) -> There are no more possible next steps with the input of 9.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "1 8"
                }
            },
            "Step 7": {
                "Step": "3 + 3 = 6 (left: 6 6 8) -> 6 / 6 = 1 (left: 1 8) -> 1 + 8 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 + 3 = 6 (left: 6 6 8) -> 6 / 6 = 1 (left: 1 8) -> 1 + 8 = 9 (left: 9) -> 9 + 8 = 17 (left: 8 17)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 - 6 = 2 (left: 3 6 2)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 6 8"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8) -> 1.5 * 8 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 6 8"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 + 6 = 15 (left: 15 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 + 6 = 15 (left: 15 8) -> 15 - 8 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1 8"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 6 6 8) -> 6 / 6 = 1 (left: 1 8) -> 1 + 8 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 6 6 8) -> 6 / 6 = 1 (left: 1 8) -> 1 + 8 = 9 (left: 9) -> There are no possible next steps with just one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "1 8"
                }
            },
            "Step 7": {
                "Step": "3 + 3 = 6 (left: 6 6 8) -> 6 / 6 = 1 (left: 1 8) -> 1 + 8 = 9 (left: 8 9)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 + 3 = 6 (left: 6 6 8) -> 6 / 6 = 1 (left: 1 8) -> 1 + 8 = 9 (left: 8 9) -> 8 * 9 = 72 (left: 72)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "There are no more possible next steps with the input of 9."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 6 8)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 6 8"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 8 - 6 = 2 (left: 2 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 8 - 6 = 2 (left: 2 8) -> 8 - 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 6 8"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 * 6 = 54 (left: 8 54)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 * 6 = 54 (left: 8 54) -> 8 + 54 = 62 (left: 62)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1 8"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 6 6 8) -> 6 / 6 = 1 (left: 1 8) -> 1 * 8 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 6 6 8) -> 6 / 6 = 1 (left: 1 8) -> 1 * 8 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "1 8"
                }
            },
            "Step 7": {
                "Step": "3 + 3 = 6 (left: 6 6 8) -> 6 / 6 = 1 (left: 1 8) -> 8 / 1 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 + 3 = 6 (left: 6 6 8) -> 6 / 6 = 1 (left: 1 8) -> 8 / 1 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 3 9 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 6 8"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8) -> 1.5 * 8 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 6 8"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 8 - 6 = 2 (left: 2 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 8 - 6 = 2 (left: 2 8) -> 2 + 8 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1 8"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 6 6 8) -> 6 / 6 = 1 (left: 1 8) -> 1 * 8 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 6 6 8) -> 6 / 6 = 1 (left: 1 8) -> 1 * 8 = 8 (left: 8) -> 8 / 8 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "1 8"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "1 8"
                }
            },
            "Step 7": {
                "Step": "3 + 3 = 6 (left: 6 6 8) -> 6 / 6 = 1 (left: 1 8) -> 8 / 1 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 + 3 = 6 (left: 6 6 8) -> 6 / 6 = 1 (left: 1 8) -> 8 / 1 = 8 (left: 8) -> There are no possible next steps with just the number 8.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "8 - 6 = 2 (left: 2 6 ",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 6 8"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 + 6 = 15 (left: 8 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 + 6 = 15 (left: 8 15) -> 8 * 15 = 120 (left: 120)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 6 8"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 6 * 8 = 48 (left: 9 48)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 6 * 8 = 48 (left: 9 48) -> 48 / 9 = 5.33 (left: 5.33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1 8"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 6 6 8) -> 6 / 6 = 1 (left: 1 8) -> 8 / 1 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 6 6 8) -> 6 / 6 = 1 (left: 1 8) -> 8 / 1 = 8 (left: 8) -> 8 / 8 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "1 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "1 8"
                }
            },
            "Step 7": {
                "Step": "3 + 3 = 6 (left: 6 6 8) -> 6 / 6 = 1 (left: 1 8) -> 8 / 1 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 + 3 = 6 (left: 6 6 8) -> 6 / 6 = 1 (left: 1 8) -> 8 / 1 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null
            }
        },
        "Input": "3 3 6 8",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1067": {
        "puzzle": "4 4 7 8",
        "Agent 0": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 7 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 8"
                }
            },
            "Step 1": {
                "Step": "7 + 4 = 11 (left: 4 8 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 4 = 11 (left: 4 8 11) -> 4 * 8 = 32 (left: 32 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "16 15"
                }
            },
            "Step 3": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 7 + 8 = 15 (left: 16 15) -> 16 / 15 = 1.06666666667 (left: 1.06666666667)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 7 + 8 = 15 (left: 16 15) -> 16 / 15 = 1.06666666667 (left: 1.06666666667) -> 1.06666666667 * 2 = 2.13333333334",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "16 15"
                }
            },
            "Step 5": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 7 + 8 = 15 (left: 16 15) -> 16 * 15 = 240 (left: 240)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 7 + 8 = 15 (left: 16 15) -> 16 * 15 = 240 (left: 240) -> 240 / 12 = 20 (left",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "No possible next steps with just one number."
                }
            },
            "Step 7": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 7 + 8 = 15 (left: 16 15) -> 16 - 15 = 1 (left: 1) -> No possible next steps with just one number. -> Input: 5",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 7 + 8 = 15 (left: 16 15) -> 16 - 15 = 1 (left: 1) -> No possible next steps with just one number. -> Input: 5 -> 5 - 5 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "240 / 12 = 20 (left"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 7 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 4 "
                }
            },
            "Step 1": {
                "Step": "8 - 4 = 4 (left: 4 4  -> 4 - 4 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 4 = 4 (left: 4 4  -> 4 - 4 = 0 (left: 0) -> There are no possible next steps as there are no numbers provided to perform operations on.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "16 15"
                }
            },
            "Step 3": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 7 + 8 = 15 (left: 16 15) -> 16 + 15 = 31",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 7 + 8 = 15 (left: 16 15) -> 16 + 15 = 31 -> 16 * 15 = 240 (left: 240 31)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "16 15"
                }
            },
            "Step 5": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 7 + 8 = 15 (left: 16 15) -> 16 - 15 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 7 + 8 = 15 (left: 16 15) -> 16 - 15 = 1 (left: 1) -> No possible next steps with just one number.",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "No possible next steps with just one number."
                }
            },
            "Step 7": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 7 + 8 = 15 (left: 16 15) -> 16 - 15 = 1 (left: 1) -> No possible next steps with just one number. -> None.",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "No possible next steps with just one number."
                }
            },
            "Step 8": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 7 + 8 = 15 (left: 16 15) -> 16 - 15 = 1 (left: 1) -> No possible next steps with just one number. -> 10 + 15 = 25 (left: 5 25)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 4 = 8 (left: 7 8 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 8"
                }
            },
            "Step 1": {
                "Step": "8 / 4 = 2 (left: 2 4 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 / 4 = 2 (left: 2 4  -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "16 15"
                }
            },
            "Step 3": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 7 + 8 = 15 (left: 16 15) -> 16 - 15 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 7 + 8 = 15 (left: 16 15) -> 16 - 15 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "16 15"
                }
            },
            "Step 5": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 7 + 8 = 15 (left: 16 15) -> 16 - 15 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 7 + 8 = 15 (left: 16 15) -> 16 - 15 = 1 (left: 1) -> There is only one number given, so there are no possible operations to perform.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "240 / 12 = 20 (left"
                }
            },
            "Step 7": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 7 + 8 = 15 (left: 16 15) -> 16 * 15 = 240 (left: 240) -> 240 / 12 = 20 (left -> 12 + 240 = 252 (left: 20 252)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 7 + 8 = 15 (left: 16 15) -> 16 * 15 = 240 (left: 240) -> 240 / 12 = 20 (left -> 12 + 240 = 252 (left: 20 252) -> 20 * 12 = 240 (left: 240 252)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 7 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 8"
                }
            },
            "Step 1": {
                "Step": "7 + 4 = 11 (left: 4 8 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 4 = 11 (left: 4 8 11) -> 8 - 4 = 4 (left: 4 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "16 15"
                }
            },
            "Step 3": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 7 + 8 = 15 (left: 16 15) -> 16 / 15 = 1.0666666666666667 (left: 1.0666666666666667)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 7 + 8 = 15 (left: 16 15) -> 16 / 15 = 1.0666666666666667 (left: 1.0666666666666667) -> 1.0666666666666667 * 2 = 2.1333333333333334",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "16 15"
                }
            },
            "Step 5": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 7 + 8 = 15 (left: 16 15) -> 16 / 15 = 1.0666666666666667 (left: 1.0666666666666667)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 7 + 8 = 15 (left: 16 15) -> 16 / 15 = 1.0666666666666667 (left: 1.0666666666666667) -> 1.0666666666666667 * 2 = 2.1333333333333334",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "No possible next steps with just one number."
                }
            },
            "Step 7": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 7 + 8 = 15 (left: 16 15) -> 16 - 15 = 1 (left: 1) -> No possible next steps with just one number. -> Input another number to perform operations.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 7 + 8 = 15 (left: 16 15) -> 16 - 15 = 1 (left: 1) -> No possible next steps with just one number. -> Input another number to perform operations. -> 8 / 7 = 1.14 (left: 1.14)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "No possible next steps with just one number."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "8 - 4 = 4 (left: 4 4 ",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 8"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 16 7 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 7 + 8 = 15 (left: 16 15)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "16 15"
                }
            },
            "Step 3": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 7 + 8 = 15 (left: 16 15) -> 16 - 15 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 7 + 8 = 15 (left: 16 15) -> 16 - 15 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "16 15"
                }
            },
            "Step 5": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 7 + 8 = 15 (left: 16 15) -> 16 - 15 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 7 + 8 = 15 (left: 16 15) -> 16 - 15 = 1 (left: 1) -> There are no possible next steps with just one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "No possible next steps with just one number."
                }
            },
            "Step 7": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 7 + 8 = 15 (left: 16 15) -> 16 - 15 = 1 (left: 1) -> No possible next steps with just one number. -> Addition, subtraction, multiplication, or division with another number.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 7 + 8 = 15 (left: 16 15) -> 16 - 15 = 1 (left: 1) -> No possible next steps with just one number. -> Addition, subtraction, multiplication, or division with another number. -> Subtraction: 8 - 8 = 0 (left: 2 0 14)",
                "Pruning": null
            }
        },
        "Input": "4 4 7 8",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1068": {
        "puzzle": "3 5 11 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 5 = 7 (left: 3 7 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 16 12"
                }
            },
            "Step 1": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 3 = 5.33 (left: 5.33 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 3 = 5.33 (left: 5.33 12) -> 12 - 5.33 = 6.67 (left: 6.67)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 11 12"
                }
            },
            "Step 3": {
                "Step": "11 + 3 = 14 (left: 5 14 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 + 3 = 14 (left: 5 14 12) -> 5 * 14 = 70 (left: 12 70)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "0 50"
                }
            },
            "Step 5": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 - 3 = 13 (left: 13 12) -> 13 + 12 = 25 (left: 25) -> 25 + 25 = 50 -> 25 - 25 = 0 (left: 0 50) -> 0 * 50 = 0 (left: 0 50)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 - 3 = 13 (left: 13 12) -> 13 + 12 = 25 (left: 25) -> 25 + 25 = 50 -> 25 - 25 = 0 (left: 0 50) -> 0 * 50 = 0 (left: 0 50) -> 50 / 0 = undefined",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "0 50"
                }
            },
            "Step 7": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 - 3 = 13 (left: 13 12) -> 13 + 12 = 25 (left: 25) -> 25 + 25 = 50 -> 25 - 25 = 0 (left: 0 50) -> 0 * 50 = 0 (left: 50)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "0 50"
                }
            },
            "Step 8": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 - 3 = 13 (left: 13 12) -> 13 + 12 = 25 (left: 25) -> 25 + 25 = 50 -> 25 - 25 = 0 (left: 0 50) -> 50 + 0 = 50 (left: 50)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "0 50"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "11 - 5 = 6 (left: 3 6 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 16 12"
                }
            },
            "Step 1": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 - 3 = 13 (left: 13 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 - 3 = 13 (left: 13 12) -> 13 + 12 = 25 (left: 25)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "25"
                }
            },
            "Step 3": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 - 3 = 13 (left: 13 12) -> 13 + 12 = 25 (left: 25) -> 25 + 25 = 50",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 - 3 = 13 (left: 13 12) -> 13 + 12 = 25 (left: 25) -> 25 + 25 = 50 -> 25 - 25 = 0 (left: 0 50)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "0 50"
                }
            },
            "Step 5": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 - 3 = 13 (left: 13 12) -> 13 + 12 = 25 (left: 25) -> 25 + 25 = 50 -> 25 - 25 = 0 (left: 0 50) -> 0 + 50 = 50 (left: 50)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "0 50"
                }
            },
            "Step 6": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 - 3 = 13 (left: 13 12) -> 13 + 12 = 25 (left: 25) -> 25 + 25 = 50 -> 25 - 25 = 0 (left: 0 50) -> 50 / 0 is undefined (left: 0 50)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "0 50"
                }
            },
            "Step 7": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 - 3 = 13 (left: 13 12) -> 13 + 12 = 25 (left: 25) -> 25 + 25 = 50 -> 25 - 25 = 0 (left: 0 50) -> 50 * 0 = 0 (left: 0 50)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 - 3 = 13 (left: 13 12) -> 13 + 12 = 25 (left: 25) -> 25 + 25 = 50 -> 25 - 25 = 0 (left: 0 50) -> 50 * 0 = 0 (left: 0 50) -> 50 / 0 = undefined",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 * 5 = 15 (left: 15 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "15 11 12"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 15 11 12) -> 15 / 11 = 1.3636363636363635 (left: 1 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 15 11 12) -> 15 / 11 = 1.3636363636363635 (left: 1 12) -> 1 + 12 = 13 (left: 12 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "25"
                }
            },
            "Step 3": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 - 3 = 13 (left: 13 12) -> 13 + 12 = 25 (left: 25) -> 25 + 2 = 27 (left: 27)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "25"
                }
            },
            "Step 4": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 - 3 = 13 (left: 13 12) -> 13 + 12 = 25 (left: 25) -> 25 + 8 = 33 (left: 8)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "25"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "0 50"
                }
            },
            "Step 5": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 - 3 = 13 (left: 13 12) -> 13 + 12 = 25 (left: 25) -> 25 + 25 = 50 -> 25 - 25 = 0 (left: 0 50) -> 50 * 0 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "0 50"
                }
            },
            "Step 6": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 - 3 = 13 (left: 13 12) -> 13 + 12 = 25 (left: 25) -> 25 + 25 = 50 -> 25 - 25 = 0 (left: 0 50) -> 50 * 0 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "0 50"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "0 50"
                }
            },
            "Step 7": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 - 3 = 13 (left: 13 12) -> 13 + 12 = 25 (left: 25) -> 25 + 25 = 50 -> 25 - 25 = 0 (left: 0 50) -> 0 + 50 = 50 (left: 50)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "0 50"
                }
            },
            "Step 8": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 - 3 = 13 (left: 13 12) -> 13 + 12 = 25 (left: 25) -> 25 + 25 = 50 -> 25 - 25 = 0 (left: 0 50) -> 50 / 0 is undefined (left: 0 50) -> 50 - 0 = 50 (left: 50)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "0 50"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "3 * 5 = 15 (left: 15 11 12)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 11 12"
                }
            },
            "Step 1": {
                "Step": "3 + 5 = 8 (left: 8 11 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 5 = 8 (left: 8 11 12) -> 8 + 11 = 19 (left: 19 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "25"
                }
            },
            "Step 3": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 - 3 = 13 (left: 13 12) -> 13 + 12 = 25 (left: 25) -> 25 - 2 = 23 (left: 2)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "15 11 12"
                }
            },
            "Step 4": {
                "Step": "3 * 5 = 15 (left: 15 11 12) -> 15 - 11 = 4 (left: 4 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "0 50"
                }
            },
            "Step 5": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 - 3 = 13 (left: 13 12) -> 13 + 12 = 25 (left: 25) -> 25 + 25 = 50 -> 25 - 25 = 0 (left: 0 50) -> 0 + 50 = 50 (left: 50)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "0 50"
                }
            },
            "Step 6": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 - 3 = 13 (left: 13 12) -> 13 + 12 = 25 (left: 25) -> 25 + 25 = 50 -> 25 - 25 = 0 (left: 0 50) -> 0 + 50 = 50 (left: 50)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "0 50"
                },
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "0 50"
                }
            },
            "Step 7": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 - 3 = 13 (left: 13 12) -> 13 + 12 = 25 (left: 25) -> 25 + 25 = 50 -> 25 - 25 = 0 (left: 0 50) -> 0 + 50 = 50 (left: 50)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "0 50"
                }
            },
            "Step 8": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 - 3 = 13 (left: 13 12) -> 13 + 12 = 25 (left: 25) -> 25 + 25 = 50 -> 25 - 25 = 0 (left: 0 50) -> 0 + 50 = 50 (left: 50)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "0 50"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 + 11 = 16 (left: 3 16 12)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "15 11 12"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 15 11 12) -> 12 / 11",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 15 11 12) -> 12 / 11 -> 12 / 11 = 1.0909090909090908",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "25"
                }
            },
            "Step 3": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 - 3 = 13 (left: 13 12) -> 13 + 12 = 25 (left: 25) -> 25 + 8 = 33 (left: 8)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "3 16 12"
                }
            },
            "Step 4": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 - 12 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "0 50"
                }
            },
            "Step 5": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 - 3 = 13 (left: 13 12) -> 13 + 12 = 25 (left: 25) -> 25 + 25 = 50 -> 25 - 25 = 0 (left: 0 50) -> 0 * 50 = 0 (left: 0 50)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 - 3 = 13 (left: 13 12) -> 13 + 12 = 25 (left: 25) -> 25 + 25 = 50 -> 25 - 25 = 0 (left: 0 50) -> 0 * 50 = 0 (left: 0 50) -> 0 + 50 = 50 (left: 50)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "0 50"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "0 50"
                }
            },
            "Step 7": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 - 3 = 13 (left: 13 12) -> 13 + 12 = 25 (left: 25) -> 25 + 25 = 50 -> 25 - 25 = 0 (left: 0 50) -> 50 / 0 is undefined (left: 0 50) -> 10 / 5 = 2 (left: 2 5)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 - 3 = 13 (left: 13 12) -> 13 + 12 = 25 (left: 25) -> 25 + 25 = 50 -> 25 - 25 = 0 (left: 0 50) -> 50 / 0 is undefined (left: 0 50) -> 10 / 5 = 2 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "0 50"
                }
            }
        },
        "Input": "3 5 11 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1069": {
        "puzzle": "4 4 6 10",
        "Agent 0": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 6 10)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 10 10"
                }
            },
            "Step 1": {
                "Step": "6 + 4 = 10 (left: 4 10 10) -> 10 - 4 = 6 (left: 6 10 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 4 = 10 (left: 4 10 10) -> 10 - 4 = 6 (left: 6 10 10) -> 6 * 10 = 60 (left: 10 10 60)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "10 14"
                }
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14) -> 10 * 14 = 140 (left: 140)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14) -> 10 * 14 = 140 (left: 140) -> 1 + 4 + 0 = 5 (left: 5 0)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "10 14"
                }
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14) -> 10 * 14 = 140 (left: 140)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14) -> 10 * 14 = 140 (left: 140) -> 140 - 1 = 139 (left: 1 139)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "10 14"
                }
            },
            "Step 7": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14) -> 10 * 14 = 140 (left: 140)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14) -> 10 * 14 = 140 (left: 140) -> 140 * 2 = 280 (left: 280)"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 4 = 10 (left: 4 10 10)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 4 10"
                }
            },
            "Step 1": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 4 / 4 = 1 (left: 1 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 4 / 4 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "10 14"
                }
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14) -> 14 / 10 = 1.4 (left: 1.4 14)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14) -> 14 / 10 = 1.4 (left: 1.4 14) -> 14 - 1.4 = 12.6 (left: 12.6)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "10 10 60"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "10 14"
                }
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14) -> 10 / 14 = 0.7142857142857143 (left: 0.7142857142857143)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14) -> 10 / 14 = 0.7142857142857143 (left: 0.7142857142857143) -> 0.7142857142857143 * 2 = 1.4285714285714286",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "10 14"
                }
            },
            "Step 7": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14) -> 10 - 14 = -4 (left: -4)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14) -> 10 - 14 = -4 (left: -4) -> There are no possible next steps with -4 as the input."
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 6 = 4 (left: 4 4 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 10"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 6 8 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "10 14"
                }
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14) -> 14 / 10 = 1.4 (left: 1.4)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14) -> 14 / 10 = 1.4 (left: 1.4) -> 1.4 - 1 = 0.4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "10 14"
                }
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14) -> 10 / 14 = 0.7142857142857143 (left: 0.7142857142857143)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14) -> 10 / 14 = 0.7142857142857143 (left: 0.7142857142857143) -> 0.7142857142857143 + 2 = 2.7142857142857144 (left: 2.7142857142857144)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "10 14"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "10 14"
                }
            },
            "Step 7": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14) -> 10 * 14 = 140 (left: 140)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14) -> 10 * 14 = 140 (left: 140) -> 10 * 40 = 400 (left: 400)"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 + 4 = 8 (left: 6 8 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 10 10"
                }
            },
            "Step 1": {
                "Step": "6 + 4 = 10 (left: 4 10 10) -> 10 / 4 = 2.5 (left: 2.5 10 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 4 = 10 (left: 4 10 10) -> 10 / 4 = 2.5 (left: 2.5 10 10) -> 2.5 + 10 = 12.5 (left: 10 12.5)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "10 14"
                }
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14) -> 14 / 10 = 1.4 (left: 1.4)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14) -> 14 / 10 = 1.4 (left: 1.4) -> 1.4 * 2 = 2.8 (left: 2.8)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "10 14"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "10 14"
                }
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14) -> 10 - 14 = -4 (left: -4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14) -> 10 - 14 = -4 (left: -4) -> There are no possible next steps with the current numbers provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "10 14"
                }
            },
            "Step 7": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24) -> Answer: ((4 + 4) + 6) + 10 = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "10 / 4 = 2.5 (left: 4 6 2.5)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 4 10"
                }
            },
            "Step 1": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 4 + 6 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "10 14"
                }
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14) -> 10 / 14 = 0.7142857142857143 (left: 0.7142857142857143)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14) -> 10 / 14 = 0.7142857142857143 (left: 0.7142857142857143) -> 0.7142857142857143 / 2 = 0.35714285714285715",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "10 14"
                }
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14) -> 10 * 14 = 140 (left: 140) ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14) -> 10 * 14 = 140 (left: 140)  -> 140 / 2 = 70 (left: 70)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "10 14"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "10 14"
                }
            },
            "Step 7": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14) -> 10 * 14 = 140 (left: 140)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14) -> 10 * 14 = 140 (left: 140) -> 140 - 0 = 140 (left: 0)"
            }
        },
        "Input": "4 4 6 10",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 1
            },
            {
                "r": -1
            }
        ]
    },
    "1070": {
        "puzzle": "4 6 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 9 10 13)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 6 9 13"
                }
            },
            "Step 1": {
                "Step": "9 + 13 = 22 (left: 4 6 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 13 = 22 (left: 4 6  -> 4 * 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "9 + 13 = 22 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (6 + (9 + 13)) = 24",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 + 13 = 22 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (6 + (9 + 13)) = 24 -> Input: 3 3 3 8\nSteps:\n3 + 3 = 6 (left: 6 3 8)\n6 * 3 = 18 (left: 18 8)\n18 - 8 = 10 (left: 10)\n10 + 8 = 18 (left: 18)\n18 - 3 = 15 (left: 15)\n15 + 3 = 18 (left: 18)\n18 + ",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "9 + 13 = 22 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (6 + (9 + 13)) = 24",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 13 = 22 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (6 + (9 + 13)) = 24 -> Input: 3 3 8 9\nSteps:\n3 + 9 = 12 (left: 3 8 12)\n3 * 8 = 24 (left: 24)\nAnswer: (3 + 9) * 8 = 24",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "9 + 13 = 22 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (6 + (9 + 13)) = 24",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 + 13 = 22 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (6 + (9 + 13)) = 24 -> Input: 3 4 5 6\nSteps:\n5 * 4 = 20 (left: 3 6 20)\n20 - 6 = 14 (left: 3 14)\n14 + 3 = 17 (left: 17)\n17 + 6 = 23 (left: 23)\n23 + 1 = 24 (left: 24)\nAnswer: (((3 + 6) - 4) * 5)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 6 = 24 (left: 9 13 24)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 6 9 13"
                }
            },
            "Step 1": {
                "Step": "6 / 4 = 1.5 (left: 1.5 9 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 4 = 1.5 (left: 1.5 9 13) -> 9 / 1.5 = 6 (left: 6 13",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "9 + 13 = 22 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (6 + (9 + 13)) = 24",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 + 13 = 22 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (6 + (9 + 13)) = 24 -> Input: 3 3 4 5\nSteps:\n3 * 5 = 15 (left: 3 4 15)\n4 - 3 = 1 (left: 1 15)\n1 * 15 = 15 (left: 15)\n15 + 3 = 18 (left: 18)\n18 + 4 = 22 (left: 22)\n22 + 3 = 25 (left: 25)\n25 - ",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "9 + 13 = 22 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (6 + (9 + 13)) = 24",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 13 = 22 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (6 + (9 + 13)) = 24 -> Input: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6)\n3 + 6 = 9 (left: 9)\n9 * 24 = 24 (left: 24)\nAnswer: (3 * 8) * (3 + 6) = 24",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "9 + 13 = 22 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (6 + (9 + 13)) = 24",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 + 13 = 22 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (6 + (9 + 13)) = 24 -> Input: 3 3 4 7\nSteps:\n3 * 4 = 12 (left: 3 7 12)\n7 + 12 = 19 (left: 3 19)\n19 - 3 = 16 (left: 16)\n16 + 8 = 24 (left: 24)\nAnswer: ((3 * 4) + 7) + 8 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 4 6 4)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 6 9 13"
                }
            },
            "Step 1": {
                "Step": "4 + 6 = 10 (left: 9 10 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 6 = 10 (left: 9 10 13) -> 10 + 9 = 19 (left: 13 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 4"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 / 4 = 1.5 (left: 1.5 4 4)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 / 4 = 1.5 (left: 1.5 4 4) -> 1.5 + 4 = 5.5 (left: 4 5.5)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "9 + 13 = 22 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (6 + (9 + 13)) = 24",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 13 = 22 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (6 + (9 + 13)) = 24 -> Input: 3 3 7 9\nSteps:\n3 * 9 = 27 (left: 3 7 27)\n7 - 3 = 4 (left: 4 27)\n4 * 27 = 108 (left: 108)\n108 / 4 = 27 (left: 27)\nAnswer: ((3 * 9) - (7 - 3)) / 4 = 24",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "9 + 13 = 22 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (4 * 6) = 24",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 + 13 = 22 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (4 * 6) = 24 -> Input: 3 3 5 8\nSteps:\n3 + 5 = 8 (left: 3 8 8)\n8 * 3 = 24 (left: 24 8)\nAnswer: (3 + 5) * 8 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 9 10 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 4"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 4 6 4) ->  -> It appears that the input is missing. Could you please provide the numbers for the next steps?",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "9 + 13 = 22 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (6 + (9 + 13)) = 24",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 + 13 = 22 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (6 + (9 + 13)) = 24 -> Input: 3 5 7 8\nSteps:\n7 + 8 = 15 (left: 3 5 15)\n3 * 5 = 15 (left: 15 15)\n15 * 15 = 225 (left: 225)\nAnswer: (3 * 5) * (7 + 8) = 225",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "9 + 13 = 22 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (4 * 6) + (9 + 13) = 24",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 13 = 22 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (4 * 6) + (9 + 13) = 24 -> Input: 3 5 7 8\nSteps:\n7 - 3 = 4 (left: 4 5 8)\n4 + 8 = 12 (left: 5 12)\n5 * 12 = 60 (left: 60)\n60 / 3 = 20 (left: 20)\n20 - 8 = 12 (left: 12)\n12 + 12 = 24 (left: 24)\nAnswer: (((",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "9 + 13 = 22 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (6 + (9 + 13)) = 24",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 + 13 = 22 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (6 + (9 + 13)) = 24 -> Input: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6)\n3 * 6 = 18 (left: 18)\n18 + 6 = 24 (left: 24)\nAnswer: (3 * 8) + (3 * 6) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 4 15 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 4"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 / 4 = 1.5 (left: 1.5 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 / 4 = 1.5 (left: 1.5 4) -> 4 - 1.5 = 2.5 (left: 2.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "9 + 13 = 22 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (6 + (9 + 13)) = 24",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 + 13 = 22 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (6 + (9 + 13)) = 24 -> Input: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n1 * 9 = 9 (left: 9)\n9 * 9 = 81 (left: 81)\n81 / 3 = 27 (left: 27)\n27 - 8 = 19 (left: 19)\n19 - ",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "9 + 13 = 22 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (6 + (9 + 13)) = 24",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 13 = 22 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (6 + (9 + 13)) = 24 -> Input: 3 3 4 8\nSteps:\n3 * 8 = 24 (left: 3 4)\n3 * 4 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: (3 * 8) - (3 * 4) = 24",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "9 + 13 = 22 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (9 + 13) + (4 * 6) = 24",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 + 13 = 22 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (9 + 13) + (4 * 6) = 24 -> Input: 3 4 5 6\nSteps:\n4 * 6 = 24 (left: 3 5 24)\n3 + 5 = 8 (left: 8 24)\n8 * 24 = 192 (left: 192)\nAnswer: (3 + 5) * (4 * 6) = 24",
                "Pruning": "NA"
            }
        },
        "Input": "4 6 9 13",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "1071": {
        "puzzle": "3 5 6 11",
        "Agent 0": {
            "Step 0": {
                "Step": "11 - 5 = 6 (left: 3 6 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 6 11"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 6 11 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 6 11 15) -> 6 + 11 = 17 (left: 15 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 6 11"
                }
            },
            "Step 3": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left:",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: -> 11 - 3 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 6 11"
                }
            },
            "Step 5": {
                "Step": "3 * 5 = 15 (left: 6 11 15)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 5 = 15 (left: 6 11 15) -> 6 * 11 = 66 (left: 15 66)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "5 6.36"
                }
            },
            "Step 7": {
                "Step": "6 - 3 = 3 (left: 3 5 11) -> 11 / 3 = 3.67 (left: 3.67 5) -> 5 / 3.67 = 1.36 (left: 1.36 5) -> 1.36 + 5 = 6.36 (left: 5 6.36) -> 5 / 6.36 = 0.787 (left: 0.787)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "5 6.36"
                }
            },
            "Step 8": {
                "Step": "6 - 3 = 3 (left: 3 5 11) -> 11 / 3 = 3.67 (left: 3.67 5) -> 5 / 3.67 = 1.36 (left: 1.36 5) -> 1.36 + 5 = 6.36 (left: 5 6.36) -> 5 / 6.36 = 0.787 (left: 0.787)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "5 6.36"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 * 6 = 30 (left: 3 30)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 5 11"
                }
            },
            "Step 1": {
                "Step": "6 - 3 = 3 (left: 3 5 11) -> 5 + 11 = 16 (left: 3 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 3 = 3 (left: 3 5 11) -> 5 + 11 = 16 (left: 3 16) -> 3 / 16 = 0.19 (left: 0.19 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 5 11"
                }
            },
            "Step 3": {
                "Step": "6 - 3 = 3 (left: 3 5 11) -> 3 + 5 = 8 (left: 8 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 - 3 = 3 (left: 3 5 11) -> 3 + 5 = 8 (left: 8 11) -> 8 / 11 \u2248 0.7273 (left: 0.7273)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "3.67 5"
                }
            },
            "Step 5": {
                "Step": "6 - 3 = 3 (left: 3 5 11) -> 11 / 3 = 3.67 (left: 3.67 5) -> 5 / 3.67 = 1.36 (left: 1.36 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 3 = 3 (left: 3 5 11) -> 11 / 3 = 3.67 (left: 3.67 5) -> 5 / 3.67 = 1.36 (left: 1.36 5) -> 1.36 + 5 = 6.36 (left: 5 6.36)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "5 6.36"
                }
            },
            "Step 7": {
                "Step": "6 - 3 = 3 (left: 3 5 11) -> 11 / 3 = 3.67 (left: 3.67 5) -> 5 / 3.67 = 1.36 (left: 1.36 5) -> 1.36 + 5 = 6.36 (left: 5 6.36) -> 5 * 6.36 = 31.8 (left: 31.8)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "5 6.36"
                }
            },
            "Step 8": {
                "Step": "6 - 3 = 3 (left: 3 5 11) -> 11 / 3 = 3.67 (left: 3.67 5) -> 5 / 3.67 = 1.36 (left: 1.36 5) -> 1.36 + 5 = 6.36 (left: 5 6.36) -> 5 / 6.36 = 0.787 (left: 0.787)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "5 6.36"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 3 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 6 11"
                }
            },
            "Step 1": {
                "Step": "6 - 3 = 3 (left: 3 5 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 3 = 3 (left: 3 5 11) -> 5 - 3 = 2 (left: 2 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 6 11"
                }
            },
            "Step 3": {
                "Step": "6 - 3 = 3 (left: 3 5 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 - 3 = 3 (left: 3 5 11) -> 5 + 11 = 16 (left: 3 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "3.67 5"
                }
            },
            "Step 5": {
                "Step": "6 - 3 = 3 (left: 3 5 11) -> 11 / 3 = 3.67 (left: 3.67 5) -> 3.67 * 5 = 18.35 (left: 18.35)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 3 = 3 (left: 3 5 11) -> 11 / 3 = 3.67 (left: 3.67 5) -> 3.67 * 5 = 18.35 (left: 18.35) -> There are no possible next steps with the input 18.35 as it is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "5 6.36"
                }
            },
            "Step 7": {
                "Step": "6 - 3 = 3 (left: 3 5 11) -> 11 / 3 = 3.67 (left: 3.67 5) -> 5 / 3.67 = 1.36 (left: 1.36 5) -> 1.36 + 5 = 6.36 (left: 5 6.36) -> 5 + 6.36 = 11.36 (left: 11.36)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "5 6.36"
                }
            },
            "Step 8": {
                "Step": "6 - 3 = 3 (left: 3 5 11) -> 11 / 3 = 3.67 (left: 3.67 5) -> 5 / 3.67 = 1.36 (left: 1.36 5) -> 1.36 + 5 = 6.36 (left: 5 6.36) -> 5 * 6.36 = 31.8 (left: 31.8)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "5 6.36"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "11 - 5 = 6 (left: 3 6 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 6 11"
                }
            },
            "Step 1": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 3 + 6 = 9 (left: 9 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 3 + 6 = 9 (left: 9 11) -> 9 * 11 = 99 (left: 99)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 6 11"
                }
            },
            "Step 3": {
                "Step": "5 - 3 = 2 (left: 2 6 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 - 3 = 2 (left: 2 6 11) -> 11 - 2 = 9 (left: 6 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "3.67 5"
                }
            },
            "Step 5": {
                "Step": "6 - 3 = 3 (left: 3 5 11) -> 11 / 3 = 3.67 (left: 3.67 5) -> 5 / 3.67 = 1.36 (left: 1.36 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 3 = 3 (left: 3 5 11) -> 11 / 3 = 3.67 (left: 3.67 5) -> 5 / 3.67 = 1.36 (left: 1.36 5) -> 1.36 + 5 = 6.36 (left: 5 6.36)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "5 6.36"
                }
            },
            "Step 7": {
                "Step": "6 - 3 = 3 (left: 3 5 11) -> 11 / 3 = 3.67 (left: 3.67 5) -> 5 / 3.67 = 1.36 (left: 1.36 5) -> 1.36 + 5 = 6.36 (left: 5 6.36) -> 5 - 6.36 = -1.36 (left: -1.36)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "5 6.36"
                }
            },
            "Step 8": {
                "Step": "6 - 3 = 3 (left: 3 5 11) -> 11 / 3 = 3.67 (left: 3.67 5) -> 5 / 3.67 = 1.36 (left: 1.36 5) -> 1.36 + 5 = 6.36 (left: 5 6.36) -> 5 / 6.36 = 0.787 (left: 0.787 6.36)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 - 3 = 3 (left: 3 5 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 6 11"
                }
            },
            "Step 1": {
                "Step": "3 + 5 = 8 (left: 6 8 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 5 = 8 (left: 6 8 11) -> 8 + 6 = 14 (left: 11 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 6 11"
                }
            },
            "Step 3": {
                "Step": "6 - 3 = 3 (left: 3 5 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 - 3 = 3 (left: 3 5 11) -> 11 / 3 = 3.67 (left: 3.67 5)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "3.67 5"
                }
            },
            "Step 5": {
                "Step": "6 - 3 = 3 (left: 3 5 11) -> 11 / 3 = 3.67 (left: 3.67 5) -> 3.67 - 5 = -1.33 (left: -1.33)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 3 = 3 (left: 3 5 11) -> 11 / 3 = 3.67 (left: 3.67 5) -> 3.67 - 5 = -1.33 (left: -1.33) -> There are no possible next steps as there are no other numbers provided to perform operations with -1.33.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "5 6.36"
                }
            },
            "Step 7": {
                "Step": "6 - 3 = 3 (left: 3 5 11) -> 11 / 3 = 3.67 (left: 3.67 5) -> 5 / 3.67 = 1.36 (left: 1.36 5) -> 1.36 + 5 = 6.36 (left: 5 6.36) -> 5 + 6.36 = 11.36 (left: 11.36)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "5 6.36"
                }
            },
            "Step 8": {
                "Step": "6 - 3 = 3 (left: 3 5 11) -> 11 / 3 = 3.67 (left: 3.67 5) -> 5 / 3.67 = 1.36 (left: 1.36 5) -> 1.36 + 5 = 6.36 (left: 5 6.36) -> 5 / 6.36 = 0.787 (left: 0.787)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "5 6.36"
                }
            }
        },
        "Input": "3 5 6 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1072": {
        "puzzle": "1 5 8 13",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 5 = 6 (left: 6 8 13)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 40 13"
                }
            },
            "Step 1": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 - 1 = 39 (left: 39 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 - 1 = 39 (left: 39 13) -> 39 + 13 = 52 (left: 52)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3 12"
                }
            },
            "Step 3": {
                "Step": "13 - 1 = 12 (left: 5 8 12) -> 8 - 5 = 3 (left: 3 12) -> 12 - 3 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 1 = 12 (left: 5 8 12) -> 8 - 5 = 3 (left: 3 12) -> 12 - 3 = 9 (left: 9) -> There are no possible next steps with the input 9.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3 12"
                }
            },
            "Step 5": {
                "Step": "13 - 1 = 12 (left: 5 8 12) -> 8 - 5 = 3 (left: 3 12) -> 12 - 3 = 9 (left: 9 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 1 = 12 (left: 5 8 12) -> 8 - 5 = 3 (left: 3 12) -> 12 - 3 = 9 (left: 9 12) -> 9 / 12 = 0.75 (left: 0.75)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "3 12"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3 12"
                }
            },
            "Step 7": {
                "Step": "13 - 1 = 12 (left: 5 8 12) -> 8 - 5 = 3 (left: 3 12) -> 12 / 3 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 1 = 12 (left: 5 8 12) -> 8 - 5 = 3 (left: 3 12) -> 12 / 3 = 4 (left: 4) -> 4 / 2 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "4 + 4 = 8"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 - 5 = 3 (left: 1 3 13)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 40 13"
                }
            },
            "Step 1": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 13 - 1 = 12 (left: 40 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 13 - 1 = 12 (left: 40 12) -> 40 * 12 = 480 (left: 480)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3 12"
                }
            },
            "Step 3": {
                "Step": "13 - 1 = 12 (left: 5 8 12) -> 8 - 5 = 3 (left: 3 12) -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 1 = 12 (left: 5 8 12) -> 8 - 5 = 3 (left: 3 12) -> 12 / 3 = 4 (left: 4 12) -> 4 / 12 = 0.3333",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3 12"
                }
            },
            "Step 5": {
                "Step": "13 - 1 = 12 (left: 5 8 12) -> 8 - 5 = 3 (left: 3 12) -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 1 = 12 (left: 5 8 12) -> 8 - 5 = 3 (left: 3 12) -> 12 / 3 = 4 (left: 4 12) -> 12 / 4 = 3 (left: 3 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3 12"
                }
            },
            "Step 7": {
                "Step": "13 - 1 = 12 (left: 5 8 12) -> 8 - 5 = 3 (left: 3 12) -> 12 - 3 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 1 = 12 (left: 5 8 12) -> 8 - 5 = 3 (left: 3 12) -> 12 - 3 = 9 (left: 9) -> 9 / 9 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "4 + 4 = 8"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 + 5 = 6 (left: 6 8 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 40 13"
                }
            },
            "Step 1": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 13 + 1 = 14 (left: 40 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 13 + 1 = 14 (left: 40 14) -> 40 / 14 = 2.85714285714 (left: 2.85714285714)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3 12"
                }
            },
            "Step 3": {
                "Step": "13 - 1 = 12 (left: 5 8 12) -> 8 - 5 = 3 (left: 3 12) -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 1 = 12 (left: 5 8 12) -> 8 - 5 = 3 (left: 3 12) -> 12 / 3 = 4 (left: 4 12) -> 12 - 4 = 8 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3 12"
                }
            },
            "Step 5": {
                "Step": "13 - 1 = 12 (left: 5 8 12) -> 8 - 5 = 3 (left: 3 12) -> 12 - 3 = 9 (left: 9 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 1 = 12 (left: 5 8 12) -> 8 - 5 = 3 (left: 3 12) -> 12 - 3 = 9 (left: 9 12) -> 9 * 12 = 108 (left: 108)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "3 12"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3 12"
                }
            },
            "Step 7": {
                "Step": "13 - 1 = 12 (left: 5 8 12) -> 8 - 5 = 3 (left: 3 12) -> 3 + 12 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 1 = 12 (left: 5 8 12) -> 8 - 5 = 3 (left: 3 12) -> 3 + 12 = 15 (left: 15) -> There are no possible next steps with the input 15.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 * 8 = 40 (left: 1 40 13)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 8 13"
                }
            },
            "Step 1": {
                "Step": "13 - 1 = 12 (left: 5 8 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 1 = 12 (left: 5 8 12) -> 8 - 5 = 3 (left: 3 12)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3 12"
                }
            },
            "Step 3": {
                "Step": "13 - 1 = 12 (left: 5 8 12) -> 8 - 5 = 3 (left: 3 12) -> 12 - 3 = 9 (left: 3 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 1 = 12 (left: 5 8 12) -> 8 - 5 = 3 (left: 3 12) -> 12 - 3 = 9 (left: 3 9) -> 9 / 3 = 3 (left: 3 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3 12"
                }
            },
            "Step 5": {
                "Step": "13 - 1 = 12 (left: 5 8 12) -> 8 - 5 = 3 (left: 3 12) -> 12 / 3 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 1 = 12 (left: 5 8 12) -> 8 - 5 = 3 (left: 3 12) -> 12 / 3 = 4 (left: 4) -> 4 + 4 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3 12"
                }
            },
            "Step 7": {
                "Step": "13 - 1 = 12 (left: 5 8 12) -> 8 - 5 = 3 (left: 3 12) -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 1 = 12 (left: 5 8 12) -> 8 - 5 = 3 (left: 3 12) -> 12 / 3 = 4 (left: 4 12) -> 12 - 4 = 8 (left: 8 12)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "8 * 5 = 40 (left: 1 13 40)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 3 13"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 1 3 13) -> 13 - 1 = 12 (left: 3 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 1 3 13) -> 13 - 1 = 12 (left: 3 12) -> 12 / 3 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3 12"
                }
            },
            "Step 3": {
                "Step": "13 - 1 = 12 (left: 5 8 12) -> 8 - 5 = 3 (left: 3 12) -> 3 + 12 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 1 = 12 (left: 5 8 12) -> 8 - 5 = 3 (left: 3 12) -> 3 + 12 = 15 (left: 15) -> There are no possible next steps with the input 15.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3 12"
                }
            },
            "Step 5": {
                "Step": "13 - 1 = 12 (left: 5 8 12) -> 8 - 5 = 3 (left: 3 12) -> 3 + 12 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 1 = 12 (left: 5 8 12) -> 8 - 5 = 3 (left: 3 12) -> 3 + 12 = 15 (left: 15) -> 15 / 8 = 1.875 (left: 1.875)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "3 12"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "4 + 4 = 8"
                }
            },
            "Step 7": {
                "Step": "13 - 1 = 12 (left: 5 8 12) -> 8 - 5 = 3 (left: 3 12) -> 12 / 3 = 4 (left: 4) -> 4 + 4 = 8 -> 4 / 4 = 1 (left: 1 4 8)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 1 = 12 (left: 5 8 12) -> 8 - 5 = 3 (left: 3 12) -> 12 / 3 = 4 (left: 4) -> 4 + 4 = 8 -> 4 / 4 = 1 (left: 1 4 8) -> 1 + 4 = 5 (left: 5 8)",
                "Pruning": null
            }
        },
        "Input": "1 5 8 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1073": {
        "puzzle": "3 3 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 9 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "9 9 13"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 - 9 = 0 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 - 9 = 0 (left: -> 9 - 9 = 0 (left: )",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 3 4"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 / 3 = 1 (left: 1 4)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 / 3 = 1 (left: 1 4) -> 1 * 4 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 3 4"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 4 * 3 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 4 * 3 = 12 (left: 12) -> 12 + 8 = 20 (left: 8 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "8 20"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 4 * 3 = 12 (left: 12) -> 12 + 8 = 20 (left: 8 20) -> 8 - 20 = -12 (left: -12)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "198"
                }
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 + 13 = 22 (left: 9 22) -> 9 * 22 = 198 (left: 198) -> 1 + 9 + 8 = 18 (left: 18)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 9 13)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "9 9 13"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 * 9 = 81 (left: 81 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 * 9 = 81 (left: 81 13) -> 81 / 13 = 6.23 (left: 6.23)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 9 13"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 9 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 * 9 = 81 (left: 81 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 9 13"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 6 9 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 6 9 13) -> 13 - 6 = 7 (left: 6 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "6 7"
                }
            },
            "Step 7": {
                "Step": "3 + 3 = 6 (left: 6 9 13) -> 13 - 6 = 7 (left: 6 7) -> 6 * 7 = 42 (left: 42)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 + 3 = 6 (left: 6 9 13) -> 13 - 6 = 7 (left: 6 7) -> 6 * 7 = 42 (left: 42) -> There are no possible next steps with the input of 42.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 3 3 4)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "9 9 13"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 / 9 = 1 (left: 1 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 / 9 = 1 (left: 1 13) -> 1 + 13 = 14",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "9 9 13"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 * 13 = 117 (left:",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 * 13 = 117 (left: -> 9 ^ 13 = 2541865828329 (left: 2541865828329)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "9 9 13"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 / 9 = 1 (left: 1 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 / 9 = 1 (left: 1 13) -> 13 - 1 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "5"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 + 9 = 18 (left: 18 13) -> 18 - 13 = 5 (left: 5) -> There are no possible next steps with just the number 5.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 + 9 = 18 (left: 18 13) -> 18 - 13 = 5 (left: 5) -> There are no possible next steps with just the number 5. -> There are no possible next steps with just the number 5.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 3 = 6 (left: 3 6 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "9 9 13"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 / 9 = 1 (left: 1 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 / 9 = 1 (left: 1 13) -> 1 + 13 = 14 (left: 14) ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 3 4"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 4 / 3 = 1.33 (left: 1.33 3)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 4 / 3 = 1.33 (left: 1.33 3) -> 1.33 + 3 = 4.33 (left: 4.33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "9 9 13"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 + 9 = 18 (left: 18 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 + 9 = 18 (left: 18 13) -> 18 - 13 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "8 20"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 4 * 3 = 12 (left: 12) -> 12 + 8 = 20 (left: 8 20) -> 8 * 20 = 160 (left: 160)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "12"
                }
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 / 9 = 1 (left: 1 13) -> 13 - 1 = 12 (left: 12) -> 12 + 8 = 20 (left: 8 20)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 9 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 3 4"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 + 3 = 6 (left: 4 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 + 3 = 6 (left: 4 6) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "9 9 13"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 + 13 = 22 (left: 9 22)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 + 13 = 22 (left: 9 22) -> 9 * 22 = 198 (left: 198)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 9 13"
                }
            },
            "Step 5": {
                "Step": "9 + 3 = 12 (left: 3 12 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 3 = 12 (left: 3 12 13) -> 13 - 3 = 10 (left: 12 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "5"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 + 9 = 18 (left: 18 13) -> 18 - 13 = 5 (left: 5) -> There are no possible next steps with just the number 5.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 + 9 = 18 (left: 18 13) -> 18 - 13 = 5 (left: 5) -> There are no possible next steps with just the number 5. -> There are no possible next steps with just the number 5.",
                "Pruning": null
            }
        },
        "Input": "3 3 9 13",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1074": {
        "puzzle": "7 7 9 10",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 7 = 3 (left: 3 7 ",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "7 2 10"
                }
            },
            "Step 1": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 7 + 2 = 9 (left: 9 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 7 + 2 = 9 (left: 9 10) -> 10 - 9 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "7 2 10"
                }
            },
            "Step 3": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 7 * 2 = 14 (left:",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 7 * 2 = 14 (left: -> None",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "5 10"
                }
            },
            "Step 5": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 7 - 2 = 5 (left: 5 10) -> 10 - 5 = 5 (left: 5 10) -> 5 + 10 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "5 10"
                }
            },
            "Step 6": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 7 - 2 = 5 (left: 5 10) -> 10 - 5 = 5 (left: 5 10) -> 5 * 10 = 50 (left: 50)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "5 10"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "5 10"
                }
            },
            "Step 7": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 7 - 2 = 5 (left: 5 10) -> 10 - 5 = 5 (left: 5 10) -> 10 / 5 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "5 10"
                }
            },
            "Step 8": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 7 - 2 = 5 (left: 5 10) -> 10 - 5 = 5 (left: 5 10) -> 5 * 10 = 50 (left: 50)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 * 9 = 63 (left: 10 10 63)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 7 "
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 3 7  -> 3 + 7 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 3 7  -> 3 + 7 = 10 (left: 10) -> 10 * 8 = 80 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "7 2 10"
                }
            },
            "Step 3": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 7 - 2 = 5 (left: 5 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 7 - 2 = 5 (left: 5 10) -> 10 - 5 = 5 (left: 5 10)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "5 10"
                }
            },
            "Step 5": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 7 - 2 = 5 (left: 5 10) -> 10 - 5 = 5 (left: 5 10) -> 10 - 5 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "5 10"
                }
            },
            "Step 6": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 7 - 2 = 5 (left: 5 10) -> 10 - 5 = 5 (left: 5 10) -> 5 + 10 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "5 10"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "5 10"
                }
            },
            "Step 7": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 7 - 2 = 5 (left: 5 10) -> 10 - 5 = 5 (left: 5 10) -> 5 + 10 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "5 10"
                }
            },
            "Step 8": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 7 - 2 = 5 (left: 5 10) -> 10 - 5 = 5 (left: 5 10) -> 10 - 5 = 5 (left: 5 10)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 - 7 = 2 (left: 7 2 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 7 "
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 3 7  -> 9 / 5 = 1 (left: 1 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 3 7  -> 9 / 5 = 1 (left: 1 9) -> 9 - 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "7 2 10"
                }
            },
            "Step 3": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 10 / 2 = 5 (left: 5 2)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 10 / 2 = 5 (left: 5 2) -> 5 + 2 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "5 10"
                }
            },
            "Step 5": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 7 - 2 = 5 (left: 5 10) -> 10 - 5 = 5 (left: 5 10) -> 5 * 10 = 50 (left: 50)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "5 10"
                }
            },
            "Step 6": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 7 - 2 = 5 (left: 5 10) -> 10 - 5 = 5 (left: 5 10) -> 10 - 5 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "5 10"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "5 10"
                }
            },
            "Step 7": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 7 - 2 = 5 (left: 5 10) -> 10 - 5 = 5 (left: 5 10) -> 9 - 3 = 6 (left: 6 27)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 7 - 2 = 5 (left: 5 10) -> 10 - 5 = 5 (left: 5 10) -> 9 - 3 = 6 (left: 6 27) -> 27 + 6 = 33 (left: 33)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 * 9 = 63 (left: 10 63)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "7 2 10"
                }
            },
            "Step 1": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 2 + 10 = 12 (left: 7 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 2 + 10 = 12 (left: 7 12) -> 7 * 12 = 84 (left: 84)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "7 2 10"
                }
            },
            "Step 3": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 10 / 2 = 5 (left: 7 5)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 10 / 2 = 5 (left: 7 5) -> 7 * 5 = 35 (left: 35)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "5 10"
                }
            },
            "Step 5": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 7 - 2 = 5 (left: 5 10) -> 10 - 5 = 5 (left: 5 10) -> 5 * 10 = 50 (left: 50)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "5 10"
                }
            },
            "Step 6": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 7 - 2 = 5 (left: 5 10) -> 10 - 5 = 5 (left: 5 10) -> 10 / 5 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "5 10"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "5 10"
                }
            },
            "Step 7": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 7 - 2 = 5 (left: 5 10) -> 10 - 5 = 5 (left: 5 10) -> Input: 3 9",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 7 - 2 = 5 (left: 5 10) -> 10 - 5 = 5 (left: 5 10) -> Input: 3 9 -> 16 / 4 = 4 (left: 4 16)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "7 * 7 = 49 (left: 9 10 49)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 9 10"
                }
            },
            "Step 1": {
                "Step": "7 + 7 = 14 (left: 9 10 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 7 = 14 (left: 9 10 14) -> 14 - 9 = 5 (left: 5 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "7 2 10"
                }
            },
            "Step 3": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 7 * 2 = 14 (left: 14 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 7 * 2 = 14 (left: 14 10) -> 14 / 10 = 1.4 (left: 1.4)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "5 10"
                }
            },
            "Step 5": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 7 - 2 = 5 (left: 5 10) -> 10 - 5 = 5 (left: 5 10) -> 5 * 10 = 50 (left: 50)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "5 10"
                }
            },
            "Step 6": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 7 - 2 = 5 (left: 5 10) -> 10 - 5 = 5 (left: 5 10) -> 5 + 10 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "5 10"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "5 10"
                }
            },
            "Step 7": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 7 - 2 = 5 (left: 5 10) -> 10 - 5 = 5 (left: 5 10) -> 5 + 10 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "5 10"
                }
            },
            "Step 8": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 7 - 2 = 5 (left: 5 10) -> 10 - 5 = 5 (left: 5 10) -> 10 - 5 = 5 (left: 5 10)",
                "Pruning": null
            }
        },
        "Input": "7 7 9 10",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "Cost": {
        "input_tokens": 498388,
        "output_tokens": 205498.86428571428,
        "total_cost": 0.5574422964285715
    }
}