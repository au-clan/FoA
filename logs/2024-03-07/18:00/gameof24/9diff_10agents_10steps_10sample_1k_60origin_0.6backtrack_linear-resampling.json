{
    "900": {
        "puzzle": "4 5 6 10",
        "Step 0": {
            "steps": [
                "6 / 4 = 1.5 (left: 1.5 5 10)",
                "5 + 6 = 11 (left: 4 11 10)",
                "6 / 5 = 1.2 (left: 4 1.2 10)",
                "4 * 5 = 20 (left: 6 10 20)",
                "6 - 4 = 2 (left: 2 5 10)",
                "6 - 4 = 2 (left: 2 5 10)",
                "10 - 4 = 6 (left: 5 6 6)",
                "6 + 10 = 16 (left: 4 5 16)",
                "6 - 4 = 2 (left: 2 5 ",
                "6 + 4 = 10 (left: 5 6 10)"
            ],
            "Evaluation": [
                2.001,
                3.0,
                3.0,
                3.0,
                0.003,
                2.001,
                22.0,
                1.002,
                60.0,
                1.002
            ],
            "Resampling": [
                "0 <- 0.8",
                "1 <- 0.8",
                "2 <- 0.6",
                "3 <- 0.8",
                "4 <- 0.6",
                "5 <- 0.6",
                "6 <- 0.8",
                "7 <- 0.9",
                "8 <- 0.8",
                "9 <- 0.8"
            ]
        },
        "Step 1": {
            "steps": [
                "6 - 4 = 2 (left: 2 5  || 5 - 2 = 3 (left: 3)",
                "6 - 4 = 2 (left: 2 5  || 5 / 2 = 2.5 (left: 2.5)",
                "10 - 4 = 6 (left: 5 6 6) || 3 + 9 = 12 (left:",
                "6 - 4 = 2 (left: 2 5  || Input: 10 4",
                "10 - 4 = 6 (left: 5 6 6) || Possible next steps:",
                "10 - 4 = 6 (left: 5 6 6) || 5 * 6 = 30 (left: 30)",
                "6 - 4 = 2 (left: 2 5  || 2 * 5 = 10 (left: 10)",
                "6 + 4 = 10 (left: 5 6 10) || 10 - 6 = 4 (left: 4 10)",
                "6 - 4 = 2 (left: 2 5  || 2 * 5 = 10 (left: 10)",
                "6 - 4 = 2 (left: 2 5  || 5 / 2 = 2.5 (left: 2.5)"
            ],
            "Evaluation": [
                0.0,
                0.002,
                1.001,
                0.003,
                0.003,
                0.003,
                0.002,
                40.0,
                0.002,
                0.001
            ],
            "Resampling": [
                "0 <- 0.6",
                "1 <- INIT",
                "2 <- 1.7",
                "3 <- 0.8",
                "4 <- 1.7",
                "5 <- 1.7",
                "6 <- 1.7",
                "7 <- INIT",
                "8 <- 1.7",
                "9 <- 0.6"
            ]
        },
        "Step 2": {
            "steps": [
                "10 - 4 = 6 (left: 5 6 6) || 6 * 6 = 36 (left: 36)",
                "10 - 4 = 6 (left: 6 5 10)",
                "6 + 4 = 10 (left: 5 6 10) || 10 - 6 = 4 (left: 4 10) || 4 * 10 = 40 (left: 10)",
                "6 - 4 = 2 (left: 2 5  || 2 * 5 = 10 (left: 10)",
                "6 + 4 = 10 (left: 5 6 10) || 10 - 6 = 4 (left: 4 10) || Possible next steps:",
                "6 + 4 = 10 (left: 5 6 10) || 10 - 6 = 4 (left: 4 10) || 10 - 4 = 6 (left: 6)",
                "6 + 4 = 10 (left: 5 6 10) || 10 - 6 = 4 (left: 4 10) || Input: 3 9 27",
                "5 * 6 = 30 (left: 4 30 ",
                "6 + 4 = 10 (left: 5 6 10) || 10 - 6 = 4 (left: 4 10) || Input: 5 3",
                "10 - 4 = 6 (left: 5 6 6) || Possible next steps:"
            ],
            "Evaluation": [
                40.0,
                60.0,
                0.003,
                0.002,
                0.003,
                0.003,
                0.003,
                21.001,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- 0.8",
                "2 <- 2.1",
                "3 <- 2.0",
                "4 <- 1.7",
                "5 <- 2.1",
                "6 <- 2.0",
                "7 <- 2.7",
                "8 <- 2.7",
                "9 <- 2.0"
            ]
        },
        "Step 3": {
            "steps": [
                "5 + 6 = 11 (left: 4 11 10)",
                "6 - 4 = 2 (left: 2 5  || 6 - 3 = 3 (left: 3)",
                "10 - 4 = 6 (left: 6 5 10) || 6 * 5 = 30 (left: 10 30)",
                "10 - 4 = 6 (left: 5 6 6) || 6 * 6 = 36 (left: 36) || 36 / 2 = 18",
                "6 + 4 = 10 (left: 5 6 10) || 10 - 6 = 4 (left: 4 10) || 3 + 9 = 12 (left: 12 27)",
                "10 - 4 = 6 (left: 6 5 10) || 6 - 5 = 1 (left:",
                "10 - 4 = 6 (left: 5 6 6) || 6 * 6 = 36 (left: 36) || 36 + 2 = 38",
                "5 * 6 = 30 (left: 4 30  || Input: 3 9 27",
                "5 * 6 = 30 (left: 4 30  || Input: 10 5 3",
                "10 - 4 = 6 (left: 5 6 6) || 6 * 6 = 36 (left: 36) || None - 36 is the final result."
            ],
            "Evaluation": [
                2.001,
                0.0,
                0.003,
                0.003,
                0.003,
                1.001,
                0.003,
                0.003,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- 0.8",
                "1 <- 2.0",
                "2 <- 2.0",
                "3 <- 0.8",
                "4 <- 2.1",
                "5 <- 2.1",
                "6 <- 2.1",
                "7 <- 1.7",
                "8 <- 2.1",
                "9 <- 2.1"
            ]
        },
        "Step 4": {
            "steps": [
                "6 - 4 = 2 (left: 2 5  || 5 / 2 = 2.5 (left: 2.5)",
                "10 - 4 = 6 (left: 5 6 6) || 6 * 6 = 36 (left: 36) || There are no possible next steps as there is only one number provided.",
                "10 - 4 = 6 (left: 5 6 6) || 6 * 6 = 36 (left: 36) || There are no possible operations to perform on the number 36.",
                "6 - 4 = 2 (left: 2 5  || Input: 10 3",
                "10 - 4 = 6 (left: 6 5 10) || Input: 4 2 7",
                "10 - 4 = 6 (left: 6 5 10) || 10 - 5 = 5 (left: 6 5)",
                "10 - 4 = 6 (left: 6 5 10) || 10 / 5 = 2 (left: 2 10)",
                "6 + 4 = 10 (left: 5 6 10) || 10 - 6 = 4 (left: 4 10) || 10 - 4 = 6 (left: 6 10)",
                "10 - 4 = 6 (left: 6 5 10) || 5 + 6 = 11 (left: 10)",
                "10 - 4 = 6 (left: 6 5 10) || 10 - 6 = 4 (left: 4 5)"
            ],
            "Evaluation": [
                0.0,
                0.003,
                0.003,
                0.003,
                0.003,
                20.002,
                2.0,
                0.002,
                0.002,
                1.002
            ],
            "Resampling": [
                "0 <- 4.5",
                "1 <- 2.7",
                "2 <- 4.5",
                "3 <- 2.7",
                "4 <- 2.7",
                "5 <- 2.1",
                "6 <- 2.0",
                "7 <- 4.9",
                "8 <- 2.0",
                "9 <- 2.7"
            ]
        },
        "Step 5": {
            "steps": [
                "10 - 4 = 6 (left: 6 5 10) || 10 - 5 = 5 (left: 6 5) || 6 - 5 = 1 (left: 1)",
                "5 * 6 = 30 (left: 4 30  || 30 - 4 = 26 (left: 26)",
                "10 - 4 = 6 (left: 6 5 10) || 10 - 5 = 5 (left: 6 5) || 6 / 5 = 1.2 (left: 1.2)",
                "5 * 6 = 30 (left: 4 30  || 30 - 4 = 26 (left: 26)",
                "5 * 6 = 30 (left: 4 30  || 5 + 25 = 30 (left: 25)",
                "10 - 4 = 6 (left: 6 5 10) || 6 / 5 = 1.2 (",
                "10 - 4 = 6 (left: 5 6 6) || 6 * 6 = 36 (left: 36) || 36 / 2 = 18",
                "10 - 4 = 6 (left: 6 5 10) || 10 - 6 = 4 (left: 4 5) || 4 * 5 = 20 (left: 20)",
                "10 - 4 = 6 (left: 5 6 6) || 6 * 6 = 36 (left: 36) || 36 / 2 = 18",
                "5 * 6 = 30 (left: 4 30  || 2 + 3 = 5 (left: 5 5)"
            ],
            "Evaluation": [
                0.002,
                0.003,
                0.0,
                0.003,
                20.001,
                0.003,
                0.003,
                0.003,
                0.003,
                0.002
            ],
            "Resampling": [
                "0 <- 5.4",
                "1 <- 2.7",
                "2 <- 2.7",
                "3 <- 5.4",
                "4 <- 2.1",
                "5 <- 4.5",
                "6 <- 5.4",
                "7 <- 2.0",
                "8 <- 0.8",
                "9 <- 5.4"
            ]
        },
        "Step 6": {
            "steps": [
                "5 * 6 = 30 (left: 4 30  || 5 + 25 = 30 (left: 25) || 25 - 8 = 17 (left: 8)",
                "5 * 6 = 30 (left: 4 30  || 12 - 6 = 6 (left: 6 6)",
                "5 * 6 = 30 (left: 4 30  || 4 + 30 = 34 (left: 34)",
                "5 * 6 = 30 (left: 4 30  || 5 + 25 = 30 (left: 25) || 25 - 8 = 17 (left: 8)",
                "10 - 4 = 6 (left: 6 5 10) || 5 * 10 = 50 (left: 6 50)",
                "10 - 4 = 6 (left: 6 5 10) || 10 - 5 = 5 (left: 6 5) || 6 - 5 = 1 (left: 1)",
                "5 * 6 = 30 (left: 4 30  || 5 + 25 = 30 (left: 25) || 25 - 8 = 17 (left: 8)",
                "10 - 4 = 6 (left: 5 6 6) || 6 * 6 = 36 (left: 36) || 36 / 2 = 18",
                "6 - 4 = 2 (left: 2 5  || 2 * 5 = 10 (left: 10)",
                "5 * 6 = 30 (left: 4 30  || 5 + 25 = 30 (left: 25) || 25 / 2 = 12.5 (left: 2)"
            ],
            "Evaluation": [
                0.003,
                20.002,
                0.0,
                0.003,
                40.0,
                0.002,
                0.001,
                0.003,
                0.001,
                0.002
            ],
            "Resampling": [
                "0 <- 6.4",
                "1 <- 0.6",
                "2 <- 2.1",
                "3 <- 4.5",
                "4 <- 2.0",
                "5 <- 6.4",
                "6 <- 6.4",
                "7 <- 6.4",
                "8 <- 5.4",
                "9 <- 6.4"
            ]
        },
        "Step 7": {
            "steps": [
                "10 - 4 = 6 (left: 6 5 10) || 5 * 10 = 50 (left: 6 50) || 6 * 50 = 300 (left: 300)",
                "10 - 4 = 6 (left: 5 6 6) || 6 * 5 = 30 (left: 30)",
                "10 - 4 = 6 (left: 6 5 10) || 6 * 5 = 30 (left: 30 10)",
                "10 - 4 = 6 (left: 6 5 10) || 10 - 5 = 5 (left: 6 5) || 6 * 5 = 30 (left: 30)",
                "10 - 4 = 6 (left: 5 6 6) || 6 * 6 = 36 (left: 36) || 36 / 6 = 6 (left: 6)",
                "10 - 4 = 6 (left: 6 5 10) || 5 * 10 = 50 (left: 6 50) || 3 + 9 = 12 (left: 12 27)",
                "10 - 4 = 6 (left: 6 5 10) || 5 * 10 = 50 (left: 6 50) || 50 / 6 = 8.33 (left: 8.33)",
                "10 - 4 = 6 (left: 6 5 10) || 5 * 10 = 50 (left: 6 50) || 50 / 6 = 8.33 (left: 8.33)",
                "5 * 6 = 30 (left: 4 30  || 5 + 25 = 30 (left: 25) || 25 * 25 = 625 (left: 25 625)",
                "10 - 4 = 6 (left: 6 5 10) || 5 * 10 = 50 (left: 6 50) || 6 * 50 = 300 (left: 300)"
            ],
            "Evaluation": [
                0.002,
                0.002,
                1.0,
                0.002,
                0.003,
                0.002,
                0.003,
                0.002,
                60.0,
                0.003
            ],
            "Resampling": [
                "0 <- 6.4",
                "1 <- 7.8",
                "2 <- 7.8",
                "3 <- 7.8",
                "4 <- 6.4",
                "5 <- 6.1",
                "6 <- 7.8",
                "7 <- 6.4",
                "8 <- 6.1",
                "9 <- 6.4"
            ]
        },
        "Step 8": {
            "steps": [
                "10 - 4 = 6 (left: 6 5 10) || 5 * 10 = 50 (left: 6 50) || 50 - 6 = 44 (left: 44)",
                "5 * 6 = 30 (left: 4 30  || 5 + 25 = 30 (left: 25) || 25 * 25 = 625 (left: 25 625) || 25 - 625 = -600 (left: -600)",
                "5 * 6 = 30 (left: 4 30  || 5 + 25 = 30 (left: 25) || 25 * 25 = 625 (left: 25 625) || Possible next steps:",
                "5 * 6 = 30 (left: 4 30  || 5 + 25 = 30 (left: 25) || 25 * 25 = 625 (left: 25 625) || 25 + 625 = 650 (left: 650)",
                "10 - 4 = 6 (left: 6 5 10) || 5 * 10 = 50 (left: 6 50) || 50 - 6 = 44 (left: 44)",
                "5 * 6 = 30 (left: 4 30  || 12 - 6 = 6 (left: 6 6) || 6 + 6 = 12",
                "5 * 6 = 30 (left: 4 30  || 5 + 25 = 30 (left: 25) || 25 * 25 = 625 (left: 25 625) || 625 / 5 = 125 (left: 125)",
                "10 - 4 = 6 (left: 6 5 10) || 5 * 10 = 50 (left: 6 50) || 50 / 6 = 8.33 (left: 8.33)",
                "5 * 6 = 30 (left: 4 30  || 12 - 6 = 6 (left: 6 6) || 6 / 6 = 1 (left: 1)",
                "10 - 4 = 6 (left: 6 5 10) || 5 * 10 = 50 (left: 6 50) || 50 - 6 = 44 (left: 44)"
            ],
            "Evaluation": [
                0.003,
                0.003,
                0.003,
                0.003,
                0.003,
                0.003,
                0.003,
                41.0,
                60.0,
                40.0
            ],
            "Resampling": [
                "0 <- 8.7",
                "1 <- 8.7",
                "2 <- 8.7",
                "3 <- 8.7",
                "4 <- 8.8",
                "5 <- 8.9",
                "6 <- 8.7",
                "7 <- 8.7",
                "8 <- 8.7",
                "9 <- 6.4"
            ]
        },
        "Step 9": {
            "steps": [
                "5 * 6 = 30 (left: 4 30  || 5 + 25 = 30 (left: 25) || 25 * 25 = 625 (left: 25 625) || 25 * 25 = 625 (left: 625)",
                "5 * 6 = 30 (left: 4 30  || 5 + 25 = 30 (left: 25) || 25 * 25 = 625 (left: 25 625) || 25 + ",
                "5 * 6 = 30 (left: 4 30  || 5 + 25 = 30 (left: 25) || 25 * 25 = 625 (left: 25 625) || 625 - 25 = 600 (left: 600)",
                "5 * 6 = 30 (left: 4 30  || 5 + 25 = 30 (left: 25) || 25 * 25 = 625 (left: 25 625) || 25 + 625 = 650 (left: 650)",
                "5 * 6 = 30 (left: 4 30  || 5 + 25 = 30 (left: 25) || 25 * 25 = 625 (left: 25 625) || 625 - 25 = 600 (left: 600)",
                "5 * 6 = 30 (left: 4 30  || 5 + 25 = 30 (left: 25) || 25 * 25 = 625 (left: 25 625) || 25 - 625 = -600 (left: -600)",
                "5 * 6 = 30 (left: 4 30  || 5 + 25 = 30 (left: 25) || 25 * 25 = 625 (left: 25 625) || 25 * 25 = 625",
                "5 * 6 = 30 (left: 4 30  || 5 + 25 = 30 (left: 25) || 25 * 25 = 625 (left: 25 625) || 625 - 25 = 600 (left: 600)",
                "5 * 6 = 30 (left: 4 30  || 5 + 25 = 30 (left: 25) || 25 * 25 = 625 (left: 25 625) || 25 - 25 = 0 (left: 0)",
                "10 - 4 = 6 (left: 6 5 10) || 5 * 10 = 50 (left: 6 50) || 50 / 6 = 8.33 (left: 8.33)"
            ]
        },
        "Input": "4 5 6 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "901": {
        "puzzle": "1 2 4 7",
        "Step 0": {
            "steps": [
                "7 - 4 = 3 (left: 1 2 3)",
                "2 * 4 = 8 (left: 1 8 7)",
                "4 - 2 = 2 (left: 1 2 7)",
                "7 - 2 = 5 (left: 1 4 5)",
                "4 + 7 = 11 (left: 1 2 11)",
                "4 + 2 = 6 (left: 1 6 7)",
                "1 * 2 = 2 (left: 2 4 7)",
                "7 - 4 = 3 (left: 1 2 3)",
                "7 - 1 = 6 (left: 2 4 6)",
                "7 - 4 = 3 (left: 1 2 3)"
            ],
            "Evaluation": [
                1.0,
                1.002,
                1.002,
                21.0,
                0.002,
                1.002,
                3.0,
                1.002,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- 0.3",
                "4 <- 0.3",
                "5 <- INIT",
                "6 <- 0.3",
                "7 <- INIT",
                "8 <- 0.3",
                "9 <- INIT"
            ]
        },
        "Step 1": {
            "steps": [
                "2 * 4 = 8 (left: 1 8 7)",
                "4 / 2 = 2 (left: 1 2 7)",
                "4 + 2 = 6 (left: 1 6 7)",
                "7 - 2 = 5 (left: 1 4 5) || 5 - 1 = 4 (left: 4 4)",
                "7 - 2 = 5 (left: 1 4 5) || 5 - 4 = 1 (left: 1 5)",
                "4 - 2 = 2 (left: 1 2 7)",
                "7 - 2 = 5 (left: 1 4 5) || 5 - 1 = 4 (left: 4 4)",
                "4 / 2 = 2 (left: 1 2 ",
                "7 - 2 = 5 (left: 1 4 5) || 5 / 1 = 5 (left: 4 5)",
                "4 - 2 = 2 (left: 1 2 7)"
            ],
            "Evaluation": [
                1.002,
                1.002,
                20.002,
                0.003,
                40.0,
                1.002,
                0.003,
                0.002,
                3.0,
                2.001
            ],
            "Resampling": [
                "0 <- 1.9",
                "1 <- INIT",
                "2 <- 1.4",
                "3 <- INIT",
                "4 <- 1.2",
                "5 <- 1.4",
                "6 <- 0.1",
                "7 <- 1.4",
                "8 <- 1.4",
                "9 <- INIT"
            ]
        },
        "Step 2": {
            "steps": [
                "4 - 2 = 2 (left: 1 2 7) || 2 * 7 = 14 (left: 1 14)",
                "7 - 4 = 3 (left: 1 2 3)",
                "7 - 2 = 5 (left: 1 4 5) || 5 - 4 = 1 (left: 1 5) || 5 / 1 = 5 (left: 5)",
                "4 * 7 = 28 (left: 1 2 28)",
                "4 + 2 = 6 (left: 1 6 7) || 7 - 1 = 6 (left: 6 6)",
                "7 - 2 = 5 (left: 1 4 5) || 5 - 4 = 1 (left: 1 5) || 1 * 5 = 5 (left: 5)",
                "2 * 4 = 8 (left: 1 8 7) || 8 - 1 = 7 (left: 7 7)",
                "7 - 2 = 5 (left: 1 4 5) || 5 - 4 = 1 (left: 1 5) || 1 * 5 = 5 (left: 5)",
                "7 - 2 = 5 (left: 1 4 5) || 5 - 4 = 1 (left: 1 5) || 1 + 5 = 6",
                "1 * 2 = 2 (left: 2 4 7)"
            ],
            "Evaluation": [
                20.001,
                0.003,
                0.002,
                0.003,
                20.002,
                0.002,
                0.002,
                0.002,
                0.003,
                3.0
            ],
            "Resampling": [
                "0 <- 2.0",
                "1 <- 1.4",
                "2 <- 1.2",
                "3 <- 0.3",
                "4 <- 2.4",
                "5 <- 2.0",
                "6 <- 2.4",
                "7 <- 2.0",
                "8 <- 0.5",
                "9 <- 1.4"
            ]
        },
        "Step 3": {
            "steps": [
                "4 - 2 = 2 (left: 1 2 7) || 2 * 7 = 14 (left: 1 14) || 1 * 14 = 14 (left: 14)",
                "7 - 2 = 5 (left: 1 4 5) || 5 - 4 = 1 (left: 1 5) || 5 / 1 = 5 (left: 5)",
                "4 + 2 = 6 (left: 1 6 7) || 6 * 1 = 6 (left: 6 7)",
                "7 - 2 = 5 (left: 1 4 5) || 4 / 1 = 4 (left: 4 5)",
                "4 + 2 = 6 (left: 1 6 7) || 7 - 1 = 6 (left: 6 6) || 6 - 6 = 0 (left: 0)",
                "4 - 2 = 2 (left: 1 2 7) || 2 * 7 = 14 (left: 1 14) || 1 / 14 = 0.07142857142857142 (left: 0.071428",
                "4 + 2 = 6 (left: 1 6 7) || 7 - 1 = 6 (left: 6 6) || 6 / 6 = 1 (left: 1)",
                "4 - 2 = 2 (left: 1 2 7) || 2 * 7 = 14 (left: 1 14) || 14 / 1 = 14 (left: 14)",
                "4 + 2 = 6 (left: 1 6 7) || 7 - 1 = 6 (left: 6 7)",
                "7 - 2 = 5 (left: 1 4 5) || 5 - 4 = 1 (left: 1 5) || 5 * 1 = 5 (left: 5)"
            ],
            "Evaluation": [
                0.001,
                0.001,
                0.002,
                2.001,
                0.002,
                0.002,
                0.003,
                0.002,
                0.003,
                0.002
            ],
            "Resampling": [
                "0 <- 2.4",
                "1 <- 1.2",
                "2 <- 2.4",
                "3 <- 1.4",
                "4 <- 0.3",
                "5 <- 2.0",
                "6 <- 1.9",
                "7 <- 2.4",
                "8 <- 2.4",
                "9 <- 2.0"
            ]
        },
        "Step 4": {
            "steps": [
                "4 + 2 = 6 (left: 1 6 7) || 7 - 1 = 6 (left: 6 6) || 6 + 6 = 12 (left: 12)",
                "4 + 2 = 6 (left: 1 6 7) || 7 / 1 = 7 (left: 7 7)",
                "4 + 2 = 6 (left: 1 6 7) || 7 - 1 = 6 (left: 6 6) || 6 - 6 = 0 (left: 0)",
                "7 - 2 = 5 (left: 1 4 5) || 5 - 4 = 1 (left: 1 5) || 5 - 1 = 4 (left: 4)",
                "7 - 2 = 5 (left: 1 4 5) || 1 * 4 = 4 (left: 4 5)",
                "4 - 2 = 2 (left: 1 2 7) || 2 * 7 = 14 (left: 1 14) || 1 * 14 = 14 (left: 14)",
                "4 - 2 = 2 (left: 1 2 7) || 7 - 2 = 5 (left: 1 5)",
                "4 + 2 = 6 (left: 1 6 7) || 7 - 1 = 6 (left: 6 6) || 6 / 6 = 1 (left: 1)",
                "4 + 2 = 6 (left: 1 6 7) || 7 - 1 = 6 (left: 6 6) || 6 / 6 = 1 (left: 1)",
                "4 - 2 = 2 (left: 1 2 7) || 2 * 7 = 14 (left: 1 14) || 14 / 1 = 14 (left: 14)"
            ],
            "Evaluation": [
                0.003,
                0.002,
                0.003,
                0.002,
                22.0,
                0.0,
                60.0,
                0.002,
                0.001,
                0.003
            ],
            "Resampling": [
                "0 <- 2.4",
                "1 <- 4.4",
                "2 <- 4.6",
                "3 <- 4.4",
                "4 <- 4.6",
                "5 <- 2.0",
                "6 <- 4.6",
                "7 <- 4.6",
                "8 <- 2.0",
                "9 <- 4.6"
            ]
        },
        "Step 5": {
            "steps": [
                "4 + 2 = 6 (left: 1 6 7) || 7 - 1 = 6 (left: 6 6) || 6 * 6 = 36 (left: 36)",
                "7 - 2 = 5 (left: 1 4 5) || 1 * 4 = 4 (left: 4 5) || 5 / 4 = 1.25 (left: 1.25)",
                "4 - 2 = 2 (left: 1 2 7) || 7 - 2 = 5 (left: 1 5) || 1 + 5 = 6",
                "7 - 2 = 5 (left: 1 4 5) || 1 * 4 = 4 (left: 4 5) || 4 * 5 = 20 (left: 20)",
                "4 - 2 = 2 (left: 1 2 7) || 7 - 2 = 5 (left: 1 5) || 1 + 5 = 6",
                "4 - 2 = 2 (left: 1 2 7) || 2 * 7 = 14 (left: 1 14) || 14 * 1 = 14 (left: 14)",
                "4 - 2 = 2 (left: 1 2 7) || 7 - 2 = 5 (left: 1 5) || 1 * 5 = 5 (left: 5)",
                "4 - 2 = 2 (left: 1 2 7) || 7 - 2 = 5 (left: 1 5) || 1 * 5 = 5 (left: 5)",
                "4 - 2 = 2 (left: 1 2 7) || 2 * 7 = 14 (left: 1 14) || 1 * 14 = 14 (left: 14)",
                "4 - 2 = 2 (left: 1 2 7) || 7 - 2 = 5 (left: 1 5) || 1 + 5 = 6"
            ],
            "Evaluation": [
                60.0,
                0.002,
                0.003,
                0.003,
                0.003,
                0.001,
                0.002,
                0.001,
                0.001,
                0.003
            ],
            "Resampling": [
                "0 <- 4.6",
                "1 <- 4.6",
                "2 <- 4.6",
                "3 <- 5.0",
                "4 <- 1.4",
                "5 <- 4.6",
                "6 <- 2.4",
                "7 <- 4.6",
                "8 <- 4.4",
                "9 <- 4.6"
            ]
        },
        "Step 6": {
            "steps": [
                "4 - 2 = 2 (left: 1 2 7) || 7 - 2 = 5 (left: 1 5) || 5 - 1 = 4 (left: 4)",
                "4 - 2 = 2 (left: 1 2 7) || 7 - 2 = 5 (left: 1 5) || 5 / 1 = 5 (left: 5)",
                "4 - 2 = 2 (left: 1 2 7) || 7 - 2 = 5 (left: 1 5) || 5 / 1 = 5 (left: 5)",
                "4 + 2 = 6 (left: 1 6 7) || 7 - 1 = 6 (left: 6 6) || 6 * 6 = 36 (left: 36) || 36 / 4 = 9 (left: 9)",
                "7 - 2 = 5 (left: 1 4 5) || 5 - 4 = 1 (left: 1 5) || 5 / 1 = 5 (left: 5)",
                "4 - 2 = 2 (left: 1 2 7) || 7 - 2 = 5 (left: 1 5) || 5 / 1 = 5 (left: 5)",
                "4 + 2 = 6 (left: 1 6 7) || 7 - 1 = 6 (left: 6 6) || 6 - 6 = 0 (left: 0)",
                "4 - 2 = 2 (left: 1 2 7) || 7 - 2 = 5 (left: 1 5) || Input: 3 9",
                "7 - 2 = 5 (left: 1 4 5) || 1 * 4 = 4 (left: 4 5) || Input: 3 9 27",
                "4 - 2 = 2 (left: 1 2 7) || 7 - 2 = 5 (left: 1 5) || 1 * 5 = 5 (left: 5)"
            ],
            "Evaluation": [
                0.002,
                0.002,
                0.001,
                0.003,
                0.003,
                0.002,
                0.003,
                0.003,
                0.0,
                0.0
            ],
            "Resampling": [
                "0 <- 4.6",
                "1 <- 5.0",
                "2 <- 4.4",
                "3 <- 5.0",
                "4 <- 4.6",
                "5 <- 1.9",
                "6 <- 4.6",
                "7 <- 5.0",
                "8 <- 2.4",
                "9 <- 4.4"
            ]
        },
        "Step 7": {
            "steps": [
                "4 - 2 = 2 (left: 1 2 7) || 7 - 2 = 5 (left: 1 5) || 5 - 1 = 4 (left: 4)",
                "4 + 2 = 6 (left: 1 6 7) || 7 - 1 = 6 (left: 6 6) || 6 * 6 = 36 (left: 36) || 36 + 2 = 38",
                "7 - 2 = 5 (left: 1 4 5) || 1 * 4 = 4 (left: 4 5) || 5 / 4 = 1.25 (left: 1.25)",
                "4 + 2 = 6 (left: 1 6 7) || 7 - 1 = 6 (left: 6 6) || 6 * 6 = 36 (left: 36) || 36 / 2 = 18",
                "4 - 2 = 2 (left: 1 2 7) || 7 - 2 = 5 (left: 1 5) || 5 / 1 = 5 (left: 5)",
                "4 - 2 = 2 (left: 1 2 7) || 7 / 1 = ",
                "4 - 2 = 2 (left: 1 2 7) || 7 - 2 = 5 (left: 1 5) || 1 + 5 = 6",
                "4 + 2 = 6 (left: 1 6 7) || 7 - 1 = 6 (left: 6 6) || 6 * 6 = 36 (left: 36) || There are no possible next steps with the input of 36 as it is already a single number.",
                "4 + 2 = 6 (left: 1 6 7) || 7 - 1 = 6 (left: 6 6) || 6 + 6 = 12",
                "7 - 2 = 5 (left: 1 4 5) || 1 * 4 = 4 (left: 4 5) || 5 / 4 = 1.25 (left: 1.25)"
            ],
            "Evaluation": [
                0.002,
                0.003,
                0.003,
                0.003,
                0.0,
                0.003,
                0.003,
                0.003,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- 5.0",
                "1 <- 5.0",
                "2 <- 4.4",
                "3 <- 4.4",
                "4 <- 4.4",
                "5 <- 5.0",
                "6 <- 5.0",
                "7 <- 5.0",
                "8 <- 4.6",
                "9 <- 4.6"
            ]
        },
        "Step 8": {
            "steps": [
                "4 + 2 = 6 (left: 1 6 7) || 7 - 1 = 6 (left: 6 6) || 6 * 6 = 36 (left: 36) || 36 - 2 = 34 (left: 34)",
                "4 + 2 = 6 (left: 1 6 7) || 7 - 1 = 6 (left: 6 6) || 6 * 6 = 36 (left: 36) || 36 / 2 = 18",
                "7 - 2 = 5 (left: 1 4 5) || 1 * 4 = 4 (left: 4 5) || 10 * 3 = 30 (left: 3",
                "7 - 2 = 5 (left: 1 4 5) || 1 * 4 = 4 (left: 4 5) || 5 - 4 = 1 (left: 1)",
                "7 - 2 = 5 (left: 1 4 5) || 1 * 4 = 4 (left: 4 5) || 10 + 2 = 12 (left: 12)",
                "4 + 2 = 6 (left: 1 6 7) || 7 - 1 = 6 (left: 6 6) || 6 * 6 = 36 (left: 36) || 36 / 2 = 18",
                "4 + 2 = 6 (left: 1 6 7) || 7 - 1 = 6 (left: 6 6) || 6 * 6 = 36 (left: 36) || 36 * 2 = 72",
                "4 + 2 = 6 (left: 1 6 7) || 7 - 1 = 6 (left: 6 6) || 6 * 6 = 36 (left: 36) || There are no possible next steps with the input 36.",
                "4 - 2 = 2 (left: 1 2 7) || 7 - 2 = 5 (left: 1 5) || 1 * 5 = 5 (left: 5)",
                "4 - 2 = 2 (left: 1 2 7) || 7 - 2 = 5 (left: 1 5) || 5 / 1 = 5 (left: 5)"
            ],
            "Evaluation": [
                0.003,
                0.001,
                0.003,
                0.003,
                0.003,
                0.003,
                0.003,
                0.001,
                0.001,
                20.0
            ],
            "Resampling": [
                "0 <- 8.9",
                "1 <- 8.9",
                "2 <- 5.0",
                "3 <- 5.0",
                "4 <- 5.0",
                "5 <- 4.6",
                "6 <- 8.9",
                "7 <- 8.9",
                "8 <- 4.4",
                "9 <- 8.9"
            ]
        },
        "Step 9": {
            "steps": [
                "4 + 2 = 6 (left: 1 6 7) || 7 - 1 = 6 (left: 6 6) || 6 * 6 = 36 (left: 36) || 36 cannot be broken down further as it is already a single number.",
                "4 + 2 = 6 (left: 1 6 7) || 7 - 1 = 6 (left: 6 6) || 6 * 6 = 36 (left: 36) || 36 / 2 = 18",
                "4 + 2 = 6 (left: 1 6 7) || 7 - 1 = 6 (left: 6 6) || 6 * 6 = 36 (left: 36) || There are no possible next steps with only one number provided.",
                "4 + 2 = 6 (left: 1 6 7) || 7 - 1 = 6 (left: 6 6) || 6 * 6 = 36 (left: 36) || No more possible next steps as there is only one number left.",
                "4 + 2 = 6 (left: 1 6 7) || 7 - 1 = 6 (left: 6 6) || 6 * 6 = 36 (left: 36) || 36 / 6 = 6",
                "4 - 2 = 2 (left: 1 2 7) || 7 - 2 = 5 (left: 1 5) || 5 / 1 = 5 (left: 5)",
                "4 + 2 = 6 (left: 1 6 7) || 7 - 1 = 6 (left: 6 6) || 6 * 6 = 36 (left: 36) || No possible next steps with the input of 36.",
                "4 + 2 = 6 (left: 1 6 7) || 7 - 1 = 6 (left: 6 6) || 6 * 6 = 36 (left: 36) || None, as there is only one number provided.",
                "7 - 2 = 5 (left: 1 4 5) || 1 * 4 = 4 (left: 4 5) || Input: 10 3 7",
                "4 + 2 = 6 (left: 1 6 7) || 7 - 1 = 6 (left: 6 6) || 6 * 6 = 36 (left: 36) || 36 / 2 = 18"
            ]
        },
        "Input": "1 2 4 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "902": {
        "puzzle": "2 5 8 11",
        "Step 0": {
            "steps": [
                "11 - 2 = 9 (left: 2 5 9)",
                "5 * 2 = 10 (left: 10 8 11)",
                "8 + 2 = 10 (left: 5 10 11)",
                "2 * 5 = 10 (left: 10 8 11)",
                "8 + 11 = 19 (left: 2 5 19)",
                "8 + 2 = 10 (left: 5 10 11)",
                "8 - 5 = 3 (left: 2 3 11)",
                "8 + 11 = 19 (left: 2 5 19)",
                "11 - 8 = 3 (left: 2 5 ",
                "11 - 8 = 3 (left: 2 3 11)"
            ],
            "Evaluation": [
                0.003,
                0.003,
                2.001,
                1.002,
                1.002,
                3.0,
                2.001,
                0.003,
                0.001,
                0.003
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- 0.6",
                "2 <- 0.6",
                "3 <- 0.2",
                "4 <- 0.3",
                "5 <- INIT",
                "6 <- INIT",
                "7 <- 0.2",
                "8 <- 0.5",
                "9 <- INIT"
            ]
        },
        "Step 1": {
            "steps": [
                "5 * 2 = 10 (left: 10 8 11)",
                "8 - 5 = 3 (left: 2 3 11) || 11 / 3 = 3.67 (left: 2 3.67)",
                "8 - 5 = 3 (left: 2 3 11) || 11 - 3 = 8 (left: 2 8)",
                "8 + 2 = 10 (left: 5 10 11) || 10 + 5 = 15 (left: 11 15)",
                "2 * 5 = 10 (left: 10 8 11) || 10 / 8 = 1.25 (left: 1.25 11)",
                "8 - 5 = 3 (left: 2 3 11)",
                "8 + 11 = 19 (left: 2 5 19)",
                "8 + 2 = 10 (left: 5 10 11) || 11 - 5 = 6 (left: 6 10)",
                "8 + 2 = 10 (left: 5 10 11) || 11 - 5 = 6 (left: 6 10)",
                "5 * 2 = 10 (left: 10 8 11)"
            ],
            "Evaluation": [
                2.001,
                3.0,
                0.003,
                0.003,
                1.0,
                3.0,
                0.003,
                0.003,
                0.002,
                2.001
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- 0.3",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- INIT",
                "5 <- INIT",
                "6 <- INIT",
                "7 <- INIT",
                "8 <- 1.0",
                "9 <- 1.5"
            ]
        },
        "Step 2": {
            "steps": [
                "5 + 8 = 13 (left: 2 13 11)",
                "2 * 5 = 10 (left: 10 8 11) || 10 / 8 = 1.25 (left: 1.25 11)",
                "2 * 5 = 10 (left: 10 8 11)",
                "8 + 2 = 10 (left: 5 10 11)",
                "2 * 5 = 10 (left: 10 8 11)",
                "",
                "8 + 11 = 19 (left: 2 5 19)",
                "8 * 11 = 88 (left: 2 5 ",
                "5 * 2 = 10 (left: 10 8 11) || 10 * 8 = 80 (left: 11 80)",
                "8 - 5 = 3 (left: 2 3 11) || 2 * 3 = 6 (left: 6 11)"
            ],
            "Evaluation": [
                1.002,
                1.002,
                1.002,
                2.001,
                0.002,
                0.003,
                0.003,
                60.0,
                0.002,
                20.002
            ],
            "Resampling": [
                "0 <- 2.7",
                "1 <- 2.7",
                "2 <- 2.7",
                "3 <- 2.7",
                "4 <- 2.9",
                "5 <- 2.7",
                "6 <- 2.9",
                "7 <- 2.7",
                "8 <- 2.7",
                "9 <- 2.7"
            ]
        },
        "Step 3": {
            "steps": [
                "8 * 11 = 88 (left: 2 5  || 5 / 2 = 2.5 (left: 2.5)",
                "8 * 11 = 88 (left: 2 5  || 5 / 2 = 2.5 (left: 2.5)",
                "8 * 11 = 88 (left: 2 5  || 3 * 10 = 30 (left: 30)",
                "8 * 11 = 88 (left: 2 5  || 2 * 5 = 10 (left: 10)",
                "8 - 5 = 3 (left: 2 3 11) || 2 * 3 = 6 (left: 6 11) || 6 / 11 = 0.5454545454545454 (left: 0.5454545454545454)",
                "8 * 11 = 88 (left: 2 5  || 5 - 2 = 3 (left: 3)",
                "8 - 5 = 3 (left: 2 3 11) || 2 * 3 = 6 (left: 6 11) || 11 + 6 = 17 (left: 17)",
                "8 * 11 = 88 (left: 2 5  || 5 - 2 = 3 (left: 3)",
                "8 * 11 = 88 (left: 2 5  || 5 - 2 = 3 (left: 3)",
                "8 * 11 = 88 (left: 2 5  || 2 / 5 = 0.4 (left: 0.4)"
            ],
            "Evaluation": [
                0.001,
                0.001,
                0.002,
                0.003,
                0.002,
                0.001,
                0.003,
                0.001,
                20.001,
                0.0
            ],
            "Resampling": [
                "0 <- 2.3",
                "1 <- 3.8",
                "2 <- 2.3",
                "3 <- 2.7",
                "4 <- 3.8",
                "5 <- 3.8",
                "6 <- 3.8",
                "7 <- 2.7",
                "8 <- 2.7",
                "9 <- 2.9"
            ]
        },
        "Step 4": {
            "steps": [
                "8 + 2 = 10 (left: 5 10 11) || 10 - 5 = 5 (left: 5 11)",
                "8 * 11 = 88 (left: 2 5  || 5 - 2 = 3 (left: 3) || 3 * 8 = 24 (left: 8 24)",
                "8 + 2 = 10 (left: 5 10 11) || 5 * 10 = 50 (left: 11 50)",
                "8 * 11 = 88 (left: 2 5  || Input: 7 3 ",
                "8 * 11 = 88 (left: 2 5  || 5 - 2 = 3 (left: 3) || 3 + 2 = 5 (left: 5)",
                "8 * 11 = 88 (left: 2 5  || 5 - 2 = 3 (left: 3) || There are no possible next steps with the input of 3.",
                "8 * 11 = 88 (left: 2 5  || 5 - 2 = 3 (left: 3) || 3 + 8 = 11 (left: 11)",
                "8 * 11 = 88 (left: 2 5  || 5 - 2 = 3 (left: 3)",
                "8 * 11 = 88 (left: 2 5  || 2 * 5 = 10 (left: 10)",
                "8 - 5 = 3 (left: 2 3 11) || 2 * 3 = 6 (left: 6 11) || 6 - 11 = -5 (left: -5)"
            ],
            "Evaluation": [
                0.002,
                1.002,
                0.003,
                0.003,
                0.002,
                0.003,
                0.003,
                0.001,
                0.003,
                0.0
            ],
            "Resampling": [
                "0 <- 2.7",
                "1 <- 3.8",
                "2 <- 3.8",
                "3 <- 2.7",
                "4 <- 2.7",
                "5 <- 3.8",
                "6 <- 2.7",
                "7 <- 2.7",
                "8 <- 2.7",
                "9 <- 1.5"
            ]
        },
        "Step 5": {
            "steps": [
                "8 * 11 = 88 (left: 2 5  || 5 / 2 = 2.5 (left: 2.5)",
                "8 * 11 = 88 (left: 2 5  || 5 - 2 = 3 (left: 3) || 8 / 3 = 2.67 (left: 2.67)",
                "8 * 11 = 88 (left: 2 5  || 5 - 2 = 3 (left: 3) || 3 / 8 = 0.375 (left: 0.375)",
                "8 * 11 = 88 (left: 2 5  || 2 * 5 = 10 (left: 10)",
                "8 * 11 = 88 (left: 2 5  || 10 + 15 = 25 (left: 15 25)",
                "8 * 11 = 88 (left: 2 5  || 5 - 2 = 3 (left: 3) || There are no possible next steps with the input of 3.",
                "8 * 11 = 88 (left: 2 5  || Input: 3 9 ",
                "8 * 11 = 88 (left: 2 5  || Input: 3 9 27",
                "8 * 11 = 88 (left: 2 5  || 2 * 5 = 10 (left: 10)",
                "8 - 5 = 3 (left: 2 3 11) || Input: 5 6 10"
            ],
            "Evaluation": [
                0.001,
                0.003,
                0.003,
                0.003,
                0.002,
                0.003,
                0.003,
                0.003,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- 1.5",
                "1 <- 2.7",
                "2 <- 3.8",
                "3 <- 2.7",
                "4 <- 2.7",
                "5 <- 2.7",
                "6 <- 3.8",
                "7 <- 2.7",
                "8 <- 0.6",
                "9 <- 2.7"
            ]
        },
        "Step 6": {
            "steps": [
                "8 - 5 = 3 (left: 2 3 11) || 3 * 11 = 33 (left: 2 33)",
                "8 * 11 = 88 (left: 2 5  || 9 - 5 = 4 (left: 4 3)",
                "8 * 11 = 88 (left: 2 5  || 5 - 2 = 3 (left: 3) || 3",
                "8 * 11 = 88 (left: 2 5  || 2 * 5 = 10 (left: 10)",
                "8 * 11 = 88 (left: 2 5  || 3 + 9 = 12 (left: 12 15)",
                "8 * 11 = 88 (left: 2 5  || 5 / 2 = 2.5 (left: 2.5)",
                "8 * 11 = 88 (left: 2 5  || 5 - 2 = 3 (left: 3) || 3 * 3 = 9 (left: 9)",
                "8 * 11 = 88 (left: 2 5  || 5 - 2 = 3 (left: 3)",
                "8 - 5 = 3 (left: 2 3 11) || 11 - 2 = 9 (left: 3 9)",
                "8 * 11 = 88 (left: 2 5  || 5 / 2 = 2.5 (left: 2.5)"
            ],
            "Evaluation": [
                0.002,
                2.0,
                0.003,
                0.003,
                0.003,
                0.0,
                0.003,
                0.003,
                0.003,
                0.0
            ],
            "Resampling": [
                "0 <- 2.7",
                "1 <- 2.7",
                "2 <- 3.8",
                "3 <- 2.7",
                "4 <- 2.7",
                "5 <- 0.4",
                "6 <- 2.7",
                "7 <- 2.9",
                "8 <- 3.8",
                "9 <- 2.9"
            ]
        },
        "Step 7": {
            "steps": [
                "8 * 11 = 88 (left: 2 5  || 5 - 2 = 3 (left: 3)",
                "8 * 11 = 88 (left: 2 5  || 5 - 2 = 3 (left: 3)",
                "8 * 11 = 88 (left: 2 5  || 5 - 2 = 3 (left: 3) || There are no possible next steps with only one number provided.",
                "8 * 11 = 88 (left: 2 5  || Input: 6 3 ",
                "8 * 11 = 88 (left: 2 5  || 5 - 2 = 3 (left: 3)",
                "8 + 11 = 19 (left: 2 5 19) || 19 - 5 = 14 (left: 2 14)",
                "8 * 11 = 88 (left: 2 5  || 2 * 5 = 10 (left: 10)",
                "8 - 5 = 3 (left: 2 3 11) || 2 * 3 = 6 (left: 6 11) || 11 - 6 = 5 (left: 5)",
                "8 * 11 = 88 (left: 2 5  || 5 - 2 = 3 (left: 3) || There are no possible next steps with just the number 3.",
                "8 - 5 = 3 (left: 2 3 11) || 2 * 3 = 6 (left: 6 11) || 11 / 6 = 1.83 (left: 1.83)"
            ],
            "Evaluation": [
                0.003,
                0.0,
                0.003,
                0.003,
                0.001,
                0.003,
                0.002,
                0.003,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- 3.8",
                "1 <- 3.8",
                "2 <- 3.8",
                "3 <- 1.0",
                "4 <- 1.0",
                "5 <- 2.7",
                "6 <- 2.9",
                "7 <- 2.7",
                "8 <- 3.8",
                "9 <- 2.7"
            ]
        },
        "Step 8": {
            "steps": [
                "8 * 11 = 88 (left: 2 5  || 5 - 2 = 3 (left: 3) || 3 * 8 = 24 (left: 8 24)",
                "8 * 11 = 88 (left: 2 5  || 5 - 2 = 3 (left: 3) || There are no possible next steps with just one number.",
                "8 * 11 = 88 (left: 2 5  || 5 - 2 = 3 (left: 3) || 7 / 3 = 2 (left: 2 9 12)",
                "5 * 2 = 10 (left: 10 8 11) || 10 * 8 = 80 (left: 80 11)",
                "5 * 2 = 10 (left: 10 8 11) || 10 * 8 = 80 (left: 80 11)",
                "8 * 11 = 88 (left: 2 5  || 5 / 2 = 2.5 (left: 2.5)",
                "8 - 5 = 3 (left: 2 3 11) || 2 * 3 = 6 (left: 6 11) || 6 * 11 = 66 (left: 66)",
                "8 * 11 = 88 (left: 2 5  || Input: 3 9",
                "8 * 11 = 88 (left: 2 5  || 5 - 2 = 3 (left: 3) || No possible next steps.",
                "8 * 11 = 88 (left: 2 5  || 5 / 2 = 2.5 (left: 2.5 5)"
            ],
            "Evaluation": [
                40.001,
                20.002,
                1.002,
                0.003,
                1.001,
                0.001,
                0.003,
                0.003,
                0.003,
                21.001
            ],
            "Resampling": [
                "0 <- 8.0",
                "1 <- 8.1",
                "2 <- 8.1",
                "3 <- 8.0",
                "4 <- 8.9",
                "5 <- 8.9",
                "6 <- 8.1",
                "7 <- 8.1",
                "8 <- 8.0",
                "9 <- 8.0"
            ]
        },
        "Step 9": {
            "steps": [
                "8 * 11 = 88 (left: 2 5  || 5 - 2 = 3 (left: 3) || 3 * 8 = 24 (left: 8 24) || 24 / 8 = 3 (left: 3)",
                "8 * 11 = 88 (left: 2 5  || 5 - 2 = 3 (left: 3) || There are no possible next steps with just one number. || Input more numbers to continue the calculations.",
                "8 * 11 = 88 (left: 2 5  || 5 - 2 = 3 (left: 3) || There are no possible next steps with just one number. || Provide another number to create a valid mathematical operation.",
                "8 * 11 = 88 (left: 2 5  || 5 - 2 = 3 (left: 3) || 3 * 8 = 24 (left: 8 24) || 8 / 24 = 0.3333333333333333 (left: 0.3333333333333333 8)",
                "8 * 11 = 88 (left: 2 5  || 5 / 2 = 2.5 (left: 2.5 5) || 5 / 2.5 = 2 (left: 2)",
                "8 * 11 = 88 (left: 2 5  || 5 / 2 = 2.5 (left: 2.5 5) || 3 + 9 = 12 (left: 12)",
                "8 * 11 = 88 (left: 2 5  || 5 - 2 = 3 (left: 3) || There are no possible next steps with just one number. || 7 + 9 = 16 (left: 3 5 16)",
                "8 * 11 = 88 (left: 2 5  || 5 - 2 = 3 (left: 3) || There are no possible next steps with just one number. || Input more numbers to perform operations on.",
                "8 * 11 = 88 (left: 2 5  || 5 - 2 = 3 (left: 3) || 3 * 8 = 24 (left: 8 24) || 24 / 8 = 3 (left: 3 8)",
                "8 * 11 = 88 (left: 2 5  || 5 - 2 = 3 (left: 3) || 3 * 8 = 24 (left: 8 24) || 24 - 8 = 16 (left: 8 16)"
            ]
        },
        "Input": "2 5 8 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "903": {
        "puzzle": "3 4 4 13",
        "Step 0": {
            "steps": [
                "13 + 3 = 16 (left: 4 4 16)",
                "4 / 3 = 1 (left: 1 4 13)",
                "3 * 4 = 12 (left: 12 4 13)",
                "3 * 4 = 12 (left: 4 12 13)",
                "13 - 3 = 10 (left: 4 4 10)",
                "3 * 4 = 12 (left: 4 12 13)",
                "3 * 4 = 12 (left: 12 4 13)",
                "13 - 3 = 10 (left: 4 4 10)",
                "13 - 4 = 9 (left: ",
                "13 - 3 = 10 (left: 4 4 10)"
            ],
            "Evaluation": [
                20.002,
                1.002,
                1.002,
                0.003,
                40.0,
                2.001,
                1.002,
                60.0,
                0.0,
                40.0
            ],
            "Resampling": [
                "0 <- 0.0",
                "1 <- 0.7",
                "2 <- 0.7",
                "3 <- 0.4",
                "4 <- 0.4",
                "5 <- 0.7",
                "6 <- 0.6",
                "7 <- 0.7",
                "8 <- INIT",
                "9 <- INIT"
            ]
        },
        "Step 1": {
            "steps": [
                "13 + 3 = 16 (left: 4 4 16) || 16 - 4 = 12 (left: 4 12)",
                "13 - 3 = 10 (left: 4 4 10) || 10 / 4 = 2.5 (left: 4 2.5)",
                "13 - 3 = 10 (left: 4 4 10) || 10 - 4 = 6 (left: 4 6)",
                "13 - 3 = 10 (left: 4 4 10) || 4 / 4 = 1 (left: 1 10)",
                "13 - 3 = 10 (left: 4 4 10) || 4 * 4 = 16 (left: 16 10)",
                "13 - 3 = 10 (left: 4 4 10) || Possible next steps:",
                "3 * 4 = 12 (left: 12 4 13) || 13 + 12 = 25 (left: 4 25)",
                "13 - 3 = 10 (left: 4 4 10) || 10 / 4 = 2.5 (left: 4 2.5)",
                "13 + 3 = 16 (left: 4 4 16)",
                "3 * 4 = 12 (left: 4 12 13)"
            ],
            "Evaluation": [
                0.003,
                60.0,
                60.0,
                60.0,
                0.003,
                0.003,
                40.0,
                60.0,
                1.002,
                2.001
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- 1.2",
                "2 <- 0.9",
                "3 <- 1.2",
                "4 <- 1.6",
                "5 <- 0.7",
                "6 <- 1.6",
                "7 <- 0.4",
                "8 <- 1.7",
                "9 <- 0.7"
            ]
        },
        "Step 2": {
            "steps": [
                "4 / 3 = 1.3333 (left: 1.3333 4 13)",
                "13 - 3 = 10 (left: 4 4 10) || 10 - 4 = 6 (left: 4 6) || 6 / 4 = 1.5 (left: 1.5)",
                "13 - 3 = 10 (left: 4 4 10) || 10 - 4 = 6 (left: 4 6)",
                "13 - 3 = 10 (left: 4 4 10) || 10 - 4 = 6 (left: 4 6) || 6 / 4 = 1.5 (left: 1.5)",
                "3 * 4 = 12 (left: 12 4 13) || 13 + 12 = 25 (left: 4 25) || 3 + 9 = 12 (left: 12 27)",
                "13 - 3 = 10 (left: 4 4 10) || Input: 3 5",
                "3 * 4 = 12 (left: 12 4 13) || 13 + 12 = 25 (left: 4 25) || Input: 10 5",
                "13 - 3 = 10 (left: 4 4 10) || 10 + 4 = 14 (left: 4 14)",
                "13 - 3 = 10 (left: 4 4 10) || 10 / 4 = 2.5 (left: 4 2.5) || 4 * 2.5 = 10 (left: 2.5 10)",
                "13 - 3 = 10 (left: 4 4 10) || 10 - 4 = 6 (left: 4 6)"
            ],
            "Evaluation": [
                3.0,
                0.002,
                40.0,
                0.001,
                0.003,
                0.003,
                0.003,
                0.003,
                0.002,
                60.0
            ],
            "Resampling": [
                "0 <- 0.7",
                "1 <- 1.7",
                "2 <- 1.2",
                "3 <- 1.1",
                "4 <- 2.9",
                "5 <- 0.0",
                "6 <- 2.9",
                "7 <- 0.7",
                "8 <- 1.7",
                "9 <- 0.4"
            ]
        },
        "Step 3": {
            "steps": [
                "13 - 3 = 10 (left: 4 4 10) || 4 * 4 = 16 (left: 16 10)",
                "13 - 3 = 10 (left: 4 4 10) || 10 / 4 = 2.5 (left: 4 2.5) || 4 - 2.5 = 1.5 (left: 1.5)",
                "13 - 3 = 10 (left: 4 4 10) || 10 - 4 = 6 (left: 4 6) || 6 / 4 = 1.5 (left: 1.5)",
                "13 - 3 = 10 (left: 4 4 10) || 10 / 4 = 2.5 (left: 4 2.5) || 4 * 2.5 = 10 (left: 10)",
                "13 - 3 = 10 (left: 4 4 10) || 10 - 4 = 6 (left: 4 6) || 6 / 4 = 1.5 (left: 1.5)",
                "13 + 3 = 16 (left: 4 4 16) || 16 / 4 = 4 (left:",
                "13 - 3 = 10 (left: 4 4 10) || 10 - 4 = 6 (left: 4 6) || 4 * 6 = 24 (left: 24)",
                "13 - 3 = 10 (left: 4 4 10) || 10 - 4 = 6 (left: 4 6)",
                "13 - 3 = 10 (left: 4 4 10) || 10 / 4 = 2.5 (left: 4 2.5) || 4 / 2.5 = 1.6 (left: 1.6)",
                "13 - 3 = 10 (left: 4 4 10) || 4 * 4 = 16 (left: 16 10)"
            ],
            "Evaluation": [
                0.003,
                0.001,
                0.002,
                0.003,
                0.0,
                0.0,
                60.0,
                20.0,
                0.002,
                0.003
            ],
            "Resampling": [
                "0 <- 3.6",
                "1 <- 3.6",
                "2 <- 3.6",
                "3 <- 2.2",
                "4 <- 1.2",
                "5 <- 1.1",
                "6 <- 3.6",
                "7 <- 3.6",
                "8 <- 1.3",
                "9 <- 3.7"
            ]
        },
        "Step 4": {
            "steps": [
                "13 - 3 = 10 (left: 4 4 10) || 10 - 4 = 6 (left: 4 6) || 4 * 6 = 24 (left: 24) || Answer: 4 * (4 - (13 - 3)) = 24",
                "13 - 3 = 10 (left: 4 4 10) || 10 - 4 = 6 (left: 4 6) || 4 * 6 = 24 (left: 24) || Answer: 4 * (10 - (13 - 3)) = 24",
                "13 - 3 = 10 (left: 4 4 10) || 10 - 4 = 6 (left: 4 6) || 4 * 6 = 24 (left: 24) || Answer: 4 * (10 - (13 - 3)) = 24",
                "13 - 3 = 10 (left: 4 4 10) || 10 - 4 = 6 (left: 4 6) || Input: 3 9",
                "13 - 3 = 10 (left: 4 4 10) || 10 - 4 = 6 (left: 4 6) || 6 - 4 = 2 (left: 2)",
                "13 - 3 = 10 (left: 4 4 10) || 10 / 4 = 2.5 (left: 4 2.5) || 4 / 2.5 = 1.6 (left: 1.6)",
                "13 - 3 = 10 (left: 4 4 10) || 10 - 4 = 6 (left: 4 6) || 4 * 6 = 24 (left: 24) || Answer: 4 * (4 - (13 - 3)) = 24",
                "13 - 3 = 10 (left: 4 4 10) || 10 - 4 = 6 (left: 4 6) || 4 * 6 = 24 (left: 24) || Answer: (13 - 3) - (4 - 4) = 24",
                "13 - 3 = 10 (left: 4 4 10) || 4 / 4 = 1 (left: 1 10) || 1 * 10 = 10 (left: 10)",
                "13 - 3 = 10 (left: 4 4 10) || 10 - 4 = 6 (left: 4 6) || 4 / 6 = 0.6666666666666666 (left: 0.6666666666666666)"
            ],
            "Evaluation": [
                0.003,
                0.002,
                0.002,
                0.003,
                1.001,
                60.0,
                60.0,
                41.0,
                60.0,
                60.0
            ],
            "Resampling": [
                "0 <- 4.9",
                "1 <- 3.6",
                "2 <- 4.6",
                "3 <- 4.7",
                "4 <- 1.2",
                "5 <- 4.5",
                "6 <- 4.8",
                "7 <- 1.7",
                "8 <- 4.7",
                "9 <- 4.9"
            ]
        },
        "Step 5": {
            "steps": [
                "13 - 3 = 10 (left: 4 4 10) || 10 / 4 = 2.5 (left: 4 2.5) || 4 - 2.5 = 1.5 (left: 1.5)",
                "13 - 3 = 10 (left: 4 4 10) || 10 - 4 = 6 (left: 4 6) || 4 * 6 = 24 (left: 24) || Answer: 4 * (10 - (13 - 3)) = 24",
                "13 - 3 = 10 (left: 4 4 10) || 10 - 4 = 6 (left: 4 6) || 4 * 6 = 24 (left: 24) || Answer: (13 - 3) * (4 - 4) = 24",
                "13 - 3 = 10 (left: 4 4 10) || 10 / 4 = 2.5 (left: 4 2.5) || 4 * 2.5 = 10 (left: 2.5 10)",
                "13 - 3 = 10 (left: 4 4 10) || 10 - 4 = 6 (left: 4 6) || 6 - 4 = 2 (left: 2)",
                "13 - 3 = 10 (left: 4 4 10) || 10 - 4 = 6 (left: 4 6)",
                "13 - 3 = 10 (left: 4 4 10) || 10 - 4 = 6 (left: 4 6) || 6 - 4 = 2 (left: 2)",
                "13 - 3 = 10 (left: 4 4 10) || 10 / 4 = 2.5 (left: 4 2.5) || 4 * 2.5 = 10 (left: 10)",
                "13 - 3 = 10 (left: 4 4 10) || 10 / 4 = 2.5 (left: 4 2.5) || 4 * 2.5 = 10 (left: 2.5 10)",
                "13 - 3 = 10 (left: 4 4 10) || 10 / 4 = 2.5 (left: 4 2.5) || 4 / 2.5 = 1.6 (left: 1.6)"
            ],
            "Evaluation": [
                0.001,
                0.002,
                0.001,
                40.0,
                0.002,
                0.003,
                0.002,
                0.001,
                60.0,
                60.0
            ],
            "Resampling": [
                "0 <- 4.9",
                "1 <- 4.6",
                "2 <- 5.9",
                "3 <- 4.8",
                "4 <- 5.9",
                "5 <- 5.8",
                "6 <- 4.9",
                "7 <- 4.6",
                "8 <- 5.8",
                "9 <- 5.8"
            ]
        },
        "Step 6": {
            "steps": [
                "13 - 3 = 10 (left: 4 4 10) || 10 / 4 = 2.5 (left: 4 2.5) || 4 - 2.5 = 1.5 (left: 1.5)",
                "13 - 3 = 10 (left: 4 4 10) || 10 - 4 = 6 (left: 4 6) || 4 * 6 = 24 (left: 24) || Answer: 4 * (10 - (13 - 3)) = 24",
                "13 - 3 = 10 (left: 4 4 10) || 10 - 4 = 6 (left: 4 6) || 4 * 6 = 24 (left: 24) || Answer: 4 * (10 - (13 - 3)) = 24",
                "13 - 3 = 10 (left: 4 4 10) || 10 - 4 = 6 (left: 4 6) || 6 + 4 = 10 (left: 10)",
                "13 - 3 = 10 (left: 4 4 10) || 10 - 4 = 6 (left: 4 6) || 4 * 6 = 24 (left: 24) || Answer: 4 * (10 - (13 - 3)) = 24",
                "13 - 3 = 10 (left: 4 4 10) || 10 - 4 = 6 (left: 4 6) || 6 / 4 = 1.5 (left: 1.5)",
                "13 - 3 = 10 (left: 4 4 10) || 10 / 4 = 2.5 (left: 4 2.5) || 4 / 2.5 = 1.6 (left: 1.6)",
                "13 - 3 = 10 (left: 4 4 10) || 10 - 4 = 6 (left: 4 6) || 4 * 6 = 24 (left: 24) || Answer: (13 - 3) * (4 - 4) = 24",
                "13 - 3 = 10 (left: 4 4 10) || 10 - 4 = 6 (left: 4 6) || Input: 3 9",
                "13 - 3 = 10 (left: 4 4 10) || 10 - 4 = 6 (left: 4 6) || 10 + 5 = 15 (left: 15 2)"
            ],
            "Evaluation": [
                0.0,
                0.003,
                0.001,
                0.002,
                0.003,
                0.003,
                60.0,
                60.0,
                60.0,
                60.0
            ],
            "Resampling": [
                "0 <- 3.6",
                "1 <- 4.6",
                "2 <- 5.8",
                "3 <- 4.7",
                "4 <- 4.9",
                "5 <- 5.8",
                "6 <- 6.6",
                "7 <- 6.9",
                "8 <- 5.8",
                "9 <- 3.6"
            ]
        },
        "Step 7": {
            "steps": [
                "13 - 3 = 10 (left: 4 4 10) || 10 - 4 = 6 (left: 4 6) || 4 * 6 = 24 (left: 24) || Answer: (13 - 3) - (4 - 4) = 24",
                "13 - 3 = 10 (left: 4 4 10) || 10 - 4 = 6 (left: 4 6) || 4 * 6 = 24 (left: 24) || Answer: (13 - 3) * (4 - 4) = 24",
                "13 - 3 = 10 (left: 4 4 10) || 10 - 4 = 6 (left: 4 6) || 3 * 9 = 27 (left: 27 5)",
                "13 - 3 = 10 (left: 4 4 10) || 10 / 4 = 2.5 (left: 4 2.5) || 4 * 2.5 = 10 (left: 10)",
                "13 - 3 = 10 (left: 4 4 10) || 10 / 4 = 2.5 (left: 4 2.5) || 4 - 2.5 = 1.5 (left: 1.5)",
                "13 - 3 = 10 (left: 4 4 10) || 10 - 4 = 6 (left: 4 6) || Possible next steps:",
                "13 - 3 = 10 (left: 4 4 10) || 10 - 4 = 6 (left: 4 6) || 6 - 4 = 2 (left: 2)",
                "13 - 3 = 10 (left: 4 4 10) || 10 - 4 = 6 (left: 4 6) || 6 - 4 = 2 (left: 2)",
                "13 - 3 = 10 (left: 4 4 10) || 10 - 4 = 6 (left: 4 6) || 6 / 4 = 1.5 (left: 1.5)",
                "13 - 3 = 10 (left: 4 4 10) || 10 - 4 = 6 (left: 4 6) || 4 * 6 = 24 (left: 24) || Answer: 4 * (10 - (13 - 3)) = 24"
            ],
            "Evaluation": [
                0.002,
                0.002,
                0.0,
                0.003,
                0.001,
                0.002,
                0.001,
                60.0,
                60.0,
                60.0
            ],
            "Resampling": [
                "0 <- 4.8",
                "1 <- 7.7",
                "2 <- 6.8",
                "3 <- 6.8",
                "4 <- 6.6",
                "5 <- 3.7",
                "6 <- 6.9",
                "7 <- 3.6",
                "8 <- 7.8",
                "9 <- 4.5"
            ]
        },
        "Step 8": {
            "steps": [
                "13 - 3 = 10 (left: 4 4 10) || 10 - 4 = 6 (left: 4 6) || 4 / 6 = 0.6666666666666666 (left: 0.6666666666666666)",
                "13 - 3 = 10 (left: 4 4 10) || 10 - 4 = 6 (left: 4 6) || 4 * 6 = 24 (left: 24) || Answer: 4 * (10 - (13 - 3)) = 24",
                "13 - 3 = 10 (left: 4 4 10) || 10 - 4 = 6 (left: 4 6) || 4 * 6 = 24 (left: 24) || Answer: 4 * (4 - (13 - 3)) = 24",
                "13 - 3 = 10 (left: 4 4 10) || 10 - 4 = 6 (left: 4 6) || 4 * 6 = 24 (left: 24) || Answer: 4 * (4 * (13 - 3)) = 24",
                "13 - 3 = 10 (left: 4 4 10) || 10 - 4 = 6 (left: 4 6) || 3 + 9 = 12 (left: 12 27)",
                "13 - 3 = 10 (left: 4 4 10) || 10 - 4 = 6 (left: 4 6) || 6 / 4 = 1.5 (left: 1.5)",
                "13 - 3 = 10 (left: 4 4 10) || 10 - 4 = 6 (left: 4 6) || 4 * 6 = 24 (left: 24)",
                "13 - 3 = 10 (left: 4 4 10) || 10 - 4 = 6 (left: 4 6) || 4 * 6 = 24 (left: 24) || Answer: 4 * (10 - (13 - 3)) = 24",
                "13 - 3 = 10 (left: 4 4 10) || 10 - 4 = 6 (left: 4 6) || 4 * 6 = 24 (left: 24) || Answer: 4 * (10 - (13 - 3)) = 24",
                "13 - 3 = 10 (left: 4 4 10) || 3 * 9 = 27 (left: 27 27)"
            ],
            "Evaluation": [
                20.002,
                0.003,
                0.001,
                60.0,
                0.003,
                60.0,
                60.0,
                60.0,
                60.0,
                60.0
            ],
            "Resampling": [
                "0 <- 8.3",
                "1 <- 8.8",
                "2 <- 8.6",
                "3 <- 7.8",
                "4 <- 6.9",
                "5 <- 8.6",
                "6 <- 6.6",
                "7 <- 7.7",
                "8 <- 8.5",
                "9 <- 7.8"
            ]
        },
        "Step 9": {
            "steps": [
                "13 - 3 = 10 (left: 4 4 10) || 10 - 4 = 6 (left: 4 6) || 4 * 6 = 24 (left: 24) || Answer: (13 - 3) * (4 - 4) = 24",
                "13 - 3 = 10 (left: 4 4 10) || 10 - 4 = 6 (left: 4 6) || 6 / 4 = 1.5 (left: 1.5)",
                "13 - 3 = 10 (left: 4 4 10) || 10 - 4 = 6 (left: 4 6) || 4 * 6 = 24 (left: 24) || Answer: (13 - 3) * (4 - 4) = 24",
                "13 - 3 = 10 (left: 4 4 10) || 10 - 4 = 6 (left: 4 6) || 4 * 6 = 24 (left: 24) || Answer: (13 - 3) * (4 - 4) = 24",
                "13 - 3 = 10 (left: 4 4 10) || 10 - 4 = 6 (left: 4 6) || 3 + 9 = 12 (left: 12)",
                "13 - 3 = 10 (left: 4 4 10) || 10 - 4 = 6 (left: 4 6) || 4 * 6 = 24 (left: 24) || Answer: 4 * (10 - (13 - 3)) = 24",
                "13 - 3 = 10 (left: 4 4 10) || 10 - 4 = 6 (left: 4 6) || 6 - 4 = 2 (left: 2)",
                "13 - 3 = 10 (left: 4 4 10) || 10 - 4 = 6 (left: 4 6) || 4 * 6 = 24 (left: 24) || Answer: 4 * (13 - 3) * 4 = 24",
                "13 - 3 = 10 (left: 4 4 10) || 10 / 4 = 2.5 (left: 4 2.5) || 4 * 2.5 = 10 (left: 10)",
                "13 - 3 = 10 (left: 4 4 10) || 10 - 4 = 6 (left: 4 6) || 4 * 6 = 24 (left: 24) || Answer: 4 * (4 - (13 - 3)) = 24"
            ]
        },
        "Input": "3 4 4 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "904": {
        "puzzle": "6 7 8 9",
        "Step 0": {
            "steps": [
                "8 + 9 = 17 (left: 6 7 17)",
                "7 + 8 = 15 (left: 6 9 15)",
                "6 * 7 = 42 (left: 8 9 42)",
                "6 * 7 = 42 (left: 8 9 42)",
                "8 + 9 = 17 (left: 6 7 17)",
                "6 / 7 = 0.857 (left: 0.857 8 9)",
                "8 - 6 = 2 (left: 2 7 9)",
                "8 + 9 = 17 (left: 6 7 17)",
                "9 - 8 = 1 (left: 6 1 ",
                "8 + 9 = 17 (left: 6 7 17)"
            ],
            "Evaluation": [
                0.002,
                3.0,
                2.0,
                0.001,
                0.003,
                2.001,
                1.002,
                2.001,
                0.002,
                1.002
            ],
            "Resampling": [
                "0 <- 0.5",
                "1 <- 0.6",
                "2 <- INIT",
                "3 <- 0.7",
                "4 <- INIT",
                "5 <- 0.1",
                "6 <- INIT",
                "7 <- INIT",
                "8 <- INIT",
                "9 <- INIT"
            ]
        },
        "Step 1": {
            "steps": [
                "6 / 7 = 0.857 (left: 0.857 8 9) || 8 / 0.857 = 9.333 (left: 9 9.333)",
                "8 - 6 = 2 (left: 2 7 9) || 2 * 7 = 14 (left: 14 9)",
                "8 - 6 = 2 (left: 2 7 9)",
                "8 + 9 = 17 (left: 6 7 17) || 6 * 7 = 42 (left: 42 17)",
                "6 * 7 = 42 (left: 8 9 42)",
                "7 + 8 = 15 (left: 6 9 15) || 6 * 9 = 54 (left:",
                "8 - 6 = 2 (left: 2 7 9)",
                "8 * 9 = 72 (left: 6 7 ",
                "8 + 9 = 17 (left: 6 7 17)",
                "6 * 7 = 42 (left: 8 9 42)"
            ],
            "Evaluation": [
                2.001,
                0.002,
                1.002,
                0.001,
                2.001,
                0.003,
                1.002,
                1.002,
                1.002,
                2.001
            ],
            "Resampling": [
                "0 <- 1.7",
                "1 <- INIT",
                "2 <- 0.2",
                "3 <- 1.2",
                "4 <- 1.4",
                "5 <- INIT",
                "6 <- INIT",
                "7 <- 0.7",
                "8 <- 1.9",
                "9 <- 1.0"
            ]
        },
        "Step 2": {
            "steps": [
                "8 * 9 = 72 (left: 6 7  || 7 - 6 = 1 (left: 1)",
                "8 - 7 = 1 (left: 6 1 9)",
                "6 * 7 = 42 (left: 8 9 42) || 42 / 9 = 4.67 (left: 8 4.67)",
                "8 - 6 = 2 (left: 2 7 9) || 9 - 2 = 7 (left: 7 9)",
                "6 * 7 = 42 (left: 8 9 42) || 8 + 9 = 17 (left: 17 42)",
                "7 + 8 = 15 (left: 6 9 15)",
                "9 - 8 = 1 (left: 6 1 9)",
                "8 + 9 = 17 (left: 6 7 17) || 17 - 7 = 10 (left: 6 10)",
                "6 * 7 = 42 (left: 8 9 42) || 42 - 8 = 34 (left: 8 34)",
                "6 / 7 = 0.857 (left: 0.857 8 9) || 8 / 0.857 = 9.333 (left: 9 9.333) || 9 / 9.333 = 0.962 (left: 0.962)"
            ],
            "Evaluation": [
                0.002,
                1.002,
                1.002,
                0.002,
                0.001,
                2.001,
                3.0,
                0.003,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- 0.5",
                "1 <- 0.6",
                "2 <- 2.6",
                "3 <- 1.4",
                "4 <- 1.9",
                "5 <- INIT",
                "6 <- 2.6",
                "7 <- 2.6",
                "8 <- 1.6",
                "9 <- INIT"
            ]
        },
        "Step 3": {
            "steps": [
                "6 / 7 = 0.857 (left: 0.857 8 9) || 8 * 9 = 72 (left: 0.857 72)",
                "8 - 6 = 2 (left: 2 7 9) || Possible next steps:",
                "9 - 8 = 1 (left: 6 1 9) || 6 - 1 = 5 (left: 5 9)",
                "6 * 7 = 42 (left: 8 9 42) || 42 / 8 = 5.25 (left: 5.25)",
                "6 * 7 = 42 (left: 8 9 42) || 42 / 9 = 4.67 (left: 8 4.67)",
                "6 * 7 = 42 (left: 8 9 42)",
                "9 - 8 = 1 (left: 6 1 9) || 9 - 1 = 8 (left: 6 8)",
                "9 - 8 = 1 (left: 6 1 9) || 9 - 1 = 8 (left: 6 8)",
                "8 - 6 = 2 (left: 2 7 9) || 2 * 7 = 14 (left: 14 9)",
                "8 - 6 = 2 (left: 2 7 9)"
            ],
            "Evaluation": [
                0.001,
                0.003,
                0.003,
                0.002,
                3.0,
                3.0,
                0.002,
                1.002,
                0.003,
                2.001
            ],
            "Resampling": [
                "0 <- 2.1",
                "1 <- 1.9",
                "2 <- 3.9",
                "3 <- 2.2",
                "4 <- 0.2",
                "5 <- 3.5",
                "6 <- 1.8",
                "7 <- 3.7",
                "8 <- 2.2",
                "9 <- 2.5"
            ]
        },
        "Step 4": {
            "steps": [
                "8 - 7 = 1 (left: 6 1 9) || 9 - 6 = 3 (left: 6 3)",
                "6 * 7 = 42 (left: 8 9 42) || 42 / 9 = 4 (left: 8 4)",
                "8 - 6 = 2 (left: 2 7 9) || 7 * 2 = 14 (left: 14 9)",
                "6 * 7 = 42 (left: 8 9 42) || 42 / 9 = 4.67 (left: 8 4.67) || 8 * 4.67 = 37.36 (left: 37.36)",
                "6 * 7 = 42 (left: 8 9 42) || 42 - 9 = 33 (left: 8 33)",
                "6 * 7 = 42 (left: 8 9 42) || 8 *",
                "8 + 9 = 17 (left: 6 7 17) || 17 - 6 = 11 (left: 6 11)",
                "9 - 8 = 1 (left: 6 1 9) || 9 - 1 = 8 (left: 6 8) || 6 * 8 = 48 (left: 48)",
                "6 * 7 = 42 (left: 8 9 42) || 42 / 9 = 4.67 (left: 8 4.67) || 8 * 4.67 = 37.36 (left: 37.36)",
                "7 + 8 = 15 (left: 6 9 15) || 9 / 3 = 3 (left: 6 15)"
            ],
            "Evaluation": [
                0.0,
                0.003,
                0.003,
                0.003,
                0.003,
                0.003,
                0.002,
                0.003,
                0.003,
                0.002
            ],
            "Resampling": [
                "0 <- 3.4",
                "1 <- 2.5",
                "2 <- 2.1",
                "3 <- 0.9",
                "4 <- 3.5",
                "5 <- 3.4",
                "6 <- 1.0",
                "7 <- 3.4",
                "8 <- 1.4",
                "9 <- 2.6"
            ]
        },
        "Step 5": {
            "steps": [
                "6 * 7 = 42 (left: 8 9 42) || 42 / 9 = 4.67 (left: 8 4.67) || 8 - 4.67 = 3.33 (left: 3.33)",
                "7 + 8 = 15 (left: 6 9 15) || 6 * 9 = 54 (left: 54 15)",
                "8 - 7 = 1 (left: 6 1 9) || 3 + 3 = 6 (left:",
                "8 + 9 = 17 (left: 6 7 17) || 6 * 7 = 42 (left: 42 17)",
                "6 * 7 = 42 (left: 8 9 42) || 42 / 9 = 4.67 (left: 8 4.67)",
                "6 * 7 = 42 (left: 8 9 42) || 42 / 9 = 4.67 (left: 8 4.67) || 8 - 4.67 = 3.33 (left: 3.33)",
                "6 / 7 = 0.857 (left: 0.857 8 9) || 8 / 0.857 = 9.333 (left: 9 9.333) || 9 * 9.333 = 84 (left: 84)",
                "6 * 7 = 42 (left: 8 9 42) || 42 / 9 = 4.67 (left: 8 4.67) || 8 * 4.67 = 37.36 (left: 37.36)",
                "6 * 7 = 42 (left: 8 9 42) || 42 - 8 = 34 (left: 8 34)",
                "9 - 8 = 1 (left: 6 1 9) || 6 / 1 = 6 (left: 6 9)"
            ],
            "Evaluation": [
                0.003,
                0.003,
                2.0,
                0.0,
                2.001,
                0.003,
                0.003,
                0.003,
                0.002,
                0.003
            ],
            "Resampling": [
                "0 <- 5.2",
                "1 <- 0.7",
                "2 <- 1.2",
                "3 <- 3.9",
                "4 <- 5.2",
                "5 <- 1.4",
                "6 <- 5.2",
                "7 <- 5.4",
                "8 <- 5.2",
                "9 <- 1.6"
            ]
        },
        "Step 6": {
            "steps": [
                "8 - 7 = 1 (left: 6 1 9) || 3 + 3 = 6 (left: || 3 / 3 = 1 (left: 6 1)",
                "8 + 9 = 17 (left: 6 7 17) || 6 * 7 = 42 (left: 42 17)",
                "8 - 6 = 2 (left: 2 7 9) || 7 * 2 = 14 (left: 14 9)",
                "8 - 6 = 2 (left: 2 7 9) || 7 * 2 = 14 (left: 14 9)",
                "8 - 7 = 1 (left: 6 1 9) || 3 + 3 = 6 (left: || 4 + 2 = 6 (left: 2 6)",
                "6 * 7 = 42 (left: 8 9 42) || 42 -",
                "8 - 7 = 1 (left: 6 1 9) || 3 + 3 = 6 (left: || 6 - 3 = 3 (left: 3 3)",
                "6 * 7 = 42 (left: 8 9 42) || 42 / 9 = 4.67 (left: 8 4.67) || 8 * 4.67 = 37.36 (left: 4.67 37.36)",
                "8 - 7 = 1 (left: 6 1 9) || 3 + 3 = 6 (left: || 3 - 3 = 0 (left: 0)",
                "8 - 6 = 2 (left: 2 7 9) || 7 * 2 = 14 (left: 14 9)"
            ],
            "Evaluation": [
                20.001,
                0.001,
                0.001,
                0.003,
                1.001,
                0.003,
                20.0,
                3.0,
                0.002,
                0.003
            ],
            "Resampling": [
                "0 <- 6.4",
                "1 <- 6.0",
                "2 <- 6.0",
                "3 <- 6.6",
                "4 <- 6.0",
                "5 <- 6.0",
                "6 <- 6.0",
                "7 <- 6.0",
                "8 <- 6.6",
                "9 <- 5.2"
            ]
        },
        "Step 7": {
            "steps": [
                "8 - 7 = 1 (left: 6 1 9) || 3 + 3 = 6 (left: || 4 + 2 = 6 (left: 2 6) || 6 / 2 = 3 (left: 3)",
                "8 - 7 = 1 (left: 6 1 9) || 3 + 3 = 6 (left: || 3 / 3 = 1 (left: 6 1) || 6 / 1 = 6 (left: 6)",
                "8 - 7 = 1 (left: 6 1 9) || 3 + 3 = 6 (left: || 3 / 3 = 1 (left: 6 1) || 6 / 1 = 6 (left: 6)",
                "8 - 7 = 1 (left: 6 1 9) || 3 + 3 = 6 (left: || 6 - 3 = 3 (left: 3 3) || Input: 4 6",
                "8 - 7 = 1 (left: 6 1 9) || 3 + 3 = 6 (left: || 3 / 3 = 1 (left: 6 1) || 6 / 1 = 6 (left: 6)",
                "8 - 7 = 1 (left: 6 1 9) || 3 + 3 = 6 (left: || 3 / 3 = 1 (left: 6 1) || 6 / 1 = 6 (left: 6)",
                "8 - 7 = 1 (left: 6 1 9) || 3 + 3 = 6 (left: || 3 / 3 = 1 (left: 6 1) || 6 * 1 = 6 (left: 6)",
                "8 - 7 = 1 (left: 6 1 9) || 3 + 3 = 6 (left: || 3 / 3 = 1 (left: 6 1) || 6 * 1 = 6 (left: 6)",
                "8 - 7 = 1 (left: 6 1 9) || 3 + 3 = 6 (left: || 6 - 3 = 3 (left: 3 3) || 3 / 3 = 1 (left: 1)",
                "8 - 7 = 1 (left: 6 1 9) || 3 + 3 = 6 (left: || 3 ^ 3 = 27 (left: 6 27)"
            ],
            "Evaluation": [
                0.003,
                0.003,
                20.0,
                40.001,
                40.0,
                60.0,
                40.0,
                41.0,
                21.0,
                1.001
            ],
            "Resampling": [
                "0 <- 7.4",
                "1 <- 7.3",
                "2 <- 7.4",
                "3 <- 7.7",
                "4 <- 7.5",
                "5 <- 7.7",
                "6 <- 6.6",
                "7 <- 7.5",
                "8 <- 7.3",
                "9 <- 7.6"
            ]
        },
        "Step 8": {
            "steps": [
                "8 - 7 = 1 (left: 6 1 9) || 3 + 3 = 6 (left: || 6 - 3 = 3 (left: 3 3) || 3 - 3 = 0 (left: 0)",
                "8 - 7 = 1 (left: 6 1 9) || 3 + 3 = 6 (left: || 3 / 3 = 1 (left: 6 1) || 6 + 1 = 7",
                "8 - 7 = 1 (left: 6 1 9) || 3 + 3 = 6 (left: || 6 - 3 = 3 (left: 3 3) || 3 - 3 = 0 (left: 0)",
                "8 - 7 = 1 (left: 6 1 9) || 3 + 3 = 6 (left: || 3 / 3 = 1 (left: 6 1) || 6 * 1 = 6 (left: 6)",
                "8 - 7 = 1 (left: 6 1 9) || 3 + 3 = 6 (left: || 3 / 3 = 1 (left: 6 1) || 6 / 1 = 6 (left: 6)",
                "8 - 7 = 1 (left: 6 1 9) || 3 + 3 = 6 (left: || 3 / 3 = 1 (left: 6 1) || 6 * 1 = 6 (left: 6)",
                "8 - 7 = 1 (left: 6 1 9) || 3 + 3 = 6 (left: || 6 - 3 = 3 (left: 3 3) || 3 - 3 = 0 (left: 0)",
                "8 - 7 = 1 (left: 6 1 9) || 3 + 3 = 6 (left: || 3 / 3 = 1 (left: 6 1) || 6 / 1 = 6 (left: 6)",
                "8 - 7 = 1 (left: 6 1 9) || 3 + 3 = 6 (left: || 3 / 3 = 1 (left: 6 1) || 6 * 1 = 6 (left: 6)",
                "8 - 7 = 1 (left: 6 1 9) || 3 + 3 = 6 (left: || 3 / 3 = 1 (left: 6 1) || 6 / 1 = 6 (left: 6)"
            ],
            "Evaluation": [
                0.003,
                40.001,
                40.001,
                41.0,
                60.0,
                3.0,
                21.0,
                40.001,
                20.0,
                60.0
            ],
            "Resampling": [
                "0 <- 8.7",
                "1 <- 8.4",
                "2 <- 8.3",
                "3 <- 7.7",
                "4 <- 8.3",
                "5 <- 8.1",
                "6 <- 6.0",
                "7 <- 8.4",
                "8 <- 8.2",
                "9 <- 8.2"
            ]
        },
        "Step 9": {
            "steps": [
                "8 - 7 = 1 (left: 6 1 9) || 3 + 3 = 6 (left: || 3 / 3 = 1 (left: 6 1) || 6 / 1 = 6 (left: 6)",
                "8 - 7 = 1 (left: 6 1 9) || 3 + 3 = 6 (left: || 3 / 3 = 1 (left: 6 1) || 4 / 3 = 1.33 (left: 1.33",
                "8 - 7 = 1 (left: 6 1 9) || 3 + 3 = 6 (left: || 3 / 3 = 1 (left: 6 1) || 6 * 1 = 6 (left: 6)",
                "8 - 7 = 1 (left: 6 1 9) || 3 + 3 = 6 (left: || 3 / 3 = 1 (left: 6 1) || 6 * 1 = 6 (left: 6)",
                "8 - 7 = 1 (left: 6 1 9) || 3 + 3 = 6 (left: || 3 / 3 = 1 (left: 6 1) || 6 / 1 = 6 (left: 6)",
                "8 - 7 = 1 (left: 6 1 9) || 3 + 3 = 6 (left: || 3 / 3 = 1 (left: 6 1) || 6 / 1 = 6 (left: 6)",
                "8 - 7 = 1 (left: 6 1 9) || 3 + 3 = 6 (left: || 3 / 3 = 1 (left: 6 1) || 6 * 1 = 6 (left: 6)",
                "8 - 7 = 1 (left: 6 1 9) || 3 + 3 = 6 (left: || 3 / 3 = 1 (left: 6 1) || 6 / 1 = 6 (left: 6)",
                "8 - 7 = 1 (left: 6 1 9) || 3 + 3 = 6 (left: || 3 / 3 = 1 (left: 6 1) || 6 * 1 = 6 (left: 6)",
                "8 - 7 = 1 (left: 6 1 9) || 3 + 3 = 6 (left: || 3 / 3 = 1 (left: 6 1) || 6 / 1 = 6 (left: 6)"
            ]
        },
        "Input": "6 7 8 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "905": {
        "puzzle": "1 11 11 13",
        "Step 0": {
            "steps": [
                "13 - 1 = 12 (left: 11 11 12)",
                "11 - 1 = 10 (left: 10 11 13)",
                "11 * 1 = 11 (left: 11 11 13)",
                "11 - 1 = 10 (left: 10 11 13)",
                "13 - 11 = 2 (left: 1 11 2)",
                "1 * 11 = 11 (left: 11 11 13)",
                "13 - 11 = 2 (left: 1 11 2)",
                "13 - 1 = 12 (left: 11 11 12)",
                "11 / 1 = 11 (left: 11 11 13)",
                "13 - 11 = 2 (left: 1 11 2)"
            ],
            "Evaluation": [
                0.003,
                1.002,
                0.003,
                1.002,
                2.001,
                3.0,
                2.001,
                0.003,
                0.003,
                3.0
            ],
            "Resampling": [
                "0 <- 0.5",
                "1 <- 0.6",
                "2 <- 0.5",
                "3 <- INIT",
                "4 <- 0.6",
                "5 <- INIT",
                "6 <- INIT",
                "7 <- INIT",
                "8 <- INIT",
                "9 <- INIT"
            ]
        },
        "Step 1": {
            "steps": [
                "1 * 11 = 11 (left: 11 11 13) || 11 / 11 = 1 (left: 1 13)",
                "13 - 11 = 2 (left: 1 11 2) || 11 / 1 = 11 (left: 11 2)",
                "1 * 11 = 11 (left: 11 11 13) || 11 * 11 = 121 (left: 13 121)",
                "13 - 1 = 12 (left: 11 11 12)",
                "13 - 11 = 2 (left: 1 11 2) || 11 / 1 = 11 (left: 11 2)",
                "11 - 1 = 10 (left: 10 11 13)",
                "11 / 1 = 11 (left: 11 11 13)",
                "13 - 1 = 12 (left: 11 11 ",
                "13 - 11 = 2 (left: 1 11 2)",
                "11 + 1 = 12 (left: 11 12 13)"
            ],
            "Evaluation": [
                1.001,
                0.003,
                0.003,
                1.002,
                1.001,
                1.002,
                0.003,
                0.003,
                22.0,
                60.0
            ],
            "Resampling": [
                "0 <- 1.9",
                "1 <- 1.9",
                "2 <- 1.8",
                "3 <- 0.5",
                "4 <- 1.8",
                "5 <- 1.9",
                "6 <- 1.9",
                "7 <- 1.8",
                "8 <- 1.9",
                "9 <- 1.9"
            ]
        },
        "Step 2": {
            "steps": [
                "11 + 1 = 12 (left: 11 12 13) || 11 - 12 = -1 (left: 13)",
                "11 + 1 = 12 (left: 11 12 13) || 13 - 11 = 2 (left: 2 12)",
                "13 - 11 = 2 (left: 1 11 2) || 11 / 1 = 11 (left: 2 11)",
                "1 * 11 = 11 (left: 11 11 13) || 11 + 13 = 24 (left: 11 24)",
                "13 - 11 = 2 (left: 1 11 2) || 11 / 1 = 11 (left: 2 11)",
                "11 + 1 = 12 (left: 11 12 13) || 13 - 11 = 2 (left: 2 12)",
                "11 + 1 = 12 (left: 11 12 13) || 11 * 12 = 132 (left: 13 132)",
                "13 - 11 = 2 (left: 1 11 2) || 2 / 1 = 2 (left: 2 2)",
                "11 + 1 = 12 (left: 11 12 13) || 11 * 12 = 132 (left: 13 132)",
                "11 + 1 = 12 (left: 11 12 13) || 11 * 12 = 132 (left: 13)"
            ],
            "Evaluation": [
                0.003,
                60.0,
                0.003,
                0.003,
                0.003,
                60.0,
                0.002,
                21.0,
                0.002,
                0.002
            ],
            "Resampling": [
                "0 <- 1.9",
                "1 <- 2.1",
                "2 <- 2.5",
                "3 <- 1.9",
                "4 <- 1.9",
                "5 <- 2.5",
                "6 <- 2.1",
                "7 <- 2.1",
                "8 <- 2.7",
                "9 <- 2.7"
            ]
        },
        "Step 3": {
            "steps": [
                "11 + 1 = 12 (left: 11 12 13) || 12 - 11 = 1 (left: 1 13)",
                "11 + 1 = 12 (left: 11 12 13) || 13 - 11 = 2 (left: 2 12) || 12 * 2 = 24 (left: 24)",
                "11 + 1 = 12 (left: 11 12 13) || 13 - 11 = 2 (left: 2 12) || 2 * 12 = 24 (left: 24)",
                "11 + 1 = 12 (left: 11 12 13) || 13 + 11 = 24 (left: 12 24)",
                "11 + 1 = 12 (left: 11 12 13) || 11 * 12 = 132 (left: 13 132)",
                "11 + 1 = 12 (left: 11 12 13) || 13 - 11 = 2 (left: 2 12) || 12 - 2 = 10 (left: 10)",
                "11 + 1 = 12 (left: 11 12 13) || 13 - 11 = 2 (left: 2 12) || 12 - 2 = 10 (left: 10)",
                "11 + 1 = 12 (left: 11 12 13) || 13 - 11 = 2 (left: 2 12) || 12 - 2 = 10 (left: 10)",
                "13 - 11 = 2 (left: 1 11 2) || 2 / 1 = 2 (left: 2 2) || 2 + 2 = 4",
                "13 - 11 = 2 (left: 1 11 2) || 2 / 1 = 2 (left: 2 2) || 2 + 2 = 4"
            ],
            "Evaluation": [
                1.002,
                60.0,
                60.0,
                0.003,
                20.001,
                0.003,
                0.002,
                0.001,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- 1.9",
                "1 <- 1.9",
                "2 <- 3.1",
                "3 <- 2.5",
                "4 <- 2.5",
                "5 <- 2.5",
                "6 <- 1.8",
                "7 <- 2.5",
                "8 <- 3.2",
                "9 <- 3.2"
            ]
        },
        "Step 4": {
            "steps": [
                "11 + 1 = 12 (left: 11 12 13) || 12 - 11 = 1 (left: 1 13)",
                "11 + 1 = 12 (left: 11 12 13) || 11 * 12 = 132 (left: 13 132)",
                "11 + 1 = 12 (left: 11 12 13) || 13 - 11 = 2 (left: 2 12) || 12 * 2 = 24 (left: 24) || Answer: (13 - 11) * (11 + 1) = 24",
                "11 + 1 = 12 (left: 11 12 13) || 13 - 11 = 2 (left: 2 12) || 2 * 12 = 24 (left: 24)",
                "11 + 1 = 12 (left: 11 12 13) || 13 - 11 = 2 (left: 2 12) || 2 * 12 = 24 (left: 24)",
                "11 + 1 = 12 (left: 11 12 13) || 13 - 11 = 2 (left: 2 12) || 12 / 2 = 6 (left: 6)",
                "13 - 11 = 2 (left: 1 11 2) || 2 + 1 = 3 (left: 3 11)",
                "11 + 1 = 12 (left: 11 12 13) || 13 - 11 = 2 (left: 2 12) || 12 / 2 = 6 (left: 6)",
                "11 + 1 = 12 (left: 11 12 13) || 13 - 11 = 2 (left: 2 12) || 2 * 12 = 24 (left: 24) || Answer: (11 + 1) * (13 - 11) = 24",
                "11 + 1 = 12 (left: 11 12 13) || 13 - 11 = 2 (left: 2 12) || 2 * 12 = 24 (left: 24) || Answer: (11 + 1) * (13 - 11) = 24"
            ]
        },
        "Input": "1 11 11 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 1
            }
        ]
    },
    "906": {
        "puzzle": "1 8 10 11",
        "Step 0": {
            "steps": [
                "10 + 1 = 11 (left: 8 11 11)",
                "8 + 1 = 9 (left: 9 10 11)",
                "11 - 1 = 10 (left: 8 10 10)",
                "11 - 1 = 10 (left: 8 10 10)",
                "10 - 1 = 9 (left: 8 9 11)",
                "11 - 1 = 10 (left: 8 10 10)",
                "",
                "11 - 1 = 10 (left: 8 10 10)",
                "8 / 1 = 8 (left: 8 10 ",
                "11 - 1 = 10 (left: 8 10 11)"
            ],
            "Evaluation": [
                2.001,
                1.001,
                2.001,
                1.002,
                3.0,
                3.0,
                0.003,
                1.002,
                2.001,
                1.002
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- 0.4",
                "4 <- 0.0",
                "5 <- INIT",
                "6 <- 0.4",
                "7 <- 0.3",
                "8 <- 0.9",
                "9 <- INIT"
            ]
        },
        "Step 1": {
            "steps": [
                "8 - 1 = 7 (left: 7 10 11)",
                "11 - 1 = 10 (left: 8 10 10)",
                "1 * 8 = 8 (left: 8 10 11)",
                "10 - 1 = 9 (left: 8 9 11) || 8 * 9 = 72 (left: 11 72)",
                "10 + 1 = 11 (left: 8 11 11) || 8 - 11 = -3 (left: -3 11)",
                "11 - 1 = 10 (left: 8 10 10)",
                "10 - 1 = 9 (left: 8 9 11) || 11 - 8 = 3 (left: 3 11)",
                "11 - 1 = 10 (left: 8 10 10) || 10 - 8 = 2 (left: 2 10)",
                "11 - 1 = 10 (left: 8 10 11) || 8 * 10 = 80 (left: 80 11)",
                "1 * 8 = 8 (left: 8 10 11)"
            ],
            "Evaluation": [
                2.001,
                1.002,
                3.0,
                0.003,
                2.001,
                2.001,
                1.002,
                3.0,
                0.001,
                2.001
            ],
            "Resampling": [
                "0 <- 0.2",
                "1 <- 1.2",
                "2 <- 0.5",
                "3 <- 1.9",
                "4 <- INIT",
                "5 <- INIT",
                "6 <- 1.9",
                "7 <- INIT",
                "8 <- 0.8",
                "9 <- 1.2"
            ]
        },
        "Step 2": {
            "steps": [
                "11 - 1 = 10 (left: 8 10 10) || 10 * 8 = 80 (left: 80 10)",
                "1 * 8 = 8 (left: 8 10 11) || 10 - 8 = 2 (left: 2 11)",
                "11 - 1 = 10 (left: 8 10 10) || 10 * 8 = 80 (left: 10 80)",
                "1 * 8 = 8 (left: 8 10 11) || 8 * 10 = 80 (left: 80 11)",
                "11 - 1 = 10 (left: 8 10 10)",
                "11 - 1 = 10 (left: 8 10 10)",
                "1 * 8 = 8 (left: 8 10 11) || 11 - 8 = 3 (left: 3 10)",
                "10 - 8 = 2 (left: 1 2 ",
                "8 / 1 = 8 (left: 8 10  || 8 * 10 = 80 (left: 80)",
                "1 * 8 = 8 (left: 8 10 11) || 10 - 8 = 2 (left: 2 11)"
            ],
            "Evaluation": [
                40.0,
                1.002,
                40.001,
                0.001,
                1.002,
                2.001,
                0.001,
                20.002,
                0.002,
                0.002
            ],
            "Resampling": [
                "0 <- 2.2",
                "1 <- 2.2",
                "2 <- 2.0",
                "3 <- 2.0",
                "4 <- 2.2",
                "5 <- 2.0",
                "6 <- 2.0",
                "7 <- 2.0",
                "8 <- 1.4",
                "9 <- 1.9"
            ]
        },
        "Step 3": {
            "steps": [
                "11 - 1 = 10 (left: 8 10 10) || 10 * 8 = 80 (left: 10 80) || 10 + 80 = 90 (left: 90)",
                "11 - 1 = 10 (left: 8 10 10) || 10 * 8 = 80 (left: 10 80) || 80 - 10 =",
                "11 - 1 = 10 (left: 8 10 10) || 10 * 8 = 80 (left: 80 10) || 80 - 10 = 70 (left: 70 10)",
                "11 - 1 = 10 (left: 8 10 10) || 10 * 8 = 80 (left: 80 10) || 80 - 10 = 70 (left: 10 70)",
                "11 - 1 = 10 (left: 8 10 10) || 10 * 8 = 80 (left: 10 80) || 80 - 10 = 70 (left: 70)",
                "11 - 1 = 10 (left: 8 10 10) || 10 * 8 = 80 (left: 80 10) || 80 / 10 = 8 (left: 10 8)",
                "11 - 1 = 10 (left: 8 10 10) || 10 * 8 = 80 (left: 80 10) || 80 / 10 = 8 (left: 8 10)",
                "11 - 1 = 10 (left: 8 10 10) || 10 * 8 = 80 (left: 80 10) || 80 * 10 = 800 (left: 10 800)",
                "10 + 1 = 11 (left: 8 11 11) || 8 - 11 = -3 (left: -3 11) || -3 * 11 = -33 (left: -33)",
                "1 * 8 = 8 (left: 8 10 11) || 8 * 10 = 80 (left: 80 11)"
            ],
            "Evaluation": [
                0.003,
                0.003,
                2.0,
                1.002,
                0.003,
                0.003,
                1.001,
                21.001,
                0.001,
                1.001
            ],
            "Resampling": [
                "0 <- 2.2",
                "1 <- 2.0",
                "2 <- 1.4",
                "3 <- 2.7",
                "4 <- 2.7",
                "5 <- 2.7",
                "6 <- 1.9",
                "7 <- 2.2",
                "8 <- 1.0",
                "9 <- 2.0"
            ]
        },
        "Step 4": {
            "steps": [
                "11 - 1 = 10 (left: 8 10 10) || 10 * 8 = 80 (left: 10 80) || 10 / 80 = 0.125 (left: 0.125)",
                "11 - 1 = 10 (left: 8 10 10) || 10 * 8 = 80 (left: 80 10) || 80 / 10 = 8 (left: 10)",
                "10 + 1 = 11 (left: 8 11 11) || 8 - 11 = -3 (left: -3 11) || -3 / 11 = -0.2727272727272727 (left: -0.2727272727272727)",
                "10 - 8 = 2 (left: 1 2  || 1 * 2 = 2 (left: 2)",
                "10 - 8 = 2 (left: 1 2  || 1 / 2 = 0.5 (left: 0.5)",
                "10 - 8 = 2 (left: 1 2  || 2 / 1 = 2 (left: 2)",
                "1 * 8 = 8 (left: 8 10 11) || 10 + 11 = 21 (left: 8 21)",
                "11 - 1 = 10 (left: 8 10 10) || 10 * 8 = 80 (left: 10 80) || 10 + 80 = 90 (left: 80 90)",
                "8 - 1 = 7 (left: 7 10 11) || 11 - 7 = 4 (left: 4 10)",
                "11 - 1 = 10 (left: 8 10 10) || 10 * 8 = 80 (left: 80 10) || 80 - 10 = 70 (left: 70)"
            ],
            "Evaluation": [
                0.002,
                0.002,
                0.0,
                0.0,
                20.001,
                0.001,
                0.002,
                20.002,
                41.0,
                0.002
            ],
            "Resampling": [
                "0 <- 4.7",
                "1 <- 3.6",
                "2 <- 2.7",
                "3 <- 4.8",
                "4 <- 4.7",
                "5 <- 2.0",
                "6 <- 2.2",
                "7 <- 4.4",
                "8 <- 2.0",
                "9 <- 4.8"
            ]
        },
        "Step 5": {
            "steps": [
                "11 - 1 = 10 (left: 8 10 10) || 10 * 8 = 80 (left: 10 80) || 10 + 80 = 90 (left: 80 90) || 80 - 90 = -10 (left: -10 90)",
                "11 - 1 = 10 (left: 8 10 10) || 10 * 8 = 80 (left: 80 10) || 80 / 10 = 8 (left: 8 10) || 8 / 10 = 0.8 (left: 0.8)",
                "10 - 8 = 2 (left: 1 2  || Possible next steps:",
                "8 - 1 = 7 (left: 7 10 11) || 11 - 7 = 4 (left: 4 10) || Input: 3 9 27",
                "11 - 1 = 10 (left: 8 10 10) || 10 * 8 = 80 (left: 10 80) || 10 + 80 = 90 (left: 80 90) || Possible next steps:",
                "11 - 1 = 10 (left: 8 10 10) || 10 * 8 = 80 (left: 80 10) || 80 - 10 = 70 (left: 70 10)",
                "11 - 1 = 10 (left: 8 10 10) || 10 * 8 = 80 (left: 10 80) || 80 / 10 = 8 (left: 8)",
                "10 - 8 = 2 (left: 1 2  || 1 / 2 = 0.5 (left: 0.5) || 0.5 * 2 = 1 (left: 1)",
                "11 - 1 = 10 (left: 8 10 10) || 10 * 8 = 80 (left: 80 10) || 80 * 10 = 800 (left: 10 800)",
                "8 - 1 = 7 (left: 7 10 11) || 11 - 7 = 4 (left: 4 10) || 4 * 10 = 40 (left: 10)"
            ],
            "Evaluation": [
                60.0,
                0.003,
                0.003,
                0.003,
                40.0,
                0.002,
                0.003,
                0.002,
                0.003,
                21.001
            ],
            "Resampling": [
                "0 <- 5.0",
                "1 <- 4.7",
                "2 <- 5.4",
                "3 <- 5.4",
                "4 <- 4.7",
                "5 <- 5.9",
                "6 <- 5.0",
                "7 <- 5.0",
                "8 <- 5.4",
                "9 <- 5.4"
            ]
        },
        "Step 6": {
            "steps": [
                "11 - 1 = 10 (left: 8 10 10) || 10 * 8 = 80 (left: 10 80) || 10 + 80 = 90 (left: 80 90) || 80 - 90 = -10 (left: -10 90) || -10 / 90 = -0.1111 (left: -0.1111)",
                "11 - 1 = 10 (left: 8 10 10) || 10 * 8 = 80 (left: 10 80) || 10 + 80 = 90 (left: 80 90) || 80 / 90 = 0.8888888888888888 (left: 0.8888888888888888)",
                "11 - 1 = 10 (left: 8 10 10) || 10 * 8 = 80 (left: 80 10) || 80 - 10 = 70 (left: 70 10) || 70 / 10 = 7 (left: 7)",
                "11 - 1 = 10 (left: 8 10 10) || 10 * 8 = 80 (left: 80 10) || 80 - 10 = 70 (left: 70 10) || 70 / 10 = 7 (left: 7)",
                "11 - 1 = 10 (left: 8 10 10) || 10 * 8 = 80 (left: 10 80) || 10 + 80 = 90 (left: 80 90) || 80 / 90 = 0.8888888888888888 (left: 0.8888888888888888)",
                "8 - 1 = 7 (left: 7 10 11) || 11 - 7 = 4 (left: 4 10) || 3 + 6 = 9 (left: 9)",
                "11 - 1 = 10 (left: 8 10 10) || 10 * 8 = 80 (left: 10 80) || 10 + 80 = 90 (left: 80 90) || 80 - 90 = -10 (left: -10 90) || -10 * 90 = -900 (left: -900)",
                "11 - 1 = 10 (left: 8 10 10) || 10 * 8 = 80 (left: 10 80) || 10 + 80 = 90 (left: 80 90) || 80 - 90 = -10 (left: -10 90) || -10 * 90 = -900 (left: -900)",
                "11 - 1 = 10 (left: 8 10 10) || 10 * 8 = 80 (left: 80 10) || 80 - 10 = 70 (left: 70 10) || 70 * 10 = 700 (left: 700)",
                "11 - 1 = 10 (left: 8 10 10) || 10 * 8 = 80 (left: 80 10) || 80 - 10 = 70 (left: 70 10) || 70 * 10 = 700 (left: 10 700)"
            ],
            "Evaluation": [
                0.001,
                0.002,
                0.001,
                22.0,
                20.001,
                20.0,
                0.0,
                20.002,
                40.0,
                40.0
            ],
            "Resampling": [
                "0 <- 5.4",
                "1 <- 6.3",
                "2 <- 5.4",
                "3 <- 5.9",
                "4 <- 6.9",
                "5 <- 5.0",
                "6 <- 6.5",
                "7 <- 4.8",
                "8 <- 3.7",
                "9 <- 5.4"
            ]
        },
        "Step 7": {
            "steps": [
                "11 - 1 = 10 (left: 8 10 10) || 10 * 8 = 80 (left: 80 10) || 80 - 10 = 70 (left: 70 10) || 70 - 10 = 60 (left: 60)",
                "11 - 1 = 10 (left: 8 10 10) || 10 * 8 = 80 (left: 80 10) || 5 - 3 = 2 (left: 2 7)",
                "11 - 1 = 10 (left: 8 10 10) || 10 * 8 = 80 (left: 80 10) || 80 - 10 = 70 (left: 70 10) || 70 * 10 = 700 (left: 700)",
                "8 - 1 = 7 (left: 7 10 11) || 11 - 7 = 4 (left: 4 10) || 4 * 10 = 40 (left: 40)",
                "11 - 1 = 10 (left: 8 10 10) || 10 * 8 = 80 (left: 10 80) || 10 + 80 = 90 (left: 80 90) || 80 - 90 = -10 (left: -10 90) || -10 / 90 = -0.1111 (left: -0.1111)",
                "11 - 1 = 10 (left: 8 10 10) || 10 * 8 = 80 (left: 10 80) || 10 + 80 = 90 (left: 80 90) || 80 - 90 = -10 (left: -10 90) || 90 / -10 = -9 (left: -9)",
                "11 - 1 = 10 (left: 8 10 10) || 10 * 8 = 80 (left: 80 10) || 80 * 10 = 800 (left: 10 800) || 800 - 10 = 790 (left: 790)",
                "8 - 1 = 7 (left: 7 10 11) || 11 - 7 = 4 (left: 4 10) || Input: 3 9 27",
                "11 - 1 = 10 (left: 8 10 10) || 10 * 8 = 80 (left: 80 10) || 80 * 10 = 800 (left: 10 800) || 800 / 10 = 80 (left: 80)",
                "11 - 1 = 10 (left: 8 10 10) || 10 * 8 = 80 (left: 80 10) || 80 - 10 = 70 (left: 70 10) || 5 + 3 = 8 (left: 8 1)"
            ],
            "Evaluation": [
                0.001,
                0.003,
                0.003,
                40.0,
                22.0,
                41.0,
                40.0,
                40.0,
                0.0,
                20.0
            ],
            "Resampling": [
                "0 <- 7.5",
                "1 <- 4.4",
                "2 <- 7.5",
                "3 <- 2.0",
                "4 <- 2.2",
                "5 <- 7.7",
                "6 <- 7.5",
                "7 <- 7.7",
                "8 <- 6.8",
                "9 <- 7.7"
            ]
        },
        "Step 8": {
            "steps": [
                "11 - 1 = 10 (left: 8 10 10) || 10 * 8 = 80 (left: 10 80) || 10 + 80 = 90 (left: 80 90) || 80 - 90 = -10 (left: -10 90) || -10 - 90 = -100 (left: -100)",
                "10 - 8 = 2 (left: 1 2  || 1 / 2 = 0.5 (left: 0.5) || 0.5 - 2 = -1.5 (left: -1.5)",
                "11 - 1 = 10 (left: 8 10 10) || 10 * 8 = 80 (left: 10 80) || 10 + 80 = 90 (left: 80 90) || 80 - 90 = -10 (left: -10 90) || -10 / 90 = -0.111111 (left: -0.111111)",
                "11 - 1 = 10 (left: 8 10 10) || 10 * 8 = 80 (left: 80 10) || 10 + 80 = 90 (left: 90)",
                "11 - 1 = 10 (left: 8 10 10) || 10 * 8 = 80 (left: 10 80) || 80 - 10 = 70 (left: 70)",
                "11 - 1 = 10 (left: 8 10 10) || 10 * 8 = 80 (left: 10 80) || 10 + 80 = 90 (left: 80 90) || 80 - 90 = -10 (left: -10 90) || 5 + 4 = 9 (left: 3 9)",
                "11 - 1 = 10 (left: 8 10 10) || 10 * 8 = 80 (left: 10 80) || 10 + 80 = 90 (left: 80 90) || 80 - 90 = -10 (left: -10 90) || -10 * 90 = -900 (left: -900)",
                "11 - 1 = 10 (left: 8 10 10) || 10 * 8 = 80 (left: 10 80) || 10 + 80 = 90 (left: 80 90) || 80 - 90 = -10 (left: -10 90) || -10 / 90 = -0.1111 (left: -0.1111)",
                "11 - 1 = 10 (left: 8 10 10) || 10 * 8 = 80 (left: 10 80) || 10 + 80 = 90 (left: 80 90) || 80 - 90 = -10 (left: -10 90) || -10 - 90 = -100 (left: -100)",
                "11 - 1 = 10 (left: 8 10 10) || 10 * 8 = 80 (left: 10 80) || 10 + 80 = 90 (left: 80 90) || 80 - 90 = -10 (left: -10 90) || -10 / 90 = -0.111... (left: -0.111...)"
            ],
            "Evaluation": [
                0.0,
                0.003,
                0.003,
                0.003,
                40.0,
                40.0,
                0.001,
                0.001,
                21.0,
                0.002
            ],
            "Resampling": [
                "0 <- 7.4",
                "1 <- 7.4",
                "2 <- 8.8",
                "3 <- 8.4",
                "4 <- 2.7",
                "5 <- 7.5",
                "6 <- 6.5",
                "7 <- 7.3",
                "8 <- 8.4",
                "9 <- 7.3"
            ]
        },
        "Step 9": {
            "steps": [
                "11 - 1 = 10 (left: 8 10 10) || 10 * 8 = 80 (left: 80 10) || 80 - 10 = 70 (left: 70 10) || 70 / 10 = 7 (left: 7 10)",
                "11 - 1 = 10 (left: 8 10 10) || 10 * 8 = 80 (left: 80 10) || 80 - 10 = 70 (left: 70 10) || 70 / 10 = 7 (left: 7)",
                "11 - 1 = 10 (left: 8 10 10) || 10 * 8 = 80 (left: 10 80) || 10 + 80 = 90 (left: 80 90) || 80 - 90 = -10 (left: -10 90) || -10 * 90 = -900 (left: -900)",
                "11 - 1 = 10 (left: 8 10 10) || 10 * 8 = 80 (left: 80 10) || 80 - 10 = 70 (left: 70 10) || 5 + 3 = 8 (left: 8 1) || 8 / 1 = 8 (left: 8)",
                "10 - 8 = 2 (left: 1 2  || 1 * 2 = 2 (left: 2)",
                "11 - 1 = 10 (left: 8 10 10) || 10 * 8 = 80 (left: 10 80) || 10 + 80 = 90 (left: 80 90) || 80 - 90 = -10 (left: -10 90) || -10 / 90 = -0.1111111111111111 (left: -0.1111111111111111)",
                "11 - 1 = 10 (left: 8 10 10) || 10 * 8 = 80 (left: 80 10) || 80 * 10 = 800 (left: 10 800) || Input: 4 16 64",
                "11 - 1 = 10 (left: 8 10 10) || 10 * 8 = 80 (left: 80 10) || 80 - 10 = 70 (left: 70 10) || 5 + 3 = 8 (left: 8 1) || 8 * 1 = 8 (left: 8)",
                "11 - 1 = 10 (left: 8 10 10) || 10 * 8 = 80 (left: 80 10) || 80 - 10 = 70 (left: 70 10) || 5 + 3 = 8 (left: 8 1) || 8 * 1 = 8 (left: 8)",
                "11 - 1 = 10 (left: 8 10 10) || 10 * 8 = 80 (left: 80 10) || 80 - 10 = 70 (left: 70 10) || 5 + 3 = 8 (left: 8 1) || 8 * 1 = 8 (left: 8)"
            ]
        },
        "Input": "1 8 10 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "907": {
        "puzzle": "2 3 6 9",
        "Step 0": {
            "steps": [
                "9 - 6 = 3 (left: 2 3 3)",
                "6 / 3 = 2 (left: 2 6 9)",
                "6 / 2 = 3 (left: 3 3 9)",
                "6 / 2 = 3 (left: 3 3 9)",
                "9 - 6 = 3 (left: 2 3 3)",
                "9 / 3 = 3 (left: 2 6 9)",
                "9 / 3 = 3 (left: 2 3 6)",
                "9 - 6 = 3 (left: 2 3 3)",
                "9 - 3 = 6 (left: 2 6 ",
                "9 - 3 = 6 (left: 2 6 6)"
            ],
            "Evaluation": [
                1.001,
                0.003,
                1.001,
                1.001,
                2.0,
                1.002,
                22.0,
                1.0,
                2.001,
                60.0
            ],
            "Resampling": [
                "0 <- 0.9",
                "1 <- 0.9",
                "2 <- INIT",
                "3 <- 0.9",
                "4 <- INIT",
                "5 <- 0.9",
                "6 <- INIT",
                "7 <- 0.9",
                "8 <- 0.6",
                "9 <- 0.6"
            ]
        },
        "Step 1": {
            "steps": [
                "9 - 3 = 6 (left: 2 6 6) || 6 - 2 = 4 (left: 4 6)",
                "9 - 3 = 6 (left: 2 6 6) || 2 * 6 = 12 (left: 6 12)",
                "6 / 2 = 3 (left: 3 3 9)",
                "9 - 3 = 6 (left: 2 6 6) || 6 * 2 = 12 (left: 6 12)",
                "6 / 2 = 3 (left: 3 3 9)",
                "9 - 3 = 6 (left: 2 6 6) || 6 - 2 = 4 (left: 4 6)",
                "9 - 6 = 3 (left: 2 3 3)",
                "9 - 3 = 6 (left: 2 6 6) || 2 * 6 = 12 (left: 6 12)",
                "9 / 3 = 3 (left: 2 3 6) || 6 - 2 = 4 (left: 2 4 6)",
                "9 / 3 = 3 (left: 2 3 6) || Input: 4 7 9"
            ],
            "Evaluation": [
                41.0,
                1.002,
                1.002,
                0.003,
                3.0,
                40.0,
                3.0,
                0.003,
                1.002,
                0.003
            ],
            "Resampling": [
                "0 <- 0.9",
                "1 <- 1.0",
                "2 <- 1.6",
                "3 <- INIT",
                "4 <- 0.9",
                "5 <- 0.9",
                "6 <- 0.6",
                "7 <- 1.0",
                "8 <- 0.9",
                "9 <- 0.9"
            ]
        },
        "Step 2": {
            "steps": [
                "9 - 3 = 6 (left: 2 6 6) || 6 / 2 = 3 (left: 3 6)",
                "9 - 3 = 6 (left: 2 6 6) || 6 - 2 = 4 (left: 4 6) || 20 / 10 = 2 (left: 2 30)",
                "9 - 6 = 3 (left: 2 3 3) || 3 / 3 = 1 (left: 2 1)",
                "9 - 3 = 6 (left: 2 6 6)",
                "9 - 3 = 6 (left: 2 6 6) || 6 - 2 = 4 (left: 4 6)",
                "9 - 3 = 6 (left: 2 6 6) || 6 - 2 = 4 (left: 4 6)",
                "9 / 3 = 3 (left: 2 3 6) || 2 * 3 = 6 (left: 6)",
                "9 - 3 = 6 (left: 2 6 6) || 6 - 2 = 4 (left: 4 6) || 6 - 4 = 2 (left: 2)",
                "9 - 3 = 6 (left: 2 6 6) || 6 - 2 = 4 (left: 4 6)",
                "9 - 3 = 6 (left: 2 6 6) || 6 / 2 = 3 (left: 3 6)"
            ],
            "Evaluation": [
                3.0,
                0.003,
                0.002,
                60.0,
                60.0,
                60.0,
                0.003,
                0.001,
                60.0,
                1.0
            ],
            "Resampling": [
                "0 <- 0.6",
                "1 <- 0.9",
                "2 <- 0.9",
                "3 <- 2.8",
                "4 <- 2.5",
                "5 <- 2.8",
                "6 <- 2.4",
                "7 <- 2.5",
                "8 <- 2.4",
                "9 <- 2.3"
            ]
        },
        "Step 3": {
            "steps": [
                "9 / 3 = 3 (left: 2 3 6) || 3 * 2 = 6 (left: 6 6)",
                "9 - 3 = 6 (left: 2 6 6) || 6 / 2 = 3 (left: 3 6)",
                "9 - 3 = 6 (left: 2 6 6) || 6 / 2 = 3 (left: 3 6)",
                "9 - 3 = 6 (left: 2 6 6) || 6 - 2 = 4 (left: 4 6) || 6 / 4 = 1.5 (left: 1.5)",
                "9 - 3 = 6 (left: 2 6 6) || 6 - 2 = 4 (left: 4 6) || 4 * 6 = 24 (left: 24)",
                "9 - 3 = 6 (left: 2 6 6) || 6 - 2 = 4 (left: 4 6) || 3 + 5 = 8 (left: 7 8)",
                "9 - 3 = 6 (left: 2 6 6) || 6 - 2 = 4 (left: 4 6) || 6 - 4 = 2 (left: 2)",
                "9 - 3 = 6 (left: 2 6 6) || 6 - 2 = 4 (left: 4 6) || 4 * 6 = 24 (left: 24)",
                "9 - 3 = 6 (left: 2 6 6) || 6 - 2 = 4 (left: 4 6) || 4 * 6 = 24 (left: 24)",
                "9 - 3 = 6 (left: 2 6 6) || 6 * 2 = 12 (left: 6 12)"
            ],
            "Evaluation": [
                0.003,
                41.0,
                20.0,
                0.002,
                60.0,
                21.001,
                0.003,
                60.0,
                60.0,
                0.003
            ],
            "Resampling": [
                "0 <- 3.5",
                "1 <- 2.5",
                "2 <- 3.5",
                "3 <- 2.3",
                "4 <- 1.0",
                "5 <- 3.1",
                "6 <- 3.8",
                "7 <- 3.8",
                "8 <- 2.5",
                "9 <- 0.9"
            ]
        },
        "Step 4": {
            "steps": [
                "9 - 3 = 6 (left: 2 6 6) || 6 - 2 = 4 (left: 4 6) || 3 + 5 = 8 (left: 7 8) || 8 - 7 = 1 (left: 1)",
                "9 - 3 = 6 (left: 2 6 6) || 6 - 2 = 4 (left: 4 6) || 6 / 4 = 1.5 (left: 1.5)",
                "9 - 3 = 6 (left: 2 6 6) || 6 - 2 = 4 (left: 4 6) || 3 + 5 = 8 (left: 7 8) || 7 / 8 = 0.875 (left: 0.875)",
                "9 - 3 = 6 (left: 2 6 6) || Input: 3 3 5",
                "9 - 3 = 6 (left: 2 6 6) || 6 - 2 = 4 (left: 4 6) || 4 - 6 = -2 (left: -2)",
                "9 - 3 = 6 (left: 2 6 6) || 6 / 2 = 3 (left: 3 6) || 6 - 3 = 3 (left: 3)",
                "9 - 3 = 6 (left: 2 6 6) || 6 - 2 = 4 (left: 4 6) || 4 * 6 = 24 (left: 24) || Answer: (9 - 3) * (6 - 2) = 24",
                "9 - 3 = 6 (left: 2 6 6) || 6 - 2 = 4 (left: 4 6) || 4 * 6 = 24 (left: 24) || Answer: (9 - 3) * (6 - 2) = 24",
                "9 - 3 = 6 (left: 2 6 6) || 6 - 2 = 4 (left: 4 6) || 4 * 6 = 24 (left: 24)",
                "9 - 3 = 6 (left: 2 6 6) || 6 - 2 = 4 (left: 4 6)"
            ]
        },
        "Input": "2 3 6 9",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "908": {
        "puzzle": "1 3 5 9",
        "Step 0": {
            "steps": [
                "5 + 9 = 14 (left: 1 3 14)",
                "3 + 5 = 8 (left: 1 8 9)",
                "9 - 1 = 8 (left: 3 5 8)",
                "9 - 5 = 4 (left: 1 3 4)",
                "5 + 1 = 6 (left: 3 6 9)",
                "9 - 5 = 4 (left: 1 3 4)",
                "1 * 3 = 3 (left: 3 5 9)",
                "5 + 9 = 14 (left: 1 3 14)",
                "5 * 9 = 45 (left: 1 3 ",
                "5 + 9 = 14 (left: 1 3 14)"
            ],
            "Evaluation": [
                2.001,
                1.002,
                3.0,
                41.0,
                0.003,
                2.001,
                60.0,
                20.002,
                0.0,
                1.001
            ],
            "Resampling": [
                "0 <- 0.3",
                "1 <- 0.7",
                "2 <- INIT",
                "3 <- 0.3",
                "4 <- 0.6",
                "5 <- INIT",
                "6 <- 0.3",
                "7 <- 0.7",
                "8 <- 0.6",
                "9 <- 0.6"
            ]
        },
        "Step 1": {
            "steps": [
                "9 - 5 = 4 (left: 1 3 4) || 3 + 1 = 4 (left: 4 4)",
                "5 + 9 = 14 (left: 1 3 14) || 3 - 1 = 2 (left: 2 14)",
                "9 - 5 = 4 (left: 1 3 4)",
                "9 - 5 = 4 (left: 1 3 4) || 1 * 3 = 3 (left: 3 4)",
                "1 * 3 = 3 (left: 3 5 9) || Input: 4 6 7",
                "1 * 3 = 3 (left: 3 5 9)",
                "9 - 5 = 4 (left: 1 3 4) || 1 * 3 = 3 (left: 3 4)",
                "5 + 9 = 14 (left: 1 3 14) || 14 - 3 = 11 (left: 1 11)",
                "1 * 3 = 3 (left: 3 5 9) || 9 - 3 = 6 (left: 6 5)",
                "1 * 3 = 3 (left: 3 5 9) || Input: 4 6 10"
            ],
            "Evaluation": [
                0.003,
                0.003,
                3.0,
                21.0,
                0.003,
                60.0,
                22.0,
                40.0,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- 0.6",
                "1 <- 1.6",
                "2 <- 0.3",
                "3 <- 0.6",
                "4 <- 1.7",
                "5 <- 1.5",
                "6 <- 1.7",
                "7 <- 1.7",
                "8 <- 1.7",
                "9 <- 1.5"
            ]
        },
        "Step 2": {
            "steps": [
                "1 * 3 = 3 (left: 3 5 9) || 5 - 3 = 2 (left: 2 9)",
                "9 - 5 = 4 (left: 1 3 4) || 1 * 3 = 3 (left: 3 4) || 3 - 4 = -1 (left: -1)",
                "9 - 5 = 4 (left: 1 3 4) || 3 * 1 = 3 (left: 3 4)",
                "1 * 3 = 3 (left: 3 5 9) || 9 - 3 = 6 (left: 5 6)",
                "5 + 9 = 14 (left: 1 3 14) || 14 - 3 = 11 (left: 1 11) || 1 * 11 = 11 (left: 11)",
                "1 * 3 = 3 (left: 3 5 9) || Input: 4 6 12 24",
                "5 + 9 = 14 (left: 1 3 14) || 14 - 3 = 11 (left: 1 11) || 11 / 1 = 11 (left: 11)",
                "5 + 9 = 14 (left: 1 3 14) || 14 - 3 = 11 (left: 1 11) || Input: 3 9 27",
                "5 + 9 = 14 (left: 1 3 14) || 14 - 3 = 11 (left: 1 11) || 1 + 11 = 12",
                "1 * 3 = 3 (left: 3 5 9) || 9 - 5 = 4 (left: 4 9)"
            ],
            "Evaluation": [
                0.001,
                0.0,
                22.0,
                0.003,
                0.003,
                0.003,
                0.003,
                0.003,
                0.003,
                40.0
            ],
            "Resampling": [
                "0 <- 0.7",
                "1 <- 1.7",
                "2 <- 1.5",
                "3 <- 0.6",
                "4 <- 2.9",
                "5 <- 1.7",
                "6 <- 2.9",
                "7 <- 1.7",
                "8 <- INIT",
                "9 <- 1.5"
            ]
        },
        "Step 3": {
            "steps": [
                "5 + 9 = 14 (left: 1 3 14) || 1 + 3 = 4 (left: 4 14)",
                "5 + 9 = 14 (left: 1 3 14) || 14 - 3 = 11 (left: 1 11) || 1 * 11 = 11 (left: 11)",
                "1 * 3 = 3 (left: 3 5 9) || 9 - 5 = 4 (left: 3 4)",
                "1 * 3 = 3 (left: 3 5 9) || 9 - 3 = 6 (left: 6 9)",
                "1 * 3 = 3 (left: 3 5 9) || 9 - 5 = 4 (left: 4 9) || 5 + 7 = 12 (left: 12)",
                "5 + 9 = 14 (left: 1 3 14) || 14 - 3 = 11 (left: 1 11) || 11 / 1 = 11 (left: 11)",
                "1 * 3 = 3 (left: 3 5 9) || 9 - 5 = 4 (left: 4 9) || Input: 5 5",
                "5 + 9 = 14 (left: 1 3 14) || 14 - 3 = 11 (left: 1 11) || 1 * 11 = 11 (left: 11)",
                "5 + 9 = 14 (left: 1 3 14)",
                "1 * 3 = 3 (left: 3 5 9) || 3 * 5 = 15 (left: 15 9)"
            ],
            "Evaluation": [
                0.002,
                0.001,
                40.0,
                0.003,
                0.003,
                0.002,
                0.003,
                0.001,
                20.002,
                60.0
            ],
            "Resampling": [
                "0 <- 3.9",
                "1 <- 1.5",
                "2 <- 1.5",
                "3 <- 3.9",
                "4 <- 2.9",
                "5 <- 2.9",
                "6 <- 1.6",
                "7 <- 0.3",
                "8 <- 3.2",
                "9 <- 1.5"
            ]
        },
        "Step 4": {
            "steps": [
                "1 * 3 = 3 (left: 3 5 9) || 3 * 5 = 15 (left: 15 9) || 15 - 9 = 6 (left: 6)",
                "1 * 3 = 3 (left: 3 5 9) || 9 - 5 = 4 (left: 3 4)",
                "1 * 3 = 3 (left: 3 5 9) || 6 - 4 = 2 (left: 2 10",
                "1 * 3 = 3 (left: 3 5 9) || 3 * 5 = 15 (left: 15 9) || 9 + 15 = 24 (left: 24)",
                "1 * 3 = 3 (left: 3 5 9) || 9 - 5 = 4 (left: 4 9) || 9 / 4 = 2.25 (left: 2.25)",
                "1 * 3 = 3 (left: 3 5 9) || 9 - 5 = 4 (left: 4 9) || 3 + 6 = 9 (left: 9 10)",
                "9 - 5 = 4 (left: 1 3 4) || 1 * 3 = 3 (left: 3 4) || 4 - 3 = 1 (left: 1)",
                "9 - 5 = 4 (left: 1 3 4) || 4 - 1 = 3 (left: 3 4)",
                "1 * 3 = 3 (left: 3 5 9) || 9 - 5 = 4 (left: 3 4) || 4 - 3 = 1 (left: 1)",
                "1 * 3 = 3 (left: 3 5 9) || 3 * 5 = 15 (left: 15 9)"
            ],
            "Evaluation": [
                0.003,
                22.0,
                3.0,
                60.0,
                0.002,
                0.003,
                0.003,
                22.0,
                0.002,
                20.002
            ],
            "Resampling": [
                "0 <- 3.9",
                "1 <- 1.3",
                "2 <- 4.1",
                "3 <- 4.3",
                "4 <- 2.9",
                "5 <- 3.9",
                "6 <- 4.1",
                "7 <- 4.1",
                "8 <- 4.3",
                "9 <- 3.8"
            ]
        },
        "Step 5": {
            "steps": [
                "1 * 3 = 3 (left: 3 5 9) || 3 * 5 = 15 (left: 15 9) || 15 - 9 = 6 (left: 6)",
                "9 - 5 = 4 (left: 1 3 4) || 1 * 3 = 3 (left: 3 4) || 4 - 3 = 1 (left: 1)",
                "1 * 3 = 3 (left: 3 5 9) || 9 - 5 = 4 (left: 3 4) || 5 * 10 = 50 (left: 50)",
                "1 * 3 = 3 (left: 3 5 9) || 3 * 5 = 15 (left: 15 9) || 9 + 15 = 24 (left: 24) || Answer: (1 * 3) * (5 + 9) = 24",
                "1 * 3 = 3 (left: 3 5 9) || 9 - 5 = 4 (left: 4 9) || 10 + 5 = 15 (left: 15 3)",
                "1 * 3 = 3 (left: 3 5 9) || 3 * 5 = 15 (left: 15 9) || 9 * 15 = 135 (",
                "1 * 3 = 3 (left: 3 5 9) || 9 - 5 = 4 (left: 3 4) || 4 - 3 = 1 (left: 1)",
                "1 * 3 = 3 (left: 3 5 9) || 9 - 5 = 4 (left: 3 4) || 4 - 3 = 1 (left: 1)",
                "1 * 3 = 3 (left: 3 5 9) || 3 * 5 = 15 (left: 15 9) || 9 + 15 = 24 (left: 24) || Answer: (1 * 3) * (5 + 9) = 24",
                "5 + 9 = 14 (left: 1 3 14) || 14 / 3 = 4.66666666667 (left: 1 4.66666666667)"
            ],
            "Evaluation": [
                0.002,
                0.002,
                0.002,
                0.003,
                0.003,
                0.003,
                0.003,
                1.001,
                1.0,
                1.002
            ],
            "Resampling": [
                "0 <- 4.7",
                "1 <- 4.9",
                "2 <- 2.9",
                "3 <- 3.8",
                "4 <- 4.7",
                "5 <- 3.9",
                "6 <- 2.9",
                "7 <- 3.9",
                "8 <- 4.3",
                "9 <- 4.3"
            ]
        },
        "Step 6": {
            "steps": [
                "9 - 5 = 4 (left: 1 3 4) || 4 - 1 = 3 (left: 3 4) || 4 / 3 = 1.33 (left: 1.33)",
                "1 * 3 = 3 (left: 3 5 9) || 3 * 5 = 15 (left: 15 9) || 15 / 9 = 1.67 (left: 1.67)",
                "1 * 3 = 3 (left: 3 5 9) || 9 - 5 = 4 (left: 4 9) || 3 * 5 = 15 (",
                "5 + 9 = 14 (left: 1 3 14) || 3 * 1 = 3 (left: 3 14)",
                "9 - 5 = 4 (left: 1 3 4) || 4 - 1 = 3 (left: 3 4) || 4 - 3 = 1 (left: 1)",
                "1 * 3 = 3 (left: 3 5 9) || 3 * 5 = 15 (left: 15 9) || 15 / 9 = 1.67 (left: 1.67)",
                "1 * 3 = 3 (left: 3 5 9) || 9 - 5 = 4 (left: 4 9) || 4 * 9 = 36 (left: 9 36)",
                "1 * 3 = 3 (left: 3 5 9) || 3 * 5 = 15 (left: 15 9) || 9 - 15 = -6 (left: -6)",
                "1 * 3 = 3 (left: 3 5 9) || 3 * 5 = 15 (left: 15 9) || 9 + 15 = 24 (left: 24) || Answer: (1 * 3) * (5 + 9) = 24",
                "1 * 3 = 3 (left: 3 5 9) || 3 * 5 = 15 (left: 15 9) || 9 + 15 = 24 (left: 24) || Answer: (1 * 3) * (5 + 9) = 24"
            ],
            "Evaluation": [
                0.003,
                0.001,
                0.003,
                0.003,
                0.003,
                0.003,
                20.002,
                0.0,
                41.0,
                21.001
            ],
            "Resampling": [
                "0 <- 3.8",
                "1 <- 4.7",
                "2 <- 4.9",
                "3 <- 6.9",
                "4 <- 5.8",
                "5 <- 4.3",
                "6 <- 4.9",
                "7 <- 1.5",
                "8 <- 6.9",
                "9 <- 6.6"
            ]
        },
        "Step 7": {
            "steps": [
                "5 + 9 = 14 (left: 1 3 14) || 3 * 1 = 3 (left: 3 14)",
                "9 - 5 = 4 (left: 1 3 4) || 4 - 1 = 3 (left: 3 4) || 4 - 3 = 1 (left: 1)",
                "1 * 3 = 3 (left: 3 5 9) || 3 * 5 = 15 (left: 15 9) || 15 / 9 = 1.67 (left: 1.67)",
                "1 * 3 = 3 (left: 3 5 9) || 9 - 5 = 4 (left: 3 4) || Input: 5 5",
                "9 - 5 = 4 (left: 1 3 4) || 3 * 1 = 3 (left: 3 4)",
                "1 * 3 = 3 (left: 3 5 9) || 3 * 5 = 15 (left: 15 9) || 9 + 15 = 24 (left: 24) || Answer: (1 * 3) * (5 + 9) = 24",
                "1 * 3 = 3 (left: 3 5 9) || 3 * 5 = 15 (left: 15 9) || 15 * 9 = 135 (left: 135)",
                "1 * 3 = 3 (left: 3 5 9) || 9 / 3 = 3 (left: 5 3)",
                "1 * 3 = 3 (left: 3 5 9) || 9 - 5 = 4 (left: 3 4) || 4 / 3 = 1.33 (left: 1.33)",
                "1 * 3 = 3 (left: 3 5 9) || 9 - 5 = 4 (left: 4 9) || 4 * 9 = 36 (left: 9 36) || 36 / 9 = 4 (left: 4)"
            ],
            "Evaluation": [
                0.003,
                0.002,
                0.003,
                0.003,
                2.001,
                0.003,
                1.002,
                0.003,
                21.001,
                3.0
            ],
            "Resampling": [
                "0 <- 6.8",
                "1 <- 7.8",
                "2 <- 3.2",
                "3 <- 6.9",
                "4 <- 6.6",
                "5 <- 7.8",
                "6 <- 7.9",
                "7 <- 1.3",
                "8 <- 4.9",
                "9 <- 3.9"
            ]
        },
        "Step 8": {
            "steps": [
                "9 - 5 = 4 (left: 1 3 4) || 1 * 3 = 3 (left: 3 4) || 3 * 4 = 12 (left: 12)",
                "9 - 5 = 4 (left: 1 3 4) || 1 * 3 = 3 (left: 3 4) || 4 / 3 = 1.33 (left: 1.33)",
                "1 * 3 = 3 (left: 3 5 9) || 9 - 5 = 4 (left: 3 4) || 4 / 3 = 1.33 (left: 1.33)",
                "1 * 3 = 3 (left: 3 5 9) || 9 - 5 = 4 (left: 3 4) || 3 * 4 = 12 (left: 12)",
                "1 * 3 = 3 (left: 3 5 9) || 9 - 5 = 4 (left: 4 9) || 4 * 9 = 36 (left: 9 36) || 36 - 9 = 27 (left: 27)",
                "9 - 5 = 4 (left: 1 3 4) || 1 * 3 = 3 (left: 3 4) || 3 - 4 = -1 (left: -1)",
                "1 * 3 = 3 (left: 3 5 9) || 9 - 5 = 4 (left: 3 4) || 3 - 4 = -1 (left: -1)",
                "9 - 5 = 4 (left: 1 3 4) || 1 * 3 = 3 (left: 3 4) || 4 - 3 = 1 (left: 1)",
                "1 * 3 = 3 (left: 3 5 9) || 3 * 5 = 15 (left: 15 9) || 15 * 9 = 135 (left: 135)",
                "1 * 3 = 3 (left: 3 5 9) || 3 * 5 = 15 (left: 15 9) || 15 / 9 = 1.6667 (left: 1.6667)"
            ],
            "Evaluation": [
                0.002,
                0.003,
                0.003,
                0.003,
                0.0,
                0.0,
                0.003,
                0.003,
                0.003,
                21.0
            ],
            "Resampling": [
                "0 <- 8.9",
                "1 <- 3.9",
                "2 <- 6.8",
                "3 <- 7.8",
                "4 <- 6.9",
                "5 <- 3.9",
                "6 <- 7.8",
                "7 <- 8.9",
                "8 <- 7.9",
                "9 <- 4.3"
            ]
        },
        "Step 9": {
            "steps": [
                "9 - 5 = 4 (left: 1 3 4) || 3 * 1 = 3 (left: 3 4) || 3 / 4 = 0.75 (left: 0.75)",
                "1 * 3 = 3 (left: 3 5 9) || 3 * 5 = 15 (left: 15 9) || 15 / 9 = 1.67 (left: 1.67)",
                "9 - 5 = 4 (left: 1 3 4) || 1 * 3 = 3 (left: 3 4) || 3 * 4 = 12 (left: 12)",
                "9 - 5 = 4 (left: 1 3 4) || 1 * 3 = 3 (left: 3 4) || 4 - 3 = 1 (left: 1) ",
                "1 * 3 = 3 (left: 3 5 9) || 9 - 5 = 4 (left: 3 4) || 5 + 10 = 15 (left: 15)",
                "1 * 3 = 3 (left: 3 5 9) || 3 * 5 = 15 (left: 15 9) || 15 / 9 = 1.67 (left: 1.67)",
                "9 - 5 = 4 (left: 1 3 4) || 1 * 3 = 3 (left: 3 4) || Input: 5 10",
                "9 - 5 = 4 (left: 1 3 4) || 3 * 1 = 3 (left: 3 4) || 4 / 3 = 1.33 (left: 1.33)",
                "1 * 3 = 3 (left: 3 5 9) || 9 - 5 = 4 (left: 3 4) || 4 / 3 = 1.33 (left: 1.33)",
                "1 * 3 = 3 (left: 3 5 9) || 3 * 5 = 15 (left: 15 9) || 9 + 15 = 24 (left: 24) || Answer: (1 * 3) * (5 + 9) = 24"
            ]
        },
        "Input": "1 3 5 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "909": {
        "puzzle": "3 3 7 12",
        "Step 0": {
            "steps": [
                "7 - 3 = 4 (left: 3 4 12)",
                "3 * 3 = 9 (left: 9 7 12)",
                "3 * 3 = 9 (left: 9 7 12)",
                "12 - 7 = 5 (left: 3 5 12)",
                "7 - 3 = 4 (left: 3 4 12)",
                "12 - 7 = 5 (left: 3 5 12)",
                "12 - 3 = 9 (left: 3 7 9)",
                "7 - 3 = 4 (left: 4 3 12)",
                "3 * 7 = 21 (left: 21 12)",
                "7 - 3 = 4 (left: 3 4 12)"
            ],
            "Evaluation": [
                22.0,
                2.001,
                3.0,
                2.001,
                20.002,
                2.001,
                2.001,
                60.0,
                0.003,
                41.0
            ],
            "Resampling": [
                "0 <- 0.4",
                "1 <- 0.7",
                "2 <- 0.9",
                "3 <- 0.7",
                "4 <- 0.9",
                "5 <- 0.7",
                "6 <- 0.9",
                "7 <- 0.9",
                "8 <- 0.7",
                "9 <- 0.7"
            ]
        },
        "Step 1": {
            "steps": [
                "7 - 3 = 4 (left: 3 4 12) || 4 * 3 = 12 (left: 12 12)",
                "7 - 3 = 4 (left: 4 3 12) || 3 * 4 = 12 (left: 12 12)",
                "7 - 3 = 4 (left: 3 4 12) || 12 / 4 = 3 (left: 3 12)",
                "7 - 3 = 4 (left: 4 3 12) || 4 / 3 = 1.333 (left: 1.333 12)",
                "7 - 3 = 4 (left: 3 4 12) || 12 - 4 = 8 (left: 3 8)",
                "7 - 3 = 4 (left: 4 3 12) || ",
                "7 - 3 = 4 (left: 3 4 12) || 12 / 3 = 4 (left: 4 12)",
                "7 - 3 = 4 (left: 3 4 12) || 12 / 3 = 4 (left: 4 12)",
                "7 - 3 = 4 (left: 4 3 12) || 4 / 3 = 1.33 (left: 1.33 12)",
                "7 - 3 = 4 (left: 4 3 12) || 3 + 12 = 15 (left: 4 15)"
            ],
            "Evaluation": [
                20.002,
                60.0,
                20.002,
                2.001,
                60.0,
                0.003,
                0.003,
                0.003,
                2.001,
                0.001
            ],
            "Resampling": [
                "0 <- 1.2",
                "1 <- 1.4",
                "2 <- 0.7",
                "3 <- 1.1",
                "4 <- 1.0",
                "5 <- 1.4",
                "6 <- 1.1",
                "7 <- 1.2",
                "8 <- 0.9",
                "9 <- 1.1"
            ]
        },
        "Step 2": {
            "steps": [
                "7 - 3 = 4 (left: 3 4 12) || 12 / 4 = 3 (left: 3 12) || 12 - 3 = 9 (left: 9 12)",
                "7 - 3 = 4 (left: 3 4 12) || 12 - 4 = 8 (left: 3 8) || 3 * 8 = 24 (left: 24)",
                "7 - 3 = 4 (left: 4 3 12) || 3 + 12 = 15 (left: 4 15)",
                "7 - 3 = 4 (left: 4 3 12) || 3 * 4 = 12 (left: 12 12) || 12 + 12 = 24",
                "7 - 3 = 4 (left: 3 4 12) || 4 * 3 = 12 (left: 12 12) || 12 - 12 = 0 (left: 0)",
                "7 - 3 = 4 (left: 3 4 12) || 12 - 4 = 8 (left: 3 8) || 8 - 3 = 5 (left: 5)",
                "7 - 3 = 4 (left: 4 3 12) || 3 * 4 = 12 (left: 12 12) || 12 * 12 = 144 (left: 144)",
                "7 - 3 = 4 (left: 3 4 12) || 12 / 4 = 3 (left: 3 12) || 3 + 12 = 15 (left: 12)",
                "7 - 3 = 4 (left: 3 4 12) || 12 / 3 = 4 (left: 4 12)",
                "7 - 3 = 4 (left: 4 3 12) || 3 * 4 = 12 (left: 12 12) || 12 - 12 = 0 (left: 0)"
            ],
            "Evaluation": [
                0.003,
                60.0,
                1.001,
                0.003,
                20.002,
                0.003,
                0.003,
                0.003,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- 1.4",
                "1 <- 0.7",
                "2 <- 2.1",
                "3 <- 2.1",
                "4 <- 1.0",
                "5 <- 0.7",
                "6 <- 1.4",
                "7 <- 2.1",
                "8 <- 0.7",
                "9 <- 2.1"
            ]
        },
        "Step 3": {
            "steps": [
                "7 - 3 = 4 (left: 3 4 12) || 12 - 4 = 8 (left: 3 8) || 8 - 3 = 5 (left: 5)",
                "7 - 3 = 4 (left: 4 3 12) || 3 * 12 = 36 (left: 4 36)",
                "7 - 3 = 4 (left: 3 4 12) || 12 - 4 = 8 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: 3 * (7 - (12 - 4)) = 24",
                "7 - 3 = 4 (left: 3 4 12) || 12 - 4 = 8 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: 3 * (7 - (12 - 4)) = 24",
                "7 - 3 = 4 (left: 3 4 12) || 4 * 3 = 12 (left: 12 12) || 12 - 12 = 0 (left: 0)",
                "7 - 3 = 4 (left: 4 3 12) || ",
                "7 - 3 = 4 (left: 3 4 12) || 12 - 4 = 8 (left: 3 8) || Input: 4 5 10",
                "7 - 3 = 4 (left: 3 4 12) || 12 - 4 = 8 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: 3 * (7 - (12 - 4)) = 24",
                "7 - 3 = 4 (left: 4 3 12) || 3 + 12 = 15 (left: 4 15)",
                "7 - 3 = 4 (left: 3 4 12) || 12 - 4 = 8 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: 3 * (7 - (12 - 4)) = 24"
            ],
            "Evaluation": [
                0.002,
                40.001,
                0.002,
                0.003,
                0.003,
                1.002,
                0.003,
                60.0,
                22.0,
                60.0
            ],
            "Resampling": [
                "0 <- 1.1",
                "1 <- 3.9",
                "2 <- 3.7",
                "3 <- 3.9",
                "4 <- 3.8",
                "5 <- 0.2",
                "6 <- 3.7",
                "7 <- 2.4",
                "8 <- 3.9",
                "9 <- 1.1"
            ]
        },
        "Step 4": {
            "steps": [
                "7 - 3 = 4 (left: 4 3 12) || 3 * 4 = 12 (left: 12 12) || 12 + 12 = 24",
                "7 - 3 = 4 (left: 3 4 12) || 12 - 4 = 8 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: 3 * (7 - (12 - 4)) = 24",
                "7 - 3 = 4 (left: 4 3 12) || 3 * 4 = 12 (left: 12 12) || 12 + 12 = 24",
                "7 - 3 = 4 (left: 3 4 12) || 12 - 4 = 8 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: 3 * (7 - (12 - 4)) = 24",
                "7 - 3 = 4 (left: 4 3 12) || 3 + 12 = 15 (left: 4 15)",
                "3 * 3 = 9 (left: 9 7 12) || Input:",
                "7 - 3 = 4 (left: 4 3 12) || 3 * 4 = 12 (left: 12 12) || 12 / 12 = 1 (left: 1)",
                "7 - 3 = 4 (left: 3 4 12) || 4 * 3 = 12 (left: 12 12) || 12 - 12 = 0 (left: 0) || There are no possible next steps as there are no numbers given in the input.",
                "7 - 3 = 4 (left: 3 4 12) || 12 - 4 = 8 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: 3 * (7 - (12 - 4)) = 24",
                "7 - 3 = 4 (left: 4 3 12) || 3 * 4 = 12 (left: 12 12) || 12 - 12 = 0 (left: 0)"
            ],
            "Evaluation": [
                0.003,
                0.003,
                0.003,
                20.002,
                0.002,
                0.003,
                0.003,
                41.0,
                0.003,
                20.002
            ],
            "Resampling": [
                "0 <- 4.9",
                "1 <- 3.1",
                "2 <- 3.8",
                "3 <- 4.3",
                "4 <- 3.7",
                "5 <- 1.4",
                "6 <- 1.1",
                "7 <- 1.1",
                "8 <- 3.9",
                "9 <- 4.7"
            ]
        },
        "Step 5": {
            "steps": [
                "7 - 3 = 4 (left: 4 3 12) || 3 * 4 = 12 (left: 12 12) || 12 + 12 = 24",
                "7 - 3 = 4 (left: 4 3 12) || 3 * 12 = 36 (left: 4 36) || 36 - 4 = 32 (left: 32)",
                "7 - 3 = 4 (left: 4 3 12) || 12 / 4 = 3 (left: 3 12)",
                "3 * 3 = 9 (left: 9 7 12) || Input: || Please provide a list of numbers to find possible next steps.",
                "7 - 3 = 4 (left: 4 3 12) || 3 * 4 = 12 (left: 12 12) || 12 - 12 = 0 (left: 0)",
                "7 - 3 = 4 (left: 3 4 12) || 12 - 4 = 8 (left: 3 8) || 8 / 3 = 2.67 (left: 2.67)",
                "7 - 3 = 4 (left: 4 3 12) || 3 * 4 = 12 (left: 12 12) || 12 / 12 = 1 (left: 1)",
                "7 - 3 = 4 (left: 4 3 12) || 3 * 4 = 12 (left: 12 12) || 12 / 12 = 1 (left: 1)",
                "7 - 3 = 4 (left: 3 4 12) || 12 - 4 = 8 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: 3 * (7 - (12 - 4)) = 24",
                "7 - 3 = 4 (left: 3 4 12) || 12 - 4 = 8 (left: 3 8)"
            ],
            "Evaluation": [
                0.003,
                0.003,
                1.002,
                0.0,
                0.003,
                0.003,
                0.003,
                0.003,
                60.0,
                40.001
            ],
            "Resampling": [
                "0 <- 1.1",
                "1 <- 4.7",
                "2 <- 3.9",
                "3 <- 5.8",
                "4 <- 3.9",
                "5 <- 3.9",
                "6 <- 5.9",
                "7 <- 3.9",
                "8 <- 5.9",
                "9 <- 5.8"
            ]
        },
        "Step 6": {
            "steps": [
                "7 - 3 = 4 (left: 4 3 12) || 3 * 4 = 12 (left: 12 12) || 12 - 12 = 0 (left: 0)",
                "7 - 3 = 4 (left: 3 4 12) || 12 - 3 = 9 (left: 4 9)",
                "7 - 3 = 4 (left: 3 4 12) || 12 - 4 = 8 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: 3 * (7 - (12 - 4)) = 24",
                "7 - 3 = 4 (left: 3 4 12) || 12 - 4 = 8 (left: 3 8) || 3 * 8 = 24 (left: 24)",
                "7 - 3 = 4 (left: 3 4 12) || 12 - 4 = 8 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: (7 - 3) * (3 * 8) = 24",
                "7 - 3 = 4 (left: 3 4 12) || 12 - 4 = 8 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: 3 * (7 - (12 - 4)) = 24",
                "7 - 3 = 4 (left: 4 3 12) || 3 * 4 = 12 (left: 12 12) || 12 / 12 = 1 (left: 1)",
                "7 - 3 = 4 (left: 3 4 12) || 12 - 4 = 8 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: (3 * (7 - 3)) * 8 = 24",
                "7 - 3 = 4 (left: 4 3 12) || 3 * 4 = 12 (left: 12 12) || 12 / 12 = 1 (left: 1)",
                "7 - 3 = 4 (left: 3 4 12) || 12 - 4 = 8 (left: 3 8) || 8 / 3 = 2.6667 (left: 2.6667)"
            ],
            "Evaluation": [
                0.002,
                20.0,
                60.0,
                0.002,
                0.003,
                0.003,
                60.0,
                40.001,
                41.0,
                20.002
            ],
            "Resampling": [
                "0 <- 6.7",
                "1 <- 3.7",
                "2 <- 6.7",
                "3 <- 5.8",
                "4 <- 6.2",
                "5 <- 3.9",
                "6 <- 6.7",
                "7 <- 6.8",
                "8 <- 6.8",
                "9 <- 5.8"
            ]
        },
        "Step 7": {
            "steps": [
                "7 - 3 = 4 (left: 4 3 12) || 3 * 4 = 12 (left: 12 12) || 12 + 12 = 24 (left: 24)",
                "7 - 3 = 4 (left: 4 3 12) || 3 * 4 = 12 (left: 12 12) || 12 * 12 = 144 (left: 144)",
                "7 - 3 = 4 (left: 4 3 12) || 3 * 4 = 12 (left: 12 12) || 12 + 12 = 24",
                "7 - 3 = 4 (left: 3 4 12) || 12 - 4 = 8 (left: 3 8) || 3 * 8 = 24 (left: 24)",
                "7 - 3 = 4 (left: 3 4 12) || 12 - 4 = 8 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: (7 - 3) * (12 - 4) = 24",
                "7 - 3 = 4 (left: 3 4 12) || 12 - 4 = 8 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: 3 * (7 - (12 - 4)) = 24",
                "7 - 3 = 4 (left: 4 3 12) || 3 * 4 = 12 (left: 12 12) || 12 / 12 = 1 (left: 1)",
                "7 - 3 = 4 (left: 3 4 12) || 12 / 3 = 4 (left: 4 12)",
                "7 - 3 = 4 (left: 3 4 12) || 12 / 3 = 4 (left: 4 12)",
                "7 - 3 = 4 (left: 3 4 12) || 12 - 4 = 8 (left: 3 8) || 8 / 3 = 2.66666666667 (left: 2.66666666667)"
            ],
            "Evaluation": [
                60.0,
                0.003,
                0.003,
                60.0,
                0.003,
                0.003,
                0.003,
                0.001,
                60.0,
                60.0
            ],
            "Resampling": [
                "0 <- 7.8",
                "1 <- 7.8",
                "2 <- 7.9",
                "3 <- 7.3",
                "4 <- 7.0",
                "5 <- 6.6",
                "6 <- 5.8",
                "7 <- 7.9",
                "8 <- 7.0",
                "9 <- 1.4"
            ]
        },
        "Step 8": {
            "steps": [
                "7 - 3 = 4 (left: 3 4 12) || 12 - 4 = 8 (left: 3 8) || 8 / 3 = 2.67 (left: 2.67)",
                "7 - 3 = 4 (left: 3 4 12) || 12 - 4 = 8 (left: 3 8) || 10 / 5 = 2 (left: 2)",
                "7 - 3 = 4 (left: 3 4 12) || 12 / 3 = 4 (left: 4 12)",
                "7 - 3 = 4 (left: 3 4 12) || 12 - 4 = 8 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: 3 * (7 - (12 - 4)) = 24",
                "7 - 3 = 4 (left: 4 3 12) || 3 * 4 = 12 (left: 12 12) || 12 + 12 = 24 (left: 24) || Answer: (7 - 3) * (3 * 4) = 24",
                "7 - 3 = 4 (left: 3 4 12) || 12 / 4 = 3 (left:",
                "7 - 3 = 4 (left: 3 4 12) || 12 - 4 = 8 (left: 3 8) || 3 * 8 = 24 (left: 24)",
                "7 - 3 = 4 (left: 3 4 12) || 12 - 3 = 9 (left: 4 9)",
                "7 - 3 = 4 (left: 4 3 12) || 3 * 4 = 12 (left: 12 12) || 12 + 12 = 24 (left: 24) || Answer: (7 - 3) * (3 * 4) = 24",
                "7 - 3 = 4 (left: 3 4 12) || 12 - 4 = 8 (left: 3 8) || 4 + 6 = 10 (left: 10 9)"
            ],
            "Evaluation": [
                0.003,
                0.003,
                0.003,
                20.002,
                60.0,
                60.0,
                0.003,
                60.0,
                41.0,
                60.0
            ],
            "Resampling": [
                "0 <- 7.9",
                "1 <- 7.3",
                "2 <- 4.7",
                "3 <- 8.8",
                "4 <- 6.7",
                "5 <- 8.7",
                "6 <- 3.8",
                "7 <- 7.0",
                "8 <- 8.4",
                "9 <- 7.9"
            ]
        },
        "Step 9": {
            "steps": [
                "7 - 3 = 4 (left: 3 4 12) || 4 * 3 = 12 (left: 12 12)",
                "7 - 3 = 4 (left: 3 4 12) || 12 - 4 = 8 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: 3 * (7 - (12 - 4)) = 24",
                "7 - 3 = 4 (left: 3 4 12) || 12 / 4 = 3 (left: 3 12)",
                "7 - 3 = 4 (left: 3 4 12) || 12 / 3 = 4 (left: 4 12)",
                "7 - 3 = 4 (left: 4 3 12) || 3 * 4 = 12 (left: 12 12) || 12 - 12 = 0 (left: 0)",
                "7 - 3 = 4 (left: 3 4 12) || 12 - 4 = 8 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: 3 * (7 - (12 - 4)) = 24",
                "7 - 3 = 4 (left: 4 3 12) || 4 / 3 = 1.3333333333333333 (left: 1.3333333333333333 12)",
                "7 - 3 = 4 (left: 4 3 12) || 3 * 4 = 12 (left: 12 12) || 12 + 12 = 24 (left: 24) || Answer: (7 - 3) * (3 * 4) = 24",
                "7 - 3 = 4 (left: 3 4 12) || 12 - 4 = 8 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: 3 * (7 - (12 - 4)) = 24",
                "7 - 3 = 4 (left: 3 4 12) || 12 - 4 = 8 (left: 3 8)"
            ]
        },
        "Input": "3 3 7 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    }
}